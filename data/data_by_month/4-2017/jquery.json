[{"title": "string variable within script tag transformed closing tag", "body": "description consider simple string please note string consists three node script looking transform using parsehtml expected get three node however look content second node script get following content notice gets transformed however anything within", "num": "3648", "d": "4/2017"}, {"title": "inconsistent unwrapping promise resolution", "body": "description way chained promise resolved jquery seems changed compared jquery appear related async behaviour change well documented yet able fully pinpoint problem end result jquery consistently resolving promise resolution value instead resolution value promise decide hide promise caller instead waits directly undesirable promise chains single continuous actions handler different actions mandatory expected wikimedia oojs ui library interface confirmation dialogs works like returned promise resolves boolean value truefalse depending button user pressed internally method uses promise create dialog wait opening animation wait closingcleanup actions source code promises return primitive value object methods called yield another promise however case promise actually resolved another promise resolution indicates opening done value given promise resolved dialog closed latter malfunctioning jquery appears internally unwrapping promise layer thus causing mismatch actual expected value instead given thenable opened given final value promise thus causing exception whenever called jquerydeferred exception openedthen function downstream bug report link test case minimal test case compare jquery latter failing problems highlighted red sure whether meant supported past first might seem sketchy indeed willing workaround long make sure change welldocumented suggested alternative way works jquery jquery", "num": "3646", "d": "4/2017"}, {"title": "jquery serialize bug", "body": "finally solved problem forms ids sending via jquery forms order form html error second form form second form close tag weird jqueryserialize behave way nothing forms jquery code jquery send nothing forms serialized posted", "num": "3644", "d": "4/2017"}, {"title": "math tag clone tag name math instead math", "body": "description div math elements cloned math elements cloned tagname math instead math making clonegetelementsbytagname math returning null link test case", "num": "3642", "d": "4/2017"}, {"title": "regression task promisesaplustests failing", "body": "jenkins consistently failing task test passing fine travis ci also node last passed suspected commit core update isfunction handle unusual input", "num": "3640", "d": "4/2017"}, {"title": "shortcut function input form event", "body": "would helpful shortcut input function input form event already exists form events e g change event", "num": "3639", "d": "4/2017"}, {"title": "upgraded set defaultdebugmode false combres eval function working properly", "body": "using combres bundlingminification js css files set defaultdebugenabledfalse combres jquery eval function working expected defaultdebugenabledtrue eval expressionholder settext selfgetjson working fine defaultdebugenabledfalse eval expressionholder settext selfgetjson working code breaks settext undeined expression breaks eval var control eval expressionholder controlsettext selfgetjson working fine", "num": "3636", "d": "4/2017"}, {"title": "video stops playing detach gt appendto chrome edge continues firefox", "body": "description use detach function move video one dom div another video currently playing tested firefox video continues playing detach gt appendto new element tested chrome edge video stops playing detach gt appendto new element would expect correct behavior reduced test case thank taking look", "num": "3635", "d": "4/2017"}, {"title": "basic authentication work", "body": "hello together already created issue regarding topic days member mgol gave advice error occurs cors reading cors spending much time issue still solved trying consume json service running iis server everything works activate baisc authentication iis new web development please explain noobs request error message would exclude line xhrsetrequestheader prompt appears entering user password everything works", "num": "3634", "d": "4/2017"}, {"title": "bad date val returns empty string type attribute change datetimelocal text get edge", "body": "description bad date time current instead value value attribute shown val returns empty string type attribute change datetimelocal text get edge firefox opera ms ie ok edge type datetimelocal type date everything edge ok also change get first everything edge ok also html jquery failing code affected versions jquery version edge version microsoft edge microsoft edgehtml link test case screens test case example opera code edge", "num": "3633", "d": "4/2017"}, {"title": "ca nt use async functions callbacks", "body": "according documentation takes according documentation since seems caused implementation probably related", "num": "3631", "d": "4/2017"}, {"title": "asdfasdf", "body": "description link test case", "num": "3630", "d": "4/2017"}, {"title": "deprecate jqueryiswindow", "body": "created internal use nt needed", "num": "3629", "d": "4/2017"}, {"title": "ajax method seemly bug", "body": "description use chrome debugger test first alert success alert fail link test case", "num": "3628", "d": "4/2017"}, {"title": "ajax calls error handler error message status code feedback", "body": "using jquery compared ajax code latest pretty much thing would imagine problem still exists latest version using seamonkey firefox customers may using firefox ie chrome name also tested problems ie android internet safari clone chrome firefox luck end though customers get ajax error comes least error messages whatsoever far able reproduce wondering whether following snippet could culprit see transport object actually send request fails low level javascript implementation xhr throws could throwing error object see call object may better use also access function may format message according browser use including even information second parameter expected string object note since currently reproduce problem systems know whether required often object function automatically called something happens function one affected browsers chrome iphone although totally sure browser culprit cases things including ajax requests work providing modified version clients using see happens maybe know better howwhat would happening situation", "num": "3627", "d": "4/2017"}, {"title": "ajax basic authentication work curl works", "body": "hello together trying make get ajax request baisc authentication works try curl chrome dhc addon works well working issue several days would hero could help ajax request following error message appear xmlhttprequest load response preflight invalid http status code curl request dhc chrome addon works well curl x get h authorization basic xxxxxxxxxxxxxxxxxx got ideas", "num": "3626", "d": "4/2017"}, {"title": "sizzle remove test meant nonsupported browsers ie lt opera lt", "body": "description sizzle attempts match simplest cases attempting complex matching ids uses getelementbyid tests matched element actually given id avoid cases getelementbyid matches name instead behaviour fixed opera browsers used present issue design references ie lt opera see opera dev g\u00e9rard talbot comment sending merge request minutes change", "num": "3624", "d": "4/2017"}, {"title": "unclear licensing", "body": "description seems clear explanation licensing model wrt commercial applications licensetxt file repository clear however different license presented url license link nuget package page redirect understand correctly licensetxt file repository alternative license mentioned first paragraph even yes sure file applies distribution nuget distribution nuget namely main source file header points back redirects seems license file applicable project case ie nuget distribution case confusion stems fact relation nuget distribution repository name perhaps would better nuget license link pointed licensetxt file case source file header also mentioned header states released mit license however seems licensetxt mit license strictly speaking perhaps overcomplicating things lawyer presume developers could please make usage conditions clear explanations related licensing context contributing jquery clear usage licensing explanations seem lacking context", "num": "3623", "d": "4/2017"}, {"title": "javascript runtime error object nt support property method indexof jquery", "body": "migrated web application jquery version running application getting error javascript runtime error object nt support property method indexof tested internet chrome firefox problem tried already stack overflow forum already", "num": "3622", "d": "4/2017"}, {"title": "javascript runtime error object nt support property method indexof jquery", "body": "migrated web application jquery version running application getting error javascript runtime error object nt support property method indexof", "num": "3621", "d": "4/2017"}, {"title": "support arrow function", "body": "description example transform function img mouseenter function e css opacity mouseout function e css opacity function img odd mouseenter e gt css opacity mouseout e gt css opacity link test case", "num": "3620", "d": "4/2017"}, {"title": "row selection list working properly upgrade version", "body": "actually happens upgrading jquery version row selection list working properly list ul selection item happening first time next time able select item please look issue expect happen want select row behave acc select new row list browsers affected", "num": "3618", "d": "4/2017"}, {"title": "chrome making data work well", "body": "problem reported using someselector data key value store data later retrieve someselector data key might return undefined", "num": "3616", "d": "4/2017"}, {"title": "get data key data json ignores dynamic content", "body": "dynamically changing data attribute json string new calls data name fetch updated data object please pardon ignorance expected behavior example js var test test testattr datatest jsonstringify testdata test testattr datatest jsonstringify alert testdata test fiddle", "num": "3615", "d": "4/2017"}, {"title": "getting sometimes non zero values width height hidden elements issues", "body": "noticed jquery gives height width hidden elements sometimes hidden elements expecting get zero height width element instead parent get correct value however parent hidden get zero write stuff like jquery changes display block process reverts also causing issues android chrome", "num": "3614", "d": "4/2017"}, {"title": "jquerytoggleclass treat null switch falsey", "body": "description switch value treated works expected switch treated falsey actual switch treated", "num": "3613", "d": "4/2017"}, {"title": "offset never return readonly properties", "body": "calling consistently return plain object naturally mutable properties jquery first started sometimes return native objects directly cases consistently case though actually broke internal jquery assumptions well evidenced per dmethvin seems like good idea consistently return plain object also caused downstream issues wikimedia locally attempting update jquery various code paths throughout mediawiki visualeditor oojsui started throwing errors see also analysis downstream report appears fixed jquery however would good add regression tests avoid future", "num": "3612", "d": "4/2017"}, {"title": "contains breaking change behavior", "body": "please pardon lengthy issue report think split multiple separate issues please let know attempt sure observations relate may related fixes mentioned release notes sure nt think related breaking change since worked previous versions problem firefox amp return values instead values inline elements tested esr linux well windows working broken broken latest duplicate problem chrome returns inline elements working broken working latest problem gives differentwrong result chrome linux appears related padding used calculation well setting html boxsizing borderbox boxsizing inherit working broken broken latest background notes started problem using materialize latest jquery tab indicator suddenly started appearing wide see digging bit found appears affect chrome linux firefox esr linux common windows browsers works fine jquery assuming semver compliance happen using instead avoided problem", "num": "3611", "d": "4/2017"}, {"title": "internal api succeeding jqueryisfunction", "body": "description deprecated public api consider internal api succeeding also used internal simply moving internal amd module nt make sense current behavior considered undesirable change proposed fix use complement proposed pointed problems goes far would falsely reject functions realms eg iframes probably also hostobject functions use complement test exclude dom elements proposed sure making exception generic function appropriate expectations exceptions could emerge future solution may longterm", "num": "3610", "d": "4/2017"}, {"title": "deprecate jqueryisfunction", "body": "description everything must go jquerycamelcase jqueryisnumeric jquerynow jqueryproxy jquerytype", "num": "3609", "d": "4/2017"}, {"title": "form postasjson", "body": "request method posts html form proper json handles types etc correct atleast serializejson far belive could find functionallity build jquery dont want plugin far prioritezed area besides many attempts", "num": "3608", "d": "4/2017"}, {"title": "standardize dom node type checking", "body": "description style guide says identify dom elements boolean exactly true actually use identify dom nodes even setting aside semantics case object truthy property avoid dom node path setting data means succeed fail based rather trivial differences makes uncomfortable single dom node test applied consistently everywhere always certain characteristics real dom nodes existence number type integer positive use subset leaning towards given kind input seems unlikely change classification whatever pick style guide also need update macro would really nice seems silly inline trivial code think continue live without something like sweetjs link test case", "num": "3607", "d": "4/2017"}, {"title": "memory problem deferred", "body": "description project upgraded found memory leak method release handler amp handler closure work well native promise chrome look following link test case", "num": "3606", "d": "4/2017"}, {"title": "deprecate jquerytype", "body": "description insufficient deal everincreasing list tostringtag values cf since intended internal use anyway treat like jqueryisnumeric jqueryproxy jquerynow jquerycamelcase removing public api", "num": "3605", "d": "4/2017"}, {"title": "browser process memory continues increase creating large number dom elements", "body": "description expect happen append method usage allow browser successfully garbage collect child elements created actually happens chrome tab process memory freed memory continues going tab crashes browsers affected chrome current stable current beta current unstable also reported chromium bug process memory continues increase recycling large number dom elements link test case", "num": "3603", "d": "4/2017"}, {"title": "regression inline width returns android", "body": "description unit test broken android versions since added test case commit jquery periodic march commit jquery periodic march commits tests fix incorrect assert name krinkle dimensions fall back offsetwidthheight inline elems timmywil css retrieve inline style computed timmywil", "num": "3602", "d": "4/2017"}, {"title": "core jqueryisfunction returns false function objects custom tostringtag", "body": "description returns false function objects custom undesirable case flaw pointed link test case", "num": "3600", "d": "4/2017"}, {"body": "nt see forward slash examples could please create test case", "d": "4/2017"}, {"body": "looking afraid misinterpreting backslash behaves javascript strings nt ivoke log string console see backslashes please look help stack overflow", "d": "4/2017"}, {"body": "duplicate opted leave edge cases unresolved standard distribution amount code fix rather large custom html prefilter", "d": "4/2017"}, {"body": "thenableuwrapping required promisesa spec specifically promise resolution algorithm relevant point describes thenable unwrapping particular point mandatest full algorithm applied thenable resolution value thenable resolves another thenable another unwrapping operation happen seems purely documentation issue edited clarity", "d": "4/2017"}, {"body": "little confused message though jquerydeferred exception openedthen function object nt method thenable needs treated regular value fulfill promise get handler sure get error unless bug deferreds", "d": "4/2017"}, {"body": "mgol consider following simplified example using trigger bug although please note original test case also triggered bug without involving js enable warnings jquerydeferredexceptionhook function error stack consolewarn jquerydeferred exception errormessage errorstack stack function system var shutdown deferred thisstart function return deferred function settimeout function dresolve shutdown thisstop function reason stuff shutdownresolve reason works gt hello world gt bye reason meh var x new system xstart function shutdown consolelog hello world return shutdownthen function reason consolelog bye reason reason settimeout function xstop meh work gt hello world gt jquerydeferred exception shutdownthen function var x new system xstart function shutdown consolelog hello world return shutdownthen function reason consolelog bye reason reason settimeout function xstop meh", "d": "4/2017"}, {"body": "right thinking resolved promise method nt unwrapped", "d": "4/2017"}, {"body": "yeah seems odd happens returning nested inside another returning toplevel passing first example seems like bug", "d": "4/2017"}, {"body": "part jquery core plugin error markup made page invalid anyway", "d": "4/2017"}, {"body": "correction part core since markup nt valid behavior undefined", "d": "4/2017"}, {"body": "firefox chrome browser", "d": "4/2017"}, {"body": "ie", "d": "4/2017"}, {"body": "thanks report confirmed problem exists ie amp ie issue ie sizzle uses nt happen maybe prefer exists least ie think", "d": "4/2017"}, {"body": "ca nt reproduce locally even node npm anyone else want try", "d": "4/2017"}, {"body": "yep neither tried following travis also passed triggered job third time jenkins upgrading internal jenkins plugins seems pass never mind guess manshrugging", "d": "4/2017"}, {"body": "thank opening issue recommend using methods rather event aliases events nt aliases nt think worth maintain list possible events list would require deprecating removing aliases events may lost support supported browsers time goes makes maintaining list even less feasible", "d": "4/2017"}, {"body": "nt see jquery code samples jquery function regular javascript one", "d": "4/2017"}, {"body": "browserspecific behavior seen occur jquery manipulates page happen standard dom calls well", "d": "4/2017"}, {"body": "thank dave able test tried look source code jquery went head guess sure level expect jquery abstract browser behavior", "d": "4/2017"}, {"body": "something like plain dom", "d": "4/2017"}, {"body": "thanks guidance behaves exactly way plain js", "d": "4/2017"}, {"body": "ok need file bug browsers nt behave way want perhaps could work around problem forcing video start paying inserted something jquery behind scenes", "d": "4/2017"}, {"body": "thanks clarification yes add workaround works decently enough", "d": "4/2017"}, {"body": "bug tracker jquery reporting bug since new web development strongly suggest get know stackoverflowcom ask questions get programming help", "d": "4/2017"}, {"body": "native browser behavior surprising given historical problems internet explorer changing input types attempting change property attribute element created via html already html document result error thrown internet explorer", "d": "4/2017"}, {"body": "see everything ok ie workaround remember value change type apply value possible include jquery", "d": "4/2017"}, {"body": "nt possible us detect code changes property going add specialcase code precisely kind thing proves problematic long run changing input elements never behaved reliably", "d": "4/2017"}, {"body": "already pr", "d": "4/2017"}, {"body": "okay", "d": "4/2017"}, {"body": "closing duplicate", "d": "4/2017"}, {"body": "please ask help stackoverflow executing immediately", "d": "4/2017"}, {"body": "okay added verify theory using works expected seamonkey firefox chrome internet default webkit based browser android ie linux android mswindows cases would get error expected words function gets called automatically problem still one case still reproduce customers get error without kind text feedback", "d": "4/2017"}, {"body": "reproduce demonstrate jquery open ticket specific description keep mind browser plugins cause sorts problems", "d": "4/2017"}, {"body": "server needs support cors particular options request", "d": "4/2017"}, {"body": "hi method options allowed anything else created page visual studio find webconfig file attached webconfigtxt also attached screenshot request response firefox use microsoft iis server activated basic authentication", "d": "4/2017"}, {"body": "ca nt compare browser curl latter nt care cors need compare bare xhr please look programming help stack overflow", "d": "4/2017"}, {"body": "deactivate authentication works well get error message deactivated authentication guess problem cors", "d": "4/2017"}, {"body": "authentication headers trigger preflight requests read mdn micha\u0142 go\u0142\u0119biowski", "d": "4/2017"}, {"body": "ok thanks information", "d": "4/2017"}, {"body": "hello together reading cors spending much time issue still solved maybe hints would exclude line xhrsetrequestheader prompt appears entering user password everything works", "d": "4/2017"}, {"body": "create new issue cause one already closed probably find", "d": "4/2017"}, {"body": "see", "d": "4/2017"}, {"body": "kborchers scottgonzalez dmethvin could one comment", "d": "4/2017"}, {"body": "love let paid legal counsel give answer", "d": "4/2017"}, {"body": "bartoszkp many thanks feedback would appear transition jquery foundation js foundation one primary foundation website unintended consequences link redirects need cleaned ip policy linked foundation overall ip policy point nt particularly helpful determining particular project licensed event jquery licensed mit described licensetxt file extent additions standard mit language license file make clear external libraries always subject licenses mit license allows commercial noncommercial use terms required attribution reproduction permission notice license distributions thank feedback happy answer questions may", "d": "4/2017"}, {"body": "stevenayr thank much explanation create focused issue ask fixing link project nuget page andor redirect perhaps better place report mild inconsistency also thank prompt reaction", "d": "4/2017"}, {"body": "stevenayr say redirects need cleaned need specifically restored linking mit", "d": "4/2017"}, {"body": "problem nt link mit license linked page info good reason explained policies around different licenses used different situations recommendation would projects currently linking jqueryorglicense license headers change links either license file project repo cla page particular project org cla system requires orgrepo link probably best use main repo project multiple jquery would look like", "d": "4/2017"}, {"body": "kborchers btw noticed markdown link page nt translated html still think makes sense link license file repo jqueryjs would like legal confirm", "d": "4/2017"}, {"body": "thanks timmywil issue pointed weekend tracked issue jsfoundation repo stevenayr confirm link license file jquery distribution file header adequate replace links old jqueryorglicense page", "d": "4/2017"}, {"body": "one problem linking repo fixes new releases every version every one libraries used link still link improperly redirects seems like new versions change link still content indicating mit", "d": "4/2017"}, {"body": "arschmitz good point someone could update content specific projects link page rather foundationwide statement would happy review changes could remove redirect old releases accurate link", "d": "4/2017"}, {"body": "kborchers probably need make pr", "d": "4/2017"}, {"body": "timmywil let know works merge remove redirect", "d": "4/2017"}, {"body": "kborchers like thanks", "d": "4/2017"}, {"body": "kborchers fix concern also jqueryorglicense link guessing contents link still points ippolicypdf meant saying remove redirect sorry stupid question", "d": "4/2017"}, {"body": "bartoszkp definitely stupid question fix concern soon fix redirect happen week", "d": "4/2017"}, {"body": "please nt report issue amp especially planning provide test case additional details added comments original issue ie", "d": "4/2017"}, {"body": "read instructions issue template asked things nt provided like test case browsers see error perhaps better looked help stack overflow amp places first close provide test case detailed description reopen", "d": "4/2017"}, {"body": "tested internet explorer running application start showing error javascript runtime error object nt support property method indexof jquery", "d": "4/2017"}, {"body": "error coming browser also chrome firefox", "d": "4/2017"}, {"body": "arrow functions nt binding technically impossible use binding jquery provides arrow function", "d": "4/2017"}, {"body": "use based code instead though", "d": "4/2017"}, {"body": "please help us soon possible", "d": "4/2017"}, {"body": "please ask help stackoverflow sounds like use jquery migrate look upgrade issues read jquery upgrade guide", "d": "4/2017"}, {"body": "able find upgrade guide version blog guide avaliable", "d": "4/2017"}, {"body": "attach data directly elements data somehow getting garbage collected nt think anything jquery", "d": "4/2017"}, {"body": "timmywil difference jquery getting problem", "d": "4/2017"}, {"body": "vascofernandes jquery version using got problem", "d": "4/2017"}, {"body": "omuleanu regards", "d": "4/2017"}, {"body": "vascofernandes try", "d": "4/2017"}, {"body": "omuleanu think main difference started attaching data directly elements attached key element stored data memory internal object string also getting garbage collected string stick around object", "d": "4/2017"}, {"body": "sounds like chrome garbage collector little aggressive cases", "d": "4/2017"}, {"body": "timmywil would question chrome devs noticed system memory objects attached using nt references get removed", "d": "4/2017"}, {"body": "data attributes pulled first time data property accessed longer accessed mutated data values stored internally jquery", "d": "4/2017"}, {"body": "said behavior change recently", "d": "4/2017"}, {"body": "dmethvin using noticed nt know version introduced", "d": "4/2017"}, {"body": "behavior looks right", "d": "4/2017"}, {"body": "documented boolean values allowed", "d": "4/2017"}, {"body": "timmywil understand boolean currently documented proposing change future release falsey values commonplace javascript reason consider", "d": "4/2017"}, {"body": "want use making signature complicated risky especially years documentation internet", "d": "4/2017"}, {"body": "nonboolean values unacceptable error thrown rather treating values swallowing invalid arguments never existed seems counterintuitive", "d": "4/2017"}, {"body": "treat swallowing invalid args separate issue allow remain closed", "d": "4/2017"}, {"body": "accepting nonboolean values via casting bools would get us closer api something consider course cost breaking existing code also exists", "d": "4/2017"}, {"body": "yeah good point agreed cost consideration breaking change said change may also fix existing broken code well", "d": "4/2017"}, {"body": "good number breaking changes recently lean towards leaving one alone", "d": "4/2017"}, {"body": "jquery would lot bigger checked args explicitly threw error nt defined api ca nt imagine fix existing broken code changing api changes almost always break behavior code someone thought working okay even way accident requirement second arg true boolean way since feature implemented time convention using flag missing args past years tended towards instead would prefer leaving alone though way forever outlined simple thing caller get behavior want", "d": "4/2017"}, {"body": "yeah looked use throwing errors realized used rarely library problem skipping suggestion although casting boolean would move closer towards api noted mgol sounds like potential breakage outweighs benefits thanks feedback cool leaving closed", "d": "4/2017"}, {"body": "time convention using flag missing args past years tended towards instead spec treats missing value ie behaves like like seems align previous behavior case fine leaving asis well", "d": "4/2017"}, {"body": "spec treats undefined missing value ie toggle foo undefined behaves like toggle foo toggle foo null like toggle foo false mgol behave like reason reported issue initially", "d": "4/2017"}, {"body": "mgol behave like wrote classlist api jquery", "d": "4/2017"}, {"body": "wrote classlist api jquery oops sorry misunderstood nt catch lack", "d": "4/2017"}, {"body": "problem indeed regression widthheight broken inline elements reported issue since resolved master released jquery see although notable exception still broken android see issue", "d": "4/2017"}, {"body": "krinkle thanks pointing updated issuecomment reflect also spent time morning trying figure root cause tabs issue see notes bottom issue text latest jquery narrowed quite bit added links jsbins well screenshots showing discrepancies observed hopes someone jquery team able identify change caused", "d": "4/2017"}, {"body": "jacobq thank thorough analysis", "d": "4/2017"}, {"body": "problem outerheight returns wrong value ie windows works fine chrome", "d": "4/2017"}, {"body": "opinion removing fine preference operator testing whether dom element done individual functions rather generic", "d": "4/2017"}, {"body": "quick look usage internal cases putting elements variables tested results error silently ignored however variables could elements used behaviors specific elements users would expect elements treated accordingly even functions require additional checks elements usage used similar cases nt need additional checks already tested whether variable element different patterns passes given value function function tests value function function would called returned value would stored difference functions using function type value limited takes anything behavior jquerydata tests given value jqueryisfunction documented considering think necessary even internal use also think needs modified remove feature call given function may know dom elements possibly functions treated values rather functions know cases dependent libraries etc moreover objects may appear future need updates want store functions need wrap another function returning value troublesome", "d": "4/2017"}, {"body": "may troublesome nature polymorphic library objects nonnegative numeric get special treatment arrays applicable objects treated dom nodes circumstances invoked functions remember crossbrowser imagine chaos trying debug elappend documentcreateelement object", "d": "4/2017"}, {"body": "important requires additional checks even situation realistic another example variables documented enforce really plain think completely fine variables could types usual use cases agree case problematic without checks type checks strictly enforced variable could functions nonprimitive types semantics could differ two cases opinion summary really matters test whether nonprimitive types dom node nt really matter test", "d": "4/2017"}, {"body": "could internal implementation jquery concerning example deprecating", "d": "4/2017"}, {"body": "akihikodaki move internal amd module still use would longer public api deprecation period ends", "d": "4/2017"}, {"body": "mgol solve could recognize functions think intended solve also problem deprecation", "d": "4/2017"}, {"body": "expected fix issue underlying deferred problem needs adjustment separate issue intended put jqueryisfunction path towards becoming purely internal api", "d": "4/2017"}, {"body": "separate issue intended put jqueryisfunction path towards becoming purely internal api opened problem causing deferred flaw", "d": "4/2017"}, {"body": "wrong plugins found", "d": "4/2017"}, {"body": "mean nt want plugin jquery nothing sets plugins combined chained together form function library extending library plugin correct way take look maybe customize meet needs", "d": "4/2017"}, {"body": "thanks opening issue still think best done plugins personally nt use plugin construct json object want form post setting like control object constructed different ways could done none may suit preferences", "d": "4/2017"}, {"body": "wrong plugins found first problem much information image versions ajax function know decent plugin please inform take look maybe customize meet needs plugin even parse numbers said much attempts belive jquery set standard including proper json folloewd html post form method manually shure problem even use plain old javascript whole process however dont think majority would like parse html forms days mean image people would like manually hand craft normal form mean would normal form post translated modern json nothing nothing less however hope consider long term think boost jquery lot thank", "d": "4/2017"}, {"body": "seems like bikeshedding never need property object unless mocking something tests said change small nt mind", "d": "4/2017"}, {"body": "fwiw small nonjquery example leaks like crazy chrome stable key line removing gets rid leak jquery path information also added related chromium bug", "d": "4/2017"}, {"body": "looks like getting fixed chrome side", "d": "4/2017"}, {"body": "specific chrome issue solved guess makes sense close issue right", "d": "4/2017"}, {"body": "pmgmendes agreed nt see workaround end anyway", "d": "4/2017"}, {"body": "right failure sure commit linked related unless android opposite issue firefox making ca nt access inline style computed odd reason", "d": "4/2017"}, {"body": "fix next release tagging", "d": "4/2017"}, {"body": "sure commit linked related aye yeah filtered git log bit much css range meant remove keep dimensions instead way around added", "d": "4/2017"}, {"body": "quick check seems like patching align otherwise harmless already going direction anyways already cases use values returns remove reducing use trick although may need find another way support android regexp values case js type function obj obj null return obj isfunction function obj return jquerytype obj function", "d": "4/2017"}, {"body": "nt support android anymore minimum micha\u0142 go\u0142\u0119biowski", "d": "4/2017"}, {"body": "breaks cases iswas actually function callable object expected false javascript obj documentcreateelement object assertok jqueryisfunction obj object element hand documentation says determine internal javascript class object though longer exist since ecmascript similar people may consider derives change regarding breaks expectation need make clear expect rather considering prevent confusions", "d": "4/2017"}, {"body": "rather deprecate jquerytype try keep external changes nt need rely nt longer imo", "d": "4/2017"}, {"body": "going checking deprecate well", "d": "4/2017"}, {"body": "fine deprecating unfortunately little firefox", "d": "4/2017"}, {"body": "typeof documentcreateelement object function firefox firefox chrome changed beta version could nt find browser among support soon stop issue unless want extrasafe nothing dombased returns funny chrome used versions lt", "d": "4/2017"}, {"body": "dom specific problem check element functions deals dom reasonable", "d": "4/2017"}, {"body": "discourage use utility functions set expectation updated bizarre usage someone passes generator function jquery something mighty strange taunt happy fun jquery", "d": "4/2017"}, {"body": "plan deprecate methods means people eventually need migrate use native checks case propose keep unchanged deprecate current form little point improving allow new usage patterns require migration later certainly less risky terms backcompat predictable easier document", "d": "4/2017"}, {"body": "little point improving allow new usage patterns require migration later closing issue", "d": "4/2017"}, {"body": "lodash says checks classified object however standard requires callbacks functions objects implementing inappropriate purpose", "d": "4/2017"}, {"body": "rather difficult perfectly determine object call internal method tough edge cases none properly detect still support xml host objects callable properties like typeof returns unknown modern browsers callable typeof undefined intent serve reasonable approximation ecmascript iscallable going way catch every possible trick one want recognize generators async functions maybe point makes sense jquerycore would anyone else like weigh", "d": "4/2017"}, {"body": "rather difficult perfectly determine object call internal method tough edge cases none properly detect aware cases way tested second case callable firefox callable chromium returned false still investigating cases intent jqueryisfunction serve reasonable approximation ecmascript iscallable test suggests different ecmascript iscallable javascript obj documentcreateelement object callable may need clarify expected behavior opened issue", "d": "4/2017"}, {"body": "maybe point makes sense jquerycore would anyone else like weigh opened", "d": "4/2017"}, {"body": "pursue fix like requirement resolve issue new unit tests", "d": "4/2017"}, {"body": "clarity consider scrollbar gutters part padding lines", "d": "4/2017"}, {"body": "fix nt work android could reopen filed instead", "d": "4/2017"}, {"body": "mgol unable reproduce failure clean project exact dependencies project initially noticed issue given size main project obviously condition causing pollute array prototypes sorry taking time going close issue ever nail exact condition babel hitting", "d": "4/2017"}, {"body": "thanks update let us know ever manage reproduce minimal project", "d": "4/2017"}, {"body": "note find detailed description problem mainly need old prototypejs break things however fixed regards balazs", "d": "4/2017"}, {"body": "run upgrading noticing performance degradation think good resolution would queue resolutions way could keep asynchronous spec defines run pending resolutions single timeout", "d": "4/2017"}, {"body": "actually noticed looks leverage technique", "d": "4/2017"}, {"body": "document set places even defined top windowdocument working electron neither", "d": "4/2017"}, {"body": "thanks", "d": "4/2017"}, {"body": "thank", "d": "4/2017"}, {"body": "im guessing im understanding something obvious may really dumb question im wondering native bind used stub proxy available calling proxied functions roughly slower calling function using bind firefox slower", "d": "4/2017"}, {"body": "deprecated method nt planning implementation", "d": "4/2017"}, {"body": "dmethvin close accident nt deprecated yet reopen", "d": "4/2017"}, {"body": "make sure fix patch fixed", "d": "4/2017"}, {"body": "reissr yes breaking change could nt include follow semver also longer maintain jquery latest version currently", "d": "4/2017"}, {"body": "fixed jquery version", "d": "4/2017"}]