[{"title": "typeerror syntheticeventcall function development mode webkit browser", "body": "want request feature report bug bug current behavior using webpack built react based app app runs two modes desktop aka runtime mode opens webkit browser server mode opens browsers chrome firefox etc getting error app built using webpack development flag enabled works fine production mode current behavior bug please provide steps reproduce possible minimal demo problem via similar template since app run webkit browser possible provide test environment however anyone wants build using steps provided readme blog post expected behavior react base app run without error dev mode versions react browser os affected issue work previous versions react react os mac os x yosemite browser annulen browser qt version please let know need details", "num": "10582", "d": "8/2017"}, {"title": "accept ref objects refs", "body": "reason react uses first class ocaml refs store mutable values instead instances basically object mutable property updated callback refs would nice convenience feature builtin could also make first class objects isomorphic react basically implementation would something needs implemented core runtime part particular component api since refs cross boundary cc adamjernst", "num": "10581", "d": "8/2017"}, {"title": "implement silent updates state update queue", "body": "reason react silent updates meaning normal update state queue reverted difference nt need rerender props changed rerender unclear expose existing classcomponent api make feature new apis", "num": "10580", "d": "8/2017"}, {"title": "wrong warning", "body": "want request feature report bug bug current behavior shows warning following react documentation using classes validate items array shows warning current behavior bug please provide steps reproduce looking jsfiddle warning shown expected behavior warning shown code follows react documentation proptypes versions react browser os affected issue work previous versions react chrome version official build macos sierra", "num": "10577", "d": "8/2017"}, {"title": "apparent slow bytes per render memory leak react reactdom", "body": "want request feature report bug bug current behavior longrunning react application finding slow memory leak looks bytes per render eliminate virtually everything wrote simplest possible examples end issue test methodology note also disabled chrome extensions testing ran production build createreactapp eliminate possible source leaks pause execution early force multiple garbage collections using dev gt performance record starting javascript memory live using google chrome task manager run execution iterations pause record memory start memory end difference eliminate browser ran test simple loop also end issue memory start memory end difference note really account maybe consolelog current behavior bug please provide steps reproduce possible minimal demo problem via similar template see code snippets bottom wanted eliminate sources leaks use jsfiddle expected behavior expect memory usage simple test loop really memory growth cleaned garbage collection versions react browser os affected issue work previous versions react browser chrome version official build linux react reactdom createreactapp reactscripts sure previous versions react sample react application import react component react import reactdom reactdom class app extends component componentdidmount windowsetinterval gt thissetstate test test render windowconsolelog test return test sample baseline application", "num": "10576", "d": "8/2017"}, {"title": "reacttestrenderer renders attributes value undefined", "body": "want request feature report bug bug current behavior appears render attributes way inconsistent react browser rendering react attributes value truthy omitted render attribute value still renders current behaviour bug please provide steps reproduce possible minimal demo problem via similar template component like rendering react rendering react expected behavior would expect behaviour react browser case undefined attribute would rendered versions react browser os affected issue work previous versions react using version react chrome macbook testing jest snapshots version", "num": "10573", "d": "8/2017"}, {"title": "performance issue react", "body": "currently using reactjs version web application one feature need keep pooling information continuously seconds receive response list object items list update show react web application problem time application becomes unresponsive takes much time operation profiling found render batch updates dispatch event react takes longest time recommended way get away performance issue react feature needs refreshed every seconds list size items time performance issue observed ie chrome browser", "num": "10566", "d": "8/2017"}, {"title": "react performs insertbefore operations move one item list", "body": "list contains items move one item bottom top react performs insertbefore operations sucks take look infernojs example perform one insertbefore operation one move cases", "num": "10565", "d": "8/2017"}, {"title": "bug", "body": "hi use reactrouterdom npmyarn package different routes use react component show route changing component nt rerender bug", "num": "10557", "d": "8/2017"}, {"title": "typeerror read property currentelement null", "body": "want request feature report bug bug version error", "num": "10556", "d": "8/2017"}, {"title": "import external lib error", "body": "import thirdparty javascript library reactjs searched lot internet think downloaded free theme however author makes custom settings js file would like include file component effects work thank current behavior undefined typeof jquery throw new error bootstrap javascript requires jquery function error bootstrap javascript requires jquery expected behavior", "num": "10555", "d": "8/2017"}, {"title": "documentation add reference oninvalid form event", "body": "want request feature report bug bug current behavior react form event nt documented current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior added list form events versions react browser os affected issue work previous versions react documentation error around since event added", "num": "10553", "d": "8/2017"}, {"title": "bad effect company", "body": "consider relicensing al rocksdb done forgive ask", "num": "10552", "d": "8/2017"}, {"title": "question using nextstate shouldcomponentupdate", "body": "consider following shouldcomponentupdate nextprops nextstate return thisstatevalue nextstatevalue nextprops wasted used way use shouldcomponentupdate nextstate comes argument shouldcomponentupdate", "num": "10551", "d": "8/2017"}, {"title": "reacttestrenderer mock react native animated", "body": "want request feature report bug bug current behavior animated mocked using implement component make snapshot test return log error const wrapper thisenvironmentrunscript transformedfilescript typeerror read property object null runtimeexecmodule runtimerequiremodule runtimerequiremoduleormock functionbezier ease timinganimationeasing timinganimationonupdate ontimeout tryontimeout timerlistontimeout expected behavior mock properly like components nt break", "num": "10542", "d": "8/2017"}, {"title": "reactjs aspnet core", "body": "hello could anyone link good template start hacking react aspnet interested jsx tsx thanks", "num": "10541", "d": "8/2017"}, {"title": "inforamtion internet react", "body": "hi know user internet conection react js native javascipt windowaddeventlistener online gt alert navigatoronline use react", "num": "10540", "d": "8/2017"}, {"title": "buggy controlled number input", "body": "want request feature report bug bug current behavior following code example works well input type allows inputs like entered using input type line always runs shows right value app state also correct checked react developer tools controlled input controlled somehow class app extends component constructor super thisstate value handlechange e gt const value etargetvalue const num parseint value consolelog num thissetstate value isnan num num render return present latest create react app jsfiddle present jsfiddle expected behavior input reflect state thus allowing strings like etc displayed versions react browser os affected issue work previous versions react latest react reactdom reactscripts browser chrome os x present latest create react app jsfiddle present jsfiddle", "num": "10539", "d": "8/2017"}, {"title": "descriptive error null proptype", "body": "want request feature report bug feature current behavior specify invalid proptype common mistakes misspelling instead get error one bothered expected behavior useful error message could", "num": "10538", "d": "8/2017"}, {"title": "add topics categorize react repository make discoverable", "body": "want request feature report bug feature current behavior topics repo current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior popular frameworks github page topics though really popular project would nt better add topics make discoverable versions react browser os affected issue work previous versions react", "num": "10537", "d": "8/2017"}, {"title": "redux", "body": "objects valid react child found object keys counter meant render collection children use array instead wrap object using createfragment object react addons check render method", "num": "10534", "d": "8/2017"}, {"title": "avoiding finddomnode", "body": "read comments potentially dropped least usage strongly discouraged curious alternative ones seen nowhere near flexible let say funky wrapper component adds context menu component jsx class contextmenu extends reactcomponent render const children menu thisprops const child reactchildrenonly children const childwithevents reactcloneelement child oncontextmenu gt someapitoopenmenu menu return childwithevents right click menu far good except needs child dom element prop assign handler inner dom element wo nt work jsx const mylabel children gt children right click menu unless intentionally forward event props mylabel span must ensure props using alternatively wrap children adding element unnecessarily use inline element wrapped block element hand work anything eventually renders dom element matter deep whether components forward props nt see downsides apart impurity poking around dom see workarounds using none good actually using", "num": "10532", "d": "8/2017"}, {"title": "react expects global document object breaks parallel dom testing", "body": "want request feature report bug feature current behavior react expectes document global variable current behavior bug please provide steps reproduce possible minimal demo problem via similar template run enzymejest tests parallel using parallel test runner avajs together jsdom node javascript dom implementations headless browsers expected behavior react allow pass dom instance constructor initial render initialization versions react browser os affected issue work previous versions react windows", "num": "10525", "d": "8/2017"}, {"title": "bug argument eventtargetdispatchevent implement interface event", "body": "applyed event onmousedown element firefox osx catch error title debug see occurs function execute code react reactdom os details os x yousemite version processor ghz intel core memory gb mhz graphics intel iris pro mb", "num": "10523", "d": "8/2017"}, {"title": "decide desired behavior boolean value passed unknown prop", "body": "moving discussion comments issue", "num": "10521", "d": "8/2017"}, {"title": "onmousemove outside window mousedown", "body": "syntheticevent onmousemove stop triggering mouse moved outside window instead browser event chrome continue trigger mousemove mousedown active behavior implemented syntheticevent", "num": "10519", "d": "8/2017"}, {"title": "fiber calling reactnativefindnodehandle render crashes dev", "body": "found working see details know fixed whole story even fixed stackassuming call still ca nt put arbitrary fields fiber reference work around problem reactdom", "num": "10518", "d": "8/2017"}, {"title": "rendering elements inside dynamic parent without child remounting", "body": "possible change element parent element moved current parent new using code parentrenderer children changed parent rerendered perfect change parent actually changed new children children componentwillmount updating store sets required parent happen old children unmounting new children mounting old parent unmounting current children unmounting new parent mounting current children mounting simplest way solve see change children parent time would like know options changing children parent time breaking app also lack information internet similar cases googling skills broken", "num": "10516", "d": "8/2017"}, {"title": "ctrl enter keypress works firefox", "body": "nt work chrome ie edge chrome ubuntu browsers report charcode event dispatcher dismisses made pull request unobtrusive fix", "num": "10515", "d": "8/2017"}, {"title": "reliable way measure painted dom elements", "body": "apologize know frequent question struggling find proper way accomplish trying creating menu simple animated underline transition selected element list requires knowing width element positioning underline div selected element click currently getting width componentdidmount way refs finddomnode works initial load get slightly incorrect measurement refreshing correct every time open page new tab see incorrect behavior componentdidmount code something fundamentally wrong good way know dom fully painted measurements things like far way able get work nesting within requestanimationframe nested within settimeout seems wrong thanks help", "num": "10513", "d": "8/2017"}, {"title": "warn remove known attribute dom component receives symbol value", "body": "want request feature report bug possibly incorrect corner case correct finalizing new behavior unknown attributes see context changes behavior unknown attributes happens unknown attributes want warn remove attribute behavior consistent known unknown attributes current behavior currently throw generic error symbol passed known attribute expects string current behavior bug please provide steps reproduce possible minimal demo problem via similar template example also happens spreading objects props expected behavior warn remove attribute since valid value versions react browser os affected issue work previous versions react recent react well", "num": "10512", "d": "8/2017"}, {"title": "confuse reactdomserver doc", "body": "load react tag toplevel apis available global mean use tag node server", "num": "10508", "d": "8/2017"}, {"title": "consider happens xss surface area whitelist", "body": "consider case let say fix special casing use symbol consider url event name current future gets passed plain old string xss vulnerability tricky part one plain old strings potentially infinite long list since also includes future event names think safe strategy might hard blacklist meaning nt get added dom attribute starts cover everything cc nhunzaker", "num": "10507", "d": "8/2017"}, {"title": "symbol tagging dangerouslysetinnerhtml help prevent xss", "body": "spreading props user provided source xss eg js var data jsonparse decodeuri locationsearchsubstr function foo props return propscontent reactdomrender container already true today url xss hole uncommon many different ways screw getting user data however also spreading unusual decided react add extra layer protection types mistakes one much uncommon one though already pretty centralized way sanitizing objects seems adding symbol object nt big deal though either", "num": "10506", "d": "8/2017"}, {"title": "issue functional components classical components", "body": "problems functional components classical components detail code follow jsbin part problem code js function usergreeting props return welcome back function guestgreeting props return please sign js class usergreeting extends reactcomponent render return welcome back class guestgreeting extends reactcomponent render return please sign also run page jsbin classical component nt feature function component simple ca nt run report error please tell wrong whatever newer", "num": "10503", "d": "8/2017"}, {"title": "packaging js big", "body": "webpack packagedjavascript original javascript contain idea packaging js big packagejson webpackconfigjs javascript var webpack require webpack var path require path var publicdir pathresolve dirname srcclientbuild var appdir pathresolve dirname srcclientapp var config entry appdir indexjs output path publicdir filename indexjs module loaders test js loader babelloader exclude pathresolve dirname nodemodules include pathresolve dirname src query presets react test use urlloader amp nameimg name ext imgloader resolve extensions js jsx modules pathresolve dirname appdir nodemodules moduleexports config javascript name helloworld version description des private true dependencies babelcore babelloader babelpresetreact htmlwithimgloader materialui proptypes react reactdom reactrouter reacttapeventplugin reacttimer webpack whatwgfetch devdependencies cssloader fileloader imgloader styleloader urlloader scripts test echo error test specified amp amp exit dev webpack watch author yanlj license mit new webpack could give routine configuration", "num": "10502", "d": "8/2017"}, {"title": "react component rendering ie rendering properly chrome mozilla", "body": "react components rendering ie rendering properly chrome mozilla using ie showing error access denied ie browser browserminjs reactjs image", "num": "10501", "d": "8/2017"}, {"title": "patent issue raised patent react", "body": "hey guys first thank great framework started learning react mindblowing comparing frameworks like maybe angular raised yesterday gt bsd patents essentially means code open everyone see use always copyrighted facebook grant patent license long nice never suing facebook patent infringement instant sue facebook patent rights react facebook open source technology happen use automatically revoked far understand example started startup maybe next facebook makes sense used react coding part frontend development startup got popular became next competitor facebook somehow got problem facebook inc doesnt anything react open source matter sue facebook due reasons even dont anything codes license react revoked ca nt use react trouble one example time post avoid react startup building startup assuming investors hoping land milliondollar worth exit point right want keep door open acquirers especially large ones apple microsoft google amazon etc companies likely hold patent arsenals facebook even want surrender rights sue facebook time came product built react acquiring means losing rights something probably prepared", "num": "10500", "d": "8/2017"}, {"title": "keep discussion patent clause going", "body": "biggest issue patent clause closed statement close let keep broader discussion going yet link suggestion discussion might take place puts users react position weakness since central place articulate issuesproblems clause thus would like ask either always keep one issue topic open people speak provide maintained link discussion thread platform understand best place discussions topic important users businesses work single place continue discussion interpreted unfortunately silencing tactic edit far understand actually close issue still leave open adding comments yet adding comments issue patent clause turned sebmarkbage could elaborate necessary since leave comments option closed issues relates let keep broader discussion going", "num": "10497", "d": "8/2017"}, {"title": "npm packages could able use reactnative project", "body": "new reactnative project created new react native project reactnative init sample tried adding npm package npm install save isreachable installation tried run react native project reactnative runios got error like unable resolve module os followed steps mentioned still facing issue reactnative version cli versions react browser os affected issue work previous versions react", "num": "10496", "d": "8/2017"}, {"title": "input element type isnumber meet expectations", "body": "example chrome type nonnumber character safari firefox type nonnumber character moment value change empty string solve problem", "num": "10489", "d": "8/2017"}, {"title": "element variables nt work codepen", "body": "want request feature report bug bug current behavior code nt work current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior displaying result nothing showed versions react browser os affected issue work previous versions react browser version official build os ubuntu react codepen uses follows", "num": "10486", "d": "8/2017"}, {"title": "image loading failure", "body": "", "num": "10485", "d": "8/2017"}, {"title": "componentwillreceiveprops called twice renders", "body": "want request feature report bug bug current behavior componentwillreceiveprops called twice row without render call shouldcomponentupdate importantly value calls object passed different specifically code like noticed redux action xhr request performed twice calls also calls defined second call also passed results first xhr call stored redux store passed component via reactreduxconnect also confirmed called second time versions react browser os affected issue work previous versions react react google chrome windows", "num": "10482", "d": "8/2017"}, {"title": "solve reactdom defined react webpack", "body": "download react devtools use http server instead file url better development experience appjs uncaught referenceerror reactdom defined eval appjs object webpackrequire anonymous appjs anonymous webpackrequire anonymous anonymous react reactdom", "num": "10480", "d": "8/2017"}, {"title": "window object virtual dom", "body": "hi question use javascript window object jsx file dom manipulation changing virtual dom best place use window object jsx file", "num": "10479", "d": "8/2017"}, {"title": "remove old disttags", "body": "want request feature report bug bug guess current behavior tags npm think used anymore see registry current behavior bug please provide steps reproduce possible minimal demo problem via similar template tags removed see docs expected behavior supported tags existing versions react browser os affected issue work previous versions react", "num": "10478", "d": "8/2017"}, {"title": "object spreads nested children gives unwanted key error", "body": "believe following case result key error would like know correct behaviour bug produced following case render component spreads attributes top element children children nested least one child object spread situation produces following key error warning child array iterator unique key prop check render method passed child parent component see information reproduction added basic code reproduce issue jsfiddle however nt see key error displayed jsfiddle component renders children spreads attributes top element render component nested children least one object spread function component children return function app return foo variations first nested child given component component component receives object spread key warning also thrown object spread removed inside component key warning thrown object spread remove first nested child given component key warning thrown expectation would expect key errors arrays children rendered background build react reactdom started getting problem since started using airbnbreactwithstyles aphrodite styling generates objects possibly style classname properties spread jsx elements however issue persists reactwithstyles used behaviour seems come react correct behaviour", "num": "10477", "d": "8/2017"}, {"title": "circular reference bound method", "body": "want request feature report bug unclear lean towards bug current behavior certain bound functions create circular reference makes traversing objects problematic current behavior bug please provide steps reproduce possible minimal demo problem via similar template sure produce small test case issue expected behavior unsure versions react browser os affected issue work previous versions react react react native jest happening test attempt use jsonpath query results see link attempted address circular reference jsonpath library problem persists managed track circular property defined apparently still used native components snippet code function bindautobindmethod component method var boundmethod methodbind component boundmethodreactboundcontext component boundmethodreactboundmethod method boundmethodreactboundarguments null unfortunately yet narrow precise place occurs source method definition repeated several modules however confirm issue case isolated single file circular reference particular value example changing line regular enumerable property one defined nonenumerable issue goes away eg function bindautobindmethod component method var boundmethod methodbind component objectdefineproperty boundmethod reactboundcontext value component boundmethodreactboundmethod method boundmethodreactboundarguments null value contains circular reference components reference value becomes problem traversing object tree based keys key enumerated see attempt avoiding circular references however unfortunately still nt addressing issue particular property perhaps fix naive otherwise missing case yet reproduce isolation thank much hard work attention particularly gritty issue must apologize anything said nt make clear sense beginning get familiar js development", "num": "10476", "d": "8/2017"}, {"title": "fake event trick rethrowing errors dev fires unexpected global error handlers makes testing harder", "body": "trying make use componentdidcatch react beta already global window error handler working fine unexpectedly catches errors would expect componentdidcatch handled componentlocal errors treated windowglobal errors dev builds problem seems stem think entire block code problematic stated rational misguided pausing exceptions pause uncaught exceptions however makes exceptions caught rather switching prod vs dev using trycatch prod window error handler dev react always use trycatch rethrow reach root without hitting componentdidcatch handler would preserve correct pause uncaught exceptions behavior without messing global error handlers", "num": "10474", "d": "8/2017"}, {"title": "react synthetic mouseenter event fires dom mouseleave event", "body": "want request feature report bug bug think current behavior two elements next two mouse moves element element registered event listeners mouseenter gt mouseleave gt mouseenter gt mouseleave gt see mouseleave event always fired mouse enter event true react component follows mouse enter events fire mouse leave events elements sharing boundary however mix events use synthetic react events mouse enter dom events mouse leave find mouse enter event handler triggered mouse leave event handler elements sharing boundary current behavior bug please provide steps reproduce possible minimal demo problem via similar template codepen expected behavior mouse enter always fire mouse leave even using mixture synthetic dom events versions react browser os affected issue work previous versions react react os windows broken chrome ie", "num": "10471", "d": "8/2017"}, {"title": "excessive duplicative variable assignments commonjs build", "body": "followup looks like commonjs build saving short variable name references long property names however bunch places net output larger build referenced names like duplicated quite bit example umd build tokens cjs build nt crush names either later build things like duplicates lot look cjs build something along lines dhostnode shows like places true tokens beautified version reference", "num": "10469", "d": "8/2017"}, {"title": "dom fixture form coverage restored state autofill", "body": "follow presently nt manual fixture ensures form state captured browser provides input behalf user restored form state autocomplete state notes reference point like find documentation around restored state works think might using wrong search terms anyone link handy", "num": "10468", "d": "8/2017"}, {"title": "reactdomminjs unpkg cdn returning", "body": "want request feature report bug bug current behavior requests returning found redirect current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior minimized version reactdom success versions react browser os affected issue work previous versions react unpkg nt seem status page also unminified version returns message response occurs less second though", "num": "10465", "d": "8/2017"}, {"title": "react website code textareas broken", "body": "want request feature report bug bug current behavior code react website seem broken inspection reveals url used website current behavior bug please provide steps reproduce possible minimal demo problem via similar template visit react website expected behavior code inputs function expected", "num": "10464", "d": "8/2017"}, {"title": "componentdidcatch document amp decompose info parameter", "body": "quick googling nt show explanation parameter key object seen far useful already composed want custom rendering information parse love see become general string broken array frames something like", "num": "10461", "d": "8/2017"}, {"title": "looking clarification deprecation warnings reactdomfactories", "body": "hello looks use mandatory versions use information correct also wondering going deprecation warnings use versions thanks lot", "num": "10460", "d": "8/2017"}, {"title": "sname", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10459", "d": "8/2017"}, {"title": "license headers missing built bundles", "body": "built files missing license headers cjs headers umd headers identifying bundle name license license headers similar likely need change code getbanner scriptsrollupbuildjs test running looking buildpackages cc trueadm", "num": "10458", "d": "8/2017"}, {"title": "distreactdomserverminjs bug", "body": "think bug use reactdomserver like typeerror read property reactcurrentowner undefined occurs find reason reactdomdistreactdomserverminjs requires react like moduleexportse require react shoule moduleexportse require reactdistreactminjs try works react version reactdom version", "num": "10455", "d": "8/2017"}, {"title": "doc handling events gt binding event class", "body": "tutorial nt binding yet written careful meaning jsx callbacks javascript class methods bound default forget bind thishandleclick pass onclick undefined function actually called additionally example comments code pertaining bind", "num": "10454", "d": "8/2017"}, {"title": "error reactperf failed execute measure performance mark unmount exist", "body": "want request feature report bug bug current behavior hi using reactperf getting error seems crash render domexception failed execute measure performance mark unmount exist markend webpack nodemodulesreactdomlibreactdebugtooljs objectonunmountcomponent webpack nodemodulesreactdomlibreactdebugtooljs eval webpack nodemodulesreactdomlibreactserverrenderingjs reactserverrenderingtransactionperform webpack nodemodulesreactdomlibtransactionjs rendertostringimpl webpack nodemodulesreactdomlibreactserverrenderingjs rendertostring webpack nodemodulesreactdomlibreactserverrenderingjs modify get errors per page refresh however flame graph looks working current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior error versions react browser os affected issue work previous versions react chrome react reactdom", "num": "10450", "d": "8/2017"}, {"title": "error beta undefined function evaluating ownergetname", "body": "line wrong fiber crashes changed use getcomponentname owner", "num": "10443", "d": "8/2017"}, {"title": "componentdidcatch nt work react rendertostring", "body": "tried simple test case new error handling code react ssr following code javascript import react react import rendertostring reactdomserver class errorboundary extends reactcomponent constructor props super props thisstate haserror false componentdidcatch error info display fallback ui consolelog componentdidcatch thissetstate haserror true render thisstatehaserror render custom fallback ui return something went wrong return thispropschildren class throwingcomponent extends reactcomponent render throw new error ooooops consolelog rendertostring result users throw new error ooooops error ooooops throwingcomponentrender users resolve users reactdomserverrendererrender users reactdomserverrendererread users rendertostring users object users modulecompile loader users objectrequireextensions anonymous function js users moduleload far tell code throw rather output afraid maybe nt add new server renderer", "num": "10442", "d": "8/2017"}, {"title": "crossorigin error passed componentdidcatch incorrectly", "body": "tl dr react passing crossorigin error thrown crossorigin scripts see discussion thread repro case able confirm behavior quick look showed null", "num": "10441", "d": "8/2017"}, {"title": "love react way beautiful designed", "body": "", "num": "10440", "d": "8/2017"}, {"title": "callback lifecycle", "body": "react good templating engine making animation sometime horrible use greensock animation library animation since react animation library like impressed solve design task nt problem need animation unlike animation apply hack last situation example wrapping component extends react lifecycle another hack general want ask possible add callback lifecycle easily animate components", "num": "10439", "d": "8/2017"}, {"title": "reactcomponent docs displayname", "body": "following statement displayname string used debugging messages jsx sets value automatically see jsx depth almost sure incorrect neither react jsx sets automatically another error docs jsx depth nt even mention maybe could change something like displayname string used debugging messages usually nt need set explicitly inferred function class name creates component might want set explicitly want display different name debugging purposes create higherorder component see wrap display name easy debugging details makes sense", "num": "10438", "d": "8/2017"}, {"title": "reactdom docs confusing sentence", "body": "following statement reactdomrender modify container node modifies children container may possible insert component existing dom node without overwriting existing children think replaced wrong", "num": "10435", "d": "8/2017"}, {"title": "tutorial nonsense sentence run", "body": "want request feature report bug bug current behavior note onclick dom component special meaning react could called onclick prop square handleclick board something else current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior verb handleclick board part part first clause versions react browser os affected issue work previous versions react", "num": "10433", "d": "8/2017"}, {"title": "referencing within defined", "body": "nt necessarily bug feature asking implemented currently inside component undefined however defined value within realize point different instances demonstrating difference example javascript class example extends reactcomponent render consolelog thiskey undefined return reactchildrenmap thispropschildren child gt consolelog childkey defined return child expect readablewriteable within however seems counterintuitive idea undefined within component", "num": "10432", "d": "8/2017"}, {"title": "change reactcreatclass property getdefaultprops callback object like proptypes", "body": "think proptypes object getdefaultprops callback uncomfortable change know", "num": "10423", "d": "8/2017"}, {"title": "events registered inside shadow dom", "body": "want request feature report bug bug current behavior render react component inside shadow dom events dispatched react ie something like javascript alert clicked gt foo bar nothing happens someone investigated already got bottom wrote work around current behavior bug please provide steps reproduce possible minimal demo problem following official docs expected behavior events dispatched even react app rendered shadow dom versions react browser os affected issue work previous versions react browsers tested react", "num": "10422", "d": "8/2017"}, {"title": "onchange event fires incorrect selectedindex value", "body": "want request feature report bug report bug current behavior element event fired incorrect like nt actually changed happens element rendered another react dom root see example link current behavior bug please provide steps reproduce possible minimal demo problem expected behavior callback handlers receive events values user actually selected test case example choosing two expect following console output versions react browser os affected issue work previous versions react bug observed packages version latest stable version works fine", "num": "10420", "d": "8/2017"}, {"title": "dynamic names snapshot files jest", "body": "hi using snapshot testing application application theme based parameter passed component theme changes look n feel app adding classes elements want generate snapshots components themes want duplicate code keep two separate testspec files way generate snapshot files based theme passed one spec file expected behaviour two theme values dark light one componentspecjs file generate componentdarkspecjssnap componentlightspecjssnap based theme passed way separate separate snapshots based theme one source spec file", "num": "10419", "d": "8/2017"}, {"title": "documentation style numeric values treated pixels missing", "body": "used exist react documentation tips section mentions support missing entirely old documentation page removed commit", "num": "10418", "d": "8/2017"}, {"title": "server side rendering warning using uppercase html always use lowercase html tags react", "body": "want request feature report bug report bug current behavior whenever render svg elements camel cased eg server side get following warning expected behavior warnings consistent client side rendering possible case expect warning since using camel cased svg element names pretty standard client side rendering seems check current namespace server side rendering seems currently check place versions react browser os affected issue work previous versions react hitting hitting version previously thanks advance", "num": "10415", "d": "8/2017"}, {"title": "unexpected rerender different nodeenv", "body": "hi want request feature report bug reporting bug gets crazy current behavior found strange behavior development version production one nt know production build redirect happens entire tree switch component rerendered scratch nodeenv development nodeenv production noticed production env keys generated every time route changes opened issue reactrouter repos also tried also nt minify anything result someone knows happening may causing versions react browser os affected issue work previous versions react react reactrouterdom os macos sierra version browser google chrome version official build", "num": "10413", "d": "8/2017"}, {"title": "two steps server side rendering", "body": "want request feature report bug feature current behavior imagine component triggers api request method updates internal state want render version component operation call twice expected behavior many ways achieve static methods component etc way seem tricks proper api would better", "num": "10411", "d": "8/2017"}, {"title": "broken date inputs test dom fixture", "body": "open date inputs test harness click little x clear input rangeerror invalid time value fixture broken beta", "num": "10408", "d": "8/2017"}, {"title": "warn early event listener function", "body": "used throw event listener function stack fiber silently ignores think throw would let us add support objects eg passive listener configuration want minor rather major", "num": "10407", "d": "8/2017"}, {"title": "show better message react loaded", "body": "currently react loaded reactdom shows throw nicer error message entry point think", "num": "10406", "d": "8/2017"}, {"title": "reactdom removes server rendered content rendering", "body": "want request feature report bug bug current behavior react reactdom removes server rendered content rendering tested applications big component tree perceivable user current behavior bug please provide steps reproduce possible minimal demo problem reproduced bug tiny app box component rendered server sent client client loads bundlejs contains component added debugger box component show open dev tools react react code expected behavior reactdom perform reconciliation without removing content react behavior versions react browser os affected issue work previous versions react browser chrome current version previous version", "num": "10405", "d": "8/2017"}, {"title": "outstanding work custom attributes pr", "body": "final work land x add attributes need boolean values back whitelist x data aria attributes accept booleans x warn nan x test coverage unknown booleans done sufficient x aria camel casing verify nt regressions existing attribute support manual test page x need pass objects warn otherwise warn html x missing warning bad type second use attribute x change warning wrong casing specific", "num": "10404", "d": "8/2017"}, {"title": "add tests gt transition", "body": "deleted testing public api hard say tested path code actually took either add similar test public api equivalent test manual fixtures see details", "num": "10401", "d": "8/2017"}, {"title": "noshade attribute working element", "body": "want request feature report bug bug current behavior passing element nt work current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior attribute added rendered dom versions react browser os affected issue work previous versions react", "num": "10400", "d": "8/2017"}, {"title": "rfc plan attributes react", "body": "note final plan changed refer details ends react formal conclusion discussion mostly yet fully implemented meant address wrote doc mostly based discussion nhunzaker decided write attempt formalize behavior want bugs refer back current behavior react lets use approved camelcase properties look organic javascript js warning gt gt gt warns gt gt gt two downsides problem custom attributes pass custom nonstandard libraryspecific notyetstandardized attributes popular feature request problem maintaining whitelist currently maintain whitelist allowed attributes use even production build permissive drop reactdom size postmingzip without changes app code guiding principles change current behavior existing principles want preserve code behave identically development production one pretty obvious constraints whitelist existing applications keep working okay getting permissive passing attributes dom want change react dom apis point one obviously valid way supply property component example allowing would ambiguous confusing component authors maintain spirit javascriptcentric api users already bought idea important props consistent used javascript match htmlsvg specs want change think compromise lets us solve problems without deviating principles proposed behavior overview drop large part whitelist make behavior less strict used ignored due wrong casing passed instead omitted emit warning however still pass attributes differ casing react version lets us drop reactdom bundle size keep whitelist development proposed behavior depth let say attribute name use react name htmlsvg specs whitelist map react might look like proposed changes whitelist remove attributes special behavior words delete attributes work regular html get size savings still keep full attribute whitelist dev mode warnings proposed changes algorithm let say attribute user jsx follow steps step check exists whitelist equal match use corresponding name whitelist exit example matches behavior match continue step check exists whitelist trying determine user using dom version attribute sufficiently different one suggested react casing case render anything warn exit far matches behavior note catch cases sufficiently similar excluded whitelist example keep whitelist anymore hit case continue step value type valid write dom warning deviates react canonical api deviate reached stage render dom anyway may may successful render strings numbers value different type skip warn numbers also warn still render value coerced string success depends whether dom accepts attribute however still warn words warn canonical react api differs casing cases step also captures new requirement completely unknown attributes happily pass considerations aria data attributes still pass validation aria attributes moved developmentonly allow warn unexpected aria attributes attributes seem like aria attributes eg minor deviation pass everything approach seems sensible handling custom element attributes changed handling special attributes eg changed note approach adding support new dom attribute still possible minor version long different casing people would get warning new canonical name least old name might using would still work unlike case completely disallow second name known attributes allow custom attributes general", "num": "10399", "d": "8/2017"}, {"title": "reactnativefbsdk setup", "body": "bug report trying setup reactnativefbsdk fails followed steps given link get following error want installation go successfully currently using version react trying first time way found reactnativefbsdk raise issue hence raising please help", "num": "10398", "d": "8/2017"}, {"title": "onmouseleave strange behaver disabled child element", "body": "bug report demo contains disabled button react trigger correctly div trigger mouse button move div tried amp chrome issue sure whether appear", "num": "10396", "d": "8/2017"}, {"title": "nonissue need advise adding authentication react app", "body": "fact would like integrate facebook authentication react app save user credentials database along additional data used authenticate api idea handle authentication authorization react app went books none touched aspect point book tutorial link whatever think point right direction thanks advance", "num": "10395", "d": "8/2017"}, {"title": "issue", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10392", "d": "8/2017"}, {"title": "request exports htmldompropertyconfig svgdompropertyconfig ariadompropertyconfig", "body": "feature request react htmldompropertyconfig svgdompropertyconfig ariadompropertyconfig available directly eg however longer available think public parts reactdom inevitable implement library build react dom html text see use", "num": "10391", "d": "8/2017"}, {"title": "reacttestrenderer shallow api mismatch", "body": "want request feature report bug feature currently different apis reason would helpful switching shallow supported put together pr interest reacttestrenderer javascript import testrenderer reacttestrenderer renders gt const result testrenderercreate expect result tomatchsnapshot shallow javascript import shallowrenderer reacttestrenderershallow renders gt const renderer new shallowrenderer const result rendererrender expect result tomatchsnapshot", "num": "10390", "d": "8/2017"}, {"title": "attribute needed guaranteed react", "body": "gaearon mentioned react guarantee attribute set probably bug understand well react ensure property set anyway current behaviour react renders html element without attribute explicitly passed demo time pen made simple example setting element obtaining result actually property set well since original medial file audio track pen result muted point think specific need expected behaviour functionality pov absolutely ok component renders muted requested browsers policies specifically related issue webkit new policies ios updated one year ago interesting changes element part interested elements also allowed autoplay without user gesture specific need explicit tell browser video could ed similar issue", "num": "10389", "d": "8/2017"}, {"title": "consider renaming rendertostream rendertonodestream", "body": "checkin code render stream looks like import rendertostream reactdomserver rendertostream text pipe response great however little concerned taking word node mix thinking may eventually want render browser streams really neat feature used concert serviceworkerside rendering would propose renaming would give room future make pr would chance accepted cc gaearon amp sebmarkbage", "num": "10388", "d": "8/2017"}, {"title": "unhandled error displayed twice", "body": "bit weird look last log notice internal error supposed give error boundary said uncaught wonder nt look like intentional", "num": "10384", "d": "8/2017"}, {"title": "array length read", "body": "hello new react trying run piece code following function use iterrate array run gives error uncaught typeerror read property length undefined someone help understand wrong thanks movimentionclick function idselected var itemsel null", "num": "10383", "d": "8/2017"}, {"title": "much unnecessary updates child element moved front", "body": "want request feature report bug sure bug accepted behavior affect performance situations even break expectations others eg animating moved elements ie simple moves current behavior child element moves end list front react actually moves elements movedlast element instead simply inserting moved element front list also stated generally element block elements moving backward significant shift current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo shows dom operations performed dom nodes moves amp insertions reconciliation reproduce issue type input field click type move last x front click output instead moving x front react actually moves elements x note demo uses mutationobserver api find operations also verify behavior directly commenting code activates dom observer componentdidmount watch dom operations manually devtools element inspector expected behavior react perform minimal number operations know minimum vary situation trivial infer general case common cases like one feasible info use case handled virtual dom libs like preact snabbdom inferno remarkable case always infer minimum number operations uses algorithm find longest increasing subsequence array containing indexes old elements found behavior working demo find vdom libs rearrange nodes children reconciliation example output libs demo versions react browser os affected issue work previous versions react demo uses version tried behavior", "num": "10382", "d": "8/2017"}, {"title": "better explanation component nt imported", "body": "want request feature report bug feature current behavior console expected behavior", "num": "10381", "d": "8/2017"}, {"title": "dispatch blur event siblings", "body": "two elements level onblur handler one element loses focus callback try dispatch blur event second element maximum call stack size exceeded error console try example jsfiddle click second element press tab button lose focus example link version", "num": "10380", "d": "8/2017"}, {"title": "\u7ec4\u4ef6\u5b9e\u4f8b\u5316\u7684\u95ee\u9898", "body": "", "num": "10379", "d": "8/2017"}, {"title": "number input firing onchange", "body": "know bug feature since put input type number two minuses stop calling callback value inside input change react browser version official build", "num": "10370", "d": "8/2017"}, {"title": "dynamically created element unable load dangerouslysetinnerhtml", "body": "dangerouslysetinnerhtml getting loaded component rerenders sample declaration dynamic component sample usage", "num": "10367", "d": "8/2017"}, {"title": "async toplevel hook commit", "body": "nt needed think missing toplevel api want integrate nonreact code around async way probably parents around always case want show parents react done maybe hide show callback time however would better could start building tree async react get callback trigger lifecycles insert tree actual dom whatever manipulation need trigger lifecycles way css layout information available virtue document already see two possible routes call hook commit immediately b invoke callback pass another function function invoked actual commit approach precedence dom append async offscreen canvas second option probably preferable efficiently cleanly", "num": "10366", "d": "8/2017"}, {"title": "make google chrome devtool play well reactjs", "body": "hi usually difficult debug reactjs site know react redux work many projects nt follow official document write bunch code customize make project difficult understand easiest way know whole working flow follow debugging chrome devtool nt play well reactjs example breakpoint nt hit print nt hit breakpoint want know error come find familiar node package need debug lines ca nt set breakpoint wrong scope see scope shows googled nothing helpfuli really want working debug solution would help much", "num": "10365", "d": "8/2017"}, {"title": "adding image tag inside react component throws error", "body": "working app trying use image tag thought something setup stripped everything zero indexhtml indexjs import react react import reactdom reactdom reactdomrender documentgetelementbyid app image renders properly get error console reads digging source error thrown following function inside given dom node return closest reactdomcomponent reactdomtextcomponent instance ancestor function getclosestinstancefromnode node node internalinstancekey return node internalinstancekey walk tree find ancestor whose instance cached var parents node internalinstancekey parentspush node nodeparentnode node nodeparentnode else top tree node must part react tree unmounted potentially return null var closest var inst node amp amp inst node internalinstancekey node parentspop closest inst parentslength precachechildnodes inst node return closest nt matter put image inside component surrounded divs siblings alone nothing gets rid error", "num": "10363", "d": "8/2017"}, {"title": "throw host component function child", "body": "surprised throw neither stack fiber always indicative mistake", "num": "10360", "d": "8/2017"}, {"title": "reactdomfactories peerdep", "body": "want request feature report bug bug current behavior reactdomfactories peerdep react seems though work react current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior reactdomfactories works react versions react browser os affected issue work previous versions react react", "num": "10358", "d": "8/2017"}, {"title": "react shallow renderer batched updates discussion", "body": "react comes new completely rewritten shallow renderer new renderer nt currently provide method issue discussion whether implement method cc flarnie lelandrichardson recently discussed wrt potential impact enzyme cc initially added integration enzyme also provided example implementation", "num": "10355", "d": "8/2017"}, {"title": "docs add note checkboxesradios preventdefault", "body": "want request feature report bug add note docs preventdefault causing issues change handlers checkboxesradios current behavior note issue docs made pr merged got lost removed new docs helping someone exact issue asked nt covered docs expected behavior explanatory note docs", "num": "10354", "d": "8/2017"}, {"title": "wrong child key prop warning babelplugintransformreactinlineelements", "body": "want request feature report bug feature bug current behavior warning seems say inside inside component incorrect key props actual fact element inside inside component causing problem looking things add key prop warning disappears warning also disappears remove ref string know deprecated nt get warnings seems like string refs key prop warnings might combining somehow another reason confusing component array inside children iterate anything think keys actually really required component looks like svganimation looking things expected behavior targeted warning either problem key props problem string refs clearly separated also targeted correct element case instead versions react browser os affected issue work previous versions react react", "num": "10352", "d": "8/2017"}, {"title": "onchange event nt fire trying type value input using appium ios", "body": "want request feature report bug bug current behavior onchange event nt fire trying type value input using appium type value programmatically current behavior bug please provide steps reproduce possible minimal demo problem via similar template also tried android work fine relates ios expected behavior onchange event fired trying type value input using appium versions react browser os affected issue work previous versions react react since works fine iphone ios appium", "num": "10347", "d": "8/2017"}, {"title": "permissive rehydration logic", "body": "last little pursuing idea called react snapshot instead running code node environment generate static html run virtual browser jsdom chrome headless take snapshot dom particularly moment time host snapshots like static file technique also known prerendering tossing around different api choices order handle components async data fetching requirements already starting see real promise approach snapshot environment similar client one far fewer changes needed get performance amp accessibility benefits serving real html users example react snapshot async api make component snapshottable diff import snapshot reactsnapshot class home extends reactcomponent state quotes null componentwillmount snapshot gt fetch apiquotes response gt responsejson quotes gt thissetstate quotes render const quotes thisstate return quotes amp amp quotesmap quote gt idea async parts app wrapped call caches responses rehydrates client however hit walls think means need changes react take logical conclusion hence wanted start discussion whether changes would compatible react future direction rehydration far tell experimentation reading code two criteria reusing existing dom elements prerendered html page hash initial clientrendered markup match present instance render tree needs match dom element two criteria enforced structure content dom kinda see checksum cheapest way confirm structure id element needed actually wire everything also attribute could calculated something longer present html however generating exact right checksum way existing ssr api turns pretty difficult htmlescaping woes hit problem rendering react app like normal taking root container passing addchecksumtomarkup getting checksum first realised needed add element along way nt hard still nt working figured due escapetextcontentforbrowser converting things like meaning content appears rendered precise string therefore checksum rehydration takes place understand reading code react always sanitises html content generating markup server client fact injected dom nt resanitise things like quotes nt technically need discussed issue changed particular problem would disappear may well nt hit yet real issue needing content byteforbyte equivalent rather functionally structurally equivalent interim solution moment realised easier boot app entirety wait async processes take place effectively reboot app using splice markup place sideeffects relying like css injection meta tags head affect dom outside react app preserved markup checksum reactrendered html guaranteed correct works ideal still understand components running two different modes run different lifecycle methods one generates final snapshot think adds unreasonable conceptual burden much way serverrendering really problem see status quo started looking problem first place snapshotserver rendering requires much overhead people wo nt exactly createreactapp nt include none options simple enough broad enough applicability official react router docs warn agains combining serverrendering codesplitting serverrendering boilerplates include fairly specific webpack hacks provide environment server client etc result people ever clientrendering serve blank page amp render everything clientside code splitting service worker caching offer useful advantages imo enough snapshot rendering could solution offer big benefits small changes application code dream solution architecturally like arbitrary react app launched one browser executed ready async resources complete snapshotted serialised html resumed another browser snapshots would generated cached edge cdn deployment periodically depending often content changes practically think would require two changes react architecture first weaker check fingerprint hash escaped html method snapshot indicate react reuse much existing dom possible second would parts tree rehydrated rather whole thing component sideeffect say snapshotted html would include result sideeffect app boots client side render method generate initial behaviour moment react would replace rendered might preferable leave dom unchanged first render wire things later nt know exact specifics solution know enough internals react become wanted start discussion see interest react team amp wider community use case direction look forward hearing thoughts", "num": "10338", "d": "8/2017"}, {"title": "delete raf reactdomframescheduling", "body": "nt use raf scheduling anything anymore yet still enable reactdomframescheduling probably simplified bit exposing", "num": "10336", "d": "8/2017"}, {"title": "move benchmark dependencies main packagejson", "body": "nt require working react let move similar take time space regular installs", "num": "10335", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "thing special ocaml already firstclass language feature would bypass use also syntax sugar accessing value", "d": "8/2017"}, {"body": "ref object allocated separately great refs perhaps prevalent enough really concern practice would probably even end faster people use inline fatarrow syntax currently inefficient could one imagine form would work arrays elements ie want keep ref items list otherwise seems problematic users achieve react prefer style", "d": "8/2017"}, {"body": "guessing would nt unthinkable native support refs either would act exactly value referencing except way updating ref eg", "d": "8/2017"}, {"body": "suppose one issue nt actually compile bucklescript compiles opaque object like would nt know data structure signature anyway maybe indeed use ref callbacks interop layer cc chenglou", "d": "8/2017"}, {"body": "record compiles array single item internal representation though unlikely change bit torn", "d": "8/2017"}, {"body": "thanks followup strong opinion since poweruser feature sake reactjs js users let keep api minimal always cc jordwalke", "d": "8/2017"}, {"body": "like idea introducing new component type serves target reason react compiler experiments trueadm mark unstable let us try new apis faster pace usual release cycle ongoing async investigations could also benefit", "d": "8/2017"}, {"body": "short introducing whole new component type could sufficient case seems like several projects could benefit experimental component api surface", "d": "8/2017"}, {"body": "seeing warning proptypes think may seeing warning place", "d": "8/2017"}, {"body": "issue happens proptype definition sorry updated description accordingly fiddle", "d": "8/2017"}, {"body": "see expects proptype function class want instead", "d": "8/2017"}, {"body": "thanks jquense", "d": "8/2017"}, {"body": "small suggestion update documentation might handy given pretty common use case using thanks", "d": "8/2017"}, {"body": "try beta", "d": "8/2017"}, {"body": "try beta would nice back using react really like btw nt copy last line code obviously", "d": "8/2017"}, {"body": "downloaded react ran yarn install yarn build copied project copies project note realized cra easy button strategy overwrite real files using procedures using production build got following results ran twice sure memory start memory end difference memory start memory end difference note also particularly careful verify using newest version testing looking chrome gt sources gt gt static gt nodemodules gt react gt reactjs reactdom gt indexjs confirmed using right files looking source let know anything assist", "d": "8/2017"}, {"body": "look objects retained", "d": "8/2017"}, {"body": "nevermind appears testing methodology broken look like problem react rather problem chrome happened testing actual application noticed chrome tab developer tools insanely large mb closed noticed chrome task manager stopped showing steady growth application troubleshooting seeing growth like mb per hour application developer tools open went back react test time left chrome developer tools closed watched task manager originally left developer tools open could trigger gc without developer tools open saw automatic gc process get triggered every often memory would regularly drop way kinda reminds quantum physics day something schrodinger cat going close ticket", "d": "8/2017"}, {"body": "hi piu issue uncommon one pretty frustrating performance bottleneck big lists web react generally lists large want save browser extra work actually rendering lists items visible maybe like items time user scrolls render remove previous ones technique generally called windowing virtualizing lists good libraries exist building sorts lists including reactvirtualized reactlist addition perhaps instead try make use list item components ones change actually update well making sure probably better luck getting feedback well using one many excellenet support avenues issue tracker generally reserved bug reports feature requests", "d": "8/2017"}, {"body": "also figured performs insertbefore performs insertbefore depends direction think", "d": "8/2017"}, {"body": "thanks report bgnx essentially duplicate please direct feedback issue thanks", "d": "8/2017"}, {"body": "hi looks like issue reactrouter react probably bug unfortunately give support packages use react would try rr repository various support avenues stackoverflowcom discord", "d": "8/2017"}, {"body": "please see", "d": "8/2017"}, {"body": "hey marcusmann definately import use external javascript react see error nt related react using libraries seems like trying use twitter bootstrap without including jquery requires try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms listed get support doc page might also want try bootstrap support options", "d": "8/2017"}, {"body": "unless us patents plan sue facebook patent infringement lawsuit costs lot money even prepare case way license affects plan sue facebook patent infringement suggest consult lawyer rather github hope helps", "d": "8/2017"}, {"body": "nt would nt worry nt cost using props javascript engines smart enough waste resources react would nt save work nt pass function", "d": "8/2017"}, {"body": "hey sospedra test renderer mock components react react native according jest docs react native provides default mocks jest would recommend referring react native support resources issue tracker help thanks", "d": "8/2017"}, {"body": "hey welcome try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms listed get support doc page", "d": "8/2017"}, {"body": "still difference would add event listeners component lifecycle hooks like way need render component server wo nt complain missing object", "d": "8/2017"}, {"body": "add report looks like react updating field triggered update event first place see visual explanation", "d": "8/2017"}, {"body": "tested works well broken starting", "d": "8/2017"}, {"body": "jsfiddle jsfiddle", "d": "8/2017"}, {"body": "broken tested via createreactapp", "d": "8/2017"}, {"body": "sure got introduced via", "d": "8/2017"}, {"body": "btmpl code example working", "d": "8/2017"}, {"body": "cc nhunzaker", "d": "8/2017"}, {"body": "people ask web devs keep writing ui input libraries instead using native inputs stuff", "d": "8/2017"}, {"body": "checked present firefox safari well chrome related introduced chrome related pr", "d": "8/2017"}, {"body": "duplicate happening react parses number input value number comparison check call parses comparison new incoming value decide update input value since already parsing input number values end decides nt need update input one solution might compare values strings well", "d": "8/2017"}, {"body": "thanks aweary thought close stick", "d": "8/2017"}, {"body": "yup closing duplicate", "d": "8/2017"}, {"body": "care submit pr think dev usage proxy might work may ecosystems concerns approach folks weird things give shot want send", "d": "8/2017"}, {"body": "could direct request proptypes repo warning longer part core react library thanks", "d": "8/2017"}, {"body": "thanks suggestion nt see problem cc gaearon probably add knows", "d": "8/2017"}, {"body": "hey try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms listed get support doc page", "d": "8/2017"}, {"body": "ca nt speak team think plently cases ok choice example case think better choice function ref especially nt control components need add ref maybe gaearon speak bit potential deprecation initial issue seems like worked around reasons wanting remove unless gone missed something huge p", "d": "8/2017"}, {"body": "hi passing browser globals would really tough change make would involve substantial rewrite huge swatches codebase allow ca nt speak core team hunch nt going think worth luckily however ways around issue node vm module creating new isolated js contexts hunch would test runners surface option allow test run new context may good reasons sort thought jest already cc cpojer", "d": "8/2017"}, {"body": "yeah unfortunately possible however could create test file per test", "d": "8/2017"}, {"body": "fix problem removed works fine", "d": "8/2017"}, {"body": "cc aweary nhunzaker properties expect true false values know aria boolean attributes cursory look boolean attributes default grep page matches compare means could true true omit attribute false think might compatible almost every case html string treated boolean value true valid attribute know whose behavior different already special case guess keep", "d": "8/2017"}, {"body": "attempting summarize proposals proscons far option stringify pass booleans pros consistent way react currently treats known attributes already implemented cons probably engineer wants expects code could create bugs foo false may get treated foo true browsers option render implicit boolean attribute either adding value passed removing passed pros consistent spec probably closest desired behavior would fix cons needs implemented change behavior known attributes well order consistent introduces inconsistency introduces another flavor behavior attributes react could confusing maybe problem option remove booleans warn pros consistent treat invalid values like functions behavior master could achieved minor updates cons would require minor updates nt totally consistent spec boolean attributes might unexpected users edit please correct anything missed thanks everyone chimed", "d": "8/2017"}, {"body": "also wanted share let try keep behavior consistent known attributes unknown attributes possible limit number colors used simpler users fewer variation react deals property values", "d": "8/2017"}, {"body": "iiuc far know option downsides never cause wrong behavior know right sounds compelling", "d": "8/2017"}, {"body": "means could true true omit attribute false spicyj setting boolean attributes true nt valid according html spec section boolean attributes attribute present value must either empty string value ascii caseinsensitive match attribute canonical name leading trailing whitespace values true false allowed boolean attributes especially problem custom elements outlined download true attribute know whose behavior different another enumerable attribute accepts suggesting known attribute expects stringified boolean stringify calling unknown attribute treat false boolean attributes according spec setting attribute empty string caseinsensitive match attribute name removing attribute otherwise call stringified value", "d": "8/2017"}, {"body": "spicyj actually prior version custom attributes feature gaearon dug spec found attributes expected truefalse strings html svg", "d": "8/2017"}, {"body": "aweary correct behavior though right practice would test hasattribute since common checked common checked nhunzaker ah like autocomplete false would need become autocomplete false good find", "d": "8/2017"}, {"body": "spicyj existing behavior nt correct renders spec also explicitly states valid value boolean attributes suspect may implications extending past whether returns right value example custom elements", "d": "8/2017"}, {"body": "think aweary suggesting makes sense already stringy boolean attributes list still allow boolean values filter change way boolean attribute actually written", "d": "8/2017"}, {"body": "aweary still curious behavior assign string nt match spec", "d": "8/2017"}, {"body": "nhunzaker weird know boolean attributes kind spec exist nt using remove boolean attribute nt make sense given api setting attributes spec states use boolean attributes value least interpretation ca nt speak motives spec authors", "d": "8/2017"}, {"body": "still allow boolean values filter change way boolean attribute actually written dompropertyoperations dommarkupoperations maybe could coerce known enumerable attributes expecting booleans strings earlier code path coerce call maybe pass flag either way think implementing behavior nt complex", "d": "8/2017"}, {"body": "sebmarkbage pointed nt actually consistent behavior booleans sometimes get stringified sometimes maybe let add context thought stringifying default", "d": "8/2017"}, {"body": "clarify position mostly advocating following spec unknown boolean attributes compatibility concerns set knownpreviouslyknown attributes totally makes sense get behind special casing behavior think default approach attributes information consistent spec possible", "d": "8/2017"}, {"body": "arguing conformance spec case like nt matter far tell attributes described spec behave attribute present even though spec says truefalse nt correct interpret warning writing true html would liable think false would work false nt case writing true manually refactoring hazard html argument nt translate react true behaves browsers nt see downside passing true", "d": "8/2017"}, {"body": "arguing safer conform spec unknown attributes accept booleans especially context future boolean attributes may depend behavior defined spec also concern custom elements outlined maybe robdodson provide insight importantly matter boolean attributes value since browsers definitely nt treat absent attribute think would confusing stringified nt makes sense follow spec cases downsides already whitelist boolean attributes special case stringify compatibility concerns next major treat truly unknown attributes spec describes", "d": "8/2017"}, {"body": "advantage true vsomit use logic", "d": "8/2017"}, {"body": "spicyj aweary different implementations whether translate vs unknown attributes", "d": "8/2017"}, {"body": "want support enumerated attributes boolean values renders need include branching logic think reused aria attributes nhunzaker removing attribute instead stringifying unless agreement", "d": "8/2017"}, {"body": "also arguing false omit attribute unknown attributes", "d": "8/2017"}, {"body": "spicyj said means could true true omit attribute false empty string think could remove every entry htmlpropertyconfig need like exceptions string values design standpoint like removes code", "d": "8/2017"}, {"body": "spicyj hah sorry spoke", "d": "8/2017"}, {"body": "spicyj somehow skimmed part even quoted thanks clarifying nhunzaker want keep stringifying boolean attributes already stringified probably need keep whitelist right sure point clear though concerned even able remove following major would nice", "d": "8/2017"}, {"body": "oh wait implements behavior advocating nevermind point", "d": "8/2017"}, {"body": "right think safely remove could nonbreaking", "d": "8/2017"}, {"body": "sure following exactly discussing think removing hasbooleanvalue breaking since changes happens pass nonboolean values", "d": "8/2017"}, {"body": "ah correct context happens breaking change would could technically assign string value one attributes need pass boolean get expected behavior empty string assuming go aweary approach maybe fine would nt spec compliant spicyj suggested earlier maybe presence enough would still remove value taking example hasbooleanvalue prop using string coerces true assigns attribute best spec compliant worst everything works expected right breaking change markup whatever string pass gets used like instead nt think breaking change functionally unless course consistent beyond example", "d": "8/2017"}, {"body": "think meaningful difference today hasbooleanvalue counted false would nt count attribute unknown everything else probably nt matter practice", "d": "8/2017"}, {"body": "note list incorrect example use probably one two believe nt use either rather attribute exists vs exists", "d": "8/2017"}, {"body": "note list incorrect autocomplete example use true false autocorrect probably one two thank sent pr addresses believe hidden nt use truefalse either rather attribute exists vs exists yep boolean property assigning set property however setting truefalse react result addingremoving attribute really convenient boolean properties avoid things like made default behavior could add flag said always stringify property would target attributes", "d": "8/2017"}, {"body": "yep hidden boolean property assigning ie exist guess point properties expect attribute attribute different falsetrue even nt conflated eg imho spellcheck really take string imagine spellcheck getting another enum value future signify different behavior assuming reason considered boolean attribute true default really serializing perhaps never done want keep consistent prefer avoid whitelist seem weird specify value spellcheck opposed", "d": "8/2017"}, {"body": "canonical way expressing easy find simply use property instead attribute read attribute preference keeping attribute consistent get using property", "d": "8/2017"}, {"body": "highlevel approach sound maintain current whitelist enumerated attributes rely coercion right add warning booleans used would warn advise use attributes currently whitelisted add warning use value would semantically different treated boolean attributes would warn advise use unknown boolean attributes call would keep attribute consistent get assigning property alternatively keep setting full string value concerns move using remove warnings whitelist assume boolean value means boolean attribute", "d": "8/2017"}, {"body": "enumerated attributes rely coercion right add warning booleans used spellcheck true would warn advise use spellcheck true makes sense feels unfortunate dom dang wonky p would silently fail tho", "d": "8/2017"}, {"body": "maybe could keep warning indefinitely nt costly devonly check", "d": "8/2017"}, {"body": "plan described aweary sounds good", "d": "8/2017"}, {"body": "hi upanicon never noticed behavior hunch actually chrome bug nt believe mounts events keep firing outside window honestly bit surprised tho react nt behavior well since using native events know fire synthetic events maybe aweary nhunzaker insight quirk playground", "d": "8/2017"}, {"body": "hi jquense dont see bug chrome guess behavior workaround break drag events noticed dragging popup window handler inside synthetic event motion stop mouse moved fast addeventlistener mousemove keeps moving", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "currently supported existing issue", "d": "8/2017"}, {"body": "currently getting width componentdidmount way refs finddomnode works initial load get slightly incorrect measurement refreshing correct every time open page new tab see incorrect behavior visual changes delayed various reasons special fonts loaded rendering images loaded rendering styles applied rendering etc common problem afaik reliably listen usually shows mention fails first render works refresh everything cached", "d": "8/2017"}, {"body": "node would usually however technically nothing prevents using reason browser client note refers probably nt need though", "d": "8/2017"}, {"body": "gaearon thank much helps lot", "d": "8/2017"}, {"body": "think checking attributes start best approach preact inferno already preact inferno related conversation customfuture event support depending timeline might possible would adding custom event support require major release going investigate event prototype gives us anything handler string guessing looks like correct maybe might nice guard even long shot", "d": "8/2017"}, {"body": "checking spec nt found anything yet less says events start believe safe disallowing anything outside boundary allowing functions would reasonable address issue", "d": "8/2017"}, {"body": "even events start might others another fun xss example js else used", "d": "8/2017"}, {"body": "still provide protection right really apples apples seems like far common mistake easily overlooked always edgecases hugely problematic spreading onto aformstylescriptobjectembed objectembed could probably huge values objects anywhere spread problematic style vulnerable neither forget spreading usersupplied values onto component theoretically anything thirdparty scripts site could also imagine quite complex attacks react simply defend wonder would nt preferable address sense spreading props manner obviously exploitable likely someone lololtroll fun quickly rather someone intentionally malicious finding complex edgecase future would catastrophic spreading usersupplied props bad time imho makes sense add blacklist would straight throw strongly worded error hopefully shows error tracking", "d": "8/2017"}, {"body": "hey lanseria looks like issue related jsbin compiling javascript jsfiddle code see running fine pausing exceptions jsbin example found failing due utility method failing exit loop nothing wrong code looks issue jsbin", "d": "8/2017"}, {"body": "hey gitfortress try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms listed get support doc page", "d": "8/2017"}, {"body": "would add comfortable configuring webpack consider using officially supported create react app instead", "d": "8/2017"}, {"body": "highlighted line presumably causes error react search find coming please file issue corresponding project", "d": "8/2017"}, {"body": "gaearon suggest need react component rendering ie properly rendering browser", "d": "8/2017"}, {"body": "believe commented nt seem related react find code coming try figure bundle use forum like stackoverflow minimal example maybe somebody help", "d": "8/2017"}, {"body": "want know guys take gave example personally think right open source creating communities build better software together facebook dignity license good risky open source shall ask really open source", "d": "8/2017"}, {"body": "cc zpao gaearon sir please would great reply", "d": "8/2017"}, {"body": "somehow got problem facebook inc doesnt anything react open source matter sue facebook due reasons even dont anything codes additional patent grant revoked sue facebook patent infringement something else explicitly said clause also called faq unless filed us patents bought decided sue facebook violation patents would alone cost lot money preparing lawsuits way clause affects clause nothing whether compete facebook fact twitter arguably facebook competitor happily using react ca nt offer legal advice hope helps", "d": "8/2017"}, {"body": "hey dang nothing like legal advice creating startup atleast right sure asking simply open source good open source gaearon ps standing open source rights startuplegal advice", "d": "8/2017"}, {"body": "open source yes", "d": "8/2017"}, {"body": "ok provided links reddit forums comment closing comment sorry closing issue personally still believe reason close github issue", "d": "8/2017"}, {"body": "issue tracker react react native please ask question react native repository instead said error message seems like module trying use depends node apis nt exist react native probably need use rnspecific apis", "d": "8/2017"}, {"body": "actually react issue try open mdn specs safari firefox similar behavior first check wan na number validation check example", "d": "8/2017"}, {"body": "hey mrerhu known issue duplicate mentioned mostly browserdependent easy way react prevent since browser nt triggering event data need detect prevent please refer information thanks", "d": "8/2017"}, {"body": "duplicate", "d": "8/2017"}, {"body": "aweary thank much", "d": "8/2017"}, {"body": "necmttn demo provided suitable need type call virtual keyboards mobile phone", "d": "8/2017"}, {"body": "make wo nt change effect tough need play css bit hide spin toolbox check", "d": "8/2017"}, {"body": "link codepen", "d": "8/2017"}, {"body": "working pen settings need add current versions codepen uses", "d": "8/2017"}, {"body": "since response closing assuming tsmvision figured issue", "d": "8/2017"}, {"body": "directory structure nt known jzjpg loading failure", "d": "8/2017"}, {"body": "github repo look", "d": "8/2017"}, {"body": "gitfortress nt enough information us help think issue react please provide information requested issue template deleted said seems like usagesupport question would check build setup make sure image loading setup correctly since nt think bug react going close please check one many great community support resources help questions like", "d": "8/2017"}, {"body": "please provide minimal example reproducing issue", "d": "8/2017"}, {"body": "working wanted make sure nt something obvious missing", "d": "8/2017"}, {"body": "probably trying reference use reactdom without importing requiring file want check line number referenced stack trace see problem", "d": "8/2017"}, {"body": "hard mecan solve released github try say thank", "d": "8/2017"}, {"body": "would put together reproduction bug try better support avenue like much easier get help vs bug tracker", "d": "8/2017"}, {"body": "yes use object react code run browser access normal browser dom api objects term virtual dom misleading react nt replace alter dom instead keeps description component tree compares next version something updates react components updates dom smallest set changes necessary think objects react change dom nodes manually without going react update cycle may confuse react break things suggest working guides react website get better understanding things interact one specifically using dom directly", "d": "8/2017"}, {"body": "hey bonjowi added basic code reproduce issue jsfiddle however nt see key error displayed jsfiddle unfortunately hard help ca nt reproduce issue occurring jsfiddle means likely reason key warning triggered sounds like passed array elements child could try write minimal example reproducing issue could look", "d": "8/2017"}, {"body": "aweary thanks time adding case createreactapp project cause error presumably something else react causing problem currently trying figure wrong get touch found problem", "d": "8/2017"}, {"body": "wild guess maybe productiononly transform like preset including accidentally enabled development", "d": "8/2017"}, {"body": "thanks gaearon confirm babelplugintransforminlineelements causing problem started stripping webpack configs etc found causing problem also reproduced issue createreactapp ejecting adding custom babelrc containing presetreact plugin transformreactinlineelements interested upload repository reproduce issue way issue repository mistake thanks help", "d": "8/2017"}, {"body": "expected babel doc page plugins says going cause confusing warnings used development", "d": "8/2017"}, {"body": "curious path leads component instance first place assume json output test renderer nt expose might wrong maybe using ref something like case nt sound like bug nothing wrong per se circular references ca nt say sure fix working nt appear something need fix side case describe circular reference component method component instance seems expected", "d": "8/2017"}, {"body": "gaearon thanks reply sure understand question trying locate deeply nested values results called testrendered component certainly suggesting circular reference bug however might make introspection objects little easier properties enumerable read included regardless able come another solution particular case seems working alright feel free ponder merits making properties nonenumerable wo nt press changes time thanks", "d": "8/2017"}, {"body": "code path hot defining properties sufficiently slower simple assignment wo nt", "d": "8/2017"}, {"body": "til reference found", "d": "8/2017"}, {"body": "workaround", "d": "8/2017"}, {"body": "way use button pause exception try use whenever possible whenever trying debug unexpected exception code pause caught exception use think exception might get caught trycatch also tends include lots feature tests nt care react nt recommend use exceptions except programmer errors prefer react user always show pause exception despite error boundary error boundaries failsafe check nt expect hit normal operation sure folks different perspective", "d": "8/2017"}, {"body": "honestly would love annotate individual trycatch blocks source feature test vs error handling real errors latter always stop former stop special mode", "d": "8/2017"}, {"body": "whatever preference plenty libraries internally use exceptions never found pause caught exception ever useful since produces incredible number false positives still react grain browser provided exception debugging tools agree inadequate", "d": "8/2017"}, {"body": "one reason chose way expect best practice react apps always toplevel error boundary nt whole app unmount whenever uncaught error disable feature inside error boundaries effectively disable errors originate inside react lifecycle render method", "d": "8/2017"}, {"body": "would nice get actual data often people rely feature personally number times used small zero", "d": "8/2017"}, {"body": "toplevel component error boundary fine errors occur rendering lifecycle callbacks address code responds network toplevel events need hook precisely ran problem", "d": "8/2017"}, {"body": "brandonbloom right mean say decide always use trycatch inside error boundaries effectively deciding use trycatch everywhere case remove entirely use trycatch directly might right thing tradeoff either way", "d": "8/2017"}, {"body": "think right thing let discuss tradeoff one hand removing logic replacing standard trycatch behavior less code better match standard pause caught exception behavior wonkiness necessary dev vs prod respect workaround quite kludgey even provided way better distinguish sorts error events hand debugging caught exceptions slightly annoying although annoying general outside react workaround annoyance simply disable error boundary components either configuration flag commenting like commenting block moreover stacktrace rendering boundary component gets popular workaround unlikely necessary want actively debuginspect error object case adding statement trick get stack trace either browser console boundary component rendering overlooking things favor keeping logic", "d": "8/2017"}, {"body": "think right another benefit removes problem crossorigin errors obscured error event dev sebmarkbage strongest feelings preserving feature recall correctly could additional factors forgotten", "d": "8/2017"}, {"body": "noticed voodoo nt immediately affected nt want comment general feels like one situations complications sufficient justify less interest avoiding compounding complexity", "d": "8/2017"}, {"body": "clear nt affect error boundaries errors caught preserve consistency effectively builtin boundary root even rethrow still considered caught common practice outside react would significant downside ecosystem full things cause noise eg open pause caught exception could possibly find fix callsites takes popular libraries agree change momentum everyone game theory plays pausing uncaught exceptions winning strategy therefore think proposal effectively becomes pausing exception viable default react apps flag turn would technically work discoverable scalable every lib know previous versions people get confused subsequent errors happens due inconsistencies ca nt properly clean would make debugging experience worse things every developer affected meanwhile top level handling relatively rare deal explicitly deal site usually one person deals implementation details error boundaries typically log errors anyway dev mode case someone forgets handling turns way easy silence errors make debugging silent ones pain part happens anyway similar unhandled promises maybe always raise top level events even prod", "d": "8/2017"}, {"body": "brandonbloom elaborate set would nt want handle error including boundaries eg logging expect anything treated error logged somewhere", "d": "8/2017"}, {"body": "even rethrow still considered caught huh tried individually various options firefox chrome behavior matches expectations rethrowing considered uncaught meanwhile top level onerror handling relatively rare deal explicitly deal site usually one person deals implementation details freely admit person pretty much every project ever work", "d": "8/2017"}, {"body": "rethrowing considered uncaught yea meant rethrow callsite break point happens would somewhere react internals way later source error happened case nt provide value log", "d": "8/2017"}, {"body": "sebmarkbage system bunch background processing fails future event handlers sync system cascading failures could wrap every callback every subsystem trycatch asynchrony makes practical hook windowonerror want log error server course also want display fatal error screen dev would show trace prod would akin browser tab", "d": "8/2017"}, {"body": "yea meant rethrow callsite break point happens ah ok understood compelling argument heard thus far think proposal effectively becomes pausing exception viable default react apps experience pausing exceptions viable javascript scenario ever encountered admit atypical probably unnecessary aside javascript indeed exception handling mechanisms semantically broken go contrast runs deferrecover logic prior unwinding stack context point original throw would available point last uncaught rethrow short fixing every major browser debuggers nt better solution propose however say still think disease worse cure long get stack trace add conditional debugger statement site original throw", "d": "8/2017"}, {"body": "tangentially related problem lot responsibility put users trycatch async promises error boundaries ensure error gets propagated centralized handler properly logged server message displayed dev people mess time added even error caught error boundary seems rationale extends use case ideally want log show dialog even error handled poorly constructed third party error boundary render fallback view would argue us issuing global event prod hand local error boundaries designed play nicely global error dialog screen logging want explicitly state properly handled error poorly constructed thirdparty error boundary maybe solution could api tags errors handled js class foo extends reactcomponent componentdidcatch error serverlogerror error thissetstate diderror true markashandled error", "d": "8/2017"}, {"body": "ideally want log show dialog even error handled poorly constructed third party error boundary render fallback view consider bug party library would suppressed errors calls maybe solution could api tags errors handled code posted depends subtle order execution callbacks tried suspect wo nt work handler installed startup run handler react installs uninstalls rendering lifecycle method execution", "d": "8/2017"}, {"body": "consider bug party library issue bugs like unhandled promises common find happen users nt log server code posted depends subtle order execution callbacks true thinking prod case use trycatch dispatchevent could control ordering dev mode case like issue talking would nt work", "d": "8/2017"}, {"body": "thanks taking time write issue johnjesse far know interleaving native events react synthetic events nt something support listen events toplevel simulate bubble capture phases ordering events likely always sync native events", "d": "8/2017"}, {"body": "fair enough nt sure supported even supported although would nice able interleave native synthetic events without worrying potential ordering issues something really expecting took figure causing", "d": "8/2017"}, {"body": "available graphiql died", "d": "8/2017"}, {"body": "nothing side problem unpkg nt manage let track", "d": "8/2017"}, {"body": "fixed", "d": "8/2017"}, {"body": "cc mjackson file seems work known unpkg issue", "d": "8/2017"}, {"body": "nothing side problem unpkg nt manage let track unpkgunpkgwebsite hopeful solved soon wo nt need change cdn", "d": "8/2017"}, {"body": "thanks ping gaearon looking", "d": "8/2017"}, {"body": "new feature introduced final add documentation soon probably release rc nt expect parameter one containing change shortterm worth went named parameter gives us option add information backwardscompatible way", "d": "8/2017"}, {"body": "proposing change object keys proposing addrename keys include trace decomposable data javascript example call framework component thatcomponentdidcatch err text something bad happenednat foo bar n componentstack component foo createdby bar", "d": "8/2017"}, {"body": "understood offering explanation used namedparameter single param nt docs entry yet since available beta info mention would nt hard pass along think issue great keep around one us followup", "d": "8/2017"}, {"body": "related", "d": "8/2017"}, {"body": "given thought thinking following change might nice js type source filename string linenumber number type stackframe name string null ownername string null source source null passed function injected via reactfibererrorloggerinjectioninjectdialog injectedfunction capturederror capturederror type capturederror componentname string componentstack string componentstackframes array error mixed errorboundary object errorboundaryfound boolean errorboundaryname string null willretry boolean passed componentdidcatch lifecycle hook componentdidcatch error error info errorinfo type errorinfo componentstack string componentstackframes array since proposal backwards compatible beta method signature going take stab", "d": "8/2017"}, {"body": "already deprecation warnings definitely welcome use forever split react proper deprecated nt problem using external pacakge", "d": "8/2017"}, {"body": "include fbme link like lodash think consciously nt add whole block seemed like build product source wording seems assume looking source code", "d": "8/2017"}, {"body": "take one spicyj gaearon", "d": "8/2017"}, {"body": "nt quite decided let wait hear back lawyers", "d": "8/2017"}, {"body": "let keep old headers time maybe condense future gzhappysky still interested", "d": "8/2017"}, {"body": "yes still interested complete today spicyj", "d": "8/2017"}, {"body": "supported use umd bundle node environment please either use node entry point precompile whole node app case alias umd bundles sure performance good news react everything bundle default wo nt need hack beta try hope helps", "d": "8/2017"}, {"body": "found react ssr executes takes want optimize version would release", "d": "8/2017"}, {"body": "month hopefully already try beta report issues", "d": "8/2017"}, {"body": "much", "d": "8/2017"}, {"body": "also nt follow onhandle convention activatelasers intro", "d": "8/2017"}, {"body": "like take issue", "d": "8/2017"}, {"body": "iansu cool help us release stable", "d": "8/2017"}, {"body": "cool would like arrived late", "d": "8/2017"}, {"body": "ahh iansu looks like skipped claimed really sorry iansu gabrielamazonas one interested writing test would caught added try trigger warning verify consoleerror called tests use checking warning example", "d": "8/2017"}, {"body": "iansu oh sorry nt realize different person paid closer attention bad", "d": "8/2017"}, {"body": "acdlite yes totally make pr directly", "d": "8/2017"}, {"body": "intentional known limitation streaming rendering impossible call back markup already sent opted keep rendertostring rendertonodestream output identical sebmarkbage ideas could potentially support something along lines one day small client runtime ex outputting script tags remove previouslysent content", "d": "8/2017"}, {"body": "intentional next next outoforder server renderer error boundaries nt really make sense inorder streaming server rendering since could already flushed boundary could buffer inside error boundaries would mean nt actually streaming rendering since best practice error boundary root could support rendertostring api easyish implement around high pri would likely go work outoforder renderer", "d": "8/2017"}, {"body": "ah got fault thanks closing issue", "d": "8/2017"}, {"body": "cc acdlite gaearon leidegre", "d": "8/2017"}, {"body": "could something funky caused eg eval", "d": "8/2017"}, {"body": "sure understand asking usercode maybe using repro accessing prop null value", "d": "8/2017"}, {"body": "looks like repro case starting tessinmini repo reduced jsx import react component react export default class app extends component state doerror false render return thisstatedoerror class errorboundary extends component state error null componentdidcatch error thissetstate error render thisstateerror return thisstateerrormessage return thispropschildren class componentthatfails extends component render const data null return datafoo console log uncaught typeerror read property foo null error pass crossorigin error thrown", "d": "8/2017"}, {"body": "think something bundling code tessinmini repo code cracreated app works expected maybe ssr logic", "d": "8/2017"}, {"body": "creating small standalone project ssrwebpacketc able reproduce unexpected behavior chrome loading content via seeing browser standalone standalone tessinmini dev tessinmini prod chrome firefox safari believe chrome considers files loaded always different domain launch chrome flag standalone file works loaded via protocol well also worth adding tessinmini example works expected production mode bc use regular trycatch unexpected crossorigin error affects devmode", "d": "8/2017"}, {"body": "eval meant webpack setting commonly used turns every module eval call shown separately devtools despite sourcemaps seems like determined nt issue", "d": "8/2017"}, {"body": "thanks clarifying absolutely right cause removing property webpack config clears issue project", "d": "8/2017"}, {"body": "probably encourage people stop using use instead fast afaik nt issues", "d": "8/2017"}, {"body": "interesting use setting reactvirtualized webpack config also nt show error super familiar webpack edit working rv project bc", "d": "8/2017"}, {"body": "worth ran devtools settings found devtool works default eval cheapevalsourcemap cheapsourcemap cheapmoduleevalsourcemap cheapmodulesourcemap evalsourcemap sourcemap inlinesourcemap hiddensourcemap nosourcessourcemap looks like default setting eval ones cause problems", "d": "8/2017"}, {"body": "put pr adds addition verbiage crossorigin devmode error mention", "d": "8/2017"}, {"body": "fyi leidegre solution issue replace webpack config", "d": "8/2017"}, {"body": "team chatted band briefly agreedupon solution change wording error message passed crossorigin error thrown react nt access actual error object development see details specified url blurb explains technique using devmode mentions tag attribute cdns webpack setting", "d": "8/2017"}, {"body": "bvaughn gaearon super happy could root cause thanks hard work enjoy weekend", "d": "8/2017"}, {"body": "welcome leidegre close loop added new docs page information crossorigin error causes", "d": "8/2017"}, {"body": "lgtm", "d": "8/2017"}, {"body": "thanks think react pretty cool", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "kepro thanks read article long time ago prefer js animation css animation reason use like gsap library anyway author article recommend use addons would like native realisation mean lifecycle method", "d": "8/2017"}, {"body": "could also work promises react supported promise return type would tell ifwhen wait resolve unmounting promise resolved proof concept action", "d": "8/2017"}, {"body": "making unmounting controllable component likely feature near future bunch reasources options tho dealing limitation though reacttransitiongroup lower level components help manage specifically component used animation libraries like greensock", "d": "8/2017"}, {"body": "makes sense think suggestion improvement would like open pr", "d": "8/2017"}, {"body": "flarnie sure thanks", "d": "8/2017"}, {"body": "flarnie created pull request", "d": "8/2017"}, {"body": "sure right nt know cases right wouldcould insert component existing dom node without overwriting existing children even could statement pretty vague edit spicyj earliest diff touching line kevin lacker big docs update context note referring", "d": "8/2017"}, {"body": "sorry confusing meaning become clearer think onclick prop square handleclick board two things eg b intended meaning note onclick dom component special meaning react could called b something else suggestions split sentence make clearer please let know thanks", "d": "8/2017"}, {"body": "note onclick dom component special meaning react could called onclick prop square handleclick board something else however common convention react apps use names handler prop names handle implementations", "d": "8/2017"}, {"body": "yes realize means controlled components controller components whatever nt introduced say onclick dom use references titles comparative things think component dom component ought go dom used", "d": "8/2017"}, {"body": "use word key make whole thing shorter without reference board square", "d": "8/2017"}, {"body": "would like make pr updating sentence sure understand specifically propose changing agree could probably clearer thanks flagging", "d": "8/2017"}, {"body": "english nt thing", "d": "8/2017"}, {"body": "someone community wants brainstorm better phrasing would great would review pr otherwise try come back help focused shipping stuff thanks patience", "d": "8/2017"}, {"body": "one else already edited write think best instead requesting pull note use onclick within tag either command react listen event user defined component abide naming convention designates property prop event emit propagator handle handleclick designates event consumer ps avoided using handler explaining instead using propagator", "d": "8/2017"}, {"body": "throwing hat ring note dom element attribute special meaning react could named square prop board method differently however conventional react apps use names event propagation event consumption observations addresses concern use word component confusing context using term element term widely understood referent used html spec e g root element placing names parent elementcomponent attributepropmethod emphasizes reason first term treated differently second third applied necessarily clear prior wording differently still ambiguous technical setting might either mean going told later finite range acceptable nomenclature arbitrary name would acceptable mistaken latter case might consider replacing differently anything want common convention redundant practice becomes convention commonality hence conventional think suggestion use propagation consumption sound seems unlikely intended readership would understand consumption context case viable alternatives might processing execution", "d": "8/2017"}, {"body": "usefulnecessary something external inspect key child element reacttransitiongroup instance reasons react needs key identify elements refer thing conceptually key function element component instance useful context elements terms parent instance nt concerned suspect though main reason key accessible element needs somewhere react identify elements needs reorder move p", "d": "8/2017"}, {"body": "thanks answer curious antipattern could considered one use mapping children use cases tinkering around accordion initially using store state section child open decided change specific prop however felt like generalized pattern follow", "d": "8/2017"}, {"body": "class takes static property object", "d": "8/2017"}, {"body": "use property name work", "d": "8/2017"}, {"body": "published workaround npm package", "d": "8/2017"}, {"body": "workaround properly work onchange writing onchange triggered blur makes sense since normal behavior anyone point react implement workaround", "d": "8/2017"}, {"body": "hey thanks issue first inclination say probably intended behavior event bubbling always sort iffy encapsulation prospect think goal shadowdom allow strict encapsulation events feeling falls sort category interop say jqueries event system react ca nt wonder others think aweary nhunzaker terms react onchange implemented integrated react event system changeeventplugin", "d": "8/2017"}, {"body": "yeah integrating shadow dom events hard problem event system registers listeners toplevel relying bubbling know handle event since shadow dom events nt bubble toplevel ca nt see assuming want render isolated react application inside shadow dom might able add check detecting whether element shadow dom could register toplevel listeners shadow root instead suspect easier said done", "d": "8/2017"}, {"body": "cc sebmarkbage reactcontrolledcomponent stuff probably", "d": "8/2017"}, {"body": "great bug report btw thank much", "d": "8/2017"}, {"body": "think workaround like problem use portal instead take look see something fix without portals definitely way go use cases", "d": "8/2017"}, {"body": "nt think jest supports intends better ask jest repository react repository working jest", "d": "8/2017"}, {"body": "gaearon thank", "d": "8/2017"}, {"body": "looks like server side missing namespace check", "d": "8/2017"}, {"body": "could please provide full example enough information help", "d": "8/2017"}, {"body": "hi gaearon thanks support created repo structure project ca nt pass entire project ca nt reproduce issue project could something project think could component mounting every time fetch user redirect nt behavior dev", "d": "8/2017"}, {"body": "suspect wanted say called server side thing probably api request lifecycle server side rendering otherwise request thing twice server client reason static methods used instead time works really depends intend use server side rendering react environment ex reactrouter helmet head management etc instance use reactrouter static configuration nt actually need anything reactrelated get data really sure good improvement possible inside react today", "d": "8/2017"}, {"body": "hi thanks advice mistake meant thing probably api request lifecycle server side rendering otherwise request thing twice server client nt make api requests serve side think nt even need ssr version app always need seo purposes need print product list wo nt double round trips client serve default state redux really think tricks interesting", "d": "8/2017"}, {"body": "said api request lifecycle static methods allow make without lifecycle reactrouter could even completely separated components instance simple async action creators route configuration personally might something react side yet see proposal would really help domain", "d": "8/2017"}, {"body": "cc aweary", "d": "8/2017"}, {"body": "super highpri happy fix later nt want derail betasync work filed follow", "d": "8/2017"}, {"body": "bvaughn easy fix pr open", "d": "8/2017"}, {"body": "rock", "d": "8/2017"}, {"body": "take one", "d": "8/2017"}, {"body": "got", "d": "8/2017"}, {"body": "gaearon looks like fiber throw error lazily try click element trigger invariant invariant currently lives eventpluginhubgetlistener could move somewhere else like throw early", "d": "8/2017"}, {"body": "would prefer", "d": "8/2017"}, {"body": "worth double checking sebmarkbage intentional", "d": "8/2017"}, {"body": "indeed intentional could warn early throw able lazily deal event listeners looking properties event triggered currently loop optimizable path", "d": "8/2017"}, {"body": "warning early sounds sensible", "d": "8/2017"}, {"body": "hi wondering status", "d": "8/2017"}, {"body": "flarnie great timing opened", "d": "8/2017"}, {"body": "gaearon throws also usedreexported include invariant provide rendereragnostic error message try include error earlier", "d": "8/2017"}, {"body": "sure one hand throwing specific place would prevent specific confusing error hand guarantee throw first renderer might use apis react object earlier", "d": "8/2017"}, {"body": "way determine order rollup load modules explicitly include snippet code top bundle add invariant entry point bundle still fails cryptic error since imported modules hoisted top bundle", "d": "8/2017"}, {"body": "add module like checkreact make first import renderer guaranteed execute first", "d": "8/2017"}, {"body": "please try generally support versions except react native expected many bugs", "d": "8/2017"}, {"body": "gaeron thanks works sorry wasting time think makes sense change installation instructions shared reactblog points right update looks like points sure ended alpha bad", "d": "8/2017"}, {"body": "probablyup deprecated nt use", "d": "8/2017"}, {"body": "plenty deprecated properties react supports still widely available sure else get effect well tue aug andreas svensson notifications githubcom wrote probablyup deprecated nt use receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "nt recommend using deprecated attributes simply still exist merged able set attributes nt whitelist including deprecated attributes meantime use css get effect use manually set attribute really need", "d": "8/2017"}, {"body": "one thing quite worked yet pass numbers booleans benefits drop things whitelist matches intuitive behavior based experience standard props allow downsides booleans might interpreted truthy browser cases", "d": "8/2017"}, {"body": "mostly settled tradeoff pass strings numbers pass booleans warn coerce numbers strings passing value number coerced string warn development still set sebmarkbage wants look corner cases likely last tweak", "d": "8/2017"}, {"body": "pass strings numbers pass booleans warn clarify mean passing booleans warning", "d": "8/2017"}, {"body": "would render dom would display warning string number concern browser apis consistent means coercing string might work future boolean attributes react pass aware could potentially render value browser would interpret truthy actually add support would flip people already relying wrong behavior breaking change affect known boolean attributes still keep whitelist keep passing", "d": "8/2017"}, {"body": "affect known boolean attributes still keep whitelist confused thanks", "d": "8/2017"}, {"body": "thoughts special casing custom elements property element name use property instead attribute", "d": "8/2017"}, {"body": "love see let discuss separately since already lot take nhunzaker probably close exhaustion working", "d": "8/2017"}, {"body": "although would nice get changes custom elements chance", "d": "8/2017"}, {"body": "custom elements let follow preact property defined use property otherwise use attribute objectsarrays always use properties", "d": "8/2017"}, {"body": "even objectsarrays use properties one exist warn set none exist problem detecting properties catch native property super class eg elementprototype could prevent browsers adding properties names later ca nt detect since many gettersetters", "d": "8/2017"}, {"body": "objects custom methods still passed", "d": "8/2017"}, {"body": "objects custom tostring methods still passed talking custom elements regular elements focus issue let keep issue focused regular elements one block want bikeshedding custom elements black landing", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "think ever let called custom elements expect pass objects property exists pass otherwise want attribute imo explicitly call express intention regular elements pass always warn since could accidentally spreading something parent component could dangerous eg expensive throws", "d": "8/2017"}, {"body": "problem detecting properties catch native property super class eg elementprototype could prevent browsers adding properties names later ca nt detect hasownproperty since many gettersetters think ok use check custom element property spec authors decide add property htmlelement custom element continue work originally overrides base class existing sites would continue work future would custom element author revision element renames property understanding kind dilemma comes lot specs sorts libraries might use particular property function become super popular spec authors audit web see proposed name already use popular library owns name spec authors use different one", "d": "8/2017"}, {"body": "robdodson difference attribute common way component uses attributes property shadow base class pick base class start using instead attribute nt usually happen specs common case things shadow eg global scope shadow existing promise preserve invariant must use properties never fallback attributes", "d": "8/2017"}, {"body": "difference attribute common way mean common way sure follow component uses attributes property shadow base class true general encourage folks always create corresponding property writing best practices docs cover pick base class start using instead attribute think see saying custom element might work attribute specific behavior instead setting attribute set inherited property htmlelement causes different behavior close wild nt seen many custom elements use attributes fwiw developer uses polymer create element create corresponding properties attributes preserve invariant must use properties never fallback attributes think probably fine personally prefer properties everything custom element author really concerned pattern use capture properties set unupgraded instances", "d": "8/2017"}, {"body": "gaearon nice writeup though feels like middleoftheroad approach inherit naming convention dom properties dom attributes obvious user supposed use one like say understood correctly still means whitelist live limited way think already lot confusion regarding eg everything needs considered incl legacy ca nt say know better way forward put forth gone back forth past trying wrap head around smile reactdom two things consider dom attributes dom properties reactdom fundamentally ignores dom properties supports dom attributes today naming convention aside ie support things rendered html ssr however proposed naming convention uses dom property naming convention falls back dom attribute naming convention unknown attributes nonwhitelist essentially reactdom takes two different concepts attributes properties mixes namespace ignoring legacy seems confusing jquery committed mistake early life seems like becomes even confusing eg svg camelcase hyphenated property names coexist custom components adds core simple problem solve react would transplant dom property naming convention dom attributes mix two tbh entirely sure going would interesting know highlevel longterm goal reactdom dumb renderer much controlled inputs implemented reactdom vs userspace means simply dumb renderer reactdom extend courtesy video able largely copypaste svg html nt get wrong things considered proposing causes least friction probably right way forward given legacy seems like replacing whitelist special behavior nt seem much better perspective bundle size longterm goal towards stableconsistent behavior idea keep current specialcase legacy reasons perhaps even see right longterm approach ps work around annoying end world", "d": "8/2017"}, {"body": "already inconsistent anyway custom elements attributes experience talking people think attributes spent time react land argue average developer actually knows less dom difference used wrote html manipulated dom jquery apis take consideration seems like distinction properties attributes one useful explain public api whether reactdom uses attribute property particular prop implementation detail conceptually mental model propose every prop reactdom decides set property attribute know think unless reactdom knows better get attribute people would expect react offers canonical names known browser apis awkward use javascript last point important calling mirror properties specifically suggesting means using properties whenever possible something like offering canonical apis less awkward declare pass around read javascript similar xamarin would offer c style apis around underlying ios apis different naming convention mental model agree ideal seems like best compromise could find tbh entirely sure going would interesting know highlevel longterm goal solve two problems large whitelist custom attributes minimal friction highlevel goal really ones reactdom moment works well cases mostly working core days argue change brings reactdom closer community expects work libraries done write applications five years reactdom know maybe higher intentionally designed layer like displace maybe advent custom renderers might even somebody fork reactdomlite opposite think point choose highlevel goal like throwing things wall see sticks haha", "d": "8/2017"}, {"body": "take consideration seems like distinction properties attributes one useful explain public api whether reactdom uses attribute property particular prop implementation detail conceptually mental model propose every prop reactdom decides set property attribute know think downside requires speciallogic react opposed plain adds mental burden sure prop works named expect looking mdn react currently imho pretty poorly documented regard opposed mdn hard know expect intimate familiar react version dom unless reactdom knows better get attribute people would expect feel saying nice feature beginners far less experienced people experienced want know expect detail upfront currently basically trialanderror either attribute property even know current behavior even correct simply overlooked whereas mirror exactly know happen mdn significant details every part advent custom renderers might even somebody fork reactdomlite opposite first though concern compatibility custom renderers obviously overhead bundling different ones even asis suspect would nt really work considering event handling implemented also hurts community fragments everyone using slightly different version hypothetical reactdomlite think point choose highlevel goal like throwing things wall see sticks haha yeah gotten feeling fully understand anyway nt mean hold pr interesting discussion thanks answer", "d": "8/2017"}, {"body": "think discussion whether move closer mirror attributes orthogonal haha used word proposal already case sometimes use one thing cases keep changing stance future likely seems like block ability set arbitrary attributes properties exist first place similarly agree point experienced users seem proposal either makes worse better", "d": "8/2017"}, {"body": "hi unfortunately provide support repository none us working according please post questions sdk set stackoverflow quicker response besides easier others searching similar questions report bugs issues encourage report bug cheers", "d": "8/2017"}, {"body": "hi gaearon could pls take look", "d": "8/2017"}, {"body": "hi yes mouse events nt work disabled elements generally browser implementation detail something easily addressable already issues events mouse events prs attempting make behavior consistent likelihood though future react defer behavior native events behavior means wo nt fire disabled elements way", "d": "8/2017"}, {"body": "jquense example zombiej provided events registered div containing disabled button button case think dispatching event since dispatches event works expected regular event listeners", "d": "8/2017"}, {"body": "yeah enterleave traversal logic implemented terms fromto elements yeah unlike native event react drop events odd places one elements moved disabled pair ca nt accurately calculated fiddle leave works exit right button missing directions surrounding div dimension around button nt firing mouseovermouseout events button fires nothing meant close refs previous issues various prs least bring behavior line native events", "d": "8/2017"}, {"body": "acmoune best technique right use jason web token jwt sure find decent amount information online", "d": "8/2017"}, {"body": "thanks reply fine api authentication opted hawk hapijs include hawk credentials request header fetch data api want achieve user try access route react router require authentication idea set user redirected login component allow facebook login upon successful login authentication facebook credentials saved database along hawk credentials stored cookie user authenticate api using credentials cookie fetch data know jwt hawk concerned step problem steps possible getting something wrong thanks", "d": "8/2017"}, {"body": "nt think plan expose directly format sometimes changes want able make hood changes future bit annoying encourage copy paste update notice changes side", "d": "8/2017"}, {"body": "property live like inputs reflects current value attribute reflects initial state component think current behavior wrong force always muted like forces always one way resolve start scratch introduce property maps attribute property controlled like input needs callback go eg however mute equal volume zero dom exposes event perhaps domtruthful minimal implementation would attribute reflect initial mute state react take also support specialproperty corresponding event slippery slope tons properties added increasingly mixing behaviors react much larger discussion elsewhere recommend people simply manually set properties via js control elements think general recommendation works best manually set properties expose fancy video player react component want reuse tl dr imho yes set attribute sets initial state element", "d": "8/2017"}, {"body": "facing issue android according new year ago attribute needs present", "d": "8/2017"}, {"body": "gaearon easy fix ok direction making set attribute instead although potential break existing code someone decided implement mute button rely prop", "d": "8/2017"}, {"body": "think", "d": "8/2017"}, {"body": "maybe another option export directly browser streams ready leaving server part node streams", "d": "8/2017"}, {"body": "thing like node stream naming people know google node streams find documentation nt obvious kind api stream provides", "d": "8/2017"}, {"body": "good point makes sense think explicitness wins case", "d": "8/2017"}, {"body": "think clear mean accept pr name change fine either way want understand work", "d": "8/2017"}, {"body": "take pr", "d": "8/2017"}, {"body": "environments claimed word stream mostly fine expected mix use one notion opaque stream thing one get different one likely leak environments though electron react native apps one going favor spreads node stream bit misnomer browser promise considered legacy might make sense though", "d": "8/2017"}, {"body": "environments claimed word stream mostly fine expected mix use one notion opaque stream thing one get different sure mean suggesting method would return two different types objects depending environment seems counterintuitive sample code using method would confusing would work right environment electron react native apps one going favor spreads node stream bit misnomer mean still came node electron interesting example believe includes chromium node apis web streams node streams available think", "d": "8/2017"}, {"body": "think acceptable risk minor misnomer case target audience understand node streams refer stream api implemented popularized node even utilized environments", "d": "8/2017"}, {"body": "think rendertostreamnode instead rendertonodestream makes wonder node stream else would stream dom node markup", "d": "8/2017"}, {"body": "makes wonder kind dom node supports streams think potential confusion either way maybe worth asking community think clearer", "d": "8/2017"}, {"body": "think rendertostreamnode instead worry seems like stream adjective modifying noun node method would expected return node sigh nt enough words", "d": "8/2017"}, {"body": "fixed thanks", "d": "8/2017"}, {"body": "hmm see testing swallowing promise case specifically", "d": "8/2017"}, {"body": "annoying thing even set cors still see error twice unless swallowing thrown inner event time rethrown scheduler avoid rethrowing would change flow dev prod wish way silence second one", "d": "8/2017"}, {"body": "sure nt typo thismovimenti see movementi inside loop maybe wanted access variable state component type thisstatemovimenti instead anyway think nt anything react provide code whole component", "d": "8/2017"}, {"body": "oh fixed typo new error says read property movimenti undefined think error use react syntax", "d": "8/2017"}, {"body": "please provide code whole component moquita", "d": "8/2017"}, {"body": "think want access variable state component bind event handler function constructor class based component", "d": "8/2017"}, {"body": "please refer", "d": "8/2017"}, {"body": "thanks corrected modifying bit code movimentionclick function idselected var itemsel null var movimenti", "d": "8/2017"}, {"body": "problem please use stackoverflow next time kind issues discuss topics related react development good luck learning issue closed", "d": "8/2017"}, {"body": "reference get support find additional support resources", "d": "8/2017"}, {"body": "info use case handled virtual dom libs like preact snabbdom inferno remarkable case always infer minimum number operations uses algorithm find longest increasing subsequence array containing indexes old elements worth noting longest increasing subsequence theoretically slower react means inferno faster fast case slower slow case bad although realistically unlikely encounter anyway known sure internal discussions moment perspective problematic moves html sideeffects expensive means want make possible would also like deterministic way resulting behavior dependable ideally adding deleting move existing nodes react fails universally right approach moving information currently available pick direction run deterministic reactdom moving stuff end always behaves correctly performs poorly direction something intelligent like longest increasing subsequence slower give guarantee nodes moved mostly make right decision mostly edit minimal moves actually preferable metric test note moving audiovideoiframe cause resetpause iirc moving nodes currently animating clears animation etc expecting nodes sideeffects move erratically best solution would probably use flexbox reordered independently dom order cheaper", "d": "8/2017"}, {"body": "worth noting longest increasing subsequence n logn theoretically slower react n case simple moves like handled linear time trimming common prefixessuffixes old new sequences handling inversions example also preprocessing optimizations could handle cases simples edits linear time described also see vdom impl good reference cases preprocessing suffices find minimum number edits inferno uses preprocessing steps think also faster common case worth noting also keys numeric internal keymap used track moves likely end array vm much faster also big measuring could misleading cost computations primitives likely arrays amp numbers nt magnitude dom operations esp reflows style recalculations ideally adding deleting move existing nodes react fails universally right approach moving information currently available pick direction run deterministic reactdom moving stuff end always behaves correctly performs poorly direction well known approach similar domains text diffs adn sequence alignement find longest common subsequence longest increasing subsequence used inferno variation finding lcs finding minimum edit script sequences finding lcs known mn cost general case problematic preprocessing optimizations help reduce overall cost said worth trying preprocessing optimizations first likely reduce length problem even solves entirely thus need go costlynon optimal hashmap based diff non trivial solutions although sure could applicable case react example vdom implementation used another algorithm found interesting algorithm described paper also excellent article algorithm nd cost number edits insertions amp deletions go old new sequence worst case one sequences totally different however cases little differences sequences impl fix max number algo find lcs range fallback traditional hashmap approach note moving audiovideoiframe cause resetpause iirc moving nodes currently animating clears animation think react least handle case simple moves unnecessary moves likely trigger weird issues one loses browser transcient state example see issue", "d": "8/2017"}, {"body": "worth noting longest increasing subsequence n logn theoretically slower react n dont think react reconciliation n using hashmap tracking moves", "d": "8/2017"}, {"body": "inferno remarkable case always infer minimum number operations uses algorithm find longest increasing subsequence array containing indexes old elements nt always minimum number ops example move node prefixsuffix step remove insert", "d": "8/2017"}, {"body": "worth noting also keys numeric internal keymap used track moves likely end array vm much faster also big measuring could misleading cost computations primitives likely arrays amp numbers nt magnitude dom operations esp reflows style recalculations react never uses numeric keys move map next version iirc dont think react reconciliation n using hashmap tracking moves hashmaps asymptotic anyway sidetrack well known approach similar domains text diffs adn sequence alignement find longest common subsequence textdiffs often bad git example often coming conclusion illogical changes rather human actually makes logical sense problem minimal changes illogical conclusion bad sideeffects worst case one sequences totally different however cases little differences sequences also worth noting react largely favors fast enough worst case faster one would really care much takes vs takes vs worst case huge problem think react least handle case simple moves unnecessary moves likely trigger weird issues one loses browser transcient state example see issue hyperapphyperapp well matter perspective list always append move bottom eg kind activity tracker pushes updated articles bottom react actually always exhibit correct behavior others wrong react move elements actually moved direction whereas others behave somewhat randomly however since directionalgorithm configurable current state reconciliation react still poor avoiding sideeffects general unfortunately general solution making algorithm configurable optionally tagging elements eg kind incrementing move priority id moved elements singled sideeffects important however cases sideeffects unimportant lcs something similar likely best approach yes moves dom unreasonably expensive", "d": "8/2017"}, {"body": "problem diffing greatly simplified case virtual dom since assume keys unique anyway advocating react use lcs reconciliation one way among many solve problem sure tradeoffs saying react support cases simple edits like one multiple reasons perf one cases could supported efficiently linear timespace", "d": "8/2017"}, {"body": "hey kud provide example throws error along version react using throw errors component constructor example reactcreateelement type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined check render method app", "d": "8/2017"}, {"body": "hello aweary yes asap thank", "d": "8/2017"}, {"body": "sorry fat fingers button nt mean close", "d": "8/2017"}, {"body": "hey event happens onblur makes event blur happens input every time blur blur blurs browser crashes could dispatch event windowblur instead inputblur fires", "d": "8/2017"}, {"body": "might nt noticed one case input variable input element update link renamed variable", "d": "8/2017"}, {"body": "react uses syntheticevents wrap native ones maybe calling native event causing issues small test included reacttestutils lib people use testing making fake events add code fiddle add reactdom script works replace event trigger sure really helps maybe find ideas", "d": "8/2017"}, {"body": "guess custom event nt set completely eg event target react ca nt tell component trigger would instead want right behavior onblur rather trying recreate valid blur event", "d": "8/2017"}, {"body": "call inputblur invoke onblur callback input nt work", "d": "8/2017"}, {"body": "provide reproduction jsfiddle similar tool cc nhunzaker", "d": "8/2017"}, {"body": "tried jsfiddle works strange", "d": "8/2017"}, {"body": "js onchange value const value parsefloat value", "d": "8/2017"}, {"body": "odd would work jsfiddle locally typenumber may work html doctype specify html thing think without seeing code", "d": "8/2017"}, {"body": "yes specified html", "d": "8/2017"}, {"body": "elements codepen click one two one two first two events fired expected behaviour value changing everytime tested several html elements working checkboxes example reproducible since working previous versions kind big deal breaking app surely many others", "d": "8/2017"}, {"body": "yup already aware issue unrelated one though", "d": "8/2017"}, {"body": "bad saw appropriate ticket keep good work", "d": "8/2017"}, {"body": "mostly duplicate example reproduce issue type start typing numbers value appears change react nt firing change events value invalid thing happens accepted nonnumerical characters like", "d": "8/2017"}, {"body": "codepen great example issue made minor fork pinned highlight issue hopes others looking solution find thread", "d": "8/2017"}, {"body": "look console says uncaught error set one supply passing three arguments react know one use change thus removing third argument child works", "d": "8/2017"}, {"body": "yeah got thing want add dynamic content component seems react ca nt handle", "d": "8/2017"}, {"body": "nt think understand benefits option b could explain sentence means approach precedence dom append async offscreen canvas", "d": "8/2017"}, {"body": "relevant mount correct perhaps consider feature part holistic redesign toplevel mountupdateunmount api discussed previously", "d": "8/2017"}, {"body": "probably relevant toplevel updates well benefit option b delay commit still stuff example render multiple react trees wait complete finalize tree commit regarding offscreen canvas etc see thread similar problem space ca nt find proposal dom api inserting dom asynchronously show later commit point", "d": "8/2017"}, {"body": "would nice need container exist yet something like nt work revivinghydration obviously", "d": "8/2017"}, {"body": "still need figure updates happen complete commit updates always result prefetching data inside async priority think fine wait initial commit work get high priority update probably throw", "d": "8/2017"}, {"body": "issue breakpoints related react bundler using webpack fixed bugs past try updating nt help try changing webpack setting recall works well breakpoints general looks like maintain webpack configuration recommend unless know webpack really really well caveats like one mentioned really obvious spend lot time debugging broken setup instead recommend using tool like create react app manages configuration ensures working setup readme also provides list alternatives case need different feature set reproduce problem create react app please file issue take look otherwise could combination factors old webpack bad webpack configuration etc causing impossible us guess went wrong", "d": "8/2017"}, {"body": "create minimal reproducing case ready run exclude bundling issues etc", "d": "8/2017"}, {"body": "ok go created two files indexhtml scriptsjs started server image renders error using react react dom chrome version osx old setup webpack following babel loader look next", "d": "8/2017"}, {"body": "would suggest posting webpack bundle somewhere look", "d": "8/2017"}, {"body": "webpackconfigjs const path require path const htmlwebpackplugin require htmlwebpackplugin const webpack require webpack const config entry clientindexjs output path pathresolve dirname dist filename indexbundlejs publicpath devtool inlinesourcemap module loaders test js loader babelloader exclude nodemodules query presets react test css loaders styleloader cssloader module amp localidentname local test scss use styleloader cssloader sassloader plugins new htmlwebpackplugin template clientindexhtml processenvnodeenv production configpluginspush new webpackdefineplugin processenv nodeenv jsonstringify processenvnodeenv new webpackoptimizeuglifyjsplugin beautify false mangle true keepfnames true compress true comments false moduleexports config", "d": "8/2017"}, {"body": "mind creating repo pull", "d": "8/2017"}, {"body": "gaearon added collaborator repo able fork work progress bit messy right", "d": "8/2017"}, {"body": "add file repo clone env", "d": "8/2017"}, {"body": "also post exact instructions reproduce", "d": "8/2017"}, {"body": "project nt build", "d": "8/2017"}, {"body": "error come console open browser let check messed packagesjson file install everything run", "d": "8/2017"}, {"body": "ok gaearon messed postinstall stuff fix even though breaks able run run application open browser check console", "d": "8/2017"}, {"body": "reproduce tag bug", "d": "8/2017"}, {"body": "checked dropping beta project fixes issue since part crashes clear bug solved close", "d": "8/2017"}, {"body": "ok thanks gaearon wait get released", "d": "8/2017"}, {"body": "hi gaearon similar issue suggest workaround wait ca nt adopt new version due company constraints", "d": "8/2017"}, {"body": "qlwentt could provide reproduction issue using jsfiddle starting point try verify see potential workaround", "d": "8/2017"}, {"body": "could nt figure repro error jsfiddle looked fine simply put img tag component anyone finds page similar problem hacky workaround replace img tag div style give background image", "d": "8/2017"}, {"body": "workaround", "d": "8/2017"}, {"body": "qlwentt could clarify sort company constraints referring since even fix still release new version fix would able adopt", "d": "8/2017"}, {"body": "gaearon thanks following meant ca nt unilaterally decide adopt another version would discussions would process would nt quick thing plus dependencies nt compatible yet honestly fixed adopt probably immediately especially since workaround projects need attention", "d": "8/2017"}, {"body": "fair enough victorbello could let aweary look example shared would great vacation ca nt look would nt say priority us fix aweary finds time ca nt stop p", "d": "8/2017"}, {"body": "aweary sent invite repo issue fixed repo upgrading beta checkout repo build one able see issue commit issue postinstall referenced gaearon fine run uglifyjs error still run", "d": "8/2017"}, {"body": "thanks victorbello able reproduce issue intermittently looks like kind race condition load event image dom tree appended container attempts find container element finds root element yet connected false exactly sure happens yet gaearon mentioned nt high priority right unfortunately nt much time investigate", "d": "8/2017"}, {"body": "fix probably fix", "d": "8/2017"}, {"body": "let discuss", "d": "8/2017"}, {"body": "think remove peer dependency helpful keep bumping every release rather leave package alone", "d": "8/2017"}, {"body": "maybe instead removing set", "d": "8/2017"}, {"body": "works", "d": "8/2017"}, {"body": "hmm match prereleases pretty annoying cases want people try beta", "d": "8/2017"}, {"body": "rc got way say match anything error react", "d": "8/2017"}, {"body": "fixed removed got way say match anything error react afaik could direct dep control prerelease opt peer", "d": "8/2017"}, {"body": "oh well thanks fix released soon", "d": "8/2017"}, {"body": "already released", "d": "8/2017"}, {"body": "amazing thanks", "d": "8/2017"}, {"body": "thanks quick release", "d": "8/2017"}, {"body": "thank creating issue added emulate batchedupdates lifecycle methods event handlers motivation support following case guess supporting batched updates hard work ca nt support case calling directly sure might able support case using wonder support consistent behaviors shallow renderer fiber renderers currently shallow renderer nt supporting ref lifecycle methods shallow renderer support componentdidcatch reactdomactiveupdates think keeping consistent behaviors renderers become harder released fiber nt think support might possible could implement shallow renderer based test renderer test renderer based fiberreconciler seems able support features fiber provides easily enzyme also works like batched updates supporting lifecycle methods many developers use shallow renderer enzyme provides makes sense expose backward compatibilities enzyme", "d": "8/2017"}, {"body": "topic like add lifecycle methods support future release even though breaking change", "d": "8/2017"}, {"body": "thanks feedback ca nt support case calling directly little confused mention renderer shallow renderer totally decoupled dom renderer wonder support consistent behaviors shallow renderer fiber renderers currently shallow renderer nt supporting ref lifecycle methods nt make sense shallow renderer support things like refs since nothing actually mounted underlying views created shallow renderer narrower usecase shallow renderer support reactdomactiveupdates shallow renderer renders one level deep applies errors thrown lifecycle methods children means noop shallow renderer test good job illustrating might possible could implement shallow renderer based test renderer test renderer based fiberreconciler seems able support features fiber provides easily think prohibitively difficult make fiber reconciler behave shallow tried initially writing shallow renderer standalone implementation topic like add lifecycle methods support future release even though breaking change think may cause harm good calling likely trigger code expects able use things like refs neither work new shallow renderer better call lifecycle method avoid adding potential pitfalls complication user component code", "d": "8/2017"}, {"body": "wish consistency though odd call call calling either would make sense", "d": "8/2017"}, {"body": "nt think call componentdidupdate", "d": "8/2017"}, {"body": "still time break", "d": "8/2017"}, {"body": "sent pr", "d": "8/2017"}, {"body": "bvaughn thank reply agree wish consistency though odd call componentdidupdate call componentdidmount calling either would make sense makes sense think add documentation gon na work updating documentation release already test renderer use need ref lifecycle methods good way use shallow renderer narrower usecase shallow renderer already convenient testing behaviors render function component shallow renderer released way test components without dom depended heavy use test renderer case think would nice section test renderer documentation well shallow renderer", "d": "8/2017"}, {"body": "little confused mention reactdom renderer shallow renderer totally decoupled dom renderer misunderstanding right", "d": "8/2017"}, {"body": "goes may inadvertently fix underlying problem since switching radioscheckboxes use onchange real", "d": "8/2017"}, {"body": "oh sweet would lot better", "d": "8/2017"}, {"body": "merged take care concern believe", "d": "8/2017"}, {"body": "provide isolated example reproducing bit hard guess went wrong without running code", "d": "8/2017"}, {"body": "sure put together quick actually whittled cause problem seems babel plugin causing warning pop rebuild without warning showing making use plugins supposed performance benefits still applicable react fiber", "d": "8/2017"}, {"body": "still applicable react fiber part changed encourage measure performance application rather rely intuition plugins guarantees help case seems babel plugin transformreactinlineelements causing warning pop rebuild without babelrc warning showing might might bug either case plugins used development meant used production mode react emit warnings page transform enabled production eg minifying code although improves runtime performance makes warning messages cryptic skips important checks happen development mode including proptypes page transform enabled production eg minifying code although improves runtime performance makes warning messages cryptic seems like expected bug", "d": "8/2017"}, {"body": "thanks much feedback work project much appreciated", "d": "8/2017"}, {"body": "thanks reporting issues one thing curious reproduce issue believe made cryptic case", "d": "8/2017"}, {"body": "downgraded test project reporting errors using main project first noticed warning ca nt remember seeing always trying squash warnings come along pretty sure project running without warnings upgrade test project case would say somehow clashed way things", "d": "8/2017"}, {"body": "interesting let keep open low priority investigation find time investigate", "d": "8/2017"}, {"body": "cool keep eye next releases though seem pretty low priority nt using babel plugins first place dev probably also looked whoever working babel plugin might changes nt playing nice causing warnings crop kind makes wonder productionfit moment", "d": "8/2017"}, {"body": "nt related api changes react compatible", "d": "8/2017"}, {"body": "hey ikhilko thanks issue appium probably setting value setting property input element wo nt work react controlled input implementation would recommend referring appium documentation see way ensure actual keyboard events dispatched opening issue issue tracker", "d": "8/2017"}, {"body": "hi aweary thanks response appium selenium use complex logic input value inputs try investigate execute case strange logic works fine android chrome nt work ios using react refer information react works controlled inputs helpful research problem", "d": "8/2017"}, {"body": "looks like reason issues", "d": "8/2017"}, {"body": "far tell experimentation reading code two criteria reusing existing dom elements prerendered html page hash initial clientrendered markup match datareactchecksum present rootelement domid instance render tree needs match datareactid dom element tried beta yet think either restrictions", "d": "8/2017"}, {"body": "interesting nt yet give try morning maybe bit malleable use case deliberate change consequence fiber changes", "d": "8/2017"}, {"body": "deliberate wanted streaming incompatible checksum strategy also likely going explicit hydration api", "d": "8/2017"}, {"body": "interesting nt yet give try morning maybe bit malleable use case deliberate change consequence fiber changes", "d": "8/2017"}, {"body": "sure mean saying added packages strictly necessary building testing react moved something like installed necessary", "d": "8/2017"}, {"body": "merged pr", "d": "8/2017"}, {"body": "looks like issue already discussed react team aware thanks links spicyj go ahead close virgofx like follow add api support unpkg let discuss", "d": "8/2017"}, {"body": "answering questions calling returns instance instance rendered freshly created dom element represents detached tree also reference instance reactdom internal map even remove references instance every call get detached tree hanging memory instance react component props available garbage collection", "d": "8/2017"}, {"body": "variations error messages missing anyway looks like script nt run prior build verified running build remove error messages", "d": "8/2017"}, {"body": "closer inspection something strange seems happening script runs new errors added file reverted seems happen repeatedly possibly every build produced end result ends state started new errors added believe worked earlier terminated script point reverted new error messages present build", "d": "8/2017"}, {"body": "wrote post explain conclusion issue hope help others similar question", "d": "8/2017"}, {"body": "closing since marked wontfix", "d": "8/2017"}, {"body": "fixed", "d": "8/2017"}, {"body": "similarly official benchmarks purely swapping resulting page load times faster combined effects server side rendering clientside", "d": "8/2017"}, {"body": "way enable async rendering manually", "d": "8/2017"}, {"body": "kononenkoam technically ready missing much logic would make work well let say", "d": "8/2017"}, {"body": "gaearon know early ask maybe tell could expect least available experimental purpose", "d": "8/2017"}, {"body": "time year hopefully", "d": "8/2017"}, {"body": "thanks lot follow updates excited try technology", "d": "8/2017"}, {"body": "bvaughn shallow renderer nt implement unstablebatchedupdates tbd sure shallowrenderer implement issue mean shallowrenderer support implement means latter sure use case afaik reactdomserver nt implement", "d": "8/2017"}, {"body": "bumped enzyme relies internally investigated whether want support yet", "d": "8/2017"}, {"body": "gaearon thanks makes sense added emulate batchedupdates lifecycle methods event handlers", "d": "8/2017"}, {"body": "thanks makes sense might better place moment terms deciding whether worth adding batched updates support shallow renderer team chatted briefly weekly sync yesterday resolution try learn required use cases determine easier solutions", "d": "8/2017"}, {"body": "jlongster gaearon able resolve modal issue getting similar error using reactbootstrap modals error error block fails undefined", "d": "8/2017"}, {"body": "reactmodal doesntt work gaearon andyjd", "d": "8/2017"}, {"body": "use reactdomlibeventpluginutils specifically monkey patch executedispatchesinorder see model changed event handler since use single state atom something like executedispatchesinorder function originalexecutedispatchesinorder change rerender anyway still get access", "d": "8/2017"}, {"body": "tomasztomys andyjd modal issues might related please see return called inside lifecycle method work around either use new portal api refs something else causing please create small reproducing example run take look", "d": "8/2017"}, {"body": "tolmasky think exposing event system think people wanted wrap event handlers purposes eg error handling please open new issue details use case", "d": "8/2017"}, {"body": "tolmasky curious could wrap dom instead also curious could use requestanimationframe requestidlecallback ensure batched across async cycles let discuss another issue", "d": "8/2017"}, {"body": "anyone else getting reactdom seems like using strict mode makes browser chrome client requirement know like function recomputepluginordering line inside statement block odd enough newer browsers seem ignore second part clues workaround older browsers", "d": "8/2017"}, {"body": "bvaughn team chatted briefly weekly sync yesterday resolution try learn required use cases determine easier solutions makes sense let know need help starting investigate let discuss another issue following rough implementation shallowrenderer", "d": "8/2017"}, {"body": "regarding hallaathrad comment use strict error older chrome versions verified chromium lt chromium show error unfortunately unable get chromium versions run locally without instacrashing sure behaves seem couple ways could address remove outer ifdev condition removed check react native well address problems android jsc see remove use strict directive bundles use rollup plugin convert floating functions wrap contents ifdev conditional iife believe outer ifdev conditional added help weak dead code elimination presumably case projects accidentally included dev production builds reactreactdom see cc gaearon trueadm verify share thoughts cc sebmarkbage", "d": "8/2017"}, {"body": "wrap contents ifdev conditional iife would make sense solution", "d": "8/2017"}, {"body": "coming respectful humbly uninformed point view use rollup plugin convert floating functions function foo var foo function bvaughn seems idea ifdev testing purposes would backwards compatible legal workaround keeping strict mode anyway good enough least beta stages gaearon might enquire prefer option still surprised find current browser versions decided outright ignore part specs though", "d": "8/2017"}, {"body": "hallaathrad might enquire prefer option easy string level without messing ast", "d": "8/2017"}, {"body": "quick note released couple improvements bugfixes things reported thread including fix strictmode function scope problem better error log messaging crossorigin handling shallow renderer improvements edgecase context bugfix single point entry server rendering support returning strings arrays server render attributes server markup anymore like install list breaking changes top post updated", "d": "8/2017"}, {"body": "mapset corejs polyfills weigh gzipped end world would specify exact features builtins u expect besides probably basic interface corejs follows spec really closely probably loosesmaller equivalents could created", "d": "8/2017"}, {"body": "exact features builtins u expect bit tricky give specifics limits ability change code give idea methods use ones differ basic support according mdn", "d": "8/2017"}, {"body": "simpler polyfill could developed alongside react tests could run way wouldnt limit might actually exactly need configure thing properly run test suite", "d": "8/2017"}, {"body": "tomasztomys andyjd materialui use custom fork modal reactbootstrap facing issue endedup using new portal api react old find abstraction portaljs component", "d": "8/2017"}, {"body": "get access beta nt work anymore removed", "d": "8/2017"}, {"body": "coldi way beta tracking exposing way currently published repo available tag npm", "d": "8/2017"}, {"body": "thanks dan clearification need looking learn custom renderer fiber would really happy could make available public react soonish awesome feature looking forward anyway thanks guys great support", "d": "8/2017"}, {"body": "gaearon looks like confirmed beta google bug anymore", "d": "8/2017"}, {"body": "thanks letting us know", "d": "8/2017"}, {"body": "coldi use fork export diff asrcrenderersdomfiberreactdomfiberentryjs bsrcrenderersdomfiberreactdomfiberentryjs var reactdomfiber finddomnode finddomnode reactfiberreconciler reactfiberreconciler unstablecreateportal children reactnodelist container domcontainer", "d": "8/2017"}, {"body": "gaearon might really stupid question return array elements keep getting error bash error srccomponentshomeviewjs module build failed syntaxerror adjacent jsx elements must wrapped enclosing tag return test work react srccomponentshomecontainerjs srccomponentsappviewjs srccomponentsappcontainerjs srccomponentsrootcontainerjs srcindexjs multi reacthotloaderpatch webpackdevserverclient webpackhotonlydevserver srcindex webpack failed compile config option", "d": "8/2017"}, {"body": "hribb think forgot comma since array items regular js rules apply future might consider adding firstclass support fragments jsx could look like related react per se though blocking release", "d": "8/2017"}, {"body": "based example gaearon arrays returned render require keyed elements played around beta nt think get warnings omit", "d": "8/2017"}, {"body": "yes need keys special syntax like mentioned need moment", "d": "8/2017"}, {"body": "quick note released couple small improvements warn unresolved function child remove datareactid datareactchecksum whitelist new test renderer api features disabled via feature flag minor updates slightly reduce bundle size like install", "d": "8/2017"}, {"body": "discussion decided enable new apis available mo betas mo betta fix bugs related unmounting error boundaries enable new fiber reacttestrenderer api methods previously disabled behind feature flag like install", "d": "8/2017"}, {"body": "popular third party libraries work yet eg enzyme last major obstacle blocking release", "d": "8/2017"}, {"body": "popular third party libraries work yet eg enzyme last major obstacle blocking release nt exactly release blocker enzyme also seems pretty close based recent chat flarnie lelandrichardson", "d": "8/2017"}, {"body": "warnings migrate react code replace usages proptypes createclass react format warnings npm packages understand modules needs changes", "d": "8/2017"}, {"body": "iromio hit little caret next warning view stack able tell library causing warning many actively maintained libraries updated fix deprecations might need forkfixpr edit bvaughn said haha ps cc bvaughn far know warning show one violation time say ten libraries causing warning find one one fixing", "d": "8/2017"}, {"body": "click little triangle left warning expand see stack trace tell npm module presumably triggering warning screencap describing", "d": "8/2017"}, {"body": "bvaughn andyjd hm see printwarning eslint reactscripts", "d": "8/2017"}, {"body": "hm could try overriding see calling", "d": "8/2017"}, {"body": "guess consolewarn nt show trace", "d": "8/2017"}, {"body": "experience looks like nt always though", "d": "8/2017"}, {"body": "using uptodate chrome iromio could browser thing", "d": "8/2017"}, {"body": "insert indexjs warnings shown", "d": "8/2017"}, {"body": "andyjd opera based chrome", "d": "8/2017"}, {"body": "bvaughn andyjd push example app collapsable warnings want try reproduce", "d": "8/2017"}, {"body": "sure understand problem point looks like seeing stack trace", "d": "8/2017"}, {"body": "maybe seeing stack trace nt know create simple app based app errors shown correct problems code node modules project broken consolewarn", "d": "8/2017"}, {"body": "running locally chrome see warning coming looks like using version older deprecation think fixed warning version update", "d": "8/2017"}, {"body": "react router fix current", "d": "8/2017"}, {"body": "bvaughn andyjd thanks update update problem problem exactly update", "d": "8/2017"}, {"body": "guess learned chrome better job reporting warning stack opera", "d": "8/2017"}, {"body": "fyi added issue server renderer respecting eta spicyj sebmarkbage helpfully let know intentional sorry distraction", "d": "8/2017"}, {"body": "im getting library im attempting fork fix since parent dead idea begin track error seems bit vague could anyone give tips would cause", "d": "8/2017"}, {"body": "looks like mixing react reactdom guessing based fact shows stack trace shown expect see", "d": "8/2017"}, {"body": "bvaughn augh right another lib required let drop report back thanks", "d": "8/2017"}, {"body": "yep exactly facepalm thanks", "d": "8/2017"}, {"body": "problem glad easy fix", "d": "8/2017"}, {"body": "hi trying beta react version little confused expected error handling behavior componentdidcatch lifecycle hook fired error children children errorboundary ie error errorcomponent see component stacktraces lifecyclehook componentdidcatch triggered errorboundary error direct children seems work expected behavior", "d": "8/2017"}, {"body": "shkrishms intend closing errorboundary last line ie", "d": "8/2017"}, {"body": "yes sorry typo close properly original code", "d": "8/2017"}, {"body": "shkrishms error boundaries catch errors descendants direct children example", "d": "8/2017"}, {"body": "thanks clarification tried troubleshoot working found itis flyout ie open new panelflyout inside main component guess different dom cases works said", "d": "8/2017"}, {"body": "shkrishms think going need provide repro hard speculate", "d": "8/2017"}, {"body": "hello thank work using react render xml blockly warning every blockly specific tag also app works expected though way tell react expecting render thank", "d": "8/2017"}, {"body": "hey html xml element verify running following console browsers treat tags would treat unknown elements creating instance catchall htmlunknownelement react warns since usually indicates typo misunderstanding", "d": "8/2017"}, {"body": "react warns since usually indicates typo misunderstanding possible disable warning way eg add list expected unkown tags know xml tag unkown something blockly uses", "d": "8/2017"}, {"body": "currently api disabling warning important note react nt arbitrary xml renderer meant render valid html rendering xml technically supported use case", "d": "8/2017"}, {"body": "possible disable warning way eg add list expected unkown tags configurable list expected tags way currently disable warnings would override check whitelisted warnings eg js const error consoleerror consoleerror args gt args startswith warning tag unrecognized return error args hope work better story whitelistingblacklisting warnings near future", "d": "8/2017"}, {"body": "sure recommend blacklisting warning particular use case though things react dom htmlspecific may work generic xml expose way build custom renderers pretty easy build xml renderer though blacklisting warning works wo nt stop", "d": "8/2017"}, {"body": "blockly xml static assume nt include user generated content bypass react using put xmlish stuff least based understanding blockly works fine", "d": "8/2017"}, {"body": "make sure understand right way component stack traces intended development enable sourcemap production wont get componeent stack traces see note article component stack traces intended dev", "d": "8/2017"}, {"body": "shkrishms error boundaries work production difference gets logged console take fiddle example production development display text depending minification settings production component stack may contain component names like b different things logged developer console development uncaught error goodcomponent nothing returned render usually means return statement missing render nothing return null invariant reconcilechildfibers reconcilechildrenatpriority reconcilechildren finishclasscomponent updateclasscomponent beginwork performunitofwork workloop htmlunknownelementcallcallback error occurred component goodcomponent errorboundary react try recreate component tree scratch using error boundary provided errorboundary production", "d": "8/2017"}, {"body": "bvaughn see error production see minified stack trace sourcemap production react know component names right", "d": "8/2017"}, {"body": "comment referred depending minification settings production component stack may contain component names like b", "d": "8/2017"}, {"body": "thanks bvaughn makes sense", "d": "8/2017"}, {"body": "got error log error caused error thrown uncaught typeerror disabledindexof function eval arraymap new buttontoggle eval instantiate buttontoggle eval proxyclass createclassproxyjs nan mountindeterminatecomponent beginwork performunitofwork workloop anonymous buttontoggle anonymous instantiate buttontoggle mountindeterminatecomponent beginwork performunitofwork workloop callcallback invokeguardedcallbackdev invokeguardedcallback performwork batchedupdates performfiberbatchedupdates stackbatchedupdates batchedupdates batchedupdateswithcontrolledcomponents dispatchevent error occurred component buttontoggle created buttontoggleinput div created buttontoggleinput buttontoggleinput created unknown div created unknown div created unknown unknown created connectedfield connectedfield created connect connectedfield connect connectedfield created field field created renderroles li created renderroles ul created renderroles renderroles created connectedfieldarray connectedfieldarray created connect connectedfieldarray connect connectedfieldarray created fieldarray fieldarray created eventapplicationform form created eventapplicationform eventapplicationform created form eventapplicationform form eventapplicationform created connect form eventapplicationform connect form eventapplicationform created reduxform reduxform localtranslationprovider created eventpage div created eventpage div created eventpage div created modal div created modalportal div created modalportal modalportal consider adding error boundary tree customize error handling behavior learn error boundaries different thing error think rendering dom elements outside dom component render thats dom land react component tree land nt see could cause error caught also react component rendering dom element outside root rendered dom element feels like nt work nt good idea", "d": "8/2017"}, {"body": "davidfurlong look react component tree modal open see outside main tree app portal super basic test app initial thought handling make generic wrapper around reactmodal error boundary something like could make reusable bounded modal something like", "d": "8/2017"}, {"body": "errors event handlers thrown logged twice development", "d": "8/2017"}, {"body": "find adding classnames multiple elements single component might good indicator split smaller components using small components visual primitives make app composable road smile", "d": "8/2017"}, {"body": "perhaps generic way configured global scale thinking maybe api looks something like causes scan apply function prop element called value sent component constructor would seem satisfy backwards compatibility requirements components would receive translated class name string rather nonstandard forms may passed argument classnames module everything would continue working way today component perspective component creator would need aware translation happening", "d": "8/2017"}, {"body": "closing since use uncontrolled inputs want input respect attribute manually manage max length value controlled inputs", "d": "8/2017"}, {"body": "react use data property composition events probably react trust msmania known react trust eg ime data property incorrect", "d": "8/2017"}, {"body": "robbertbrak yes mentioned beforeinputeventpluginjs seems japanese character one case sure cases", "d": "8/2017"}, {"body": "recently investigating ime problems slate editor uses react manage contenteditable listen events wanted share created riff keyboard events viewer shows native ui events ones emitted react found helps lot debugging imes nt tested ie yet unfortunately ymmv also plan include comprehensive writeup ime scenarios taking cue excellent page vscode team input methods test suite sorts sorry inviting issue p", "d": "8/2017"}, {"body": "danburzo pointers fantastic ui events viewer seems work pretty well ie thanks inviting", "d": "8/2017"}, {"body": "cc top contributors zpao spicyj sebmarkbage gaearon multiple projects asf couchdb cordova superset limbo many us would like facebook communicate clarify whether stance patents clause firm change people debating internally fb come clarification eta would great things moving direction standard asf approved license personally react asf open source software please allow us share things built top react", "d": "8/2017"}, {"body": "waiting two weeks felt disappointed change nothing go away goodbye react amp amp hello angular", "d": "8/2017"}, {"body": "pretty sure public decision august corporationenterprise etiquette", "d": "8/2017"}, {"body": "calm least facebook legal team looking considered almost nothing short divine intervention past going waiting game expected anything related legal work much anyone us right sit wait ca nt sit wait go learn vue something meantime going kill complaining going make things worse point already know nt like things right get sure sick listening thread pointless comments thread bet ass thread locked shoved attic collect dust", "d": "8/2017"}, {"body": "share mistercrunch oleglustenko thoughtsconcerns likely need wait august hear something facebook", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "hi thanks waiting patiently still nt anything announce right update", "d": "8/2017"}, {"body": "come facebook right thing", "d": "8/2017"}, {"body": "come facebook right thing", "d": "8/2017"}, {"body": "please stop", "d": "8/2017"}, {"body": "ca nt sit wait go learn vue something meantime going kill", "d": "8/2017"}, {"body": "sure people sit wait production code time money company could become expensive rewrite code simply change framework imagine hired react js developers keep hope could learn another framework look staff", "d": "8/2017"}, {"body": "use use preact preactcompat fully compatible react", "d": "8/2017"}, {"body": "agree spicyj please stop discussions certainly place eg forum misplaced github issue deals specific request furthermore reached point waiting specific response comments wellintentioned impatiently awaiting result discussed somewhere else eg also preact mentioned twice repetitions contribute anything", "d": "8/2017"}, {"body": "adam mentioned today want able open source technology part successful products rethink could approach licensing practice without opening frivolous lawsuits remain place sorry caused much churn community even feel like stop using ui frameworks understand organizations may choose policies type license principle like clearly include patent license repo imo would nice companies would choose route surprised asf decision since license nt changed years think unfortunate works companies trying open protecting business also creates lot churn people building combining great technologies wish normalized like keep working giving protection ideas many diverse implementations let create environment happen close let keep broader discussion going", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "end app gaearon seems result correct", "d": "8/2017"}, {"body": "sure mean", "d": "8/2017"}, {"body": "going close nt think polyfill force change events standardized", "d": "8/2017"}, {"body": "aweary released yet", "d": "8/2017"}, {"body": "vebjorni yet included release", "d": "8/2017"}, {"body": "fixed", "d": "8/2017"}, {"body": "like add vote cause playing around inbrowser es modules today currently installation page download html file code html hello world", "d": "8/2017"}, {"body": "think issue slightly different thing one looking", "d": "8/2017"}, {"body": "nt think nt want untranspiled source want bundle flattened like normal es modules exports ps thought holiday dan", "d": "8/2017"}, {"body": "think way around modules issue untranspiled source going back vacation", "d": "8/2017"}, {"body": "lukasbombach happy jump one give shot ok create pull request examples aweary", "d": "8/2017"}, {"body": "mrbenj fwiw currently creating createreactwebcomponent fork creates web component wan na compare notes happy chat", "d": "8/2017"}, {"body": "oh btw found creating web component like actually work problem events shadow dom registered react work around ugly think going file issue", "d": "8/2017"}, {"body": "created issue", "d": "8/2017"}, {"body": "sassanh luck fixing react like see feature", "d": "8/2017"}, {"body": "trejgun exactly doesnt work", "d": "8/2017"}, {"body": "error dealing around year ago happens react seems like fixed react clearly remember asked somewhere ca nt remember stackoverflow comment github thread react repository owner answered support inheritance limited inheriting directly cleaner code old asked kindly support deeper inheritance least purpose cleaner code nothing else tried convince use functional programming glad one year later react mature enough nt enforce inheritance composition", "d": "8/2017"}, {"body": "sorry confusing reply somebody team sure mine assure stance react team changed since react first came recommending inheritance especially beginners yet understand composition possible solves common use cases also fact technically prevent using inheritance language way react library could forbid using bin linking errors exist added see changelog error question come react look gets thrown inside code babel creates component happens inheriting exist mentioned added later version super expression thing inherit sorry somebody team interpreted specific message bug react provide details bin time", "d": "8/2017"}, {"body": "sure mine nt unless avatar time green elements github avatar green elements recommending inheritance especially beginners yet understand composition possible solves common use cases cool try introduce composition beginners think separate react js library teaching things based taste beginners different projects way people using react library wo nt annoyed hints willing get point even though totally respect desire teach appreciate work library think better avoid combining two together provide library opinionated provide teaching materials separately nt use framework tool boost opinion better community also fact technically prevent using inheritance language way react library could forbid using glad nt fact technically prevent inheritance simple checking super class component directly inheriting render prevention technically easily possible though never said prevent intention another way prevent intentionally fixing bugs related deeper inheritance bin linking errors reactpurecomponent yeah wrote simple inheritance example went back react versions find version raises error sorry misleading bin investigated project git history found issue issue solved yet inherit class inherits displayname super class shows reactdevtools moment problem combined conversation talked made conclude deep inheritance nt supported first class citizen reactjs may receive performance optimizations planning arrow functions later optimizations fiber specially heard inheritance solely cleaner code time changed mind reactjs serious problems rendering deep inherited classes", "d": "8/2017"}, {"body": "simple checking super class component good point actually forgot one could thanks correcting issue solved yet inherit class inherits reactcomponent displayname super class shows reactdevtools remember one yes gets bit fuzzy support inheritance react sometimes harder seem worth projects around think find good fix happy take high priority since less used case", "d": "8/2017"}, {"body": "performance react remember reading somewhere different optimizations arrow functions classes inherited think react nt deal different type components internally different codes handles components created different method arrow function inherited classes using deeply inherited classes introduce performance issues aware", "d": "8/2017"}, {"body": "nt think optimizations based whether inherit aware optimizations related arrow functions either thing gets special optimization inheriting works deeply puts special field flag prototype react reads", "d": "8/2017"}, {"body": "trysound last time checked problem hot reloading something like apparently issue", "d": "8/2017"}, {"body": "yeah good point time problems livereactload deeply inherited components", "d": "8/2017"}, {"body": "ngokevin would great get thoughts guys ngokevin one authors library aframereact tool exactly trick passing nonstring values aframe custom elements may needed make aframereact react would simply fix oneliner note also using instance properties pass nonstring data nowhere near standard like setattribute might able convince libraries use instance properties every library already used setattribute hence best allow custom elements authors like ngokevin pass nonstrings another way look nt api blocker let react interface dom api nothing let authors full decision power use dom api beneath react", "d": "8/2017"}, {"body": "hi gaearon nhunzaker update release waiting fix released resolve issues facing thanks", "d": "8/2017"}, {"body": "colebowl sorry test patience got pretty nuked custom attribute stuff begin preparing release right edit sorry hope nt sound snarky gladly", "d": "8/2017"}, {"body": "nhunzaker apologies necessary thanks million getting us let know help", "d": "8/2017"}, {"body": "ever come conclusion", "d": "8/2017"}, {"body": "also snarky sure preparing release right translates terms release dates", "d": "8/2017"}, {"body": "merged next path release", "d": "8/2017"}, {"body": "minified version working anything missing", "d": "8/2017"}, {"body": "yes unrelated react cdn question unpkg seems issues hope able resolve soon", "d": "8/2017"}, {"body": "experience error replicate safari react version", "d": "8/2017"}, {"body": "thought would better make new pr suite refactored might pretty little try combine ok make separate pr", "d": "8/2017"}, {"body": "separate prs would easier review", "d": "8/2017"}, {"body": "zhangqibupt question answered would mind closing issue helps keeps issue tracker clean react core team", "d": "8/2017"}, {"body": "estimate also know solved beta", "d": "8/2017"}, {"body": "talking trueadm sounds like probably wo nt problem look tomorrow sure reproduce issue though", "d": "8/2017"}, {"body": "believe happens apply uglify first replace", "d": "8/2017"}, {"body": "detect might function references inspects source code value production source code nt contain production word nt envified correctly", "d": "8/2017"}, {"body": "thanks gaearon try reproduce whenever get chance today", "d": "8/2017"}, {"body": "could add kind runtime warning help users suffer sure right way", "d": "8/2017"}, {"body": "worst problematic case opinion fact case typical development environment would usually empty problematic case set applied dead code elimination bundler realize statically accessible leaves calls resolve runtime exactly case slack week ago catch could something like js function testminification testminificationname testminification minified might node environment dce expected anyway return processenvnodeenv production processenvnodeenv development throw new error unreachable try const source testtostring sourceindexof tostring know fact line exists therefore browser gave us invalid source return sourceindexof unreachable dead code elimination would stripped branch impossible reach production settimeout gt ensure gets reported production logging throw new error react running production mode dead code elimination applied testminification note code would need directly commonjs entry point rather bundles run uglify", "d": "8/2017"}, {"body": "gaearon awesome stuff kind getting well intention would try beta see feedback", "d": "8/2017"}, {"body": "sounds reasonable yes", "d": "8/2017"}, {"body": "confirmed browserify fixture actually demonstrates issue ships versions react outputjs bundle since nt use browserify uglify plugin thing dead code elimination use test case initially adding warning later might consider adding deadcode elimination plugin browserify fixture build case people use demo simple browserify setup react could since fixtures meant used models users anyway", "d": "8/2017"}, {"body": "nit forgot browserify example minifying gaearon pointed earlier problem would really happen ran uglify envify deadcode elimination nt catch prod conditionals probably nt worry changing browserify fixture since really trying demonstrate proper way", "d": "8/2017"}, {"body": "hunderlinek wrap effect", "d": "8/2017"}, {"body": "made list different things think dis allow return values based added support numbersstringsarrays return value child string yes yes number yes yes element yes yes array yes yes iterable yes yes null yes ignored yes ignored false yes ignored yes ignored true yes ignored undefined yes ignored function yes ignored symbol yes ignored object ones asterisk ones currently silently skip used error ones two asterisks ones always skipped imo least warn need evaluate many conditions would add probably need start warnings anyway might already happen rely fb since enabled new features ago feel strongly really common one example misunderstand components return rather", "d": "8/2017"}, {"body": "since seems harmless seems rare looks like actionable item warn whether host child eg return value", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "since added link blog post explaining error boundaries", "d": "8/2017"}, {"body": "specific proposal pr attempting implement close follow", "d": "8/2017"}, {"body": "done yet take", "d": "8/2017"}, {"body": "problem solved still problem", "d": "8/2017"}, {"body": "posted issue search good first bug started beast happens trying improve one thing amp later doubt existence whole thing", "d": "8/2017"}, {"body": "haha sorry think close removed usage modern part codebase delete legacy one soon", "d": "8/2017"}, {"body": "looked preact think solution pretty decent value boolean add remove attribute value string set attribute string example js let val val true output val false output val true output val false output seems like would allow support boolean attributes enumerable attributes", "d": "8/2017"}, {"body": "glad one worried feature deprecated currently using party webcam component found component uses finddomnode see refs used replace functionality note see refs used look short source code srcreactwebcamjs also using finddomnode simple example use component class webcamcapture extends reactcomponent setref webcam gt thiswebcam webcam capture gt const imagesrc thiswebcamgetscreenshot render return think wanted change use refs thenthe example code would require user party library understand dom structure webcam component using video dom element getusermedia api requiring party component user understand dom structure component ideal say least please let know missing simpler way using refs", "d": "8/2017"}, {"body": "hi experienced issue well digging found issue related strange behavior case produce component uses update app state set current section subroutes state reset issue entering section get callbacks almost immediately eg entering section render component children js import react component react import proptypes proptypes import route switch redirect reactrouter import connect reactredux import notfound componentnotfound import routesnestedupdate routesnestedreset action import withrouter reactrouterdom updates nested routes entering subsection menu expanded renders nested routes perform inner switch param routegen routes generator const subsectionfactory routegen gt class subsection extends component routes const mapstatetoprops const mapdispatchtoprops return withrouter connect mapstatetoprops mapdispatchtoprops subsection export default subsectionfactory notice red border enter section index route rendered inside red border code called code modifies state reducer noticed immediately called resets state get menu section everything rendered screen inside red border still component unmounted children visible expected called text rendered index component inside current section happen first render url happens navigate url via dispatching action click menu item link dispatch case one subsection element replaced another later dispatches broken well also must notice root routing implemented using code js lt subsectionfactory result mounted dispatching location change worked ok react", "d": "8/2017"}, {"body": "get chance read comment believe explained exactly case", "d": "8/2017"}, {"body": "yes sorry thought figured wrong suggestions solve case remove complete solution since reset called navigating away section wrapped factory standalone section without factory", "d": "8/2017"}, {"body": "bit hard understand exactly trying maybe moving logic willmount didmount would help", "d": "8/2017"}, {"body": "well yes calc routes render separating logic two methods everything fine js thanks", "d": "8/2017"}, {"body": "gaearon got problem draftjs would help fixed", "d": "8/2017"}, {"body": "acdlite thanks works perfectly", "d": "8/2017"}, {"body": "gaearon iamdustan chatted quick recap please feel free correct missing inaccurate info overall direction react rollup build scripts likely become new npm package consumed third party renderers eg fiber reconciler may directly accessible module eg bit controversial dan nt see value exposing directly concerned increased complexity brian thought exposing reconciler flow types directly would give users way ejecting using build scripts instead rollup script dustin mentioned use case creating custom renderer internal use hooked directly larger application build tooling thus would nt require separate rollup build step would nice reconcile flow types exposed third party renderers use thoughts art renderer might make nice initial test case since least coupled internals react git repo react core renderers eg dom native consume new script way virtual requires eg would rerouted consume local source would enable us dogfooding open questions handle reactspecific stuff eg error codes resultsjson bundle sizes etc next steps one us create either proofofconcept pr indepth proposal proceed group review", "d": "8/2017"}, {"body": "thought still convinced need expose reconciler directly importable even import fake approach makes sense instead making magic import work actually exposing npm inject let say renderer enforce module exports factory reconciler function argument return value real export example reactdom would like js export default function reconciler const domrenderer reconciler host config return render element container imo solves problems magic imports way import reconciler directly intentionally unsupported unsafe people abuse bump issues let lets export anything practice build facade around renderer nt preclude us exposing reconciler directly future use cases prove important far seem necessary renderers get feedback micro babel precedents kind api micro asks export function takes request response babel asks export function takes babel helpers", "d": "8/2017"}, {"body": "nt know got proposal right explain custom renderer outside react package would receive injection custom renderers something maybe get enabled evaluation future", "d": "8/2017"}, {"body": "three would build command looks entry point links together reconciler source compiles rollup", "d": "8/2017"}, {"body": "would great way working reconciler far could see atm ca nt write custom renderers react unless maintain fork sucks edit downgrade lib directory hence export", "d": "8/2017"}, {"body": "issue agree would great see issue work needs done make possible", "d": "8/2017"}, {"body": "fyi started working teeny bit currently planning hacking react rally days", "d": "8/2017"}, {"body": "python somthing called deprecation warning", "d": "8/2017"}, {"body": "rbyers much better apply appropriate touchaction disable scrolling desired yes nt provide flexibility achieve using preventdefault working app instance allows scrolling around list touch move gesture switches dragging single item touch hold move waiting see whether move arrives adding touchaction style nt seem work reliably think ignores touch action entire gesture first movement gesture direction cause scrolling accepts first movement direction nt cause scrolling", "d": "8/2017"}, {"body": "yes absolutely true proposal think exact use case love feedback get developers saying need agree design would work sure something could ship sooner rather later", "d": "8/2017"}, {"body": "gaearon think mutating state directly performance coding practice issue really cause error ie react chrome developer tool see mutated state component still renders previous state definitely invoked mutating statei error happen consistently sometimes see pattern think related react work internally case suppose documentation provide big error prevent mutating state loudly rather saying good practice", "d": "8/2017"}, {"body": "tried solution mdoelker unfortunately nt luck clear button still nt work defaultvalue input element page", "d": "8/2017"}, {"body": "gaearon propose got something like jsx class button extends reactcomponent getbuttonstyle return backgroundcolor blue render return class successbutton extends button getbuttonstyle return backgroundcolor green class dangerbutton extends button getbuttonstyle return backgroundcolor red nt little easy test test getbuttonstyle example less code know accept style prop example bad bad say got collection component allows collectionitems child say want create slightly different type collection overwrite checkforvalidity whatever required however using composition go collection either add list allowed child really good since collection nt want specialcollectionitem accept allowedchild prop thoughts", "d": "8/2017"}, {"body": "reference implementation changed simpler fix introduced", "d": "8/2017"}, {"body": "hey prasannavl issue looks bit stale think still open", "d": "8/2017"}, {"body": "yes using either minified un minified version", "d": "8/2017"}, {"body": "close since error happen master clear solution mix minified unminified files", "d": "8/2017"}, {"body": "detect", "d": "8/2017"}, {"body": "intuitive way check", "d": "8/2017"}, {"body": "thanks suggestion fixed react", "d": "8/2017"}, {"body": "example error appeared right using", "d": "8/2017"}, {"body": "gaearon progress kept updating chinese version docs ready catch react updates would official localization plan accept languages translation", "d": "8/2017"}, {"body": "bvaughn working website revamp likely combine localization setup effort might something month stay tuned", "d": "8/2017"}, {"body": "hi folks react documentation localization effort ready contributions documentation primed localization far great efforts indonesian japanese portuguese brazilian communities please direct interested members community official crowdin project repo discountry would interested helping manage chinese ryouaki please sign leocabeza happy accept folks help gbezyuk folks able help lead russian translation jisupark still able help korean questions please message thread crowdin twitter ericnakagawa", "d": "8/2017"}, {"body": "cc past translations contributors ivanzotov alexzherdev dotu marocchino zhangjg koheitakata camsong interested helping official translations", "d": "8/2017"}, {"body": "help russian translation happy review etc", "d": "8/2017"}, {"body": "gaearon review help identify someone help manage reviewing help effort take time reach high", "d": "8/2017"}, {"body": "generally recommend quality start lower quality translations iterate set high bar beginning", "d": "8/2017"}, {"body": "gaearon aiming high quality initially best", "d": "8/2017"}, {"body": "low quality translation wait someone contribute better one reject somehow", "d": "8/2017"}, {"body": "ericnakagawa help manage reviewing chinese translation", "d": "8/2017"}, {"body": "ericnakagawa love part chinese simplified translation discountry love current chinese docs believe make official one even better concise prefer contact coordinate", "d": "8/2017"}, {"body": "fateriddle submit crowdin pull request chinese doc repo fine already group members find us reactchina", "d": "8/2017"}, {"body": "discountry work leading chinese react translation project added reviewer", "d": "8/2017"}, {"body": "finished translation warnings readme others crowdin discountry really members", "d": "8/2017"}, {"body": "ericnakagawa would mind also adding reviewer simplified chinese thanks", "d": "8/2017"}, {"body": "gaearon deployed chinese version doc server china react chinese doc would mind adding link official react doc website later network issues china slow amp inconvenient chinese users visit github pages site", "d": "8/2017"}, {"body": "ericnakagawa convenient way translators testpreview localized version published seeing button crowdin translations pushed nowhere github right able check online ideal install local environment build docs", "d": "8/2017"}, {"body": "discountry sites use cloudflare ex yarnpkgcom babeljsio accessible easily would great together", "d": "8/2017"}, {"body": "sophiebits actually cloudflare slow visiting china", "d": "8/2017"}, {"body": "smikitky hi new website currently developed nt preview site configured yet new site design live working allow live previews", "d": "8/2017"}, {"body": "keyanzhang added please check email", "d": "8/2017"}, {"body": "came across problem workarounds", "d": "8/2017"}, {"body": "gaearon first beta releases fiber going wondering custom renderer api documented somewhere already place track progress much quoted tweet gave great outlook already seems somewhat outdated sufficient actually start digging topic", "d": "8/2017"}, {"body": "leoselig related", "d": "8/2017"}, {"body": "bennick thing", "d": "8/2017"}, {"body": "podrivo yea ended using", "d": "8/2017"}, {"body": "use case class example extends reactpurecomponent componentwillmount const fetchaction fetchstatus dispatch thisprops fetchstatus fetchstatusesloading amp amp fetchstatus fetchstatusesloaded dispatch fetchaction render another component renders multiple components happens expected component utilizes called twice perhaps better way apologize already covered skimmed comments nt seem completely relevant", "d": "8/2017"}, {"body": "jpdesigndev sure would ever called like", "d": "8/2017"}, {"body": "sorry ljharb nt clear enough component renders example component twice real use case apologize generic examples result dispatching actions twice results action dispatched expected certain perfectly reasonable explanation syncasync timing reason prefer conditional data fetching time perhaps antipattern perhaps someone suggest move data fetching parent would break nice encapsulation edit clarity hopefully js class example extends reactpurecomponent componentwillmount const fetchaction fetchstatus dispatch thisprops notice conditional code componentdidmount fetchstatus would null renders utilizing componentwillmount second componentwillmount call new fetchstatus updated synchronously dispatched action first rendered fetchstatus fetchstatusesloading amp amp fetchstatus fetchstatusesloaded dispatch fetchaction render const someparent props gt", "d": "8/2017"}, {"body": "makes sense two elements invoke two willmounts", "d": "8/2017"}, {"body": "jpdesigndev would suggest move data fetching away components keeping data fetching request dispatching see reduxsaga", "d": "8/2017"}, {"body": "jpdesigndev sorry meant logic checking fetch progress ignoring request", "d": "8/2017"}, {"body": "jpdesigndev example difference points next props nt rendered yet whereas point props rendered fires react commit phase call inside react nt apply update end current commit phase even though fired first update nt applied yet time call second one solution would read directly store since mutated synchronously upon dispatch rather rely react propsstate updated asynchronously", "d": "8/2017"}, {"body": "ljharb sompylasar acdlite thank thoughtsrecommendations sompylasar leaving logic component level sometimes make sense example component really control fetchrefetch without param action creator simple enough conditionally call fetch component instead action creator saga observable epic controlling fetch acdlite thank explanation really helps clarify thoughts works better vs sure loveunderstand idea reading store directly case fact ed component utilizes get props really chiming lay use case seems valid still convinced better way thus far proposed betteralternative ways delegate control action creators side effect middleware read directly store instead relying perfectly willing change mind perhaps forced deprecated folks agree either approaches desirable example also missed point entirely already devising way migrate away", "d": "8/2017"}, {"body": "sompylasar leaving logic component level sometimes make sense example component really control fetchrefetch without force param action creator simple enough conditionally call fetch component instead action creator saga observable epic controlling fetch jpdesigndev two actions fetch leads autocache refetch refetch leads resetting cache stopping previous requests refetching", "d": "8/2017"}, {"body": "mocking refs canvas easy using", "d": "8/2017"}, {"body": "error project uses reactart stack trace points lines sure seems caused calling inside", "d": "8/2017"}, {"body": "suggest trying prevent native event handler synthetic event handler vice versa possible attach synthetic event handler cancelable react event handler", "d": "8/2017"}, {"body": "bbarnell upgrading fix issue", "d": "8/2017"}, {"body": "programmist site working without changing code version", "d": "8/2017"}, {"body": "please read comment", "d": "8/2017"}, {"body": "anyone interested working hoc implementation distributed library interesting pattern seems option paralysis actually implementing convention configuration library could handy understanding correctly", "d": "8/2017"}, {"body": "nickmccurdy humble attempt", "d": "8/2017"}, {"body": "difference either components would implement mechanism custom callbacks somehow devs would always remember bind custom callbacks maybe react could set eg component created current component could used calling nt seem straightforward also normally nt create thousands react elements", "d": "8/2017"}, {"body": "warning casting value solves problem put everywhere checkboxes", "d": "8/2017"}, {"body": "resolved", "d": "8/2017"}, {"body": "nhunzaker sorry nt think issue addressed still quite clearly type e controlled number input appear even though updated value see try typing e nt appear updating value yet think browser chrome version doenst seem firing onchange event value invalid still bit hazy whether browser react either way still issue suggest gets reopened", "d": "8/2017"}, {"body": "looks like happens chrome reports value empty string react sees value nt changed nt assign value property unfortunately react avoid touching value avoid input validations cause nasty sideeffects like dropping decimal places expanding things like nt know bug cc jquense aweary discussion", "d": "8/2017"}, {"body": "point almost think acceptable concession controlled inputs far tell introduce lot logic using key events manually determine need remove numerical characters decimal dropping bug huge pain need avoid introducing changes may compromise fix", "d": "8/2017"}, {"body": "still happening chrome version official build react windows duplicate react afaik uncaught typeerror read property reactinternalinstance particular example culprit tags remove src attribute images error goes away firefox fine machine osx chrome seems browser os specific issue", "d": "8/2017"}, {"body": "reproduce please attach reproducible example saying helpful help us understand problem guarantee excluded known causes duplicate react", "d": "8/2017"}, {"body": "issue bare bones spfx project including react draftjs wysiwyg component works fine chrome edge load fails run load spfx workbench loads click little plus top page select rteeditor add component workbench fail project", "d": "8/2017"}, {"body": "fyi started going passive false path prevent body scrolling mobile scrolling div little heavy use preventdefault block scrolling could add remove handler depending div present fall back bodyheight approach bodyheight fix feels little hacky would nt need passive false", "d": "8/2017"}, {"body": "also need method implemented", "d": "8/2017"}, {"body": "btw documentation currently inaccurate apis exported directly available since beta fix docs release", "d": "8/2017"}, {"body": "title maybe bug chrome input id name nodename override nodename parent form wo nt affect render outermost layer element form react check nodename throw error", "d": "8/2017"}, {"body": "nt use ids anymore probably close change part react", "d": "8/2017"}, {"body": "seems explain reason bug", "d": "8/2017"}, {"body": "similar issue still seems persist react although exactly cause", "d": "8/2017"}, {"body": "ca nt guess anything problem single sentence report like also issue want see fixed please provide project small example reproducing would let us look see indeed bug lock issue prevent happy receive new issue report reproducing example thank", "d": "8/2017"}, {"body": "yeah think seeing problem react ie edge update nevermind seeing bug edge ie", "d": "8/2017"}, {"body": "thanks mnpenner solution worked mentioned stackoverflow credited solution", "d": "8/2017"}, {"body": "walkaround way force set string value capture attribute really important mobile browsers specify camera use capturing image front rear since webrtc supported safari ios seems way get camera image user see example upd seems simply adding attribute element solves issue example found solution", "d": "8/2017"}, {"body": "met problem friday believe issue already attached bug tag still year need create certain amount ul make autoslider every state update need ref get ul change visibility etc turned works every componentdidmount ul ref return array children return array children first null perfect matchs fatman talked every state update even reset ref method every rerender debugged two days tried put animation methods different life cycles none help thank god found issue filter null values work maybe wrong way using react new user sometimes really prefer use refs instance need send request child component server waiting response received parent component child component rerender data received receive new props mess child state updating expecting way sharing componentdidupdate certainly shouldcomponentupdate take care need think carefully define return value shouldcomponentupdate keep child component rerendering state updating avoid new parent props", "d": "8/2017"}, {"body": "believe issue already attached bug tag still year said bug despite mistaken label sometimes really prefer use refs instance need send request child component server waiting response received parent component child component rerender data received receive new props mess child state updating expecting way quite hard understand saying without example intuition using refs data flow intended usage please check documentation lifting state thinking react explanation react data flow", "d": "8/2017"}, {"body": "thanks reply gaearon trying build child component shows persons names first names certain amount person names seconds page turns show next names shows last couple names depending many names received parent component start make splitperson method split persons different ul pages group instance receive person names ul pages method returns ul elements another turnpage method use refs thispagerefs get ul iterate across every seconds reset classes hidden visible render static part render animate mount update maybe wrong way every time get double times pages every update half null refs sorry take problem looks like problem shown stackoverflow", "d": "8/2017"}, {"body": "would recommend try replace dom manipulations refs normal react rendering possible using react animation libraries like transitiongroup react motion want keep using refs need change ref function instead pushing array put object like always values much dom manipulation generally seems suspicious often unnecessary", "d": "8/2017"}, {"body": "thanks time yes nt feel good using react way either trying set state represents pageindex update pageindex thissetstate settimeout need call settimeout componentdidupdate time need receive new data via props parent mess state updating progress new props call componentdidupdate also thus call settimeout problem pattern props changing call componentdidupdate mess child state updating really bugs two weeks anyway way props changing update child react designed way know else head stack overflow case wasting time thank", "d": "8/2017"}, {"body": "looks like using transitiongroup best option trying", "d": "8/2017"}, {"body": "also troubles event tested chrome firefox stable edge worked fine firefox nightly fires onmouseenter fine almost never works onmouseleave event way use synthetic event", "d": "8/2017"}, {"body": "probably wo nt like solution especially browser thinking using yoga particular use case issue react ca nt deal reparenting fine put parentchild tree inside yoga ask compute everything put stuff single parent react absolute positions sizes entire app mind parts need parent order solve issue see goes might suggest solutions example maybe could tell react virtual parent defined could use find node moved thinking loud", "d": "8/2017"}, {"body": "another note autofill events least chromeosx trigger want capture change event input might filled using chrome autofill feature need bind detect keystrokes autofill placate react warning failed form proptype provided prop form field without handler render readonly field field mutable use otherwise set either check render method", "d": "8/2017"}, {"body": "workaround works thx lot", "d": "8/2017"}, {"body": "somehow permeated angular application installing dev tool platform nt even use nt want", "d": "8/2017"}, {"body": "life saver total life saver thanks", "d": "8/2017"}, {"body": "fairly certain confirmed issues fixed yes", "d": "8/2017"}, {"body": "bunch accepts empty string empty object etc selectors cause waiting api calls finish perfect thing tell component data coming wait bit ca nt good work around make utility function use across codebase since looks like issue nt getting reopened time soon sigh", "d": "8/2017"}, {"body": "also agree standard way accept value reasons findiglay stated place continue discussion anymore issue closed belongs facebookproptypes following pull request facebookproptypes", "d": "8/2017"}, {"body": "implemented works beta later try beta", "d": "8/2017"}, {"body": "similar issue class javascript component definition export default class point constructor coords thisx coordsx thisy coordsy static init x return new point x react component javascript thirdparty dependencies import react react import proptypes proptypes app dependencies import polyline polyline import point point component definition class line extends reactpurecomponent getpoints return thispropsstart thispropsend render return linedefaultprops color black specifies type values props lineproptypes start proptypesinstanceof point isrequired lt warning end proptypesinstanceof point isrequired lt warning export component export default line get rid warning thanks", "d": "8/2017"}, {"body": "hi using navigator problem executed ref navigator executed thus ca nt access found issue answers far idea address would highly appreciated thank", "d": "8/2017"}, {"body": "nt use ids anymore probably close change part react", "d": "8/2017"}, {"body": "nt use ids anymore probably close", "d": "8/2017"}, {"body": "may ask supposed work hoping would allow us render adjacent xjs elements something useful get expected feature way surround real list extraneous element", "d": "8/2017"}, {"body": "feature way surround real list extraneous element yes way provide several elements one render information see initial issue post array items known strings join return single string either eat warning work wrap elements keyed improve dom reconciliation would included array strings inside another element jsx", "d": "8/2017"}, {"body": "diligiant returning relevant issue never could still ca nt child array key prop whether internal jsx tag like returned removes big limitation react btw returning gives warning error remove warning easily join strings jsx tags strings add key prop limitation returning arrays", "d": "8/2017"}, {"body": "jespertreetop thank sassanh example seems shy use keys avoid surrounding semantically useless mean go ahead real performance penalty would indeed real improvement", "d": "8/2017"}, {"body": "diligiant doubt introduces performance penalty nt need surrounding useless unless surrounding strings surrounding strings avoid array join strings strings add key component example two components return nt need surround neither components like always array thanks new release needed surround array", "d": "8/2017"}, {"body": "sassanh cool course use case multiple components happy", "d": "8/2017"}, {"body": "actually seems odd warn missing keys items strings would nt expect us existing behavior strings inside div fix toplevel strings since impossible give keys", "d": "8/2017"}, {"body": "gaearon sorry example misleading meant components checked react nt issue warning rendering array multiple strings nonetheless puzzled requirement rendering array sake avoiding surrounding component understand nothing probably raise tons questions nothing better offer finally thank", "d": "8/2017"}, {"body": "warning exact every usage arrays components boils exact extra work reconciler thus exact potential optimization setting surprise would arrays components treated differently depending imagine would prompt stack overflow questions mention think would involve overhead keep track first place", "d": "8/2017"}, {"body": "time returning array function want warning place seems times would nt want warning minority way react know appropriate warn", "d": "8/2017"}, {"body": "warning necessary lack keys cause correctness issues performance problems explained many issues asking keys necessary encourage search read discussions agree docs could clearer something likely look next time docs change sprint conceptual differences arrays directly returned render arrays inside div reason would key warning one case need work way affected problems keys missing said understand annoying specify keys static content like nt specify keys write jsx structure children statically known thus never reorder would nice way arrays future might solve adding explicit support fragments jsx syntax like could produce array implicitly assign numeric indexes children case know never reorder guarantee given jsx child expression exactly lets us get away without specifying keys normal jsx code div might multiple children nt syntax yet known limitation", "d": "8/2017"}, {"body": "jespertreetop amp zwily gaearon explained way better know big deal want react thrive", "d": "8/2017"}, {"body": "gaearon another issue syntax proposal watch instead discussion issue searched around nt able find one", "d": "8/2017"}, {"body": "smrq question follow everything awkward limitations onetoone result keys jsx syntax fragments ticket know also suppose fibers gon na fix issue keys looks like unfulfilled dream", "d": "8/2017"}, {"body": "keys nt issue fundamental necessary part view framework allows create dynamic lists see detailed explanation", "d": "8/2017"}, {"body": "spicyj actually issue since cause extended energy spendings developers fundamental possibility program view framework without requirement example", "d": "8/2017"}, {"body": "fundamental possibility program view framework without requirement example vidom use keys collections though might technically work without would likely much slower react could also technically work without keys quite unexpected find half components update remove single item list keys one item unmounted", "d": "8/2017"}, {"body": "gotobusstop vidom use keys required without really big cases lot updates cause real performance problems consider part possible optional example used ferformance tweaks individual cases", "d": "8/2017"}, {"body": "veged example vidom struggling without keys idea supposed reorder elements discards instances render root component", "d": "8/2017"}, {"body": "someone quite familiar virtualdom space say keys necessary predictable dom amp state updates amongst similar siblings keys typically optimization fact usually opposite", "d": "8/2017"}, {"body": "however unambiguous issue gaearon described fully static usage arrays difference static arrays static jsx fragments", "d": "8/2017"}, {"body": "brigand doubt reordering statefull components may cause issues force every cases opinion struggle looks controversial", "d": "8/2017"}, {"body": "keys important react even nt seem matter case eg components stateless nothing preventing someone else team add stateful component even plain dom input somewhere levels months might forget nt keys thus reorders may cause state input value associated wrong item encourage specify keys everywhere dynamic lists leads hardtotrace bugs think better spend extra ten seconds specifying key ten hours debugging state component several levels gets messed corner case fully agree inconvenient specify keys list known static never reorders welcome discuss jsx repo ca nt find issue welcome create new one since thread lot subscribers feature implemented would like lock avoid spamming lot people notifications hope clarifications address concerns welcome create new issue discussion specific topic", "d": "8/2017"}, {"body": "smrq created proposal issue syntax jsx repo", "d": "8/2017"}, {"body": "dantman thank solution getting value callback one discussed worked crossbrowser including phantomjs edit still nt solution safari nt get set button", "d": "8/2017"}, {"body": "nice async component interface timurtu hey everyone wanted chime various things relate directly thread tracking thread long time one considering ssr think routelevel datafetching makes sense reduxfirst router datafetching solving use case async middleware server rendering redux stupid simple step step guide reduxfirst router like never seen done serverrender like pro w reduxfirst router steps lastly codesplitting right also ie ssr splitting turns simultaneously major pain point successfully achieved never general package help community react universal component webpackflushchunks extractcsschunkswebpackplugin family packages really solve matter first time basically allows render components synchronously server importantly transports exact chunks rendered client initial synchronous render client well even get css chunk stylesheets via webpack plugin different timurtu shared many components require loading parsing evaluating rendering finally seconds later requesting dynamic imports solutions solve flash unstyled content fouc embed page exact chunks rendered server universal name family packages allows far faster time till interactive tti synchronous way operates like traditional webapps learn article react universal component amp babelpluginuniversalimport know nt address route level vs component level proscons first link focuses primarily basically boils component level bad ssr nested components whose data must fetched sequence rather parallel correctly one fetch make per route well better formalizing contract attaching data dependencies route entity instead many others came conclusion reduxfirst router formalizes nicely along lines sort contracts make redux pleasant work reduxfirst router makes lot old paradigms new surprisingly fits right missing piece redux ecosystem ever wanted router native redux workflow give reduxfirst router try relatively new newcomer open source something worked basically year gotten lot traction months people lovin really hope check give shot also launch article explains far better solution redux react router gets vision right way also excellent reduxlittle router missed unfortunately pre release reduxfirst router step beyond reduxlittlerouter primary difference rlr rfr rfr dispatches different action type per route ie url change instead always lets switch url changes unique types reducers like actions may seem small makes huge difference nt require components something unnecessary redux land also huge laundry list features reduxfirst router supports datafetching route react native react navigation code splitting prefetching would love hear people thoughts", "d": "8/2017"}, {"body": "faceyspacey thank think addresses problem want set props based async data example return icon promise definitely different way looking things reduces redux action boilerplate tie async components state really want make request one time render component things like polling data stateful using redux probably makes sense", "d": "8/2017"}, {"body": "faceyspacey see saying route level would nt better smaller components rely fetching data need rendering everything else around synchronously", "d": "8/2017"}, {"body": "better react native large organizations like facebook react native apps maybe react native ssr view debate want simply possible without multiple fetches per request unless u limit one component fetch point better formalizing contract route entities react native spas sure testing components data deps built pain apollo stuff last checked long todo list get datapaired component testing really right ie seamless prefer setup one store easy setup mock reuse u tests testing components simple synchronous rendering snapshot taking add data deps components testing react becomes less intuitive people automate less standard closer custom adhoc code productive store populated asynchronously obvious way rather potentially different strategies every async component needs populated component level ssr u testing strategy seamless way u mega corp makes sense every developer nt need touch top route level potentially break others fb pioneered route relay graphql fact matter like companies world truly boat view colocation hype reality peopleappscompanies get hang route level thing package really well like reduxfirst router far less tangled easier develop approach teams whose members allowed touch route level check demo homepage codesandbox basically see done love hear opinion keep mind spa u review demo repo boilerplate ssr example good start", "d": "8/2017"}, {"body": "way add space css", "d": "8/2017"}, {"body": "jordanbtucker css level use horizontal margins bear lot problems reserved emergency cases", "d": "8/2017"}, {"body": "kind seems like might breaking change people especially since behavior versions react waited", "d": "8/2017"}, {"body": "ljharb specifically concerned seems like maybe nit issue meant comment", "d": "8/2017"}, {"body": "jquense correct issue new react longer fire clicksactivations alreadyselected radio buttons someone relying log activations including keyboard activations alreadyselected radio buttons would code broken understanding correctly", "d": "8/2017"}, {"body": "ah ok onchange firing twice double clicks already selected radios bug nt ever intended behavior place category issues fixed pr range inputs firing consistently inputs missing events ie", "d": "8/2017"}, {"body": "adding think missed case old behavior correct sense use case glad chat might better open another issue since one ton history point also sorry inadvertently moved cheese input events code hairy tension semver breaking changes bug fixes particularly tough navigate", "d": "8/2017"}, {"body": "jquense perhaps bug fifteen major versions react definitely agree change ends correctbetter behavior make changes airbnb codebase account preupgrade would broken upgrade worked think probably would better consider semvermajor hope future react err side caution nonmajor releases", "d": "8/2017"}, {"body": "still facing problem ios chrome autofill works fills field nt change state", "d": "8/2017"}, {"body": "problem instead value use defaultvalue input type text name mokedvalue defaultvalue thismyvalue onblur thisupdatemyvaluebind onwheel thisonwheel", "d": "8/2017"}, {"title": "request additional validatorsemail documentation details", "body": "submitting current behavior validatorsemail documentation simply says validator performs email validation want know email address characters might permit prohibit initial code pattern sure created validatorspattern need decide want switch validatorsemail documentation little information expected behavior would like read validatorsemail prohibits minimal reproduction problem instructions na motivation use case changing behavior want help deciding validators pattern versus email environment angularforms browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others", "num": "18985", "d": "8/2017"}, {"title": "please remove ngzone shit upcoming update", "body": "submitting current behavior please beg know fix around ngzones believe developers moving alternatives fuck would using stupid function nt update ui use shit like ngzone mean great job angular angular much problems developers want get rid ngzone upcoming release mean know angular focuses enterprise development make optional ans let ui update value change mean need focus functionality rather thinking view react change request team angular listen public developers working angular long time expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18984", "d": "8/2017"}, {"title": "routerlinkactive race condition routerlink created dynamically template ref", "body": "submitting current behavior routerlinkactive sets immediately resolved promise creating promise resolving links may changed href manifested following plunker apologies reproduction minimal enough called container creates new embedded view implicit data newly created view router link uses implicit data link appears router update function called twice router link created call container change detection runs provide implicit data runs first time sees link undefined matches current route sets promise resolve setting true promise resolves called href nothing still false moment thread completes promise resolves incorrectly sets true calling manually corrects routerlinkactive expected behavior router link active reflect properly race condition promise minimal reproduction problem instructions see motivation use case changing behavior caused bug angular material cdk table see issue environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18983", "d": "8/2017"}, {"title": "ngcontent call lifecycle hooks", "body": "current behavior situation containercomponent parentcomponent js js class childcomponent ngoninit run js sub ngoninit thissubmyobservalbesubscribe gt ngondestroy thissubunsubscribe ngondestroyngiffalse need use ways implement expected behavior motivation use case changing behavior environment browser", "num": "18982", "d": "8/2017"}, {"title": "routernavigateurl gt zonejs drainmicrotaskqueue running endless loop", "body": "submitting current behavior trying simple router navigation line appcomponentts application goes infinite loop zonejs tasks cleared line time line executed microtaskqueue contains task infinite loop keeps going logout called simple click handler expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18981", "d": "8/2017"}, {"title": "using router href directives ngupgradelite", "body": "submitting ngupgradelite solves common performance issues previous ngupgrade scenarios allowing angularjs directives created within angular part application one needs directive control migrate angular sense migration path bottomup directive dependency tree however directives outside users control commonly one still uses angularjs router nghref uihref directives found anywhere app saying used angular part application overly prohibitive left since angularjs injectables still freely injected angular reimplement nghref uihref within angular mean old router run angular zone thus hitting performance issues ngupgrade start two router solution getgo angularjs router angular router workout standard strategy pass routes gkalpak christopherthielen thoughts", "num": "18980", "d": "8/2017"}, {"title": "ngupgrade concurrent digest occurs using angularjs ngclick directive open angular route", "body": "submitting current behavior hybrid app uses angularjs angular routers handle different routes use angularjs ngclick directive open angular route concurrent digest would occur angularjs ngclick angular url change handler via ngupgrade would call stack trace error error rootscope inprog digest already progress anonymous beginphase digest anonymous schedulerfn safesubscribertryorunsub safesubscribernext subscribernext subscribernext subjectnext eventemitteremit checkstable onleave oninvoketask zonedelegateinvoketask zoneruntask zonetaskinvoketask invoketask globalzoneawarecallback browserselfurl setbrowserurlwithfallback anonymous digest apply anonymous dispatch mhandle zonedelegateinvoketask zoneruntask zonetaskinvoketask invoketask globalzoneawarecallback expected behavior ngupgrade check calling", "num": "18979", "d": "8/2017"}, {"title": "check data type component properties", "body": "angularcore typescript childcomponent swear data property belong test data type typescript angular able check incoming properties component", "num": "18977", "d": "8/2017"}, {"title": "location overridden", "body": "submitting current behavior location marks implementation clearly internal member variables expected behavior location definition enough information subclassed minimal reproduction problem instructions typescript injectable class mylocation extends location motivation use case changing behavior want store state title history location api dumbed version history api without title state since router party code would using location navigation provide implementation location nt sufficient provide strategy location nt pass additional parameters given environment browser na tooling issues na", "num": "18976", "d": "8/2017"}, {"title": "activation guard child component affects creationrendering parent component", "body": "submitting current behavior preconditions nested routing tree like compacompbcompc activation guards component activation guards components return true async operationtimeout usecase open compa gt waiting compa guard gt render compa open compb gt waiting compb guard gt render compb open compc gt waiting compc guard gt render compc usecase open compacompbcompc gt waiting compa guard gt waiting compb guard gt waiting compc guard gt render compa render compb render compc preconditions nested routing tree like compacompbcompc activation guards component activation guards components except last one return true async operationtimeout guard last component returns false async operationtimeout usecase open compa gt waiting compa guard gt render compa open compb gt waiting compb guard gt render compb open compc gt waiting compc guard gt nt render compc usecase open compacompbcompc gt waiting compa guard gt waiting compb guard gt waiting compc guard gt nt render components expected behavior usecase usecase ok usecase expected open compacompbcompc gt waiting compa guard gt render compa gt waiting compb guard gt render compb gt waiting compc guard gt render compc usecase expceted open compacompbcompc gt waiting compa guard gt render compa gt waiting compb guard gt render compb gt waiting compc guard gt nt render compc minimal reproduction problem instructions str click show components log guards resolved onebyone components appeared guards resolved issue related totally agree child canactivate guard wait parent comple parent components creationrendering affected child canactivate guard activation parent route snapshout wait child canactivate guards resolved successfully environment", "num": "18975", "d": "8/2017"}, {"title": "behaviorsubject instead observable", "body": "type property thanks access data simpler way instead set type causes compilation errors change many properties type", "num": "18974", "d": "8/2017"}, {"title": "show details expressionchangedafterithasbeencheckederror warning", "body": "submitting current behavior current warning message telling us values change detection nt enough information help debug never sure object property referring also lines always reliable cases use array objects messages like provided see file name presume something template clear also note bug line line mentioned angular expected behavior perhaps would nice adding warning message propertyobject changed value would expect warning message something like instead ps note key app class also values object string case would easier debug object minimal reproduction problem instructions plunker give example context provided angular plunker fork adrienboulle comment object exists export class app implements afterviewinit img image isloaded boolean false testobject constructor private elementref elementref public ngafterviewinit void thisimg thiselementrefnativeelementqueryselector img thisisloaded true public geturl string return public getheightpx string thisisloaded return comment line end another bug issue referring method pointed adrienboulle issue case much easier debug line correct also values easier find property however message error could missing method would make debugging easier motivation use case changing behavior make easier debug popular error many issues environment", "num": "18970", "d": "8/2017"}, {"title": "allow route params passed component inputs", "body": "submitting current behavior routing component one must inject activatedroute service retrieve route data use inside component expected behavior defining routes specific params could used provide values inputs within component example minimal reproduction problem instructions configure routes specifying data passed component inputs possible motivation use case changing behavior team creating completely modular components publishing private npm repo may used angular application achieving modularity use inputs however finding adequate wanting provide data routeurl parameters finding use either inputs routeurl parameters provide dynamic data use combination presents problem decide takes precedence present opinion breaks modularity reusability provided input functionality inherent components environment", "num": "18967", "d": "8/2017"}, {"title": "typing error documentation angular metadata", "body": "submitting current behavior typing error first example documentation angular metadata line missing closing expected behavior logically example written follow unless missed something minimal reproduction problem instructions go documentation look first example motivation use case changing behavior example seems typing error environment", "num": "18964", "d": "8/2017"}, {"title": "angular binding object array component view ngmodels", "body": "submitting current behavior tried bind model object array view problem submit form nt array many properties component template submit form many properties array expected behavior submit form would like object array tried many things differents posts always many properties array demo environment", "num": "18962", "d": "8/2017"}, {"title": "function passed transition method animationmetadata", "body": "submitting current behavior looks like longer pass function transition method animationmetadatats even though animationmetadatats still comment transition method signature commit made matsko jasonaden expected behavior function still used determine animation run state changes represented string supported minimal reproduction problem instructions type definition issue commit removed ability pass function transition method update comments function motivation use case changing behavior existing code uses transition method broke upgrading would like know feature supported environment", "num": "18959", "d": "8/2017"}, {"title": "option element value attribute binding correctly", "body": "submitting current behavior create component following html one two three true hello json hello true true expected behavior using attribute brackets parse value proper type keep string minimal reproduction problem instructions see example motivation use case changing behavior works properly directive angularjs expecting behavior angular environment", "num": "18958", "d": "8/2017"}, {"title": "aio clarify docs use entrycomponent", "body": "submitting current behavior current doc text application components loaded declaratively angular uses component selector locate element template creates html representation component inserts dom selected element nt entry components expected behavior recommend changing first sentence simply say application components loaded declaratively minimal reproduction problem instructions link doc section motivation use case changing behavior disagree application components loaded declaratively implies application components used nested child components many applications majority components maybe routed instead stating components nested child components assumes compositionbased application architecture many devs may using environment", "num": "18957", "d": "8/2017"}, {"title": "deploying angular app subdirectory", "body": "need quick help currently angular app works fine example hit url app loads works everything fine question wanted load app url lets say could please let know tried ng build bhangular take dist deployed apache tomcat giving lot errors", "num": "18954", "d": "8/2017"}, {"title": "support string interpolation custom component urlstyles webpack", "body": "submitting current behavior creating custom component urlstyles array generating support strings project would need able interpolate value string works also know angular guidelines theming advise create use classes case may brands loading brands style url acceptable const brand component selector approot templateurl appcomponenthtml styleurls since interpolation works still issue way angular request everything styleurls basically webpack interprets brand variable wildcard following design siblings folder included bundle expected behavior new behavior requesting content url stylesurl generate interpolated string requiring avoiding bundling siblings folders minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18953", "d": "8/2017"}, {"title": "getting error loading umd module imports highcharts highcharts js main module", "body": "getting error loading umd module imports highcharts highcharts js main module testzip please find attached sample application code issue application details created amatapfanalytics umd module amatapfanalyticsumdjs utilized across different application testsrc folder module converted single amatapfanalyticsumdjs bundle using gulp testgulpfilejs gulp configuration file amatapfanalyticsumdjs imported highcharts highcharts included external module gulpfilejs since external amatapfanalytics umd bundle highcharts configured systemconfigjs get loaded loading amatapfanalytics module main application located testapf folder load highcharts amatapfanalytics testapf nodemodules loading getting error error systemjs read property core undefined typeerror read property core undefined eval eval eval objecteval evaluating evaluating evaluating error loading eval eval eval objecteval evaluating evaluating evaluating error loading", "num": "18951", "d": "8/2017"}, {"title": "angular complaining dataurl svg image unsafe", "body": "submitting current behavior using itemimage set containing valid svg image angular complaining following image wo nt load expected behavior would expect angular smart enough understand data urls amp either sanitize better way perfectly fine simple svg mock image still need battle make work minimal reproduction problem instructions create component property imageurl set value template insert motivation use case changing behavior make angular domsanitizer intelligent nt yield false positives environment", "num": "18950", "d": "8/2017"}, {"title": "universal meta tags detected facebook google debugger added thru observable", "body": "submitting x bug report current behavior implemented angular app base universal starter app deployed staging server update meta tags page server side could see chrome debugger scrap website absolutely meta tags resolved google update problem seems observable following code example seen facebook google tags wo nt respectively addingupdate meta tags thru observable seems facebook google wo nt able discover expected behavior scrap website meta tags resolved minimal reproduction problem instructions appcomponentts indexhtml environment angular tooling issues node version others screenshots rendered tags chrome debug", "num": "18948", "d": "8/2017"}, {"title": "throw err resolve issue", "body": "using node version npm version installed angular cli command throw error throw err resolve issue", "num": "18947", "d": "8/2017"}, {"title": "implement method create instances using injector singletons", "body": "submitting x feature request method allowed create instances class instead singleton new deprecates nt equivalent impossible migrate one used method codebase", "num": "18946", "d": "8/2017"}, {"title": "microsyntax observable resolve ngfor", "body": "submitting current behavior moment resolve observable variable like foo async observable put ngif front null checks expected behavior minimal reproduction problem instructions motivation use case changing behavior split nullchecks observables resolution environment", "num": "18945", "d": "8/2017"}, {"title": "routing navigation documentiation", "body": "submitting documentation issue request documentation routing navigation page milestone activatedroute onestopshop route information heading code snippet calls gethero function gethero service shown problem gethero function takes parameter getheroservice shown import injectable angularcore import hero hero import heroes mockheroes injectable export class heroservice getheroes promise see take slow appendix getheroesslowly promise appreciate amazing tutorial gethero function defined piece together code works thanks", "num": "18944", "d": "8/2017"}, {"title": "ie throw unable get property addeventlistener undefined null reference", "body": "submitting bug report unable get property addeventlistener undefined null reference aggridangular version angular version browser ie language typescript xx screenshot", "num": "18943", "d": "8/2017"}, {"title": "childactivationstartend events seem fire eagerly", "body": "seems new event likely well fire frequently seem fire whether new route reactivated intended fire parameters change way also new tests needed current tests nt sufficient verify behavior", "num": "18942", "d": "8/2017"}, {"title": "nested p tag inner component html", "body": "type nested p tag inner html component cause template parse error unexpected closing p tag error hope fixed next release", "num": "18940", "d": "8/2017"}, {"title": "hope common animation scenario solved version", "body": "submitting current behavior animation router intensive work thank hard work guys put every day issue animation common scenario problem child route going common case routereusestrategy child route quotes issue mlcmlapis maybe would good idea add case explicitly angulario docs suppose many similar questions future matsko unfortunately another animation bug pr causing bug happen update plnkr goes still nt know get animation work common scenario wonder guys could solution problem version expected behavior working animation routereusestrategy child route version minimal reproduction problem instructions motivation use case changing behavior working animation routereusestrategy child route version would great please tell us environment os linux angular version angularcli angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript xx node aot issues node", "num": "18939", "d": "8/2017"}, {"title": "unresolved dependencies causes language service generate odd errors", "body": "submitting current behavior peer dependency missing language service sometimes report read property skipself null expected behavior error reported explain dependency could resolve ignored minimal reproduction problem instructions using cli create default application open vs code open", "num": "18937", "d": "8/2017"}, {"title": "issue warning styles used animation transition", "body": "turns values nonanimatable properties respect webanimations means used animation styles applied animation lifecycle issue posted webanimations spec angular work harmony limitation two things need done issue warning transition sequence makes use anywhere within style function calls exception used style happens first frame animation contains display supported styles applied immediately animation finished even parent animation ongoing logic apart webanimationsplayer", "num": "18936", "d": "8/2017"}, {"title": "button submitted give submitted value reactive form group true", "body": "submitting current behavior submit form know button submitted event gives response expected behavior button submitted give value submitted true fromgroup button already clicked minimal reproduction problem instructions motivation use case changing behavior want disable button form invalid form submitted want show message required fields environment", "num": "18934", "d": "8/2017"}, {"title": "please improve test double documentation", "body": "submitting current behavior current test double documentation imo kind trivial instance mock case route wo nt help much expected behavior wish test route test double understand documentation minimal reproduction problem instructions post mine stackoverflow try test parent route subscription also created plunker motivation use case changing behavior tests involve routing might get difficult test mocks observables wish better documentation examples environment", "num": "18933", "d": "8/2017"}, {"title": "empty routerlink ngfor sets href null", "body": "submitting current behavior code result correct routering staying current page href set expected behavior expected href show currently active url eg behaviour standard used outside loop minimal reproduction problem instructions add lines angular app routerlink motivation use case changing behavior environment", "num": "18931", "d": "8/2017"}, {"title": "get datas parent route element", "body": "submitting expected behavior route like associated component parent component parent load object http request using path parenthtml parenthtml tag filled called uri child url associated component child need simple need get previously parent component mainly data object instancied path currently get parent path get path param reexecute http request get object", "num": "18930", "d": "8/2017"}, {"title": "deepest outlet path string nested outlets path parsed multiple child routes", "body": "submitting current behavior navigates navigates examples plunk primary outlets expected behavior routerlink directives command reach minimal reproduction problem instructions plunker illustrates issue routes primary ro aux ro primary primary aux primary aux aux section may reproduce clicking tags highlighted emoji motivation use case changing behavior behavior without nested outlets path nt routes environment browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18928", "d": "8/2017"}, {"title": "controlvalueaccessor syncrhonize model view", "body": "submitting current behavior input text field lost synchronization form control value dom setter function manipulate value wo nt chars inputtext component implement controlvalueaccessor template expected behavior setter function bounded dom values turncated view minimal reproduction problem instructions order reproduce issue start adding characters input fields see fromcontrol value truncated correctly chars view updated see plunker demonstrate issue motivation use case changing behavior environment", "num": "18924", "d": "8/2017"}, {"title": "route transition longer working loaded component animation trigger", "body": "submitting current behavior navigating components using animations route changes causes newly loaded component display display none style component also animation trigger defined even used animations components working expected however simply adding animations trigger someanimation cause display working however updating longer works loading component directly without changing route shows component expected expected behavior component display route changes even router child component animations minimal reproduction problem instructions appcomponentts childcomponentts motivation use case changing behavior environment", "num": "18923", "d": "8/2017"}, {"title": "regression renderremoveclass function", "body": "submitting x regression behavior used work stopped working new release bug report feature request documentation issue request support request gt please submit support request instead see current behavior upgrading angular directive seems throw error looks like minimal reproduction problem instructions upgrade environment angular version browser x chrome desktop version official build chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18922", "d": "8/2017"}, {"title": "animations prefixes broken angular", "body": "submitting current behavior provided animation property webkittransform supported css property animations expected behavior works beta minimal reproduction problem instructions animation vendor prefix different browser webkittransform ms webkit webkit ie environment browser tooling issues node version platform windows pro", "num": "18921", "d": "8/2017"}, {"title": "base class template updated child calls function", "body": "submitting current behavior using class inheritance base class div visible depending value one variable thisvisible function called inherited component templates base clas get updated tried using changedetectorref force template refresh work expected behavior expect template updated see plunker minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18920", "d": "8/2017"}, {"title": "async select field new syntax", "body": "submitting current behavior currently possible easily select property async object template without either declaring variable using using pipe existential operator ie expected behavior motivation would convenient new syntax select properties directly observable vein typescript existential operator eg instead hero async name hero async description alternatives exist eg heroname herodescription would nice hero name hero description meaning practically syntax sugar", "num": "18919", "d": "8/2017"}, {"title": "really need official native framework like react native", "body": "angular great love think important reason people chose react react native know ionic nativescript official native framework angular native would game changer plan", "num": "18918", "d": "8/2017"}, {"title": "expressionchangedafterithasbeencheckederror hostbinding animations", "body": "submitting current behavior using animation update property using hostbinding getting value changed quickly even though using expected behavior error minimal reproduction problem instructions please find simple reproduction get error simply click quickly several times motivation use case changing behavior believe nt happening nt bidirectional data flow might cause issues explicitly saying changes using environment angular", "num": "18917", "d": "8/2017"}, {"title": "cordova ios cpu usage high", "body": "hi using angular cordova already built app animations api calls see cpu usage iphone device also getting heated chrome profiling found animations running background also corrected correction also issue exist ios problem due zone js handle rxjs cordova animation calls default zone js change detection suggest better way debug ios similar chrome ios safari web inspector gives time profiler able figure animation issues angular zone js cordova ios rxjs", "num": "18916", "d": "8/2017"}, {"title": "ngupgrade oninit fires early downgraded components", "body": "submitting current behavior following component downgraded used angularjs application typescript export class implements oninit onchanges input foo number ngoninit consolelog nginit thisfoo ngonchanges consolelog ngonchange thisfoo lowercamel registering downgradecomponent component propagatedigest true used like order events ngoninit fires foo set ngonchanges fires expected behavior order events foo set ngonchanges fires ngoninit fires regular angular component would behave", "num": "18913", "d": "8/2017"}, {"title": "issue solved please", "body": "npm serve throw err error find module buffershims functionmoduleresolvefilename functionmoduleload modulerequire require object c usersdouble modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload double edge doubleedge angular", "num": "18911", "d": "8/2017"}, {"title": "web component connectedcallback prevented application root component", "body": "submitting current behavior angular running inside application root component somehow blocks element specifically regarding getting attributes executing however placed inside router outlet works fine expected behavior elements created using behave per spec regardless location inside application minimal reproduction problem instructions repo github pages create place inside application root component code inside set execute immediately references fail execute however wrapping contents method work correctly motivation use case changing behavior correcting behavior would result many custom elements working correctly placed inside application root component environment", "num": "18909", "d": "8/2017"}, {"title": "ngclass content support docs", "body": "submitting current behavior page reads call setcurrentclassess initially dependent properties change expected behavior change setcurrentclassess setcurrentclasses minimal reproduction problem instructions visit search text motivation use case changing behavior spelling mistake environment", "num": "18908", "d": "8/2017"}, {"title": "ngif working material mdselect within router x", "body": "think need plunkr code works fine", "num": "18900", "d": "8/2017"}, {"title": "documentation issue", "body": "issue animation tutorial following link fade animation variable error open closed inside style parameter function current example", "num": "18899", "d": "8/2017"}, {"title": "undocumented", "body": "submitting current behavior see npm version released version documented changelog expected behavior changelog describe like releases", "num": "18898", "d": "8/2017"}, {"title": "aot production runtime error exporting named imports", "body": "submitting current behavior importing following import moment moment export moment moment clarity using angular aot compiler production built using ng build aot prod generate code like happened two imports renamed adding small modules moment objectassign expected behavior work works configurations except aot prod minimal reproduction problem instructions steps suffice reproducible create small plunkr clock report moment motivation use case changing behavior work environment angular angularcli moment objectassign browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues platform windows", "num": "18897", "d": "8/2017"}, {"title": "reload last page back", "body": "router tree navigate sceniccomponent homecomponent back homecomponent homecomponent call ngoninit reload homecomponent thank", "num": "18896", "d": "8/2017"}, {"title": "animation using working", "body": "submitting see plunkr attempting simple animation children appears using display working inside use instead please see plunkr environment", "num": "18895", "d": "8/2017"}, {"title": "providnig multitoken component overrides providers module", "body": "submitting current behavior module providers js provide atoken usevalue foo multi true provide atoken usevalue bar multi true component module js component selector myapp template providers tokens json providers provide atoken usevalue baz multi true export class appcomponent constructor inject atoken public tokens string rendered plain providers baz expected behavior expect multiproviders mixed rendered plain providers foo bar baz minimal reproduction problem instructions motivation use case changing behavior confusing workaround could think following create another token useexisting providers module keep adding js providers provide anothertoken useexisting atoken multi true provide anothertoken usevalue baz multi true problem however providers flattened expected rendered plain providers foo bar baz environment angular version browser", "num": "18894", "d": "8/2017"}, {"title": "httpclient progress event total property progress event", "body": "submitting current behavior using httpclient monitor progress events cross domain get request consuming data youtube api cors tokens correctly set followed guide ca nt obtain events type downloadprogress total property tried adding headers reportprogress true observe events headers new httpheaders set contenttype applicationjson set accesscontrolallowheaders contentlength set accesscontrolexposeheaders contentlength actually receive access retrieved response observing response object missing something expected behavior obtain eventtotal value events type uploadprogress minimal reproduction problem instructions almost code get request eventtype httpeventtypedownloadprogress motivation use case changing behavior environment", "num": "18892", "d": "8/2017"}, {"title": "animationplayergetposition always returns zero", "body": "submitting current behavior animationplayergetposition always returns expected behavior getposition return current animation inferred api docs minimal reproduction problem instructions create animation programatically live example environment", "num": "18891", "d": "8/2017"}, {"title": "platformlocation href origin params", "body": "submitting current behavior platformlocation object exists dts expected behavior platformlocationdts definitions motivation use case changing behavior thats weird ca nt compile code using environment", "num": "18890", "d": "8/2017"}, {"title": "relative route resolver", "body": "submitting current behavior relative navigation pass extra parameter like relativeto activatedroute however resolver access activatedroutesnapshot activatedroute becuse page loaded yet using previous activatedroute possible user navigate router page relative navigation unknown page impossible expected behavior able navigate relative destination resolvers minimal reproduction problem instructions motivation use case changing behavior really useful navigate another page relative resolve destination example case error error handling right possible scenarios error handling resolvers navigate known page absolute url nothing stay source environment", "num": "18889", "d": "8/2017"}, {"title": "angular url routing hash working firefox", "body": "project url like routing home page button login like login clicking login button home page site firefox redirecting auto redirecting suppose go chrome going", "num": "18888", "d": "8/2017"}, {"title": "file download angular", "body": "need help downloading file using angular typescript uploading storing files database blobs trying download dynamic gridused code failed download file coming url codes catch err gt return subscribe res response gt var documentcreateelement ahref urlcreateobjecturl resblob adownload filename start download aclick", "num": "18887", "d": "8/2017"}, {"title": "aot compiler working route data property", "body": "submitting current behavior aot compiler resolving object access routes data property expected behavior aot retrieves property value accessed object minimal reproduction problem instructions created rolests created approutingmodulets import roles sharedrolests const myroutes routes path component data roles roles would expect aot would get value insert data property instead motivation use case changing behavior give possibility externalize information given data property routes environment tooling issues node version platform linux ubuntu windows", "num": "18886", "d": "8/2017"}, {"title": "httpclient error typeerror createlistfromarraylike called nonobject", "body": "submitting current behavior adding headers cloned request calling get following exception interceptor ts public intercept req httprequest next httphandler observable ts injectable export class contractservice constructor private httpclient public getcontracts observable return api url expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18885", "d": "8/2017"}, {"title": "httpparams encoode stringified object correctly", "body": "submitting current behavior generates expected behavior shoul get motivation use case changing behavior able use complex url params simple string keyvalue pairs seems forcefully denies encoding colon environment tooling issues node version platform windows", "num": "18884", "d": "8/2017"}, {"title": "invalid inline css", "body": "submitting current behavior using latest master compiling components styles containing properties dash like sometimes invalid code generated objects contain invalid property nt seem always happen though seen component contains following styles array lot things important ones compiled following code generated important parts two objects invalid javascript key contains dash enclosed quotes instead expected behavior valid js code generated minimal reproduction problem instructions compile aio new motivation use case changing behavior invalid code generated environment cc tbosch", "num": "18883", "d": "8/2017"}, {"title": "navigation occurs previous one finished previous one fails completely", "body": "submitting current behavior router navigation occurs previous navigation finished previous navigation fails completely condition becomes true state never set means state queryparams listening example change never registered expected behavior state change resolve end minimal reproduction problem instructions guessing done purpose skip unnecessary navigations however result unexpected random behaviour setting configuration queryparams first app load use activatedroutesnapshot since initial state empty listen queryparams observable read configuration available app inside iframe receive new url postmessage parent calls navigatebyurl inside parent message listener happens parent immediately schedules navigation let say root app initial navigation sometimes nt finish queryparams observable subscriber nt get new values results configuration sometimes getting set delay parent postmessage second settimeout always works initial navigation contains queryparams finished way wanted tackle first setting queryparamshandling call navigatebyurl however nt help since initial navigation completely rejected queryparams available anymore either environment browser x chrome desktop version", "num": "18882", "d": "8/2017"}, {"title": "allow navigation outside appbasehref", "body": "submitting current behavior currently set appbasehref routing correctly works inside handles unknown routes expected following rules specified route configuration however try navigate different hash router detects change treats unknown route expect designed expected behavior ideally router ability configured allow external navigation router cares routes appbasehref minimal reproduction problem instructions motivation use case changing behavior case application current behavior desirable application runs page spa uses routes purposes example downloads runs angular application hitting destroys application loads different one potentially written another framework environment tooling issues node version platform mac others current workaround applied via monkey patching change router need case global constant application would better could injected router instead though something like perhaps basehref string allowexternalnavigation boolean constructor private rootcomponenttype typenull private urlserializer urlserializer private rootcontexts childrenoutletcontexts private location location injector injector loader ngmodulefactoryloader compiler compiler public config routes const onloadstart r route gt thistriggerevent new routeconfigloadstart r const onloadend r route gt thistriggerevent new routeconfigloadend r end added sets location change listener setuplocationchangelistener void zonecurrentwrap needed issue rxjs scheduler work properly zonejs ie safari thislocationsubscription thislocationsubscription thislocationsubscribe zonecurrentwrap change gt thisallowexternalnavigation amp amp windowlocationhashstartswith thisbasehref navigating outside base href return const rawurltree thisurlserializerparse change url const source navigationsource change type popstate popstate hashchange settimeout gt thisschedulenavigation rawurltree source replaceurl true", "num": "18881", "d": "8/2017"}, {"title": "expose end better handle application state", "body": "current behavior want listen custom behavior application rendered well rendering finished many ways use ngoninit ngonchange ngdetect rest hooks sometimes might complicated identify right event hooks sometimes called correct hierarchical order way many times mean would like catch following rendering ui tree every component renderedupdatedchanges get pair beginend callbacks instead see codebase callback want per componentview fired something expose outside test even hackish approach seems working expected put ui components ts let render thisrender delegate render let b renderbegin let e renderend nicelly calls somethings changes rendered pairs beginend whole tree changes get whole call stack field changed eg get jsut expected behavior expose api outside application hook motivation use case changing behavior described currently many callbacks calls identify right event see using animation renderer imagine code would look like difficult would tried use existing lifecyle hooks environment angular version guess probably extend would touch existing behavior put logic would able broadcast interested component wants receive could subscribe private", "num": "18880", "d": "8/2017"}, {"title": "documentation tour heroes hero editor environment", "body": "submitting current behavior seems continuity error tour heroes tutorial step hero editor setup instructions result base hero app instructions setting angulartourofheroes provided tutorial rather setting quickstart expected behavior following setup instructions result plinkr example page minimal reproduction problem instructions setup environment local development compare plinkr example motivation use case changing behavior tutorial clear easy follow new users environment", "num": "18878", "d": "8/2017"}, {"title": "components hostelement optional htmlcomment instead htmlelement", "body": "submitting current behavior componentcontainers like etc break flex layout expected behavior component whole module option create htmlelement instead angular work comments instead htmlelements exactly like minimal reproduction problem instructions plunker uncomment approot stylescss see currently needed fix motivation use case changing behavior using affects childelement gets broken tag apply example multiple nested components require ugly hardcoded stylesheets also frontend developer nt like tags either environment", "num": "18877", "d": "8/2017"}, {"title": "component lifecycle events observable", "body": "submitting current behavior many components use kind asynchronous way retrieve data whether http local storage etc modelled angular observables resulting observable sometimes used show loading indicator overlay pop dialog observables need cancelled called avoid problems showing pop navigating away component every component needs something like following subscription subscription ngoninit thissubscription retrievedata subscribe data gt show popup ngondestroy thissubscriptionunsubscribe would nice lifecycle events way composable modelling observable would help used viewchild myelement myelement elementref constructor const lifecycle lifecyclectrl lifecyclewheninit concatmap gt retrievedata concatmap gt lifecyclewhenviewinit takeuntil lifecyclewhendestroy subscribe gt something myelement also composable functionality wrapped inside function might also make easiersafer access viewchild elementrefs nativeelement instance update canvas every second viewchild mycanvas mycanvas elementref lifecyclewatchnativeelement gt thismycanvas switchmap nativeelement gt observableinterval gt draw canvas subscribe wait emit check whether nativeelement changed output nativeelement emitted next make easier developers handle resourceslifecycle correctly destruction observables handled place initializing makes easier know whether lifecycle handled correctly", "num": "18876", "d": "8/2017"}, {"title": "replace error messages error codes link angulario", "body": "submitting current behavior lot error messages code could better rules error messages dev writes way wants helpful content error messages make hard google generic reference angulario errors text increases payload minified number errors packages usually included application core common compiler router platformbrowser forms error messages end vendor bundle angular take rough estimate bytes per error message error messages minified angularjs error codes could find help also uniqueness error codes made easy google react remove errors minified builds replace codes production generates link error decoder contains unminified error message read blog github expected behavior error messages extracted bundles replaced error codes best way would ngc transformer error messages removed production bundles remain development production errors throw generic error message code link angulario contain full error message available thorough explanation help fix development would nice full error message error code link angulario hopefully able decrease payload complete application least", "num": "18875", "d": "8/2017"}, {"title": "documentation use observable instead topromise", "body": "please show us example observable hero tutorial submitting current behavior make use topromise thisheroesurl id return topromise response gt responsejson data hero catch thishandleerror expected behavior http technical page describe tutorial provide real example wih observable error management http get apiitems subscribe successful responses call first callback data gt errors call callback instead err gt consolelog something went wrong minimal reproduction problem instructions go motivation use case changing behavior really help newbies understanding observables vs promise easy early users documentation coherent environment angular version documentation browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx tooling issues node version xx platform others", "num": "18874", "d": "8/2017"}, {"title": "expose commentstodo docs", "body": "submitting current behavior go defaultvalueaccessor page see", "num": "18873", "d": "8/2017"}, {"title": "issues searching docs", "body": "submitting current behavior cases searching nt catch searching nt catch nutshell docs found type everything others strangely search caught maybe word abstracts text description", "num": "18872", "d": "8/2017"}, {"title": "abstractcontrol methods temporalily disableenable validator", "body": "submitting current behavior abstractcontrol currently nt method temporarily disable form validator expected behavior would better methods called disablevalidator enablevalidator minimal reproduction problem instructions currently use following workaround motivation use case changing behavior better api environment browser browsers", "num": "18871", "d": "8/2017"}, {"title": "pseudoevents poorly documented", "body": "submitting current behavior angular provides several pseudoevents allow targeting keyboard events specific keys without need manually filter key however almost indication docs event hooks available except brief mention way view complete list available pseudoevents go digging spec files expected behavior would helpful discoverable listing events since nt typescript api part browser events api", "num": "18870", "d": "8/2017"}, {"title": "documentation needs explanation inmemory url", "body": "section inmemory url http chapter angular tutorial needs detail clear material introduces apiheroes syntax explanation inline comment private heroesurl apiheroes url web api however confusing api refers using app apd instead works well importantly unclear heroes refers example demo heroes path routes heroes component heroesurl actually refers heroes object used inmemorydataservicets blog post brian swartzfager makes point stackoverflow question asks question got correct unhelpful answer locating documentation syntax meaning became less opaque angular tutorial mention fiddling live example helpful documentation explain url web api heroes points suggestions improving documentation explain meaning apiheroes syntax documentation explanation url web api terse mean anything someone nt used inmemorywebapi package also include link documentation better url constructing demos try avoid using word heroes multiple different items paths files data objects cases data object referred name path muddies water give different things name particularly tutorial refers data object url looks like path", "num": "18869", "d": "8/2017"}, {"title": "angular ngc compiler error encountered metadata generated exported symbol subscription", "body": "submitting current behavior building angulary library using ngc compiler getting following error minimal reproduction problem instructions download following repo upgrade angular run motivation use case changing behavior angular worked without problems library use way avoid error seems set false recommended environment thanks", "num": "18867", "d": "8/2017"}, {"title": "angularupgrade offer fine grained control angularjs digest cycle", "body": "submitting current behavior runs full angularjs cycle whenever ngzone microtask queue emptied good allows hybrid application work however bad large scale production apps ca nt afford cycles triple throughout upgrade process expected behavior developers able optin fine grained control cycle similar detach angular change detector component level trigger change detection makes since able disable automatically running cycle trigger makes since api could implemented number ways option could disabling automatic configuration bootstrap time would ideal also helper method trigger angularjs something like typescript component class mycomponent constructor private upgrade upgrademodule myfunctionthatneedstodigest thisupgrade digest motivation use case changing behavior production application especially ones dealing large lists editable data cycles expensive applications optimized avoid full whenever possible even option moment applications like causes number cycles increase upwards simple actions typing input box instead would ideal disable automatic call whenever microtask queue empty instead leave developer invoke environment", "num": "18866", "d": "8/2017"}, {"title": "website broken couple days", "body": "", "num": "18864", "d": "8/2017"}, {"title": "custom async validator dependancies resolved angular", "body": "write elegant async validator example service dependancy pretty eluding good article making custom validator w\u00edth injected dependancies async validator without injected dependancies question stack overflow solves way question creating async validator injected dependancies seems however elegant way writing one injected dependancies managed angular dependancy injection system instead manually hard find example async validator third party dependancies main use case async validator anyway use async validator make use external service call takes time complete hence async", "num": "18863", "d": "8/2017"}, {"title": "make children component aware parent component parameters", "body": "submitting current behavior parent component children components route parameter children component subscribe change events parent parameter example children component wo nt work instead works expected behavior considering inheritance children inherit parent properties example parameter minimal reproduction problem instructions created plunker showing actual behavior also stackoverflow issue motivation use case changing behavior imo makes less sense acessing parent route children watch parameter changes children aware parent parameter environment", "num": "18862", "d": "8/2017"}, {"title": "need pass data dataservice component angular", "body": "dataservicetxt createprojecttxt submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment import component oninit angularcore import dataservice servicesdataservice import scenario import complainces import budget import size import duration import role component selector appcreateprojects templateurl createprojectscomponenthtml styleurls createprojectscomponentcss export class createprojectscomponent implements oninit results string selectedscenario scenario new scenario select scenario scenarios new scenario select scenario new scenario new scenario new scenario new scenario new scenario new scenario selectedcomplainces complainces new complainces type complainces complainces new complainces type complainces new complainces new complainces new complainces new complainces new complainces new complainces selectedbudget budget new budget select budget budgets new budget select budget new budget new budget new budget new budget new budget new budget selectedsize size new size size project sizes new size size project new size new size new size new size new size new size selectedduration duration new duration duration project durations new duration duration project new duration new duration new duration new duration new duration new duration selectedrole role new role type role roles new role type role new role new role new role new role new role new role component code data service", "num": "18861", "d": "8/2017"}, {"title": "big idea integrate virtual scroll component angular repository", "body": "feature request hello like angular native scroll slow suggest integrate virtual scroll angular repository like ps tracker like ngfor trackby trackbyf slow", "num": "18860", "d": "8/2017"}, {"title": "httpclient httpxsrfinterceptor set xsrf token absolute urls", "body": "submitting current behavior httpxsrfinterceptor xsrfts code written comments requrl starts http set header reason behind wikipedia article csrf owasp guide mention special handling absolute urls expected behavior think expected behavior token added requests except nonmutating ones irrespective absolute urls environment", "num": "18859", "d": "8/2017"}, {"title": "navigating routes without using routerlink use", "body": "submitting current behavior navigating route like reload page even though defined path component routing module expected behavior would expect routes defined router module could resolved without routerlink attribute behave link spa similar angularjs minimal reproduction problem instructions navigate routes like put routes section bottom motivation use case changing behavior many sites large company coded many types languages get navigation common header foot service therefore comes back html tags tags routerlink service nt exactly made target angular works fine us angularjs environment", "num": "18858", "d": "8/2017"}, {"title": "httpclient work serverside rendering windows auth", "body": "submitting current behavior angular front end running net core using web api back end changed one get call project use new httpclient implemented http interceptor test request fires server side everything works expected windows authentication turned get fires interceptor logs fired server data returned server side render client side issue changing nothing else enabling windows authentication get request longer fires server side works fine client side still request never even fires serverside least never actually reaches interceptor expected behavior get request continues fire server side windows authentication enabled behavior old http function minimal reproduction problem instructions motivation use case changing behavior windows auth pretty important developing business applications environment", "num": "18856", "d": "8/2017"}, {"title": "availablelocales big bytes", "body": "ocombe really nt want apps could work removing", "num": "18855", "d": "8/2017"}, {"title": "runtime perf section angulario", "body": "submitting current behavior lots runtime perf optimizations used angular many documented documented well expected behavior angulario runtime perf optimizations section lot perf documentation around bundle size aot important course suggestions zone blacklist onpush change detection strategy advanced cases optimizing component models templates pipes runtime performance investigating runtime perf suggestions demo chrome dev tools red flag performance analyzer angular etc sure lot listed love see large section documentation making fastest angular app runtime one place angulario thanks", "num": "18854", "d": "8/2017"}, {"title": "ngfor animations displays incorrectly ngfor array elements reordered inplace", "body": "submitting current behavior apply animation elements rearrange elements array animations display correctly plunkr example elements positioned top array rearranged even though initially display correctly expected behavior elements animate correctly minimal reproduction problem instructions see plunkr note application first runs animations display correctly clicking rearrange cause elements ed array reordered using without creating new array object view updates animations cause elements collapse list displays correctly animation removed motivation use case changing behavior want animation display properly similar use case app environment", "num": "18847", "d": "8/2017"}, {"title": "getting module injector error angular site", "body": "", "num": "18846", "d": "8/2017"}, {"title": "angular events slowing time", "body": "submitting current behavior angular spa application events getting slower time application different modules loading modules using lazy routing material navbar first minutes works fine time using every event slowing expected behavior events take time minimal reproduction problem instructions large spa application using many libraries including highcharts primeng material etc using resizable grids using context menu primeng grid events getting slowing motivation use case changing behavior frequently resizing grid dragdrop tree grid opening context menu started causing issue environment", "num": "18845", "d": "8/2017"}, {"title": "angular app events getting slower time", "body": "current behavior", "num": "18844", "d": "8/2017"}, {"title": "get selectselectedindex click event selectoption", "body": "want get selectedindex get select data model found could directly get selected data model however click event option nt work environment", "num": "18842", "d": "8/2017"}, {"title": "ca nt test component router events reactions", "body": "submitting current behavior want test behaviour component router event emit guardscheckstart ca nt trigger manually triggerevent method private ca nt use routerevents property readonly cant overwrite use next method ca nt find documentation expected behavior able test component reaction router event broadcast minimal reproduction problem instructions motivation use case changing behavior test component behaviour certain router event broadcast environment", "num": "18841", "d": "8/2017"}, {"title": "reactive form ngrx form state change typing form control", "body": "pet app ngrx app use container components presentational ones please go videos gt click test link edit record gt see form save button enabled criteria met start typing friendly url input example button become enabled reason control looses focus button changes state form changes state input looses focus button gets enabled work think added code inside ctor testing purposes nothing changes even cd marking check think may bug somewhere forms module", "num": "18840", "d": "8/2017"}, {"title": "allow context aot compiler", "body": "submitting aot compiler transforms metadata within etc hard coded code instructions ts performs static evaluation code example take code evaluate expressions since condition left right primitives end result statement statement impact since files aot outputs part bundle impact tree shaking useful example identifier primitive evaluated end result file using evaluation somewhere else clear runtime value needs defined context compilation process exactly webpack since aot compilation runs independently webpack using good iv briefly seen next version one use replace node might way implement external implementation trivial integrate feature allow feature flags sorts build configuration stuff aligning ensure transparent flow tbosch get implementation", "num": "18836", "d": "8/2017"}, {"title": "browseranimationsmodule angular hot module remplacement", "body": "import browser animation module angularhmr get error", "num": "18835", "d": "8/2017"}, {"title": "implement new compiler", "body": "submitting current behavior obtaining list lazy routes angular program requires usage private api expected behavior implemented motivation use case changing behavior providing public api functionality cc tbosch", "num": "18834", "d": "8/2017"}, {"title": "code stopped working typescript updated", "body": "submitting current behavior code stopped working typescript updated expected behavior code compiles runs change typescript version configjs minimal reproduction problem instructions go plunker notice demo works fine change typescript version configjs notice demo stopped working note code used extend super class used reference motivation use case changing behavior environment also submitted ticket typescript", "num": "18833", "d": "8/2017"}, {"title": "angular hybrid app routing issue ca nt navigate angular routes angular component", "body": "submitting current behavior angular hybrid application setup using following guides upgrading angular js migrating angular applications latest angular simple steps problem navigated angular component clicking link go back angular module nt work seems url angular module truncated app simply displays blank page code also plunker demonstrate issue though component names different code root component looks like maints testdatalistcomponent component simple way linking angular component main menu html page relevant code following mymodule mentioned problem navigate angular component clicking link go back angular module simply produces blank page one curious thing noticed url browser window looks like even though hover link click correct value click link second time url correct angular page displayed fine relevant portion angular module problem route correctly angular module expected behavior minimal reproduction problem instructions demo problem steps reproduce following click link angular cars corresponding component displayed click link users groups nothing happens click users groups second time nt matter one corresponding page displayed open developer tools notice router logs angular links url path attributes router object blank angular component expected values look picture motivation use case changing behavior use case angular hybrid app able navigate successfully back forth angular modules angular components environment", "num": "18832", "d": "8/2017"}, {"title": "destroy listeners nt called testbed", "body": "submitting current behavior destroy listeners registered nt called test bed teardown expected behavior expected destroy listeners called automatically minimal reproduction problem instructions plunk ngmodule export class foomodule constructor moduleref ngmoduleref platformref platformref modulerefondestroy gt throw module destroy platformrefondestroy gt throw platform destroy describe tests gt beforeeach gt testbedresettestenvironment testbedinittestenvironment browserdynamictestingmodule platformbrowserdynamictesting beforeeach gt testbedconfiguretestingmodule imports foomodule test inject gt expect tobe motivation use case changing behavior modules cleanup code executed order function correctly environments multiple bootstraps testbed tests environment", "num": "18831", "d": "8/2017"}, {"title": "remove minmax validators documentation", "body": "submitting current behavior lists min max validators available removed expected behavior min max validators removed docs minimal reproduction problem instructions motivation use case changing behavior environment wasted hour trying debug minmax validators stopped working", "num": "18830", "d": "8/2017"}, {"title": "property binding cssstyle effect animations changed style", "body": "submitting current behavior use defined animation animationbuilder set css propery propertybining css value effect afterwards expected behavior animation done change property change styles element minimal reproduction problem instructions template html component excerpt animation done propertybinding offset styleleft updates value well browser recognize changes anymore plunkr show behaviour motivation use case changing behavior workaround defined animation duration runs every offsetchange sets offset animation makes code strange environment", "num": "18829", "d": "8/2017"}, {"title": "htmltag attribute template removes element", "body": "submitting current behavior using htmlelement like attribute totally removes htmlelement expected behavior htmlelement rendered normally minimal reproduction problem instructions add component template motivation use case changing behavior got customwidget thirdparty software company looks like nt get added dom attribute environment", "num": "18828", "d": "8/2017"}, {"title": "inject nt work class decorator uglified file", "body": "unfortunately ca nt use plnker demonstration cloned angularstarter project implemented demo take look srcapprestresourcejs js import httpclient angularcommon import inject angularcore export function resourceparams options return target gt const original target export class resource public url public constructor inject httpclient protected httpclient http injected code uglify npm run build prod consolelog http client public get return js import resource resourceparams restresource resourceparams url users export class userresource extends resource run demo run build dev works ok node version platform ubuntu", "num": "18827", "d": "8/2017"}, {"title": "add option title true routerlink directive", "body": "submitting current behavior discover title service nice actually lot menu whole app template directive always click menu want put menu text dynamically annoyingfrustering solution change typescript way solution otherwise play data routes like works take change whole app inexistant feature outside template even translate outside template come one day relevant lot routerlink exist implies lot changes expected behavior motivation add option title booleanstring directive would nice option like put text menu automatically nope nt want title takes text link juste specify string like possibilities settitle typescript code template ps deep links consider set title page document last navigated menu way avoid lot changesrefactoring looks like good support actual", "num": "18826", "d": "8/2017"}, {"title": "animation dynamically created component", "body": "trying apply animation dynamically creating component using componentfactoryresolver using router style enter leave animation applied animation host dynamically created component current behavior enter animation getting applied successfully upon creation component upon deleting dynamically created component well container leave type animations getting triggered expected behavior leave type animations triggered minimal reproduction problem instructions dynamically create angular component click button using componentfactoryresolver create animations component like shown add button remove component type animation getting triggered", "num": "18825", "d": "8/2017"}, {"title": "generic functions", "body": "submitting current behavior calling currently take advantage generics feature typescript expected behavior working angular lately writing abstracts functionality gets continuously repeated apifacing services wondering generic abstractions would able standard utility http library typescript import injectable angularcore import http response requestoptions headers angular import observable rxjsobservable import rxjsaddobservablethrow injectable export class coreapiservice constructor private http two example api calls making use functions typescript getthemes thiscoreapiget apiappgetthemes subscribe themes gt thisthemesnext themes error gt thistoastersenderrormessage error updatesettings thiscoreapipost apiappupdatesettings jsonstringify thisuservaluesettings subscribe user gt thisusernext user thistoastersendsuccessmessage error gt thistoastersenderrormessage error motivation use case changing behavior providing typesafe return values api calls using generic language feature typescript also greatly simplifies creation apifacing service functions", "num": "18820", "d": "8/2017"}, {"title": "componentrefchangedetectorref instance injected component ref", "body": "submitting current behavior create dynamic component via returned equal one injected component created behavior produces unexpected results dynamic component using onpush since mark checked instead use injected component means use setter every property component call markforcheck responsibility handle parent also appears belongs nothing inspect textnode expected behavior api docs mentions changedetectorref component instance meaning expect returned equal one injected component either misunderstanding interpretation bug minimal reproduction problem instructions related issues", "num": "18817", "d": "8/2017"}, {"title": "seconds delay navigated component constructor ngoninit", "body": "submitting current behavior initial load module happens quickly navigated route constructor destination component also called timely manner ngoninit method called another seconds happens every time one components called using navigation expected behavior issue surfaced upgraded angular code changed app minimal reproduction problem instructions unable create plunker reproduce issue shell code someone shed light happens component constructor called ngoninit called may able debug edit notably delay observed right processing google auth response processed service calls routernavigate component question motivation use case changing behavior motivation obvious delay expected behavior environment production code built using following command node nodemodulesbinng build aot prod", "num": "18816", "d": "8/2017"}, {"title": "hybrid application digest error page breaks change detection pages", "body": "submitting current behavior digest error occurs page go page change detection longer functional expected behavior change detection nt break minimal reproduction problem instructions example stack trace error occurs break change detection environment exception caught due fact occurs call postmessageandawaitresponse async communication native client", "num": "18815", "d": "8/2017"}, {"title": "httprequestclone duplicating query parameters type append", "body": "submitting current behaviour using new httpclient duplicates existing query parameters example following interceptor simply adds query param unwanted side effect clone method existing query params get duplicated typescript intercept req httprequest next httphandler observable essence becomes instead query gets executed expected behavior duplicate existing query parameters request note query parameters added using indeed could exist multiple query params course content minimal reproduction problem instructions typescript let params new httpparams see plunker motivation use case changing behaviour duplicate query params cause errors backend environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx seems browser related tooling issues node version platform others", "num": "18812", "d": "8/2017"}, {"title": "much recursion lazy loading route ff maybe others", "body": "submitting current behavior get blank page lazy loading module declaration older firefox version strangely error occurs least ff amp ff example stack trace ff expected behavior page load correctly minimal reproduction problem instructions stackblitz motivation use case changing behavior able display app older browsers environment", "num": "18811", "d": "8/2017"}, {"title": "ngc support thirdparty codegen install ngc init", "body": "angular libraries ship without codegen eg ngfactoryjs ngsummaryjs users need compile ngc right work done every run even though libraries nt changed step would save time also needed bazel", "num": "18810", "d": "8/2017"}, {"title": "currencypipe tests failing chrome mobile", "body": "submitting current behavior pr currencypipe tests new pipe fail chrome mobile saucelabs expected behavior tests fail minimal reproduction problem instructions part problem need find way reproduce bug fix environment see pr browser x chrome android version", "num": "18807", "d": "8/2017"}, {"title": "angular css app breaks browsers ie edge", "body": "getting error edge uncaught promise typeerror assignment readonly properties allowed strict mode typeerror assignment readonly properties allowed strict mode ie ui breaking solve issue idea", "num": "18806", "d": "8/2017"}, {"title": "new httpclient send cookies patchpost", "body": "submitting current behavior request contain cookie headers expected behavior cookies added request additional information cookies sent get request way use http interceptor interceptor works general acceptlanguage header correctly added request code simple adding third parameter effect missing something environment angularcli node os angularcommon angularcompiler angularcore angularforms angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice angularserviceworker", "num": "18804", "d": "8/2017"}, {"title": "compile error using sass variable import", "body": "submitting current behavior trying add platformsupport serverside rendering angular web app based simple tutorial everything works expected add global file variables things like colors sizes task builds project server runs let say variable file name places content run task fails global scss working expected get error image error already image error text read tbosch comments saying compile already project first calling seems got something wrong expected behavior first documentation covering platformserver confusions would good simple tutorial use platformserver beside angularcli could support well thanks hard works current expected behavior expect support imports maybe way nt know anything minimal reproduction problem instructions tutorial created simple new angular app serverside rendering based need import variableglobal file another file even tried solve problem importing style imports work either environment", "num": "18802", "d": "8/2017"}, {"title": "lazy loading needed browseranimationmodule", "body": "hi used component dependencies browseranimationmodule use lazy loading loadchildren imported browseranimationmodule error ngif ngfor must import commonmodule time error component component build tool angular cli angular version browser chrome desktop version xx firefox version xx edge version xx tooling issues node version", "num": "18800", "d": "8/2017"}, {"title": "resolver route configuration described code snippet shown change", "body": "submitting current behavior issue fundamentals gt routing amp navigation gt fetch data navigating import resolver crisiscenterroutingmodulets add resolve object crisisdetailcomponent route configuration sentence telling configure created resolver route mention object look like parameter called crisis describe configuration actually code snippet section impacted file show impacted route configuration summary following change file crisiscenterroutingmodulets clearly documented expected behavior route resolve property documented detail codesnippet motivation use case changing behavior understanding configure resolve property route", "num": "18799", "d": "8/2017"}, {"title": "router navigatebyurl consistently apply queryparams", "body": "submitting current behavior certain scenarios navigatebyurl apply query params expected behavior always apply query params minimal reproduction problem instructions plunkr provided click two buttons top see difference behaviour motivation use case changing behavior environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18798", "d": "8/2017"}, {"title": "issue dynamic component creation example plunker", "body": "submitting documentation issue current behavior example dynamic component loader plunker issue came console running error error expressionchangedafterithasbeencheckederror expression changed checked previous value undefined current value bombasto seems like view created parent children dirty checked created change detection hook expected behavior must isssue minimal reproduction problem instructions click plunker link open console motivation use case changing behavior environment resolution adbannercomponentts file link code inside ngafterviewinit method must surrounded settimeout settimeout gt thisloadcomponent thisgetads angular process line code next tic avoiding onetime devmode unidirectionaldataflowviolation error", "num": "18797", "d": "8/2017"}, {"title": "meta update duplicates tags", "body": "submitting current behaviour updating meta tags two different components meta tags duplicates expected behaviour using updatetag replace existing one already existing create new meta tag existing minimal reproduction problem instructions thismetaupdatetag description test link source file", "num": "18796", "d": "8/2017"}, {"title": "aio needs tutorial platformserver server side rendering", "body": "current behavior place found website describing platformserver tutorial describes platformserver module search tutorials use platform server find articles tutorials old amp outdated using different methods easier standard ways like using angular cli bundling files expected behavior simple tutorial use platformserver server side rendering people really need documentation expected motivationuse case changing behavior without doubt serverside rendering important part angular universal deprecated users somehow confused especially since universalangulario point bold text use platformserver scratch", "num": "18795", "d": "8/2017"}, {"title": "ngif transition inside another animated element work", "body": "submitting current behavior transition enter leave state change element ngif displayed time ancestor element another animation triggered time however wait appropriate amount time actually removing element expected behavior transitions work minimal reproduction problem instructions look following example clicking button happen spacing two frames increases another frame grows inside space however happens frame pops place ignoring transition defined transition works animation first div removed also works inside div placed outside first div motivation use case changing behavior seems counterintuitive nt work environment", "num": "18794", "d": "8/2017"}, {"title": "angular ca nt set csrftoken header", "body": "wondering anyone help issue posted stackoverflow spring boot restful service making requests response sets setcookie header xsrftoken sending request headers cookies set csrf token value", "num": "18792", "d": "8/2017"}, {"title": "ngc sourcemaps actual ts code rather transpiled js", "body": "submitting current behavior use compile ts set tsconfig seems transpiled js rather actual ts sourcecode expected behavior contain ts sourcecode minimal reproduction problem instructions typescript source code ts import component ngmodule angularcore component selector mycomponent template export class mycomponent ngmodule declarations mycomponent export class mycomponentmodule json sourcemap true inlinesources true js sourcescontent import component ngmodule angularcore nnnexport class mycomponent nnstatic decorators decoratorinvocation n type component args n selector mycomponent n template n n n nocollapse nstatic ctorparameters gt type decorators decoratorinvocation null gt n n nnnexport class mycomponentmodule nnstatic decorators decoratorinvocation n type ngmodule args n declarations n mycomponentn n n n nocollapse nstatic ctorparameters gt type decorators decoratorinvocation null gt n n ninterface decoratorinvocation n type function n args n n outputted jsmap nb remove parts sourcemaps files tsconfig show relevant issue angular version", "num": "18790", "d": "8/2017"}, {"title": "animationplayer instance used", "body": "submitting current behavior using animationfactory animationplayer create animations noticed animationplayer used animation finished replayed sure design destroy animationplayer onfinish bug expected behavior reusable thus animation replayed even finished would make sense want keep using animation minimal reproduction problem instructions ts ngafterviewinit thiscollapseanimation thisanimationbuilderbuild style overflow hidden animate easeout style height create thiscontentnativeelement toggle thisisexpanded thiscollapseanimationrestart else thisexpandanimationrestart live example note hav nt included animations shims demo angular version", "num": "18789", "d": "8/2017"}, {"title": "analyzeforentrycomponents working production load modules dynamicly", "body": "submitting trying create module dynamicly load modules like router currently able dev environment could nt build project production narrowed problem found problem somewhere tried mimic router provideroutes function adding analyzeforentrycomponents modules providers like keep getting error error find dynamicmodule dynamicdynamicmodule nt matter use absolute relative path strange part resave file providers works fine could see router source work like maybe missing something ignored long time causes error try build production sample project found log message console environment", "num": "18786", "d": "8/2017"}, {"title": "lazy loading error using aot rollup", "body": "submitting current behavior using angular version packagejson development mode use systemjs production mode use aot rollup facing error systemjsimport function lazy loading module aot rollup works systemjs routing details expected behavior lazy loading module work aot rollup using system js dev mode aot rollup production mode please provide fix alternate syntax lazy load module using aot rollup without using webpack minimal reproduction problem instructions routing details parent component export const approutes routes path redirectto today pathmatch full path today loadchildren apptodaytodaymodule todaymodule child component export const todayroutes routes path today component todaytabscomponent environment", "num": "18785", "d": "8/2017"}, {"title": "stitch together individual transform properties animation style", "body": "submitting current behavior created coin flip animation lifts spins easy calculate keyframes like scale rotatey manager walks says would nt cool could go slowmotion reaching peak fall back normally mind guess change make rotate value maybe something like rotatey whilst playing around also get scale correct using calculations well would awesome could declare transform properties individually merged angular animate like expected behavior would expect individually supplied transform properties get stitched together equal something like following motivation use case changing behavior make working multiple transform property animations much easier", "num": "18783", "d": "8/2017"}, {"title": "allow state queries within animations state x query", "body": "submitting current behavior currently way apply state children querying apply triggers child elements html expected behavior like able query children within container query within transition currently state hold html motivation use case changing behavior want fade couple children within container expect add trigger parent query children set state transition using transitions query", "num": "18775", "d": "8/2017"}, {"title": "allow ngmodule dictate common html templates amp common component code templates trough declarations array", "body": "submitting versions output nothing output macos sierra node os darwin angularanimations angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angulartscwrapped angularupgrade desired functionality would like see implemented would like ngmodules able provide declared components common html template common component code template adding object declarations array hope link components common code template files shown eg somemodulemodulets eg sometemplatefilehtml html eg somecomponenttemplatefilets typescript common decorator code eg add animation components component animations fadeanimation host fadeanimationtrigger state common component code eg something oninit components export commoncomponent implements oninit ngoninit something repetative usecase use would make development time faster allowing faster implementation common code comonents", "num": "18770", "d": "8/2017"}, {"title": "arbitrary module build failed error", "body": "submitting current behavior running change source code usually small single line trigger module build failed error random error given vague seems totaly unrelated recent changes introduced code clealry error build chain restarting clears appears quite often quickly becomes annoying spoils development process expected behavior changes source code trigger rebuilding affected component without unrelated errors minimal reproduction problem instructions run npm start begin editing source code project motivation use case changing behavior development process spoiled frequently waiting complete recompilation project environment", "num": "18768", "d": "8/2017"}, {"title": "multiple named routeroutlet work properly", "body": "facing one issue routing named routeroutlet routing generate route want route following format replaced somerandomname empty string nt work", "num": "18767", "d": "8/2017"}, {"title": "extracting dataurl blob sanitized image data upload firebase", "body": "using dom sanitizer read image file want upload file firebase storage however unable find way convert sanitized image blob something uploaded using function read image file code want upload compressedimagetrusted file firebase storage file type sure convert something upload firebase storage help would appreciated", "num": "18766", "d": "8/2017"}, {"title": "able read csrf token angular", "body": "submitting issue regarding csrf token working ie version angular able read csrf token ie version due getting forbidden internet explorer working fine chrome version current behavior read angular documentation angular provide built support csrf token reads token cookie sends header working fine chrome code working ie mentioned version expected behavior expected behavior working browsers ie ie chrome minimal reproduction problem instructions backend spring security code csrf token tried reading cookie value using following code always return blank value everything works fine chrome tried implement xsrfstrategy gives blacn xsrftoken value ie tried read cookie javascript method returns blank value cookie ie return valid cookie value chrome environment using versions", "num": "18764", "d": "8/2017"}, {"title": "follow pr moving away intl api", "body": "ocombe could please generate file named folder following structure ts import locales import af localeaf import ardz localeardz import registerlocaledata angularcommon let locale add cases locale switch googlocale case af locale af break case ardz case ardz locale ardz break default locale en registerlocaledata locale model rationale file included automatically building closure effect data target locale included files tree shaken away edit probably want locales imports switch case please add ability pass list locales generation script thanks", "num": "18763", "d": "8/2017"}, {"title": "recurse function digest cycle calls apply nonfunction", "body": "submitting bug current behavior object enters recurse function key name value matches sure determines falsey digest cycle attempts call value function expected behavior recurse check value indeed function calling apply making change fixes issue minimal reproduction problem instructions genuinely uncertain reproduce error occurring application inherited seems occur digest cycle triggered asynchronous load array objects repeated screen shots motivation use case changing behavior fix error reported console environment", "num": "18762", "d": "8/2017"}, {"title": "language service nullable types compared null", "body": "submitting current behavior interface template getting error expected operants similar type thing trying compare undefined using expected behavior error reported minimal reproduction problem instructions motivation use case changing behavior current behavior wrong produce numerous false positives environment", "num": "18754", "d": "8/2017"}, {"title": "domeventplugin forces event handlers run angular zone", "body": "submitting current behavior domeventsplugin changed bypass zonejs adding event listeners improves performance scheduling events forces handler run angular zone regardless zone addeventlistener call originated expected behavior ngupgrade called every time ngzone invoked certain events fire frequently scroll mouseover mouseout etc handlers would trigger potentially expensive digest calls frequently worked around running angular custom zone custom zone would intercept event handlers scheduled instead schedule root zone thus running handler outside ngzone avoiding expensive digest call workaround longer option default eventmanagerplugin schedule events without zonejs way alter behavior nt issue us ngupgradelite solved performance problems teams using ngupgrade might similar solution example old workaround ts const customzone zonecurrentfork name event blacklist onscheduletask delegate zonedelegate current zone target zone task task task gt blacklist scroll mouse request animation frame events tasktype eventtask tasktype macrotask amp amp isblacklistedevent tasksource taskcancelschedulerequest bootstrap new workaround still want control handlers events run however seems since eventmanagerplugin intended public api option make custom rendererfactory nt know change behavior needs fixed something needs documented", "num": "18753", "d": "8/2017"}, {"title": "reexport component different name", "body": "submitting current behavior failing aot compile material library reexporting componentmodule expected behavior successful aot compile minimal reproduction problem instructions clone angular material branch run initialize aot compiler error appear hits stage errors compiler run using see error bit added code found", "num": "18752", "d": "8/2017"}, {"title": "browseranimationsmodule detected even import", "body": "submitting current behavior expected behavior run without error minimal reproduction problem instructions imported browseranimationsmodule appmodulets added imports appmodulets navbar component html navbar motivation use case changing behavior would nice animations environment", "num": "18751", "d": "8/2017"}, {"title": "elementref error", "body": "submitting current behavior inject private elementref elementref constrctor expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18750", "d": "8/2017"}, {"title": "token working animationbuilder", "body": "submitting current behavior noticed use animationbuilder animation sets height example x amount time another animation triggered remove height token effect height still stays time replace however comes another problem animation effect working expected behavior second animation triggered full element height used transition going full heigh minimal reproduction thisexpandanimationcreate thiscontentnativeelement play run couple seconds thisexpandanimation thisanimationbuilderbuild animate easein style height thiscollapseanimationcreate thiscontentnativeelement play environment", "num": "18749", "d": "8/2017"}, {"title": "expressionchangedafterithasbeencheckederror thrown ngmodelinvalid ngmodel control declaration", "body": "submitting current behavior use ngmodelinvalid expression ngmodel control dom expressionchangedafterithasbeencheckederror thrown put expression ngmodel control issue expected behavior errors thrown minimal reproduction problem instructions see example motivation use case changing behavior need set haserror class parent domelement given ngmodel control invalid state nt work environment", "num": "18748", "d": "8/2017"}, {"title": "example detectchanges missing documentation", "body": "submitting current behavior example method detectchanges missing description usage demo source looks like uses example detach method expected behavior could add live demo example detectchanges minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18747", "d": "8/2017"}, {"title": "error maximum call stack size exceeded", "body": "master ng serve ng live development server listening open browser hash time chunk polyfillsbundlejs polyfillsbundlejsmap polyfills kb initial rendered chunk mainbundlejs mainbundlejsmap main kb initial rendered chunk stylesbundlejs stylesbundlejsmap styles kb initial rendered chunk scriptsbundlejs scriptsbundlejsmap scripts kb initial rendered chunk vendorbundlejs vendorbundlejsmap vendor mb initial rendered chunk inlinebundlejs inlinebundlejsmap inline bytes entry rendered error maximum call stack size exceeded webpack failed compile using dependencies dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter ngbootstrapngbootstrap ngxtranslatecore ngxtranslate angularresizableelement angulartreecomponent corejs fontawesome ionicons lodash ngclickoutside rxjs tjsonviewer zonejs devdependencies angularcli angularcompilercli typesjasmine typeslodash typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter karmaphantomjslauncher protractor tsnode tslint typescript", "num": "18746", "d": "8/2017"}, {"title": "fire fake click event page load working angular", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18745", "d": "8/2017"}, {"title": "videoinfo elementref nt work", "body": "defined elementref like videoinfo varable call elementref like shows undefined deal thanks lot", "num": "18744", "d": "8/2017"}, {"title": "httpheadersapplyupdate read property length undefined", "body": "submitting current behavior using new httpclientmodule interceptor set default applicationjson contenttype defined trying upload file formdata set contenttype header undefined interceptor throws error expected behavior set header undefined hasget function must return true false instead throwing error minimal reproduction problem instructions plunker open console see error second button throws motivation use case changing behavior environment", "num": "18743", "d": "8/2017"}, {"title": "querylistchanges observable closed component destroy viewchildren etc", "body": "submitting current behavior observable probably others completedclosed component destroy subscriptions explicitly unsubscribed prevent memory leaks performance degradation time expected behavior component destroyed implicitly close observables operations definitely complete query list changes component destroy stage minimal reproduction problem instructions open browser dev tools console click toggle child button start logging state false every second click toggle child component removed ngif closed motivation use case changing behavior unintuitive componenttracking observable alive component destruction explicitly unsubscribe causes memory leaks performance degradation angular apps eg angularmaterial components issue mdlinesetter mdformfield probably environment", "num": "18741", "d": "8/2017"}, {"title": "changelog showing aio related stuff", "body": "hello sorry open issue months still problem please something changelog showing aoi related stuff thank", "num": "18740", "d": "8/2017"}, {"title": "lint check index imports", "body": "longer going rewriting index imports therefore would good lint check verify code nt index imports would break closure externally", "num": "18736", "d": "8/2017"}, {"title": "get appnodemodules angularcommonbundlescommonumdjs found", "body": "submitting current behavior using systemjs module loader config part map ngloader systemjsangularloaderjs appmodulets looks like import ngmodule angularcore import browsermodule angularplatformbrowser import upgrademodule angularupgradestatic import httpclientmodule angularcommon import sessionservicea loginsessionservice import storageservice localstoragestorageservice ngmodule imports browsermodule upgrademodule httpclientmodule providers storageservice sessionservicea export class appmodule constructor private upgrade upgrademodule ngdobootstrap thisupgradebootstrap documentbody caseapp tries import httpclientmodule angularcommon fails error unhandled promise rejection systemjs xhr error found loading error xhr error found loading xmlhttprequestwrapfn zonesymbolonreadystatechange zonedelegateinvoketask zoneruntask zonetaskinvoketask invoke invoketask xmlhttprequestglobalzoneawarecallback error loading angularcommon zone task promisethen value error systemjs xhr error found loading expected behavior httpclientmodule imported without errors minimal reproduction problem instructions motivation use case changing behavior working hybrid angularjsangular app intend use httpclient module angular services environment", "num": "18735", "d": "8/2017"}, {"title": "multiple instances created component provides ngvalueaccessor ngvalidators", "body": "submitting current behavior component included view provides ngvalidators ngvalueaccessor constructor executed times expected behavior component view created providers use instance created minimal reproduction problem instructions run following plunker look console log many instances created motivation use case changing behavior possible create component provides ngvalueaccessor ngvalidators time useful scenarios example component lets user display reactive form control errors specifying formcontrolname environment", "num": "18734", "d": "8/2017"}, {"title": "routing navigation plunker example", "body": "submitting current behavior visiting routing documentation lot lately discovered today plunker example longer working plunker link errors firefox debugger fails chrome probably plunker problem thought know expected behavior yesterday demo ran nicely minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18732", "d": "8/2017"}, {"title": "doc add section di reading multiple directives tokens element", "body": "submitting expected behavior section docs covering use di read multiple directives tokens element list elements currently using query elements get corresponding directive order simultaneously get multiple directives tokens element single element would add template references like list elements like expect would write directive like directive selector somecomponent class mydirective constructor public elementref elementref self inject routerlink public routerlink routerlink self inject somecomponent public somecomponent somecomponent component selector myapp template class myappcomponent viewchildren mydirective mydirectivelist querylist ngafterviewinit thismydirectivelistforeach mydirective gt consolelog mydirectiveelementref consolelog mydirectiverouterlink consolelog mydirectivesomecomponent see eg", "num": "18729", "d": "8/2017"}, {"title": "angular routernavigate issue", "body": "submitting current behavior using angular routernavigate navigate url function inside login component obtain consolelog inside block router nt navigate firstlogin onsubmit loginform ngform void loginformvalid thisauthservicelogin loginformvalue data gt datastatus amp amp datastatus firstlogin consolelog firstlogin thisrouternavigate firstlogin else localstoragesetitem user jsonstringify data thisrouternavigate expected behavior router navigate firstlogin environment", "num": "18728", "d": "8/2017"}, {"title": "set production mode boostrapping aot", "body": "submitting current behavior enabling production mode possible using bootstrapmodulefactory zone creation set locked thus ending enable prod mode platform setup expected behavior zone creation read devmode variable instead calling false getter isdevmode also set runmodelocked true minimal reproduction problem instructions using classic bootstrap file aot factory bootstrap import platformbrowser angularplatformbrowser import enableprodmode angularcore import investmentmodulengfactory aotonboardinginvestmentappmodulengfactory import rxjsaddoperatormap import rxjsaddoperatordo enableprodmode platformbrowser bootstrapmodulefactory investmentmodulengfactory following code executed core package applicationref angularpackagescoresrcapplicationrefts bootstrapmodulefactory modulefactory return thisbootstrapmodulefactorywithzone modulefactory zone created calls isdevmode thus locking application prod mode bootstrapmodulefactorywithzone private impossible supply zone avoid trigger environment likely happen every browser", "num": "18727", "d": "8/2017"}, {"title": "input element value attribute set", "body": "submitting current behavior initializing formcontrol initial value html input element value attribute set expected behavior value attribute input element set like specs describe value content attribute gives default value input element value content attribute added set removed control dirty value flag false user agent must set value element value value content attribute one empty string otherwise run current value sanitization algorithm one defined minimal reproduction problem instructions create new formcontrol initial value inspect input element see input element value attribute motivation use case changing behavior without value attribute screenreaders get element value also makes automatic testing difficult since element properties accessible css selectors xpath use hack attrvalue myformget key value environment angular version browser x chrome desktop version x firefox version probably others well", "num": "18725", "d": "8/2017"}, {"title": "time format failed edg browser gt date hh mm ss", "body": "submitting time date hh mm ss current behavior use datepipe edg browser time hh mm ss ps time expect edg expected behavior time hh mm ss gt minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18724", "d": "8/2017"}, {"title": "httpparams add capability encode combination key value", "body": "submitting current behavior angular decodes httpparams arrayvalue like default user change behavior implementing custom encoding string like seems impossible provide capability encode combination key value expected behavior provides implement encoder key value minimal reproduction problem instructions motivation use case changing behavior use play framework implement backend server uses style documented think web framework might use bracket style environment", "num": "18719", "d": "8/2017"}, {"title": "document new options ngc compiler", "body": "relates new options options deprecated need removed see details", "num": "18717", "d": "8/2017"}, {"title": "ngupgrade provide convenience injecting scope resolve working angularjs routers", "body": "submitting current behavior currently resolved objects need injected expected behavior would nice directly like", "num": "18716", "d": "8/2017"}, {"title": "example documentation upgrademodule upgrading angularjs service wrong results unhandled promise rejection read property get undefined", "body": "submitting current behavior documentation example upgrademodule adequately address issues angularjs injector undefined directly related stackoverflow problem open issue tldr trying use upgrade module inject angularjs service angular service fails read property get undefined zone following docs exactly results error hack found super gross nt judge better way whatever better way needs docs expected behavior able inject angularjs service angular service work something done injector undefined undefined reason cool pointed solution like angularjs docs upgrademodule need updated minimal reproduction problem instructions plnkr uses exact code docs least close could get description ran problem context also hack context motivation use case changing behavior ngupgrade docs make seem like going simple like things life almost never documentation hard write sure things considered angular team decent job stuff need examples complicated may way helpful examples plnkr something said main motivation use case need inject angularjs service angular service environment", "num": "18712", "d": "8/2017"}, {"title": "version missing changelog", "body": "", "num": "18710", "d": "8/2017"}, {"title": "animationbuilder renderer metadata renamed compilation", "body": "property animation renamed compiled mode use string literal avoid renaming", "num": "18708", "d": "8/2017"}, {"title": "animations behaving differently despite equivalent definitions", "body": "submitting current behavior trying get animation work modal dialog expands click location define animation using states looks like dialog swooping location slow chrome animations debugging tool looks like dialog expands towards middle screen moves upwards change animation inline styles defined everything works expected nonworking swooping animation working option expected behavior would expect animation definitions equivalent difference see obviously one state definitions keeps styles applied element transition ne minimal reproduction problem instructions hard get reproducible version dialog added auxiliary router outlet also tried getting router driven animations work never able motivation use case changing behavior environment", "num": "18705", "d": "8/2017"}, {"title": "bug invalid property names animation styles cause dom bug", "body": "submitting current behavior making typos styles function nt throw run time errors invalid css properties completely fine beside creates weird bug element duplicated dom example expected behavior run time error weird duplication element animated minimal reproduction problem instructions spam button page thats reproduction link motivation use case changing behavior hard debug weird animation bug error thrown made typo took longer month searching giving finally track issue run time error least weird dom duplication bug would help lot environment browser x chrome desktop version x firefox version", "num": "18701", "d": "8/2017"}, {"title": "possible viewchildren select components based base type", "body": "submitting base component export class basecomponent component selector template export class extend basecomponent component selector template export class extend basecomponent component selector app template export class appcomponent viewchildren basecomponent childcmps querylist ngafterviewinit consoledir thischildcmps viewchildren select basecomponent select inherited component possible viewchildren select extended basecomponent", "num": "18700", "d": "8/2017"}, {"title": "ngfor checkbox gets crazy", "body": "submitting current behavior array checkboxes click box two three four boxes change state bound variable updated correctly screen appearance crazy expected behavior box working independent minimal reproduction problem instructions use ngfor mdcheckbox enclosing mdcheckbox motivation use case changing behavior edit array booleans environment", "num": "18699", "d": "8/2017"}, {"title": "bug hostbinding get incorrect semantics property name literal", "body": "submitting current behavior using property name one angular incorrectly regard literal value example would result even binding value expected behavior got according binding value reserved words allowed property name javascript still regarded literal since general expression possibly need new value parser indicate whether expression context minimal reproduction problem instructions motivation use case changing behavior angular uses unified parser bindings indistinguishable whether came directly written class properties expression context since decorator specific property property decorator means bug angular parser binding recognition actually seems bug metadata collector since already indistinguishable came parser environment", "num": "18698", "d": "8/2017"}, {"title": "angular example dynamic component loader plunker broken", "body": "hi read dynamiccomponentloader plunkr doesnt work maybe would nice fix try fix cant load adbannercomponent greetz", "num": "18697", "d": "8/2017"}, {"title": "register multiple interceptors ngmodule angular", "body": "trying register multiple interceptor ngmodule one seems fire dosent work remove one works loaderhttpservice works reason two interceptors one loader spinner error response make work angular angular js", "num": "18696", "d": "8/2017"}, {"title": "feat typed calls inject testing helper", "body": "submitting feature request current behavior type informations arrowfunction need added explicitly ommited params type see expected behavior improvement new feature would cool calls typed first idea similar rxjs operators like looks w help type angular core proofofconcept typescript playground helper added params fallback array notation remain concrete threshold discussed rxjs params array notation seventh version fallback think like get feedback opening pr thanks cheese minimal reproduction problem instructions see motivation use case changing behavior see better dev experience cactus improve type support unit testing palmtree environment", "num": "18695", "d": "8/2017"}, {"title": "date pipe format failure deg browser success chrome", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18693", "d": "8/2017"}, {"title": "content projected ngtemplate initialized without creating embedded view", "body": "angular material tabs api looks like template component looks like use manually create embedded view based tab active however contents tab initialized automatically embedded view created lead lessthanideal performance scenarios since far content necessary initialized also worth noting phantom component instances content nt destroyed immediately even though rendered anywhere likely taking memory cycles reason plunker example behavior chatted w robwormald mhevery agreed behavior seem unexpected since supposed inert embedded cc pkozlowskiopensource mentioned interest ngbootstrap well", "num": "18691", "d": "8/2017"}, {"title": "httperrorresponse error instance error clientsidenetwork error", "body": "submitting current behavior according document clientside network error occurred instance tried behavior cors error instance expected behavior fix document describe correct way distinguish clientsidenetwork error backend returned minimal reproduction problem instructions motivation use case changing behavior due problem nt know way distinguish http request failed clientside backend returned environment", "num": "18690", "d": "8/2017"}, {"title": "aio add docs whitespace removal", "body": "activate global amp component based options default escape tags attributes relates", "num": "18688", "d": "8/2017"}, {"title": "animation filter blur bug chrome", "body": "tested issue new animations still work nt give exception anymore show image", "num": "18687", "d": "8/2017"}, {"title": "documentation", "body": "page simple appmodulets example paragraph export appcomponent show export nt actually necessary example root module reason export anything components nt need import root module think instead appcomponent must use appmodule mistake please update dont know report", "num": "18685", "d": "8/2017"}, {"title": "disabled attribute control groups one formcontrol still output value call", "body": "submitting current behavior setting form contains form group one control output control property even said control disabled soon another control added form disabled control output value expected behavior call contain disabled control value minimal reproduction problem instructions create form group single form control initialized attach form group form html element providing radio button control form control observe even though control disabled still outputs value control motivation use case changing behavior expected behavior disabled form controls value outputted calls environment", "num": "18684", "d": "8/2017"}, {"title": "httpclient nt parse error response", "body": "submitting current behavior error field httperrorresponse represents parsed string response chrome firefox returns object instead expected behavior returns object analogue browsers minimal reproduction problem instructions make httpclientput request endpoint returns response see plunker example motivation use case changing behavior expected consistent behavior across browsers environment angular version browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version edge version xx tooling issues node version platform windows", "num": "18682", "d": "8/2017"}, {"title": "ngsummaryjson paths multiplerootdir case absolute", "body": "problem contains nonportable paths nt match paths written bazel", "num": "18681", "d": "8/2017"}, {"title": "httpclient fails parse empty response", "body": "submitting current behavior httpclient throws error http failure parsing case empty response issue reproducible chrome firefox setting responsetype option text helps resolve issue expected behavior returns null analogue browsers minimal reproduction problem instructions make httpclientget request endpoint empty file see plunker example motivation use case changing behavior expected consistent behavior across browsers environment angular version browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version edge version xx tooling issues node version platform windows", "num": "18680", "d": "8/2017"}, {"title": "angular released mentioned changelog", "body": "seems angular release however nothing changelog stating", "num": "18679", "d": "8/2017"}, {"title": "reactive form disabled makes form invalid", "body": "submitting current behavior disabled control form ex thisformcontrols name disable makes form invalid value thisformvalid false expected behavior desired behavior would change validity form form disabled minimal reproduction problem instructions motivation use case changing behavior working reactiveform case submitting form communicate service want disable form working service returning response environment", "num": "18678", "d": "8/2017"}, {"title": "ie supported", "body": "", "num": "18677", "d": "8/2017"}, {"title": "angular compiler cli typescript emitted metadatajson rather", "body": "submitting current behavior looks like exported differently depending content file contains model appended expected behavior output motivation use case changing behavior looks like exported differently depending content file modelts ts export type mytypesecondary b export interface myinterface key mytypesecondary typets ts export type mytype b indexts ts export mytype type export mytypesecondary model outputted indexmetadatajson ngfactory see exported also doubt case angular compiler cli also created repo demonstrate issue", "num": "18675", "d": "8/2017"}, {"title": "router push pop native like", "body": "submitting current behavior ionic team developped custom way navigating componentspages allows betternative like feel stack open pages push pop stack unfortunatly different router build today routerlink replace content page another coding ionic app end either choose navcontroller use ionic custom live cycle hooks use angular router miss great ui experience expected behavior would great declaring route path nested decide want open top replace current path ex whenever try accessing page instead crisisdetailcomponent opening inside routeroutlet crisislistcomponent creates new tag top nicecustomizable animation allows close crisisdetailcomponent end scroll left", "num": "18674", "d": "8/2017"}, {"title": "support destroy componentdirective", "body": "submitting current behavior component destroy component close button clicked remove write ngif parent component expected behavior support destroy component minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18673", "d": "8/2017"}, {"title": "httpclient able retrieve plain text", "body": "current behavior httpclient retrieve api returns plain text httpclient set responsetype text get options described documentaion expected behavior able accept plain text api response minimal reproduction problem instructions constructor httpclient getdata accept responsetype text gt would compile return responsetype text catch err httperrorresponse gt get error although http response code use webpack dev environment run webpack dev server running angular", "num": "18672", "d": "8/2017"}, {"title": "", "body": "submitting current behavior setting font size browser settings affect base font size documentation expected behavior respect user settings fontsize minimal reproduction problem instructions go webpage change default fontsize browser wo nt see changes page motivation use case changing behavior bad accessibility difficulties reading fontsize designers chosen documntation laptop inspecting markup styles see fontsize placed body placed certain values pixels components fontsizes specified ems rems fontsize element set percentage user able control desired fontsize", "num": "18671", "d": "8/2017"}, {"title": "split angularhttp", "body": "followup submitting current behavior brought great idea observablebased http interaction yet packages used angular expected behavior expect libraries usable general context possible rather limiting one particular usecase minimal reproduction problem instructions try figure use outside angular ask fail find way motivation use case changing behavior getting cool based http node frameworks environment note earlier question told could apply animations package well one looked bit entrenched actual angular rather di yeah might another candidate suppose", "num": "18667", "d": "8/2017"}, {"title": "cli buildoptimizer failure", "body": "submitting current behavior generates webpackconfigjs tries use without importing fails error chunk asset optimization lt last gcs gt ms marksweep gt mb ms ms steps since start marking biggest step ms walltime since start marking ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context defvariable visit de fatal error callandretrylast allocation failed javascript heap memory node abort angularcli angularcli utils reportoomfailure char const bool angularcli internal fatalprocessoutofmemory char const bool angularcli internal factory newfixedarray int internal pretenureflag angularcli internal factory newscopeinfo int angularcli internal scopeinfo create internal isolate internal zone internal scope internal maybehandle angularcli internal declarationscope allocatevariables internal parseinfo internal analyzemode angularcli internal declarationscope analyze internal parseinfo internal analyzemode angularcli internal compiler analyze internal parseinfo internal threadedlist gt angularcli angularcli angularcli angularcli internal compiler compile internal handle internal compiler clearexceptionflag angularcli internal runtimecompilelazy int internal object internal isolate angularcli commandsprodbuildsh line aborted ng build aot prod buildoptimizer nosourcemaps expected behavior commands work minimal reproduction problem instructions memory error ca nt reproduced easily maybe happens sufficiently large projects get back one motivation use case changing behavior functioning documented environment", "num": "18666", "d": "8/2017"}, {"title": "docs template syntax sections claim column span property exists", "body": "submitting current behavior docs mention example one place property binding must used bind behavior table cell elements however actually property notice casing even though examples fine claim column span property simply false able use property binding expected behavior examples docs make false claims minimal reproduction problem instructions read motivation use case changing behavior lot confusion around data binding attributes properties similar names docs try solve false claims add confusion environment", "num": "18665", "d": "8/2017"}, {"title": "proposal ngc jit", "body": "submitting current behavior currently angular projects using jit development aot production suggested jit development aot production works well cases aot compiler smart enough introduce inconsistency development release like need provide different sets polyfills configuration given angular removed dependency metadata reflection api decorators making tsc place using still consumed angular compiler angular compiler fully refactored using typescript transformer api compilation process would easy integrate build tools angular compiler already supports metadataonly nonaot mode skiptemplatecodegen making compatible jit process possible get rid problem using jit well expected behavior technically jit already fully supported current implementation would better well documented process currently hardcoded aot process documentation allow work may need change setting different environment making angular cli use angular compiler aot conditions remove metadata reflection api entry aot still made easy use conditions within proposal remove last dependency metadata reflection api breaking change done later version aboves could made separate proposal needed minimal reproduction problem instructions nil motivation use case changing behavior fully remove dependency metadata reflection api unified polyfills break jit aot user easy migrate build tools environment", "num": "18664", "d": "8/2017"}, {"title": "control value nt reset control hidden ngif", "body": "submitting current behavior control form attached directive ngif showhide control based certain expression condition evaluates true control shown type text control moments later condition evaluates false hence control hidden display later expression evaluates back true control shown value typed previously expected behavior show control configsetting clear value hidden displayed minimal reproduction problem instructions sample would add hideshow using ngif environment tooling issues node version platform windows", "num": "18663", "d": "8/2017"}, {"title": "aot route url matcher invalid configuration route routes must either path matcher specified", "body": "submitting current behavior getting error using route url matcher aot enabled expected behavior error minimal reproduction problem instructions generate brand new project using package manager yarn generate component named import router module test route using matcher run work expected run ng build prod gives runtime error complaining invalid configuration route environment", "num": "18662", "d": "8/2017"}, {"title": "importing default export breaks compilation installed", "body": "submitting current behavior first time messing new angular ts simple started following along tutorial got part says go create new class called hero simple file verbatim went opened app component changed definition component tutorial says verbatim import component angularcore import hero hero component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title tour heroes hero hero id name windstorm cli saying error hometroydevelopmenttestangularsrcappappcomponentts module hometroydevelopmenttestangularsrcapphero default export webpack failed compile obviously true remove export simply call component works expected behavior exporting class default export produce compile errors minimal reproduction problem instructions provided also made repo everything motivation use case changing behavior fixed environment", "num": "18660", "d": "8/2017"}, {"title": "responsecontenttype define angularcommonhttp", "body": "submitting current behavior defined options expected behavior similar enum like requestoptions minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18654", "d": "8/2017"}, {"title": "historypushstate available packaged apps", "body": "submitting x bug report current behavior using angular running chrome packaged app chromebook get annoying console error message every time navigate new page error historypushstate available packaged apps expected behavior error generated motivation use case changing behavior console swamped errors environment angular version chrome os", "num": "18653", "d": "8/2017"}, {"title": "router services singletons navigating browser address bar", "body": "submitting current behavior navigating browser address bar providers services instanciated twice extremely disturbing may break application state must globally available client using rxjs issue behaviour navigating programatically solved bug still observed using browser address bar navigation expected behavior using browser address bar navigation singletons recreated minimal reproduction problem instructions checkout follow instructions motivation use case changing behavior nt know motivation break singletons navigating environment browser x chrome desktop version built running debian chrome android version xx chrome ios version xx x firefox version running debian safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform debian others", "num": "18652", "d": "8/2017"}, {"title": "animations state change animation automatic property calculation using ignored", "body": "submitting current behavior using property animate height accordioncomponent animationstate changes ongoing transition height height animation continues ignores new state style persists like state closed even open happens using property animation configured fixed height values respects state changes cancels reverts transition expected behavior animation respect new state like using fixed values height minimal reproduction problem instructions made little example instructions using stackblitz motivation use case changing behavior creation reusable accordioncomponent unknown innercontent environment", "num": "18651", "d": "8/2017"}, {"title": "http observable timeout logs huge error avoid", "body": "regression behavior used work stopped working new release bug report feature request x documentation issue request support request gt please submit support request instead see angular http service logs huge error firstly though exception consoleerror stack way avoid anything environment thanks typescript protected deepquery url string body commonrequestbody observable return bodytojson thisoptions timeout thistimeoutsecs map data gt thisextractdata data", "num": "18648", "d": "8/2017"}, {"title": "domsanitizer work component class", "body": "", "num": "18647", "d": "8/2017"}, {"title": "attribute volume initialization failure prevent ngafterviewinit circle life", "body": "like", "num": "18646", "d": "8/2017"}, {"title": "support", "body": "submitting current behavior inserts element end list children given parent inserts element another known element currently easily least sure possible insert element beginning list children using renderer ie falling back using similar expected behavior suggesting support method style jquery insert child first child given parent regardless number current children image implementation would something along lines motivation use case changing behavior case building directive inserts element first child host element eg icon first child button regardless text content already present", "num": "18645", "d": "8/2017"}, {"title": "support mixed usage deep gt child combinator", "body": "submitting current behavior currently would result error expected behavior expecting previous less code compiled something like motivation use case changing behavior directly using without would bring unwanted possibility polluting style inner elements environment", "num": "18643", "d": "8/2017"}, {"title": "ngformresetform work nested objects", "body": "resetting form using ngformresetform model nested objects bind properly ngmodel controls modelfirstname rebind fine modelnamefirstname null expected behavior way binding able handle nested objects ngmodel modelnamefirstname way bind modelnamefirstname object minimal reproduction problem instructions create form ngform set viewchild form create model object contains nested object assign input field via ngmodel call viewchild ngform resetform method pass model textbox set object field null motivation use case changing behavior need able two way bind nested objects environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18640", "d": "8/2017"}, {"title": "enablelegacytemplate ignored aot compiler", "body": "submitting current behavior related realize fixed option jit compiler option ignored aot compiler expected behavior using bootstrap option replace elements minimal reproduction problem instructions add bootstrap options use element angular component run warnings jit compiler run template deprecation warning motivation use case changing behavior using web components inside angular need use native elements environment", "num": "18639", "d": "8/2017"}, {"title": "access private variable nt get angular error", "body": "submitting current behavior set variable component private using directly html template nt issue warning front without expected behavior expected warning minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18638", "d": "8/2017"}, {"title": "using animationbuilder breaks universal document defined", "body": "submitting current behavior inject animationbuilder universal breaks saying document defined appears noopanimationsmodule used server still uses browseranimationbuilder explicitly uses documentbody workaround far define documentbody serverappmodule eg sure bug universal rather animations somewhere expected behavior work mean universal nt anything differently minimal reproduction problem instructions clone repo npm install npm start verify working starting add browseranimationmodule clientappmodule noopaniumationsmodule serverappmodule everything still works use normal animations way inject animationbuilder component universal longer works giving error forked universalstarter repo make easies repro please see commit motivation use case changing behavior work environment", "num": "18635", "d": "8/2017"}, {"title": "feature ability query active route component instances", "body": "submitting current behavior na expected behavior feature request query active route component instances introspection want know active components tied routes could look check specific information ie dirty minimal reproduction problem instructions na motivation use case changing behavior goal create global dirty checker solution works prompting user closing window thought solution using component type instance upon search nt see way query active component instances closest thing hook nt fire want described environment", "num": "18634", "d": "8/2017"}, {"title": "value input tag show value bigger typenumber", "body": "submitting current behavior testvalue gt see number inside input text box expected behavior input text box type number display valid number regards value large small minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18632", "d": "8/2017"}, {"title": "component lifecycle init functions always called associated check function", "body": "submitting current behavior component lifecycle functions nt called called previous function expected behavior component lifecycle functions run lifecycle functions minimal reproduction problem instructions trigger event child component call parent component event console log child component notice never called called motivation use case changing behavior passing data child parent component expecting init lifecycle hooks trigger environment comments may regression need investigate may associated", "num": "18631", "d": "8/2017"}, {"title": "routerlink queryparams fragment return opposite order", "body": "submitting x bug report x documentation issue request current behavior using routerlink fragment queryparams routerlink generates link first queryparams fragment end example generates userbob debugtrue education expected behavior according routerlink documentation returned opposite order userbob education debugtrue minimal reproduction motivation use case changing behavior either routerlink behaving incorrectly documentation error environment browser x chrome ios version xx tooling issues node version platform mac", "num": "18630", "d": "8/2017"}, {"title": "error message missing wrong confusing", "body": "submitting current behavior use noerrorsschema unit tests structural directives property binding html html works expected behavior expect behavior structural directive property binding noerrorsschema configured work one without binding minimal reproduction problem instructions plnkr demo motivation use case changing behavior trying unit test component uses custom structural directive want ignore required directives test case rather trying mock", "num": "18629", "d": "8/2017"}, {"title": "exception uncaught promise error access deniederror access", "body": "submitting current behavior application working ie browser working well chrome firefox safari developed website deployed application aws working well chrome firefox safari ie use url working working ie got error exception uncaught promise error access denied expected behavior try access url working browsersbut try access url working ie minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18628", "d": "8/2017"}, {"title": "httpclient post demo ambiguity", "body": "submitting current behavior see post code write rquest parameter string name brad name brad springmvc need write annotation automatically match parameters motivation use case changing behavior think following code might better", "num": "18627", "d": "8/2017"}, {"title": "simple html table problems alignment dynamic headr body caused component tag", "body": "submitting current behavior simple table alignment suppose problem component tag really empty cause effect expected behavior simple html table aligned dynamic headr body etc minimal reproduction problem instructions motivation use case changing behavior use html table aligned dynamic headr body etc environment", "num": "18626", "d": "8/2017"}, {"title": "assign values component member variables within routereventssubscribe trigger view update", "body": "submitting current behavior assign value component member variables within trigger view update even use view still update expected behavior update view minimal reproduction problem instructions case steps navigate route save datas service navigate back grab saved datas service assign component variable component member variable bound code snippet ts ngoninit thisdatasource new propertydatasource thispaginator thispropertyservice thisdisplayedcolumns thistableheadersmap header gt headerkey thisselectedoption thispropertyoptions html update even save data issue ways save data call like throws error motivation use case changing behavior navigate route save datas service navigate back component use saved data environment", "num": "18623", "d": "8/2017"}, {"title": "routereusestrategy retrieve fired shouldattach", "body": "submitting current behavior navigate page app fired check test project use angular demo project article angular demo project found expected behavior fired return true environment", "num": "18622", "d": "8/2017"}, {"title": "type iterableiterator array type string type", "body": "submitting current behavior support iterables angular project expected behavior would like able use iterableiterator types order convert arrays iterate using forof loops type iterableiterator array type string type errors minimal reproduction problem instructions make new map get keys using mapkeys try iterate keys using key keys motivation use case changing behavior would like able work keys map objects environment", "num": "18616", "d": "8/2017"}, {"title": "fix core forbid destroyed views inserted moved vc", "body": "apply cleanly mlaval could reopen pr targeting branch pr merged master branch", "num": "18615", "d": "8/2017"}, {"title": "testing framework design breaks solid principle simplicity", "body": "submitting current behavior since one give complete answer tried reword continuing example docs using imports see question bottom template describe bannercomponent inline template gt let comp bannercomponent let fixture componentfixture let de debugelement let el htmlelement beforeeach gt testbedconfiguretestingmodule imports translationmodule declarations bannercomponent declare test component expected behavior minimal reproduction problem instructions motivation use case changing behavior environment question valid use testbed setup even though documentation scenario instructions", "num": "18612", "d": "8/2017"}, {"title": "extend meaning local flag also affect aio app", "body": "currently flag copies current local build angular aio example boilerplate allows us tests examples latest local build however easy make aio app build latest local build angular propose meaning flag extended affects examples aio app", "num": "18611", "d": "8/2017"}, {"title": "platform worker animations working", "body": "submitting current behavior animation working platform workerui get following error console even noopanimationsmodule module expected behavior expected animations working like code angular playground minimal reproduction problem instructions repo build command started error happen soon open page browser environment angular version", "num": "18610", "d": "8/2017"}, {"title": "broken common", "body": "reason incorrect globals mapping rollupconfigjs correct angularcore ngcore rxjsobservableof rxobservable rxjsoperatorconcatmap rxobservableprototype rxjsoperatorfilter rxobservableprototype rxjsoperatormap rxobservableprototype angularcommon ngcommon rxjsobservable rx full example also nt know uses tslib dependencies run extends see", "num": "18609", "d": "8/2017"}, {"title": "circular dependency templateurl nondetected", "body": "x bug report current behavior added mistake templatetemplateurl component one childs component browser tab became unresponsive hardkill expected behavior would expect circular dependency error minimal reproduction problem instructions see templateurl childcomponent refers parenttemplatehtml instead example childtemplatehtml angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18608", "d": "8/2017"}, {"title": "select control selected option disappearing dynamically populating select control", "body": "submitting current behavior one static option template displays selected fine loop array options add selected option appear immediately disappear list selected longer expected behavior option billing country appears default selection options available minimal reproduction problem instructions motivation use case changing behavior using placeholder texts label requirement works fine form field controls except select case use option simply disable ca nt selected nt work disappears ngfor loop hit environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows others", "num": "18607", "d": "8/2017"}, {"title": "dom nodes memory leak animations using hostbinding", "body": "submitting current behavior note profiling application detached dom nodes animated elements removed dom tree using expected behavior detached node flushed memory minimal reproduction problem instructions made example rewrote plunk using hostbinding similar issue still appears div elements still retained motivation use case changing behavior memory crash causes cordova android mobile application environment", "num": "18606", "d": "8/2017"}, {"title": "canactivate called redirectto router rule error either", "body": "submitting current behavior defining route properties error would say properties route apparently allowed honored never called simply processed eg commented uncommented runs fine expected behavior either error thrown allowed routes processed way components motivation use case changing behavior since angularjs ability define invoke functionservice property calculate path redirect need invoke service redirect programmatically via canactivate lack better place put plus would rather see bogus property rather bogus property since canactivate always going redirect trying recreate missing facility environment", "num": "18605", "d": "8/2017"}, {"title": "deprecate injectable decorator factory", "body": "submitting current behavior landed angular going make use metadata option typescript use angular documentation reason exist says injectable decorator tells typescript emit metadata service metadata specifies angular may need inject dependencies service although heroservice nt dependencies moment applying injectable decorator start ensures consistency futureproofing reason make sense expected behavior deprecate usage reason minimal reproduction problem instructions needed motivation use case changing behavior keep angular simple environment", "num": "18604", "d": "8/2017"}, {"title": "animated style animations", "body": "submitting motivation use case changing behavior animating often requires animatedelements certain styles animation eg reducing height element may need another example componentwrappers like work unless eg particular styles may wanted animation general style eg need animating keep general tooltips would nice style animated applied animation current behavior nt see possibility adding styles last animation animated tried adding state transition success expected behavior new function similiar use within", "num": "18603", "d": "8/2017"}, {"title": "style directive update gui windowonresize", "body": "submitting current behavior window onresize event style directive update without ngzonerun expected behavior changing style property dom updated minimal reproduction problem instructions run plunkr tried things setinterval settimeout ngzonerun code ngzonerun helped fix problem plunkr nt update correctly environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18602", "d": "8/2017"}, {"title": "nested multiple transclude fails", "body": "submitting current behavior like idea multiple transcluding seems run possible bug transclusion happens parent component errors gives minimal reproduction problem instructions expected behavior expect plunker work expected nt understand difference using component multiple transclusion slots sending transclusion slots child using another transclude miss something motivation use case changing behavior code writing would much dry works allows combinewrap components bigger components another solution replace templateurl using attributes nt work environment", "num": "18600", "d": "8/2017"}, {"title": "animation common scenario problem child route", "body": "submitting check one x current behavior leave animation triggered expected behavior animation triggered minimal reproduction problem instructions motivation use case changing behavior note matsko mlcmlapis already contributed issue follow closed shiny new animations simple transition pages guest ca nt find way create show struggle think issue using child route common scenario must way get work simply bug report could ignorance though let know ask around recommended log issue please tell us environment os linux angular version angularcli angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript xx node aot issues node", "num": "18597", "d": "8/2017"}, {"title": "templatedefined form field validation persists element longer present dom", "body": "submitting current behavior form field template defines required validation requirement persists relevant field longer present dom bound criteria longer updated expected behavior templatedefined validations applicable present dom bound criteria continue honored removal minimal reproduction problem instructions click toggle twice required fields shown hidden forms controls removed dom remain invalid state forms controls remain dom hidden css continue conditionally apply required state motivation use case changing behavior ability conditionally set required state amp hide display form fields based earlier choices environment", "num": "18596", "d": "8/2017"}, {"title": "testing framework design breaks solid principle simplicity", "body": "submitting current behavior documentation page incomplete expected behavior minimal reproduction problem instructions motivation use case changing behavior valid current way use testing framework describe bannercomponent inline template gt let comp bannercomponent let fixture componentfixture let de debugelement let el htmlelement beforeeach gt testbedconfiguretestingmodule imports translationmodule declarations bannercomponent declare test component imports translationmodule section told imports used tests nt test modules libraries angular code correct environment", "num": "18593", "d": "8/2017"}, {"title": "ngvalueaccessor ngvalidators fit components lifecycle hooks", "body": "much precise info docs need know precisely dynamically created formgroupsformcontrols part components use ngvalueaccessor ngvalidators particular methods interest questions method needs references formcontrols instantiated best practice implement kind situation formcontrols nullcheckes within validate problem facing getting errors pretty much references form controls used methods could nt find consistent pattern amp happens occur needs references formcontrols best practice way method needs several properties order validation obviously changes needed properties nt occured yet throw errors nullcheks make sure needed inputs way words run change run", "num": "18592", "d": "8/2017"}, {"title": "ngtoolswebpack emit ngmodule decorator information", "body": "submitting current behavior trying integrate aot compilation existing angular component library library always packaged using webpack integrated configuration resolving problem inlining ing external templates styles still able use resulting js module whenever try run app using would get error stating module class missing decorator examining generated code noticed stripped decorators code expected behavior keep angularspecific decorators minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18591", "d": "8/2017"}, {"title": "object nt support property method assign", "body": "hi error ie object nt support property method assign using aspnet core angular webpack packagejson made search understand objectassign supported ie understand need polyfill understand polyfill install resolve problem try npm install save added webpackconfigvendorjs execute webpack config webpackconfigvendorjs npm install save objectassign maybe solution", "num": "18588", "d": "8/2017"}, {"title": "type incorrect animationsquery", "body": "submitting current behavior first parameter allowed expected behavior first parameter able function signature minimal reproduction problem instructions simple typing error gives error motivation use case changing behavior used code implement stated valid use docs environment", "num": "18587", "d": "8/2017"}, {"title": "http responsetype set", "body": "submitting current behavior response type set httpclient methods const options headers headers params params responsetype text would show error expected behavior expected response type exported like one would able set using type otherwise type changed environment angular version still seen", "num": "18586", "d": "8/2017"}, {"title": "\u4e3a\u4ec0\u4e48\u4e2d\u6587\u6587\u6863\u6362\u6210\u8fd9\u6837\u5f0f \u4e86 \u771f\u96be\u770b\u554a \u8fd8\u6ca1\u6709\u4e4b\u524d\u7684\u597d\u770b", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18585", "d": "8/2017"}, {"title": "twoway data binded formcontrol update form valid status", "body": "submitting current behavior form controls child components passed child component changes get retrieved two way data binding status gets updated expected behavior status get updated minimal reproduction problem instructions open plunkr fill firstname fill lastname fill day see validation status updated change firstname form gets revalidated think work well opinion motivation use case changing behavior bug environment browser x chrome desktop version latest x firefox version latest x safari desktop version lastest", "num": "18582", "d": "8/2017"}, {"title": "ooops issue api ui", "body": "tag gets wrong position named ngform\u6307\u4ee4", "num": "18580", "d": "8/2017"}, {"title": "date pipe hh mm produces memory leak", "body": "submitting current behavior using date pipe like time date hh mm updating time pipe produces memory leak case updated time every second hours killed reaspberry pi gb ram aprox seconds consumed mb expected behavior let garbage collector clean resources free ram minimal reproduction problem instructions create observable interval ms subscribe observable update variable classfield etc every second variable piped date tested arguments hh mm likely fail configs well watch ram consumption browser go edit stackblitzlink commentsection motivation use case changing behavior date pipe could kill client runs device small resources app runs long period time environment", "num": "18579", "d": "8/2017"}, {"title": "testing framework design breaks solid principle simplicity", "body": "posting angulartesting repository please stop creating nuanced testing frameworks submitting current behavior docs describe bannercomponent inline template gt let comp bannercomponent let fixture componentfixture let de debugelement let el htmlelement beforeeach gt testbedconfiguretestingmodule declarations bannercomponent declare test component expected behavior test passes meat issue let say hypothetically want use ngxtranslate component add module nt test someone else library already tested create stub describe bannercomponent inline template gt let comp bannercomponent let fixture componentfixture let de debugelement let el htmlelement beforeeach gt testbedconfiguretestingmodule declarations bannercomponent declare test component providers provide translationservice useclass translationservicestub minimal reproduction problem instructions makes perfect sense added translation stub great issue using angular framework abstract provider module specifically reason nt write two lines every single component module translation service provided entire module include stub translationservice every speced component testing told following example incorrect usage testing framework describe bannercomponent inline template gt let comp bannercomponent let fixture componentfixture let de debugelement let el htmlelement beforeeach gt testbedconfiguretestingmodule imports translationmodule declarations bannercomponent declare test component motivation use case changing behavior example importing translationmodule expecting act normally nt problem framework need write twice much code order test working angular code please fix issue environment reposting issue stackoverflow google groups gitter slack github messaged github marketing team people constantly telling go somewhere else issue wrong github place issues discussions refer platforms include module tests import modules tests documentation need updated topic testing deemed important page entire topic need different testing frontends instead good one see nunit resharper fantastic examples good frontend looks like please provide answers wrong forum npm package", "num": "18578", "d": "8/2017"}, {"title": "formcontrolsetvalue triggers valuechanges even called current value formcontrol", "body": "submitting current behavior situation calling setvalue patchvalue formcontrol value setting equal current value result formvaluechangesforeach executes callbacks expected behavior calling setvaluemethod current value formcontrol trigger valuechangesforeachcallbacks since value change motivation situation two inputfields updated according value inputfield worked case user entered first input field second input field would updated programmatically value pair case user entered first input field second input field would programattically updated impair user could also enter pair second input field case first inputfield would automatically updated trying implement behaviour ended cyclic callback situation first input called setvalue triggering second input called setvalue tiggered first input setvalue time values already set implement updatevalue method would check whether current value formcontrol actually different value set triggering events case values different need events fire case values different update second instance form otherwise could used emitevents false think would nice method option prevent events fired case setvaluemethod called actual current value formcontrol twould also tune word valuechanges currently valuechanges behaves like valuesset minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18574", "d": "8/2017"}, {"title": "aio missing descriptions modules api docs", "body": "although block included module template modules descriptions nt show docs tried moving comment file still nothing", "num": "18572", "d": "8/2017"}, {"title": "match routes page refresh nested child route", "body": "submitting current behavior following router config home component navigate child routes problem including setupcycles browser refresh setupcycles get match routes url segment cycles exception browser refresh top level paths eg territorydefinition even setup expected page reloads without problem add setup twice path appear work eg setupsetupcycles refresh invalid path found similar issue localized router app using normal routermodule expected behavior would expect page reload normal subchildren top level minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18571", "d": "8/2017"}, {"title": "activatedroute angularrouter getting params even component", "body": "appcomponent import component angularcore import activatedroute angularrouter component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app constructor private route activatedroute thisrouteparammapsubscribe x gt consolelog xkeys appmodulets like import browsermodule angularplatformbrowser import ngmodule angularcore import appcomponent appcomponent import routermodule routes angularrouter const route routes path id value component appcomponent ngmodule declarations appcomponent imports browsermodule routermoduleforroot route providers bootstrap appcomponent export class appmodule make request like hoping get keys log getting giving empty array also get null working fine case querystring params make request like giving think issue packagejson", "num": "18569", "d": "8/2017"}, {"title": "httpparams handling null amp undefined values", "body": "submitting current behavior expected behavior minimal reproduction problem instructions due underlying return string literals null undefined edited plnkr replication motivation use case changing behavior mostly arisen due httpclient replacement urlsearchparams httpparams intended behaviour require fix eg converted thrown appreciate intended direct replacements create httpparametercodec seems like unintended operation environment", "num": "18567", "d": "8/2017"}, {"title": "able passshare objectproperties root component", "body": "submitting current behavior working spfx based webpart typescript anguler mail render function mywebpartts calling angular module private renderannoucementasync void check enviorment local sharepoint environmenttype environmenttypesharepoint let itemid number let listname string also want pass object properties mydetailsapp component guess way achieve expected behavior able share input child component happening root element also created injectable data service like injectable export class listdataservice function service constructor public context iwebpartcontext constructor alert thiscontextpagecontextwebabsoluteurl successful able access pass object calling service achieve using angular sure working angular", "num": "18566", "d": "8/2017"}, {"title": "access singleton service custom class decorator", "body": "possible access singleton service decorator function know decorator run build time wondering way im trying make library use decorators syntax api thanks advance", "num": "18565", "d": "8/2017"}, {"title": "angular cli aot compiler errors", "body": "learning quickstart official web stepped comes error webpack follows done nothing code please provide us following information os windows angular version", "num": "18564", "d": "8/2017"}, {"title": "empty headers http response angular httpinterceptor", "body": "submitting current behavior send http request would like read http headers httpresponse httpinterceptor event seems headers even chrome dev console see headers however using postman see headers response expected connection contentlength contenttype date aug gmt server xpoweredby official docs http says get headers like http get datajson observe response subscribe resp gt resp type httpresponse inspect headers consolelog respheadersget xcustomheader access body directly typed myjsondata requested consolelog respbodysomefield expected behavior expecting see headers angular postman environment browser x chrome desktop version xx", "num": "18563", "d": "8/2017"}, {"title": "servermodule noopanimationsmodule read property display undefined cloakelement", "body": "submitting current behavior prerendering application animated components error happens despite noopanimationsmodule provided server side instead browseranimationsmodule use angularmaterial looking stack trace believe hardly relevant expected behavior functions called server side since defined element minimal reproduction problem instructions believe reproduced calling platformserverrendermodulefactory appmodule appmodule contains servermodule noopanimationsmodule component animations motivation use case changing behavior would nice avoid polluting logs errors environment", "num": "18562", "d": "8/2017"}, {"title": "thought", "body": "sorry bring talk locked think serious problem angular team duty make formal decision whether remove aaron name marketing contributors note code contributor never remove copyright marketing contributor another story opinion aaron behavior offense vue community also rip whole chinese web frontend community sharpen contradiction supporters different frameworks create big chaos tech social network shame words comments abusing behavior npm shows conflict end involved event know hurt permanent side important issue google official angular evangelist aaron contractor google things behavior release series bad articles even boss bill luan greater china regional lead developer relations google make apologize nt stop publish much insulting article make bad impact angular brand marketing even affect gdg brand respect aaron effort angular past also suspect harm bring angular vue whole community whether still deserve position angular marketing contributor list anymore though personal feeling would like say angular team duty make formal decision issue thank ps avoid emotional comments issue suggest anyone want show agreedisagreement add comments enough chinese translation", "num": "18561", "d": "8/2017"}, {"title": "lifecycle hooks called second element controlvalueaccessor directive embeded ie", "body": "submitting current behavior directive implements convert htmlelement contenteditable lifecycle hooks second use directive within component called like methods implemented called like everything works fine first use directive expected behavior lifecycle hooks called minimal reproduction problem instructions use case somewhat similar could reproduce outside app code works correctly chrome edge normal ie issue embed ie ms office products motivation use case changing behavior environment", "num": "18560", "d": "8/2017"}, {"title": "pipe documentation", "body": "documentation parameterizing pipe include details include parameters pipe although fairly obvious example documented", "num": "18558", "d": "8/2017"}, {"title": "ng component looses metadata transpiling think like nt annotated component", "body": "submitting x bug report yet another current behavior summary including external library uses causes error like one expected behavior adding external library uses polyfill nt cause errors minimal reproduction problem instructions error description two components appcomponent userdialogcomponent see userdialogcomponent behave decorated true problem relies reflect metadata polyfills think remove decorators added library everything goes well worked adding userdialogcomponent repo error steps reproduce aditional info images error trace attached images chrome dev tools set pause exception go callstack two times evaluate get userdialogcomponent constructor reference execute order retrieve component metadata returns undefined whereas successfuly return appcomponent medatada kinda bizarre motivation use case changing behavior removing third party decorators angular components mantain metadata environment thanks", "num": "18557", "d": "8/2017"}, {"title": "bazel building error", "body": "current behavior following guideline build angular project bazel catched error vagrant vagrantangular bazel build packagescore info analysed target packagescore core packages loaded info found target error compiling typescript devmode buildbazelrulestypescriptinternaltscwrapped tscwrapped failed exit file directory target packagescore core failed build use verbosefailures see command lines failed build steps info elapsed time critical path failed build complete successfully expected behavior normal build environment", "num": "18556", "d": "8/2017"}, {"title": "httpclientmodule xssiprefix working responsetype json", "body": "submitting current behavior present http response json response fails parse response get data text xssiprefix properly removed expected behavior would expect work json responsetype case per documentation angular httpclient library recognizes convention automatically strips string n responses parsing also note works fine old angular client minimal reproduction problem instructions example used glitch needed server request click show live top left go see running toggle types json text quickly adjusting commenting motivation use case changing behavior httpclient work documented documentation changed environment", "num": "18555", "d": "8/2017"}, {"title": "iterablediffersextend aot compatible", "body": "submitting current behavior iterablediffersextend api using static function call list using would cause error aot compilation expected behavior error aot possible solutions enhance aot compiler allowing function call since already partially supported refactor api making return new instead would breaking change stable api minimal reproduction problem instructions clone repo install dependencies run motivation use case changing behavior angular apis aot compatible related also applies environment", "num": "18554", "d": "8/2017"}, {"title": "router animations function called twice every angular check", "body": "submitting current behavior router animation function used create custom router animations called twice every angular check expected behavior router animation function used create custom router animations called navigation minimal reproduction problem instructions public prepareroutetransition outlet routeroutlet function called every angular check return outletactivatedroutedata animation null motivation use case changing behavior performance environment angular version browser tooling issues node version platform windows others angulario lacks tutorial router animations one available seems matsko", "num": "18553", "d": "8/2017"}, {"title": "angular tutorial find name heroes also one pedantic point", "body": "submitting current behavior parrt tutorial masterdetail heroes heroes browser error find name heroes studio code warning ts find name heroes warning replace heroes hero heroes resolves another minor nonetheless important point part tutorial hero editor quote add two properties appcomponent title property app name hero property hero named windstorm point title property already exists adding course result duplicate identifier warning pendantic know good get tutorlal follow without errors us newbsters expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18552", "d": "8/2017"}, {"title": "wrong sample code tutorial documentation", "body": "submitting current behavior check official doc expected behavior refer", "num": "18551", "d": "8/2017"}, {"title": "route properties consistent appcomponent correct subcomponents", "body": "submitting current behavior angular routing tutorials invariably components accessing route parameters say foo via constructor maybe ngoninit works components loaded work appcomponent even though defined always empty url url never even updates evaluate expression url never even updates subscribe data url ala btw also issue components loaded via toplevel template inside routeroutlet eg header footer expected behavior accessing route parameters route properties work appcomponent way components particular require obscure technique stumbled onto subscribing events gets updated following code work updated least also work environment", "num": "18549", "d": "8/2017"}, {"title": "get js file one used restservice", "body": "nodejs user want use angular like integrated deploy jsp html apachetomcat call service show result official release js file get way use nodejs compile use angular version want upgrade version", "num": "18546", "d": "8/2017"}, {"title": "aot compilation starting documentation missing npm scripts", "body": "submitting current behavior section npm script missing line however missing npm scripts missing packagejson could remove line case confusion expected behavior following scripts added line", "num": "18544", "d": "8/2017"}, {"title": "aot compilation starting guide install compilercli platformserver", "body": "submitting current behavior compile aot section following setup guide running gives following error unmet peer dependency angularanimations unmet peer dependency angularcommon unmet peer dependency angularcompiler angularcompilercli angulartscwrapped tsickle minimist mkdirp minimist minimist reflectmetadata unmet peer dependency angularcore unmet peer dependency angularplatformbrowser angularplatformserver tslib npm warn angularcompilercli requires peer angularcompiler none installed npm warn angularcompilercli requires peer angularcore none installed npm warn angularplatformserver requires peer angularanimations none installed npm warn angularplatformserver requires peer angularcore none installed npm warn angularplatformserver requires peer angularcommon none installed npm warn angularplatformserver requires peer angularcompiler none installed npm warn angularplatformserver requires peer angularplatformbrowser none installed nodemodulesbinngc p tsconfigaotjsonthiscompileranalyzemodulesasync function expected behavior run normally two commands produce error message minimal reproduction problem instructions follow startup guide version conflict angular core compilercli change dependencies fix problem environment", "num": "18543", "d": "8/2017"}, {"title": "directive injects wrong changedetectorref inside content projection", "body": "submitting current behavior note still working reproducing outside project sure specifics project issue using ngupgrade attempt describing observing injected directive lives insides component content projection ie part component contentchildren instead injecting whatever component directive attached seems inject topmost component content projection example template following end injecting change detector instead change detector note seems occur done directive component able inject proper reference times expected behavior would expect directive inject component attaches regardless contentprojection context intended behavior describe supposed otherwise minimal reproduction problem instructions nt able repro outside project unfortunately keep trying plunker showcases desired behavior nt happening case environment", "num": "18542", "d": "8/2017"}, {"title": "clarify router information resolve", "body": "defining crisiscenterroutes crisisdetail particular snippet showing something like path crisiscenter id component crisisdetailcomponent resolve crisisdetailresolver add crisisdetailresolver providers array crisiscenterroutingmodule resolver hit nt know applied gone missing docs somehow quite important understand resolve mechanism submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18538", "d": "8/2017"}, {"title": "form validatormaxlength error message", "body": "submitting current behavior form validation maxlength display message expected behavior form validation maxlength display message minimal reproduction problem instructions motivation use case changing behavior let user know form valid environment", "num": "18537", "d": "8/2017"}, {"title": "angular like class name product", "body": "submitting current behavior try print property property except id instantiated class product breaks ng consolelog thisproductlist name error clientsrcappbidsbidscomponentts property name exist type product yet break try print id property consolelog thisproductlist id wits end simply changed product auction remaining code worked working code replace auction product see error manifest interface bidmodel username string bid number export class auction name string bids array id string export class bidscomponent implements oninit auctionlist array expected behavior properties printed console minimal reproduction problem instructions use class product instantiate object try consolelog properties motivation use case changing behavior one else gets burned environment", "num": "18535", "d": "8/2017"}, {"title": "viewproviders overridden testbed configuration", "body": "submitting current behavior component uses service view provider component sub components used child component another component componentts currently trying unit test component using karma jasmine spec follows componentspec even though providing mocked providers service angular still uses real service tests creating component using testbedoverridecomponent viewproviders also produces result expected behavior mocked provider applied view providers well minimal reproduction problem instructions create component viewproviders mock provider using testbedconfiguretestingmodule configuration see mocked instance provider get used component initialization environment", "num": "18534", "d": "8/2017"}, {"title": "angular like class name product", "body": "submitting current behavior expected behavior consolelog statement print value name property minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18533", "d": "8/2017"}, {"title": "add support clearing formarray", "body": "submitting current behavior current way clearing formarray expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18531", "d": "8/2017"}, {"title": "ngif upgraded transcluded element", "body": "submitting current behavior use ngif ngupgraded transcluded component component nt render regardless value ngif expression expected behavior ngif remove transcluded component expression falsey nothing truthy minimal reproduction problem instructions component myangularjscomponent template transclude mytranscludedcomponent mytranscludedcomponent motivation use case changing behavior able use ngif transcluded elements environment hypothesis ngif wraps code tag would template tag hide code looks content transclude", "num": "18529", "d": "8/2017"}, {"title": "future http vs httpclient", "body": "preparement future plan http depricated favour httpclient exist parallel insight requires planning upgrading exiting apps thanks update found info", "num": "18528", "d": "8/2017"}, {"title": "feature ability customize change detection bounded value", "body": "submitting current behavior angular checks bounded value changed identity expected behavior need way inform change detection mechanism bounded object changed obvious way would using observables inputs drawbacks must change existing code expects observable input always possible possible binding componentdirective input use adds boilerplate code suggest angular special type observable let say instance class passed input angular would detect changes identity subscribe pass values observable input using pipe concept similar everything returned pipe still subject change detection observable emits two objects second wo nt trigger change input motivation use case changing behavior create sophisticated way detecting changes input suited specific use example would possible implement one time binding like usage also change detection mutable objects", "num": "18527", "d": "8/2017"}, {"title": "abstractcontroldirective missing status property", "body": "submitting current behavior extending abstractcontroldirective create custom class provides ie value valuechanes statuschanges sstatus property looks like missingincomplete api expected behavior would see status getter also class feels incomplete minimal reproduction problem instructions reproduction api change request take look provided functions motivation use case changing behavior want complete reasonable api abstractcontroldirective class environment", "num": "18526", "d": "8/2017"}, {"title": "binding large array makes change detection slow", "body": "submitting current behavior passing arrays one million elements binding makes whole change detection mechanism slow expected behavior either change detection work flawlessly process costs much must option specify check changes maybe turn detection case detect changes specific input set minimal reproduction problem instructions open example observe note button set elements array performance become times faster motivation use case changing behavior large applications cases developer needs charge controlling every single part application even though angular ships lots good features great framework sometimes closed mechanism things ecosystem makes difficult scale hope understand motivation thanks advance environment", "num": "18525", "d": "8/2017"}, {"title": "loadchildren children navigate", "body": "const routes routes path loadchildren ngmodule imports commonmodule export default class const routes routes path component children path id outlet detail component export default routermoduleforchild routes thisrouternavigate outlets detail queryparamshandling merge error use navigate jump page", "num": "18524", "d": "8/2017"}, {"title": "uncaught typeerror read property ngoriginalerror null", "body": "submitting receive error server eg console shows uncaught typeerror read property ngoriginalerror null use observable handling http requests error server nt null logged console shows response object handled within observable method error snapshot seems error comes snippet found file environment", "num": "18523", "d": "8/2017"}, {"title": "animation background color changes state using", "body": "submitting current behavior working angular broken later versions use pulse animation looping back forth two states first state uses grab current background color fades second state white loops back first state forth previously color would kept first state updated white color stays white whole animation expected behavior minimal reproduction problem instructions change higher version see loop work anymore click button start animation motivation use case changing behavior able loop animation without knowing color beginning", "num": "18522", "d": "8/2017"}, {"title": "async input start data received", "body": "submitting current behavior component selector myapp template export class app component selector mypeople template export class peoplecomponent input people ngfor used guard hack data arrives expected behavior think responsibility nt htmltemplate component something like idea inputwait act data received motivation use case changing behavior less responsibility html", "num": "18512", "d": "8/2017"}, {"title": "create scroll components", "body": "well ngfor code need create scroll itens ngfor want components scrool need fixed look notifica\u00e7\u00e3o blkasdlkfjaslkjfdlkasjflkasjkldfjlaskjdflaskjdf need scroll disciplinaperfil others need stay fixed", "num": "18511", "d": "8/2017"}, {"title": "componentdeclarative error handling ala react", "body": "submitting react recently introduced concept called error boundaries basically wrap key areas app componenttemplate errors within handled level run issues angular app error component cause app break sometimes app still navigable often times rendering messed app needs restart blog posts angular documentation error handling nt deal rendering issues logginghandling exceptions may occur strategies gracefully handling breaking errors angular app would something like make sense angular edit discussing robwormald seems current proscribed solution handling uncaught errors would log reload entire app via mechanism already angular still less ideal although ideally would errors applications grow third party components addedupgraded would useful introduce concept errorboundary two primary reasons allows graceful selective degradation app child components underneath errorboundary fail restarted error boundaries introduce bulkheads ensure single error wo nt sink entire ship forcing app reloadrestart important likely errors occur size app external components etc", "num": "18509", "d": "8/2017"}, {"title": "docs aio aot caveats guide", "body": "submitting current behavior aot guide docs nt mention caveats like ones rangle lists expected behavior guide link rangle aot caveats list link another resource another resource nt exist currently link rangle repo since already exists covers cases internal document comes link one minimal reproduction problem instructions reading aot guide developed jit guide suggested ran errors pipeline aot compile errors private protected properties motivation use case changing behavior better educated user base aot compilation", "num": "18508", "d": "8/2017"}, {"title": "custom uppercase directive undo action ctrl z issue ie version amp edge browser", "body": "submitting current behavior written simple uppercase directive convert input field values upper case everything works expected ie amp edge browser undo action ie ctrl z unexpected behavior case input box undo action duplicates characters case textarea undo action converts characters back lower case expected behavior undo action ideally clear previous characters works fine chrome browser sure issue angular ie browser minimal reproduction problem instructions created plunker depicting issue please open url edge browser type characters either input box textarea perform ctrl z keyboard action order reproduce issue environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version x edge version", "num": "18507", "d": "8/2017"}, {"title": "prod property statustype exist type statuscomponent", "body": "submitting current behavior building app causes following error using enum type property statustype exist type statuscomponent minimal reproduction problem instructions create following enum create template like html best\u00e4tigt offen best\u00e4tigt abgelehnt run workaround using set enums public properties typescript component file ts component selector appstatus templateurl statuscomponenthtml styleurls statuscomponentscss statustypedecorator export class statuscomponent input public status status public manuell statustype statustypemanuell public unbestaetigt statustype statustypeunbestaetigt public bestaetigt statustype statustypebestaetigt public abgelehnt statustype statustypeabgelehnt", "num": "18506", "d": "8/2017"}, {"title": "build multi select drop using spfx angular", "body": "please help achieve thanks advance", "num": "18505", "d": "8/2017"}, {"title": "bind dropdown sharepoint list using angular spfx along drop change events", "body": "please provide sample code achieve", "num": "18504", "d": "8/2017"}, {"title": "using relative path import shows error run well", "body": "submitting current behavior using relative path import problem needs declare component di component situations seems ok always show error like picture could resolve appanimations relative blabla di show error description question mark parameter actually runs well even build prod error show terminal show error screen expected behavior error pop environment tsconfigjs looks like compileonsave false compileroptions outdir distouttsc baseurl src paths appanimations appappanimationsts sourcemap true declaration false moduleresolution node emitdecoratormetadata true experimentaldecorators true target typeroots nodemodules types lib dom webstorm", "num": "18503", "d": "8/2017"}, {"title": "error occuring heroservicets tour heroes tutorial", "body": "issue gon na close cause wo nt let delete original post cheers issue fixed way finished tour heroes tutorial thing compiles", "num": "18501", "d": "8/2017"}, {"title": "unit testing httpclientmodule undefined return value httptestingcontrollerexpectone url", "body": "submitting current behavior issue copied recent question stackoverflow honestly sure bug report documentation issue trying understand use mocking functionality provided part new test code shown minimal repro matches shown existing documentation almost exactly however doc example complete example minimum import statement missing assume true angularcommon test code adds test fails req ends undefined call appreciate insight might expected behavior expect unit test pass successfully stated httpclient documentation minimal reproduction problem instructions typescript import testbed inject angularcoretesting import httpclient angularcommon import httpclienttestingmodule httptestingcontroller angularcommon describe httpclienttestingmodule gt beforeeach gt testbedconfiguretestingmodule imports httpclienttestingmodule providers httpclient httptestingcontroller expects get request inject httpclient httptestingcontroller httpclient httptestingcontroller gt http get data subscribe data gt expect data name toequal test data motivation use case changing behavior work documented alternately documentation updated contain complete example fact work something missing code sample environment", "num": "18499", "d": "8/2017"}, {"title": "using aot stil getting much benefit initial page load execution", "body": "current behavior still taking seconds start execution page loading expected behavior using ahead time compilation initial page load reduced environment angular angularcli browser chrome version official build", "num": "18498", "d": "8/2017"}, {"title": "add hashtag url", "body": "submitting current behavior router file like const routes routes path redirectto home pathmatch full path home component dashboardcomponent path detail component datatabledetailcomponent ngmodule imports routermoduleforroot routes exports routermodule need convert url detail detail trying use locationstrategy successful example find appmodulets import browsermodule angularplatformbrowser import ngmodule viewchild applicationref angularcore import formsmodule reactiveformsmodule angularforms import commonmodule angularcommon import cdktablemodule angularcdktable import httpmodule angular import appcomponent appcomponent import browseranimationsmodule angularplatformbrowseranimations import flexlayoutmodule angularflexlayout ca nt reproduce use locationstrategy angular many files changed version trying long ago reproduce subject find right thing version", "num": "18497", "d": "8/2017"}, {"title": "control visibility hidden work div helpblock class", "body": "control visibility hidden work div helpblock class current behavior used control visibility hidden user name field element alway shown changed something different like work correctly expected behavior nt happen preserved class name environment", "num": "18491", "d": "8/2017"}, {"title": "docs aio yarn postinstall failure due sourcemap provided packagejson", "body": "submitting current behavior performing yarn instructed aio master documentation failure occurs error fs module bindingopen pathmodulemakelong path stringtoflags flags mode bubbled error typeerror path must string buffer expected behavior yarn installs dependencies without error including execution postinstall minimal reproduction problem instructions pull latest angular repo windows machine attempt follow instructions contained within aioreadmemd beginning simply running yarn motivation use case changing behavior documentation build using documented build process environment", "num": "18488", "d": "8/2017"}, {"title": "angular router browser history gt extra page view count ga", "body": "submitting current behavior two bug one already raised one resolver reject router add route browserhistory expected behavior rejected route added history replacestate pushstate becuse rejected user stay current page minimal reproduction problem instructions please open console land page default page resolver reject able navigate page click link error raised reproduce issue error see warning console reproduce error motivation use case changing behavior single page application gtm track page view event ga using browserhistory browser history change event fired replacestate andor pushstate replacestate called gtm fire page track event wrong environment sure relevant putting section base comment another issue modify resolver replace error line following error problem error bigger replacestate fired twice rejected route issue similar issue main expectation wrong still raised becuse resolver reject raise error", "num": "18486", "d": "8/2017"}, {"title": "angular assign model value loop index", "body": "want assign model value current loop index working idea plunker please check", "num": "18485", "d": "8/2017"}, {"title": "languageservice seem support tsconfig alias parameters", "body": "submitting current behavior assuming following directory layout two modules appmodule commonmodule knowing planning isolate common module git repo npm package actually referring using reference appmodule anything inside commonmodule done using alias configured tsconfigjson webpack config appmodule import commonmodule following way import commonmodule mynscommon ngmodule imports commonmodule export class appmodule works compile execute fine using vscode version angular language service plugin version seams use angular language service every components commonmodule referenced template inside appmodule nt recognized get following message known element switch importing commonmodule appmodule using aliased name absolute path module everything work fine exemple change work expected behavior language service report errors using aliased imports environment", "num": "18484", "d": "8/2017"}, {"title": "typeerror read property component null", "body": "submitting current behavior following route path contract id customer valid id pass id exist show default id get following exception even tho app still works functional happens navigating navigation need retrieve current logged user via set id router expected behavior error also identify origin error showing stack", "num": "18481", "d": "8/2017"}, {"title": "setdisabledstate never called controlvalueaccessor implemented directive", "body": "submitting current behavior changing value attribute directive called expected behavior changing value attribute directive never called minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18480", "d": "8/2017"}, {"title": "angularcompilercli gt ngc generating metadatajson file", "body": "submitting current behavior use angular compiler cli ngc combination rollup generate correct bundles internal angular library following angular package format documentation works expected used version meaning compilation works sourcemaps type definitions getting generated correctly file gets generated newer version however generate file everything else seems work properly expected behavior generate file versions newer versions minimal reproduction problem instructions trying run angular library project eg latest version results problem described full tsconfigjson build motivation use case changing behavior issue prevents us publishing library using latest greatest version angular addition version angular dependencies must exist version otherwise build fails prevents us using newer angular features new http client amongst others environment", "num": "18478", "d": "8/2017"}, {"title": "animation route reuse strategy working", "body": "router transitions working component animation imposed routed using route reuse strategy", "num": "18477", "d": "8/2017"}, {"title": "bind property video src component cause expressionchangedafterithasbeencheckederror", "body": "bind property value video src cause error tried run change detection explicitly change still got error", "num": "18475", "d": "8/2017"}, {"title": "make use case examples reachable api documentation", "body": "submitting current behavior way get example use case api documentation expected behavior link api documentation tutorialfundamentalstechniques section maybe vise versa show example use cases example hostlistener documentation link page motivation use case changing behavior times developers know certain thing help use case look api documentation example use case give insights use", "num": "18473", "d": "8/2017"}, {"title": "word like text editor", "body": "submitting hi looking text editor offers ms word like features currently using telerik richtextbox however since silverlight actively supported thinking switching another editor link works ie text editor offer features like rtf support ability formatting options customization could please suggest another angular text editor control offers word like features browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version edge version xx", "num": "18472", "d": "8/2017"}, {"title": "use modal bootstrap angular bootstrap", "body": "use modal bootstrap angular bootstrap", "num": "18471", "d": "8/2017"}, {"title": "router data pass children pass lazyload children", "body": "submitting current behavior component oninit function use routerdatasubscribe get data parent data get parent data ca nt find info router doc router ca nt get root parent data approutermodulets defined data pagetitle youare ca nt get data crisislistcomponent crisislistcomponent print log asdfsadfsadf preload true expected behavior expected print log crisislistcomponent print log asdfsadfsadf pagetitle youare preload true minimal reproduction problem instructions motivation use case changing behavior environment", "num": "18470", "d": "8/2017"}, {"title": "routerlinkactive updating routerlink changed", "body": "routerlink url change time url changes routerlinkactive reevaluated submitting current behavior change routerlink url matchnot match current url routerlinkactive class appliedremoved expected behavior routerlinkactive reevaluated corresponding routerlink updated minimal reproduction problem instructions click link link b make active click switchlinks button change urls nothing changes motivation use case changing behavior multiple departments managed ui department name variable url user switches departments screen links url changed ui nt update routerlinkactive think contentchildrenchanges nt fire contents directive changed directives added removed maybe bad performance fix environment angular version mac browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "18469", "d": "8/2017"}, {"title": "queryparamshandling merge remove query parameters", "body": "submitting current behavior navigating route query params queryparamhandling strategy specified query param specified query param kept previously existed expected behavior navigating route query params queryparamhandling strategy specified query param specified query param removed previously existed minimal reproduction problem instructions application one route gt gt expected motivation use case changing behavior route multiple query params including updated independently query params nt want wipe updated use however currently remove query param currently expect able provided value override existing value remove query param current workaround use snapshot previous query params default queryparamhandling get behavior desire environment", "num": "18463", "d": "8/2017"}, {"title": "remove reference hydration docs", "body": "submitting current behavior mentions word hydration twice footer within context onpush default terms beginning h expected behavior explanation hydration link blog post video etc info able find protoview quote views transition particular set states view created protoview view attached existing viewcontainerref upon attaching view viewcontainerref view needs hydrated hydration process involves instantiating directives associated current view point view ready renderable multiple changes delivered directives changedetection point view removed point directives destroyed dehydration process view becomes inactive view wait detached dom delay detaching could caused animation animating view away view detached dom ready reused view reuse allows application faster subsequent renderings protoview compiled dom view efficient creating views view contains context object context represents object instance expressions evaluated view contains changedetector looking detecting changes model view contains elementinjector creating directives maybe reworded simply layman terms minimal reproduction problem instructions motivation use case changing behavior inform users meaning angular jargon environment", "num": "18458", "d": "8/2017"}, {"title": "angular compile cleanly typescript", "body": "submitting current behavior stricter checking improved type inference typescript reports errors angular reported also produces dts files reported errors reported expected behavior angular compiles cleanly minimal reproduction problem instructions upgrade typescript run", "num": "18454", "d": "8/2017"}, {"title": "httpclient receive prefixed json", "body": "submitting current behavior xhrs submitted httpclient return json object prefixed returned angular application null body seems browser tries parse json prefix stripped see stack overflow question reference expected behavior xhrs submitted httpclient passed application may done changing response type parsing response manually user expected manually parse response documented since cause issue hidden browser minimal reproduction problem instructions make httpclientget request endpoint json prefix response body null see plunker example motivation use case changing behavior prefix prevent crosssite script inclusion feature easily supported angular promote security already existing logic common support prefix work correctly issues also related environment", "num": "18453", "d": "8/2017"}, {"title": "angular triggers cors post nt need", "body": "submitting current behavior use trigger preflight request server nt support get similar error fail adds values headers allowed tell see works fine box expected behavior nt send request simple post minimal reproduction problem instructions motivation use case changing behavior using external api ca nt patch server support could kind annoying simple patch saves entire network roundtrip requests environment workaround add interceptor reset values allowed mentioned fixed problem", "num": "18450", "d": "8/2017"}, {"title": "upgrading angular angular router resolve return type mismatch issue", "body": "recently upgraded angular application angular version upgradation compile application getting mentioned errors application stopped working reason behind error angular router resolve interface like angular angularrouter resolve interface earlier returning newer version returning due application compiling implementation submitting current behavior compile application getting errors srcappfeaturesusersshareduserdataresolversservicets error class approlesresolver incorrectly implements interface resolve types property resolve incompatible type route activatedroutesnapshot state routerstatesnapshot gt observable promise type observable property missing type observable srcappfeaturesaccountsaccountlistaccountlistcomponentts error property url exist type event property url exist type routeconfigloadstart expected behavior compile without errors minimal reproduction problem instructions upgrade angular angular used resolve feature break compilation throws error motivation use case changing behavior degrade angularrouter previous version application work expected environment", "num": "18449", "d": "8/2017"}, {"title": "spy variable initialised testing documentation section spystub", "body": "submitting current behavior testing spy variable nt initialised code example expected behavior spy variable initialised prevent compile errors motivation use case changing behavior may seem obvious many new coders able study working code absolutely crucial code wo nt work snippet", "num": "18447", "d": "8/2017"}, {"title": "enforce id downgraded component", "body": "submitting current behavior set downgraded component overwritten downgrade function example declaring compiled output expected behavior user able use choice overwritten upgrade ids could renamed minimal reproduction problem instructions declare component module use component html id motivation use case changing behavior ability user keep using existing ids even downgraded components otherwise migration could require significant rewriting existing app match another discriminator existing js css code environment angular version browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx others see question workaround stackoverflow", "num": "18446", "d": "8/2017"}, {"title": "possible render component table new data", "body": "submitting feature request current behavior reproduced example application component form tablehttp component table input field variables sent form call tablehttp problem receive data form correctly rendered data modify fields form press button submit ca nt render tablehttp new input date field sent template component buscar onsubmit method tablehttp component declared field input date date press button first time problem tablehttp rendering correct data press button second time reload new data nt understand nt reload new data expected behavior minimal reproduction problem instructions add plunker short problem based selecting date example pressing button press second time advance real component happen worry console printed twice date assuming date used service get new data change date press button reprint data never update table motivation use case changing behavior render datatable form environment", "num": "18440", "d": "8/2017"}, {"body": "try", "d": "8/2017"}, {"body": "please use issue template", "d": "8/2017"}, {"body": "already working importantly read code conduct opening issues commenting anywhere else general nastiness tolerated", "d": "8/2017"}, {"body": "stach blitz demo behaviour scratch made typo actually working intended", "d": "8/2017"}, {"body": "ngif destroys component removed dom expected intended behavior fires lifecycle hooks", "d": "8/2017"}, {"body": "attempted reproduce unable could please provide minimal reproduction issue use stack blitz provided starting point", "d": "8/2017"}, {"body": "robwormald really beed removed dombut called", "d": "8/2017"}, {"body": "toxicable change like click console output", "d": "8/2017"}, {"body": "inserts removes inner parts dom think called", "d": "8/2017"}, {"body": "reproduction issue assume going since removing ref content ngcontent dose nt actually destroy projected content sure intended behaviour", "d": "8/2017"}, {"body": "expected behaviour see thanks ghetolay pointing", "d": "8/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "8/2017"}, {"body": "brief chat gkalpak third option might safer form upgradecomponent", "d": "8/2017"}, {"body": "uirouter directive two things renders href linked state listens clicks calls statego linkedstate directive supports relative links meaning state relatively link instead absolutely directive needs know state context rendered uirouter angular hybrid project enables uirouter apps use angular directive angular code angularjs directive angularjs code also includes adapter provides state context angularjs angular hybrid project supports bottomup hybrid apps work fine", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "got thanks answer", "d": "8/2017"}, {"body": "believe use", "d": "8/2017"}, {"body": "dmitrysteblyuk right use", "d": "8/2017"}, {"body": "cab closed working expected", "d": "8/2017"}, {"body": "great idea would helpful building modular components", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "pr fixing issue already merged sure deployed", "d": "8/2017"}, {"body": "thanks reply sorry report problem already solved", "d": "8/2017"}, {"body": "course resolved problem hours pulling hair typing issue guess use instead value see docs found solution little buried docs wondering others problem finding tried searching docs came nt immediately think check maybe create page aliases specific content would make things less confusing us coming angularjs even add cheat sheet docs", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "path like would statically analyzable therefore aot compliant", "d": "8/2017"}, {"body": "toxicable would way create new feature still keeping component aot compliant understand way theme angular uses classes anything would nice able option dynamic value urlstyles anywhere else angular app example configuration angularcli", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "thanks workaround already done working still feel behavior really supposed", "d": "8/2017"}, {"body": "turns problem observable crawlers problem following initialize server side language according request header acceptlanguage made mistake think header always provided actually nt facebook google crawler nt send header crawl website since assuming header provided facing error server side therefore observable builtreturned code correction code correction", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ps angularcli repo", "d": "8/2017"}, {"body": "nt think adding syntax help personally think proposed syntax complicated confusing current approach related", "d": "8/2017"}, {"body": "agree syntax proposed might optimal motivation enforce particular syntax conceptually split something doesnt belong together namely null checks observables resolving hope makes sense", "d": "8/2017"}, {"body": "noticed proposed syntax double simple", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "totally understand remark feature request nt find thing native communicate route component sub route component like parent constructor stackoverflow hardcoding solution looking something like case route sub route element", "d": "8/2017"}, {"body": "sorry found issue related angular", "d": "8/2017"}, {"body": "solved creating empty enter query example", "d": "8/2017"}, {"body": "nicolashenry adding newly loaded component tried putting different locations nt seem making difference", "d": "8/2017"}, {"body": "nt exactly case nt use query case seems similar mine changed", "d": "8/2017"}, {"body": "ca nt get work combination tried example added show issue actual animations look like appcomponentts animations trigger routeranimations transition gt query enter style height overflow hidden optional true query leave animate ease style opacity transform translatey optional true subcomponentts animations trigger subanimation state style opacity height state true style opacity height transition gt animate ease ideas", "d": "8/2017"}, {"body": "pascal would mind sharing plunker suspect got mixed angular versions somewhere need reproduce scenario confirm", "d": "8/2017"}, {"body": "digging saw seemed problem popped introduced combination discussed original pr current pr pkozlowskiopensource check really quick causing problem us well know sure noticed nt usign code base however flexlayout", "d": "8/2017"}, {"body": "pascalprecht yes think need update version flexlayout afaik flexlayout extending passing instead", "d": "8/2017"}, {"body": "okay took little confirm causes problem unfortunately nt able install build mentioned pr suppose fix issue another problem related one go ahead close one problem thanks help pkozlowskiopensource", "d": "8/2017"}, {"body": "angularflexlayout classdirective support responsive apis class ngclass directive longer extends ngclass fro angularcore instead composes instances class needed delegates class mhevery help ngclass uses pending prs post queue fix api class remove class selector fix api use instances", "d": "8/2017"}, {"body": "think confused component inheritance extend base class metadata overridden therefore template overidden therefore call template instantiating separate instance base class one extended connected prove behavior explained changed made", "d": "8/2017"}, {"body": "thanks link two together exportas mybaseclass template", "d": "8/2017"}, {"body": "problem simplified code plunker call mybaseclasstoggle child code", "d": "8/2017"}, {"body": "anyone", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "asked stack overflow first two person responding obviously never heard inheritance pointed using services parentchildren virtualy documentation angulario understand lot time know answer find anywhere angular official documentation please begging dont give answer nobody facing years programming angular struggle angular support thanks", "d": "8/2017"}, {"body": "created another concerns issue clearly bug say contentchild give instance parent component work", "d": "8/2017"}, {"body": "also updated plunker", "d": "8/2017"}, {"body": "nobody help stack overflow cant use inheritance angular means would go another framework rewrite whole app point developping framework support documentation angular useless", "d": "8/2017"}, {"body": "someone finaly helped exportas removed viewchild used thx nothing", "d": "8/2017"}, {"body": "already meaning angular template pipe meaning proposed syntax already currently means something angular aside nt like syntax since blurs lines normal objects observables distinct ambiguous", "d": "8/2017"}, {"body": "currently invalid syntax would nt conflict existing syntax also meaning another actual characters suggestion could something else see point ambiguous though right blurs meaning object would help nonobservable objects property would selected regular field another approach simply using pipe async selects field could properly typed typescripts starts feel like something one implement locally though looses purpose short concise eg", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "sure details team would able help look try profile see problem find problem framework add details personal experience issues related unsubscribing observable", "d": "8/2017"}, {"body": "thanks suggestion profile provide details issue reported like earlier angular", "d": "8/2017"}, {"body": "pretty sure issue somewhere code otherwise would tons issues like instance process app ionic using angular working fast", "d": "8/2017"}, {"body": "rkirov tried reproduce everything seems work expected maybe behavior affected stuff structural directives angularjsangular versions using try reproduce plnkr sample repo", "d": "8/2017"}, {"body": "odd indeed example looks similar one looking could aot vs jit debug bit", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "see likely stale dependency node modules try removing folder reinstalling future please nt post support requests github", "d": "8/2017"}, {"body": "major issue us single page app route", "d": "8/2017"}, {"body": "pulled repro ran locally angular nt anything special custom element dom element note angular imperatively creating elements hood something like sure could deviating spec", "d": "8/2017"}, {"body": "robwormald router module creating elements differently looks like attributes nt getting set properly root component making behave incorrectly setting timeout cause work properly would imagine async issuerace condition going edit suffice say nt necessary working theory something code running zones nt able confirm discredit yet", "d": "8/2017"}, {"body": "looks like attributes nt getting set properly root component making connectedcallback behave incorrectly nt mean pedantic far tell behaving properly called browser element inserted dom seems like relying ordering getting unexpected result see lifecycle callbacks fire different orders depending components instantiated ce spec provides purpose dependent order things firing note doesnt mean nt issue relying ordering probably nt bug end", "d": "8/2017"}, {"body": "see also specifically lazy stuff cc robdodson", "d": "8/2017"}, {"body": "wonder behaving properly thisattributes connectioncallback see innertext namenodemap including ngcontentc sure angular adding ngcontent element part code next line try get either one attributes getattributes hasatrributes get null false works fine plain web app recact would different element added via javascript line html unless template engine parsing angular element instead web component", "d": "8/2017"}, {"body": "element added via javascript angular templates compiled imperative js code compilation angular entirely possible internally generating code like would fire connectedcallback attribute set giving value one sticky things custom elements spec defining done falls realm best practices authoring custom elements looking better interop ce specifically around slots like defining correct behavior difficult guarantee consumer ce would treat way using good idea fire changed attribute regardless lifecycle set", "d": "8/2017"}, {"body": "ngrouter handle templates different main template engine", "d": "8/2017"}, {"body": "potentially yes one part statically generated code one dynamically inserted inserted dom via js however best rely specific behavior either case", "d": "8/2017"}, {"body": "set attributes appendchild called", "d": "8/2017"}, {"body": "robwormald ok definitely see happening would question given way language framework works would reasonable developer assume custom element would behave way would added html since using html files templates abstraction js end day wo nt argue best practices author make sure works said framework author especially one widelyused angular understand framework users expect behave explicit proscribing best practices consistent implementation even choose pursue fix defect stands reason angular treats custom elements standardized elements root route behave way guess going keep coming back point never intended insert element without attribute angular made decision intent based html template clearly add element attribute nt necessarily want overhead observed attribute watcher enable api element nt need", "d": "8/2017"}, {"body": "nt necessarily want overhead observed attribute watcher enable api element nt need think need use regardless ignoring angular moment totally reasonable user element following without array element would appear failed state even though user eventually set attribute advice primitive data strings numbers booleans generally follow pattern like js class myelement extends htmlelement static get observedattributes return foo get foo const value thisgetattribute foo return value null default value value set foo value thissetattribute foo value attributechangedcallback name oldval newval handle side effects name foo update text content fancy stuff effect synchronizing attributes properties setting also sets attribute vice versa model modern elements follow good example propertyattribute help talk recent polymer summit try identify best practices explain reasoning behind end day custom element needs super resilient never know context used think totally achievable takes bit work", "d": "8/2017"}, {"body": "robdodson robwormald accept feedback structure web components point remains angular attempting emulate feelingbehavior writing html nt delivering using model issue ultimately nt question custom elements though however question angular renders custom elements let write html use components reasonably sure behave written html expecting every user ever use custom element conform notion best point merits lead poor developer experience fixing issue long term benefit framework also reasonably certain get similar behavior different portions framework philosophical issue make change router outlet works accept developers unfamiliar preferences issues least consistent", "d": "8/2017"}, {"body": "robdodson ignoring angular moment totally reasonable user element following like said right developer may angular", "d": "8/2017"}, {"body": "think need use observedattributes regardless ignoring angular moment totally reasonable user element following really appreciate clarification example robdodson find troubling ce treated one way approot another way approuter nice observation calebdwilliams", "d": "8/2017"}, {"body": "brykayne would mind sending pr", "d": "8/2017"}, {"body": "works fine", "d": "8/2017"}, {"body": "think need plunkr code certainly please provide one issue actionable closed", "d": "8/2017"}, {"body": "okay reproduce plz wait", "d": "8/2017"}, {"body": "many components still ca nt conflicted still true switched ngif stops working rollback working", "d": "8/2017"}, {"body": "found fully reproduce yet happens router component angularmaterial components may problem angularmaterial angular since normal select works fine anyway complicated bug adminhtml aaaaa test admints import component angularcore component moduleid moduleid templateurl adminhtml export class admin aaa number", "d": "8/2017"}, {"body": "submitting angular bug make sure using library valid issue report", "d": "8/2017"}, {"body": "trotyl yes know nt aware first sorry", "d": "8/2017"}, {"body": "actually working look plunker first go route go first route dissapear wrong", "d": "8/2017"}, {"body": "alexkhymenko", "d": "8/2017"}, {"body": "tytskyi false open consolelog see changed false maybe problem im subscribing oninit changing false press press first second time component console open", "d": "8/2017"}, {"body": "leaking memory navigation would create new component instance modifying old one try steps find old component instances still responding event whenever using need", "d": "8/2017"}, {"body": "trotyl thank", "d": "8/2017"}, {"body": "closed since issues ngif", "d": "8/2017"}, {"body": "angularmaterial released today still works nt work nothing related subscribe unsubscribe things", "d": "8/2017"}, {"body": "many posted issue board sorry misunderstanding", "d": "8/2017"}, {"body": "prs welcome smiley", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "turns webanimations support animating property issue important angular works accordingly created issue explains needs done work", "d": "8/2017"}, {"body": "looked issue makes sense rather inconvenient workaround really substitute various limitations yeah guess height workaround", "d": "8/2017"}, {"body": "goal still work animation starts first frame ends unfortunately changed middle animation", "d": "8/2017"}, {"body": "ohh ok missed little detail would great trouble anyway picturing used places startend", "d": "8/2017"}, {"body": "sure whether case similar declare event event type use event total eventxxx total get property value set type maybe event parameter use eventtotal", "d": "8/2017"}, {"body": "case talking dom events wrapper issues likely httpevents trying force type event nt help though total property debugger", "d": "8/2017"}, {"body": "confirm behavior however method written goes property set never changes", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "even tried use object appended object aot resolves instead keeping object keeps parts project instead", "d": "8/2017"}, {"body": "faced similar issue amp found error occurs pass type value header convert string passing", "d": "8/2017"}, {"body": "nt make sense type safe try pass wo nt transpile case", "d": "8/2017"}, {"body": "type safe case coming global state class type property allowing type value amp number amp type giving compile error adding tostring fixed short declare amp pass var header wo nt give compile error amp instead throws error defined issue", "d": "8/2017"}, {"body": "suggest try passing static string val test headers still facing issue static val amp case might different", "d": "8/2017"}, {"body": "case already coming types already think case something different unfortunately", "d": "8/2017"}, {"body": "ok try one header fixed val amp headers reqheadersset moduleid thisdnncontextmoduleid set tabid thisdnncontexttabid try narrow issue getting errors similar code amp string headers might issue header value like lengthformatencoding", "d": "8/2017"}, {"body": "thanks created project apart could find issue working closing issue", "d": "8/2017"}, {"body": "wow completely right ids coming numeric", "d": "8/2017"}, {"body": "correction seems related animations instead styles array cause error ones", "d": "8/2017"}, {"body": "filipesilva last message correct culprit seem compiler rather css compiler animations fyi use option revert using former compiler", "d": "8/2017"}, {"body": "pr fix known issue aug pm victor berchet notifications githubcom wrote filipesilva last message correct culprit seem compiler rather css compiler animations fyi use disabletransformerpipeline option revert using former compiler receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "see", "d": "8/2017"}, {"body": "filipesilva also work fine", "d": "8/2017"}, {"body": "fixed master via", "d": "8/2017"}, {"body": "would fix issue", "d": "8/2017"}, {"body": "totally different framework want break cascade would create app plain html js would unnecessary containers", "d": "8/2017"}, {"body": "mickl work comments also attribute components like understand suggest angular place component", "d": "8/2017"}, {"body": "would impossible keep consistency since comment shadow root", "d": "8/2017"}, {"body": "least host would work anymore styles could generated global css instead mlcmlapis im sure understand right wish replacing componentcontainers like create domelement component", "d": "8/2017"}, {"body": "mickl yes understand want wanted sure came probably another world would work moving global scope encapsulated form emulated native go opposite also replacing componentcontainers general custom components concept heavy development", "d": "8/2017"}, {"body": "work angular lot like css encapsulation idea make nonvisiblecomponentcontainers possible disturb shadow dom possible commentcontainers screw commentcontainers may important css work correctly anyway", "d": "8/2017"}, {"body": "expected behavior exactly", "d": "8/2017"}, {"body": "tried implement behavior separate controller lifecyclecontroller like examples get lifecycle hooks outside component like avoid implementing hooks every component needs lifecycle handling would nice functionality worked bit like", "d": "8/2017"}, {"body": "duplicate", "d": "8/2017"}, {"body": "error messages end vendor bundle angular take rough estimate bytes per error message error messages minified ocombe one point experiment replacing error messages asserts got codebase saw bigger gains core commonplatformbrowser would expect bigger gains probably around measured case agree would helpful reducing bundles size", "d": "8/2017"}, {"body": "would really nice tackle compiler messages part aot app different effort improve usefulness", "d": "8/2017"}, {"body": "angular list available keyboard events caseinsensitive filter event key obtain list", "d": "8/2017"}, {"body": "gotcha still think would help make docs clearer point without looking spec file idea valid filter keys besides enter key combinations also valid", "d": "8/2017"}, {"body": "see also stack overflow post example might confusing", "d": "8/2017"}, {"body": "new downgrademodule decouples change detections two frameworks leaves developer manually invoke appropriate docs added leaving open agree following features would useful making change detection coupling configurable providing easy way manually run digests", "d": "8/2017"}, {"body": "wrong repo repo angular", "d": "8/2017"}, {"body": "angularjs seems fixed", "d": "8/2017"}, {"body": "understand problem correctly nothing dependency injection javascript works assing instance method variable method loses context better solution usecase validator would create early contextbound method instead late context binding consider edited simplified sample stackoverflow typescript export class customvalidators original usage works", "d": "8/2017"}, {"body": "problem context binding mean instead manually passing instance validator better elegant way validators resolve dependancy injections system manually injecting dependancies exactly use dependancy injection system", "d": "8/2017"}, {"body": "see original question used service could annotated provided injected componentconsumer bound method comment used component like", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "children component might also parameter might name parent component parameter barely believe would work correct would close issue expecting docs get updated someday", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "definitely request cdk angular", "d": "8/2017"}, {"body": "ghetolay large application performance critical virtual scroll best list gt items best solution angular repositories often die", "d": "8/2017"}, {"body": "really better angular", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "thnx suggestion outside scope angular core angular material angular cdk would good place feature request others suggested", "d": "8/2017"}, {"body": "remove change behavior able know provided locale correct throw locale incorrect throw nt find add locale data throw correct locale data parent locale registered eg data fr available ask frbe throw take fr data parent locale even really using frbe data instead alternative would completely disable parent locale data lookup except seem ok remove list", "d": "8/2017"}, {"body": "go think reasonable", "d": "8/2017"}, {"body": "one prefer searching parent locale ou defaulting parent data frbe fr", "d": "8/2017"}, {"body": "good reason different please use parent finer one available", "d": "8/2017"}, {"body": "default localeid enus nt exist cldr data want angular work ok parent default", "d": "8/2017"}, {"body": "looking thank benelliott", "d": "8/2017"}, {"body": "thanks", "d": "8/2017"}, {"body": "google order clause angular click site got injector error browser console", "d": "8/2017"}, {"body": "edit disregard said lol looking repo", "d": "8/2017"}, {"body": "using context menu primeng grid events getting slowing reproduce issue pure angular libraries may want notify project owners huge mix different libs nt seem angular issue", "d": "8/2017"}, {"body": "closing repro", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "toxicable sorry want reply person answered question directly unfortunately nt enough score reputation least reputation bad", "d": "8/2017"}, {"body": "solved problem would like give infomation someone problem proficient javascript like use eventtarget selectedindex instead eventtargetselectedindex get selectedindex eventtargetselectedindex work runtime add please select ahead use eventtarget selectedindex get selectedindex select change event binding select function get selectedindex", "d": "8/2017"}, {"body": "could please provide minimal reproduction issue isloation either plunkr stack blitz unable change source code website many aspects website may cause issues therefore suitable use reproduction", "d": "8/2017"}, {"body": "repo could nt create plunker sorry", "d": "8/2017"}, {"body": "sorry without minimal reproduction issue isolation actionable issue tracker reporting issues angular debugging whole applications", "d": "8/2017"}, {"body": "ok try minimize app going plunker", "d": "8/2017"}, {"body": "ok removed everything unrelated bare minimum repro issue clone repo npm install ng serve open browser start typing friendly url field problem save button nt change state type changes state move cursor field", "d": "8/2017"}, {"body": "sorry still large amount code repo unrelated issue", "d": "8/2017"}, {"body": "ca nt remove ngrx otherwise issue pointless thing remove editor enough", "d": "8/2017"}, {"body": "ok found sure correct change button template work nt logic problem", "d": "8/2017"}, {"body": "yes logic problem", "d": "8/2017"}, {"body": "sorry damn gr", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "think ton use cases want lazy load ngmodule factories outside router dashboards etc also move token", "d": "8/2017"}, {"body": "filipesilva forgive different pages mean angular program talking dev time build time build factories talking post build work factories already achieve traversing tokens resolving actually built little tool exactly either way think would great feature since would nt need tool built anyway also helps use case built want static routes app", "d": "8/2017"}, {"body": "robwormald agree addressed go depth topic moment looking feature parity though toxicable angular much improved trying integrate angular cli includes new api angular specific counterparts typescript allow compiling angular applications single go instead using angular use private api get map lazy routes tell webpack extra chunks generated new api available stubbed method used instead created issue track work", "d": "8/2017"}, {"body": "new api still private everything else angularcompilercli might need change major releases ok cli working closely together aug filipe silva notifications githubcom wrote robwormald agree addressed angularangularcli go depth topic moment looking feature parity though toxicable angular much improved ngc trying integrate angular cli includes new api angular specific counterparts typescript program compilerhost allow compiling angular applications single go instead using ngc tsc angular use private api listlazyroutes get map lazy routes tell webpack extra chunks generated angularcliblobmasterpackages srcplugints new api available stubbed method used instead created issue track work receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "figure one", "d": "8/2017"}, {"body": "nope", "d": "8/2017"}, {"body": "actually correctly lists min max directives removed consider adding comment min max exist functions directives", "d": "8/2017"}, {"body": "player persisted styles set means properties pickup styles visually present start animation case since player still alive pickup styles need destroy player finished think real solution add option", "d": "8/2017"}, {"body": "fact nt remove rather turns part syntax sugar structural directives see info good news part microsyntax got deprecated angular getting runtime warning usage element check angular support deprecated gets removed altogether way go unfortunately ca nt fix angular would breaking change pass equal option angular compiler optout messing elements attributes going close issue fixed angular notfixable angular workarounds exist", "d": "8/2017"}, {"body": "thanks detailed answer yes wondering template deprecated message ill try option", "d": "8/2017"}, {"body": "aot added tsconfigjson tsconfigappjson angular cli binding element use", "d": "8/2017"}, {"body": "required works equally well lot users use uglify without problem seems like configuration issue side", "d": "8/2017"}, {"body": "vicb course nt work without try run see browser console lot user never something deeper described basic documentation articles use wellknown angular starter project default settings really nt think problem configuration seems decorator implementation uses maybe function names work uglify breaks nt know exactly di works custom decorators created issue", "d": "8/2017"}, {"body": "hey chance make demo failure using way explore go debug detective mode", "d": "8/2017"}, {"body": "already provides see info", "d": "8/2017"}, {"body": "thanks guess since looked documentation", "d": "8/2017"}, {"body": "wrong information confirm issue also report problem angular v two router related fixes router encode urls way angularjs closer spec closes router export missing urlmatcher urlmatchresult types closes updated information actually broken version something different last working version first broken version prior versions including works us broken links constructor new component gets called ordinary clicked immediately ngoninit called sometimes long delay clicking everywhere screen multiple times easy change detector view update problem afraid links working fine links almost consistently fails angular newer tested versions include pretty much alphabetarc release versions eg broken versions amp application rather huge ca nt think way reproduce plunker least broken links addressing sub route inside lazy loaded module happen query params edit important really nt understand got working tested today versions affected last working version probably caches really cleaned test", "d": "8/2017"}, {"body": "btw using google auth similar async ngoninit methods though problem persists also async ngoninit calls made nonasync also behaviour us old routed component stayed screen taking right half space new routed component finally came ngoninit got called old component disappeared new component took place expected guards application level module level routes additional route guards particular sub routes links guestion inside one single guarded route additional note nt matter whether es output version otherwise somewhat broken still zonejs currently working combination output angular", "d": "8/2017"}, {"body": "rvalimaki routed component holder", "d": "8/2017"}, {"body": "tytskyi link inside internal grid component kind datatable happens routed components default change detection instead", "d": "8/2017"}, {"body": "rvalimaki works hierarchically least regular components sure routed components could try remove problematic component thinking router navigates component change detection happen seconds touch something screen triggers change detection whole app guess", "d": "8/2017"}, {"body": "tytskyi started trying immediately first comment app takes ages build angular particular grid component changedetectionstrategydefault links unfortunately still working correctly", "d": "8/2017"}, {"body": "tytskyi changed remaining onpush modes default lazy loaded module modules relate anyhow unfortunately problem still persists agree change detection related seconds described kkotak pretty much seems determined external change detection changes eg sockjs connection heartbeat every time heartbeat comes eg every seconds routed component fixes immediately said could probably overcome problem using custom click handler router navigate really nt want rather use wait real fix eager help though ca nt think rather innocent looking changes make things break edit wrong latest working version later working", "d": "8/2017"}, {"body": "rvalimaki could try use right constructor problematic component worked maybe combination help solve problem least proof problem change detection", "d": "8/2017"}, {"body": "tytskyi thanks tried already last week calling changedetectorref inside constructor resulted fatal errors angular effectively breaking application try using settimeout time", "d": "8/2017"}, {"body": "confirm see behavior rvalimaki old routedout component staying screen despite fact ngdestroy called also using onpush routedin component", "d": "8/2017"}, {"body": "thanks tytskyi indeed calling changedetectorref markforcheck detectchanges fixes situation constructor private cdr changedetectorref settimeout gt thissetchanged setchanged thiscdrmarkforcheck thiscdrdetectchanges without settimeout everything breaks one problems workarounds would need repeat pretty much components possibly navigated plenty components", "d": "8/2017"}, {"body": "confirming workaround suggested rvalimaki also fixes issue end also concern propagating workaround across app multiple components case routedin component also relies data retrieved ngoninit method hence even though component rendered data relies still takes long time render would nt want move code ngoninit constructor", "d": "8/2017"}, {"body": "yeah fix bit investigation", "d": "8/2017"}, {"body": "could related somehow listed", "d": "8/2017"}, {"body": "adding workaround likely navigated main page components fortunately shared common ancestor class things seems work pretty smooth eager help debugging actual issue someone investigates issue drop note tytskyi spot seems culprit vicb probably knows mitigate issue", "d": "8/2017"}, {"body": "turns lot workaround us tytskyi recommend revert back", "d": "8/2017"}, {"body": "kkotak recommend downgrade upgrade since user angular nt similar problem nt even use tried narrow problem saw time ago pr linked saw another issue lifecycle hooks related changes ca nt find link issue would recommend try reproduce problem minimal code easier debug however guarantee problem fixed immediately", "d": "8/2017"}, {"body": "thanks tytskyi sure reproduce minimal code try template plunker factors play able pin hopefully pointer help someone team start looking", "d": "8/2017"}, {"body": "kkotak happen lazy loaded modules code nonworking routes subroutes said lazy loaded modules", "d": "8/2017"}, {"body": "rvalimaki nt lazy loaded modules app", "d": "8/2017"}, {"body": "kkotak got wrong last working version versions onwards broken", "d": "8/2017"}, {"body": "well seems navigating component using change detection workaround sub routes component similar problem still nt go away using workaround sub route components plenty time sub routes tabs click multiple times problem seems actually worse since clicking tabs several times get multiple empty components routeroutlet like time change detection happens somewhere components gone replaced actual one needless say situation kind sucks revert angular version ps nt use observables unless really needed using promises asyncawait data retrievals amp also guards since much easier use c net developers trying grasp typescript amp angular tbh asyncawait syntax clear everyone thinking one many possibilities could make routed components initialized", "d": "8/2017"}, {"body": "thanks rvalimaki updates also confirm last working version bit surprised issue gone unnoticed long angular community makes want think must something uniquely wrong design also confirm workaround kicks road components mddialog components show empty first hunch issue might related subscribe handler navigate call made even trying various alternatives unsubscribes etc problem still persists interestingly case workaround used accept first delay navigation rest components dialogs etc work fine words problem seems occur really hoping someone knowledge inner working area would take look downgrading back really painful path due party dependencies", "d": "8/2017"}, {"body": "closing repro reproduce issue sample demo app reopen issue thanks", "d": "8/2017"}, {"body": "also seeing kinds weird issues change detection late even detectchanges places makes sense places used work fine currently experiencing issue op routed component nt initialize cause events try constructor workaround edit nt work fix every", "d": "8/2017"}, {"body": "need make correction looking deeper seems digest already progress error breaking change detection unhandled exception nt determine seems original process error angular resulting typeerror would end seeing end sure whether due angular logic yet happens error logger tries handle error rc packages core src errorsdefaulterrorlogger digest already progress error seems happen due fact plugin api tizen devices use generate messageevents trigger globalzoneawarecapturecallback eventually trigger digest digest seems depending timing cause digest error original stack intercepting error error logger beginphase digest ngzoneonmicrotaskempty rootscope digest generatorornext rxjs src subscribersafesubscriber tryorunsub rxjs src subscribersafesubscriber next rxjs src subscribersubscriber next rxjs src subscribersubscriber next rxjs src subjectsubject next rc packages core src eventemittereventemitter emit rc packages core src zone ngzonecheckstable rc packages core src zone ngzoneonleave oninvoketask zonedelegate invoketask zone runtask zonetask invoketask invoketask globalzoneawarecapturecallback postmessageandawaitresponse native code postmessageandawaitresponse file getmenuvalue file tvapp devices samsungtizendevice isvoiceguideenabled tvapp tts speechsynthesisservice isspeechenabled tvapp js components tts announcer classdecl oncontentchange tvapp tts speakcontroller onchanges triggeronchangeshook eval apply flushonchangesqueue digest apply", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template use template creating live reproduction", "d": "8/2017"}, {"body": "added plunker demonstrates issue", "d": "8/2017"}, {"body": "found similar issue append trying add array parameter use state array strings let params httpparams new httpparams let state one two stateforeach ix gt paramsappend state produces amp stateone amp statetwo amp stateone amp statetwo stateforeach ix gt params paramsset state paramsappend state produces amp stateone amp statetwo", "d": "8/2017"}, {"body": "blocking runtime localization available generate locale independent factories prepare step", "d": "8/2017"}, {"body": "fixed original pr", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "little context way us know issue angular code reproduce issue minimal app share code could help better fill issue template please open new issue provide context thanks", "d": "8/2017"}, {"body": "cookies displayed provisional headers request", "d": "8/2017"}, {"body": "angular directly support sass angular deal css handle styling sass must run preprocessor compiled angular therefore likely issue build system using rather angular", "d": "8/2017"}, {"body": "toxicable yes said tbosch said deal question platformserver work app used think websites use less sass order make jobs easier maintainable", "d": "8/2017"}, {"body": "works exactly sass must compiled css touch", "d": "8/2017"}, {"body": "toxicable thanks comment knew needs already compiled platformserver works compile thinking use already compiled build prod could please describe done said using need compiled", "d": "8/2017"}, {"body": "hello jeffbcross idea found bug way developers", "d": "8/2017"}, {"body": "share repo give try think problem solved angularcli stylepreprocessoroptions config", "d": "8/2017"}, {"body": "lazy loaded modules standalone injector need inject dependencies issue neither feature request bug questions suggest use stack overflow", "d": "8/2017"}, {"body": "solution using instead", "d": "8/2017"}, {"body": "works fine", "d": "8/2017"}, {"body": "sorry bad coding closing issue", "d": "8/2017"}, {"body": "tooling around server side rendering still work progress checkout get started cli feel free ping toxicable questions", "d": "8/2017"}, {"body": "toxicable thanks article angularcli seems helpful way said tooling around serverside rendering still work progress mean use yet like idea feature changes", "d": "8/2017"}, {"body": "core api angular provides totally solid however things like supporting backend frameworks dynamic rendering client rehydration similar tools yet come personally would recommend think everyone least prerender since super easy currently totally usable many additions way", "d": "8/2017"}, {"body": "mean serverside rendering prerender", "d": "8/2017"}, {"body": "referring package mean using angular api along cli prerender application like shown", "d": "8/2017"}, {"body": "hi toxicable test snippet cli story put snippet file required needed libs run working", "d": "8/2017"}, {"body": "toxicable hmmm actually get point using link sent got build using stepbystep guide nt see difference thinking going happen gives serverside app build giving another indexhtml empty platformserver exists unfortunately documentations cover expected commonjsformatted bundle node application", "d": "8/2017"}, {"body": "sorry nt place ask support either open ticket stack overflow wit tag hop gitter channel often reside", "d": "8/2017"}, {"body": "application bundled ready deploy server consumption browser contains aot built factories application run try deploy server factories use either prerender dynamic rendering something like express engine universal", "d": "8/2017"}, {"body": "toxicable thanks explanation helpful educational purposes could please explain simple language documentation clear defination hard understand", "d": "8/2017"}, {"body": "takes module factory returns html would rendered factory also supports router url option config using url except instead rendering url passed", "d": "8/2017"}, {"body": "petebacondarwin amp gkalpak idea issue please take look universal project add link documentation angular website added link angular source code obviously shows lack documentation source code end user tutorials outdated sync latest changes cli angular use build system instead using angular cli shows need better official documentation", "d": "8/2017"}, {"body": "universal guide works see also afaik converting guides use angular cli also plans probably already progress wardbell would know closing one let track progress universal docs", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "far know typescript nt support going way back sources could look project like sorcery fix issue", "d": "8/2017"}, {"body": "typescript doesnt support sourcemaps tsc fine ie typescript content per example wed aug jason aden notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "issue ondone callback pass meaningful parameters access back component code create new instance differs done template description", "d": "8/2017"}, {"body": "also encountered issue recreating animation method guarantee ondone callback fired", "d": "8/2017"}, {"body": "going post code tomorrow able achieve goals using fatarrow function player ondone event preserves component scope expected matt sat aug marcusbelcher notifications githubcom wrote also encountered issue recreating animation method guarantee callback fired receiving commented reply email directly view github mute thread", "d": "8/2017"}, {"body": "back workcomputer give actual error message got try build production", "d": "8/2017"}, {"body": "kind help would much appreciated", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "understand resolve support issues however really sure nt bug error message magically disappears resave module use analyzeforentrycomponents altough fine ask stackoverflow think would best someone angular team could look know nt something commonly used task someone finding issue want chack stackoverflow question well", "d": "8/2017"}, {"body": "code splitting lazy routes functionality provided angular angular cli specific webpack loader help also one like angularrouterloader write rollup plugin unfortunately code splitting rollup nt come yet may need use workaround achieve nt mind runtime loading provide ngmodulefactoryloader nt depend systemjs", "d": "8/2017"}, {"body": "trotyl please provide sample convert system js webpack loader also please provide information runtime loading implement sample runtime loading works aot rollup well systemjs", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "something along lines planned shortly idea would custom property defined translated css equivalent much like would translate", "d": "8/2017"}, {"body": "prototype things got busy", "d": "8/2017"}, {"body": "thought decided reason animation state styles animation done another layer styling much like another layer atop selectors easy manage since states single element adding query adds another dimension complexity cumbersome deal issues like css specificity specificity among parentsibling animations well parent animations query children set queried end state trivial solve know one use framework would ultimately need devise specificity ranking system worth maintaining however think still achieved using current system two ways use parent animation like example set default css styling elements inside depending state gets hit add different styling change styling values start animation animate auto value ideal works better solution add animation list item specify end state values using inside animation definition need use dynamic value something binding value would pass animation template pass value via html verbose gives flexibility since using animation trigger inner item parent animation use allow inner animation run run decide exactly end state achieved", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information case nt tell anything environment running also stack trace pasted looks like error webpack module resolver really unclear reproduce issue problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "fixed generated file call gulp task generate file locales amp", "d": "8/2017"}, {"body": "appears question angularjs angular repo would advise posting question angularjs repo instead", "d": "8/2017"}, {"body": "closing belongs angularjs", "d": "8/2017"}, {"body": "question mark property tells typescript value undefined nullable would need change property allow undefined null values", "d": "8/2017"}, {"body": "agree said changing test nt remove error message definitely bug", "d": "8/2017"}, {"body": "issue might serious thought example angular material ts ngoninit thisscrolllistener thisngzonerunoutsideangular gt return thisrendererlisten thisgetelementref nativeelement scroll event event gt thiselementscrollednext event domeventplugin force handler run ngzone despite listen call runoutsideangular problematic section", "d": "8/2017"}, {"body": "heathkit could provide reproduce repo describe issue would like help check handle issue", "d": "8/2017"}, {"body": "jialipassion discussed offline heathkit issue angular bypasses zonejs order gain performance bypass property still thinking", "d": "8/2017"}, {"body": "mhevery got idea implement simple version zone aware addeventlistener idea use improve addeventlistener performance event listener use listener nt need create wrap callback everytime still use scheduled keep zone information please review idea ok", "d": "8/2017"}, {"body": "mhevery updated little need use zone patched globallistener use based listeners invoked", "d": "8/2017"}, {"body": "jialipassion think right track let give try make sure page would pr angular repo change zonejs making pr", "d": "8/2017"}, {"body": "mhevery got make pr repo", "d": "8/2017"}, {"body": "hello taylorzanekirk everything look correct unable figure working chance craft demo together using thank", "d": "8/2017"}, {"body": "matsko unable reproduce error laptop home check everything work machine monday think issue animation logic inside component trying animate instead component parent", "d": "8/2017"}, {"body": "constrctor constructor works great class inject elementref please add plunker reproduce", "d": "8/2017"}, {"body": "alexzuza works another component component videos component works fine copyed inject import news component comes error see videos component works good import private el elementref another component comes error", "d": "8/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2017"}, {"body": "hey sorry hear buggy please put together reproduction way hop debug resolve thank", "d": "8/2017"}, {"body": "matsko sure go note hav nt included animations shims demo thanks", "d": "8/2017"}, {"body": "also reactive forms", "d": "8/2017"}, {"body": "ngif workaround test template driven forms guess also work", "d": "8/2017"}, {"body": "trying impelement workaround code realized try use formcontrol porperty ngif workaround work around anybody another workaround", "d": "8/2017"}, {"body": "ngif workaround worked current situation situations encountered worked around ways", "d": "8/2017"}, {"body": "hadevjhh solution", "d": "8/2017"}, {"body": "still found fully working solution cases ngif workaround provided works seemingly long nt structural directives higher dom tree cases thinking introducing directive toggles class elements parent element add custom directive hidden div referenced control feels unbelievably dirty need time review option", "d": "8/2017"}, {"body": "could provide plunker repo review really need workaround would help improve try best michael", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "please actually fill issue template future closing completely nonactionable", "d": "8/2017"}, {"body": "js produces syntaxerror therefore trying invalid js", "d": "8/2017"}, {"body": "wan na make videoinfo unique id", "d": "8/2017"}, {"body": "issue tracker nt suitable support requests please ask question stack overflow tag join gitter", "d": "8/2017"}, {"body": "ok thanks", "d": "8/2017"}, {"body": "passing value legal per typings note type allowed turning strict type checking may help reveal kinds errors code", "d": "8/2017"}, {"body": "closing wai usage reproduction would pass typescript strict mode", "d": "8/2017"}, {"body": "thanks fixed", "d": "8/2017"}, {"body": "try adding config", "d": "8/2017"}, {"body": "thank eric actually worked", "d": "8/2017"}, {"body": "expected otherwise need instead", "d": "8/2017"}, {"body": "trotyl mentioned need switch providing would like angular use existing instance closing works expected", "d": "8/2017"}, {"body": "ah thankyou", "d": "8/2017"}, {"body": "working nevermind", "d": "8/2017"}, {"body": "suggested create docs issue suggestion adding docs seem got lost past updates currently nt anything else except class name info class declared nt make original issue intent less valid wanted add context", "d": "8/2017"}, {"body": "zoechi documentation found least link", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "set default value constructor like example", "d": "8/2017"}, {"body": "setting like setting element property correctly setting html attribute well edit edited description example", "d": "8/2017"}, {"body": "ah thank example create plunker example see behavior resulting html value initial value attribute present", "d": "8/2017"}, {"body": "ngtouched mixing view state ugly bad approach", "d": "8/2017"}, {"body": "problem reactive forms works create set inputs create bind input input binding", "d": "8/2017"}, {"body": "victorschinaider need pass control instance name ticket topic different problem", "d": "8/2017"}, {"body": "see issue date pipe formatter nt format minutes seconds properly ie edge", "d": "8/2017"}, {"body": "actually thinking making resolved values injectables eg something like ts assuming following routestate configuration state angularwithresolve url angularwithresolveroute template resolve getresolvedobj would able inject like component selector class constructor inject public resolvedobj myresolvedinterface would nt close works angular rkirov confirm would indeed preferrable", "d": "8/2017"}, {"body": "understanding would need create new injector instance route able inject resolved values right", "d": "8/2017"}, {"body": "since would instantiating downgraded component could add values injector already creating offthetopofmyhead idea least grin", "d": "8/2017"}, {"body": "sure would work still holiday mode brain back speed yet would ngupgrade know resolves creation downgraded component", "d": "8/2017"}, {"body": "would put anything onto injector keys string injection tokens values injected values", "d": "8/2017"}, {"body": "hmm rather hardcoded approach uirouter added new concept also needed available would update ngupgrade", "d": "8/2017"}, {"body": "yes approach specifically targeting around idea allow people write hybrid apps close possible final pure angular app happy discuss generic approaches could nt come one smiley", "d": "8/2017"}, {"body": "wanted check boxes submitting section comment said select one", "d": "8/2017"}, {"body": "example doc shows specify components using nt want component bootstrapped angular angularjs initialized instead downgrade component let bootstrapping updated plnkr shows working vrsion example another minor issue affect simple usecase bootstrapping angularjs method updated places docs take care remaining places closing since everything works expected afaict", "d": "8/2017"}, {"body": "gkalpak google appreciate constructive criticism transparency curiosity every level organization allow please provide constructive criticism two things get example work moved angular stuff platformbrowserdynamic stuff angularjs app downgraded herodetailcomponent implore look upgrademodule docs see neither two things look angular upgrade section docs see two things specified either say docs please show docs upgrademodule andor upgrading section docs says specify bootstrap components using ngupgrade nt want component bootstrapped angular angularjs initialized instead downgrade component let ngupgrade bootstrapping rhetorical really want know says things two things shown upgrade examples refer others later basically downgrade component angularjs app even though already specifying existence angular app order use angularjs service angular service think redundant confusing especially given yet see documentation says frustrating thing upgrading exactly docs showtell section docs examples straight nt work somehow simultaneously much information enough information code code examples broken pieces makes sense explanations things end document code combined look like look see jsfiddle embedded page example works feel given complexity upgrading angularjs angular working examples documentation said documentation hard get right great job explaining details stuff works practical examples case appear falling short thank taking time respond please consider adding working examples docs someone may want answer stackoverflow question probably place people going go find answers problem docs updated", "d": "8/2017"}, {"body": "implore look upgrademodule docs see neither two things moved angular stuff platformbrowserdynamic stuff order downgrade component need reference class since classes nt hoisted class declaration needs come first angularspecific plain old need move everything would moved part thought better group together angularjs app downgraded herodetailcomponent docs mentions angularjs always bootstrapped first owns root component implies order enter angular world need go downgraded component particular api docs page focuses api limited info create whole hybrid app linked ngupgrade guide much useful resource say docs said example doc shows specify bootstrap components using ngupgrade indeed example docs shows property decorator guide explicit note add declaration decorator since angularjs root template application basically downgrade component angularjs app even though already specifying existence angular app order use angularjs service angular service think redundant confusing especially given yet see documentation says trying use servie nt need downgrade component sorry misunderstood example looked like trying use component want use service simply use already mentioned since angularjs owns root component use angular component downgrading understand might confusing framework needs root component certain technical limitations might obvious looking outside frustrating thing upgrading exactly docs showtell section docs examples straight nt work probably still convinced grin understand stitching full hybrid app together scattered api docs easy nt supposed api docs different purpose guides guide step step whole process case definitely fix happily accepting pointers code examples broken pieces makes sense explanations things end document code combined look like definitely see link full example end ngupgrade api doc page would useful feel given complexity upgrading angularjs angular working examples documentation fwiw examples extracted full working examples tests make sure nt break road somehow making available live examples think something supported atm examples used api docs examples used guides andrewltelnyx open new issue somehow linking full ngupgrade examples either based api docs guide examples case nt obvious previous comment know ngupgrade docs far perfect said sometimes difficult us working ngupgrade realize painpoint might real upgrade situations something obvious us might obvious app developers concrete suggestion docs improvements mostly welcome even comes form pr", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "see", "d": "8/2017"}, {"body": "land next week", "d": "8/2017"}, {"body": "matsko quick would mind look pr animations bug fix review process since june", "d": "8/2017"}, {"body": "seems broke animation prefixed browsers example use transform prefixed ms webkit support browsers animation", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "closing duplicate thnx ericmartinezr", "d": "8/2017"}, {"body": "case use read docs info ts export class appcomponent getindex index return index html", "d": "8/2017"}, {"body": "vicb thanks nt know need use trackby situation", "d": "8/2017"}, {"body": "vicb learn simpler way write think trackby accepts template expressions whatever write translated", "d": "8/2017"}, {"body": "oops information got completely wrong angular accepts function trackby must stick code", "d": "8/2017"}, {"body": "help provide fix agree unexpected", "d": "8/2017"}, {"body": "sounds like bug help infixing would appreciated", "d": "8/2017"}, {"body": "think might getting little confused interceptors angular providing different class token nt providing interceptor take look use interceptors take look providing works ngmodules", "d": "8/2017"}, {"body": "toxicable suggesting single interceptor requests everything inside using provide use class use two overriding class right", "d": "8/2017"}, {"body": "little bit draft code ts function inject type fn gt function inject type type fn gt function inject params let types params instanceof array types params else types paramsslice paramslength const fn params paramslength fn instanceof function throw new typeerror expected last argument function current impl return function current implementation", "d": "8/2017"}, {"body": "ping please give feedback", "d": "8/2017"}, {"body": "please give feedback", "d": "8/2017"}, {"body": "hello angular team know sailing tour weekend hope enjoyed fresh week starting getting bit feedback would super cool", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "nt want start long debates github issues apologize comment post really surprised change heart request accepted consumer component libraries idea whether internal implementation thirdparty component projects content normally whether projects write guess projected inside template idea whether component instantiated zero times one time times actually run app angular material changes internal implementation projecting template reverse would actual different behaviors app change side differences might severely impact performances since related components lifecycle eager instantiation preventing material simply asking consumer template custom structural directive part api believe firm stance singleinstantiation ngcontent hence surprise regarding mhevery apparently approving request", "d": "8/2017"}, {"body": "believe firm stance singleinstantiation ngcontent hence surprise regarding mhevery apparently approving request youdz discussed extensively offline jelbourn mhevery status change hearts actually arguments exactly ones bringing page preventing material simply asking consumer template custom structural directive part api imo crux issue seems like syntax involving template custom structural directive exactly api material users want see", "d": "8/2017"}, {"body": "think close issue prevent confusion", "d": "8/2017"}, {"body": "confirm issue currently affecting backend sends payloadtoolarge error identified angular progressevent therefore http status error message gone", "d": "8/2017"}, {"body": "landerbeeuwsaert ok thanks bringing please put together code example please", "d": "8/2017"}, {"body": "hey matsko added code sample completely lost use component application blur effect work animations however stackblitz also stackblitz opacity go time case every time showfirstshowsecond goes true gt false right oh well want close nt get look workaround greetz", "d": "8/2017"}, {"body": "refers property module description exports ngmodule exports appcomponent", "d": "8/2017"}, {"body": "hi sentence referring exports ngmodule specifically line pointed diegotham still need export appmodule notify documentation team see anything improve going close working intended cheers", "d": "8/2017"}, {"body": "ok mistake thanks reply", "d": "8/2017"}, {"body": "also encountered problem today debugging problem seems line", "d": "8/2017"}, {"body": "use workaround error parsing issue resolved", "d": "8/2017"}, {"body": "also look removing getngcanonicalfilename filename string string assumefileexists filename string void", "d": "8/2017"}, {"body": "fixed master", "d": "8/2017"}, {"body": "changes branch", "d": "8/2017"}, {"body": "thanks missed cherrypicking changelog fixed", "d": "8/2017"}, {"body": "ylligashi four mutuallyexclusive validation statuses form status disabled considered exempt validation checks valid disabled time always false form disabled case seems like want check status property explicitly gate error messages instead read statuses docs", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation also", "d": "8/2017"}, {"body": "hi kouzigege looks like using angular cli angular angular cli supports ie need enable additional polyfills open file project uncomment every lines mention need support ie help closing answered thanks", "d": "8/2017"}, {"body": "working fine", "d": "8/2017"}, {"body": "right works generic code applied work work close bug thanks quick response", "d": "8/2017"}, {"body": "dose nt work return type", "d": "8/2017"}, {"body": "one currently dependency seen", "d": "8/2017"}, {"body": "think valid expectation important demonstrate libraries written angular easily used places write library angular want know clean path use frameworks case depends something like split angulardi closed canshould reopened", "d": "8/2017"}, {"body": "repo di", "d": "8/2017"}, {"body": "toxicable know using", "d": "8/2017"}, {"body": "yeah angular version needs things specific angular", "d": "8/2017"}, {"body": "think reasonable expect wo nt depend things specific angular making core lib nt part premise simple interoperable angularjs important see angular team make great http library works smoothly angular still used anywhere", "d": "8/2017"}, {"body": "could simply use already part rxjs", "d": "8/2017"}, {"body": "amitport nt something likely prioritize rely heavily di httpclient angular libraries di enables us easily change running server something like see eventually quite frankly far much work angular focusing using notangular", "d": "8/2017"}, {"body": "robwormald wanted note nt suggest httpclient wo nt use di angular core di lib portable case hope enter roadmap point course urgent thank", "d": "8/2017"}, {"body": "sounds like issue cli made", "d": "8/2017"}, {"body": "oops thanks", "d": "8/2017"}, {"body": "reference definition property spec", "d": "8/2017"}, {"body": "similar plans already works goal aot default development hence reason recent changes mentioned therefore assume already planproposal accepted", "d": "8/2017"}, {"body": "closing pr move away jit", "d": "8/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "8/2017"}, {"body": "hello thanks pointing plunker hiding textbox text showing data persisted looking way clear text hiding textbox using directive builtin ngif configurable thanks", "d": "8/2017"}, {"body": "bhaidar looking around plunker know directive insertremove node tofrom dom design operation effect value property think also correct say control removed dom fact", "d": "8/2017"}, {"body": "agree mlcmlapis bug including first time load angular create element bind value input removed input wo nt fire new value removal value stay example reset value inside", "d": "8/2017"}, {"body": "thanks guys look beginning original request submitted feature request rather bug point make ngif function sense condition false ie hide clear value control attached polint thanks", "d": "8/2017"}, {"body": "bhaidar ok html base tags nt hook use code reset property hook available component control value accessor use hook processing reset property", "d": "8/2017"}, {"body": "nt think suggest expected behavior directive removes set elements dom fact data bound properties elements inside set connected fact changing view model view remain separated destroying view sideeffect destroying data want write custom logic happen case instead thinking showhide control based certain expression want reflect model think want change model update view example pretty basic gon na spice little bit see approach works better written code instead templates say selectoption control two options b c user select either different set suboptions presented user user fills suboptions decides made mistake wants choose b choosing b want purge options model snippet possible implementation template subscribe using pipe use show appropriate set options since async pipe take care unsubscribing wo nt unsubscribe", "d": "8/2017"}, {"body": "bhaidar ngif working expected responsibility removeappend element dom anything bound values need logic clear reset values", "d": "8/2017"}, {"body": "maybe add configuration clear value upon hiding handy sometimes use case showhide controls based selection form example user selects property site dropdown list camps appears heshe selects value change mind unselect site submit form value passed server camp selected although site false small form easy manage large form could hectic", "d": "8/2017"}, {"body": "ngif hiding element toxicable explained removeappend element form dom case documented value input component matter ngmodel binded nt see ngif would responsible cleaning model values", "d": "8/2017"}, {"body": "maybe add configuration clear value upon hiding handy sometimes bhaidar angular scope lots things handy sometimes find place angular souce code example maybe things superhandy simply lowlevel enough part core library however create directive hides element resets associated form control publish library let others use believe useful", "d": "8/2017"}, {"body": "please attach small repro thanks", "d": "8/2017"}, {"body": "vicb", "d": "8/2017"}, {"body": "duplicate", "d": "8/2017"}, {"body": "seems like duplicate straight duplicate leaving opened might issue happening inside angularcli instead need investigate", "d": "8/2017"}, {"body": "closing duplicate", "d": "8/2017"}, {"body": "option see", "d": "8/2017"}, {"body": "toxicable yes know prefer defined type", "d": "8/2017"}, {"body": "may ask grin", "d": "8/2017"}, {"body": "use implementation platform location use", "d": "8/2017"}, {"body": "thanks vicb suggestion according router documentation pushstate avoided using hashlocationstrategy go oldschool hashlocationstrategy providing usehash true object second argument routermoduleforroot appmodule exactly imports routermoduleforroot routes usehash true however still get error historypushstate available packaged apps chrome app", "d": "8/2017"}, {"body": "afaict happens line chrome packaged apps even trying access property logs error harmless annoying reference angularjs tries sniff chrome packaged apps avoid warningerror ideal either", "d": "8/2017"}, {"body": "let narrow mean manually navigate type settings press enter", "d": "8/2017"}, {"body": "yes mean typing address bar press enter", "d": "8/2017"}, {"body": "coudl make plunkr stackblitz reproduce issue", "d": "8/2017"}, {"body": "toxicable familliar plunkr stackblitz created runs exported nt know run browser sources hosted hope helps reproducing may misunderstood details routing using browser url", "d": "8/2017"}, {"body": "runs fine browser click little open top right corner window manually navigating via window url cause providers instantiated", "d": "8/2017"}, {"body": "click open firefox starts bundling app come end open chromium get failed read sessionstorage property window access denied document edge click open new window see hello angular project wondering really saw project see buttons labeled log stay login navigate settings", "d": "8/2017"}, {"body": "see buttons along content html ts files chrome", "d": "8/2017"}, {"body": "ok tested chrome windows saw app click login stay type settings address bar press enter runs bundling app accesstoken shown unknown means store created twice thereby loosing state would expect store recreate see accesstoken ie behaviour clicking login navigate settings stackblitz bundle app changing route browser address bar expected behaviour changing routes via address bar holds running app locally seems whole app gets reloaded changing url browser routes configured belong routes settings directed home would expect app reload changing url adress bar something misunderstand", "d": "8/2017"}, {"body": "found comment stackoverflow browser url change caused factors route change inside user manually type new url subscribe former latter reload whole application understand reloading app manually changing browser url seems desired behaviour bug feature would best way handle state case", "d": "8/2017"}, {"body": "hmm missed idea beginning manual entering url principal thing would way distribute example apps links emails use case user enter route changing url manually", "d": "8/2017"}, {"body": "use case users shall navigate using links actions application case accidentally manipulate url want prevent application loses state handle use browser sessionstorage", "d": "8/2017"}, {"body": "possible type user action pressing reload button theoretically use implemented browsers warning users finish action", "d": "8/2017"}, {"body": "ok thank lot helped understand subject better think issue closed regards heike", "d": "8/2017"}, {"body": "fix", "d": "8/2017"}, {"body": "maximilianochs release later today please test", "d": "8/2017"}, {"body": "matsko fixed thanks", "d": "8/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue staackblitz", "d": "8/2017"}, {"body": "handle error nt exception", "d": "8/2017"}, {"body": "use operators", "d": "8/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "8/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "8/2017"}, {"body": "think try deprecated", "d": "8/2017"}, {"body": "bretto thanks lot", "d": "8/2017"}, {"body": "turns solved using ngmodelgroup form match model", "d": "8/2017"}, {"body": "options aot specified tsconfigjson", "d": "8/2017"}, {"body": "use angular cli use srctsconfigappjson", "d": "8/2017"}, {"body": "vikerman discussed twitter", "d": "8/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "8/2017"}, {"body": "think revisited dependency intl api removed decimalpipe depends ocombe thoughts edit nt see pawel comment sorry", "d": "8/2017"}, {"body": "nt problem css input value long increase size input", "d": "8/2017"}, {"body": "reason could update original plunker reproduce problem plunker thanks jdang", "d": "8/2017"}, {"body": "decimal pipe transforms number string trying use string model input type number nt make much sense model input type number number string reason afaik nt work large numbers happens work smaller ones number larger separator thousands ie english number becomes string ca nt transformed valid number browser", "d": "8/2017"}, {"body": "well agree guys term using string model type number showing number decimal places common software industry spreadsheet database etc nt think hard fix bug numbers want show decimals time give hint nt want change input type text lot validations thanks jdang", "d": "8/2017"}, {"body": "possibly angular provide typechecking throw error condition", "d": "8/2017"}, {"body": "see plunker angular value comma simply ignored solution could implement pipe want add commas", "d": "8/2017"}, {"body": "sorry like jnizet said use show translated strings text includes number pipe numbers consistent across languages meant read particular locale need mathematic numbers required input number need use generic numbers always code really want show number locale still use input number directive component deal something fixed angular anything fixed browsers create input number", "d": "8/2017"}, {"body": "hi good show number locale group separators decimals crucial may best option us right write pipe angular help million developers like us jdang", "d": "8/2017"}, {"body": "works fine getting expressionchangedaftercheckederror since mutating bound value change detection fixing runs", "d": "8/2017"}, {"body": "toxicable nt see errors logs example lifecycle event nt trigger pointing issue others may getting error init functions getting skipped impression change bound values using really proper solution getting change apply outside current lifecycle thought using could potentially unintended sideeffects depending application case zones", "d": "8/2017"}, {"body": "nt know precisely going emitting inside child meaning view created yet react calling call trigger change detection parent children remember still inside child child nt view yet think messing view state recommend use ca nt sure nt check deep enough really see going seems", "d": "8/2017"}, {"body": "jsmike yes proper solution using codesmell cases", "d": "8/2017"}, {"body": "could please provide minimal reproduction template get started", "d": "8/2017"}, {"body": "checkout plunker open new window see url changes might also documentation error believe may standard convention fragment end url either way behaving according documentation", "d": "8/2017"}, {"body": "equivalent error message tells invalid notes since nt known property p part error message wrong wo right hand side value setup binding nt trigger error", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation possible causes narrow scenario ask support", "d": "8/2017"}, {"body": "page blank white screen ie browser working browsers lot ecma scripting errors promise denied errors", "d": "8/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2017"}, {"body": "nt believe support request behavior wrong simplest example possible using dynamic head body table nt work components nt really behave like empty tag understanding problem", "d": "8/2017"}, {"body": "think insure go new route first set data service use async await promises change route checked data set service adding consolelog service", "d": "8/2017"}, {"body": "balaraut course saved data service method datas exist assign statement also correct view update", "d": "8/2017"}, {"body": "ok think need use code", "d": "8/2017"}, {"body": "refer link", "d": "8/2017"}, {"body": "balaraut tried every method still work way know service nt make sense think case common case let dirty work happened", "d": "8/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "8/2017"}, {"body": "called router navigates new target asks snapshot current route could reused future route afterwards router navigates new route return true stored snapshots matches called looks like everything fine", "d": "8/2017"}, {"body": "ofriedrich thanks reply post called normal behavior", "d": "8/2017"}, {"body": "appears issue related angular could please provide minimal reproduction issue angular instead tsjs", "d": "8/2017"}, {"body": "try enable option better error message track", "d": "8/2017"}, {"body": "ended changing pr request longer necessary thanks guys", "d": "8/2017"}, {"body": "vicb done", "d": "8/2017"}, {"body": "question valid use mean literally yes use nothing mean yes use import module think already replied question previous issue correct yes", "d": "8/2017"}, {"body": "perfect thank wed aug pm victor berchet notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "modulename typo ngcommmonhttp", "d": "8/2017"}, {"body": "may close ticket resolved using ngtemplate tag build options using ngcontainer tag ngtemplateoutlet add options select tag", "d": "8/2017"}, {"body": "trotyl reason may make sense anymore well strong argument quote remove although heroservice nt dependencies moment applying injectable decorator start ensures consistency futureproofing reads like hey write injectable even places nt actually need futureproof parts invest twice something useless start admit search replace task case useless decorator however going tens hundreds constructors copying signature respective array module annoying migration tooling would appreciated future write constructor need write every argument type twice signature array without reflective injection angular loosing quite lot comfort even ones criticized angular amount boilerplate around ngmodules could least agree mostly dependency injection nt bad doubts reflect proposal wonder reflective injection become deprecated reflect proposed standardization comittee really kb polyfill stated commit message unlikely reflect proposal ever make stage kb save think deprecating reflective injection shortsighted wo nt add image angular", "d": "8/2017"}, {"body": "way even feel little schizophrenic defend never liked fact dependency services would otherwise reusable without angular since reflective injection decorator making ts generate metadata got used writing ts import barservice barservice let injectable gt target gt injectable export class myfooservice constructor b barservice absolutely nt want hard dependency onto angular", "d": "8/2017"}, {"body": "future write constructor need write every argument type twice signature deps array true aot already capable write use aot mode meeting notes angular team already decide make aot option switching make aot mode many developers test everything used use jit mode aot problem wo nt exist anymore wo nt make jit firstclass citizen", "d": "8/2017"}, {"body": "true aot already capable write injectable use aot mode okay bit late last night thank feel better morning", "d": "8/2017"}, {"body": "reaffirm trotyl point states note applies platform creation providers jit compiler apply component ngmodule provides declarations showing provide situations", "d": "8/2017"}, {"body": "trotyl please elaborate meeting notes angular team already decide make aot option exactly option mean using jit compiler heavily large application alongside aot worried making aot option", "d": "8/2017"}, {"body": "another question removed jit compiler depends metadata class resolve dependencies", "d": "8/2017"}, {"body": "still required testing hence ca nt removed tests go aot hence depend reflectmetadata", "d": "8/2017"}, {"body": "closing since actionable yet mhevery nt allowing aot testing also part okr", "d": "8/2017"}, {"body": "easy could share code nt achieve wanted", "d": "8/2017"}, {"body": "im pretty sure eg display position nt effect want animate opacity attach display position animation runs btw wonder fade transition element absolute positioned would need placeholder exact height element could archieve using lot detours", "d": "8/2017"}, {"body": "tried worked expected", "d": "8/2017"}, {"body": "mickl works expected intended tiedye demo demonstrates work display position properties carried throughout entire animation sequence fact place followup style properties directly step immediately set styles following step within sequence", "d": "8/2017"}, {"body": "works fine bug", "d": "8/2017"}, {"body": "thanks totally forgot hostlistener", "d": "8/2017"}, {"body": "wrong repo angularjs lives angular one", "d": "8/2017"}, {"body": "yeah noticed bad", "d": "8/2017"}, {"body": "yes", "d": "8/2017"}, {"body": "yes modules imported yes importing modules tests correct", "d": "8/2017"}, {"body": "hi codefactorydevelopment references formcontrols best practice way find code ref formcontrol constructor get formcontrol btw way angular internatlly validate method needs several input properties order validation sounds wired parametrized validator option could see code would usecase onchanges btw first lifecycle hook runs oninit subsequent onchanges gets ondestroied best michael", "d": "8/2017"}, {"body": "hi biophoton thanks time amp effort bit big code usecase explain like complex reactive form made n sections sections used parent wrapper component like implements ngvalidators ngvalueaccessor array formgroups created oninit section filled values coming particular section validated comparing implemented main interest questions noticed example sometimes happens formgroups created case either nullcheck wire somehow differently clear idea exactly compared usual lifecycle hooks completely familiar execute thing one write values sections internal formgroups created sometimes within formgroups references still null implies happened could give us details precisely methods get executed context lifecycle hooks would huge help thanks", "d": "8/2017"}, {"body": "hi biophoton although hope previous post make usecase clear realized actually talking references different form controls nt mean reference form control directive child form controls created imagine create form controls need fill values also combine might properties used params bound pipe obviously getting gets executed plays crucial role know lifecycle hook get ran sure exactly hope makes things clear thanks", "d": "8/2017"}, {"body": "please keep github issues bug reports feature requests better avenues troubleshooting questions stack overflow gitter mailing list etc see policy questions", "d": "8/2017"}, {"body": "source code since ie version gt hard tell based minified code looks possible build process nt producing code case could adjust build settings guide general information polyfills gist somehow need include script application code relies polyfilled feature runs specific build process case maybe need adjust order scripts included vendor bundle make sure polyfill comes angular hard tell without seeing actual code going close nonactionable feel free continue discussion questions", "d": "8/2017"}, {"body": "hi updated package name version dependencies agmcore angularanimations angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter covalentcore nguimap ngxtranslatecore ngxtranslate swimlanengxcharts typesgooglemaps typesnode aspnetprerendering aspnetwebpack awesometypescriptloader corejs css cssloader eventsourcepolyfill exposeloader extracttextwebpackplugin fileloader hammerjs highlightjs htmlloader isomorphicfetch jquery jsonloader nodesass preboot rawloader reflectmetadata rxjs sassloader showdown styleloader tostringloader typescript urlloader webanimationsjs webpack webpackhotmiddleware webpackmerge zonejs devdependencies typeschai typesjasmine typeshammerjs chai jasminecore karma karmachai karmachromelauncher karmacli karmajasmine karmawebpack nodesass webpackconfigvendorjs const path require path const webpack require webpack const extracttextplugin require extracttextwebpackplugin const merge require webpackmerge moduleexports env gt const extractcss new extracttextplugin vendorcss const isdevbuild env amp amp envprod const sharedconfig stats modules false resolve extensions js module rules test use urlloader entry vendor corejs eventsourcepolyfill angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularmaterial covalentcore covalentcorethemingprebuiltbluegreydeeporangecss jquery zonejs output publicpath dist filename name js library name hash plugins new webpackprovideplugin jquery jquery jquery maps identifiers jquery package bootstrap expects global variable new webpackcontextreplacementplugin angularb b bundleslinker pathjoin dirname clientapp workaround new webpackcontextreplacementplugin angular core angular pathjoin dirname clientapp workaround new webpackignoreplugin vertx workaround put top vendor generation corejs eventsourcepolyfill read corejs could help saw polyfill maybe polyfill need objectassign still problem idea solve pb", "d": "8/2017"}, {"body": "shoulld indeed provide sure still seeing problem would look unminified version generated file verify polyfill indeed included angular code", "d": "8/2017"}, {"body": "hi hava problem idea thanks", "d": "8/2017"}, {"body": "looking thank reporting", "d": "8/2017"}, {"body": "workaround", "d": "8/2017"}, {"body": "zaiddabaeen currently design typescript needs able infer values statically order choose correct return type pass improperly typed object ca nt infer right return type another workaround", "d": "8/2017"}, {"body": "understand believe unintuitive confusing developers nt recall ever casted string string enumerating using types suggested would sound cleaner solution", "d": "8/2017"}, {"body": "zaiddabaeen problem type depends values typescript way know values inlined words equivalent first one typescript infer type second one determined via type inference added feature would return would poor experience expect cases desired solved spread operator javascript options want control dynamically const options headers params const res options responsetype text way typescript infer return type based signature value options also passed without reconstructing whole object", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "fixed ya forgot save use one", "d": "8/2017"}, {"body": "toxicable still reproducible change", "d": "8/2017"}, {"body": "using forms incorrectly removed nested form removed output", "d": "8/2017"}, {"body": "fixed toxicable probably forgot save plunker emreavsar want create intermediate form group date control worked directly instead parent", "d": "8/2017"}, {"body": "tytskyi whops yeah mine though go", "d": "8/2017"}, {"body": "ok removed formcontrol datecomponent put parent component breaks somehow selfcontained functionality one imagine datecomponent validation rules dropin usable component provided plunkr tytskyi selfcontainment gets lost main idea using", "d": "8/2017"}, {"body": "emreavsar exactly trying achieve want component act like custom control ok removed formcontrol datecomponent put parent component breaks somehow selfcontained functionality note put parent component already", "d": "8/2017"}, {"body": "tytskyi want component used get day value imagine custom dayvalidator checks date match given conditions time want use component keep somewhere attach well main idea make day control inside component overridable needed sorry mistake already said expectations wrong compatible form validation", "d": "8/2017"}, {"body": "emreavsar expectations wrong output compatible form validation modifying directly take effect special method also cleanup logic release old control working plunker made original one fixed link think really looking implement component custom control include form control inside actually act like form control possible use directly reactivetemplate driven forms", "d": "8/2017"}, {"body": "tytskyi thanks think leading right solution mentioned final question would use since supported angular forms ready use component holding inputs day month year case date validation use form group inside form parent component make parents form validation respecting child form validation result date component used different components component self want use date component like using form controls like mddatepicker similar requirements described custom form groups note initial idea ticket report bug slightly turned cr rather support issue thanks anyway", "d": "8/2017"}, {"body": "emreavsar considered questions unfortunately answer since advanced user reactive forms always prefer template driven forms easier use reactive find reactive forms complicated also never requirements would would implement component implements several fields inside model shape would well defined plus would dedicated validators since said would well defined model flat rather jsonlike validator would validate json nt think good bad solution think better search internet something like angular nested form group etc also suggest ask", "d": "8/2017"}, {"body": "emreavsar want custom form control integrate angular forms implement controlvalueaccessor others mentioned want integration include validation implement validator interface well provide custom control ngvalidator see example closing question worth noting gitter community pretty awesome questions updating form docs soon add information cvas hopefully help well", "d": "8/2017"}, {"body": "hongliyuyulvliyuyulv wrong repo see", "d": "8/2017"}, {"body": "ok wait", "d": "8/2017"}, {"body": "attempted reproduce issue unsuccessful used ran minutes see memory leaks note im interval instead interval heap allocation timeline able reproduce issue please link plunkr stackblitz reproduction otherwise unactionable likely issue application", "d": "8/2017"}, {"body": "eats ram successfully take care", "d": "8/2017"}, {"body": "implemented pipe like work around issue import pipe pipetransform angularcore const hourminuteconfig const dateformatoptions hour hourminuteconfig minute hourminuteconfig pipe name commonclock export class commonclockpipe implements pipetransform transform value date return valuetolocaletimestring dateformatoptions try code recognize ram nt get eaten anymore", "d": "8/2017"}, {"body": "tried reproduce issue unsuccessful adjusted clock expedite process ran minutes see leaks using plunkr could confirm reproduction leak memory heap allocation file similar", "d": "8/2017"}, {"body": "need check process browser colleague pointed also able capture issue analysis tools need monitor chrome processes", "d": "8/2017"}, {"body": "simply put monitor ram consumption client running app", "d": "8/2017"}, {"body": "like toxicable could nt reproduce issue either snippets increased interval well ran mac ram mins ram consumption steady", "d": "8/2017"}, {"body": "weird could reliably reproduce windows work machines using latest google chrome firefox also chromium browser running raspberry pi setup raspbian cases noticed steady increase memory usage browser testing opened basic angular application using date pipe checking looking processes windows task manager respectively top raspberry raspberry would even go far crash entire system taking much ram certain date picker exact application without date pipe either pipe simple alternative pipe odddev mentioned would increase memory usage website load without date pipe raspberry currently running steadily low memory usage several weeks difference pipe", "d": "8/2017"}, {"body": "closing reproducible", "d": "8/2017"}, {"body": "extrapolate user might fooled importing materials thankfully router comes routertestmodule guards however entirely untestable using api properly", "d": "8/2017"}, {"body": "thanks report closing non actionnable please reopen issues clear questions", "d": "8/2017"}, {"body": "vicb ok make simpler open separate issues series question page valid recommended use testbed", "d": "8/2017"}, {"body": "try", "d": "8/2017"}, {"body": "using emitevent false would prevent event fired cases need prevent event case value change cases need event fire actually already solved problem checking current value calling setvalue case need would nice functionality within anglularframework though okay would like propose pullrequest already identified according place setvaluemethod formcontrol modelts want clutter list pullrequest unsolicited changes", "d": "8/2017"}, {"body": "see discussion linked pr would difficult support non primitive values", "d": "8/2017"}, {"body": "without repro nothing repro assume server setup correctly please reopen issue valid repro", "d": "8/2017"}, {"body": "works fine course see parameters instance appcomponent associated route defining parameters root app component", "d": "8/2017"}, {"body": "got works remove stops working dependent need parse url params guess use urlserializer quaryparammap works behaviour consistent", "d": "8/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2017"}, {"body": "intended behavior believe tracks behavior nativestandard ts let q new urlsearchparams qappend x null qappend undefined qappend z qtostring xnull amp yundefined amp z since way encode nullundefined value string behavior sort undefined best pass empty string want send", "d": "8/2017"}, {"body": "also note signature example allow value set reproduction would compile", "d": "8/2017"}, {"body": "try example written uses correct applicationxwwwformurlencoded encoding algorithm since encodeuricomponent works accordance", "d": "8/2017"}, {"body": "clear want statement outside angular app vague data need pass real data configuration runtime last point way possible even angular access global objects", "d": "8/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation decorators build time say possible access instance class instantiated runtime", "d": "8/2017"}, {"body": "andrewvmail maintain singleton manually cheating angular dependecy injection see please close issue since angular tracking issue", "d": "8/2017"}, {"body": "tytskyi thanks thats im looking", "d": "8/2017"}, {"body": "gave try able reproduce double check command nt throw errors commit code repository take closer look", "d": "8/2017"}, {"body": "qidaneix chance write something like somewhere rewrite eg sadly aot restricts expressiveness language nt allow use anonymous function example see aot limitations", "d": "8/2017"}, {"body": "nt allow use anonymous function example fyi possible branch released ago sweetness come", "d": "8/2017"}, {"body": "share code using actually read headers logging instance going misleading headers lazily parsed response header string first access looks like instance function poised perform parsing headers first accessed", "d": "8/2017"}, {"body": "getting chrome dev tools angular wo nt able access either see likely related server side configuration", "d": "8/2017"}, {"body": "robwormald right cors problem needed explicitely expose custom header thank", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "getting thing even without animated component causes ts inside app component template clear animated components inside app error happening tries cloak routerloadingindicator element", "d": "8/2017"}, {"body": "error using animations even importing animation module using material though button dialog input select card using mdprogressbar isbrowser inside div ngif isbrowser isbrowser isplatformbrowser platformid", "d": "8/2017"}, {"body": "ugly working hack edited animationsbrowserumdjs server nodemodules angularanimationsbundles function cloakelement element value elementstyle added elementstyle display block var type oldvalue elementstyledisplay elementstyledisplay value null value none return oldvalue got rid undefined display error getting error firebase cloud functions everything runs fine standalone node firebase serve functions typeerror ctor constructor createclass usercodenodemodules createproviderinstance usercodenodemodules initngmodule usercodenodemodules new ngmoduleref usercodenodemodules createngmoduleref usercodenodemodules objectdebugcreatengmoduleref createngmoduleref usercodenodemodules ngmodulefactorycreate usercodenodemodules usercodenodemodules zonedelegateinvoke objectoninvoke usercodenodemodules", "d": "8/2017"}, {"body": "problem importing noopanimationsmodule appservermodule thought would take care appears still try run modification node", "d": "8/2017"}, {"body": "agree something angular team needs make formal response since github everyone world better provide background issue avoid letting people confused actually already confused many people gitter ps nt think github issue right place voting especially something relevant repo", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "see investigating posted chinese social media taking steps correct situation", "d": "8/2017"}, {"body": "toggle method call enable logging angular events", "d": "8/2017"}, {"body": "could reproduce outside app help without repro", "d": "8/2017"}, {"body": "hi vicb understand finding solution without reproducing issue difficult pointers debug issue angular lifecycle hooks called directive", "d": "8/2017"}, {"body": "problem package overrides global namespace", "d": "8/2017"}, {"body": "directory uptodate run", "d": "8/2017"}, {"body": "tried vagrant vagrantangular bazel run buildbazelrulestypescriptnode binnpm install info analysed target buildbazelrulestypescriptnode binnpm packages loaded info found target info elapsed time critical path info build completed successfully total action info running command line install angularsrcs postinstall vagrantprojectsangularangular node toolsnpmcopynpmshrinkwrap amp amp webdrivermanager update copying shrinkwrap fingerprint nodemodulesnpmshrinkwrapcachedjson iupdate chromedriver file exists iupdate chromedriver unzipping iupdate chromedriver setting permissions iupdate chromedriver date iupdate selenium standalone file exists iupdate selenium standalone date iupdate geckodriver file exists iupdate geckodriver unzipping iupdate geckodriver setting permissions iupdate geckodriver date npm warn optional skipping optional dependency fsevents nodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os linux arch tried build catches error", "d": "8/2017"}, {"body": "duplicate", "d": "8/2017"}, {"body": "yes looks like sorry dup thought searched well enough", "d": "8/2017"}, {"body": "worries pr already progress", "d": "8/2017"}, {"body": "see live example works without errors please give exact steps reproduce issue sounds like missed previous step something regarding second point nt property already first code change instructed tutorial point property", "d": "8/2017"}, {"body": "nothing wrong verbose resolving promise would unwrapped automatically", "d": "8/2017"}, {"body": "oh remove getheroes method heroservice class", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "also remove line doc", "d": "8/2017"}, {"body": "pwwpche remove line", "d": "8/2017"}, {"body": "nt notice npm scripts extended packagejson quite sure scripts line referring possibly scripts already longer need manually add packagejson", "d": "8/2017"}, {"body": "seen saying scripts needed already packagejson", "d": "8/2017"}, {"body": "already packagejson guess script removed doc another missing script page nowhere else page states script big deal since easy figure liteserver script might better also list doc nt want submit another issue ok adding", "d": "8/2017"}, {"body": "see mean well exactly clear part use quickseed boilerplate nt scripts tells download zip scripts also realized another codesnippet missing submitted hopefully make things clear least less confusing", "d": "8/2017"}, {"body": "awesome confusion thanks", "d": "8/2017"}, {"body": "dependencies updated need keep uptodate maybe mention cc foxandxss", "d": "8/2017"}, {"body": "yes keep updated", "d": "8/2017"}, {"body": "quickstart updated close", "d": "8/2017"}, {"body": "thats injection works unfortunately applies services", "d": "8/2017"}, {"body": "considered thing confusing problem nt show plunker seems thing", "d": "8/2017"}, {"body": "angular injection always happens regarding component directive used template independent content projection ie works intended", "d": "8/2017"}, {"body": "saying content projection nt affect ie behavior plunker expected behavior", "d": "8/2017"}, {"body": "yes content projection purely dom attached influence creation destruction lifecycles di queries", "d": "8/2017"}, {"body": "tbosch content projection nt influence di amp", "d": "8/2017"}, {"body": "trotyl content projection mean fact whether template component contains element content children component get projected still separation content view children based defined", "d": "8/2017"}, {"body": "assume referring fetch data navigating section need add property mentioned text import resolver add object route configuration code updated seen right relevant crisis center code milestone follows suggesting dedicated snippet", "d": "8/2017"}, {"body": "works fine enter characters see error", "d": "8/2017"}, {"body": "yeah looks like working intended still issues feel free open new issue code repro", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation nt bug angular issue accessing variables", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "please add plunker reproducing issue", "d": "8/2017"}, {"body": "willyboy using use plnkr starting point", "d": "8/2017"}, {"body": "gkalpak thanks starter saved ton time vicb sorry delay swamped reproduction notice remove ngiftrue transcluded element text shows banana first name", "d": "8/2017"}, {"body": "interestingly test exact scenario looking", "d": "8/2017"}, {"body": "looking closer test put transcluded element child unfortunately nt seem way ngupgrade retrieve information transcluded content structural directives removed content happy proven wrong smiley workaround use structural directive child node like", "d": "8/2017"}, {"body": "gkalpak yup workaround using sorry delayed reply getting notifications reason", "d": "8/2017"}, {"body": "closing since nt seem way solve possible ngupgrade access necessary info", "d": "8/2017"}, {"body": "closed fixed via", "d": "8/2017"}, {"body": "thx toxicable", "d": "8/2017"}, {"body": "aminpaks use strategy component actual plunker nt sense real point view", "d": "8/2017"}, {"body": "use observable example pipe convenience detect changes object identity content also use operators like stop change detection specific input", "d": "8/2017"}, {"body": "multiple ways solve issue described comments hard give right response without real world use case", "d": "8/2017"}, {"body": "mlcmlapis could nt fix issue vicb bit surprised limitation framework handle directly either recommended handle observable documented somewhere along docs btw nt matter real world use case fact nt work enough options presented achieve best solution", "d": "8/2017"}, {"body": "aminpaks example meant changes invoked changes necessary call", "d": "8/2017"}, {"body": "mlcmlapis changed type sorry example practical workaround", "d": "8/2017"}, {"body": "aminpaks works based change object ref", "d": "8/2017"}, {"body": "mlcmlapis totally understand answer accept angular good framework like work instead example makes things complicated practical even though works thanks time", "d": "8/2017"}, {"body": "aminpaks original code pass big array also use global default changedetection whole app checked even primitive big array checked change evident difference checking big small array expect right concept eliminate checking big array cd cycle yes similar way also channel", "d": "8/2017"}, {"body": "mlcmlapis part nt understand change detection works way passed list one component whole detection became slow changing reference input object", "d": "8/2017"}, {"body": "aminpaks array looks like primitive data type angular cd lifecycle looking change effect reference would always changed passed finally pass myarray directly value instead passing ref variable store object first", "d": "8/2017"}, {"body": "mlcmlapis big array primitive data type mean wo nt happen fill array objects", "d": "8/2017"}, {"body": "aminpaks problem array created object property", "d": "8/2017"}, {"body": "mlcmlapis sorry confused updated example demonstrate issue array objects", "d": "8/2017"}, {"body": "javascript angular change detection works makes sense", "d": "8/2017"}, {"body": "aminpaks looked around angular code really looks like array important data type number string object really processed trivial value comparison done previous value reason slow big array code around change detection really complicated probably real reasons processed way works", "d": "8/2017"}, {"body": "mlcmlapis inconsistent lead misunderstanding needs documentations like know arrays objects treated differently hand processed simple refrence check nt happen would show code", "d": "8/2017"}, {"body": "far know keep reference previous value check happen", "d": "8/2017"}, {"body": "another comment work type javascript variables arrays objects primitives job", "d": "8/2017"}, {"body": "aminpaks line saves reference another variable deep copy compares references fast problem arrays mutable default angular cd checking compares elements value arrays decide mechanism would check references objects would fast also imagine work references additional information decision done objects rule actual previous reference object also without comparison deep internal structures primitives data types string number boolean null undefined symbol immutable stored stack", "d": "8/2017"}, {"body": "arrays mutable default angular cd checking compares elements value arrays decide mechanism would check references objects would fast also based explanation statement confused thought angular change detection checks reference values matter type input also checking elements input array bad idea completely disagree thought nt cause framework option developer decide wan na double check deep comparison note explanation far understand waiting point right place read source code checks variable type object wo nt go arrays checks contained elements right", "d": "8/2017"}, {"body": "aminpaks actually understand yes difference arrays objects strategy exact explanations arrays processed way still another option using observable note explanation onpush far understand waiting point right place read source code checks variable type object wo nt go arrays checks contained elements right", "d": "8/2017"}, {"body": "aminpaks also true mutable also default behaviour reasons arrays taken way objects", "d": "8/2017"}, {"body": "mlcmlapis exactly expecting explanation behavior well already closed issue", "d": "8/2017"}, {"body": "aminpaks funny found originally array behave way object comparing references either something wrong plunker disussing really bug", "d": "8/2017"}, {"body": "mlcmlapis nice nt think anything wrong plunker source clear literally nothing complicated code bug", "d": "8/2017"}, {"body": "aminpaks explanation already thanks ghetolay code works correctly even arrays reason angular really tests mutability important difference dev prod mode runs dev mode checked cd cycle avoid changing one cd cycle looks inputs iterable checked reference values checking run prod mode", "d": "8/2017"}, {"body": "mlcmlapis even worse bug design makes sense happens developer working big lists dev mode turn prod mode wow honestly discouraging rather go observables", "d": "8/2017"}, {"body": "aminpaks yes type big arrays observable looks like good choice property contains big array discussed also true checking possible without comparing values", "d": "8/2017"}, {"body": "happens developer working big lists dev mode smart developer work small list dev handle lot data google pagination virtualinfinite scroll", "d": "8/2017"}, {"body": "smart developer work small list dev handle lot data google pagination virtualinfinite scroll building pagination requires pass items splice mean lazy load another story", "d": "8/2017"}, {"body": "actually building virtual scroll ended facing problem", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "little reproduce error could try attach repro", "d": "8/2017"}, {"body": "look", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2017"}, {"body": "see also dupe see also mystory writing aotfriendly apps", "d": "8/2017"}, {"body": "hmm searched aot nt come bad totally dupe aformentioned issue one higher quality thanks extra link though maybe consider suggestions quick fix issue main request full fledged walk comparison aot vs jit", "d": "8/2017"}, {"body": "closing duplicate", "d": "8/2017"}, {"body": "sure issue angular ie browser could try without angular report", "d": "8/2017"}, {"body": "tried using jquery issue still persists without angular please look fiddle means ie browser issue possible work around think", "d": "8/2017"}, {"body": "okay solved issue another way nt update dom type transform uppercase using css text transform property however convert model value uppercase plunker anyone facing similar issue closing issue nt angular related", "d": "8/2017"}, {"body": "property statustype exist type statuscomponent correct never expose property components templates evaluated component instances", "d": "8/2017"}, {"body": "pkozlowskiopensource thank development mode error expected workarounf correct solution", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "issue webstorm angular", "d": "8/2017"}, {"body": "please checkout", "d": "8/2017"}, {"body": "got working removing following however nt understand need add collection typescript import testbed inject angularcoretesting import logonuserservice logonuserservice import httpclienttestingmodule httptestingcontroller angularcommon describe logonuserservice gt const endpoint load json response body mock filesystem const response require testingresponsejson let service logonuserservice let httptestingcontroller beforeeach gt testbedconfiguretestingmodule imports httpclienttestingmodule providers logonuserservice successfully mock user logon request gt servicelogon subscribe data gt expect statements", "d": "8/2017"}, {"body": "need add logonuserservice providers collection httpclient httptestingcontroller line adds providers module httpclienttestingmodule already adds provider httptestingcontroller since imports httpclientmodule also adds provider httpclient see", "d": "8/2017"}, {"body": "thanks jnizet makes sense", "d": "8/2017"}, {"body": "provide information make issue actionable also report jit vs aot bundle sizes aot trying hit sweet spot bundle size page load optimizations among things", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "please attach minimal repro", "d": "8/2017"}, {"body": "solution easy previous versions add hasvalue true routes import", "d": "8/2017"}, {"body": "helpblock class css rule overrides hidden property per spec use ngif use hidden span wrapping helpblock see detailed explanation", "d": "8/2017"}, {"body": "jnizet got thank much", "d": "8/2017"}, {"body": "version using guessing gt", "d": "8/2017"}, {"body": "yarn version", "d": "8/2017"}, {"body": "due bug yarn gt may install wrong versions fixed yarnpkgyarn included release meantime need use older version use closing since everything works expected far aio concerned grin", "d": "8/2017"}, {"body": "see error nt actually directly related yarn right believe actual error related invalid usage sourcemap arg uglifyjs aio postinstall incorrect passing base content filename includesources root url instead passing nothing sourcemap installed directed issue persists misunderstood thanks", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "remove install using yarn everything work expected issue happens yarn installed older version uglifyjs directory old incorrect version uglifyjs different api ie expects different commandline arguments thus breaks", "d": "8/2017"}, {"body": "da man thanks education gkalpak blown away nodemodules everything exactly described reran yarn bare minimum hoping others banging head frustration error stumble get quick answer could nt find anything specifically last night morning thanks assistance", "d": "8/2017"}, {"body": "please take support questions gitterimangularangular stackoverflow", "d": "8/2017"}, {"body": "related possibly also duplicate", "d": "8/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "8/2017"}, {"body": "works called component initialized value", "d": "8/2017"}, {"body": "interestingly libraries includes angular material seem stick version well maybe already known issue", "d": "8/2017"}, {"body": "sure related problems creating fesm using ngc gt", "d": "8/2017"}, {"body": "discovered weirdly enough angular material seems create nearly empty metadatajson file manually see recommended way generating file nowhere documented workaround bit confused right would nice clear official guideline setup working build process angular libraries", "d": "8/2017"}, {"body": "analyzing seems using angulartscwrapped works expected probably issue within angularcompilercli wrapping around", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "8/2017"}, {"body": "ericmartinezr angular animations host working component routed using route reuse animations trigger routeanimation state style opacity transition void gt style opacity animate transition gt void animate style opacity export class imhomecomponent hostbinding routeanimation routeanimation true hostbinding styledisplay display block hostbinding styleposition position absolute think bug angular", "d": "8/2017"}, {"body": "works perfectly fine", "d": "8/2017"}, {"body": "agree ericmartinezr works well simple plunker problem description sounds fishy dujuanxian please provide plunker reproduces exact issue otherwise actionable closed", "d": "8/2017"}, {"body": "hi ericmartinezr pkozlowskiopensource sorry angular issue wrapped fullpagejs cause issue codebase sorry wasting time", "d": "8/2017"}, {"body": "sounds reasonable prs welcome wink", "d": "8/2017"}, {"body": "looks like wrong repo repo angular currently version angularjs repo currently version", "d": "8/2017"}, {"body": "thank directing angular js repo though using angular open using higher versions angular including angular please let know word like text editor angular angular something build scratch thanks", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation use libraries offer native box integration angular bootstrap ex", "d": "8/2017"}, {"body": "pkozlowskiopensource thankyou", "d": "8/2017"}, {"body": "one resolved problem issue detail see", "d": "8/2017"}, {"body": "related consider behavior bug", "d": "8/2017"}, {"body": "seems happen empty parameters removed merge happens see navigate method router might simply fixed rearranging function little code never tested might stupidly wrong hope gets idea", "d": "8/2017"}, {"body": "alxhub jasonaden nt fixed", "d": "8/2017"}, {"body": "cexbrayat think right thanks update", "d": "8/2017"}, {"body": "enough info proper investigation eg reproduction mentioned link posted setting headers fine long one would also explain explicitly setting header might solve issue nt set headers explicitly try detect content type based request body general try set reasonable defaults based common usages still think behave differently specific case please post concrete example reproduction", "d": "8/2017"}, {"body": "basic example triggers preflight requires patch successfully call localhost hosted server nt support", "d": "8/2017"}, {"body": "realized could using old rules apply less since passing object set header explicitly try detect based body since body object default works expected afaict common usecase posting json data crossorigin server support options rather rare one since trying optimize eg reduce boilerplate common usecase extra work case either explicitly set header manually stringify body since passing string cause detect header", "d": "8/2017"}, {"body": "using instead also worked thanks bug angular defaults content type triggers preflight requests especially usecases imagine json rest api people sending object unless devs catch essentially doubles time taken request return even correct content type people want production code would think", "d": "8/2017"}, {"body": "even correct content type people want production code would think doubt keep mind rules apply sameorigin crossorigin requests majority origin cc alxhub knows design", "d": "8/2017"}, {"body": "ping alxhub would nice development mode set cors triggered preventable ie object empty angular spat hint use empty string post body instead empty object angular checked empty object explicitly used instead google examples nt trigger cors accidentally probably preferred", "d": "8/2017"}, {"body": "major version change intended breaking change best knowledge", "d": "8/2017"}, {"body": "lingarajsureban interface type method returns etc", "d": "8/2017"}, {"body": "thanks tytskyi tried suggestion still working debugged code see whats happening found execution never enters inside resolve function hits class exists immediate sure whats happening code injectable export class translatedstringsservice", "d": "8/2017"}, {"body": "yep change expected fix code", "d": "8/2017"}, {"body": "lingarajsureban sorry help since change suggested fix compiler errors errors resolving mechanics experience", "d": "8/2017"}, {"body": "used necessary back day anymore long time anyone wants take stub removing please smiley", "d": "8/2017"}, {"body": "add issue", "d": "8/2017"}, {"body": "darrenbrett could provide reproduce repo", "d": "8/2017"}, {"body": "scrollbars indeed pretty thin least windows assumed deliberate design decission cc sjtrimble igorminar said rarely use scrollbars scrolling reading document usually use mousewheel updown arrows", "d": "8/2017"}, {"body": "intentional revisit thicken bit make usable", "d": "8/2017"}, {"body": "issue still persists azamanaza tell previous version used work", "d": "8/2017"}, {"body": "yes think old link website linking thanks fixing guys much appreciated", "d": "8/2017"}, {"body": "workaround", "d": "8/2017"}, {"body": "long fixed merged", "d": "8/2017"}, {"body": "anyone workaround code", "d": "8/2017"}, {"body": "tried hand came ts import httpevent httphandler httpinterceptor httprequest httpresponse angularcommon import injectable angularcore import observable rxjsobservable remove gets merged injectable export class implements httpinterceptor constructor works initial tests", "d": "8/2017"}, {"body": "works pretty much mrahhal answer also found catch parse error well javascript intercept req httprequest next httphandler observable const clonedrequest reqclone responsetype text", "d": "8/2017"}, {"body": "updated http httpclient strings returned giving http failure parsing thanks mrahhal combined fixes json responses strings working", "d": "8/2017"}, {"body": "alxhub true angularcli nt docs part angular since manage angular project otherwise naming incorrect", "d": "8/2017"}, {"body": "also got troubled issue also fixed", "d": "8/2017"}, {"body": "duplicate fix ready", "d": "8/2017"}, {"body": "async validators run sync validators pass add validatorsrequired empty value fail async validators wo nt run therefore wo nt throw error", "d": "8/2017"}, {"body": "thank toxicable problem attribute directives example raised value something angular true false ca nt undefined add new update demo reproduce issue custom attribute directive change title issue generic hidden", "d": "8/2017"}, {"body": "also experiencing bug using feature routing modules recommended bleeding edge best practice feature modules nt actually reusing components routes put called every route change using parameters anything route sounds ops issue", "d": "8/2017"}, {"body": "vicb please elaborate statement nt get injector issue case testcomponent gets servicea via di using testcomponent servicea thisservicebopen testcomponent class serviceb public open content type void", "d": "8/2017"}, {"body": "dupe", "d": "8/2017"}, {"body": "work", "d": "8/2017"}, {"body": "recently also encountered bug web worker elements dispatch values back directive element inside issue probably", "d": "8/2017"}, {"body": "ca nt reproduce linked plunker going close one please open new issue following bug template got minimal reproduce scenario", "d": "8/2017"}, {"body": "hello jayoungers experience exact problem since using template driven form ca nt fully understand solution think cause printed object regardless way address thanks", "d": "8/2017"}, {"body": "believe issue angular code necessarily something able resolve nt using reactive forms best bet may event updates list list updated set model variable matching value new list exists", "d": "8/2017"}, {"body": "thanks jayoungers case going mess around anymore simple workaround work", "d": "8/2017"}, {"body": "function meant set validators control developer whether validation run choose", "d": "8/2017"}, {"body": "hello mhevery kind review issue please advice review reach thanks advance", "d": "8/2017"}, {"body": "pkozlowskiopensource may please take look onto issue", "d": "8/2017"}, {"body": "dears need proceed open pull request supporting contextual digits shaping angular part ibm globalization team one core tasks ibm supporting open source technologies globalization may please take look issue inquiry please let know asap open pull request", "d": "8/2017"}, {"body": "related issue currently closed", "d": "8/2017"}, {"body": "angular bug still simple plunker demo cc matsko", "d": "8/2017"}, {"body": "thank michaelpolster reporting issue dharders providing another plnkr looking", "d": "8/2017"}, {"body": "lands fix", "d": "8/2017"}, {"body": "closed", "d": "8/2017"}, {"body": "zoechi right adding directive easy way implement feature however section docs covering functionality order make developers aware possibility nt think concerning extension use decorators could solution provide desired metadata eg something like", "d": "8/2017"}, {"body": "macjohnny docs topic actually quite sparse looks like got something lost recent updates sure already would worth new issue missing docs mentioned nt see much value complicating api opinion though", "d": "8/2017"}, {"body": "zoechi alexzuza created new feature request asking section docs covering feature discussed may comment add thumbs think would useful developers still keeping issue open maybe opinions", "d": "8/2017"}, {"body": "please highlight id different contents thing application working several elements contents must possible use custom id without warning", "d": "8/2017"}, {"body": "problem routes child routes navigate default page named outlet", "d": "8/2017"}, {"body": "issue ngoninti calls seconds", "d": "8/2017"}, {"body": "bug happens invoke third party library facebook firebase hope help resolve issue", "d": "8/2017"}, {"body": "related", "d": "8/2017"}, {"body": "chuckjaz news issue", "d": "8/2017"}, {"body": "addressed require breaking change declaration ready time template compiler know runtime behavior directives including something fundamental therefore currently typing relationship derived inside template similar example would written following typescript turn strict null option see error report could possibly undefined lambda proving otherwise requires knowledge runtime behavior could change declaration something like implied playground turn strict null checks see inferred type would similar rewriting ts function ngif condition null undefined cb condition gt void condition cb condition ngif data data gt datatitle new type checker scheduled included breaking change happen till", "d": "8/2017"}, {"body": "thanks detailed answer", "d": "8/2017"}, {"body": "currently keep simple cases easy retrocompatibility could simply add advanced configuration fix amp passing parameters mixing guard amp resolver cancel route activation preroute receive extra parameter note also store parameters directly route snapshot object fix problem consider preroute configurations array launched simultaneously add extra parameter allow chain", "d": "8/2017"}, {"body": "looks like fixed links top forgot update link footer see new pr", "d": "8/2017"}, {"body": "taken care anything still missing", "d": "8/2017"}, {"body": "sure fixed plunkers situation", "d": "8/2017"}, {"body": "want inject service purpose getting value stored service make request service make use httpclient make requests nt think issue closed", "d": "8/2017"}, {"body": "sirzach", "d": "8/2017"}, {"body": "nazarkryp using manual injection method seem getting different instance service could fault set provider service although think took care providing seeing thing", "d": "8/2017"}, {"body": "issue seems still satisfying answer provided nt closed", "d": "8/2017"}, {"body": "agreed willcopperleaf still view design problem interceptors general interceptors needing make requests fairly common case particularly used authentication suspect case injecting injector requesting services adhoc seems bit hacky", "d": "8/2017"}, {"body": "min max validator directives removed added breaking changes appropriate minor release expected closing issue", "d": "8/2017"}, {"body": "thanks biophoton laying use case however toxicable mentioned existing ways accomplish need angular validation functions created errors others created warnings would make validation complicated reason maintain nt seem within scope core forms closing keep mind always possible release additions forms package like", "d": "8/2017"}, {"body": "kara thx closing another issue great repo loving work forms found way feels good tried extend implement much angular code possible mix little bit resources angularalternativevalidation github repository npm package plunker example angularcli animated gif maybe helps someone", "d": "8/2017"}, {"body": "issue plunker angular seems difficulty finding initial states", "d": "8/2017"}, {"body": "closed", "d": "8/2017"}, {"body": "alxhub hi know something get looked soon plnkr example important newcomers angular like may put see nt work", "d": "8/2017"}, {"body": "tried works fine getting errors console extension might interferring eg adblocker", "d": "8/2017"}, {"body": "gkalpak thanks testing ad blocker breaking apologies false alarm perhaps would useful include small message asking users turn ad blocker documentation underneath link imagine lots people new angular plnkr getting caught like", "d": "8/2017"}, {"body": "would nt keen asking users disable adblockers see example would better could identify fix underlying issue able pinpoint exactly triggered adblocker block example", "d": "8/2017"}, {"body": "working either", "d": "8/2017"}, {"body": "tried angular bug still reproduced building angular aot error illegal state symbol without members expected got filepath mymodelmodelts name modelcode members modeldata building angular without aot atloader ok sec downgrading angular without aot atloader ok sec nt understand angular team nt care impossible use latest aot angular version ci environment", "d": "8/2017"}, {"body": "would anyone fork workaround compilerumdjs nt downgrade still hoping fix least suggested fix instruction chuckjaz", "d": "8/2017"}, {"body": "still issue", "d": "8/2017"}, {"body": "facing problem enum like export enum role user user admin admin error illegal state symbol without members expected got filepath filepathenumsroleenumts name role members user environment reverting angular version nt option already using new httpclient api one added alxhub chuckjaz check please imho real bug higher priority", "d": "8/2017"}, {"body": "problem fixed", "d": "8/2017"}, {"body": "problem reverting option ca nt modify application code base", "d": "8/2017"}, {"body": "simplest way us fix compiler tarball based fix suggested janousek put next project lock versions angular modules link local tarball packagejson looks like zipped tarball longer get issue aot builds hopefully someone familiar compiler able create proper fix pr soon must blocking lots teams upgrading", "d": "8/2017"}, {"body": "aot build yields found actually use every part except angularcompiler still needs order workaround issue", "d": "8/2017"}, {"body": "almost month important bug without author reaction", "d": "8/2017"}, {"body": "running without prod flag moment could please fix go production", "d": "8/2017"}, {"body": "running prod without aot worked", "d": "8/2017"}, {"body": "aldoroman functionality precisely need", "d": "8/2017"}, {"body": "mindsers sorry meant build disabling aot prod flag need aot", "d": "8/2017"}, {"body": "enum reference inside provider route properties work around introducing intermediate exported variable template compiler use instead inlining expression", "d": "8/2017"}, {"body": "running bug well issue looks like might related following similar pattern using enum route config", "d": "8/2017"}, {"body": "chuckjaz possible get example work around mentioned comment", "d": "8/2017"}, {"body": "dincaroberto case following kind change helped thanks chuckjaz", "d": "8/2017"}, {"body": "dincaroberto something like example provided michalfilip referring", "d": "8/2017"}, {"body": "problem still exists try execute npm run ionic build aot ideas fix fixed without aot ionic app published", "d": "8/2017"}, {"body": "workaround described work", "d": "8/2017"}, {"body": "chuckjaz michalfilip solution nt work", "d": "8/2017"}, {"body": "fixed", "d": "8/2017"}, {"body": "trotyl yes compiler lower expressions exported variables automatically avoiding issue entirely piernik exactly try", "d": "8/2017"}, {"body": "updated angular cli import responsible reactive forms define validators assing static methods inital code changed export const customvalidatorsunikalnytytulkrainy customvalidatorsunikalnytytulkrainy export const customvalidatorsunikalnytytulatrakcji customvalidatorsunikalnytytulatrakcji method customvalidatorsunikalnytytulkrainy method customvalidatorsunikalnytytulatrakcji error illegal state symbol without members expected comment validators part compiler works static methods export class customvalidators static unikalnytytulatrakcji fieldcontrol formcontrol observable promise const apiservice injectorget apiservice return customvalidatorsunikalnytytul fieldcontrol atrakcje apiservice", "d": "8/2017"}, {"body": "work around wo nt work case currently treat fields special planning adding starting compiler automatically introduce exported variables generated code dts file allow factory access values given none help example going fix references enums issue final investigate rewriting general would still fail used unrecognized call code also allowed", "d": "8/2017"}, {"body": "chuckjaz thanks response give working solution example article something", "d": "8/2017"}, {"body": "tl dr resolved issue directly export file root indexts instead indexts subdir file lives", "d": "8/2017"}, {"body": "neat workaround thinking extending however overloaded constructors make implementation complicated", "d": "8/2017"}, {"body": "agrumas could abuse httpheaders set request nice name eg strip interceptor actual request gets send readd response way plan enable disabling individual interceptors perrequest basis eg toggling global loadingnotification course feature needs added many use cases", "d": "8/2017"}, {"body": "inprogress branch unlikely land probably coming", "d": "8/2017"}, {"body": "fair angular issue much angular documentation makes extensive use pledged fix problem soon", "d": "8/2017"}, {"body": "bean experimenting plunker mentioned comment related issue think problem might function line states since unwraps current value believe old value also stored unwrapped variant instead wrapped one achieved replacing line change mentioned plunker works correctly change makes sense", "d": "8/2017"}, {"body": "fwiw want inform anybody interested tried fix pretty large project based angular without obvious problems", "d": "8/2017"}, {"body": "bug confirmed anyone angular team hitting us hard right anyone monkey patch workaround without use modified build angular", "d": "8/2017"}, {"body": "could fix never assigning number nan see screenshot also empty strings seem cause problem might caused vs theory", "d": "8/2017"}, {"body": "robwormald noticed closed see issue think bug hitting many people would great fixed thanks", "d": "8/2017"}, {"body": "alxhub way something", "d": "8/2017"}, {"body": "hi thinking could know lazy loaded module path run time time nt want put path routemodules could get aot version lazymodule", "d": "8/2017"}, {"body": "afraid far know ca nt", "d": "8/2017"}, {"body": "pfrendo find workaround yet", "d": "8/2017"}, {"body": "pfrendo question find workaround", "d": "8/2017"}, {"body": "pfrendo solve problem", "d": "8/2017"}, {"body": "pfrendo encountered issue using net core spa templates separate app vendor bundles using webpack dll plugin issue upgraded version angular without rerunning webpack command vendor build app bundle building wrong angular version rebuilding vendor bundle fixed", "d": "8/2017"}, {"body": "millsb thanks works quick question always need run webpack upgrading package angular", "d": "8/2017"}, {"body": "think would apply package upgrades", "d": "8/2017"}, {"body": "aot compiler giving error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function trying something like using workaround suggested antonmoiseev aot went fine", "d": "8/2017"}, {"body": "jasonaden believe cli replacing point since factory becomes available compiles source code suggest might cli issue", "d": "8/2017"}, {"body": "right moving", "d": "8/2017"}, {"body": "cli specific unfortunately nothing cli support building libraries individual application parts like ngmodule talk robwormald worked similar setup past answer angular repo elsewhere nt fit either leaving open meantime keep discussion around", "d": "8/2017"}, {"body": "jasonaden hypothesis sound accurate facing issue particular use case would good get fix happy help develop test cases fixes move along provided hypothesis seems reasonable", "d": "8/2017"}, {"body": "jdcarroll take look fork current issue see difference behavior setting original plunk navigation loop count setting fix number", "d": "8/2017"}, {"body": "could nt reproduce issue neither angular code base new test fresh angularcli project thing changed removing test file test running fine please reopen another reproducer", "d": "8/2017"}, {"body": "mlaval automatically provided need get reference create new directive unit test", "d": "8/2017"}, {"body": "ndcunningham yes provided automatically cases", "d": "8/2017"}, {"body": "mlaval thanks works", "d": "8/2017"}, {"body": "hi plunkr says words created one primitive shows access dom inputs selects form directive without apply additiona attributes html take look browser console solution", "d": "8/2017"}, {"body": "biophoton think point able easily access nativeelement component class example like approach give access nativeelement template would need viewchildviewchildren get component class also want nativeelement template things like could", "d": "8/2017"}, {"body": "toxicable c thx pointing right direction least plunkr start think", "d": "8/2017"}, {"body": "dgroh saying bug still documentation issue work use case able get something working broken state", "d": "8/2017"}, {"body": "goal api request matching job pick expected request set active requests much way server would intended assertions request beyond asserting compatible request exists example", "d": "8/2017"}, {"body": "alxhub yes could nt would simplify http tests quite lot make readable compare current solution example", "d": "8/2017"}, {"body": "cddelta thank needs explained clearly docs give example set one parameter rare case real time mentioned immutable docs link", "d": "8/2017"}, {"body": "noticed inconvenience snippet convert", "d": "8/2017"}, {"body": "soon fixed", "d": "8/2017"}, {"body": "problem easy key value pair wanted set value object problem get headers thens et reason nt get encoded string ideas solve", "d": "8/2017"}, {"body": "hi able get point read tried ngif workaround solves problem bet problem try move html use ngif ngmodel dir please let know assumption case best michael", "d": "8/2017"}, {"body": "helps published blog post explaining various edge cases needed documentation explain consumers using many structural directives apis serve starting point future docs feel free use anything want like", "d": "8/2017"}, {"body": "also note behavior projecting may change future", "d": "8/2017"}, {"body": "yes intent run requests outside zone reenter async", "d": "8/2017"}, {"body": "kseamon could provide reproduce repo would like check part", "d": "8/2017"}, {"body": "one working take", "d": "8/2017"}, {"body": "updates issue", "d": "8/2017"}, {"body": "met question seems nt work lazy module using temporary solution using tag prop", "d": "8/2017"}, {"body": "ohh thanks try yingxinzheng notifications githubcom met question thisrouternavigate lazymodule seems routernavigate nt work lazy module using ngversion temporary solution using tag lazymodulename receiving commented reply email directly view github mute thread", "d": "8/2017"}, {"body": "undermoodzyx works perfectly absolute path issue relative path look plunker", "d": "8/2017"}, {"body": "hi vicb igorminar apologise writing closed issue going open request perhaps plunker give example context provided angular plunker fork adrienboulle agree nertzy warning message nice job telling us values change detection however never sure object property referring lines reliable cases use array objects messages like provided well see file name presume something template clear also note bug line line mentioned angular perhaps would nice adding warning message propertyobject changed value would expect warning message something like instead ps note key app class also values object string case would easier debug object comment line end another bug issue referring method pointed adrienboulle issue case much easier debug line correct also values easier find property however message error could missing method would make debugging easier", "d": "8/2017"}, {"body": "vicb igorminar repro given comment written one coworker robwormald could reopen issue", "d": "8/2017"}, {"body": "docs say plan drop support angular deep gt gt gt ngdeep question remains longterm alternative", "d": "8/2017"}, {"body": "still cause error angularcli node os linux angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice class defaultiterabledifferfactory incorrectly implements interface iterabledifferfactory", "d": "8/2017"}, {"body": "course fixed opened pr still approved yet", "d": "8/2017"}, {"body": "issue line chart ngxchart news possible fix", "d": "8/2017"}, {"body": "hello wanted say angular typescript rxjs problem problem suppressed nostrictgenericchecks thanks looking", "d": "8/2017"}, {"body": "smurugavel got combination produce issue may need delete folder install modules", "d": "8/2017"}, {"body": "almothafar thanks response modemodules cache clean delete etc problem exists need dig see angular typescript code try add logs extract information reading error first post could see error like rxjssubject similar nt see circular dependency problem error well wanted add error see know anyone provide insights atloader class exampleservice incorrectly extends base class basehttpservice types property list incompatible type gt observable gt observable", "d": "8/2017"}, {"body": "still problem angular rxjs", "d": "8/2017"}, {"body": "know date like tomorrow wanted post experimentfindings absolute latest deps", "d": "8/2017"}, {"body": "maximusk paistipoikka indeed way bootstrap compiled module aot", "d": "8/2017"}, {"body": "hi slavafomin problem came another approach listening pristine dirty reset actions created observable merges status changes value changes one trransform srteam interest bleow example im interested reset event typescript observablecombinelatest thiscontrolstatuschanges thiscontrolvaluechanges called dir gets destroyed takeuntil thisdestroy asobservable map n gt const resetstate dirty false pristine true touched false untouched true always interested feedback maybe helps best michael", "d": "8/2017"}, {"body": "biophoton hi perfectly combines streams still nt fired input blur controltouched changed", "d": "8/2017"}, {"body": "thats true andrewbogushevich added next subject added existing stream fire also ontouched solution", "d": "8/2017"}, {"body": "complete could", "d": "8/2017"}, {"body": "another way would", "d": "8/2017"}, {"body": "biophoton hi think nt solve problem markastouched observable thing seems work slavafomin monkey patching said ideal think really access observables toucheduntouched stuff like", "d": "8/2017"}, {"body": "tbosch mhevery planned soon performance gain might substantial thelarkinn sokra share pointers happens angular esm modules built ts js via ngc angular ts wrapper non bundled flat angular compiler atrifacts rollup js output bundle use ts downlevel rollup bundle esm irrelevant rollup esm bundle umd", "d": "8/2017"}, {"body": "ngmgit access since updatevalueandvalidity called formgroup constructor causes validators run meaning run assigned", "d": "8/2017"}, {"body": "providing two cents fighting issue date retrieving formatted safari amp return errors try format using code way resolved yet tested component template hope helps", "d": "8/2017"}, {"body": "jnord dgroh experienced using nghint uses ngif directive get rid error manage implement workaround", "d": "8/2017"}, {"body": "wernerson yes part issue intended error bug", "d": "8/2017"}, {"body": "worked hidden remove element dom requirement ok also clean solution", "d": "8/2017"}, {"body": "first find variable meant error message angular team would nice name variable error message easy find larger masks webpack found command happens command follow line help see example", "d": "8/2017"}, {"body": "thanks dgroh jnord jnord also looking detectionchanges method might use approach following article advised", "d": "8/2017"}, {"body": "case using pagetitle service subscribing parent component child components loaded view set pagetitle service parent gets value displays via subscribe worked without errors throws expressionchangedafterithasbeencheckederror error later everything still works expected errors nt display deployedproduction builds due lack second change detection cycle development awful lot red console still extremely unclear appropriate even short term fix parent component subscriptions constructor child component updates via service ngoninit read everything need know post informative nt lead believe anything incorrectly doest provide working solution problem", "d": "8/2017"}, {"body": "alignsoft would set pagetitle child components ngoninit believe error valid see article linked", "d": "8/2017"}, {"body": "alignsoft agree lot discussion around error without real clear instruction whether valid warning dev standards data bindingmanipulation specific case dealing parentchild components using viewchild contentchild call detectchanges stop error showing console", "d": "8/2017"}, {"body": "rolandoldengarm tried subscribing parent constructor setting values afterviewinit child components still get error correct way handle based flow change detection cycle error potentially bug", "d": "8/2017"}, {"body": "please would great kind official answer", "d": "8/2017"}, {"body": "looking looks like example using instead trying manipulate contentchildren part component lifecycle updated plnkr aftercontentinit error", "d": "8/2017"}, {"body": "jsmike changed still error even update data inside error occurs far know according angular lifecycle correct right initialize data together fact error nt occur past versions assume bug however would like kind statement development team", "d": "8/2017"}, {"body": "wernerson nt updating data inside unless data available lifecycle hook move logic content children", "d": "8/2017"}, {"body": "jsmike nt help error still occures subscribe state change application received data requested asynchronously", "d": "8/2017"}, {"body": "wernerson plnkr example", "d": "8/2017"}, {"body": "basic sample stackblitz child component emitting event parent component updating local variable get error js console", "d": "8/2017"}, {"body": "found works children static still fails creating children using", "d": "8/2017"}, {"body": "soldiertt need detectchanges", "d": "8/2017"}, {"body": "jsmike ngafterviewinit child component triggered", "d": "8/2017"}, {"body": "soldiertt seems odd looks like separate issue reported", "d": "8/2017"}, {"body": "jsmike setup fairly complex services third party libraries confidential information etc etc unfortunately could nt reproduce bug plunker", "d": "8/2017"}, {"body": "injection changedetectorref worked", "d": "8/2017"}, {"body": "issue carousel need set property carousel item component property known computed parent carousel component items coming work items parent carousel component something like carousel contentchildren itemcomponent carouselitems ngaftercontentinit computations thiscarouselitemsforeach item itemcomponent currentindex gt itemsetpropertyx somecomputedvalue itemx somecomputedvalue course would work well item besides hack would solution use service subject items communicate parent carousel mean would ridiculous would mean items carousel would subscriptions doubles carousels surely ca nt recommended way right often would need set properties components properties ca nt known many cases talking components like rather like carousel tenths hundreds subscription would ridiculous really cool part angular help nt yet discovered ps also tried inject use carousel component item component would expected fix error since well basically saying screw change detection nt actually need please pretty please nt detect changes error still thrown point method nt says", "d": "8/2017"}, {"body": "nt necessary hack may valid way things like example react view update eg changing template bindings problem use magic without really knowing totally valid scenario using proper way", "d": "8/2017"}, {"body": "ghetolay hacky break lifecycle component change detection system evaulating going changedetectorrefdetectchanges route even feels like hack either solutions acceptable suppose live really breaks use viewchild ren contentchild ren modification", "d": "8/2017"}, {"body": "fugwenna hacky break lifecycle component change detection system evaulating nt understand question break lifecycle angular run round cd time async events occurs dom event xhr settimeout etc cd update view hook run cd planned run wont triggered another async event occurs using simplest way trigger could certainly think benefits negligible", "d": "8/2017"}, {"body": "ghetolay referencing comment jsmike threads read matkokvesic really solution causes change occur outside lifecycle hook code example provided nt cause error using angular think using settimeout cause lifecycle hook skipped evaluated normally would", "d": "8/2017"}, {"body": "ghetolay fugwenna method thoughts nt disable change detection completely thus also eliminating error nt understand nt work error thrown independent meaning angular nt really care fact disabled change detection cares changed property set people still argue expressionchangedafterithasbeenchecked bug maybe one definitely bug opinion angular longer care us changing properties set completely disabled change detection especially way parent component child components entire tree basically", "d": "8/2017"}, {"body": "bit lost one problem sure would even common things without triggering exception dev mode instance written control value accessor component encapsulates datepicker feed component empty model passed datepicker internally initialize send back registered function course children modifies model init want want get back initialized model initialization parent datepicker undertand issue would call settimeout trigger change detection use changedetectorref nt like really make code hard read initialize thing separated service service serving technical purpose without business value even sure solve issue", "d": "8/2017"}, {"body": "fugwenna main concern worked broken nt seen anyone angular team chime yet using init functions letting zones take feels like antipattern compared worked previously", "d": "8/2017"}, {"body": "stackoverflow question actually gave elegant solution needed make event emitter child component async", "d": "8/2017"}, {"body": "issue labeled regression comments issue disappointingly quiet official word everyone good job selfhelp techniques love know actually bug new behaviour implemented onwards listed breaking change thus minor release", "d": "8/2017"}, {"body": "mrcroft sure disabling change detection entirely silence exception good path go although theory see shouldcould make sense agree jsmike rosslavery regards little response explanation error message came post without documenation breaking changes however another puzzling piece apparently thrown development mode almost feels like warning interrupting change detection", "d": "8/2017"}, {"body": "im appcomponent div purpose div show busy overlay busy state triggered inside http service class appcomponenthtml html appcomponentts upgrading always get expressionchangedafterithasbeencheckederror service triggers busy state fix simple asynchronous scenario", "d": "8/2017"}, {"body": "stackblitz plunker demo case", "d": "8/2017"}, {"body": "mukunku thanks try", "d": "8/2017"}, {"body": "mlcmlapis slightly changed plunker code exactly plunker nt show issue try upgrade latest see fixed thanks", "d": "8/2017"}, {"body": "hi apologies delay behavior actually working intended realize might unexpected folks let try explain mechanics saveretts plunker good repro walk thanks tldr angular always worked way change detection running top bottom parent child single pass ts component selector approot template class approot constructor public sharedservice sharedservice ts component selector childcomponent template class childcomponent constructor public sharedservice sharedservice ngoninit thissharedservicesomevalue true change detection run approot first check bindings change detect child component single pass rather angularjsstyle keep checking stable parent binding ngif case nt rechecked application inconsistent state development mode actually run change detection twice time runs verifies bindings changed would indicate inconsistent state throws error issue found verify behavior calling repro note error thrown running cd application ends inconsistent state child shown ngif bad thing reason surfaced recently previously router ran number additional change detection checks inserting components inefficient caused issues animations routing especially routeroutlets nested ngifs things behavior fixed caused alreadyincorrect code correctly throw error developer violating one way dataflow would argue typically code violates oneway flow repro incorrect however cases might want behavior fact similar setup angular forms library means need explicitly trigger another change detection run would go back root component check topdown calling achieves though typically better use promise trigger see hope helps", "d": "8/2017"}, {"body": "robwormald error occurring scenarios well sure addresses issue contentchildren directive change values children aftercontentinit without error component throws errors also expected called one init process init functions end getting called something discovered thread created separate issue", "d": "8/2017"}, {"body": "robwormald believe jsmike correct assessment error still thrown scenarios oneway flow coming parent child using contentchild ren viewchild ren acceptable consider said error warning states developer going oneway flow best practice causing application breaking errors since change detection runs production mode real world", "d": "8/2017"}, {"body": "fugwenna really error otherwise leaves view inconsistent state sample rob running telling also quote docs angular unidirectional data flow rule forbids updates view composed hooks fire component view composed really need change anything use one async methods might suited aware comes time writing delay another way even better taking step back see need make change late process see cleaner way solve issue find treat code smell", "d": "8/2017"}, {"body": "thank detailed explanation robwormald still confused child parent data flow still seems work using binding rather see ideas still works without giving", "d": "8/2017"}, {"body": "angular uses checkandupdateview function perform change detection short representation function could look like executed recursively thanks methods also key point angular checks embedded views directives checked updating dom simplify saverett example use following template text already known desugar imagine following structure directive injects routed component viewcontainerref means creates directive initializes two embedded view view let illustrate picture let come back main function angular perform check following order directive checked first remembered method inside called changing angular performs raise error let replace one embedded view inserted checked within angular perform check like way dom property binding wo nt cause error updated calling value main difference structural directive dom property binding", "d": "8/2017"}, {"body": "thank detailed overview alexzuza helpful", "d": "8/2017"}, {"body": "useful accessibility feature", "d": "8/2017"}, {"body": "technique disable tooltips firefox work anymore need fix anyway possible reopen issue", "d": "8/2017"}, {"body": "closing releases far patch confident gone please reopen anything pops", "d": "8/2017"}, {"body": "thing happening might relevant also authguard canactivatechild try set plunkr later today", "d": "8/2017"}, {"body": "scenario reproduced events behave per", "d": "8/2017"}, {"body": "kara discussion regarding validator directives followed somewhere need make decision whether wait angular solution implement something thank", "d": "8/2017"}, {"body": "yikes thanks alerting us daveriedstra looks like refs supposed order setvalue patchvalue valuechanges statuschanges good issue firsttime contributor", "d": "8/2017"}, {"body": "ah saved tnq", "d": "8/2017"}, {"body": "ty", "d": "8/2017"}, {"body": "using something like typescript describe autocompletecomponent gt beforeeach async gt testbedconfiguretestingmodule declarations testautocompletewrappercomponent lt providers imports appmodule routermoduleforroot approutes mdchipsmodule mdiconmodule formsmodule mdinputmodule wrapper test autocomplete component typescript class testautocompletewrappercomponent viewchild myac myautocomplete autocompletecomponent items new autocompleteitem salt new autocompleteitem sugar new autocompleteitem alien new autocompleteitem bread onchange result le problem test module declaring wrapper", "d": "8/2017"}, {"body": "awesome snapshot testing", "d": "8/2017"}, {"body": "best solution far well based many comments top something note input property nt initialized view ready operations need happen ngoninit constructor may store value use durring ngoninit variableattribute example", "d": "8/2017"}, {"body": "thanks fix know available version", "d": "8/2017"}, {"body": "nt look like fix made stable release yet delegating function used temporary workaround typescript export function myfunction arg return arg export function arg return myfunction arg within aot metadata compilation myfunction myfunction value throws recursion error myfunction value succeeds nt tested extensively seems working far", "d": "8/2017"}, {"body": "working getting cherrypicked available already master", "d": "8/2017"}, {"body": "matsko updates issue seems like major bug opinion would think received high priority", "d": "8/2017"}, {"body": "sorry delay", "d": "8/2017"}, {"body": "ref", "d": "8/2017"}, {"body": "version issue", "d": "8/2017"}, {"body": "come clean install new project", "d": "8/2017"}, {"body": "still downgraded working", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "tried works", "d": "8/2017"}, {"body": "problem changing back solved", "d": "8/2017"}, {"body": "getting issues angular ts ngbootstrap distngfactorynodemodules import angularcore syntaxerror unexpected token import", "d": "8/2017"}, {"body": "problem ngbootstrap ts", "d": "8/2017"}, {"body": "alihabibzadeh loicsalou appear issue one submit new bug steps attached reproduce link git repo", "d": "8/2017"}, {"body": "deep gt gt gt deprecated alternatives style party component solution available right issue ca nt modify child item since party thanks", "d": "8/2017"}, {"body": "use also deprecated alternative provided time needed", "d": "8/2017"}, {"body": "need make loading module condition route make scenario firstofall route matching think appropriate place canactivatechild interceptor fires canload path canactivatechild rootredirect component appcomponent children path auth component authcomponent path auth role component authcomponent path app canload rootredirect loadchildren modulesadminadminmodule adminmodule could manager user module condition", "d": "8/2017"}, {"body": "good thing u use inside canload handle redirect address field blinking path canactivate rootredirect component appcomponent pathmatch full path auth component authcomponent path auth role component authcomponent path app canload rootredirect loadchildren modulesadminadminmodule adminmodule canload route route thisauthserviceisloggedin thisselectmoduletoload thisrouternavigatebyurl windowlocationpathname return false", "d": "8/2017"}, {"body": "ivanpadavan works user entered url load application app running code issues navigate request hit load path loaded yet navigation sent browser fix common problem", "d": "8/2017"}, {"body": "phelanharris think issure solve problem later", "d": "8/2017"}, {"body": "werts never able solve problem opted use routereusestrategy since nt work use case implemented shared service cache data tab initialize component data opened ideal since like switching tabs instant works", "d": "8/2017"}, {"body": "sounds amazing", "d": "8/2017"}, {"body": "exactly target example main component scan certain folder include modules inside folder finding ways execution time dinamically idea build something like plugin system add new module folder functionality include way build time use something like webpack gulp load dinamically modules certain folders way scan done webpack gulp angular code", "d": "8/2017"}, {"body": "would solve imo prematurely closed tytskyi feature would able generate minimal dependency graphs compile time modules without configuration thus ngc could inject declarations module bundle shared dependencies intelligently generated shared modules builds dependency graphs multiple root modules natural import components used template initially realizing nt need declaration array root module source truth regard strongly favor would eliminate confusing class modules nt need exist internalonly shared modules promote modules way define exposed components public module api components", "d": "8/2017"}, {"body": "seems work regards plunker please notice added changedetectorref let angular magic find changedetecorref import component viewchild changedetectorref angularcore import ngform angularforms export class person firstname string component selector myapp templateurl appcomponenthtml export class appcomponent model person new person constructor protected changedetectorref changedetectorref viewchild ngform myform ngform submit thismyformonsubmit null clearvalues thismyformresetform load thismyformresetform thischangedetectorrefdetectchanges thismodelfirstname john", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "bourey appears following two options fix issue close issue let know nt work look detail exact issue", "d": "8/2017"}, {"body": "wite detaits first use", "d": "8/2017"}, {"body": "using", "d": "8/2017"}, {"body": "encountered problem serval months ago build angular library finally use workaround resolve issuechange entry file name index name eg change indexts maints change indexdts maindts trick", "d": "8/2017"}, {"body": "workaround proposed merrillpaul easy implement especially helpful using third party libraries", "d": "8/2017"}, {"body": "wrote rollup plugin fix temporarily looking forward see guys fix", "d": "8/2017"}, {"body": "agree current behavior unexpected inconvenient especially working modals lazy loading modules chosen use modals avoid dealing", "d": "8/2017"}, {"body": "status animating routes different feature modules seems unwieldy", "d": "8/2017"}, {"body": "yes issue found another ugly workaround ugly solution important part becuse hope helps someone", "d": "8/2017"}, {"body": "ghost example error message works adding nt seem break anything provide repro case please", "d": "8/2017"}, {"body": "still present angular angular cli", "d": "8/2017"}, {"body": "prefix parameter typescript compiler nt complain matter taste nt think bad approach tells developers parameter caller giving using also makes easy debug value want", "d": "8/2017"}, {"body": "problem node modules compiler complains fri aug pm sean g wright notifications githubcom wrote prefix parameter typescript compiler doesnt complain matter taste nt think bad approach tells developers parameter caller giving im using also makes easy debug value want appcomponentts export class appcomponent submitrequest event mouseevent consolelog ok appcomponenthtml console ng build prod date hash time chunk polyfills kb initial rendered chunk main kb initial rendered chunk styles bytes initial rendered chunk vendor kb initial rendered chunk inline kb entry rendered receiving commented reply email directly view github mute thread", "d": "8/2017"}, {"body": "would suggest additional method uses modify existing errors object would ensure backwards compatibility since users might depending errors get overwritten deleting errors think would make sense set error false example errors object set control would valid would require modifying check item errors object instead checking errors object exists happy create pr functionality others agree", "d": "8/2017"}, {"body": "methods shown afaict", "d": "8/2017"}, {"body": "like native html forms disabled control values serialized group value form though retain individual value intended behavior like get full group value including disabled controls method use purpose", "d": "8/2017"}, {"body": "understanding correctly like use native form validation reactive forms without using native validation attributes eg required one option reactive forms apply attributes dom builtin validators automatically existing proposal let track issue", "d": "8/2017"}, {"body": "builds failing unit tests ran upon code commit command run build step ng test sourcemapstrue watchfalse singleruntrue browsersphantomjs however running ng test shows unit test failures everything passes", "d": "8/2017"}, {"body": "adrienboulle work seo better user experience case since brings html rendered server http call client client data disappear http call fired blinks app http call fast empty placeholder http call takes long full client rehydration would solution indeed", "d": "8/2017"}, {"body": "news issue exactly behavior", "d": "8/2017"}, {"body": "hi ocombe opened new issue wanted check related one anyway set locale jit via flag currently stands want able set locale using flag need use makes development builds really slow ps sorry might related angularcli since pass flag thought might ask", "d": "8/2017"}, {"body": "parameter works aot cli sorry reason aot cli rewrites main bootstrap file add parameters locale jit case aot development go faster new aot watch mode finished team works right", "d": "8/2017"}, {"body": "aot development go faster new aot watch mode finished great know thanks reply github issue track progress case workaround rewriting main bootstrap file well thanks", "d": "8/2017"}, {"body": "sure seems outdated maybe tbosch issuepr follow watch mode", "d": "8/2017"}, {"body": "hermagrini watch mode ship angular", "d": "8/2017"}, {"body": "link appears broken", "d": "8/2017"}, {"body": "file moved", "d": "8/2017"}, {"body": "erlloyd makes good point op tested tagging vicb vsavkin mgechev result result using get file details see file sizes much reasonable false advertising think bug file size counts printed std accurate numbers running open another issue", "d": "8/2017"}, {"body": "seeing large file sizing well running ng serve", "d": "8/2017"}, {"body": "spent time care mention fkolar saved well many thanks", "d": "8/2017"}, {"body": "hi ran issue related issue textmask says one comment possible workaround gt cant beleive solution happy find issue problem im really afraid maybe possible definitley need one controlvalueaccressor control could someone kara toxicable clarify", "d": "8/2017"}, {"body": "nt think valueaccessors make much sense understand use case op independent accessors combine point make final output however think conceptually thinking accessors incorrectly accessor connector native dom element control class example accessors first issue ones goes first lets say writevalue functions lets say write value call get call get different values given could adjust functions accommodate values many situations could happen produce unexpected result multiple accessors without design could fix kinds issues multiple accessors nt good idea kinds use cases", "d": "8/2017"}, {"body": "hi toxicable thx answer may reconsider approaches hooking view model value adjustments ran lot different problems controlvalueacessor let outline one little problem many created ie lib angularformatterparser form current point view consider best angular way implement fromatterparser angular facing problem use directive ie input lock lot things ie using lib combination material design modules many libs actually would want use angularalternativevalidation together formaterparser lib could suggest clean angular way solve problem fact believe may miss understand use controlvalueaccessor could clear mind topic could happy currently best michael", "d": "8/2017"}, {"body": "thanks toxicable answer coming say something similar current control value accessor system really made one source truth processes like final write value said gentios biophoton point need solution allowing multiple formatters parsers form control open issue implementing real formattersparsers system core angular forms definitely todo list start design intimately connected reactive validator rewrite inprogress going close issue value accessors working intended please feel free continue discussion formatters etc existing issue", "d": "8/2017"}, {"body": "angular thing regarding user agent bug uglify perhaps building cli otherwise would number like different numbers time", "d": "8/2017"}, {"body": "hi lot users currently reporting using application longer period clicking lot detail screens application becomes really unresponsive suspect issue thing help issue", "d": "8/2017"}, {"body": "least found shoulddetach return false instead true routing component destroyed returning true master component actually reused later user first browses another context application results master component destroyed afterwards way force destruction component manually handle snapshot", "d": "8/2017"}, {"body": "also think names methods somewhat confusing returning boolean might exact opposite one would naturally expect maybe documentationcomments abstract methods reusableroutestrategy could clarifying", "d": "8/2017"}, {"body": "names methods exactly shoulddetach asks snapshot detached router means router longer handle snapshot stored calling storemethod store router asked using shoulddetachmethod returned true storemethod called immediately time later router sends nullvalue delete entry storage need take care memory angular handle shouldattach asks snapshot current route already stored return true storage contains right snapshot router reattach snapshot routing retrieve load snapshot storage called shouldattachmethod returned true shouldreuseroute asks snapshot current routing used future routing snapshot detached routing reattached later memory leak snapshot detached routing never reattached router developer take care memory management could find support angular documentation part solution sure objects deleted memory objects receive angular lifecycle callback ondestroy", "d": "8/2017"}, {"body": "hi ofriedrich seems like proper documentation reusableroutestrategy interface agree memory leaks responsibility developer guess memory leak case also right name happening kinds components listen scroll events etc never unsubscribe ngondestroy called subscription leakage caused problems long run deactivateoutlet seems like good fix wonder somehow part detachedroutehandle standard method would useful least think mainly misusing strategy misunderstood methods comment clarifies lot time issue became pressing ditched strategy entirely moved custom solution stores state master component restores required navigating detail master context thanks help", "d": "8/2017"}, {"body": "soon snapshot reattached router angular fire lifecycle callbacks missed snapshot detached router reattached later components receive callback never die think could problem application run memory leaks", "d": "8/2017"}, {"body": "right components nt need reattaching know future rout event going master detail back detail master master nt need reattaching throw away handle enough", "d": "8/2017"}, {"body": "nearly problem know snapshot needed reattached later time angular asks reusestrategy clean manually", "d": "8/2017"}, {"body": "ofriedrich think may got something misunderstood thanks inspiration talk based angular see use case empty map mostly destroyed componentref manually ts deactivateallhandles tslint disablenextline forin const key thishandlers thisdeactivateoutlet thishandlers key thishandlers extra tracking side route events call right moment hacky route structure looks like dashboard subtree needs custom route reuse strategy abouta aboutb", "d": "8/2017"}, {"body": "feature request also using attribute directives way right downgrade directive ie want add focus directive way kind scenario hybrid app thinking implement able use viewchild myinputfield myinputfield elementref myinputfield always coming undefined workaround code accessing like thiselementrefnativeelementqueryselector input focus", "d": "8/2017"}, {"body": "try ngadapter", "d": "8/2017"}, {"body": "facing issue", "d": "8/2017"}, {"body": "click event works made events move register link point move like navigated first click since nt issue angular mind closing", "d": "8/2017"}, {"body": "toxicable mean shall move register link works true please explain line even tried placing link form even fails worked know click event thing happen simple jqueryjavascript solution angular", "d": "8/2017"}, {"body": "please explain line look plunkr move register link wont moved validation works think would work", "d": "8/2017"}, {"body": "add plunker repro hard know going description", "d": "8/2017"}, {"body": "new downgrademodule take care running angularjs outside angular zone docs coming still consideration whether make configurable angularjs runs inside outside angular zone closing feel free continue discussion", "d": "8/2017"}, {"body": "progress", "d": "8/2017"}, {"body": "ghost sounds like looking updateon submit hook added check pr info", "d": "8/2017"}, {"body": "confirm issue using vscode well using property tsconfig along although think root issue resolve anything imported locations defined baseurlpaths", "d": "8/2017"}, {"body": "also issue angular version node version platform linux vscodde angular language service plugin angular language service", "d": "8/2017"}, {"body": "still present angular vscode errors related symbols declared property file eta thanks", "d": "8/2017"}, {"body": "encounter issue also spend hours finding reason urlsearchparams name different types ts compiler give error", "d": "8/2017"}, {"body": "allowing name different lexical scope natural languages nt error since ambiguity angular indeed bad naming", "d": "8/2017"}, {"body": "trotyl requestoptionsargs following params field definition angular type however ts compiler give error object params set windowurlsearchparams cast requestoptionsargs also httpget accept object parameter", "d": "8/2017"}, {"body": "almost everything allowed except primitive types", "d": "8/2017"}, {"body": "thanks helped", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "duplicate keeping contains info", "d": "8/2017"}, {"body": "closed", "d": "8/2017"}, {"body": "thanks rusev example please keep github issues bug reports feature requests better avenues troubleshooting questions stack overflow gitter mailing list etc see policy creating issues", "d": "8/2017"}, {"body": "ca nt work lazy loading module", "d": "8/2017"}, {"body": "please fix since breaking change otherwise going wait months even painful", "d": "8/2017"}, {"body": "rehbeindieter nice simple workaround", "d": "8/2017"}, {"body": "rehbeindieter thanks simple workaround get console error use though get following error leave field empty go back add character expressionchangedafterithasbeencheckederror expression changed checked previous value null current value true", "d": "8/2017"}, {"body": "jasonaden confirm issue closed think fixed", "d": "8/2017"}, {"body": "naomiblack yep closed", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "still understand jit wirks aot nt without add explicitly even empty ca nt go without explicit add thanks", "d": "8/2017"}, {"body": "still running problem try changing button attribute type something reset seems firefox picks attribute clears form button clicked tested firefox", "d": "8/2017"}, {"body": "goonmeister confirmed setting type reset indeed leaving empty solves issue testing firefox fedora shell", "d": "8/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "8/2017"}, {"body": "issue still present get update formarray behavior seems bug based documentation disable method abstractcontrol disables control means control exempt validation checks excluded aggregate value parent expected formgroupformarray controls disabled value formgroupformarray empty actual nested controls disabled formgroupformarray disabled value equal rawvalue aggregation nested disabled controls implementation formarray instead filter control gt controlenabled thisdisabled expect something like filter control gt controlenabled amp amp thisenabled plunker disable input form value contains input value disable input form value contains input input value instead empty", "d": "8/2017"}, {"body": "looks fixed httpclient api", "d": "8/2017"}, {"body": "nt think httpclient api fixed know might seem unrelated use interceptor customly handle httpevents throw custom error still problem far backtrace real problem case httpclient httperrorresponse class instance error causes viewwrappeddebugerror call tostring httperrorresponse causes httperrorreponse logged object object needed elaborate actual code", "d": "8/2017"}, {"body": "apologies yes tegyr right httperrorresponse instanceof error however tests seem indicate viewwrappeddebugerror applied observable yields error immediately instance circuit breaker cached error response observable yields error asynchronously usual case see viewwrappeddebugerror applied tl dr bug occurs rare cases workarounds exist", "d": "8/2017"}, {"body": "bedagmoo absolutely right tested quick dirty making code run asynchronously viewwrappeddebugerror applied kind understand reasoning shame general logic nt least documented anywhere", "d": "8/2017"}, {"body": "krabovm problem put formsmodule httpmodule declaration instead imports thanks krabovm great", "d": "8/2017"}, {"body": "also facin error issue comes included library uses dont know reflectmetadata seems messing angular components metadata lt undefined also replacing reflect polyfills doesnt fix check replacing reflect dependency library fix problem dont understand component metadata removed removing annotations external library fix problem really bizarre", "d": "8/2017"}, {"body": "dealing issue hybrid app actually noticed explicitly import importing anything else fixed issue well removing package altogether try importing package import third party library anything else application", "d": "8/2017"}, {"body": "fact issue third party library override reflection namespace simple thanks thou", "d": "8/2017"}, {"body": "windows env ntlm got problem cors resolve removing headers options feels like adding headers withcredentials gets overruled using http gives works", "d": "8/2017"}, {"body": "happen chrome", "d": "8/2017"}, {"body": "word matsko please look plunker directly issue still exists latest version", "d": "8/2017"}, {"body": "updated plunker issue still present", "d": "8/2017"}, {"body": "issue still present updated plunker please take look matsko thanks", "d": "8/2017"}, {"body": "bigjetplane mentioned working expected support common use cases want turn native validation back possible", "d": "8/2017"}, {"body": "still occurring", "d": "8/2017"}, {"body": "cc jasonaden", "d": "8/2017"}, {"body": "none solutions worked still get error", "d": "8/2017"}, {"body": "delete nodemodules page download", "d": "8/2017"}, {"body": "slightly mostly different give two cents using angular component main app module wanted use local nonnpm module mistakenly added local module ngmodule import definition gave error refactored definition declarations exports worked like charm hth", "d": "8/2017"}, {"body": "could show code", "d": "8/2017"}, {"body": "omouse sure original appmodule definition javascript import sharedcomponent sharedsharedcomponent ngmodule declarations sharedcomponent export class appmodule updated appmodule javascript import sharedcomponent sharedsharedcomponent ngmodule exports sharedcomponent export class appmodule localmodule javascript import sharedcomponent appsharedsharedcomponent ngmodule declarations sharedcomponent exports sharedcomponent export class localmodule", "d": "8/2017"}, {"body": "robwormald followed example creating shared lib working project tried create shared lib using import demo app works fine however import new lib existing project getting error please add ngmodule annotation provide insight filed issue", "d": "8/2017"}, {"body": "still getting error uncaught error unexpected value shareservicemodule imported module appmodule please add ngmodule annotation shared module service ui component shared service module local module", "d": "8/2017"}, {"body": "playground sure works component nt export service appmodule nt add service declarations exports module nt work may try opening new ticket angular devs look issue closed probably ignored guess", "d": "8/2017"}, {"body": "another workaround instead recreating form", "d": "8/2017"}, {"body": "vikerman still getting delay transition make add delay longer get flicker styles still removed early", "d": "8/2017"}, {"body": "spiffyjr possible share small github repro difficult say exactly could problem otherwise please open different issue", "d": "8/2017"}, {"body": "yeah itsnotvalid right dzmitryshylovich solution nt work found way reference formarray typescript formgroup formgroup formarray formarray initform thisformarray new formarray init form array push formgroups insert form array thisformbuildergroup forms formarray use way nt need casting anymore", "d": "8/2017"}, {"body": "closed feature bug implies good practice solution solution pkozlowskiopensource answer issues us mere mortals common usecases nt interest", "d": "8/2017"}, {"body": "thinking angular modern easy framework unable activate focus next field validating enter writing lines directive much work", "d": "8/2017"}, {"body": "situation app component injecting shared service observable value app subscribes pipe ngonchangesngoninit component causes operation emits new value observable currently causes expressionchangedafterithasbeencheckederror since observable resolved shown app template component instantiated triggers emit case like covered issue simply writing value trackerservicecountasync cause exception nt update throws exception", "d": "8/2017"}, {"body": "instance necessary know whether request aborted potentially attempt retry request", "d": "8/2017"}, {"body": "thanks johnchristopherjones spent hour debugging even reinstalled angular solved", "d": "8/2017"}, {"body": "aliceprincess u specific solution please exactly issue", "d": "8/2017"}, {"body": "hmm results using angularcli according filipesilva problem belongs angular came modeldts states well mean use invalid string code several times reimplement interface risking applicationwide regression version upgrade consider bad practice would like use constants instead understanding resolved issue guess sittingbool toxicable rokerkony amostech would also agree kara dzmitryshylovich probably new arguments debate would mind taking consideration", "d": "8/2017"}, {"body": "simply variable holds string simply use use need export going change anytime since would breaking change without appropriate deprecation period allowed broken according deprecation policy", "d": "8/2017"}, {"body": "anything personally think status constants removed types inline eg help ide support enforce decision made issue", "d": "8/2017"}, {"body": "toxicable yep opinion inline type definition would good compromise ide would help highlighting wrong values transpiler would throw error would need export constants anymore change like would lead cleaner user code instantly would even reveal bugs user code deployed", "d": "8/2017"}, {"body": "thanks mentioning think meant toxicable right", "d": "8/2017"}, {"body": "actually pr exact thing", "d": "8/2017"}, {"body": "tomically yep sorry toxicable awesome", "d": "8/2017"}, {"body": "updates regarding", "d": "8/2017"}, {"body": "alexzuza thanks posting still need add dynamic components sharedmodulets would able change runtime instance compiling components external resource", "d": "8/2017"}, {"body": "patch believe fixed issue test provided plnkr runs atop head build code see operates expected sorry annoying bug took long fixed", "d": "8/2017"}, {"body": "update", "d": "8/2017"}, {"body": "closing duplicate", "d": "8/2017"}, {"body": "geratarra exactly could mean copy code ngcomponentoutletts paste ngcomponentoutletts file suppose nt enough right would really better copying pasting code directive separate angular source call something different declare local project merged go change use directive supplied angular", "d": "8/2017"}, {"body": "ended using library worked well use case", "d": "8/2017"}, {"body": "yes actually ended using works like charm", "d": "8/2017"}, {"body": "seems triggers form focused browser native javascript code angular triggers validation form fields would assume actually angular bug", "d": "8/2017"}, {"body": "think root problem need explicitly pass certain type able extend http service nt expect get provider connectionbackend using class provider argument list sure right read code think provides provides expect able ask correct one get passed", "d": "8/2017"}, {"body": "provider provider provides nt provide", "d": "8/2017"}, {"body": "think use instantiate instead provide di token enable others create services extend asking however using workaround solve problem avoiding copying servermodule codes factory function custom http service instead asking ask service instantiated correct browser server using protected member get hold correct course far ideal least less footprint previous solution", "d": "8/2017"}, {"body": "alirezamirian right track regards working unfortunately custom implementations supported use case angular instantiation highly fragile ca nt override internal pieces via di continue working provide via factory instantiates directly alternatively could switch deprecated take advantage interceptors instead wrapping interface", "d": "8/2017"}, {"body": "mean something like article", "d": "8/2017"}, {"body": "read article runtime compilation need karlxol said solution complex heavy compiled module need reference third necessary modules etc also nt work well aot tested personal need straight simple solution dynamically set template component way break aot behavoir want btw nt think dynamic content content component already exist module app reference display user selection also content component unknown runtime generate user input remote configurations", "d": "8/2017"}, {"body": "would nice able provide promise observable template component decorator could templates provided backend", "d": "8/2017"}, {"body": "hi currently also looking way compile custom components runtime use case preview html email contains lot data edited using angular form currently use mustache templates contain full web page replace variables place content iframe update iframe dimensions works ok results flickering whole iframe contents get replaced html templates selected users preexisting selection provided third party directly edited users ca nt compile using aot also interested solutions currently toying idea would bypass angular mostly replace using pure js replace stuff hand forces us implement angular designed solve would great option even means would lose ability aot maybe separate project could code apps using aot add angulardynamictemplates would add capability let remainder app work aot version first would jit repackaged user friendly given effort could evolve something totally else think", "d": "8/2017"}, {"body": "workaround created directive pass disabled state something like import directive docheck optional angularcore import ngcontrol angularforms directive selector formcontrol formcontrolname export class reactivedisableddirective implements docheck constructor optional private control ngcontrol experienced angular might better way seem work", "d": "8/2017"}, {"body": "hi progress stefdelec exactly issue described browser redirect page angular gets control unfortunately happen", "d": "8/2017"}, {"body": "browser act anything solutions standard temporary workaround instead get windowreplace angular implemented interceptor however nt like solutions change next month server side implementation intead get go post hope helps", "d": "8/2017"}, {"body": "stefdelec helped however noticed event nt fire http code redirects end getting sent handler code", "d": "8/2017"}, {"body": "forgotten intercept http codes pretty much hack correct solution rework web services return http codes using existing web services refactored something like export class redirecthttpinterceptor implements httpinterceptor private readonly logopartialurl helloworldlogontolowercase intercept req httprequest next httphandler observable gt return nexthandle req event gt event instanceof httpresponsebase const response event httpresponsebase response amp amp responseok amp amp responseurl amp amp responseurltolowercase indexof thislogopartialurl gt const querystringindex responseurlindexof const loginurl querystringindex amp amp querystringindex gt responseurlsubstring querystringindex responseurl consolelog user logout detected redirecting login page loginurl windowlocationhref loginurl", "d": "8/2017"}, {"body": "already implemented", "d": "8/2017"}, {"body": "one people refractory typescript trend suits better tastes find dart much better typescript problem code angular apps without going typescript problem currently impossible remove jit compiler final bundle compiler really heavy looking way drop jit compiler angular app supporting aot would definitely good feature trivial might think work gradually abandoning angularjs favor vuejs know lot developers switching angularjs react problems mentioned time weight generated code obligation use typescript get best framework supporting aot could improve adoption angular", "d": "8/2017"}, {"body": "cedx guess requesting two different topics", "d": "8/2017"}, {"body": "trotyl request effectively aot js generating code specifically thanks rectification", "d": "8/2017"}, {"body": "klinki define pipe property", "d": "8/2017"}, {"body": "fyi also tried reprodce without luck using angular latest", "d": "8/2017"}, {"body": "issue already made great efforts finish itat present lazy loading really impossible achievethere blog routereusestrategy lazy loading ca nt understand finish ityou read maybe get inspiration itlast least got plz tell vsavkin tettusud", "d": "8/2017"}, {"body": "coming along way", "d": "8/2017"}, {"body": "status", "d": "8/2017"}, {"body": "facing exact issue mentioned cyrilletuzi typescript angular go away restart", "d": "8/2017"}, {"body": "bhagatparwinder nt go away restart different issue report separate issue steps reproduce", "d": "8/2017"}, {"body": "case webpack post martinwegner bottom issue could help angularangular", "d": "8/2017"}, {"body": "lohiarahul exactly", "d": "8/2017"}, {"body": "hi since seems real update issue possible quick fix styles one look thanks", "d": "8/2017"}, {"body": "hi issue bugging long time think finally found pattern avoiding receiving problem seems essentially synchronization issue approach one use ngrx start managing state objects handling getting sort issue implement find many tutorials available internet imo approach good managing state many objects across many components otherwise adds development overhead need evaluate truly worthwhile approach two create simple service manages state object using behaviorsubject approach check import behaviorsubject rxjsbehaviorsubject import injectable angularcore injectable export class securitylayoutstateservice lets say root component responsible set basic layout component multiple subcomponents basically different content reuse root structure button add new appear listing content hide edit mode title add new omitted brevity showing page pagingcurrentpage async pagingtotalpages async total items pagingtotalitems async content received inside modifies value throwing annoying exception seeing modified showbutton following component moduleid moduleid selector appsecurity templateurl securityrootcomponenthtml export class securityrootcomponent implements oninit constructor private layoutstateservice securitylayoutstateservice annoying message longer showing load stays correct whenever need change state button simply inject service use setter whatever component subscribed observable get update hope help cheers", "d": "8/2017"}, {"body": "angular works", "d": "8/2017"}, {"body": "henriquecustodia appmodule", "d": "8/2017"}, {"body": "offense implementation maxlength validator seems little bit redundant considering fact browser limits user type characters specified attribute never kicks miss use case though angularjs directive called circumvent dilemma figured could help ngmaxlength angular angular utilizes existing validator implementation", "d": "8/2017"}, {"body": "bug really annoying using forroot library published npm discovered error using qdouble starter question angular team recommended workaround official fix also problem resolved next major release thank", "d": "8/2017"}, {"body": "giovannicandido sure working aot mode method changed fact acts methods like simple return statement logic inside exactly work want method configure services use example angular router package see registered used dependency", "d": "8/2017"}, {"body": "tytskyi used injectiontoken receiving error always qdouble starter error error encountered resolving symbol values statically calling function injectiontoken function calls supported consider replacing function lambda reference exported function resolving symbol keyboardconfiguration resolving symbol modalgallerymoduleforroot resolving symbol appmodule resolving symbol appmodule code export const keyboardconfiguration new injectiontoken keyboardconfiguration ngmodule imports commonmodule declarations angularmodalgallerycomponent upperbuttonscomponent gallerycomponent directives exports angularmodalgallerycomponent export class modalgallerymodule static forroot config keyboardserviceconfig modulewithproviders return ngmodule modalgallerymodule providers provide keyboardservice usefactory setupkeyboardservice deps keyboardconfiguration provide keyboardconfiguration usevalue config config export function setupkeyboardservice injector keyboardserviceconfig return new keyboardservice injector", "d": "8/2017"}, {"body": "could try reorder providers first provided used dependency note served like linked package using might want try solution add main project library", "d": "8/2017"}, {"body": "tytskyi tried seems ok changed order downgraded npm use yarn qdouble starter seems ok npm issue open issue repository probably problem caused angular thank u support", "d": "8/2017"}, {"body": "dzmitryshylovich could specific limitation design vs bug severe issuelimitation terms able create dynamic components strange able project content component component able recognize", "d": "8/2017"}, {"body": "progress", "d": "8/2017"}, {"body": "like see surprised angular offer functionality since one basic functionalities switch statements languages rewrite code ngif statements edit oh wait use crazy nested construction else blocks replace default case", "d": "8/2017"}, {"body": "would sufficient replace packagescommonsrcdirectivesngswitchts guess nt simple meantime going try boolean evaluation trick mentioned kanlidy thanks", "d": "8/2017"}, {"body": "upgrading typescript solved issue", "d": "8/2017"}, {"body": "added feature allow applications delay validation submit see pr", "d": "8/2017"}, {"body": "problem still exist angular actually worse select box contains one element option looks like selected although nt model select required possible get form valid state made another plunker shows reproduce template based forms please note problem occurs option values set delayed using makes show unselected item selected interesting example janaleible set option values immediately bug still shows", "d": "8/2017"}, {"body": "templateonly workaround far worked quite well html option formvalueselect null false", "d": "8/2017"}, {"body": "unfortunately ie still happy updated plunker ie shows two options still first real option shown selected possible make selection removing disabled attribute seems fix", "d": "8/2017"}, {"body": "seems issue template driven forms working solution using model driven approach", "d": "8/2017"}, {"body": "yes model driven version works ie well although currently option us workaround without disabled already fine application thanks hints", "d": "8/2017"}, {"body": "vaaceph workaround inputs using placeholder text ie would interpret field dirty triggering errors show touched untouched properties still working correctly used touched extra validation error message downside need user able click submit button nt leave field wo nt see error form would nt valid need enable submit button allow submit valid", "d": "8/2017"}, {"body": "workaround override default behavior check value changes", "d": "8/2017"}, {"body": "hi guyshaanan new updatesworkarounds f\u00fcr problem best michael", "d": "8/2017"}, {"body": "problem angular", "d": "8/2017"}, {"body": "dzmitryshylovich yes still continues", "d": "8/2017"}, {"body": "angular remains issue", "d": "8/2017"}, {"body": "jmcclanahan still understanding many thanks suggestionsit seems error occured thiscomponentfactoryresolverresolvecomponentfactory", "d": "8/2017"}, {"body": "dunos u give hand suffered issure weeks really headache", "d": "8/2017"}, {"body": "werts need understand whenever navigate lazy loaded route activated route spawn child injector contains entrycomponents lazymodule global modalservice defined appmodule application root injector componentfactoryresolver know new entrycomponents lazymodule one ways solve issue get instance complementfactoryresolver lazymodule component somehow tell modalservice hey use injectorcomponentfactoryresolver render wanted entrycomponent seems bit hard understand", "d": "8/2017"}, {"body": "renatoaraujoc thanks explain use case want load component link thats say click menu left sidebar retrieve module lazyloaded module create dynamic component want build tablike app right main content area component content click tab trigger content showor solution building tablike app via anyway lazyload component never init tell sevice componentfactoryresolver app appmodule contains coremodule contenttabmodule used load tabset belongs coremodule creating component handled contenttabmodule service component directive pipe click menu link contenttabservice create dynamic component menu paramsi seen trunk use webpack loaded network paneland want create component demonstated lazyload module", "d": "8/2017"}, {"body": "renatoaraujoc get instance complementfactoryresolver lazymodule component think much difficult lazymodule component never init wrong", "d": "8/2017"}, {"body": "werts check conversation jmcclanahan talked something similar toolbar", "d": "8/2017"}, {"body": "dunos cant understand example jmcclanahan think suffer samethe lazyload component never init thistoolbarservicereceivecontext called lazyload module", "d": "8/2017"}, {"body": "werts load main component lazy module routes component one calls aux service injector componentfactoryresolver", "d": "8/2017"}, {"body": "dunos thanks u give hand convenient use case want lazyload module link click create dynamic componentis possible", "d": "8/2017"}, {"body": "werts yes possible look starting point", "d": "8/2017"}, {"body": "ok try thx mlcmlapis", "d": "8/2017"}, {"body": "werts et al recommend take support thread another channel stackoverflow gitter might suitable subscribed issue sure many others generating lot noise right getting little offtopic plus side great see helpful community", "d": "8/2017"}, {"body": "case somebody comes across issue also needed add dependency injected values header values requests works typescript import injectable angularcore import requestoptions requestoptionsargs headers angular export class defaultrequestoptions extends requestoptions constructor options requestoptionsargs super options private xauthtokenheadername xauthtoken merge options requestoptions const newrequestoptions supermerge options injectable export class securityawarerequestoptions extends defaultrequestoptions constructor super headers new headers public set xauthtoken xauthtoken string valueholderxauthtoken xauthtoken public get xauthtoken string return valueholderxauthtoken merge options requestoptions return supermerge options workaround fact angular reinstantiates requestoptions internally post requests therefore setting property work resort using static property valueholder class class valueholder static xauthtoken string", "d": "8/2017"}, {"body": "ccrowhurstram thank posting issue current patch nt fully fix issue made new pr fix one test idea work", "d": "8/2017"}, {"body": "excellent jialipassion thanks digging saves spam issue angular release", "d": "8/2017"}, {"body": "ccrowhurstram nt one hitting glad see getting looked", "d": "8/2017"}, {"body": "please wait next release post load new", "d": "8/2017"}, {"body": "ccrowhurstram new released test repo worked load patch npm install zonejs add", "d": "8/2017"}, {"body": "brilliant jialipassion", "d": "8/2017"}, {"body": "case still confusion plnkr describe problem see query params striped url app load ideal go github using would expect redirect ignore everything go please correct misinterpreting issue struggling well", "d": "8/2017"}, {"body": "thanks adding import appmoduleclient appmoduleserver worked", "d": "8/2017"}, {"body": "trouble rjsteinert marcidius spec add header import well test bed import hope helps import reactiveformsmodule angularforms describe addrackaveragescomponent gt let component addrackaveragescomponent let fixture componentfixture beforeeach async gt testbedconfiguretestingmodule imports reactiveformsmodule declarations addrackaveragescomponent compilecomponents", "d": "8/2017"}, {"body": "feature available angular multiple resolvers would run concurrently", "d": "8/2017"}, {"body": "problem using frozen objects redux like state management developer uses twoway databinding somewhere assign fail silently tydux wants prevent usage twoway databinding without error reporting misuse produce bugs instead improve code quality plans change", "d": "8/2017"}, {"body": "setup app routes eventsmodule routes note two named outlets assets requesters assetsmodule routes requestersmodule routes expected behavior appears corresponding named outlets outlets becomes empty found ugly workaround works navigate route shows children components expected throws error refresh page route eg workaround setup eventsmodule routes assetsmodule routes requestersmodule routes note empty routes children duplicate outlet routes help right workaround appreciated thanks advance", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "im following dzmitryshylovich instruction end got error works fine wrong using usevalue instead usefactory", "d": "8/2017"}, {"body": "alternatively really want migrate angular router ui router achieve interoperability making top level sibling providing angularjs bootstrap redirecting unknown url state empty view ui router manually calling custom directive navigation tried sketch details sure well would scale larger application although restriction angularjs states angular routes common layout probably nogo many devs", "d": "8/2017"}, {"body": "yo tengo el mismo problema los parametros llegan en null al hacer el requestbodyvariable", "d": "8/2017"}, {"body": "include filesaver shows icon download save file backend spring downloadfile observable", "d": "8/2017"}, {"body": "behavior happens angular version ie form gets submitted page refresh null reference exception chrome working fine thanks", "d": "8/2017"}, {"body": "nikitayaroshevich nice catch case shows error message console everything seems work fine using works every component one shows error radio usefull try reproduce error maybe least case something relative formarray may handle radio list", "d": "8/2017"}, {"body": "oh god express gratitude fix ghpages angular changed much tried sooooo many things found thread markovy hero thank thank", "d": "8/2017"}, {"body": "thank guys solved problem ur help thanks lot", "d": "8/2017"}, {"body": "seems install everything", "d": "8/2017"}, {"body": "contrary previous statement rlao trick work plunker local app computer moved plunkr piece piece local app new angular cli setup project still works somehow local app broken could find bet bug survive ng p must really lots effort fix", "d": "8/2017"}, {"body": "issue jasonaden updates pr looks like build failing thanks", "d": "8/2017"}, {"body": "still working want update target links using bindings directly tag working fine trying set dynamically issue different issue", "d": "8/2017"}, {"body": "hi really need trick router reloading component routerlink click use following code component hope helps mihail c", "d": "8/2017"}, {"body": "solved problem", "d": "8/2017"}, {"body": "would love see feature anybody working", "d": "8/2017"}, {"body": "currently blocked", "d": "8/2017"}, {"body": "hi solve problems cors cookie session", "d": "8/2017"}, {"body": "similar problem need display ngcontent content found element tryed nothing display nice css selectors could value select property", "d": "8/2017"}, {"body": "dzmitryshylovich according reported please reopen khuongduybui bannazz", "d": "8/2017"}, {"body": "probably rename complete missing js docs provide missing js docs", "d": "8/2017"}, {"body": "issue angular tried withwithout reflectmetadata vendorts polyfillsts whatever order update anyone found solution", "d": "8/2017"}, {"body": "months still issue problem", "d": "8/2017"}, {"body": "think vital angular developers ignore files someone give tips find code happy fix nuisance annoying ran yesterday anybody thinks feature bug flag wed aug leonardo vidal notifications githubcom wrote months still issue problem error determine module class pasofootercomponent receiving commented reply email directly view github mute thread", "d": "8/2017"}, {"body": "samirotiv reproduction robwormald said angular compiler looks file set handed tsconfig excluding files exclude check issue managed solve looked ts transpiles app example noticed typescript nt compile lazy loaded modules used files tsconfig option", "d": "8/2017"}, {"body": "getting error abstract class without decorators", "d": "8/2017"}, {"body": "team develops application uses browser history heavily navigate pages unfortunately faced issue causes bit weird navigation experience users fix issue would much appreciated", "d": "8/2017"}, {"body": "unfortunately still issue angular", "d": "8/2017"}, {"body": "fix issue", "d": "8/2017"}, {"body": "bidthegod mean would lot work implement feature angular would lot work retrieve validators angular component possible retrieve validators component input welcome easier certain component types input select useful", "d": "8/2017"}, {"body": "toub ended building config object structure contained every individual form field settings display validators rules etc wrote helper methods query config builds formgroup form form service inherits base component would nt say easy fix tons code ended fairly elegant easy create fairly complex form threw code gist look got time modularise properly moment quite files missing including custom form input components wrote", "d": "8/2017"}, {"body": "bidthedog nt feet needs thanks answer gist useful others", "d": "8/2017"}, {"body": "hey guys created simple helper return validators required extended others getvalidators f return objectkeys f reduce b gt const v f b v amp amp v validatorsrequired vindexof validatorsrequired gt b b b required true return const f id name null validatorsrequired phone email null validatorsrequired validatorsemail thisfrmmain thisfbgroup f consolelog thisgetvalidators f name required true email required true fits needs", "d": "8/2017"}, {"body": "proposal super exciting thought given prerendered lazy routes achieve pre rendered lazy routes via possible hydration occur lazy route fetched rendering begins curious thoughts universal great straightforward use far thanks everyone involved", "d": "8/2017"}, {"body": "like bump one similar issue enums template category field defined enum expect work string unions wrong compiles works fine vscode showing errors template ngif mentioned", "d": "8/2017"}, {"body": "router state machine able navigate current state might lead confusing behaviour example consider scenario current state navigating guard rejects navigation supposed go back current state longer allowed navigate sort seems like end developer error yes guard rejects navigation stay nothing else also considering rerunning resolvers every time navigation happens wo nt work use case well guess would depend setting think either always allow never allow nt extra option least maybe ways set module level strategy one following override module level setting new route setting set route definition setting set call site navigate route think everyone expects end users developers alike specific use case settings screens like one github click left pretty much everyone expects form reset usually updated data updates top except would also take back different settings page ideally nt anything little dev get behavior", "d": "8/2017"}, {"body": "routerts private executeschedulednavigation id rawurl extras resolve reject navigationparams void const url thisurlhandlingstrategyextract rawurl const urltransition thisnavigated urltostring thiscurrenturltreetostring think developers would like see sort event fire going tree something indicate attempt navigate made", "d": "8/2017"}, {"body": "think developers would like see sort event fire going tree something indicate attempt navigate made like see component refreshed op titled described nt disagree new event suggested thread would best separate issue created", "d": "8/2017"}, {"body": "hi alxhub component like works fine compiled use component question case able use component tests example obviously trigger consequently another example question suggestions make first example work test without adding additional code thanks lot", "d": "8/2017"}, {"body": "hi rolandoldengarm wonder could make work angular aot typedjson share configuration thanks", "d": "8/2017"}, {"body": "mustafaekim nah removed typedjson solution every domain object inherits serializable", "d": "8/2017"}, {"body": "see sample provided attach ie formcontrol elementref element use api", "d": "8/2017"}, {"body": "typescript allows default types backward compatible", "d": "8/2017"}, {"body": "fixed rxjs version", "d": "8/2017"}, {"body": "still fixed yet currently using absolute links nt really good practice imo parent name change", "d": "8/2017"}, {"body": "problem", "d": "8/2017"}, {"body": "hello experiencing issue using angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli anyone optionway solve", "d": "8/2017"}, {"body": "get update fix closed without explanation nt think workarounds good longterm solution though acceptable meantime priority thing", "d": "8/2017"}, {"body": "ok resolved problem full example module lazy loaded displayed named router outlet available", "d": "8/2017"}, {"body": "update", "d": "8/2017"}, {"body": "update", "d": "8/2017"}, {"body": "got error importing forms module module using error could much descriptive actual problem", "d": "8/2017"}, {"body": "functionality added see commit info", "d": "8/2017"}, {"body": "trick", "d": "8/2017"}, {"body": "believe hitting well idea work around depending library nodemodules importing types issue library depending project angular", "d": "8/2017"}, {"body": "dashue code compile ts files rootdir using aot specify gendir ngfactoryts files copied folder rootdir library use provides sources tsfiles instead js dts copy files location rootdir code sould import tsfiles nodemodules dts", "d": "8/2017"}, {"body": "found use routing need import submodule app let router ok", "d": "8/2017"}, {"body": "commit solves issue gt huyph", "d": "8/2017"}, {"body": "facing problem navigate within app still works get error thrown code inside ts let routerinitializersubscriber thisroutereventsfilter event gt event instanceof routesrecognized subscribe route routesrecognized gt let contractid routestaterootfirstchild number routestaterootfirstchildparammapget routeparamkeyscontractid null comment http request return mocking data instead works http request throw exception", "d": "8/2017"}, {"body": "running problem well glad see alone issue time utterly depressed see alone issue case trying load auth data google auth irony issue application loads think going use typical approach guard navigate different login route effectively caching intended route login route subscribe login data loading redirect intended route pretty suppose work know async streams rage kids days days want block something finishes", "d": "8/2017"}, {"body": "think fixed see", "d": "8/2017"}, {"body": "albv thanks reply took look know case something slightly different wrote extra code force parent block condition met requires blocking application first loads point data readily available since routes application fall parent guard knowing around certainly nt hurt though know need use applications thanks follow", "d": "8/2017"}, {"body": "similar problem check plunker forked official angular example fix second example", "d": "8/2017"}, {"body": "istibekesi wrong solution working", "d": "8/2017"}, {"body": "tytskyi awesome thanks explain shortly okay button work tag", "d": "8/2017"}, {"body": "istibekesi bad actually work redirect regardless listener see supposed work pair directives sorry confusion need manipulate class imperatively write directive open proposal seems like original ticket valid clarified", "d": "8/2017"}, {"body": "tytskyi indeed confusion clear also missed fix working", "d": "8/2017"}, {"body": "still export module currently writing library tries reuse existing inheriting declaring new directives possible currently forces copy source code", "d": "8/2017"}, {"body": "issue angularforms", "d": "8/2017"}, {"body": "anything new feature request", "d": "8/2017"}, {"body": "deanproxy fabulous workaround cheers", "d": "8/2017"}, {"body": "problem still persist even importing operator compiling envprd aot use filter using aot envprod bruno", "d": "8/2017"}, {"body": "confirm worked case control asyncvalidator constantly reporting calling wrapping trick", "d": "8/2017"}, {"body": "pcroc define ie elementref formcontrol element use features html ts viewchild schoolcontrol schoolcontrol elementref schoolformcontrol formcontrol", "d": "8/2017"}, {"body": "thanks approach becomes difficult impossible use simplest scenarios formarray representing rows table row multiple controls something like imagine row invalid find invalid formcontrol simply looping rows controls row find input element corresponds formcontrol order focus value controls missing certain rows yes give input elements name use access use perhaps nontrivial arithmetic work element control pain write maintain imagine template part child component used within parent form parent form wants focus invalid control wo nt work control part parent form template", "d": "8/2017"}, {"body": "need", "d": "8/2017"}, {"body": "complelty agree giniedp case two seperate repositories one test reach end month first one still imports many modules testbed configuration leading minutes complete full run started remove one one work feature improve speed second one created way said team use many mocks possible avoid cost importing anything testbed general group multiple expect single test wich imo wrong muuuuch faster full test run without compilation seconds compilation time still take least minute wich clearly annoying love see big performance improvement tests since lose time developping feature", "d": "8/2017"}, {"body": "shireilia try jest jestpresetangular skip compilation step parallelise tests smarter watch mode", "d": "8/2017"}, {"body": "thymikee thanks give try coming week", "d": "8/2017"}, {"body": "thymikee thanks work preset jest works really well project observations jest runs faster karma bypasses webpack ability run multiple spec files concurrently however tests require angular components instantiated actually take longer time run karma chrome guessing problem might jsdom efficient blink though investigations required since jest require modules loaded order tests run fewer modules test import faster finish spent time isolating modules imported directly indirectly gave mild improvement lap times example modules used got exported file ended import graph workaround applicable using jest well noticed spec files unique name would break intellij ability set breakpoints try create test repo open issue repo edit issue opened thanks jest awesome", "d": "8/2017"}, {"body": "vvasabi thanks workaround drastically sped tests one question though would way central module spec files use eg go ahead include everything one module spec files use may anti pattern slowdown takes time set module spec file far growing one component service directive etc slow comes spec file hit module built subsequent statments run time thanks workaround", "d": "8/2017"}, {"body": "rhonun glad hear hack works certainly build common testing module export module metadata one file spec files import reuse want go one step make sure hack repeated every spec file consider setting util function like ts const resettestingmodule testbedresettestingmodule preventangularfromresetting gt testbedresettestingmodule gt testbed allowangulartoreset gt testbedresettestingmodule resettestingmodule export const setuptestbed moduledef testmodulemetadata gt beforeall async async gt resettestingmodule preventangularfromresetting testbedconfiguretestingmodule moduledef await testbedcompilecomponents afterall gt resettestbed call inside outermost block spec files hope helps", "d": "8/2017"}, {"body": "vvasabi ur work around indeed works well cut around tests secs secs really think ng team provide option setup testing module beforeall saves lot time especially specs lot drawback far specs dom interaction seems broken new approach eg setting input values clicking btns another drawback doesnt seem possible use beforeall vvasabi approach specs beforeeach specs suite", "d": "8/2017"}, {"body": "dasanderl glad hear trick worked specs dom interaction seems broken eg setting input values clicking btns since testing module reused across multiple tests test mutates shared service potentially affect result tests one quick way confirm run broken tests individually pass run alone fail polluted testbed drawback doesnt seem possible use beforeall specs beforeeach specs suite yes workaround force group tests reuse testbed configuration one block ones live compartments would like argue might cleaner code organisation anyways whether hack applied", "d": "8/2017"}, {"body": "vvasabi thank really helpful getting test run times probably adding far much metadata test means need refactor components modular quite sure meantime suggestion led massive gain test execution performance still slower like biiiiig improvement yes tests run particularly slow environment often get async timeouts nt happen locally simply running tests faster seems solve case someone else needs specific details apply code create new file called fyi make small changes compared extension file nt included builds otherwise complain error add following file ts import testbed async testmodulemetadata angularcoretesting const resettestingmodule testbedresettestingmodule preventangularfromresetting gt testbedresettestingmodule gt testbed let allowangulartoreset gt testbedresettestingmodule resettestingmodule export const setuptestbed moduledef testmodulemetadata gt beforeall done gt async gt resettestingmodule preventangularfromresetting testbedconfiguretestingmodule moduledef await testbedcompilecomponents done catch donefail afterall gt allowangulartoreset specific file may something like following becomes run tests kinda obvious nt use pattern time need componentservicewhatever testing state reset tests", "d": "8/2017"}, {"body": "using visual studio code thanks help guys", "d": "8/2017"}, {"body": "problem hash character angular", "d": "8/2017"}, {"body": "checked plnkr added version nt seem fixed dzmitryshylovich", "d": "8/2017"}, {"body": "quite annoying bug fixed anytime soon", "d": "8/2017"}, {"body": "actually got work using instead", "d": "8/2017"}, {"body": "xavs nt understand passing object signature works used disable onlyself true emitevent false crossfield validation dynamically enabledisable checkbox another field group invalid someone explain purpose object", "d": "8/2017"}, {"body": "apparently intended behaviour need use test component test onpush component", "d": "8/2017"}, {"body": "could someone knows documented easy way understand exactly works", "d": "8/2017"}, {"body": "progress makes hacks update hack breaks compatibility angularcli turn", "d": "8/2017"}, {"body": "yes still getting error", "d": "8/2017"}, {"body": "even follow fixing suggestion still issue", "d": "8/2017"}, {"body": "imported commonmodule works pretty good", "d": "8/2017"}, {"body": "thank much dzmitryshylovich response help lot", "d": "8/2017"}, {"body": "closed still get issue scenario even version", "d": "8/2017"}, {"body": "try way first import change code constructor private router router consolelog environment config config ngoninit thisroutereventssubscribe event event gt event amp amp event instanceof routesrecognized const params eventstaterootfirstchildparams const params eventstaterootfirstchildqueryparams lt need one consolelog query params params seems working", "d": "8/2017"}, {"body": "dgroh amp also got error wrap g double quotations return line look like return decodeuricomponent results replace g error longer occurs correct value extracted thank much piece code", "d": "8/2017"}, {"body": "vicb life get work latest version perhaps know anything changed regarding providing implementation overloading component asset urls saw provided example vicb suggestion work ever get around issue regards", "d": "8/2017"}, {"body": "michaelbromley solution nt work anymore create dynamic module use module nothing new import module component belongs cleaner nt need add anything else service components etc implies ng serve works ng test least creation component perspective suppose follow structure app appmodulets appcomponentts componentthatcreatedynamicscomponents componentthatcreatedynamicscomponentscomponentts componentthatcreatedynamicscomponentshtml componentthatcreatedynamicscomponentscomponentspects somecomponent somecomponentcomponentts somecomponenthtml somecomponentcomponentspects import case nt split project modules unique module true component nt use test nt matter test gain flexibility change testing module", "d": "8/2017"}, {"body": "lot time passed since question asked updates seen people hmr angular never component level isolation", "d": "8/2017"}, {"body": "sathishchary yes", "d": "8/2017"}, {"body": "angular find still modify htaccess target deployment folders godaddy otherwise browser reload problem occurs angular app uses routing try simplistic approach always serving indexhtml occurs longer get proper filemissing error ought occur app attempts load json file nt exist approach like mrcroft needed stop note found needed replace index last line index", "d": "8/2017"}, {"body": "anything new writing katex component would nice able pass arbitrary tex strings component", "d": "8/2017"}, {"body": "appears issues error atloader nodemodules class defaultiterabledifferfactory incorrectly implements interface iterabledifferfactory types property create incompatible type trackbyfn trackbyfunction undefined gt defaultiterablediffer assignable type trackbyfn trackbyfunction undefined iterablediffer cdr changedetectorre type defaultiterablediffer assignable type iterablediffer types property diff incompatible type collection ngiterable gt defaultiterablediffer null assignable type object ngiterable gt iterablechanges null type defaultiterablediffer null assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterablechangerecord previousindex number currentindex number gt void gt types parameters fn fn incompatible types parameters previousindex previousindex incompatible type number null assignable type number type null assignable type number error atloader nodemodules class defaultiterablediffer incorrectly implements interface iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterablechangerecord previousindex number currentindex number gt void gt v types parameters fn fn incompatible types parameters previousindex previousindex incompatible type number null assignable type number type null assignable type number error atloader nodemodules class defaultiterablediffer incorrectly implements interface iterablediffer types property diff incompatible type collection ngiterable gt defaultiterablediffer null assignable type object ngiterable gt iterablechanges null type defaultiterablediffer null assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges null type defaultiterablediffer assignable type iterablechanges types property foreachoperation incompatible type fn item iterablechangerecord previousindex number null currentindex number null assignable type fn record iterablechangerecord previousindex number currentindex number gt void gt v types parameters fn fn incompatible types parameters previousindex previousindex incompatible type number null assignable type number type null assignable type number adding tsconfig solves", "d": "8/2017"}, {"body": "iirc issues caused issue angular typescript another issue logged look defaultiterablediffer issue search try downgrading ts fixed angular", "d": "8/2017"}, {"body": "news solution would need candeactivatechild least next year please tell fixed", "d": "8/2017"}, {"body": "nt work vsavkin closed logging blank object passing data prop routes configuration", "d": "8/2017"}, {"body": "facing issue difference plunker lroitman want subscribe component registered routes config shared component component included every page adding component selector tag layout html reason observable never get next result listen router events type navigationend get routes data sadly working least webapp loads first time router event based approach currently working well prints empty object corresponding part route config notice instantiate usereditcomponent navbarcomponent occurred angular", "d": "8/2017"}, {"body": "got confirmed angular", "d": "8/2017"}, {"body": "problem trying make generic component shown pages header supposed grab title attribute routedata always", "d": "8/2017"}, {"body": "rainerpl shared component nt going get current activated route route tree every component used routing gets activatedroute specific data goes along injecting common service root application template going get root nt contain component specific data inject shared component use approach used danielclasen traversing route children get route data route bottom tree example plunker", "d": "8/2017"}, {"body": "good day progress", "d": "8/2017"}, {"body": "update", "d": "8/2017"}, {"body": "expect updates closed issues wo nt updates inheritance well supported since quite time", "d": "8/2017"}, {"body": "thing missing ability inherit animations ca nt get animations work way right", "d": "8/2017"}, {"body": "consider creating new issue none exists yet mentioned comments closed issues least officially monitored", "d": "8/2017"}, {"body": "issue well routes semicolons work", "d": "8/2017"}, {"body": "runs cd component downwards binding declared part component host component", "d": "8/2017"}, {"body": "still expected get ca nt see betas thanks", "d": "8/2017"}, {"body": "might", "d": "8/2017"}, {"body": "yes wo nt likely le jeu ao\u00fbt \u00e0 vltr notifications githubcom \u00e9crit might receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "hi ocombe interested process get work way compiler works currently makes tougher task clarity timeline looks like still likely", "d": "8/2017"}, {"body": "arackow likely vicb working last changes compiler finally make possible", "d": "8/2017"}, {"body": "ocombe design document describes concept solution strings outside templates project development phase would great know would able prepare somehow temporary solution later would much easier switch final angular syntax", "d": "8/2017"}, {"body": "design doc based previous version compiler probably implementation end new public design doc better idea new implementation", "d": "8/2017"}, {"body": "ocombe feature serious need right lol thank guys making amazing tools", "d": "8/2017"}, {"body": "understand current design doc author aot library would need provide translations languages required various applications using library understood correctly", "d": "8/2017"}, {"body": "good point tested library author add tags compile library ngfactories see jason aden talk ngconf translation tag replaced way run command also get translation xliff files nodemodules folder nt provide translations add tags useful meanings", "d": "8/2017"}, {"body": "quoted design doc aot source code transformed replace service calls static translations use typescript transformer would mean angular aot library published usually transpiled form found reference metadatajson document", "d": "8/2017"}, {"body": "compile library final code prepare compiled developer using code see jasonaden mentions also means make library translatable adding tag", "d": "8/2017"}, {"body": "said design doc based previous version compiler probably implementation end aot compiler changed extensively easier libs publish aotready code want make easyflexible possible well probably something like libraries publish translation files use also override prefer able provide additional languages well library nt support default", "d": "8/2017"}, {"body": "thank ocombe clarification", "d": "8/2017"}, {"body": "default exports supported aot compiler version", "d": "8/2017"}, {"body": "place export types works", "d": "8/2017"}, {"body": "update think lot users could benefit feature", "d": "8/2017"}, {"body": "please check path import statement component appmodulets ng g c command times adds file different directory irrespective hierarchy mentioned command best practice check path appmodulets every ng g c command", "d": "8/2017"}, {"body": "use", "d": "8/2017"}, {"body": "hi explain get run without webpack seperate npm", "d": "8/2017"}, {"body": "andrewvmail angular code need web pack run use tsnode together magic script setup jsdom act browser angular services run outside browser", "d": "8/2017"}, {"body": "yep thanks figured shim node stuff put setupjs run test like code jsdom think newer one different syntax require require require zonejsdistzonenode require zonejsdistlongstacktracezone require zonejsdistproxy require zonejsdistsynctest require zonejsdistasynctest require zonejsdistfakeasynctest require zonejsdistproxy const testing require angularcoretesting const browser require angularplatformbrowserdynamictesting testingtestbedinittestenvironment browserbrowserdynamictestingmodule browserplatformbrowserdynamictesting const jsdom require jsdom globaldocument jsdomjsdom globalwindow documentdefaultview globalnavigator useragent nodejs globalcustomevent globalwindowcustomevent gt globalwindowdispatchevent gt", "d": "8/2017"}, {"body": "said could nt get angular dep injection working test setup like cheat manually assign outside component export class testcomponent constructor inject someservice service someservice inject changedetectorref ref changedetectorref nt work", "d": "8/2017"}, {"body": "implemented", "d": "8/2017"}, {"body": "samverschueren fixed u mentioned import routes routermodule preloadallmodules angularrouter import homecomponent homehomecomponent import contactmodule contactcontactmodule export function loadcontactmodule return contactmodule export const routes routes path component homecomponent pathmatch full path contact loadchildren loadcontactmodule export const routing routermoduleforroot routes import routes routermodule preloadallmodules angularrouter import homecomponent homehomecomponent import contactmodulengfactory aotsrcusercontactmodulengfactory export function loadcontactmodule return contactmodulengfactory export const routes routes path component homecomponent pathmatch full path contact loadchildren loadcontactmodule export const routing routermoduleforroot routes files srcappmodulets srcmaints files srccontactcontactmodulets srcappmoduleaotts srcmaints tested effective", "d": "8/2017"}, {"body": "ckuetbach used workaround", "d": "8/2017"}, {"body": "bug still present", "d": "8/2017"}, {"body": "even work angular ie using problem seems mmstring", "d": "8/2017"}, {"body": "solution provided works like charm please ensure iis rewrite module installed downloaded information found", "d": "8/2017"}, {"body": "workaround subscription get params every time router updates solves issue lazy loaded modules first reload page function works", "d": "8/2017"}, {"body": "update feature request", "d": "8/2017"}, {"body": "somehow wierd work around works without code protected dashboard component receive param values", "d": "8/2017"}, {"body": "robinkedia works passing routes parameters see solution using shared componentsservices get parameters", "d": "8/2017"}, {"body": "somewhat baffled still open issue wow", "d": "8/2017"}, {"body": "year happy birthday cake birthday gift balloon tada seriously nt understand issue underrated barely people uses functionalities together kara sorry ping vsavkin removed assignment issue seems one angular team think might take look share someone might thanks smile", "d": "8/2017"}, {"body": "hey guys spent quite time issue answers correct either wrong compiling errors previous versions etc working took garethweaver answer tried get working project finally got something acceptableish basically save position start new navigation using previous navigation url saved previous navigationend event nt hesitate improve code pretty new typescript angular hope help appcomponentts add following members add following constructor signature add following inside constructor historyscrollrestoration manual", "d": "8/2017"}, {"body": "related", "d": "8/2017"}, {"body": "renders combination lazy loading modular route config secondary routes unusable course empty paths filled nonsense thats contrary readable url concept empty paths", "d": "8/2017"}, {"body": "solution simple enough main developer pain point lack documentation use methods immediately apparent put options also expected method able override component implementation docs related issues include", "d": "8/2017"}, {"body": "issue per pkozlowskiopensource comment importing formsmodule child module fixed issue import formsmodule angularforms ngmodule imports formsmodule", "d": "8/2017"}, {"body": "clementvidal solution safe according current documentation experimental", "d": "8/2017"}, {"body": "open project clean solution try restore packagejson work", "d": "8/2017"}, {"body": "weird behavior case without aot works without importing filter deploy using aot compilation get error bruno fixing", "d": "8/2017"}, {"body": "seem work upgrading", "d": "8/2017"}, {"body": "issue really annoying app named outlets routes params may parentheses body disappointing route like app nt show component exception routing thanks centaure great solution progress", "d": "8/2017"}, {"body": "progress going", "d": "8/2017"}, {"body": "get along would possible hook lifecycle events outside component would make possible create third party library provides observable events", "d": "8/2017"}, {"body": "experienced issues well using css instead ngif hide content since nt crucial remove html making use ifelse show loading template use observable aliases", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "pkozlowskiopensource workarounds necessary since people fail see singlepass unidirectional data flow good thing bringing following benefits issue carousel need set property carousel item component property known computed parent carousel component carouselitems coming ngcontent work items parent carousel component unidirectional believe sure singlepass though often need set properties nt yet known ngoninit introducing service subject like many people suggested necessarily board specific case component subscribe using emit something carousel component well case think would ridiculous since carousel lot items items carousel active subscriptions mention carousel tytskyi take look thischangedetectorrefdetach proper solution usecase tried inject use components carousel component carouselitem child component basically entire tree still get error angular nt care disabled change detection believe taking account throwing error missing something would love hear inclining believe since error nt thrown production build additional change detection ran simply leave like without using hack yes call hack cases learn live red text console development ok could probably never bugs much", "d": "8/2017"}, {"body": "experiencing issue safari angular", "d": "8/2017"}, {"body": "sorry commenting closed issue setting exact true involves problem whether query params url wo nt recognize route active navbar url query params aforesaid class wo nt applied items expected behavior", "d": "8/2017"}, {"body": "brandonroberts crisz comment", "d": "8/2017"}, {"body": "pptyasar yes expected behavior query params optional considered checking path active route", "d": "8/2017"}, {"body": "burdensome arguably impractical create dummy parent component pass value via input trigger especially true unit testing trigger hook", "d": "8/2017"}, {"body": "simplest way point get multiple routed components animate transitioned one another page load", "d": "8/2017"}, {"body": "dbjelovuk may look like lot code almost complete implementation missing injection animations appcomponent appmodulests must define every data animation value path appcomponenthtml appcomponentts define init state page load define animations case animation would trigger going page would trigger refreshing page", "d": "8/2017"}, {"body": "hi ploppy thanks snappy response example gotten really close want except need way query animations fire parallel see", "d": "8/2017"}, {"body": "dbjelovuk put query methods group execute parallel check yet", "d": "8/2017"}, {"body": "ah simple cheers", "d": "8/2017"}, {"body": "routing animation work components routed custom routereusestrategy observed animation working first time normal routing happening", "d": "8/2017"}, {"body": "still hitting issue project run issue initial load user navigates navbar manually navigate code nt update active change links based dropdown navigate home link whatever selection nt mark active dom think may lifecycle hits trying mark active link updating links ngfor navbar", "d": "8/2017"}, {"body": "quick update figured way make work case others creating dynamic navigation links wrap quick timeout like updated values instead variables since likely people downvoting", "d": "8/2017"}, {"body": "thought something wrong mockbackend example tests error caught suite works however inspecting suite closer see thrown error response status rather response succeeded tried call failed", "d": "8/2017"}, {"body": "nickylenaers currently appears work browser context confirm please", "d": "8/2017"}, {"body": "yes correct merely prevents errors occur using add script tags come across solutions using unsafe html templates least work serverside hacky better ways handle guess", "d": "8/2017"}, {"body": "nickylenaers purpose workaround jasonld browser context help seo work ssr well right wrong enough data angular app bootsrapped browser", "d": "8/2017"}, {"body": "gustavocostaw expect refer snippet metadata outside scope class simply instance component", "d": "8/2017"}, {"body": "gustavocostaw", "d": "8/2017"}, {"body": "matsko great job congratz bro thank", "d": "8/2017"}, {"body": "miss feature", "d": "8/2017"}, {"body": "feature added version missing feature please add soon possible", "d": "8/2017"}, {"body": "moment anyone knows alternative ways done help would really appreciated please respond soon", "d": "8/2017"}, {"body": "andreevartem solutions works great template driven however nt contains inside addition andreev directive another directive handle form inside typescript export const modelgroupprovider provide controlcontainer useexisting forwardref gt ngmodelgroup directive selector provideparentformgroup providers modelgroupprovider export class provideparentformgroupdirective controls contained inside defined usage similar andreev solution", "d": "8/2017"}, {"body": "igorminar way angular stopimmediatepropagation body without using jquery", "d": "8/2017"}, {"body": "pull request contains breaking changes hope", "d": "8/2017"}, {"body": "looks awesome hoping blog post angulario", "d": "8/2017"}, {"body": "blog post breaking changes best way migrate application definitively", "d": "8/2017"}, {"body": "issue using inside clue still knwon bug", "d": "8/2017"}, {"body": "problem bundles please copy configjs change like code function global var map app app works perfectly", "d": "8/2017"}, {"body": "going help systemjs loader stick pick single files instead bundle single request results anywhere additional requests server happens non trivial case import", "d": "8/2017"}, {"body": "maliksahil avoid circular dependency nt ts import someclass pathtoindex instead use directly path file ts import someclass pathtosomeclass apply modules import", "d": "8/2017"}, {"body": "maybe help idea", "d": "8/2017"}, {"body": "thanks", "d": "8/2017"}, {"body": "mprobst still issue latest version webpack", "d": "8/2017"}, {"body": "nt tested long time feel free close think important enough", "d": "8/2017"}, {"body": "close issue", "d": "8/2017"}, {"body": "far know issue still happening nt changed semantics paths template style urls", "d": "8/2017"}, {"body": "hansl issue asking use relative paths right currently possible using cli", "d": "8/2017"}, {"body": "issue asking support nonrelative paths follow typescript semantics currently outside cli error using nonrelative paths jit comes different semantics typescript time general bad practice behaviour nonrelative paths aot jit undefined", "d": "8/2017"}, {"body": "updates", "d": "8/2017"}, {"body": "nightwnvol tried snippet example worked general removes yellow chrome warnings page load click application get red errors typical link component", "d": "8/2017"}, {"body": "cuznerdexter hi maybe help unable preventdefault inside passive event listener invocation however snippet temporary solution hopefully angular support passive event listener", "d": "8/2017"}, {"body": "still", "d": "8/2017"}, {"body": "soynog feel exactly also like know stands hoping able make draggable dialogs using angular material since angularmaterial yet supported like dynamically add directive service creates seems much harder get behavior angular compiler dynamic directives tbosch thomasburleson offline use case discussed related issues goals thomas raised angularmaterial chance trying wrap head around behavior changes frameworks", "d": "8/2017"}, {"body": "buuummmmpppp love feature vue use time", "d": "8/2017"}, {"body": "ran problem trying use djejaquino alternative using inputs limited really depends trying", "d": "8/2017"}, {"body": "issue trying use list inside directive", "d": "8/2017"}, {"body": "select function var self self username selfoptions function res var data resbodyresult selftabledata datalength gt dataforeach function val selftabledatapush data valname valscheduledate url purchaserq valid consolelog selftabledata selfoptions resbodydata function err alert err uncaught promise typeerror read property length undefined dont know error please help", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "sure fix nexus default npm client encodes slash characters ascii representation communicating npm registry running tomcat http container default artifactory generates http error since tomcat allow encoded slashes default order work npm scoped packages override default behavior defining following property catalinaproperties file tomcat orgapachetomcatutilbufudecoderallowencodedslashtrue note use latest versions artifactory tomcat", "d": "8/2017"}, {"body": "issue angular injecting router embedding empty route work", "d": "8/2017"}, {"body": "brandonroberts according documentation routerlinkactive directive goes anchor tag routerlink directive", "d": "8/2017"}, {"body": "grungondola router guide states parent element also", "d": "8/2017"}, {"body": "verified throw error click event handler wrapped exception", "d": "8/2017"}, {"body": "also like add seeing similar issue using date pipe like giving pipe unix timestamp example works fine timezone server timezone cst anyone timezone west timezone see previous day example give date pipe see anyone viewing app west coast see previous day correct causing lots calls customers app used thousands people day", "d": "8/2017"}, {"body": "new date pipe coming angular able fix timezone avoid kind issues lun ao\u00fbt \u00e0 jake mcclanahan notifications githubcom wrote also like add seeing similar issue using date pipe like effectivedate date mmddyyyy giving pipe unix timestamp example works fine timezone server timezone cst anyone timezone west timezone see previous day example give date pipe see anyone viewing app west coast see previous day correct causing lots calls customers app used thousands people day receiving commented reply email directly view github mute thread", "d": "8/2017"}, {"body": "thanks ocombe new date pipe beta", "d": "8/2017"}, {"body": "next one lun ao\u00fbt \u00e0 jake mcclanahan notifications githubcom wrote thanks ocombe new date pipe beta receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "ended working", "d": "8/2017"}, {"body": "serjster problem using private members could change angular update listed breaking changes supposed accessing decided use token technique safety first lol", "d": "8/2017"}, {"body": "specific solution problem scale directive ergonomic top main slot taken additional slots require attributes good component published libraries even app used frequently serjster would strongly recommend avoid use make private members also general within app party libraries already said private members obey semver guaranteed next version might say well revise facing greater risk private members proposal typescript transformers even possible randomly create different identifiers private members given shorter names nt", "d": "8/2017"}, {"body": "shlomiassaf advice unwelcome unless provide method work problem solve solution solves comment arrogant creator programming know best way things instead bit humility show us correct way agree use advice skip nt arrogance beyond abhorent", "d": "8/2017"}, {"body": "shlomiassaf sorry solution referring specific nt scale think agreeing variable input method particularly elegant serjster feel like taken shlomiassaf comment attack nt think meant way considering done decided bit risky reasons may ask use case reason token approach would work trying pull parent component child component", "d": "8/2017"}, {"body": "arrogance intent solution moment happy solution use code however considered bad practice principles oop cs maybe arrogant think solution nt mean use bad practices sometime solution nt direct maybe change approach architecture etc comment stay place might prevent developer using bad practices offended sorry intent nt act ego learn accept criticism good luck", "d": "8/2017"}, {"body": "ghetolay thanks lot tokens easy bind reactive formgroups different components export interface bindform form formgroup export const bindformtoken new injectiontoken bindformtoken directive selector bindform export class bindformdirective constructor inject bindformtoken skipself optional private parent bindform inject bindformtoken self optional private child bindform consolelog parent parentform consolelog child childform parentformaddcontrol child childform", "d": "8/2017"}, {"body": "matheo nt know precisely case nt place discuss probably directly inject form group directives using token form control directives using", "d": "8/2017"}, {"body": "angular getting host component directive like course need know compile time hostcomponents possible benefit works every component even ca nt modify part party module", "d": "8/2017"}, {"body": "found solution library everethyng seems normaly execute finished value false raise error jsonperrnocallback jsonp injected script invoke callback result network response contains needed data jsonpcallback amsden oh united states amstelveen nh netherlands amsterdam mo united states amsterdam nh netherlands amsterdam ny united states amsterdam oh united states amston ct united states actualy must use another api without jsonp waiting solution", "d": "8/2017"}, {"body": "solutions trying whichever way try getting old error response body jsonp injected script invoke callback status ok true statustext ok headers headers", "d": "8/2017"}, {"body": "error getting child module trying call initial child component using way bootstrap childfirstcomponent child module instead created childroute called childfirstcomponent like const childroutes routes path component childcomponent ngmodule imports routermoduleforchild childroutes exports routermodule note use routermoduleforchild import array creating child route files", "d": "8/2017"}, {"body": "using lazyload nt forget conf", "d": "8/2017"}, {"body": "aleksandrleotech ok thought problem solve case", "d": "8/2017"}, {"body": "similar issue described debben using custom httpinterceptor issue cause use separate stream emitted dependency calls actual http call made inside switchmap converting observable returned http call another observable never completes something like please correct misconceptions http get looked something like typescript get url string options requestoptionsargs observable options thisgetrequestoptionargs options return thiscustomheaderitemstreamswitchmap customheaderitem string gt options thisinjectcustomheaderitem options customheaderitem solved adding result complete resulting observable first item emitted typescript get url string options requestoptionsargs observable options thisgetrequestoptionargs options return thiscustomheaderitemstreamswitchmap customheaderitem string gt options thisinjectcustomheaderitem options customheaderitem first lt added first still kinda new rx anglular advice corrections appreciated edit checking new solution typescript get url string options requestoptionsargs observable options thisgetrequestoptionargs options return thiscustomheaderitemstreamswitchmap customheaderitem string gt options thisinjectcustomheaderitem options customheaderitem dematerialize lt added dematerialize", "d": "8/2017"}, {"body": "autoscroll longer works firefox bit chrome works expected though", "d": "8/2017"}, {"body": "works", "d": "8/2017"}, {"body": "team using angular team uses repo angulario make service inject like usual ngafterviewinit ngaftercontentinit page want behavior call scroll service variable name scrolltotop finally need add top indexhtml", "d": "8/2017"}, {"body": "rethinking well counter intuitive oninit called initial values set inputs hence name init onchanges changes hence name changes", "d": "8/2017"}, {"body": "rethinking reason also consider renaming lifecycle hook increase intuitiveness suggestions alias", "d": "8/2017"}, {"body": "confirm closed seems intended closed still open", "d": "8/2017"}, {"body": "working latest angular version bug select different way", "d": "8/2017"}, {"body": "try latest stable nt try", "d": "8/2017"}, {"body": "dynamically creating components fine long include compiler runtime nt even mind extra lines code needed possible large dynamic ui possible implement angular without compiler angular team suggest wish port large dynamic uis angular nt", "d": "8/2017"}, {"body": "egucciar take read issue many ways around issue preserve performance application issue compiler big slow depending much compiling lock users ui even", "d": "8/2017"}, {"body": "toxicable thanks responding read entire thread thought gist ways dynamically nt involve switch statements nt really dynamic also option generate backend lazy load seemed interesting option thinking way read thread pure front end option nt involve using compiler ifswitch", "d": "8/2017"}, {"body": "egucciar one recommend would top half", "d": "8/2017"}, {"body": "egucciar also demo working", "d": "8/2017"}, {"body": "egucciar well sure helps solved nginclude issue although compile component instead allowed include dynamicallycreated components insert inside div nginclude two steps compile component set placeholder div paste component compiled made article along sample code toxicable although appreciate explanation angular knowledge nt good understand either explanation sample code linked solved way p", "d": "8/2017"}, {"body": "want help understanding jump angular gitter could give run code", "d": "8/2017"}, {"body": "yep got dynamic component template working angular two syntax thank runtime compiler awesome angular team recommend include front end sort dead end desire follow recommended angular approaches toxicable take look asap thanks much", "d": "8/2017"}, {"body": "see added dom directly bit differently angular syntax leveraged view child believe code also posted component factory code similar thought require compiler", "d": "8/2017"}, {"body": "receiving external html modifying hrefs routerlinks server side since safehtml nt process bind links work toxicable one solutions work scenario need include compiler option order angular process html contains routerlinks plunkr basic scenario nt work looking solution could work ptollena ever solve external html believe similar issue described thanks", "d": "8/2017"}, {"body": "getting similar problem component input looking like class got following export class example viewchild name name ngoninit const private oninputchange search string code works expected application however try test working test moment expect oninputchange method called new input value never happens anyone help would appreciate", "d": "8/2017"}, {"body": "navigate safe place loose place application able logout keep url log another user example url pointer resource application decides whether resource available logged user nt redirect elsewhere case using locationreload need", "d": "8/2017"}, {"body": "still", "d": "8/2017"}, {"body": "check answer full working example explanation", "d": "8/2017"}, {"body": "think still issue pain us well", "d": "8/2017"}, {"body": "one year later running request showing support nt get closed open long time", "d": "8/2017"}, {"body": "voicing support validation blur kind personally like api suggestion systemdisc jan", "d": "8/2017"}, {"body": "see pr issue", "d": "8/2017"}, {"body": "ronalmog url found", "d": "8/2017"}, {"body": "might url", "d": "8/2017"}, {"body": "chrome supporting", "d": "8/2017"}, {"body": "might expected work atm probably makes sense support new feature", "d": "8/2017"}, {"body": "master issue closed fixed aot another issue tracking oninit case aot", "d": "8/2017"}, {"body": "also stuck component related dependencies injection supported transclude element attrs", "d": "8/2017"}, {"body": "could someone explain need check underfined writevalue observations see methods gets called sometimes sometimes times first time null fair enough initial object creation second time actual initial value model perfect third time culprit undefined causing see starts zonejs drainmicrotaskqueue method", "d": "8/2017"}, {"body": "good idea resolve", "d": "8/2017"}, {"body": "using charlesaraya solution angular getting error happening fragment emptynull fixed adding filter fragment observable", "d": "8/2017"}, {"body": "one step ahead believe js private fragment string constructor private route activatedroute ngoninit thisroutefragmentsubscribe fragment gt thisfragment fragment ngafterviewchecked void try documentqueryselector thisfragment scrollintoview catch e one little bloated possible handling fragment invalid fragment element found conditions", "d": "8/2017"}, {"body": "accessibility focus placed target element scroll view screen reader users need target element focused order perceive contents", "d": "8/2017"}, {"body": "seemed like valid issue still feature ca nt directly use use text value use case workaround anyone interested html", "d": "8/2017"}, {"body": "kurtgokhan see comments nt expect reponses closed issues nt monitored", "d": "8/2017"}, {"body": "issue closed april year later still facing problem", "d": "8/2017"}, {"body": "issue", "d": "8/2017"}, {"body": "probably make sense raise new issue link one doubt anyone dev team following closed issues", "d": "8/2017"}, {"body": "never mind forgot exact property set false", "d": "8/2017"}, {"body": "received error code run jsonparse result result string instead array objects ie got instead import storage ionicstorage private static readonly server server getstorage promise return thisstorageget loginserviceserver thisgetstorage value gt let servers server jsonparse value server", "d": "8/2017"}, {"body": "hmmm get error find differ supporting object error running prod build code simply works fine errors ps dont get helpful info error message telling codetemplate associated error supposedly added almost year ago closed", "d": "8/2017"}, {"body": "hi issue effectively prevents us upgrading hybrid app angular thoughts could resolved submit pr comment states also reverted line replaced originally introduced", "d": "8/2017"}, {"body": "also blocked nt able upgrade new versions since reverted sure frequency issue low either hard track infinite digests still allow app run properly performance bad able realize happening via chrome extension showing angular digest frequency", "d": "8/2017"}, {"body": "generally keen changing digest run microtask queue empty tends hide programming errors often hardtotrackdown performance implications unfortunately means running watcher lead infinite digest errors unless change run outside angular zone clear still use watch listener function new downgrademodule decouples change detections two frameworks could possibly help situations docs added", "d": "8/2017"}, {"body": "vicb update said thinking curious know anything yet", "d": "8/2017"}, {"body": "seeing movement request way dynamically pull template component im currently using angular thanks", "d": "8/2017"}, {"body": "hi using angularquickstart first time npm starteed done implementation functionality effected browser able see correct put time trying execute npm start getting errors debugtxt please help", "d": "8/2017"}, {"body": "eoz solution ca nt handle conditional var initialization like works explicitly check var init btw hate ie lot patches make run", "d": "8/2017"}, {"body": "ikuriel even simpler", "d": "8/2017"}, {"body": "yes simpler tnx", "d": "8/2017"}, {"body": "btw today chromeoperasafarifirefox autocorrect nt tested ie yet tested chrome behavior say hand corrected think confusion pkozlowskiopensource referring see fiddle see also corresponding issue angularjs", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "please stop using hit subscribe andor add emote peoples responses agree disagree drives everyone crazy useless notifications patiently wait features marked implementation point based issues labels subscribe emotes added yes everyone wants feature adding weight conversation unless providing sort insight implementation lets try make next notification feature actual closing issue", "d": "8/2017"}, {"body": "implementation issue currently blocked fact services easily tree shakable see feel free suggest designed issues reduce want seee core sooner", "d": "8/2017"}, {"body": "like use static page title reusing existing components adding service feels little bit powered", "d": "8/2017"}, {"body": "solution", "d": "8/2017"}, {"body": "think new code leaves case urllength simple removing url whold enough", "d": "8/2017"}, {"body": "still issue workaround", "d": "8/2017"}, {"body": "issue trying put jsonld properties template since recommended way google", "d": "8/2017"}, {"body": "able get work like add element via sanitizerbypasssecuritytrusthtml fixed id index use js jquery index element add additional markup using js", "d": "8/2017"}, {"body": "use thissanitizerbypasssecuritytrusthtml provided template componentdirective private jsonld public jsonldstring private setjsonlddata thisjsonld context type service name thisprovidername description thisproviderdescription aggregaterating type aggregaterating ratingvalue bestrating ratingcount url thisproviderurl thisjsonldstring jsonstringify thisjsonld thisjsonldstring thissanitizerbypasssecuritytrusthtml thisjsonldstring", "d": "8/2017"}, {"body": "sounds right libraries loaded client code compiled typescript served way dynamically ts could using bypass function considered best practice", "d": "8/2017"}, {"body": "still solution would nice feature watches specific value changes", "d": "8/2017"}, {"body": "necessary planned already explained", "d": "8/2017"}, {"body": "solved issue using redirect", "d": "8/2017"}, {"body": "dgroh issue extremely old version router dead better open new issue reproduction issue edit already disregard comment", "d": "8/2017"}, {"body": "also issue clicking router link navigating component another", "d": "8/2017"}, {"body": "yep params recoverable \u00e7 \u00e9 facing routing issue accidental page refresh changes improvements", "d": "8/2017"}, {"body": "complicate iterate map code seems working componentts thismapvalue new map thismapvalueset value thismapvalueset value key result displaying empty li", "d": "8/2017"}, {"title": "transition move triggered input model update", "body": "version reproduction link steps reproduce add item item moves position quickly type something input expected added item transition listenter actually happening added gets listmove transition applied looking bit code seems move transition applied whenever position element list changes triggered upon update assume triggered input change causes transition group component updated", "num": "6489", "d": "8/2017"}, {"title": "get absolute position click", "body": "trying open contextual menu click vue component click want get coordinates mouse display menu place mouse clicked trying play around parameters event click function figure got indications", "num": "6488", "d": "8/2017"}, {"title": "provideinject custom directives", "body": "problem feature solve user uses custom directive app multiple places might need configure directive two different ways depending area app directive used configuration used many instances one areas providing configuration every instance becomes redundant cumbersome proposed api look like think provideinject pattern would good solution user could add different configurations top level provider components use custom directive normally descendants js var provider provide foo bar var otherprovider provide foo baz vuedirective bar inject foo bind el binding bindinginjectionsfoo bindingfoo confident best place actual injections live directive hook arguments ideas code example", "num": "6487", "d": "8/2017"}, {"title": "unwatch event server write", "body": "version reproduction link steps reproduce version reproduction link steps reproduce watch storestatescrolly handler function scrolly deep true expected writing template watch function need unwatch leaving component actually happening nt find relevant cancellation api document", "num": "6486", "d": "8/2017"}, {"title": "writing template watch function need unwatch leaving component", "body": "", "num": "6485", "d": "8/2017"}, {"title": "contenteditable problem", "body": "version reproduction link steps reproduce set attribute contenteditable plaintextonly change contenteditable true expected contenteditable plaintextonly actually happening contenteditable true", "num": "6484", "d": "8/2017"}, {"title": "mainjs\u518d\u67d0\u4e9b\u673a\u578b\u4e0a\u672a\u8fd0\u884c", "body": "version reproduction link steps reproduce \u542f\u52a8dev expected actually happening \u542f\u52a8dev", "num": "6483", "d": "8/2017"}, {"title": "routes working production application", "body": "version reproduction link steps reproduce path content component content meta title content expected redirect content route actually happening route working using development server production application route stops working error get content", "num": "6481", "d": "8/2017"}, {"title": "memory leaks serversiderender vue", "body": "version reproduction link steps reproduce npm start memory leaks server side visiting expected memory leak actually happening memory leak caused vueuse installedplugins ca nt release", "num": "6479", "d": "8/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u671f\u671b\u53ef\u4ee5\u5207\u6362option actually happening", "num": "6476", "d": "8/2017"}, {"title": "unclear unit test run", "body": "version steps reproduce contributing guide says ensure tests passes opening pr npm run test runs tests npm run dev test run tests former passes correctly latter fails lof errors sure one run pass circleci seems run expected tests devwatch command running whole suite actually happening devwatch loads different karma configuration file running whole suite", "num": "6475", "d": "8/2017"}, {"title": "element data cleared initializing vue instance", "body": "version reproduction link steps reproduce set jquery data element inside vue root element initialize vue instance root instance try accessing jquery data element expected data still element rendered vue already actually happening data cleared various jquery plugins running elements use hidden data keeping current state seems weird vue would recreate dom elements especially nt vue bindings", "num": "6474", "d": "8/2017"}, {"title": "using vue amp modules", "body": "version reproduction link steps reproduce search amp forum modern browserjavascript usage modern browserjavascript usage discussed posted questions answer example simple cli template could easily used minimal vue file transpiling friendly output expected documentation example using cli avoid babel transpiling bundling remove module use actually happening luck far answers questions possibly simply documentation issue use currently simply possible vue url simply main repo use vue yet amp module based temporary dual build legacy workflow strictly npm run scripts node scripts call rollup example built task manager see documentation docsify based believe built vue", "num": "6472", "d": "8/2017"}, {"title": "objects evaluated strings bound inside within component", "body": "version reproduction link steps reproduce sure check included jsfiddle simple example create new component select element bind value options inside select element actual option object write onchange method triggers input event follow vmodel pattern use newly created component inside vuejs app pass array objects options notice option selected selected value string object object rather actual object keep mind works perfectly fine select field outside component using inside component bug appears expected option inside select bound object within component expect value selected item object string actually happening option inside select bound object within component value selected item string representation object rather object building component library project library prestyled inputs use forms select components like retain original object rather key since typically need send entire object back server updating said object", "num": "6471", "d": "8/2017"}, {"title": "vfor empty dom wrapper", "body": "problem feature solve want generate two objects dom per single object proposed api look like would render", "num": "6470", "d": "8/2017"}, {"title": "beforeunmount lifecycle", "body": "problem feature solve try build vue version reactoverdrive needs get size position component destroyed currently set false change route lifecycle component seems like viffalse dom removed called vm destroy called seems way get real dom component destroyed related get position size component destroyed vif proposed api look like may useful cases viffalse called dom removed called optional called vm destroy called like possible viffalse called dom removed vm destroy called", "num": "6469", "d": "8/2017"}, {"title": "weird binding behavior slots involved", "body": "version reproduction link steps reproduce child component attribute changes nt observed component question distributed using slots change made parent component one used distributed child component change observed another entity page uses exact binding please see commented portion testpage marked todo uncomment observe expected attached fiddle clicking swap button change background color label red blue uncommenting portion marked todo uncomment observe corrects behavior actually happening element page nt use exact binding change nt observed implementing default layout library gets used application came across bug trying alter style binding component button clicked component distributed using layout slots", "num": "6468", "d": "8/2017"}, {"title": "keystrokes missing vmodel used", "body": "version reproduction link steps reproduce issue occurs internet exporer textareas input fields using vmodel binding open ie quickly enter text second textarea maybe press buttons time used barcode scanner enter texts also possible reproduce keyboard also recognized happens often slow machines expected keys recognized actually happening letters missing randomly made video behaviour could reproduce even vuejs page added von input textarea see whats logged result ac ac b never recognized even input event also changed intercharacter delay scanner ms ms without success", "num": "6466", "d": "8/2017"}, {"title": "add shortcut listen event child", "body": "", "num": "6465", "d": "8/2017"}, {"title": "add comparison moon", "body": "problem feature solve lately moon framework good pr probably direct competitor vue syntax size perfs similar proposed api look like would nice entry", "num": "6464", "d": "8/2017"}, {"title": "vif nt call destroyed lifecycle component", "body": "version reproduction link steps reproduce play select look console everytime user change model view updated component call destroyed event expected call destroyed event actually happening destroyed event called reproduction reusable table component app change type make ajax call router myrouter type change data title", "num": "6463", "d": "8/2017"}, {"title": "vue clientside hydration", "body": "wondering possible find vue clientside hydrated course server app provided valid html client corresponded docs example somebody knows thanks", "num": "6462", "d": "8/2017"}, {"title": "createelement conflict text style button", "body": "version reproduction link steps reproduce push change button expected expect button text change actually happening program caused errors", "num": "6461", "d": "8/2017"}, {"title": "hot module replacement seems get stuck starting optimize css", "body": "version reproduction link steps reproduce vue init webpack blah defaults except nightwatch npm install npm run dev running windows expected change files get reloaded actually happening detects change nt update webpage console says starting optimize css every time detects change", "num": "6460", "d": "8/2017"}, {"title": "sync modifier template string", "body": "version reproduction link steps reproduce expected work fine actually happening report assigning rvalue", "num": "6459", "d": "8/2017"}, {"title": "ability disable change events already change event handler", "body": "problem feature solve change event handler changes values fields change event handlers want suppress disable event handlers changing values common pattern frameworks lot sharepoint proposed api look like perhaps global flag like vmdisablechangeevents", "num": "6458", "d": "8/2017"}, {"title": "able pass multiple events function templates", "body": "problem feature solve multiple event handlers call function add noise templates propose dry bit proposed api look like currently pass multiple functions single event handler like html however think would really handy able inverse ie passing function multiple event handlers today instance html would great could instead html way clearly see one glance many different behavior attached component also modifying callbacks easier thoughts", "num": "6457", "d": "8/2017"}, {"title": "nested smart components ssr", "body": "problem feature solve introduction separation concerns important always try encapsulate data logic inside independent smart components reusable throughout application smart components usually perform asynchronous operations like data fetching nested inside problem currently ssr solution proposed example requires asynchronous operations performed asyncdata hook unfortunately available routecomponents registered router makes routecomponents become supersmart take responsibility data underlying dumb components nt allow smart component placed beneath routecomponent ssr serverside renderer wo nt wait nested smart component finish asynchronous work desired behavior serverside renderer wait root child components resolve recursively hence let every active smart component attain renderable state benefits feature allow better code structuring seamless ssr support also extremely helpful kind situations layout application needs computed programmatically think content management system one would able compose final layout singlepage application simply putting together independent arbitrary building blocks top template smart components amp apis smart components served best combination graphql every little smart component asks graphql client small part graph api server offer fetches data needs less gql client batch little queries one big query every fire way smart components make modular architecture piece cake define components active actual context execution inactive components hidden due certain application state conditions like current route example proposed api look like api proposal able make component smart regardless placed application basically means making asyncdata hook available component routecomponents becomes classical dependency tree problem tree components compose flat dependency tree filtering dumb components resulting array promises ssr needs await finally rendering page performance considerations traversing component tree every ssr request seems inefficient step probably done webpack compile time", "num": "6456", "d": "8/2017"}, {"title": "vm forceupdate duplicates content childs consist slot followed text", "body": "version reproduction link steps reproduce component render function return element contains slot directly followed raw text expected new content completely replaces old content rerender actually happening new content appended old content rerender seems like fixed render functions compiled templates release notes version says small acrosstheboard performance improvement render functions compiled templates skip normalization nested children arrays based information inferred templates compile time could nt reproduce files project generated webpack template jsx affected seen issue render functions seen linked fiddle", "num": "6455", "d": "8/2017"}, {"title": "better handling recursion computed values", "body": "problem feature solve computed values objects reference cause much recursion error cases needed recalculation triggered change property computation depend computed values recalculated properties change value depends less calculation needed less errors occur example case code cause much recursion better behavior would resolve resolve fiddle causing much recursion fiddle one dependency removed error proposed api look like api would change", "num": "6454", "d": "8/2017"}, {"title": "img tag automatically adds end tag", "body": "version reproduction link steps reproduce use vue become sub tag img expected use vue become sub tag img actually happening use vue become sub tag img \u89c1", "num": "6452", "d": "8/2017"}, {"title": "vue nt pre treat prop local data anything else considered", "body": "problem feature solve vue want pass prop father child component need manually create local data save prop makes lots useless works vue pre treat prop local data property child component direct use data whatever want worries change father component data vue want strictly enforce onewaydataflow make child component data relative independence necessary proposed api look like feature suggest like props initialcounter initobject methods function dosomething function use local data thisinitialcounter", "num": "6451", "d": "8/2017"}, {"title": "\u7528\u4e8etypescript\u7684dts\u6587\u4ef6bug", "body": "version reproduction link steps reproduce \u5982\u679c\u6211\u7528script\u5f15\u5165vuejs\u7684\u65b9\u5f0f typescript\u975e\u6a21\u5757\u5316\u6765\u5f00\u53d1 \u8fd9\u91cc\u7684dts\u5c31\u65e0\u6cd5\u4f7f\u7528 expected null actually happening null null", "num": "6449", "d": "8/2017"}, {"title": "\u7528\u4e8etypescript\u7684dts\u6587\u4ef6bug", "body": "\u5982\u679c\u6211\u7528script\u5f15\u5165vuejs\u7684\u65b9\u5f0ftypescript\u975e\u6a21\u5757\u5316\u6765\u5f00\u53d1 \u8fd9\u91cc\u7684dts\u5c31\u65e0\u6cd5\u4f7f\u7528", "num": "6448", "d": "8/2017"}, {"title": "change prop type checking use instanceof instead typeof", "body": "problem feature solve currently prop type checking fails passing object extends expected type would allow anything inheriting expected type pass check proposed api look like line child classes would also pass mind component checking pass object extends string pass typecheck born issue one users passing string castable object extends string prop vue component interested check", "num": "6447", "d": "8/2017"}, {"title": "could typechecking use instanceof instead typeof", "body": "line child classes would also pass mind component checking pass pass typecheck", "num": "6446", "d": "8/2017"}, {"title": "weex code branch main vue code", "body": "problem feature solve weex related code added core repo would allow better readability proposed api look like vueweexvuejs vuevuejs", "num": "6445", "d": "8/2017"}, {"title": "accessibility vmodel update ui input adjusted voiceover", "body": "version reproduction link steps reproduce issue occurs ios devices tested using iphone ipad reproducing require turning builtin screenreader voiceover voiceover enabled settings gt general gt accessibility suggest adjusting accessibility shortcut last item accessibility settings allow tripleclick home button enable voiceover navigate codepen voiceover press range input finger mouse drag left right observe stars appear underneath along number reflecting total number correct behavior turn voiceover select range input hovering finger swiping leftright highlight inform swipe one finger adjust swipe one finger adjust observe neither stars rating adjusted expected adjusting range input voiceover expect see stars rating number adjust time actually happening changes reflected ui adjusting range input voiceover may issue best opened apple depends watched behind scenes though may possible correct within vue ensuring updated change events example whereas right may rely events nt apply screen reader manipulation", "num": "6444", "d": "8/2017"}, {"title": "use tostring determine function prop modified", "body": "problem feature solve convenient use pass anonymous function component template certain instances example provide formatting function slot feels like overkill however anonymous functions always cause child component rerender parent component rerenders function recreated suggest comparison false next try comparing tostring rerender also false unlikely noticeable negative performance impact function props terribly common changing fly even less benchmarking functiontostring shows ops per second pretty standard windowschrome system regardless function size proposed api look like proposing api changes", "num": "6443", "d": "8/2017"}, {"title": "\u5e0c\u671bvmodel\u80fd\u63d0\u4f9bjs\u8868\u8fbe\u5f0f\u7684\u652f\u6301", "body": "problem feature solve proposed api look like export default data return", "num": "6442", "d": "8/2017"}, {"title": "passing props root instance", "body": "version reproduction link although putting works steps reproduce declare prop root application instance pass prop represents root app expected root app props data actually happening props data nt showing", "num": "6440", "d": "8/2017"}, {"title": "function", "body": "typeerror function eval handleerror eval arrayeval eval nexttickhandler eval", "num": "6439", "d": "8/2017"}, {"title": "new issue mine", "body": "", "num": "6437", "d": "8/2017"}, {"title": "injectprovide working vueextend class", "body": "version reproduction link steps reproduce use vueextend create subclass contains option inject property child component subclass expected property injected correctly actually happening property injected srccoreutiloptionsjs line set function may cause issue", "num": "6436", "d": "8/2017"}, {"title": "keyupmetaenter", "body": "version reproduction link steps reproduce per docs modifier key meta work apple keyboards cmd key nt work combined enter works fine keyupctrlenter expected keyupmetaenter myfunc fires myfunc cmd enter pressed mac actually happening myfunc nt fire", "num": "6435", "d": "8/2017"}, {"title": "add shorthand syntax vif vfor", "body": "", "num": "6434", "d": "8/2017"}, {"title": "componentparse report error put correct js string containing script section", "body": "version reproduction link steps reproduce see error terminal expected run correctly actually happening build error component split sections script style script bug happened script section js string like var teststring may appear like test var teststring script section failed build", "num": "6433", "d": "8/2017"}, {"title": "consider feature detecting browsers instead ua sniffing", "body": "problem feature solve envjs currently contains user agent sniffing detections faked may always return expected instance also detect firefox android real intention detect webkit browsers android would require also checking similarly android devices use uas get around ironically bad ua sniffing true ios detected edge detected ie detected detected chrome detected also returns true opera false chrome ios proposed api look like", "num": "6432", "d": "8/2017"}, {"title": "add class element passed slot", "body": "hi way working expect output also javascript const items slotsitem working", "num": "6431", "d": "8/2017"}, {"title": "errorhandler catch uncaught exceptions", "body": "version reproduction link steps reproduce use handle errors create request throw error within request expected catch error actually happening catch error", "num": "6430", "d": "8/2017"}, {"title": "", "body": "", "num": "6429", "d": "8/2017"}, {"title": "listens camelcase event", "body": "problem feature solve markup currently compiles always written event handlers kebabcase surprised compiler created event handler camelcase proposed api look like compiler output event handlers camelcase", "num": "6428", "d": "8/2017"}, {"title": "vue get css style", "body": "version reproduction link steps reproduce expected \u83b7\u53d6\u5230css\u4e2d\u7684\u6837\u5f0f actually happening", "num": "6427", "d": "8/2017"}, {"title": "props passed attrs route props", "body": "version reproduction link steps reproduce setup wrapping component proxies props child using try pass props using api expected props route passed component actually happening none pass", "num": "6426", "d": "8/2017"}, {"title": "class binding class name b black b gray causes template compilation error", "body": "version reproduction link steps reproduce take element add vbind class b black bool seems happen class name contains two hyphens row problem people using tachyons css expected b black class border black applied containing element actually happening compilation error using tachyons css styling trying conditionally change border color double hyphen seems legitimate class name", "num": "6425", "d": "8/2017"}, {"title": "adding support templateurl optional", "body": "problem feature solve based blog regarding view template url support purpose including templateurl vuejs given complexity project requires templateurl web applications targeted towards performance application vuejs requires lot component written line html given complexity hard debug time teams full stack people requesting provide support templateurl vuejs making vuejs standard choice creating large scale enterprise level application feature request proposed api look like define new component called todoitem vuecomponent todoitem templateurl todo", "num": "6424", "d": "8/2017"}, {"title": "adding support templateurl optional", "body": "based blog regarding view template url support purpose including templateurl vuejs given complexity project requires templateurl web applications targeted towards performance application vuejs requires lot component written line html given complexity hard debug time teams full stack people requesting provide support templateurl vuejs making vuejs standard choice creating large scale enterprise level application feature request", "num": "6423", "d": "8/2017"}, {"title": "make reactive", "body": "version reproduction link steps reproduce see code pen please expected changes computed data view updates actually happening changes vue nt know", "num": "6422", "d": "8/2017"}, {"title": "template reacting prop change", "body": "version reproduction link steps reproduce set prop object pass prop subsequent children child emit update gets passed root component react changing prop expected upon mutating prop root component expected template references prop react change actually happening upon mutating prop root component template references prop still show initial value even though consolelog prop change showing updated value initially using found following caveat reactivity changed change affect template rendering", "num": "6421", "d": "8/2017"}, {"title": "render activator slot default slot", "body": "version reproduction link steps reproduce click run expected expected render default slot component actually happening rendered default activator components", "num": "6420", "d": "8/2017"}, {"title": "extends option working intended single file components", "body": "version reproduction link steps reproduce create new single file component extends another single file component using option expected component extended actually happening nothing appears original component possible use option js files like using mixins vue files", "num": "6419", "d": "8/2017"}, {"title": "used keepalive want switch users log app clear caches whole page", "body": "problem feature solve used keepalive want switch users log app clear caches whole page proposed api look like load whole page", "num": "6418", "d": "8/2017"}, {"title": "used keepalive want switch users log app clear caches whole page", "body": "", "num": "6417", "d": "8/2017"}, {"title": "add syntax sugar vbind", "body": "version reproduction link steps reproduce click run expected actually happening wish make shorter syntax like prop name existing variable parent expand", "num": "6416", "d": "8/2017"}, {"title": "add syntax sugar vbind", "body": "", "num": "6415", "d": "8/2017"}, {"title": "make routerview temporarily keepalive", "body": "problem feature solve hi guys hava hard problem push b b push c need b keep alive c back b b back need b destroy proposed api look like need keep keep alive permanently keep b keep alive temporarily solutions thanks", "num": "6413", "d": "8/2017"}, {"title": "vuex\u5b9e\u4f8b\u6ca1\u6709\u88ab\u6ce8\u5165\u5230\u5b50\u7ec4\u4ef6", "body": "version reproduction link steps reproduce \u4f9d\u8d56 npm install \u6784\u5efa npm run page npm run server expected actually happening vuex\u5b9e\u4f8b\u6ca1\u6709\u88ab\u6ce8\u5165\u5230\u5b50\u7ec4\u4ef6 \u65e0\u6cd5\u5728\u5b50\u7ec4\u4ef6\u7684\u8ba1\u7b97\u5c5e\u6027\u4e2d\u8bbf\u95ee\u5230", "num": "6412", "d": "8/2017"}, {"title": "replace flow typescript avoid facebook bsd patents license", "body": "problem feature solve flow facebook bsd patents license project built proposed api look like typescript apache license", "num": "6411", "d": "8/2017"}, {"title": "replace flow typescript avoid facebook bsdpatents license", "body": "title", "num": "6410", "d": "8/2017"}, {"title": "import \u5355\u6587\u4ef6\u7ec4\u4ef6\u4e4b\u540e \u624b\u52a8\u79fb\u9664ctor", "body": "version reproduction link steps reproduce \u9996\u5148 npm install \u5b89\u88c5\u4f9d\u8d56 \u7136\u540e npm run page \u751f\u6210html npm run server \u81ea\u52a8\u7f16\u8bd1\u548c\u6a21\u5757\u70ed\u66f4\u65b0 open \u5728\u63a7\u5236\u53f0\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u6e32\u67d3\u9519\u8bef expected actually happening", "num": "6409", "d": "8/2017"}, {"title": "vuejs render api calls ssr", "body": "problem feature solve unable render vue ssr api call javascript turned documentation also explain proposed api look like document possibility create", "num": "6408", "d": "8/2017"}, {"title": "allowing vonce accept boolean flag", "body": "problem feature solve right render component creation great data available however would nice able allow component rerender async data available freeze contents longer impacts performance proposed api look like allow take boolean parameter eg parameter truthy default behavior applied otherwise ignored", "num": "6407", "d": "8/2017"}, {"title": "inlinetemplate default template render properties passed options components", "body": "problem feature solve like behavior new vue instance inlinetemplate default components vue components printing one template render properties options btw concerns isolation parent child component scopes responsibility developer like inlinetemplates prop proposed api look like", "num": "6406", "d": "8/2017"}, {"title": "transition class removed", "body": "version reproduction link steps reproduce \u9a6c\u4e0a\u5207\u5230\u6d4f\u89c8\u5668\u7684\u5176\u4ed6\u6807\u7b7e\u9875 \u7b49\u81f3\u5c11 expected \u56de\u5230\u6d4b\u8bd5\u9875\u9762\u65f6 test \u5e94\u8be5\u663e\u793a\u51fa\u6765 actually happening test toggle \u6700\u65b0 \u6700\u540e\u7684\u72b6\u6001\u5e94\u8be5\u662f", "num": "6405", "d": "8/2017"}, {"title": "suggestion function receive array argument", "body": "problem feature solve first want thanks excellent framework sometimes use many plugins component code like think little troublesome suggestion function receive array argument code like proposed api look like vueuse plugin arguments object array function plugin example", "num": "6404", "d": "8/2017"}, {"title": "error attempting clone element append child render", "body": "version reproduction link steps reproduce jsfiddle example uncomment expected output foobar foobar actually happening uncaught typeerror read property propsdata undefined generated new vue trying replicate something similar example react", "num": "6403", "d": "8/2017"}, {"title": "question injectprovide", "body": "problem feature solve reason inject provided value see called see simple proposed api look like js hope work gt const vm new vue provide foo const child new vue parent vm provide foo inject foo expect childfoo tobe js import util util const parent new vue provide util inject util mounted thisutilsamecodeforuse const child new vue parent parent inject util mounted thisutilsamecodeforuse computed util gt util looks ugly", "num": "6402", "d": "8/2017"}, {"title": "show list dom revered vue js", "body": "problem feature solve want show vue js list vfor reversed dom object change created reversed list vfor html default list top bottom want append items bottom top dom see telegram web messages list ngrepeat way vfor another option thanks proposed api look like see telegram web messages list ngrepeat", "num": "6401", "d": "8/2017"}, {"title": "changing class input value bound value resets blank class updated", "body": "version reproduction link steps reproduce enter value first input box change class enter value second input box change class purpose code write custom component using guide expected reset text change class input box actually happening resetting value blank nt happen input box bound prop value whole point task create custom input component bound want indicate error process error handling display custom component", "num": "6400", "d": "8/2017"}, {"title": "\u5173\u4e8evue\u7684\u5b50\u7ec4\u4ef6\u6d89\u53ca\u4ea4\u4e92\u65f6\u7684\u6a21\u578b\u8bbe\u8ba1\u6a21\u5f0f\u95ee\u9898", "body": "problem feature solve \u4e00\u822c\u5178\u578b\u7684\u7236\u5b50\u7ec4\u4ef6\u4e2d \u5b50\u7ec4\u4ef6\u901a\u8fc7props\u5b9a\u4e49\u7236\u7ec4\u4ef6\u7684\u4f20\u5165\u53c2\u6570 \u5728\u5b50\u7ec4\u4ef6\u7684\u67d0\u4e2a\u9875\u9762\u5143\u7d20\u4e2d \u53ef\u4ee5\u76f4\u63a5\u7ed1\u5b9aprops\u7684\u5b9a\u4e49\u7684\u5c5e\u6027 \u5982\u679c\u9700\u8981\u8f6c\u6362 \u53ef\u4ee5\u5728\u5b50\u7ec4\u4ef6\u4e2d\u58f0\u660ecomputed \u5c5e\u6027 \u73b0\u5728\u7684\u95ee\u9898\u662f \u5982\u679c\u5b50\u7ec4\u4ef6\u7684\u7684\u9875\u9762\u662f\u53ef\u4ee5\u7f16\u8f91\u7684 \u6bd4\u5982input \u90a3\u4e48input \u7684\u7ed1\u5b9a\u5230\u4e00\u4e2acomputed\u5c5e\u6027 \u610f\u5473\u7740computed \u5c5e\u6027\u9700\u8981\u91c7\u7528getset\u65b9\u5f0f\u6765\u5b9a\u4e49 \u4e3a\u4e86\u4fdd\u8bc1set\u4e2d\u7684\u6570\u636e\u80fd\u5b58\u50a8 \u53c8\u9700\u8981\u5728data\u4e2d\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf \u8fd9\u5c31\u5bfc\u81f4\u4e86\u4e00\u4e2a\u5b50\u7ec4\u4ef6 \u4e3a\u4e86\u4ea4\u4e92\u80fd\u529b \u9700\u8981data props computed \u4f3c\u4e4e\u6709\u70b9\u7e41\u7410 \u9700\u8981\u5b9a\u4e49\u5927\u91cf\u7684\u6a21\u578b \u90a3\u4e48 \u9488\u5bf9\u8fd9\u79cd\u666e\u904d\u5b58\u5728\u7684case \u5728vue\u4e0b\u7684\u4e00\u822c\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4ec0\u4e48 \u6709\u4ec0\u4e48\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848 proposed api look like \u6e05\u65b0\u7684\u5904\u7406\u6a21\u5f0f", "num": "6399", "d": "8/2017"}, {"title": "\u5173\u4e8evue\u7684\u5b50\u7ec4\u4ef6\u7684props", "body": "\u4e00\u822c\u5178\u578b\u7684\u7236\u5b50\u7ec4\u4ef6\u4e2d \u5b50\u7ec4\u4ef6\u901a\u8fc7props\u5b9a\u4e49\u7236\u7ec4\u4ef6\u7684\u4f20\u5165\u53c2\u6570 \u5728\u5b50\u7ec4\u4ef6\u7684\u67d0\u4e2a\u9875\u9762\u5143\u7d20\u4e2d \u53ef\u4ee5\u76f4\u63a5\u7ed1\u5b9aprops\u7684\u5b9a\u4e49\u7684\u5c5e\u6027 \u5982\u679c\u9700\u8981\u8f6c\u6362 \u53ef\u4ee5\u5728\u5b50\u7ec4\u4ef6\u4e2d\u58f0\u660ecomputed \u5c5e\u6027 \u73b0\u5728\u7684\u95ee\u9898\u662f \u5982\u679c\u5b50\u7ec4\u4ef6\u7684\u7684\u9875\u9762\u662f\u53ef\u4ee5\u7f16\u8f91\u7684 \u6bd4\u5982input \u90a3\u4e48input \u7684\u7ed1\u5b9a\u5230\u4e00\u4e2acomputed\u5c5e\u6027 \u610f\u5473\u7740computed \u5c5e\u6027\u9700\u8981\u91c7\u7528getset\u65b9\u5f0f\u6765\u5b9a\u4e49 \u4e3a\u4e86\u4fdd\u8bc1set\u4e2d\u7684\u6570\u636e\u80fd\u5b58\u50a8 \u53c8\u9700\u8981\u5728data\u4e2d\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf \u8fd9\u5c31\u5bfc\u81f4\u4e86\u4e00\u4e2a\u5b50\u7ec4\u4ef6 \u4e3a\u4e86\u4ea4\u4e92\u80fd\u529b \u9700\u8981data props computed \u4f3c\u4e4e\u6709\u70b9\u7e41\u7410 \u9700\u8981\u5b9a\u4e49\u5927\u91cf\u7684\u6a21\u578b \u90a3\u4e48 \u9488\u5bf9\u8fd9\u79cd\u666e\u904d\u5b58\u5728\u7684case \u5728vue\u4e0b\u7684\u4e00\u822c\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4ec0\u4e48 \u6709\u4ec0\u4e48\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848", "num": "6398", "d": "8/2017"}, {"title": "\u5173\u4e8evue\u7684\u5b50\u7ec4\u4ef6\u7684props", "body": "\u4e00\u822c\u5178\u578b\u7684\u7236\u5b50\u7ec4\u4ef6\u4e2d \u5b50\u7ec4\u4ef6\u901a\u8fc7props\u5b9a\u4e49\u7236\u7ec4\u4ef6\u7684\u4f20\u5165\u53c2\u6570 \u5728\u5b50\u7ec4\u4ef6\u7684\u67d0\u4e2a\u9875\u9762\u5143\u7d20\u4e2d \u53ef\u4ee5\u76f4\u63a5\u7ed1\u5b9aprops\u7684\u5b9a\u4e49\u7684\u5c5e\u6027 \u5982\u679c\u9700\u8981\u8f6c\u6362 \u53ef\u4ee5\u5728\u5b50\u7ec4\u4ef6\u4e2d\u58f0\u660ecomputed \u5c5e\u6027 \u73b0\u5728\u7684\u95ee\u9898\u662f \u5982\u679c\u5b50\u7ec4\u4ef6\u7684\u7684\u9875\u9762\u662f\u53ef\u4ee5\u7f16\u8f91\u7684 \u6bd4\u5982input \u90a3\u4e48input \u7684\u7ed1\u5b9a\u5230\u4e00\u4e2acomputed\u5c5e\u6027 \u610f\u5473\u7740computed \u5c5e\u6027\u9700\u8981\u91c7\u7528getset\u65b9\u5f0f\u6765\u5b9a\u4e49 \u4e3a\u4e86\u4fdd\u8bc1set\u4e2d\u7684\u6570\u636e\u80fd\u5b58\u50a8 \u53c8\u9700\u8981\u5728data\u4e2d\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf \u8fd9\u5c31\u5bfc\u81f4\u4e86\u4e00\u4e2a\u5b50\u7ec4\u4ef6 \u4e3a\u4e86\u4ea4\u4e92\u80fd\u529b \u9700\u8981data props computed \u4f3c\u4e4e\u6709\u70b9\u7e41\u7410 \u9700\u8981\u5b9a\u4e49\u5927\u91cf\u7684\u6a21\u578b \u90a3\u4e48 \u9488\u5bf9\u8fd9\u79cd\u666e\u904d\u5b58\u5728\u7684case \u5728vue\u4e0b\u7684\u4e00\u822c\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4ec0\u4e48 \u6709\u4ec0\u4e48\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848", "num": "6397", "d": "8/2017"}, {"title": "make flow chart document", "body": "problem feature solve flow chart proposed api look like flow chart", "num": "6396", "d": "8/2017"}, {"title": "vue \u548cvfor\u5faa\u73af\u76f8\u5173\u7684\u4e00\u4e2abug", "body": "version reproduction link steps reproduce expected \u65e0 actually happening \u65e0", "num": "6395", "d": "8/2017"}, {"title": "style change component dynamic changes", "body": "version reproduction link steps reproduce click one cloud except last one expected cloud click change red disappear actually happening turns red disappear cloud next row takes place also turns red since right datatest attribute", "num": "6394", "d": "8/2017"}, {"title": "enhance velse work vfor", "body": "problem feature solve cases use vfor vif around velse show results element seems like making velse work directly vfor output anytime vfor combined vif one returns results would enhance vue proposed api look like itemname items", "num": "6393", "d": "8/2017"}, {"title": "vprop directive pairs sync stateless components", "body": "problem feature solve writing stateless components confusing underdocumented especially components contain ui elements user interacts gets even complex multiple ui elements component particularly complex elements like multiple select checkboxes many people fall trap populating state props antipatterns much vue documentation focuses twoway databinding internal state community favors writing pure components without state communicate changes back parent provides like interface parent component still requires lot repeat code component repetition props trying sync back parent additionally bind correct event based input type well including special care edge cases handled component author lead missing edge cases errors add significant complexity component proposed api look like syntactic sugar smartly binds correct event based field type would great similar directive use components nt keeping internal state simply want emit update event back parent case could syntactic sugar would pair nicely parent", "num": "6392", "d": "8/2017"}, {"title": "deep json cropped assigning data", "body": "version reproduction link steps reproduce vue instance created fetch json data lot data kind deeply nested structure screens rooms devices items scenes items sensors items fetch data parse everything fine assign vue data thisscreens whole items gone rest still fun thing assignment alters response thisscreens rooms devicesitems empty also datascreens rooms devicesitems expected expect whole json structure saved thisscreens actually happening items gone", "num": "6390", "d": "8/2017"}, {"title": "\u8de8\u5411\u4e0a\u7ea7dom\u4f20\u9012\u4e8b\u4ef6", "body": "version reproduction link steps reproduce expected actually happening \u80fd\u6b63\u786e\u6267\u884clogthree\u65b9\u6cd5", "num": "6389", "d": "8/2017"}, {"title": "invalidate client cache vue js", "body": "really need know clear client caches vuejs got client others files cached indeed nt want", "num": "6388", "d": "8/2017"}, {"title": "typeerror read property tofixed undefined", "body": "version reproduction link steps reproduce create method vue showmessage create object message show false text text data section call showmessage html element using von clickshowmessage set value show true using thismessageshow true print value show using consolelog thismessageshow expected value show set true without errorwarning actually happening get warning error line thismessageshow true typeerror read property tofixed undefined however line consolelog thismessageshow prints correctly issue reproducible button clicked circumstances expected behavior shown jsfiddle dont see error running", "num": "6387", "d": "8/2017"}, {"title": "vuecil\u6253\u5305svg\u51fa\u73b0\u5982\u4e0b\u9519\u8bef", "body": "\u6253\u5305\u597d\u7684svg\u53d8\u6210\u4e0b\u9762\u8fd9\u6837 moduleexports webpackpublicpath indexsvg \u9644\u4e0asvg\u6e90\u7801 \u8fd8\u6709webpack\u914d\u7f6e\u6587\u4ef6 test pngjpggifsvg loader fileloader options name name ext hash", "num": "6386", "d": "8/2017"}, {"title": "share state hook functions directives", "body": "problem feature solve situations necessary share state hook functions directives particularly useful directives attach detach event listeners elements consider following example directive vdrag listener gets attached element requires access values provided hook eg etc problem listener removed element hook order remove event listener element need ensure get reference hook perhaps gone wrong way solution could come registering listener element persistent weakmap finding listener using element problem would alleviated simply attaching listener hook detaching getting listener proposed api look like implement function directive register unreactive state javascript vuedirective sample", "num": "6385", "d": "8/2017"}, {"title": "vforstart vforend like", "body": "problem feature solve want next itemname proposed api look like new directives", "num": "6384", "d": "8/2017"}, {"title": "possible bug handling key", "body": "version reproduction link steps reproduce create x number child components complex strings something like add components inside child components example columns case expected deleting first component component get deleted components created component recreating components kills components inside actually happening deleting row components happens delete first row subsequent rows also get deleted recreated childcomponent inside get dropped never recreated end empty rows columns created dropped watch short video see happening creating row component number columns drop row want exact row dropped rows affected deleting rows discovered dropping row rows behind would also get dropped recreated empty time also discovered changing remove row works better need remove button parent child component wrapped vfor inside div difference two ways first case deletes subsequent components second case component question code looking except markup", "num": "6383", "d": "8/2017"}, {"title": "transitiongroup working tables rows tr", "body": "version reproduction link steps reproduce click button transition expected transition opacity property row appear actually happening transition appear see also", "num": "6382", "d": "8/2017"}, {"title": "string property escaping incorrectly", "body": "version reproduction link steps reproduce pass htmlentity escaped string ampersand prop value control try display eg amp quot example amp amp stuff amp quot expected example amp stuff actually happening example amp amp stuff fiddle links instead specific version", "num": "6381", "d": "8/2017"}, {"title": "", "body": "vue", "num": "6379", "d": "8/2017"}, {"title": "selected option set vmodel working ie", "body": "version reproduction link steps reproduce set select element vmodel one options value objects component mounted callback expected selected option match tags vmodel value actually happening dropdown value remains empty", "num": "6378", "d": "8/2017"}, {"title": "vif velse true vue net", "body": "version reproduction link steps reproduce created project using tutorial expected condition true dom shows content inside vif condition false dom shows content inside velse actually happening dom shows content", "num": "6377", "d": "8/2017"}, {"title": "run iphone iphone", "body": "version reproduction link steps reproduce open iphone iphone expected everything works actually happening vmodel doesnt work vue support iphone iphone default web view", "num": "6376", "d": "8/2017"}, {"title": "reuse part template partials", "body": "hi cases need conditionally use part template example header box used compound template depending params currently duplicating partials solution partials thanks advance", "num": "6375", "d": "8/2017"}, {"title": "development mode actionmutation log vue devtools", "body": "problem feature solve referencing pretty sweet development feature would add another tab inside vue devtools track flow actions mutations suggestion allow function devtoolslog inside storedispatch storecommit holds passed params using custom library sure provides another level debuggability problem though currently need add line code inside actionmutation achieve overview instance dispatching action might look like inside new tab inside vue devtools clicked expanded result list visible vue devtools might look like note making actions print different color mutations makes really easy follow flow proposed api look like believe alternative extend vueconfig enabledisable feature overall idea enabling vuedevtools able read two functions", "num": "6373", "d": "8/2017"}, {"title": "component disappears first rerender", "body": "version reproduction link steps reproduce jsfiddle wait complete two seconds expected customela still dom actually happening customela removed dom rerender however comes back third rerender tested using instead jsfiddle jsfiddle using vue verified bug locally", "num": "6372", "d": "8/2017"}, {"title": "data leaks among multi instances component", "body": "version reproduction link expected removing instance component remove data holds actually happening removing instance component passesleaks data next sibling chain", "num": "6370", "d": "8/2017"}, {"title": "typescript experimental declarations feature", "body": "problem feature solve would love typescript recognize fields defined props data directly demoed starter project solves headache declaring interface every component changing interface whenever change something component however uses fork vue directly leverage production code far behind latest release timeline feature going released proposed api look like looks like experimental feature already implemented like know going merged released", "num": "6368", "d": "8/2017"}, {"title": "warning multiple refs name", "body": "problem feature solve colleague spent hours debugging issues caused two refs name two cases happen simple stupidity realizing refs nt seem work vfor case reasonable assume ref would work correctly one fubar component instantiated assuming titles duplicates ref work right either ref ignores vif ref nt work right vfor proposed api look like simply issue vue warning multiple refs name encountered", "num": "6366", "d": "8/2017"}, {"title": "vmodel \u548cvon input value \u51fa\u73b0 \u4e0d\u652f\u6301qq\u8f93\u5165\u6cd5\u548c \u4e94\u7b14\u8f93\u5165\u6cd5\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce \u8fd9\u6837\u4e66\u5199\u7684\u65f6\u5019 \u51fa\u73b0 \u4e0d\u652f\u6301qq\u8f93\u5165\u6cd5\u548c \u4e94\u7b14\u8f93\u5165\u6cd5\u7684\u95ee\u9898 expected \u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c actually happening \u5728qq\u8f93\u5165\u6cd5\u8f93\u5165\u7684\u65f6\u5019 \u4e5f\u5c06\u5b57\u7b26\u6dfb\u52a0\u8fdb\u53bb \u800c\u4e94\u7b14\u8f93\u5165\u6cd5 \u51fa\u73b0\u4e0d\u4e86\u5f39\u6846 \u53ea\u4f1a\u8f93\u5165 \u5b57\u6bcd", "num": "6365", "d": "8/2017"}, {"title": "vmodel \u548cvon input value \u51fa\u73b0 \u4e0d\u652f\u6301qq\u8f93\u5165\u6cd5\u548c \u4e94\u7b14\u8f93\u5165\u6cd5\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce \u8fd9\u6837\u4e66\u5199\u7684\u65f6\u5019 \u51fa\u73b0 \u4e0d\u652f\u6301qq\u8f93\u5165\u6cd5\u548c \u4e94\u7b14\u8f93\u5165\u6cd5\u7684\u95ee\u9898 expected \u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c actually happening \u5728qq\u8f93\u5165\u6cd5\u8f93\u5165\u7684\u65f6\u5019 \u4e5f\u5c06\u5b57\u7b26\u6dfb\u52a0\u8fdb\u53bb \u800c\u4e94\u7b14\u8f93\u5165\u6cd5 \u51fa\u73b0\u4e0d\u4e86\u5f39\u6846 \u53ea\u4f1a\u8f93\u5165 \u5b57\u6bcd", "num": "6364", "d": "8/2017"}, {"title": "prohibited keywords includes", "body": "problem feature solve vuejs prohibited keywords include though includes feeling use causes confusing reasons prohibited keywords nt include proposed api look like prohibited keywords include keyword", "num": "6362", "d": "8/2017"}, {"title": "broken", "body": "version reproduction link steps reproduce working anymore see provided fiddles expected behavior actually happening using dynamically change input type text area neither working anymore also common case working using dynamic components common usage component libraries like bootrapvue user dynamically change elements behavior current implementation falling back fix intentional breaking change", "num": "6361", "d": "8/2017"}, {"title": "generate default prop value based value another prop", "body": "problem feature solve recently making vue component library dozen props two props called respectively property component looks like want default value determined based value example specified set default value specified either set specified set value words always defaults value proposed api look like currently vue allows property functions generate default value dynamically however seems impossible obtain another prop value inside function hope api look like", "num": "6358", "d": "8/2017"}, {"title": "typescript defnition vueuse function nt allow custom parameters", "body": "version reproduction link steps reproduce create new vuejs project typescript add plugin passes arguments use command download install vuenativewebsocket add following lines srcmaints expected vuedts definition use function reflects actual functionality actually happening vuedts definition allows plugin object function options object actual function defined vueusejs takes plugin object function number optional parameters nt actually ask options object plugin suggestion would make following change vuedts line could options available way function written usejs definition written correct", "num": "6357", "d": "8/2017"}, {"title": "alias nt resolve correctly style tag vue files", "body": "problem feature solve webpackbaseconfig alias defined use alias style tag vue file nt seem work get error ps using srcstylesvariablesscss file store sass variables importing every vue file would love know way importing variables file every component using sassloader styleloader thanks proposed api look like", "num": "6356", "d": "8/2017"}, {"title": "alias nt work style", "body": "webpackbaseconfig alias defined use alias style tag vue file nt seem work get error ps using srcstylesvariablesscss file store sass variables importing every vue file would love know way importing variables file every component using sassloader styleloader thanks", "num": "6355", "d": "8/2017"}, {"title": "async components", "body": "version reproduction link steps reproduce templates async components nt work expected manual expected output doesnt work actually happening return empty template", "num": "6354", "d": "8/2017"}, {"title": "ssr contextstyles undefined", "body": "version reproduction link steps reproduce expected defined actually happening equal contextstyles getter set new context created equal defining getter property vuejs copying property getter adding following line one fixes issue", "num": "6353", "d": "8/2017"}, {"title": "vbind reactive changing prop data null", "body": "version reproduction link steps reproduce create component whose template vbinds prop attribute mount component prop set string number later change prop null dom updated expected dom updated reflect bound value null actually happening nothing tested working vue narrowed vue version broke", "num": "6352", "d": "8/2017"}, {"title": "update slot content without rerendering rest component", "body": "problem feature solve developed components generate large amounts html allow content added via slot appears slot content updated render function called component however seems like something could avoided optimization would significantly improve performance component instances possible proposed api look like proposing api changes", "num": "6351", "d": "8/2017"}, {"title": "dom errors component patching nt break app", "body": "problem feature solve loading vue component syntax error breaks entire application robust handling error stack see fiddle pressing show first new item appears pressing show first break app show wo nt work anymore proposed api look like would new api nt render anything log error nt break rest application similar html parse errors", "num": "6350", "d": "8/2017"}, {"title": "perform flip correctly multiple items removed one step", "body": "version reproduction link steps reproduce click remove three remove multiple items one step expected removing single items works expected items drop vertically removing multiple items animation repeated single removals work expected actually happening multiple items removed horizontal location items shifts first item removed would guess adjusting item class goes elements setting leaveactive position absolute takes flow following element left position previous element horizontal position affected flip calculation made would explain single element removals work expected elements affected correct could fixed example accumulated class adjustments would make made flip animation calculations made edited newissuevuejsorg tool translates html entities eg lt lt github issue hides unknown tags", "num": "6349", "d": "8/2017"}, {"title": "synchronize select vmodel", "body": "version reproduction link steps reproduce javascript z const vm new vue el app data return x methods test consolelog change event mounted settimeout amp gt thiso expected try snippet find timer callback execute later trigger event change undefined read vue source code find know vue want synchronize selectvalue think selected synchronized select default value actually happening selected synchronized select default value", "num": "6348", "d": "8/2017"}, {"title": "use components sync occurs bug", "body": "version reproduction link steps reproduce \u70b9\u51fb\u7b2c\u4e00\u4e2a\u4fee\u6539\u6309\u94ae \u4fee\u6539\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u4e2dname\u5c5e\u6027 vue\u4f1a\u6b63\u5e38\u8b66\u544a name\u5c5e\u6027\u6b63\u5e38\u66f4\u65b0 \u70b9\u51fb\u7b2c\u4e8c\u4e2a\u4fee\u6539\u6309\u94ae \u4fee\u6539\u7b2c\u4e8c\u4e2a\u7ec4\u4ef6\u4e2dname\u5c5e\u6027 \u7ed3\u679c\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u4e2dname\u5c5e\u6027\u6536\u5230\u5f71\u54cd\u9700\u8981\u6ce8\u610f\u7684\u662f \u6211\u5728\u7b2c\u4e8c\u4e2a\u7ec4\u4ef6\u4e2d \u5bf9name\u5c5e\u6027\u7528\u4e86 sync \u63cf\u8ff0\u7b26 first clicked first modify button ok clicked second modify button first mycomponent name became original value way used sync data name second mycomponent expected \u7b2c\u4e8c\u6b21\u70b9\u51fb\u4fee\u6539\u540e \u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u4e0d\u53d7\u5f71\u54cd second click modify button first mycomponent wo nt change actually happening \u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u53d7\u5230\u7b2c\u4e8c\u4e2a\u7ec4\u4ef6\u7684\u70b9\u51fb\u4e8b\u4ef6 \u611f\u89c9\u50cf\u662f\u72b6\u6001\u6062\u590d\u5230\u521d\u59cb second click modify button name data first mycomponent changed original value original data delivered \u65e0 \u8c22\u8c22 thanks", "num": "6347", "d": "8/2017"}, {"title": "vueserverrenderer hello cause serverclient dom mismatch", "body": "version reproduction link steps reproduce make ssr app using nuxt something else put template expected error actually happening console output", "num": "6345", "d": "8/2017"}, {"title": "performance avoid unnecessary rerender conditional data change", "body": "version reproduction link steps reproduce head function called every iteration directive function mutates data property last iteration directive therefore trigger rerender change however seems like rerender happens every time function called line mutates data removed rerender happen tested angular angular seems rerender last iteration expected behavior vue well expected foo trigger rerender index equal actually happening foo triggers rerender every time", "num": "6342", "d": "8/2017"}, {"title": "element fontsize display differently two component", "body": "version reproduction link steps reproduce use vuecli initialize project add indexhtml add appvue hellovue add style overflow auto hellovue root element fontsize two components display different expected one font size one page two appearance strange actually happening display use remove overflow auto behave normally want", "num": "6341", "d": "8/2017"}, {"title": "vueserverrenderer entryserverjs init method", "body": "problem feature solve propose add ability declare method init called server initialization server starting recompilation developer possibility reload services creating vue frontend app serverside rendering want create backend api server want bundle together vue ssr server import successfully bundled connect express provide via param add route backend api server method route added every time user requested server vueserverrenderer call default export method also added server starting first request backend api server bundled transparently call methods serverside api provider clientside api provider use axios make httprequests writing providers mean files inside vuehackernewssrcapi think useful proposed api look like means code vuehackernews template javascript serverjs const backendrouter expressrouter appuse backendrouter rendererinit backendrouter appget isprod render req res gt readypromisethen gt render req res javascript entryserverjs const backendapi require backendapi function init context contextbackendrouteruse backendapi export init export default context gt", "num": "6340", "d": "8/2017"}, {"title": "", "body": "version reproduction link steps reproduce jsfiddle\u9884\u89c8\u5728\u56fd\u5185\u65e0\u6cd5\u8bbf\u95ee expected \u5e0c\u671bvue\u5b98\u7f51\u6240\u6709\u4f8b\u5b50\u80fd\u6b63\u786e\u663e\u793a actually happening jsfiddle\u65e0\u6cd5\u8bbf\u95ee\u4f1a\u635f\u5931\u5927\u91cf\u51c6\u5907\u7528vue\u7684\u6f5c\u5728\u7528\u6237", "num": "6339", "d": "8/2017"}, {"title": "line numbers errors html parser", "body": "problem feature solve errors raised html parser code nt register location error location much easier debug example forget close html tag compiler complain tell name tag however idea opening tag located moderately big files quite impractical proposed api look like could add property options include line html included file use offset location printing getting locations idea proceed someone give pointers may submit pull request", "num": "6338", "d": "8/2017"}, {"title": "", "body": "version reproduction link steps reproduce xx expected actually happening button click alert ok \u70b9\u51fb new vue el app data vue warn property method alert defined instance referenced render make sure declare reactive data properties data option found uncaught typeerror alert function click eval createfunction htmlbuttonelementinvoker", "num": "6337", "d": "8/2017"}, {"title": "", "body": "version reproduction link steps reproduce xx expected actually happening \u70b9\u51fb new vue el app data", "num": "6336", "d": "8/2017"}, {"title": "", "body": "\u70b9\u51fb new vue el app data", "num": "6335", "d": "8/2017"}, {"title": "prop nt passed via element attribute", "body": "version reproduction link steps reproduce pass prop element attribute like declare prop props field render template prop interpolation like expected see propvalue outputted resulting html actually happening prop value ignored without messages stays undefined", "num": "6334", "d": "8/2017"}, {"title": "sanitize vhtml", "body": "problem feature solve currently working making blog using wordpress rest api back end api returns article html markup taking json response using render vue app understand crosssite scripting security risks proposed api look like would great automatically sanitized string remove tags needing script tags whatever reason maybe accomplish recently made aware angular think vuejs would greatly benefit feature", "num": "6333", "d": "8/2017"}, {"title": "vueserverrenderer cached attributes never released leading big memory footprint", "body": "version reproduction link steps reproduce expected cache escape attribute actually happening attribute cached see attribute cached escaped", "num": "6332", "d": "8/2017"}, {"title": "nesting nt work", "body": "know supposed components inside single detailed nt obvious start reading guide show many example tiny components functioning someone starts incrementally updating application use vue intuitively start using selectors dd functionality application targeting different parts markup selectors option fall apart soon used one part dom inside another part dom targetted another linked example nt obvious front developer needs specifically use single everything inside components would great clear front introduction mentions create reusable components mention caveat contrast vue angular nt difficult regard directives although api awkward could applied simple selectors never mattered selector matched element inside element also manipulated angular getting angular played well augmenting existing markup without unintuitive fail post vue much better angular many ways think great way create nested intuitively work maybe difficult implementation side nt know would make sense end users sure first person read vue introduction stumble caveat sure others experience unituitive failures well anyways describing something think could help make vue better intuitive especially comes people starting learn vue attempt sprinkle vue apps large preexisting doms", "num": "6331", "d": "8/2017"}, {"title": "vueesmjs vue warn error callback watcher function return thisdata state error vuex mutate vuex store state outside mutation handlers found", "body": "\u5173\u952e\u662f\u6211\u6ca1\u4fee\u6539 state\u7684\u503c", "num": "6330", "d": "8/2017"}, {"title": "callback watcher function return thisdata state mutate vuex store state outside mutation handlers", "body": "version reproduction link steps reproduce expected asda actually happening fdafsdf sdfsd", "num": "6329", "d": "8/2017"}, {"title": "potential issue ie data object declaration function", "body": "version reproduction link steps reproduce create component declare data option function inside component especified docs run ie expected component render without issue ie actually happening component breake code error console said invalid character data declaration line building demos coincidence run app ie suddenly app stop working points nt use transpiler pure js function loaded vuejs library cdn nt tested earlier ie version firefox works perfectly chrome edge", "num": "6326", "d": "8/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u4e07\u91d1\u6cb9\u662f\u89c4\u907f\u8fd9\u4e2abug\u7684\u64cd\u4f5c expected \u8fd4\u56de\u6b63\u786e\u7684oldvalue actually happening oldvalue\u548cnewvalue\u76f8\u540c \u90fd\u662fnewvalue\u7684\u5185\u5bb9 \u8fd9\u4e2a\u662fbug\u8fd8\u662f\u7f3a\u9677", "num": "6324", "d": "8/2017"}, {"title": "watch oldvalue newvalue use unshift change array length", "body": "solve future", "num": "6323", "d": "8/2017"}, {"title": "basic directive vmodel work aspnet core project", "body": "development environment aspnet core typescript problem know changed change value form value model change update value places change value form change click button changed value model change update new value need source code project click region source code database source code scriptsql bluespnswag nswagstudio file first use commands sequence bluespwebapis folder second use commands sequence bluespvue folder last open url look view edit item chinglish thank u", "num": "6321", "d": "8/2017"}, {"title": "basic directive vmodel work aspnet core project", "body": "development environment aspnet core typescript problem know changed change value form value model change update value places change value form change click button changed value model change update new value need source code project click region source code database source code scriptsql bluespnswag nswagstudio file first use commands sequence bluespwebapis folder second use commands sequence bluespvue folder last open url look view edit item chinglish thank u", "num": "6320", "d": "8/2017"}, {"title": "vuejs keyup event probability triggered", "body": "version reproduction link steps reproduce scene like six input last two input disabled enter tab key key switched next cycle like last input might appear differently input seems like vuejs keyup nt work javascript keyup executed chances small may try several times show expected vuejs keyup used normal javascript actually happening try several times last red vuejs keyup trigger", "num": "6319", "d": "8/2017"}, {"title": "\u65e0\u6cd5\u83b7\u53d6\u672a\u5b9a\u4e49\u6216 null \u5f15\u7528\u7684\u5c5e\u6027 split", "body": "version reproduction link steps reproduce expected compatible actually happening error error function location", "num": "6318", "d": "8/2017"}, {"title": "async data update select option trigger dom change event", "body": "version reproduction link steps reproduce open console panel check log expected loading initial data options trigger dom change event done user actually happening async data update result dom change event sync data update something commit working fine app fire form submit user changed option app submit right data initialized check commented line sample js", "num": "6317", "d": "8/2017"}, {"title": "debug sourcemaps ide phpstorm vue single file component", "body": "version reproduction link steps reproduce install laravel mine use sourcemaps mix file usual installation composer install npm install change phpstorm settings tream vue files html place breakpoints comparison js files work use component somewhere inside div id setup javascript remote debug config chrome phpstorm case launch debug load page opened browser window expected breakpoint vue js files break actually happening breakpoints js file inspecting sources chrome devtools see something weird sourcemaps source vue files root webpack contain actual code vue files also copies twice one prefix also however content seems generated code think phpstorm expects original source copies location note chrome devtools able break wonder move component sourcecode js files use export default", "num": "6316", "d": "8/2017"}, {"title": "whitespace problem chromewindows latest", "body": "version reproduction link steps reproduce seems render fine edge firefox chrome windows latest puts space front like spaces also appear chromeandroid output screen hello world rather hello world expected space front hello actually happening space front hello nt happen codepan sure", "num": "6315", "d": "8/2017"}, {"title": "whitespace issues chrome windows latest", "body": "seems render fine edge firefox chrome windows latest puts space front like output screen hello world rather hello world", "num": "6314", "d": "8/2017"}, {"title": "conditional change type attribute working", "body": "version reproduction link steps reproduce try type text field keep clearing input every second expected toggle showing hiding password actually happening destroying input clearing value time value changes", "num": "6313", "d": "8/2017"}, {"title": "method named update breaks component creation", "body": "version reproduction link method computed steps reproduce add method computed property custom component add component app note vue throws expected method called perfectly reasonable name method andor computed property throwing simply based naming actually happening yet dig reason object loses reference method computed name", "num": "6312", "d": "8/2017"}, {"title": "transition mode working vshow", "body": "version reproduction link steps reproduce transition element specific mode eg outin multiple elements transition vshow directive instead vif expected elements vshow transition properly respect specified transition mode actually happening initial element animates one meant replace never appears ran making part form use vif since need form fields stay within html use backend form submit probably misunderstanding something found nothing repo issues google help greatly appreciated", "num": "6311", "d": "8/2017"}, {"title": "beforemount work ie", "body": "version reproduction link steps reproduce open ie edge fount beforemount work error information show expected method tableonload work change table layout actually happening nothing happen", "num": "6309", "d": "8/2017"}, {"title": "vue ca nt response ios wechat brower", "body": "version reproduction link steps reproduce \u5728ios \u7c7b\u4f3c\u95ee\u9898 expected \u80fd\u591f\u597d\u597d\u6e32\u67d3dom actually happening \u53ef\u80fd\u662fvue\u4e8b\u4ef6\u5835\u585e", "num": "6308", "d": "8/2017"}, {"title": "always allow babel transform expressions templates", "body": "version reproduction link steps reproduce vue export default data return b true already enabled initializing expected value actually happening error compiling template invalid expression class true b seems validating expression goes babel trying evaluate makes es features used templates limited node supports causes confusion translate spread operators arrays templates elsewhere translate spread operators objects anywhere except templates think might intentional mark bug", "num": "6307", "d": "8/2017"}, {"title": "vue vuecli update vue", "body": "want build webpack project vue install vuecli update vue vue", "num": "6306", "d": "8/2017"}, {"title": "logos vuex vuerouter", "body": "version reproduction link steps reproduce expected actually happening read comment vuex vuerouter great tools think deserve logos perhaps community decide whether logos tools designed example", "num": "6305", "d": "8/2017"}, {"title": "deleted", "body": "", "num": "6304", "d": "8/2017"}, {"title": "ref undefined come back route change", "body": "project ok click button change return click show undefined", "num": "6302", "d": "8/2017"}, {"title": "provide typescript declaration file", "body": "problem feature solve please provide declaration file thanks proposed api look like", "num": "6301", "d": "8/2017"}, {"title": "", "body": "", "num": "6300", "d": "8/2017"}, {"title": "vue component work expect", "body": "version reproduction link steps reproduce click first text click second text click first text click first text expected forth step second third showed actually happening second appear", "num": "6299", "d": "8/2017"}, {"title": "ie\u4e0b\u8868\u5355\u7ed1\u5b9a\u4f7f\u7528\u626b\u7801\u67aa\u95ee\u9898", "body": "version reproduction link steps reproduce expected actually happening \u65e0", "num": "6298", "d": "8/2017"}, {"title": "initialize object properties binding controls initialized yet", "body": "version reproduction link steps reproduce bind html controls unintialized object properties expected object properties initialized bound controls actually happening bound understand object properties need initialized binding controls sometimes possible know properties used would nice binding controls properties would initialize first initialized yet", "num": "6297", "d": "8/2017"}, {"title": "errorhandler called custom events inside components", "body": "version reproduction link steps reproduce assign custom error handler throw error inside even handler method component expected event throws error call custom handler assigned actually happening throws error global window object bypassing", "num": "6296", "d": "8/2017"}, {"title": "npm run lint error could nt find plugin eslintpluginhtml", "body": "version reproduction link steps reproduce git clone vue repo checkout dev branch excute npm install exccute npm run lint error expected lint success actually happening eslint could nt find plugin eslintpluginhtml happen couple different reasons eslint installed globally make sure eslintpluginhtml also installed globally globallyinstalled eslint find locallyinstalled plugin eslint installed locally likely plugin nt installed correctly try reinstalling running following npm eslintpluginhtml latest savedev still ca nt figure problem please stop chat team", "num": "6294", "d": "8/2017"}, {"title": "set dropdown open default", "body": "hello guys open default dropdown vue select", "num": "6293", "d": "8/2017"}, {"title": "vfor\u91cc\u7684 key\u4e0d\u7b26\u5408\u9884\u671f", "body": "version reproduction link steps reproduce expected \u91cc\u7684 key\u7b26\u5408\u9884\u671f actually happening vfor\u5faa\u73af\u91cc\u7ed1\u5b9a\u7684", "num": "6292", "d": "8/2017"}, {"title": "failed mount component using non single file component sfc inside sfc", "body": "version reproduction link steps reproduce ran vue init browserify vuetest used full build compiler setup options converted hellovue hellojs non sfc js import vue vue vuecomponent hello template data return msg welcome vuejs app js import hello componentshellojs export default name app components hello run npm run dev goto expected expect application render hello component successfully actually happening", "num": "6291", "d": "8/2017"}, {"title": "computed property getshowcreatedialog assigned setter", "body": "version reproduction link steps reproduce expected warn actually happening vue warn computed property getshowcreatedialog assigned setter", "num": "6290", "d": "8/2017"}, {"title": "props undefined within", "body": "version reproduction link steps reproduce using ends undefined expected expect within outside tag actually happening undefined tried variations using nt trigger", "num": "6289", "d": "8/2017"}, {"title": "iterating list working", "body": "version reproduction link steps reproduce fiddle works one nt expected expect second fiddle show text sides symbols similar first fiddle actually happening data displayed second fiddle might happening something wrong second one perhaps bootstrap code messing", "num": "6288", "d": "8/2017"}, {"title": "iterating list working", "body": "using trying something like js class select extends vue constructor args argsdata argsdata argsdataitems argsdataitems const select new select el select results something looks like expecting see something like", "num": "6287", "d": "8/2017"}, {"title": "index equivalent", "body": "problem feature solve distinguishing elements generated list useful element associated item array directly modify list element within directive element proposed api look like index variable available within directives elements generated list", "num": "6286", "d": "8/2017"}, {"title": "reactive vuedelete equivalent objects", "body": "problem feature solve although documented release notes edited docs weeks ago commit vuedelete work anymore since objects need addremove item array simple using pushsplice need manipulate object vueset reactively add delete nt seem builtin reactive solution builtin way would like know possible implement one proposed api look like sure code api implements javascript builtin delete operator maintaining reactivity would excellent", "num": "6285", "d": "8/2017"}, {"title": "improve performance arrays extensible therefore reactive", "body": "version reproduction link steps reproduce create large array case array contains arrays prevent extensions set array vue viewmodel expected vue reactivity system anything array setting property runtime setting string viewmodel ie actually happening dependarray function invoked recursively object every time array accessed causing setting property take linear time occur many times per tick reproducer close actual scenario building virtual grid large source array compute start index normally would based scroll position case added button simulate scrolling template renders rows jsfiddle array never change thing changing start index however enormous amount lag profile see issue core nothing reactivity solely performance seem like something perform poorly", "num": "6284", "d": "8/2017"}, {"title": "better error message vfor typo", "body": "problem feature solve recently made annoying mistake putting colon front vfor vfor used vbind shorthand error message complained recognizing iteration variables super confusing expected vfor create variables proposed api look like clearly vue trying interpolate expression regular vbind think throw error please remove colon vfor need colons vbinds", "num": "6283", "d": "8/2017"}, {"title": "jquery working dynamic component", "body": "dealsvue rotating icon click working using working", "num": "6282", "d": "8/2017"}, {"title": "clicknative work", "body": "version reproduction link steps reproduce code example rowtitle rowcode rowprice expected expected get nativce event actually happening click generate event none even mouseevent remove get event", "num": "6281", "d": "8/2017"}, {"title": "clicknative work", "body": "clicknative work", "num": "6280", "d": "8/2017"}, {"title": "ssr client side hydration mismatching vdom generated useless text vnode", "body": "version reproduction link steps reproduce shown codeopen case wrote vue ssr runtime still use vue client expression false dom generate useless text vnode lead mismatching childnodes vs vnodes expcetion removed program works expected vdom longer produces unwanted vnode tags actually happening vdom created useless text tag vnode", "num": "6279", "d": "8/2017"}, {"title": "ssr client side hydration mismatching vdom generated useless text vnode", "body": "version reproduction link steps reproduce shown codeopen case wrote vue ssr runtime represent static file case still use vue client expression false dom generate useless text vnode lead mismatching childnodes vs vnodes warn removed program works expected vdom longer produces unwanted text tag vnode actually happening vdom created useless text tag vnode", "num": "6278", "d": "8/2017"}, {"title": "input type number accepts character", "body": "version reproduction link steps reproduce create new input field input field accept expected integers accepted field actually happening able input number", "num": "6277", "d": "8/2017"}, {"title": "vif breaks dependent selects logic", "body": "version reproduction link steps reproduce click toggle pickup try change district select see issue also delete div vif cartpagepickup change vif vshow see everything working expected simple dependent selects logic select elements based value actually happening logic breaks looks like caching issue change problematic selectcustomselect location dom works", "num": "6276", "d": "8/2017"}, {"title": "better error message recursive components", "body": "problem feature solve currently next impossible debug errors components referencing selves accident case apparently allready proposed part discussion another ticket proposed api look like api change better error message source file causing issues", "num": "6275", "d": "8/2017"}, {"title": "builtin component component prop receive async component factory function", "body": "version steps reproduce builtin component component html message javascript new vue el app data message hello vuejs methods getasynccomponent return gt promiseresolve template html message expected render async component correctly actually happening getasynccomponet method enter dead loop call", "num": "6273", "d": "8/2017"}, {"title": "builtin component component prop receive async component factory function", "body": "version steps reproduce builtin component component html message javascript new vue el app data message hello vuejs methods getasynccomponent return gt promiseresolve template html message expected nt render async component actually happening getasynccomponet method enter dead loop call", "num": "6272", "d": "8/2017"}, {"title": "code\u51fa\u73b0\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce expected actually happening", "num": "6271", "d": "8/2017"}, {"title": "embed tweet \u7b49\u7b49 \u7c7b\u4f3c\u7684\u95ee\u9898", "body": "\u8fd9\u79cd\u60c5\u51b5\u6211\u9700\u8981\u600e\u4e48\u53bb\u5904\u7406", "num": "6270", "d": "8/2017"}, {"title": "error render client side dynamic component", "body": "version reproduction link steps reproduce link reproduction worked think working use webpack dont use nuxt js server side good worked clientside error expected want errors actually happening error browser rendered mycomponent", "num": "6268", "d": "8/2017"}, {"title": "error render client side dynamic component", "body": "hello component serverside good worked browser message error pls help thank", "num": "6267", "d": "8/2017"}, {"title": "trigger src property refresh picture", "body": "call element removed picture refresh triggered function loads picture written way loadimg function url thattargetcomplete true var el thattarget url return apiattr thattarget isalredyload apiimagecache url url function ret err retstatus returl elsrcindexof returl gt return elsrc returl", "num": "6266", "d": "8/2017"}, {"title": "canvas update", "body": "hi everybody new vue want draw picture vuejs found canvas update remove data example thanks xin", "num": "6265", "d": "8/2017"}, {"title": "input type number keyboard input work microsoft edge", "body": "version reproduction link steps reproduce simply create number input use arrow keys microsoft edge browser vmodel update bidirectional value expected value vue componentinstance would updated updown arrow keys chrome firefox actually happening value updated", "num": "6264", "d": "8/2017"}, {"title": "attrs undefined component props", "body": "version reproduction link steps reproduce access attrs object within component context props provided expected attrs object containing unrecognized props therefore would expect empty object props specified component tag actually happening attrs undefined", "num": "6263", "d": "8/2017"}, {"title": "lazy slot loading", "body": "problem feature solve render slot rendered child context render parent first pass child example parent template child template loading would result exception null parent rendered first proposed api look like maybe lazy attribute slot", "num": "6262", "d": "8/2017"}, {"title": "vuex two way data binding", "body": "version reproduction link steps reproduce go click change value input change value row well expected store property payload comes like expected mutation write statenovamedica payload change state actually happening binds state last thing using value case row table change value input clicking value row also changes see problem running go click change value input way see row value also changes github repo mutation changing value comment workaround found nt think good thing thinking field properties bothersome work", "num": "6261", "d": "8/2017"}, {"title": "ssr\u73b0\u5728\u5751\u592a\u591a", "body": "version reproduction link steps reproduce expected actually happening", "num": "6260", "d": "8/2017"}, {"body": "related somehow", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "issues", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "nt find relevant cancellation api document", "d": "8/2017"}, {"body": "valid value contenteditable valid", "d": "8/2017"}, {"body": "\u8bf7\u4e0d\u8981\u76f4\u63a5\u4e22\u4e00\u5768\u4ee3\u7801\u6307\u671b\u522b\u4eba\u5e2e\u4f60\u6539", "d": "8/2017"}, {"body": "please open issue vuerouter repository one please provide minimal reproduction complete application please descibe situation deployment better properly configure server work history mode explained vuerouter documentation", "d": "8/2017"}, {"body": "hi would rather argue nt leakage expected leakage installs plugins global constructor using plugins dynamically nt recommended better install plugin entry point case reevaluate component code every request node module file persistent object heap plugins repeatedly applied one vue thus using memory even removed leakage still happen consider plugin maintain objects assign constructor said recommendation maintaining installedplugins wo nt use much memory used correctly nt apply plugin dynamically use plugin entry point consider using", "d": "8/2017"}, {"body": "herringtondarkholme thanks advice demo may bit confuse demo say reproduce problem real problem case runinnewcontext true even using plugins entry point memory leaks long plugins build server bundle vue use node module problem vue official didt say plugins server must defined node module also consider changing runinnewcontext think case memory leak problematic hope vue repair", "d": "8/2017"}, {"body": "see code indeed used release leakage problem sadly runinnewcontext true every new request create new plugin object many copies one plugin functionality different identities imho deprecate", "d": "8/2017"}, {"body": "\u8bf7\u9075\u5b88 issue", "d": "8/2017"}, {"body": "place reporting element issues please write online demo issue posva please close one", "d": "8/2017"}, {"body": "tests difference browser running unfortunately running chrome flakiness related launcher eg switch window launching test terminal launched chrome considered background mode throttles animations thus causing transitionanimation tests fail cases default stable used reference", "d": "8/2017"}, {"body": "unfortunately vue using content template data stored dom element mounting vue instance gone vue uses html string compile render function need initialise jquery plugins event make sure kept", "d": "8/2017"}, {"body": "sorry nt really understand problem vue ecosystem simply provides libraries distributed npm packages default workflow cli templates bundling code distribution want avoid transpiling babel configuration question want use modules directly browser generic workflow question framework agnostic reported", "d": "8/2017"}, {"body": "record provide esm build actually default export npm package documented well go ahead try interpret think really asking really clea transform vue files modules without bundled webpack browserify use build process answer would wwwgithubcomvuejsrolluppluginvue part anyway issue closed nothing main repository want propose additional documentation please wwwgithubcomvuejsvuejsorg questions template open issue template repository already mentioned asked couple places without luck understand frustration stuck repository wrong place ask specific question bump thread forum find quickly surely continue discussion", "d": "8/2017"}, {"body": "sorry nt really understand problem want able use vue transforming vue files transpiling bundling removes modules want vue cli without configuring webpack babel vue ecosystem simply provides libraries distributed npm packages default workflow cli templates bundling code distribution want use webpack babel least directly want vue cli options use webpack babel except vue transformations want avoid transpiling babel configuration question want use modules directly browser generic workflow question framework agnostic reported think asking something unreasonable admit ignorant details vue files eventually converted vanilla htmlcssjs want simple solution use modern browser chrome safari canary native modules full support need unnecessary workflow", "d": "8/2017"}, {"body": "transform vue files modules without bundled webpack browserify use build process yup bump thread heres url", "d": "8/2017"}, {"body": "imo bug reason works like expected custom components vue add runtime code compile time custom components result vue using retrieve selected value like find behaviors use case use computed value get set could trick", "d": "8/2017"}, {"body": "indeed expected behaviour try set html element object convert string actually setting value jkzing proposed computed property good way go", "d": "8/2017"}, {"body": "jkzing thanks prompt reply workaround trick perspective new user vuejs confusing read documentation try apply component work expected architecturally understand decision made totally understand explanation posva original assumption first ran issue reading section doc convinced correct found bug believe interface framework consistent however wrong right interface may behavior work outside components great seeing behavior inside component confusing least casual user beginner", "d": "8/2017"}, {"body": "well work custom select component correctly implemented point one using using", "d": "8/2017"}, {"body": "easily using functional component demo", "d": "8/2017"}, {"body": "use", "d": "8/2017"}, {"body": "thanks lot", "d": "8/2017"}, {"body": "took look jsfiddle version vue structure async component faulty component seems work expected using one child want foo bar tablerows ca nt get work multiple childs get tablerows", "d": "8/2017"}, {"body": "nt something could js hooks transitions maybe inside even", "d": "8/2017"}, {"body": "indeed using hook transition allows control since probably always related animations transition getting access element removed dom using transition looks like right way go may worth adding sake consistency nt forget add transition", "d": "8/2017"}, {"body": "posva jsnanigans thanks solved problem", "d": "8/2017"}, {"body": "believe problem vue detect change children properties updated explicitly used template solution would recreate whole object changing one style force update easily done spread operator instead setting new background color like like keep everything overwrite background propery working example", "d": "8/2017"}, {"body": "jsnanigans think analysis right workaround would probably work nt necessary vue pick react", "d": "8/2017"}, {"body": "linusborg suggestions fix interested cleanest way get work thanks alex", "d": "8/2017"}, {"body": "fixed", "d": "8/2017"}, {"body": "test right using listener yields result probably something wrong ie messing", "d": "8/2017"}, {"body": "nt know sure going source could cause definitely listener nt use instead use works fine test ckittelmann imagine using barcode scanner need listen keyup event nt need twoway databinding might solution", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "try compare ecosystem first lol", "d": "8/2017"}, {"body": "believe moon needs compare vue way around obvious reasons", "d": "8/2017"}, {"body": "please move vuejsvuejsorg nt know anyone team knows moon enough make comparison much like idea moon nt think used enough add entry page comparing every possible framework rather compare people might choosing use scenario personal opinion moon vue preact react expect see comparison moon github website", "d": "8/2017"}, {"body": "use otherwise vue reuse component instance efficiency", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hi nt vnode returned vue interpolation string number plain object use toggle showing text element", "d": "8/2017"}, {"body": "closing since expected behaviour", "d": "8/2017"}, {"body": "case op wants combine dynamic render function template authoring one reassign field manually call", "d": "8/2017"}, {"body": "found correct project", "d": "8/2017"}, {"body": "basically impossible modifiers allows valid expression looks like nt understand modifier please check documentation questions please use official chat forum ask questions", "d": "8/2017"}, {"body": "also far see docs functionality removed migration", "d": "8/2017"}, {"body": "yes modifier removed reintroduced agaion later although different scope mechanic", "d": "8/2017"}, {"body": "sure completely understanding situation provide small example issue facing thanks", "d": "8/2017"}, {"body": "hmm many problems moment implement syntax currently possible note spaces possibles would common source error want avoid people want use events readability could use characters like though realistic version current syntax would nt work one arg directives would lead modiers object put nutshell syntax like could possible new syntax people need learn replace something already feasible personally think second version straightforward easier read imo pass think worth listening others opinions", "d": "8/2017"}, {"body": "spaces possible limitation parser html perhaps former case could possible modify parser accepts spaces particular case really like version since really hard read looks like events perhaps character visible think would prefer character since unlikely used custom event name whereas could likely could possible new syntax people need learn replace something already feasible indeed already possible verbose less legible opinion solution would bit like using instead anyway thanks taking time review", "d": "8/2017"}, {"body": "posible", "d": "8/2017"}, {"body": "would somehow inverse current order know sure reversed use multiple callbacks way go likely confuse users", "d": "8/2017"}, {"body": "syntax mentioned possible brackets let users know kind event handling inverse think syntax clearer since posva said spaces possible attributes part nt put events modifiers value part one function call brackets something like users know difference", "d": "8/2017"}, {"body": "would totally different syntax could add events single attribute like sure realistic since might conflicts normal syntax think lot readable grasp adding extremely long attribute", "d": "8/2017"}, {"body": "seems topic people passionate great really creative ideas tackle also great however personally every syntax proposal far still seems complicated abstract far away html amp js great save keystrokes get rid repetition cost easy grok syntax generally increasingly opposed new syntax least nt bring new features opinion api surface big enough would rather see get working modifiers would trivial write helper method like keep listener definitions templates", "d": "8/2017"}, {"body": "good point linusborg think extending directive accept array objects like one passed previous comment think quite nice listener definitions templates", "d": "8/2017"}, {"body": "agree linusborg syntax simplier realistic", "d": "8/2017"}, {"body": "sure follow linusborg syntax means multiple events would something like case problem today lot duplication advantage go point without repetition think taking listener template prevent get full picture going looking listener defined template others elsewhere seems optimal long attribute notation would shorthand already exists prefer use one line per event duplicate handler name fine handler definition long use nonshorthand definition format guess events calls handler could perhaps divide template multiple lines", "d": "8/2017"}, {"body": "yes saying vbind syntax showed working currently normal events nt native modifiers trivial write helper function like one showed creates object vbind would mean nt introduce new template syntax instead solve lines js", "d": "8/2017"}, {"body": "seems doable user land let assume making regular http requests restlike api make smart components global mixin looks given key component time makes request simply adds request array attaches array ssrcontext simply promiseall done moving graphql assuming using vueapollo seems already supports something like check docs", "d": "8/2017"}, {"body": "sideeffect fixed", "d": "8/2017"}, {"body": "unless misunderstand something possible basically js function return b function b return moment call enter infinite loop even computation nt directly depend computed property eg statement computed property know changes usually less expensive recompute top two computed properties depend looks weird interested factual case leads situation summarised direct possible", "d": "8/2017"}, {"body": "thank hope make request bit clearer current version vue tries something like infinite loop javascript function return name othername b name function b return name b othername name hope vue become bit smarter hood javascript var name gt othername gt bname var b name gt b othername gt aname following case leads infinite loop much simplified look calculation javascript new vue data initialcourse imported via ajax elsewhere initialclasses example values also included via ajax nrofstudents properties class nrofstudents properties class computed course function var course clone thisinitialcourse coursenrofstudents sumby thisclasses nrofstudents lt return course classes function var classes thisinitialclassesmap clone var ifactor classes nrofstudents thiscoursenrofstudents lt example values result get work used following workaround javascript new vue data initialcourse imported via ajax elsewhere initialclasses example values also included via ajax nrofstudents properties class nrofstudents properties class computed course function var course clone thisinitialcourse return course coursenrofstudents function return sumby thisclasses nrofstudents classes function var classes thisinitialclassesmap clone var ifactor classes nrofstudents thiscoursenrofstudents", "d": "8/2017"}, {"body": "see thanks clarification makes sense create intermediary computed property prevent infinite loop imagine also aggregate one computed property extract two computed properties", "d": "8/2017"}, {"body": "thank aggregation extraction interesting suggestion take suggested solution changing dependency tracked vue much work doable use resources something since leave issue closed asking think technically possible probably missing trying suggest would make things much easier intermediate calculations needed whatever reason think vue amazing terrific job thank time leave", "d": "8/2017"}, {"body": "html nt allow selfclosing tags", "d": "8/2017"}, {"body": "linusborg modified still error see", "d": "8/2017"}, {"body": "hm superweird works normally idea could except elements appear belong hardly related", "d": "8/2017"}, {"body": "okay found vuejs file original vuejs file someone changed file note contains real file contains expected nice try joke someone find slap p sidenote would suggest use file could mailicious code", "d": "8/2017"}, {"body": "someone find slap p nt someone girlfriend", "d": "8/2017"}, {"body": "linusborg thank much checked svn record really tell", "d": "8/2017"}, {"body": "vue pre treat prop local data property child component direct use data whatever want worries change father component data child would either receive updates prop parent anymore lose local changes receives updates parent reason copy local data property intend mutate value need copy work independently updates come parent", "d": "8/2017"}, {"body": "receive updates prop parent anymore yes know parent data changed child need update prop immediately think achieve feature frame level user write watch computed props like fact code appears app components however works auto complated vue frame lose local changes receives updates parent one component unlikely two functions update prop immediately amp amp save current local data whatever child component broadly separated two categories readonly operable readonly component prop changes ok operable component suppose saving child component current data necessary need like code add watch prop data changed save current local data whatever want vue user want write code less application scenarios component need local data prop edit directly worries change parent component data linusborg", "d": "8/2017"}, {"body": "\u90fd\u7528 ts \u4e86\u4e3a\u4ec0\u4e48\u8fd8\u8981\u7528 script \u5f15\u5165 anyway bug", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "actually could already done custom prop validator case", "d": "8/2017"}, {"body": "jkzing would absolutely work usecase creating component use case interested however using components vendor code vendor component checks string type nothing manually call object little janky two good reasons vendor package check type want use methods type prototype like parent prototype methods available wrapper objects nt issue want use argument type printing string iterating array etc neither usecases broken allowing users pass wrapper objects inherent value strictly checking type literals checking something strictly string gains nothing checking something properties string think akin failing test user provides extends", "d": "8/2017"}, {"body": "rather argue mixing primitive values wrapper objects code smell javascript eg supporting checking api means vue implicitly indirectly encourages code smell consider vendor code returns two wrapper objects underlying primitive value vue treat two objects different case primitive value users libraries explicitly convert wrapper primitive value cast tostring", "d": "8/2017"}, {"body": "could give example situation example would apply hard time understanding situation could pass two wrapper objects single prop nt see issue far code smell believe code smell indication something might wrong guarantee something wrong nt buy argument allowing people use language feature like wrappers vue somehow endorsing encouraging also nt buy wrappers moral evil framework like vue must take stand language feature good bad reasons use decide design framework prevent people using wrappers badly also prevent people using well think programmers trusted", "d": "8/2017"}, {"body": "consider route updated value say code trigger rerender object value also allows wrapper object users check prop primitive using use validator current api", "d": "8/2017"}, {"body": "understand saying would good seems like one hand switching instanceof run risk developer writing bad code triggers unnecessary renders seems passing object needlessly resets value unnecessarily would always cause rerender string typed prop onus developer object case deal issues hand prevent developers using wrappers code even best solution nt apply code also large commonly used libraries like lodash uses wrappers commonly used method obvious case partly selfishly also principle prefer scenario gives developers freedom use wrappers generally whatever language feature fits problem best also saddles responsibility dealing fallout edgecases great power comes great responsibility like said think developers handle responsibility think adding feature right move also understand open source opinion one matters leave community decide thanks fun discussion", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "already srcplatformsweex", "d": "8/2017"}, {"body": "files references weex also high level diagram read understand framework interested contribute evan notifications githubcom sent friday august vuejsvue cc sharma rahul author subject vuejsvue weex code branch main vue code closed receiving authored thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "see", "d": "8/2017"}, {"body": "guess ios simply listens event hood possible case voice preventing events firing properly someone try make vanilla js repro would help", "d": "8/2017"}, {"body": "reconstructed vanilla js using event listeners issue identical issue see vue breaks voiceover codepen vanilla stars input using makes work scenarios though codepen vanilla stars change guys whether like care circumventing kind issue vue using vue wanted circumvent could definitely think worth ticket apple though make one later today", "d": "8/2017"}, {"body": "unfortunately nt think obvious way work around vue core use force listen events instead though", "d": "8/2017"}, {"body": "aminimalanimal easy way fixing would replace way downside fact event trigger followed one may lead collisions complicated scenarios solution somewhat better using listens events may want everytime", "d": "8/2017"}, {"body": "thanks help workaround good know going hood certainly makes update andreiglingeanu mentioned nice also event handling ui state updates immediately user adjusting went using usual adding codepen vuetiful stars workaround filed ticket apple link apple nt make issues publicly viewable", "d": "8/2017"}, {"body": "aminimalanimal cool please link login see feedback one side coffeescript thing looks strange though nt touched quite time already", "d": "8/2017"}, {"body": "already declare function data computed recreate function template renders say recommended way functions floating template much js template unlikely noticeable negative performance impact unfortunately adding check every prop everywhere may actually noticeable tell misunderstood something since already easily achievable prefer introduce new condition check could lead slower performance", "d": "8/2017"}, {"body": "correct easily achievable however throwing arrow function template often matter characters convenient developers may realize performance impact reason use vue small learning curve large ease use regardless understand", "d": "8/2017"}, {"body": "fyi also technically correct two functions may well string content declared different scopes invoking would result different results probably uncommon still possible", "d": "8/2017"}, {"body": "great point feel like documentation warn using anonymous functions way performance hazard temptation real arrow functions compact", "d": "8/2017"}, {"body": "would even possible generate warning development build vue trivial use tostring determine function anonymous", "d": "8/2017"}, {"body": "\u4ece\u6570\u636e\u7ed3\u6784\u5c42\u9762\u53bb\u601d\u8003\u5427", "d": "8/2017"}, {"body": "expected behaviour simply supported", "d": "8/2017"}, {"body": "may interested edit suggest ask real problem forum discord server sure come way help", "d": "8/2017"}, {"body": "posva tried sure anything changed changing although docs seems pretty much without using function seems popular workaround creating child component treat root component throwing children sort looks like looking thinking root instance different component instances essentially component guess main use see avoiding duplication php code declare prop multiple places components putting actual value root children use root prop value declared say want change code setting prop value currently need change components new code whereas pass prop root one place change", "d": "8/2017"}, {"body": "looking thinking root instance different component instances essentially component props passing data form parent component child component main instance root component parent component html attributes element mount props hence making work want would require extra code vue core act mount element kind parent component pass attribute values props would advise go main child component really established pattern", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "actually browseros firing event inputs meta key pressed try using try releasing enter without meta key pressed", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "parse error vueloader please open issue well template compiler code resides repo maybe ok", "d": "8/2017"}, {"body": "hey reviewing code think comes vuetemplatecompiler vuetemplatecompiler built vuesrc compiler open issue", "d": "8/2017"}, {"body": "add backslash slash escape", "d": "8/2017"}, {"body": "javoski works obviously parse bugsolve problem uglily found bug happenedif time give pr", "d": "8/2017"}, {"body": "actually default html parser maybe browsers interpret within javascript string end script tag nt think vue", "d": "8/2017"}, {"body": "jakovski right part html spec nt parse javascript inside looks expected hccde check astexplorer", "d": "8/2017"}, {"body": "javoski nickmessing true inline script html need escaped browsers nt know js string vue exact vuetemplate distinguish js string tag name vue file one script section meet string nt take close tag immediately look behind look ahead find another look behind utill find last one correct close tagas mentioned vue vue template solve problem elegantlyit shoud better browsers ca nt may many inline script sections like", "d": "8/2017"}, {"body": "generated javascript codes eventually embedded html files ok codes separated js file depends building process nt think good idea", "d": "8/2017"}, {"body": "javoski thus usual situation considering code may embedded html files right", "d": "8/2017"}, {"body": "vendor prefixed sniffing even unreliable likely get removedchangeddeprecated future versions browsers", "d": "8/2017"}, {"body": "interesting thought feel unwarranted web platform prioritises backwards compatibility ie amp detections locked never change never release new versions browsers chrome detection would break lot things removed github search reveals results existed safari chrome amp firefox existence deemed important edge also implemented compatibility reasons github search reveals hits equivalents many millions results assume autoprefixed ios detection less well known also results github worried touchscreen mac released would also exist safari could also check absence existed desktop safari since need also add leaves edge list prefixed properties existed since edge launched nt changed perhaps testing would better since native os accessibility feature fyi supported css features mention obtained via opening browser comparing output since january", "d": "8/2017"}, {"body": "personally think opting esoteric techniques platform sniffing opens whole new worms honestly sure actually better worth unless concrete examples current sniffing strategies leading unintended behaviors certain devices intend keep", "d": "8/2017"}, {"body": "unless concrete examples current sniffing strategies leading unintended behaviors certain devices intend keep tested firefox android nt behaving incorrectly conditions codebase also android tablet pretends ios gave test case could see happens", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "catch errors thrown asynchronously similar responsible anything thrown within promise chain", "d": "8/2017"}, {"body": "guess dirty hack would something like", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "\u8bd5\u4e86\u4e0b \u5b9a\u4e49\u6210 \u666e\u901a\u6570\u7ec4\u53ef\u4ee5", "d": "8/2017"}, {"body": "unfortunately would breaking change probably lot component packages expose sync props compiled vueloader using packages new version vue contains changer would break packages would emit vue app would listen", "d": "8/2017"}, {"body": "agree linusborg revisit", "d": "8/2017"}, {"body": "personally find consistent reference props camelcase javascript said changed going breaking", "d": "8/2017"}, {"body": "\u7528 css \u8bbe\u7f6e\u7684\u89c4\u5219\u7528 style \u672c\u6765\u5c31\u53d6\u4e0d\u5230 \u8fd9\u8ddf vue", "d": "8/2017"}, {"body": "remove prop name hellovue component work", "d": "8/2017"}, {"body": "posva hierarchy props prop", "d": "8/2017"}, {"body": "issue sorry confusion may cause", "d": "8/2017"}, {"body": "oh right let move vuerouter", "d": "8/2017"}, {"body": "hi like would javascript need wrap quotes valid js identifier demo", "d": "8/2017"}, {"body": "doh thank", "d": "8/2017"}, {"body": "actually already achievable userland probably keep way components functions return promises handle fetching template inside promise working example jsfiddle using promises", "d": "8/2017"}, {"body": "thank thisthe jsfiddle provided still fetches inline html tag html file looking box solution like angularjs also work application", "d": "8/2017"}, {"body": "need use axios similar lib fetch file ask questions forum discord server", "d": "8/2017"}, {"body": "jsfiddle provided still fetches inline html tag html file fiddle fake fetch ca nt put html file jsfiddle real project absolutely make request server retrieve html file example fetch api easy seen posva example posva said use anything want retrieve template content looking box solution like angularjs works outofthebox nt need additional library vue also way powerful angularjs since limited template fetch options entire component definition asynchronous way also work application reason nt work", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "boringer unfortunately reactive plain javascript objects arrays primitive types supported want find way around limitation try asking chat forum github issues bugs feature requests expected", "d": "8/2017"}, {"body": "note props readonly change value declared example nt happens everytime template renders object reinitialized change ignored need save object", "d": "8/2017"}, {"body": "works get warning vue setting properties data represent props common usecase maybe nt maybe warning reevaluated", "d": "8/2017"}, {"body": "root", "d": "8/2017"}, {"body": "hoc rendering includes everything slots please doublecheck functional component slots api", "d": "8/2017"}, {"body": "probably correctly express idea want slots saved using hoc component idea", "d": "8/2017"}, {"body": "simply mistake imports import syntax wrong exports options object default export usual import statement notice misssing brackets nt use defualt export bracket notation correct case", "d": "8/2017"}, {"body": "doh thanks linusborg going go bury", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "8/2017"}, {"body": "\u5728 san martin morote notifications githubcom closed receiving authored thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "better handle bug reports feature requests", "d": "8/2017"}, {"body": "ok thx \u5728 san martin morote notifications githubcom better handle bug reports feature requests receiving authored thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "proposed many times past please check", "d": "8/2017"}, {"body": "sqal said dup", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "8/2017"}, {"body": "please want report bug provide reproduction nt ask us also able use template make even easier", "d": "8/2017"}, {"body": "ok anyway thanks", "d": "8/2017"}, {"body": "flow used dev dependency flow syntax stripped built files end users vue eg consuming npm nothing related flow distributed code nt make affected flow license way concerning case would probably someone forking vue thus using source code directly even flow code governed licensepatent grant distributed way either doubt mere usage flow syntax subject license think valid concern moment logistic costs migrating blocking factor maybe someone team familiar flowts evaluate much effort entails cc herringtondarkholme ktsn octref", "d": "8/2017"}, {"body": "makes sense interesting jsx creative commons attribution international license flow nt really clear vuejs end migrating typescript also help effort", "d": "8/2017"}, {"body": "considering fact typescript team members interested vue would vote migrating typescript however use flow daytoday basics one great feature miss typescript probably research flow use return type function ts", "d": "8/2017"}, {"body": "hi think clear reasoning let explain technical issue migrating typescript doable requires many changes use option ts ts nt accept type annotation js flow means need migrate one single shot including building system changes ts flow still many subtle syntax differences differences small ubiquitous eg flow ts potential issues might tsflow checking rules eg flow allows ts nt know much code impacted trying migrate", "d": "8/2017"}, {"body": "created issue flow say facebook bsdpatents license syntax typescript flow similar cases typescript allows strict typescript interested vue perhaps vue request features flow nickmessing mentioned", "d": "8/2017"}, {"body": "features could find already requested issues looks like typescript team really busy need clear issues backlog", "d": "8/2017"}, {"body": "forgive random outside opinion would really worth seems like benefit would potential licensing problem nt really affect anything outside vue", "d": "8/2017"}, {"body": "herringtondarkholme said obviously much human effort need done big code freeze probably nt much human effort available still open discussion", "d": "8/2017"}, {"body": "end users vue eg consuming npm nothing related flow distributed code actually whole folder distributed npm package however sure could treated something flowrelated end user", "d": "8/2017"}, {"body": "would suprised find facebook patent type annotation syntax considering done since actively using neither flow vue source files using anything flowrelated anyway", "d": "8/2017"}, {"body": "linusborg flow license bsd patents react license granted hereunder terminate automatically without notice subsidiaries corporate affiliates agents initiate directly indirectly take direct financial interest patent assertion facebook subsidiaries corporate affiliates ii party patent assertion arises whole part software technology product service facebook subsidiaries corporate affiliates iii party relating software notwithstanding foregoing facebook subsidiaries corporate affiliates files lawsuit alleging patent infringement first instance respond filing patent infringement counterclaim lawsuit party unrelated software license granted hereunder terminate section paragraph due counterclaim opinion means proprietary product develop facebook come develop thing without fear lawsuit file suit using flow react bsdpatent licensed facebook software github license use software terminates invalidating proprietary claims may tl dr yes think using flow syntax alone impact vuejs legal standpoint lawyer opinion", "d": "8/2017"}, {"body": "file suit using flow react bsdpatent licensed facebook software github license use software terminates invalidating proprietary claims may using flow nothing vue code use contains hint flow fact vue maintainers used flow build process create files hadhave licence flow concern using flow patented technologies one could find applications far every interpretation would crazy would mean people use patented technology could get legal problems product use build patents legal crazy true stop writing software alltogether sued anything everything second would mean someone held patent something used webpack would stop using already built files built webpack still legal", "d": "8/2017"}, {"body": "linusborg may right like said lawyer expert law think licensing goes general nature open source dumb types threads considerations even need exist", "d": "8/2017"}, {"body": "say decide convert would happy help lot successpractice lately converting projects helping much eslint typescript compatibility work would lot reasons including patent issues understand majoritycore team", "d": "8/2017"}, {"body": "vue codebase rewriting ts full ts support like angular", "d": "8/2017"}, {"body": "vue typescript take learnings polymer", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "issues debug", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow doc may help", "d": "8/2017"}, {"body": "sure actually possible guess could move generated render function statics value true problem behind fr nt clear nt trying achieve", "d": "8/2017"}, {"body": "yes essentially trying achieve seems like one extra unnecessary listener since async data case never false case ran providing nice semantic observable status messages suppose could use following template render status seems lot simpler also acknowledge rendering trivial another example less trivial streaming updating list objects finalized nt want keep updating", "d": "8/2017"}, {"body": "data never updates probably nt need optimise anything else nt think intent clear btw would without read condition met render basically sure much extra work needed achieve keep mind nt want add syntax sugar vue moment want keep lib small may revisit future though moment already achieve using ifelse proly pass", "d": "8/2017"}, {"body": "perhaps modifier could used seems less ambiguous although ca nt speak dev effort thanks consideration", "d": "8/2017"}, {"body": "hi vonce used static content doc tell compiler nt add responsive functionalities save cpu time otherwise content responsive methods could used save kind cpu time use control done never change component never invokes responsive code watcher performance lost code running fastest code", "d": "8/2017"}, {"body": "would nt conflict default slot", "d": "8/2017"}, {"body": "rayrutjes slots make sense template property render function right", "d": "8/2017"}, {"body": "rayrutjes", "d": "8/2017"}, {"body": "conflicts default api importantly template behavior consistent inspecting parent template alone behavior vary based definition child component intentional design decision beginning going change", "d": "8/2017"}, {"body": "seems edge case related tracked", "d": "8/2017"}, {"body": "thanks looking jkzing closing dup", "d": "8/2017"}, {"body": "easily without changing api javascript quick amp dirty ajaxplugin toastplugin loadingplugin alertplugin foreach vueuse vue safer ajaxplugin toastplugin loadingplugin alertplugin foreach x gt vueuse x see arrayprototypeforeach", "d": "8/2017"}, {"body": "sirlancelot oh good idea thank", "d": "8/2017"}, {"body": "ca nt clone every must unique", "d": "8/2017"}, {"body": "sirlancelot really problem jjvainav vnodes representing child components different format vnodes representing elements example ca nt simply reuse use depending weither tag registered globally nt component template nt come parent ca nt inject child component without component using bug usage question please use forum chat", "d": "8/2017"}, {"body": "injected values resolved first actually provide values based", "d": "8/2017"}, {"body": "rayrutjes sorry ca nt understand please explain detail", "d": "8/2017"}, {"body": "provided values able rely data data able rely injected values order must inject state provide", "d": "8/2017"}, {"body": "rayrutjes oh see function use state", "d": "8/2017"}, {"body": "js import util util const parent new vue provide util computedlike util mounted thisutilsamecodeforuse const child new vue parent parent inject util mounted thisutilsamecodeforuse without watch nice", "d": "8/2017"}, {"body": "paulopmx change class rerender new class new value remove make work use instead", "d": "8/2017"}, {"body": "reseting input value blank resets input value bound prop always empty", "d": "8/2017"}, {"body": "nickmessing thanks reply actually simplified example actually bound defined prop parent defined", "d": "8/2017"}, {"body": "paulopmx option effect components nt effect root app nothing works", "d": "8/2017"}, {"body": "paulopmx check defined add every render reset value see console", "d": "8/2017"}, {"body": "updated code works yeah looks like right must miss something bindings", "d": "8/2017"}, {"body": "\u8be5\u7c7b\u95ee\u9898\u8bf7\u5230 \u6216", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "8/2017"}, {"body": "\u8c22\u8c22", "d": "8/2017"}, {"body": "elements inside keyed", "d": "8/2017"}, {"body": "checkbox checkbox", "d": "8/2017"}, {"body": "\u8c22\u8c22\u5927\u5bb6", "d": "8/2017"}, {"body": "use attribute", "d": "8/2017"}, {"body": "thanks sorry trouble start javascript vue django must say fun takes time understand details", "d": "8/2017"}, {"body": "worries recommend check discord server get fast feedback", "d": "8/2017"}, {"body": "dup", "d": "8/2017"}, {"body": "thanks proposal right lean adding syntax sugar reason one exists inputs able use components especially ui components makes code readable adding new syntax something already feasible short nt direction want go however think improve docs happily take pr", "d": "8/2017"}, {"body": "hello repro actually reproduce issue neither provided data trying assign tried infer data description unable reproduce issue closing likely issue somewhere else able provide working repro feel free open new issue", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow nt defined look console better hint", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "want help project ask questions forum discord server gitter stackoverflow reporting bug need reproduction please provide one", "d": "8/2017"}, {"body": "ok ask thanks", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "nice neat considering data attributes temporary variables outside", "d": "8/2017"}, {"body": "sure understand need looking example wrap component handles drag events vue export default methods draghandler event debugger directives supposed super simple dom abstractions need maintain state invocations use dom data attributes need handle something complicated state like functions likely better using proper component directives vue used stateful removed favor using proper components much overlap", "d": "8/2017"}, {"body": "goto solution save state html element sirlancelot said want keep directives simple limit responsibility become complex using component way go", "d": "8/2017"}, {"body": "adding posva said directive ability vue deliberately removed essentially custom directives vue similar components abilities made unclear use vue decided make destinction clear need state generally use component directive directives responsibilities reduced lowlevel dom work higher level woirk done components need state directive arises edge case use element store workaround", "d": "8/2017"}, {"body": "want manage semicomplicated state directive could use solution like slippery slope though take care", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "sirlancelot thanks", "d": "8/2017"}, {"body": "property applied sibling nodes case move property wrapper", "d": "8/2017"}, {"body": "tag allowed according html spec stripped automatically browser use template option", "d": "8/2017"}, {"body": "writing two times", "d": "8/2017"}, {"body": "see nt believe showed colleague submitted bug nt see amp amp amp checking make sure copypasta nt happen still effect happening project maybe doubleescaping sure enough double escaping back end", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "dup", "d": "8/2017"}, {"body": "repro link nt contain", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "8/2017"}, {"body": "would kindly tell us vmodel code found source website wo nt search site nt even form", "d": "8/2017"}, {"body": "sorry false alarm", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "closing instead opening discover really affect vue", "d": "8/2017"}, {"body": "looks like bug thanks reporting looks like introduced looks like problem happens patch vnodes though edit looks like false vnode patch making call mount disappearing node tree", "d": "8/2017"}, {"body": "fixed note changing element wrapping slots element considered replaced thus slot content including components destroyed recreated unfortunately vdom patching works unlikely change", "d": "8/2017"}, {"body": "sounds good thanks ballpark date next release", "d": "8/2017"}, {"body": "two mistakes fiddle shortland shoud use unique key instead using index directly see fixed", "d": "8/2017"}, {"body": "hi glad hear vue used microsoft production thanks reporting meanwhile track progress improved typing main blocker blocking change declaration need transition plan introduce new change also help transition inferring optional generic type parameter make compatible api without losing precise inference let first close issue concentrate discussion pull request thanks", "d": "8/2017"}, {"body": "second one sounds rather like mistake part b bug could provide small reproduction problem appears sidenote aware refs vfor end array", "d": "8/2017"}, {"body": "nickmessing think solved instead adding yet another warning core lib would bug true would remove label ask op suggest rule repo ok", "d": "8/2017"}, {"body": "linusborg agree", "d": "8/2017"}, {"body": "disagree problem refs might specified programatically case warning would issued even though would save user lot trouble possibilities linter would warn even though nt two cases mutually exclusive linter nt enough information reliably determine duplicate references runtime enough information", "d": "8/2017"}, {"body": "incidentally try come simple test case original second example next week", "d": "8/2017"}, {"body": "concede linter catch dynamic refs many cases would implement warning mechanism however simple check nt enough either totally valid overwrite refs would somehow register ref assignments run render function check ne assignment assigned privously render run think feasable", "d": "8/2017"}, {"body": "linusborg one easy way need wait drop ie support sweatsmile", "d": "8/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks use jsfiddle starting point", "d": "8/2017"}, {"body": "lastest chrome works computer doesnot work maybe jsfiddle alse work donot know describe want know someone encounter write jsfiddle", "d": "8/2017"}, {"body": "maybe ask forum discord server gitter stackoverflow", "d": "8/2017"}, {"body": "guess relevant vue input software please try remove vue dependency see still happen", "d": "8/2017"}, {"body": "maybe check somehow help ddcouples possible provide minimized demo contains necessary code reproduce problem without nothing else thanks", "d": "8/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "8/2017"}, {"body": "sounds reasonable especially vue automatically prefix template identifiers", "d": "8/2017"}, {"body": "actually sometimes use demonstration purposes people coming react background nt think prohibited since works perfectly fine rather part recommended instead forbidden ps though herringtondarkholme think reasonable remove prohibited keywords make sense support expression ex", "d": "8/2017"}, {"body": "nickmessing nt think allow since promote inappropriate logic template like example give would think probably belong method vm", "d": "8/2017"}, {"body": "nt think prohibited since works perfectly fine ah see nt realize prefix works fine", "d": "8/2017"}, {"body": "nt akryum wrote similar issue rely find phone", "d": "8/2017"}, {"body": "nvmd something different textareainput nt working either different components input behaving instead treating input marked regression still nt checked introduced fix something else", "d": "8/2017"}, {"body": "fix issue", "d": "8/2017"}, {"body": "mosinve nt", "d": "8/2017"}, {"body": "seems commit breaked", "d": "8/2017"}, {"body": "maybe could check whether real custome component apply gencomponentmodel method posva could nice first contribution try fix weekend case someone wants try", "d": "8/2017"}, {"body": "defcc agree points", "d": "8/2017"}, {"body": "riophae achieve using computed prop like", "d": "8/2017"}, {"body": "define props based props directly default value order props resolved decide default value however object order keys thus making props value depend lead unexpected behaviour instead use computed property add property hold actual variable change hook combine necessary", "d": "8/2017"}, {"body": "yeah computed property solves problem actually possible determine order js var propswithdefaultfunction var propswithdefaultfunctionthatreliesonothers var otherprops var key props var prop props key typeof prop object amp amp typeof propdefault function propdefaultargumentslength propswithdefaultfunctionpush key else propswithdefaultfunctionthatreliesonotherspush key else otherpropspush key first resolve default values otherpropsforeach resolve default values propswithdefaultfunctionforeach last resolve default values propswithdefaultfunctionthatreliesonothersforeach", "d": "8/2017"}, {"body": "riophae relies relies", "d": "8/2017"}, {"body": "nickmessing yeah impossible", "d": "8/2017"}, {"body": "riophae actually possible using calling everything fake objects reasonable limits browser support computed properties approach works great scenarios", "d": "8/2017"}, {"body": "try", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow nothing deal vue akryum faster give answer", "d": "8/2017"}, {"body": "related webpack indeed", "d": "8/2017"}, {"body": "akryum works posva asked thought alias work style tag", "d": "8/2017"}, {"body": "vivekroy repository vuejs library webpack template problem webpack vue find template repo", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "specifying option overwrite whatever template dom property advanced syntax needs promise resolves component", "d": "8/2017"}, {"body": "style invalid change color red work need use object syntax", "d": "8/2017"}, {"body": "also tested using color red still work updated fiddle", "d": "8/2017"}, {"body": "problem initial value setting color height using string syntax nt work want object syntax", "d": "8/2017"}, {"body": "fixes fiddle actual project get back information thanks", "d": "8/2017"}, {"body": "correct problem invalid string syntax forgotten standard browser behavior modify style style set invalid value remembered since relying behavior css stylesheets accomplish graceful degradation many cases may worthwhile development build vue validate style actually set warn nt least object notation used since graceful degradation nt possible anyway using object notation relatively easy mistake make hard debug forgot golden rule forgot understand considered outside scope vue", "d": "8/2017"}, {"body": "note understand would nt possible scoped slots however optimization might help even scoped slots would trigger rerender child component rerender parent component generated delta actual slot content", "d": "8/2017"}, {"body": "well think would possible implement something would diff slot contents updateiung components ignoring difficulties implementing moment ca nt say much right would come performance tradeoff proposal would save rendering virtualdom child nothing slot changed everytime diffing slot content find changes slot content would diffing slot content twice render function child run new vdom diffed essentially means children big templates small slot contents would run better children small templates big slots woudl run worse changes happen sure better also technically child would keep outdated virtualdom content slot nodes parent created fresh nodes rerendered suspect might technical hurdle", "d": "8/2017"}, {"body": "case slot component uses vfor loop apply hundreds repeats case unquestionably faster calculate delta wonder reasonably detected", "d": "8/2017"}, {"body": "wonder reasonably detected hardly compile time runtime would require analysis compilation would derminate template expensive set flag component resolts slot diffing runtime nt cheap components sounds easy measuring expensiveness would tricky considering big impactr temnplate actually expensive small fact statically analyse compilation big arrays render runtime etc pp new api would thinkable set flag manually least theory", "d": "8/2017"}, {"body": "would say either slot used inside loop slot contents smaller template time probably worth test delta particular case would save make rather unintuitive changes structure library used lot developers company", "d": "8/2017"}, {"body": "also calling render function typically much slower performing diff two strings data", "d": "8/2017"}, {"body": "mmh sure want force behaviour flexible allow user specify offset per child css really think want work absolutely positioned said overlap", "d": "8/2017"}, {"body": "assumes guess cause correct nt think happening absolute positioning think ordering flip calculations applying style changes remove three items one go collapse towards location first removed item first fall directly downwards seems flip calculation works correct animation applying absolute positioning works fine long single item removed issue two items removed calculation fails correctly calculate item end position seems make sense absolute positioning applied transitiongroup iterates children seems make changes classesstyles goes items multiple elements removed change affects subsequent items unexpected way previous elements removal already removed flow calculates end position explains issue single removal problem seen multiple items removed would work user expects transition group firstly calculated flip positions removed elements currently stand without yet mutating classesstyles made changes classesstyles elements way elements would animate expected", "d": "8/2017"}, {"body": "nt think happening absolute positioning think ordering flip calculations applying style changes remove three items one go collapse towards location first removed item first fall directly downwards really remove many clicking remove one see behaviour", "d": "8/2017"}, {"body": "ah yes sorry quite right made fiddle test unless would make good feature request something like element removed absolutetransformed position calculated relative parent held leave animation applies nt bug suppose closed", "d": "8/2017"}, {"body": "actually intended said try set value input something impossible value transformed empty string vue consistent aspect set something js like html attributes strings makes sense vue use instead would also breaking change", "d": "8/2017"}, {"body": "working expected change prop value look console happens change th ename parent parent renders passes static value name thus overriding changes solve use data property save current state", "d": "8/2017"}, {"body": "posva thanks use data refer name yes works thanks", "d": "8/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "8/2017"}, {"body": "simple repo using nuxt ssr frameworks eg ream issue pretty convinced vuessr bug", "d": "8/2017"}, {"body": "would help make vanilla vue thanks", "d": "8/2017"}, {"body": "nailed issue replacing html entities rendered output updated example code nt know would necessary since browsers anyway adding rendered opening tag browser understand trigger clientserver dom mismatch warning opened pr remove html entity conversion", "d": "8/2017"}, {"body": "thanks concise repro looks like bug thanks proposing pr", "d": "8/2017"}, {"body": "expected behaviour methods contain arbitrary code cached therefore every time component renders get called inside method change something triggers render method get executed careful enters infinite loop nt precise enough use performancenow get infinite loop look console put nutshell change data used template method called template infinite loop example even though changing content elements changing adjacent element template whole template renders therefore method gets called goes index many workarounds depend use case one could using component ask question forum discord server gitter stackoverflow get personal help", "d": "8/2017"}, {"body": "issue foo change data every time nt rerender occur data changed comparison angular vue angular", "d": "8/2017"}, {"body": "example even though changing content li elements changing adjacent element template whole template renders therefore method foo gets called vfor goes index every call changes displayed adjacently therefore rerenders vfor well template calls", "d": "8/2017"}, {"body": "okay noticed even angular runs infinite digest date replaced performance two questions though angular still faster nt vue avoid list items rerendered endtime changed since nt rely endtime", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "cdn \u8fd8\u6709\u4e00\u79cd\u53ef\u80fd\u662f\u4f60\u7535\u8111\u91cc cdn \u9759\u6001\u8d44\u6e90\u7f13\u5b58\u8fc7\u4e86\u6240\u4ee5\u611f\u53d7\u4e0d\u660e\u663e translation issue talking jsfiddle sometimes blocked china keep eye thanks", "d": "8/2017"}, {"body": "\u56fd\u5185\u67d0\u4e9b\u8fd0\u8425\u5546\u7684\u7f51\u7edc\u662f\u4f1a\u6253\u4e0d\u5f00 \u786e\u5b9e\u6bd4\u8f83\u7a33\u5b9a", "d": "8/2017"}, {"body": "looking relation issue well also one location selfexplanatory", "d": "8/2017"}, {"body": "yes definitely warnings referring", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "\u4f60\u7684 repro", "d": "8/2017"}, {"body": "\u8bf7\u597d\u597d\u63d0\u4f9b repro", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hi drdaemos maybe use relevant thread jsfiddle good luck", "d": "8/2017"}, {"body": "yep expected plasmatium explains use want pass props root instance rarely case", "d": "8/2017"}, {"body": "yeah thanks accept use guess would helpful add vue warning usage", "d": "8/2017"}, {"body": "would breaking change done instead adding modifier strips tags easily handled computed property utility function", "d": "8/2017"}, {"body": "clarify saying changing default behavior would breaking change guess ideally would nice sanitized default suggestion using modifier sounds great would look like", "d": "8/2017"}, {"body": "hi two cents would seems unnecessary vue maintain html sanitizer given libraries already well argue appropriate places perform sanitization also allow better developer control ideas sanitize html persisting database returning json response sanitize html vue computed property would useful unable modify wordpress backend might try calling library property also worth mentioning docs appropriate warnings guide reference sections", "d": "8/2017"}, {"body": "rpkilby sanitizehtml seems great work use case still think would nice vue automatically added security measure absolutely hear concerns thanks input link", "d": "8/2017"}, {"body": "nt think good idea vue add builtin htmlsanitizer either introducing new config eg compromised way", "d": "8/2017"}, {"body": "agree rpkilby shipping builtin sanitizer would add extra bundle weight rare use case use cases trusted content also trivial add setting", "d": "8/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "8/2017"}, {"body": "sorry provide minimal jsfiddle github repository ssr case find read source code see vueserverrenderer source code may understand say save data attribute make cache get bigger bigger vueserverrenderer source code javascript function cached fn var cache objectcreate null return function cachedfn str var hit cache str return hit cache str fn str function escape return sreplace lt gt amp g escapechar var cachedescape cached escape function renderattr key value isbooleanattr key isfalsyattrvalue value return key key else isenumeratedattr key return key isfalsyattrvalue value value false false true else isfalsyattrvalue value return key typeof value string cachedescape value value return", "d": "8/2017"}, {"body": "would get bigger using property", "d": "8/2017"}, {"body": "cachedescape cached attributte value value difference every request", "d": "8/2017"}, {"body": "please develop situation exactly leading leak please maybe naive attributes", "d": "8/2017"}, {"body": "posva issue normal static attributes think leaks eg ids used attribute values cache could eventually contain every single id database use ids database entries attribute values example time users request pages different items server cache would grow grow containing item ids db could potentially happen data db used element attributes might rather need lrucache limited size", "d": "8/2017"}, {"body": "linusborg thinking issue nt clear beginning problem leak never released memory edit hate github longer logs change title", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "hi wormgirl thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow note reproduction link needs minimal app repo note link another website thanks", "d": "8/2017"}, {"body": "problem likely template definition uses template literals nt work ca nt verify right use normal strings instead use babel option fiddle verify please", "d": "8/2017"}, {"body": "yes sir changed normal string worked think use babel orther avoid errors since rely heavily ie customers thanks reply", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "please read documentation expected behaviour nt clone arraysobject wo nt change", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "tab key yet current input element lose focus keyup event tab actually fired next input element last input element behaved differently demo", "d": "8/2017"}, {"body": "bug documentonkeydown works going javoski", "d": "8/2017"}, {"body": "sure really want nt know javascript keyup event works mean maybe use instead close cuz demo worked expected according tests", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow btw reporting bug asking help providing strict minimal augment chances getting help", "d": "8/2017"}, {"body": "thanks reporting fixed", "d": "8/2017"}, {"body": "closing duplicate", "d": "8/2017"}, {"body": "found issue vscode ide problem nature", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow real problem webpack mix config vueloader really bug", "d": "8/2017"}, {"body": "sgehrman use carriage return line feed characters crlf aka new line use web", "d": "8/2017"}, {"body": "note atom users default os default crlf windows change setting lf", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "using also nt work would intuitively expected domdiffing applying change attribute value like one would expect", "d": "8/2017"}, {"body": "thing broken using selfclosing input tag", "d": "8/2017"}, {"body": "fiddle showing works vanilla htmljs raises concern vue dom diffing like claims attribute would end modified value inputted text would remain inside input", "d": "8/2017"}, {"body": "syropian suggested add dummy workaround works intuitive wasteful", "d": "8/2017"}, {"body": "trusktr attribute special expected behaviour without carry around think even", "d": "8/2017"}, {"body": "nickmessing intuitive please fix sort thing work vue works browser sure switching wo nt work case could rerender would whatever browser actually otherwise vue nt dom diffing like one would assume switching work vue make intuitively easy nt framework like vue goal make things easy", "d": "8/2017"}, {"body": "see fact someone telling unituitively use vmodel workaround problem frustrating library issue gets closed library author easily improve library benefit users cost small onetime extra effort library author side library author chooses perhaps author convenience true benefit user could instead leave open suggest pr made much better choice", "d": "8/2017"}, {"body": "trusktr well rerendering diffs indeed let imagine simple scenario step first render dom looks like step add text dom looks like consider describing domprop attr step change vue calculate diff apply result value gets removed intuitive understand virtual dom based rerendering remove new helps replaced see", "d": "8/2017"}, {"body": "example nt really applicable case also mentioned implementation details end users nt need care case simple thing changing type type vice versa optimize dom diffing expected case end users wo nt run unexpected behavior another way put simply change type type using vanilla domjs simple vue vue extension people expect vanilla dom honestly good enough reason make optimization end case similar cases make intuitive possible end users", "d": "8/2017"}, {"body": "updated title remove question mark even hack dom diffing working vue destroying existing element creating whole new one rather modifying attribute really bad destroys interoperability outside code example bootstrap validator stops working reference nolongerexisting element vue supposed incrementally adoptable interoperable outside code fe jquery plugins simply acceptable", "d": "8/2017"}, {"body": "nickmessing vue always domdiffing like claims fiddle work start typing input field see values logged console toggle showhide password vue domdiffing properly would changing attribute input case continue see output console case input console time showhide toggled vue replaces entire element new one broke simple tool lead code leak unused dom memory", "d": "8/2017"}, {"body": "example using react domdiffing works expected", "d": "8/2017"}, {"body": "trusktr indeed makes sense change goes one textlike input another vue never claiming rather vue guarantees keep sync actual dom virtual dom using reactivity system impossible predict going since internal api change time bug since keeping sync actual dom virtual dom defined template probably suboptimal replace whole input switching one textlike another try optimize vue never designed friendly jquery plugins", "d": "8/2017"}, {"body": "impossible predict going since internal api change time true guarantee atomicity proposed regardless implementation attribute supposed change based vue template thing dom change corresponding real attribute suboptimal replace whole input switching one textlike another probably suboptimal ever replace input matter type transition changing type text file dom changes empty string nt think user going try though simply use either needed make choice way would vanilla dom case nt think need replace input element regardless type change happens simply ca nt predict user fair vue make assumptions even unintentional", "d": "8/2017"}, {"body": "fiddle shows events type change think interest tool work existing standardized dom functionality working expectations dom works", "d": "8/2017"}, {"body": "fyi intentional mechanism dealing bindings different bindings toggle say eventvalue bindings generated compile time would different straightforward replace element cases toggling use case considered easy fix", "d": "8/2017"}, {"body": "vue uses underscore prefixes internal methods advised", "d": "8/2017"}, {"body": "prs add warnings check methods names welcome guess yeah nt name methods starting underscore", "d": "8/2017"}, {"body": "nt note docs think unreasonable expect people respect naming strategies methods however understand may simple make change make pr add warnings make notes documentation", "d": "8/2017"}, {"body": "posva believe similar prs existed add warning turned adding warning nt easy vue adds methods one one hard tell word internal", "d": "8/2017"}, {"body": "damn nt think hard case worth pointing docs future versions use prevent right", "d": "8/2017"}, {"body": "posva still unfamiliar vue codebase symbols seem like great way mitigate issue entirely idea though breaking change simply namespace methods something like updating docs pr nt really see good place add note naming methods guide perhaps deserves heading still trying understand codebase rather write guide something nt completely understand", "d": "8/2017"}, {"body": "posva herringtondarkholme justinbeaudry might misunderstanding would possible provide warning perhaps also", "d": "8/2017"}, {"body": "chrisvfritz trying something like locally morning see would work seems instead trying warn collisions specific names warning method names seems best bet warning almost nt seem harsh enough though imo", "d": "8/2017"}, {"body": "chrisvfritz problem library use prefixed method names hide implementation warn based prefix library users undesired warning", "d": "8/2017"}, {"body": "herringtondarkholme prefixed names nt used due possible namespace collisions seems unreasonable find every internal method used warn method conflicts imo either warn every prefixed method name warning namespace methods", "d": "8/2017"}, {"body": "herringtondarkholme agree justinbeaudry case sounds like suggest use underscoreprefixed datumpropcomputedmethod names ca nt guarantee vue wo nt conflict future means plugins could already break moment including patch release think better onetime soft break warning suggests alternate strategy maybe prefix could officially reserved private plugin properties suggested namespace like avoid conflicts plugins use similar strategy even applicationspecific pluginsmixins property registration could display warning", "d": "8/2017"}, {"body": "slight aside private methods specifically taking advantage js scoping might make sense example js export default function myprivatefunc vm", "d": "8/2017"}, {"body": "chrisvfritz agree introducing new naming pattern good enough safely use", "d": "8/2017"}, {"body": "imo either warn every prefixed method name warning namespace methods say warning introducing new naming method convention make lot library creators warnings fill console people using plugins making difficult debug furthermore people come complain create issues nothing vue repository also plugins even vue add methods one one create static list methods names nt used ca nt", "d": "8/2017"}, {"body": "posva even vue add methods one one create static list methods names nt used ca nt unfortunately ca nt create static list private property names might used future maintaining list would pain easily falling sync introducing new naming method convention make lot library creators warnings fill console people using plugins making difficult debug necessarily could start introducing new config eg enabled could throw actual errors stack traces see exactly method defined release could reach biggest plugin authors personally suggesting enable default tests plugin authors trained could include softer warning default eg way anyone still affected see warnings instead scarier errors apps wo nt break even dev unless already broken due real conflict warnings still include stack traces users see exactly problem came obvious name message could even describe possible plugin causing naming conflict people probably using many plugins ca nt narrow even good reading stack traces future could continue used compatibility conventions want establish decided warn component names without dash using standalone build suggestion making right btw thoughts", "d": "8/2017"}, {"body": "looks like huge amount work little benefit think easier answer every issue may arise future little contacting every big plugin author pov note docs best option using front property user must aware recommending using looks like good trade", "d": "8/2017"}, {"body": "reproduced property well updated issue", "d": "8/2017"}, {"body": "posva agree right problem relatively small least far measure since overriding private properties produce difficulttodiagnose errors worse subtle bugs nt even produce error since difficult track report might remain largely invisible problem longer wait something like plugins exist conflicts arise vue pluginsmixins feel like wait bigger problem guaranteed keep growing vue popularity even work point justinbeaudry yes warn toplevel properties data props computed properties methods", "d": "8/2017"}, {"body": "still think pragmatic way document people built plugins work probably got around naming restriction already really think trying solve problem nt exist may happen future new users trying create plugins face issue find thread end fixing couple hours max", "d": "8/2017"}, {"body": "posva sounds like primary concern whether worth effort accurate think work towards eslint rule already done would nt mind writing optional warnings behind config flag devonly feature also would nt add weight production build sound acceptable place start", "d": "8/2017"}, {"body": "chrisvfritz main concern think careful adding warnings impact development experience everybody may help dozen persons sometimes think adding documentation eslint plugins better", "d": "8/2017"}, {"body": "posva impact development experience trying avoid behind config flag would nt affect experience care future compatibility always positive way think hiding important warning behind compatibility flag likely make people angry offering chance take minutes prevent apps breaking future see similar many security issues use ssl even though user credentials probably wo nt stolen eliminating especially ugly scenario despite relatively low likelihood occurrence cases easy fix make entire vue app could break time way would difficult diagnose possibly even detect feel worth couple minutes fix even probably wo nt happen", "d": "8/2017"}, {"body": "development experience also mean time impact performance nt clear sorry really depends check happen flag deactivate tipwarning looks reasonable", "d": "8/2017"}, {"body": "ah see since check happens initialization already iterating property checks impact minimal", "d": "8/2017"}, {"body": "transition must one element vif allows use development version see error", "d": "8/2017"}, {"body": "thank answer seen error console beforehand seems like mode outin work transitiongroup would one achieve desired effect use hooks trigger animations manually cleaner way", "d": "8/2017"}, {"body": "personally use vif transitiongroup nt seem fit use case please ask questions forums discord", "d": "8/2017"}, {"body": "thank sorry inconvenience", "d": "8/2017"}, {"body": "worries", "d": "8/2017"}, {"body": "code works fine mean ie instead ms edge change code", "d": "8/2017"}, {"body": "thx work", "d": "8/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "8/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "8/2017"}, {"body": "workaround use latest node flag build", "d": "8/2017"}, {"body": "nickmessing thanks work around still problem solution possible always include workaround made affected projects less portable future es features always land babel plugins node even flag", "d": "8/2017"}, {"body": "justineo personally would like change mechanism move away babeltemplatecompiler would result runtime errors make hard track mistakes templates another way try parse babel instead slow need research actual performance impact", "d": "8/2017"}, {"body": "justineo unfortunately using parse expression breaks current solution since parses keywords successfully ex adds extra dependency looks like option limited use code supported node expressions solves spread problem moment", "d": "8/2017"}, {"body": "thanks nick think better point docs prevent confusion make pr later nt mind", "d": "8/2017"}, {"body": "learned lot", "d": "8/2017"}, {"body": "closing issue nt seem consider", "d": "8/2017"}, {"body": "nickmessing reason could nt use instead build step webpack template", "d": "8/2017"}, {"body": "chrisvfritz would nt recommend using babelnode performance overhead", "d": "8/2017"}, {"body": "posva much slower talking though think predictable behavior worth slightly slower builds even moderately slower builds nt already tradeoff choosing write tests include build system compiles predictably supported javascript", "d": "8/2017"}, {"body": "concern adding note documentation wo nt sufficient people encounter problem nearly impossible find note could easily waste day trying figure feature nt working correctly probably likely give assuming vue template compiler buggy lied supporting babel features really nt feasible find consistent workaround think need way communicate users like catch errors vue template compiler provide warning behavior", "d": "8/2017"}, {"body": "chrisvfritz nt tested using babelnode webpack template know possible remember keep slightly bad memory using node projects", "d": "8/2017"}, {"body": "posva chrisvfritz option anyway since nt transpire code think know way make work make dependency template compiler considered", "d": "8/2017"}, {"body": "nickmessing posva investigate would either mind reopened make sure nt forget since really problem documentation solve thinking close one prevent issue completely templates vuetemplatecompiler directly provide user warninghint error raised may caused unsupported feature node last resort decide neither feasible encountering difficulttodiagnose behavior one horror stories vue users tell late night around campfire nickmessing think users nt concerned size dev dependencies would alright would make things work users expect", "d": "8/2017"}, {"body": "chrisvfritz unfortunately nt know without bundling babylon runtime build", "d": "8/2017"}, {"body": "chrisvfritz worries", "d": "8/2017"}, {"body": "nickmessing ah see crazy idea could avoid pulling babylon template compiler something like beginning function closer pseudocode real solution think strategy getting might feasible", "d": "8/2017"}, {"body": "chrisvfritz actually yes try way", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "thanks lot good job look nice simple wait evan input", "d": "8/2017"}, {"body": "vuex logo looks dopest would really love could alternatives vuerouter though cents", "d": "8/2017"}, {"body": "loving vuex logo think vuerouter similar reactrouter logo", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "usage question please post forumvuejsorg", "d": "8/2017"}, {"body": "ping ktsn kazupon herringtondarkholme", "d": "8/2017"}, {"body": "thought wrote typings sure necessity since used webpack config write webpack config typescript", "d": "8/2017"}, {"body": "hi foisonocean would mind provide information far know clientplugin webpack nt think many users use ts webpack setup plus clientplugin contains almost nothing signature also seems adding work vueserverrender", "d": "8/2017"}, {"body": "yes using typescript write webpack config", "d": "8/2017"}, {"body": "woo", "d": "8/2017"}, {"body": "oh nt know webpack officially supports config file written typescript create declaration", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "\u5f00 issue", "d": "8/2017"}, {"body": "working expected destroys recreates toggled slot content second component recreated wrap slot inside div works expected", "d": "8/2017"}, {"body": "\u8fd9 ie \u7684 bug \u800c\u4e0d\u662f vue \u7684\u95ee\u9898 \u5efa\u8bae\u4f60\u7528", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "vue", "d": "8/2017"}, {"body": "know binding template already know fields discussed unfortunately current behavior wo nt change allowing templates dictate data structure breaks single source truth", "d": "8/2017"}, {"body": "expected information edit button custom event", "d": "8/2017"}, {"body": "tested works fine plugin installed installing eslintpluginvuelibs make sure updated version npm delete nodemodules", "d": "8/2017"}, {"body": "posva thanks update npm works fine", "d": "8/2017"}, {"body": "update npm btw still quite old", "d": "8/2017"}, {"body": "posva thanks lot reinstall nodejs stable version npm update nodejs trying read hope contribute source code", "d": "8/2017"}, {"body": "personal thing anything else think node comes major improvements", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "want generate random keys generated time create items add array call functions template keys created every time component renders completely defeating purpose keys recommend use forum discord server gitter stackoverflow get help", "d": "8/2017"}, {"body": "thanks use channels solve problem", "d": "8/2017"}, {"body": "hi hegangsz \u4f7f\u7528", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "expected overwriting global component local component options ca nt get data since exporting data want use globally registered components execute vue", "d": "8/2017"}, {"body": "please provide real reproduction", "d": "8/2017"}, {"body": "version update computed property statement feat warn assigning computed property setter must add setter computed property", "d": "8/2017"}, {"body": "trying set property state getter mapped instance may happen pass computed property handled another component find case happening nt please tell reopen", "d": "8/2017"}, {"body": "posva thanks used sync would change property updateanotherstate val gt property val sync always trying set property immediately use sync", "d": "8/2017"}, {"body": "try implied templates similar use component", "d": "8/2017"}, {"body": "implied templates similar use component data gotcha whittleddown example case came across definitely kosher use case set like specifically highlight fact bound parent outside tag inside reason bound parent within tag seemed nonintuitive thought worth ask", "d": "8/2017"}, {"body": "nt use inside template", "d": "8/2017"}, {"body": "missed", "d": "8/2017"}, {"body": "code editor turns nt realize serverside handlebars interpolating template code never made client pasted viewsource fiddle thanks sorry wasting time guys joe", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "prefer", "d": "8/2017"}, {"body": "sirlancelot described declare expression", "d": "8/2017"}, {"body": "sure understand works objects", "d": "8/2017"}, {"body": "use property object telling vue longer wish reactivity property deleting basically keyword bring back reactivity deleted property need use want delete object property still wish remain reactive without needing use try setting property instead", "d": "8/2017"}, {"body": "lost reactivity used vuedelete checked api docs vuedelete says vuedelete works arrays vuedelete target key arguments object array target string number keyindex works array index guys say mistake docs must another problem code caused issue look thank replies", "d": "8/2017"}, {"body": "omerzfira docs sat array index supported starting mean lost reactivity deletes property longer property reactive nt exist something like supposed work reactively removes property property reactive since nt exist", "d": "8/2017"}, {"body": "way since github issues issues questions close ask questions forum chat stackoverflow", "d": "8/2017"}, {"body": "seem misunderstand objectpreventextensions method prevents new properties ever added object ie prevents future extensions object mdn emphasis mine vue nt add new properties adds getters setters existing properties fine objectpreventextensions demo vanilla javascript probably want rather use", "d": "8/2017"}, {"body": "linusborg perhaps post titled differently please see console timings reproducer posted see clearly bug vue recursively walking array effort make elements reactive want following code take vue similar thing plain objects however prevent behavior currently prevent vue looping elements array though causing significant performance degradation project large array need able index nt need reactive", "d": "8/2017"}, {"body": "simpler reproducer nt involve takes gt simply set property large array edit another one showing hack currently", "d": "8/2017"}, {"body": "edit following wrong see next reply seem misunderstand explanation objectpreventextensions prevent reactivity design objectfreeze design bug intentional design decision solution problem use objectfreeze", "d": "8/2017"}, {"body": "revert apologize claiming sure worked instance reality wrong turns fact wrong vue respect objectpreventextensions test original jsfiddle log array console added vue without notice one without property means reactive one nt also checked adding breakpoints vuejs line defined called twice reason defined called reach array element items passed function reactivity system apologies claiming something factually wrong issue stays closed vue already behaving like want", "d": "8/2017"}, {"body": "ah see surprised different way prevent reactivity object vs array chrome still taking freeze array items seems depend length array would possible introduce different way indicating vue iterate array actually need object frozen change behavior vue", "d": "8/2017"}, {"body": "side note function still getting invokedthe array iterated however mistaken thinking culprit performance issue", "d": "8/2017"}, {"body": "would possible introduce different way indicating vue iterate array discussed couple times previously already wo nt happen really want skip reactivity add array directly instance instead assigning property derived", "d": "8/2017"}, {"body": "okay going take step back think initial debugging led think problem something nt reproducer close actual scenario building virtual grid large source array compute start index normally would based scroll position case added button simulate scrolling template renders rows jsfiddle array never change thing changing start index however enormous amount lag profile see issue core nothing reactivity solely performance seem like something perform poorly realize issue kind gone rails originally posted let know open new issue", "d": "8/2017"}, {"body": "sure new issue order behaviour really something work around within reactivity functionality said need raw performance reactivity add array normal instance propety discussions improving specific performance challenges probably rather happen forumvuejsorg unless specific improvement suggest would warrant new issue feature request", "d": "8/2017"}, {"body": "linusborg due respect find really hard believe considered acceptable performance especially considering fact marked array extensible entire array subarrays iterated every time property read viewmodel reproducer template renders rows reads template expression problem far worse number rows increased performance basically n number elements array number times array referenced render function believe fixed changing line nt able buildtest due however sure break tests believe makes sense given fact vue respect nonarray objects", "d": "8/2017"}, {"body": "good idea honestly sure consequences fenduru reopened rename topic better reflect issue could edit op comment linking got heart issue thanks chime evan fenduru suggesting keep running getter array nt extensible could negative consequences thinking could interfere reactive objects within notextensible array accessing prop object would trigger object reactive getter accessing object whole eg passing child component reading keys object array objectkeys might go unnoticed skipping right deep enough topic say walk array could nt maybe find way called per render cycle watcher instead times array accessed render array ca nt change anyway spontaneous idea could totally rails first call add prop like watcher subsequent calls make sure array cache already watcher called empty cache javascript set would much better arrayisarray value amp amp deptargetarraycacheindexof value dependarray value deptargetarraycachepush value depjs export function poptarget deptargetarraycache null deptarget targetstackpop code walk arraycache time check presence would assume number array component much smaller length biggest array component situations performancewise would imporvement", "d": "8/2017"}, {"body": "according description needing properties reactive top level think real issue whether data object array observed shallowly instead whether called upon opinion works mean prevent properties added object original properties still required reactive since likely referenced templates instance even called specific array whose items referenced templates changes items inside array still need demonstrated view layer case invoked recursively makes lot sense line think really matters figuring way defined properties instance object shallow style", "d": "8/2017"}, {"body": "reading keys object array objectkeys might go unnoticed skipping dependarray right behavior would consistent behavior objects indexing keys reactive values index reactive everything still work walk array dependarray could nt maybe find way called per render cycle watcher instead ntimes array accessed n render thinking well performance hit applications right even ones want reactivity called many times per tick suspect could reduced per tick cases however case still advocating avoiding calling altogether used jacelynfish clarify mean reactive top level mean want reactivity system detect array reference changed array immutable time contents change array reference changes vue reactive arrays contents waste performance", "d": "8/2017"}, {"body": "fenduru array wo nt immutable calling", "d": "8/2017"}, {"body": "jacelynfish application guarantees array immutable regardless whether object technically mutated", "d": "8/2017"}, {"body": "linusborg thoughts would like file pull request however unable get working dev environment per", "d": "8/2017"}, {"body": "jacelynfish linusborg fenduru idea using objectpreventextensions disable array reactiveness ob added therefore changes happen elements watched array immutable issue right", "d": "8/2017"}, {"body": "think going way far tons possible typos accept handling one handle much future writing writing nothing prevents user property called make binding valid btw colon way add arguments directives", "d": "8/2017"}, {"body": "could handled rule eslint though", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "modifier available necessary components native elements since listen native events native element using modifier element nt make sense", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "wrote vue ssr runtime make sure behaves like vue would case codepen using unminified version vue render comment node placeholder elements currently displayed nt happen production minified version though codepen befixed simply using html renderer produces output different vue would depending environment issue fix renderer implementation vue", "d": "8/2017"}, {"body": "oops feel stupid", "d": "8/2017"}, {"body": "little bit explicit happening considering vifs supposed show hide stuff naturally errosrs forced play detective understand part behaviour intended select district restaurants list changes accordingly nt seer problem see", "d": "8/2017"}, {"body": "linusborg thank helping recorded video make issue clear issue open jsfiddle link see open another jsfiddle link se everything working fine changed location nothing else", "d": "8/2017"}, {"body": "ok think understand mean probably keying different elements following advice", "d": "8/2017"}, {"body": "ok solves issue thank team great work great framework", "d": "8/2017"}, {"body": "better sitation situation begin us improve error messages understand mistake part lead error mention optimally hear might consider helpful error message", "d": "8/2017"}, {"body": "hinted better error message api change section sorry unclear able get source file error name component causing issue thanks", "d": "8/2017"}, {"body": "issue caused message accidentally tried render component recursively error message tells name element error possibly retelated recursive component render used vueloader usually also get filename component causing issue generated component trace sure helpful especially since stil fully understood mistake made trigger error hard improve message mistake demonstration", "d": "8/2017"}, {"body": "issue importing component defining via components prop component allready imported globally via vueuse component beeing called recursively probably parent component instance know component instantiate error unclear overriding allready existing component generally speaking current error message generic covers multiple errors one intended cover", "d": "8/2017"}, {"body": "hm point really ask reproduction generally overwrite component problem instance probably parent component instance know component instantiate error show show use tag template vue nt know registered recursively call component missing property things explained error message errors catched", "d": "8/2017"}, {"body": "repro soon worries", "d": "8/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "8/2017"}, {"body": "expected behaviour using function function gets executed every time component tries renders basically function called well thus creating infinite loop please next time provide actual repro code also could followed information issue created", "d": "8/2017"}, {"body": "ok thanks wo nt always rendered data nt change", "d": "8/2017"}, {"body": "work", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow result exactly without vue", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum official chat stackoverflow", "d": "8/2017"}, {"body": "close found fix webpack config resolve alias vue vuedistvuejs", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "close found fix webpack config resolve alias vue vuedistvuejs", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "8/2017"}, {"body": "usage question encourage ask forum discord try use issue tracker bug reports feature requests question need key items", "d": "8/2017"}, {"body": "think demo worked expected", "d": "8/2017"}, {"body": "thanks response", "d": "8/2017"}, {"body": "likely issue ms edge nothing vue remove vue dependency get behavior edge", "d": "8/2017"}, {"body": "thanks confirm vueless fiddle works firefoxchrome edge", "d": "8/2017"}, {"body": "closing", "d": "8/2017"}, {"body": "awesome also seems like already filed bug edge nt find earlier little hard search cool beans", "d": "8/2017"}, {"body": "reference similar issue remains open angularjs tracker well", "d": "8/2017"}, {"body": "curiosity problem facing undefined accessing edit also asking equal undefined attrs actually useful", "d": "8/2017"}, {"body": "greegus case something like using babelplugintransformoptionalchaining", "d": "8/2017"}, {"body": "would judge expected behaviour debatable", "d": "8/2017"}, {"body": "ping greegus", "d": "8/2017"}, {"body": "ran definitely unexpected ever example writing todo app starts todos would strange make list begin instead add statements optional chaining app case similar niche cases user wants check exist still possible use case still covered part really convinces bug though set empty object prop passed component op points currently really checking exist would require strategies", "d": "8/2017"}, {"body": "chrisvfritz convinced bug", "d": "8/2017"}, {"body": "linusborg looks like one working bug currently may pr", "d": "8/2017"}, {"body": "sure", "d": "8/2017"}, {"body": "unfortunately rendered parent context gets access different", "d": "8/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "8/2017"}, {"body": "nt considerated bug", "d": "8/2017"}, {"body": "shared whole project asked help vuex two way binding furthermore vue repo vuex want report bug need send concise reproduction please ask help channels pointed come back turns bug thanks", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "gebilaoxiong", "d": "8/2017"}, {"body": "ok let add link example post dynamic components found internet admin panel manage posts tab create post tab create post component makes sure user nt lose data switch back manage posts tab excellent imagine add selector chose set tabs fly admin user panel approval panel might still end create post component user component component name data admin panel inactive create post tab likely completely irrelevant reuse component sure context changed maybe approval panel create post tab template never gets unloaded way actually get rid backgrounded component signal interface changed short dynamic list widgets switch list changes unloaded template cached widgets might either required anymore data might become irrelevant widgets switch wait change list old list new ones end old cached components unreachable reachable likely stale data switch cache dynamic might fix data part problem hooks nt help think maybe watcher inactive component would trying explain problem dynamic context", "d": "8/2017"}, {"body": "maybe approval panel create post tab keepalive template never gets unloaded way actually get rid backgrounded component signal interface changed problem meant used kind scenario looks like using without needing", "d": "8/2017"}, {"body": "well need much little example app link avoid user retype data different inner ui widget chosen happens actual set components data inside also dependent outside deeply nested components data issue also contained outer dynamic context makes cache whole lot likely irrelevant components thinking ways signal empty cache invalidate children reset without think problem component dynamic context inactive children taken datadriven loop end stale outer context changes works fine onetomany efficiently manytomany fine way reset inner outer changes might need invalidate signal components even usecase nt immediately clear common usage", "d": "8/2017"}, {"body": "still think nothing new add use case must clear allowing imperatively reset keepalive component cache really looks like bad usage goes declarative rendering last example reset using attribute component", "d": "8/2017"}, {"body": "create reused component declarative data eventually watchers wo nt stale data ever reused example use watchers detect context changed reset form unused components use dynamic include keepalive", "d": "8/2017"}, {"body": "rules omitting end tags rather casebycase straightforward since close another one encountered however etc terminated open tag element want strictly adhere spec hardcode possibilities imo worth users intentionally write speccompliant imo sloppy html since already closing tag warning place essentially enforcing vue templates slightly stricter subset html imo fine considering tradeoff", "d": "8/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "8/2017"}, {"body": "also think better vue relax restrictions keys supports object", "d": "8/2017"}, {"body": "works differently components native elements therefore guess making smarter trivial input event probably needs modified manually inner component outer component etc app wrapping third party component adding custom style thought work noticed adding also required think bit weird component declared nt thinking twice guess automatically added accepted due thus included non recognized props anymore however exist unless specifically declared perhaps could added manually specified prop", "d": "8/2017"}, {"body": "think bit weird component declared nt frandiox might misunderstood mean seeing value attrs", "d": "8/2017"}, {"body": "well child properly declared prop would expect see props attrs happening", "d": "8/2017"}, {"body": "linusborg think frandiox suggesting seen automatically registered prop child component due use parent nt noticed behavior personally", "d": "8/2017"}, {"body": "linusborg chrisvfritz passing attribute manually normal however think normally pass internally expanded need manually pass omit value included attrs included unless specified component used internally though declared prop agree included however declared nt included considering also adding", "d": "8/2017"}, {"body": "frandiox ah thanks example agree strange nt appear easily fixable assume registered prop adding instead works cases", "d": "8/2017"}, {"body": "made time afternoon fix reviews welcome", "d": "8/2017"}, {"body": "definitely something wantneed looks like increasing popularity hoc made necessity", "d": "8/2017"}, {"body": "workaround jsfiddle example fixed probably nt work ssr work forked op jsfiddle", "d": "8/2017"}, {"body": "thank", "d": "8/2017"}, {"body": "linusborg nice think would help coming real life hoc use cases solving using primitives", "d": "8/2017"}, {"body": "absolutely", "d": "8/2017"}, {"body": "mentioning issue edit mybad since using undocumented createelement api would worth documenting plugin developers", "d": "8/2017"}, {"body": "link wrong unless really wanted link issue yes technically api still missing api page", "d": "8/2017"}, {"body": "alexandrebonaventure issue vue days smile also documented", "d": "8/2017"}, {"body": "function documented argument render function available via open issue", "d": "8/2017"}, {"body": "linusborg basically function gets sent function right", "d": "8/2017"}, {"body": "exactly documented clearly also available outside render function via instance method", "d": "8/2017"}, {"body": "play example couple issues using complex scenario hence need official repo couple notes createrenderfn check attrspropslisteners functions evaluate would allow dynamically set props etc based existing props composability component second parameter entire createhoc method curried could easily chain multiple hoc creators together hoc added mixin try chain hocs together ie second hoc access parent props example", "d": "8/2017"}, {"body": "hey folks looking writing implementation let know think look publish soon also thinking writing recomposestyle package", "d": "8/2017"}, {"body": "recompose style package would great really could used something like withstate recently sat aug jack notifications githubcom wrote hey folks looking writing implementation let know think look publish soon also thinking writing recomposestyle package receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "jackmellis great take lead couple thoughts feedback gave previously think curried version great point default way hocs generally done nt good point problem mixins already idea mitigate nt one moment gut feeling mitigatable combination curried variants created using also thought naming nt like something like would meaningful make sense scenario embed nodes javascript render h return h div staticclass somestyling rendercomponentwith props", "d": "8/2017"}, {"body": "end opted componentfirst noncurried curried variant react ecosystem functionalfocused unlike vue acts like oop framework think best keep consistent rest vue still offer functional alternative added code deal rather whole hoc mixin manually merge hoc options together using optionsmergestrategies problem optionsmergestrategies expects vm last parameter merging instantiation vm quite happy since exactly put together less think people use directly general usage something like perhaps nt quite understand example", "d": "8/2017"}, {"body": "perhaps nt quite understand example think right track thoughts going similar direction thought last reply initial poc included people could add additional markup around rendered component would mean really hoc anymore would bring ui well", "d": "8/2017"}, {"body": "yes think attempting render additional content gone outside hoc territory might well create sfc handle", "d": "8/2017"}, {"body": "published vuehoc npm also working vuecompose quick documentationsessionaway ready well although similar recompose vue handles lot clever stuff like caching computations encourages use actually nt need quite complex functionalstyle syntax", "d": "8/2017"}, {"body": "posva still looking solution time chime would really appreciate hopefully someone else might ideas least situation updated example based last fiddle added grandchildren references injected directly references computed property based injected goal mixin properties component tree let inherited specific way contrived example let say building library form components nested want mixin state form components also want state propagate sub tree example say property requires subtree become want able get reactive update changes", "d": "8/2017"}, {"body": "jasonsanjose problem injected reactive whole new object every time setting root really think twisting feature much looks like need way sharing state components injectprovide meant", "d": "8/2017"}, {"body": "posva thanks feedback found creative solution involves watchers injected properties bit indirection pretty easy follow seems work hopefully still playing within rules least going trip future behavior changes", "d": "8/2017"}, {"body": "better example cascading breadcrumbs", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "working case says cant find app ist another solution", "d": "8/2017"}, {"body": "need mount vue div", "d": "8/2017"}, {"body": "know already import vuejs like everything working working use npm version", "d": "8/2017"}, {"body": "working component library utilizes provide inject certain components behavelook slightly differently context another component library since components used engineers development warnings injection found keeps showing environment would love feature implemented add mentioned like see attribute indicate whether injection required optional", "d": "8/2017"}, {"body": "vue version put computed property helper function get warn could nt find vuex state think warn may consider condition codes like js storejs import vue vue import vuex vuex vueuse vuex const state isloading false const mutations updateloadingstatus state payload stateisloading payloadisloading export default new vuexstore state mutations js appvue import loading vux import mapstate vuex export default name app components loading computed mapstate isloading state gt stateisloading", "d": "8/2017"}, {"body": "plortinus happens trying change value mapstate create getters probably make things work binding handle update committing mutations", "d": "8/2017"}, {"body": "posva thanks loti tried use modifier handle problemit works wondering solution good practice notthe purpose codes show loading toast switch one page another page spa js import loading vux import mapstate vuex export default name app components loading computed mapstate isloading state gt stateisloading", "d": "8/2017"}, {"body": "whywhen would component ever want change value isloading component hardly know process nt see need sync vmodel anything like", "d": "8/2017"}, {"body": "update value beforeafter action js routerbeforeeach function next storecommit updateloadingstatus isloading true next routeraftereach function storecommit updateloadingstatus isloading false", "d": "8/2017"}, {"body": "yeah sure value go parent component compoent loading component value changed component situation would need maybe missunderstanding props work least combination computed properties", "d": "8/2017"}, {"body": "closing dup", "d": "8/2017"}, {"body": "agree laugharn prefetch resources controllable case would like avoid big scripts like pdfjs pdfjs worker downloaded early", "d": "8/2017"}, {"body": "html code like id b type myproducttype value myproductid von click greet vue js code like data myproduct id type text", "d": "8/2017"}, {"body": "android problem handle composition events", "d": "8/2017"}, {"body": "vueconfigerrorhandler catching errors inside methods run render button throws error call method vueconfigerrorhandler wo nt catch neither windowsonerror", "d": "8/2017"}, {"body": "met problem seems solution issue found", "d": "8/2017"}, {"body": "vvpvvp encountered seems like problem build tools try updating vueloader amp vuetemplatecompiler", "d": "8/2017"}, {"body": "discovered work around withdrawing fr", "d": "8/2017"}, {"body": "iceuncle", "d": "8/2017"}, {"body": "vueissuebot", "d": "8/2017"}, {"body": "created\u91cc\u9762\u6dfb\u52a0 windowfunctionnamethisfunctionname", "d": "8/2017"}, {"body": "interesting change files inconsistency applications harder change craft see change lexers globally even could find would likely break craft plugins expect twig default think argument could made applications may reasons change lexers think allowing components change delimiters would make sense however agree argument changed globally vue application reason imho best way allow developer choose change even component file", "d": "8/2017"}, {"body": "hi problem wrote use barcode reader input filled fast char skipped directive helped ugly work case think onchangeinput event bind value cycle problem input fast lt browser opera customers use", "d": "8/2017"}, {"body": "maybe help", "d": "8/2017"}, {"body": "using simply replace amp directives single vue rest still able reproduce input fast issue even using tool like keepass autotype fields", "d": "8/2017"}, {"body": "problem us opera said customers use browser vmodel syntactic sugar vmodellazy try found exact problem", "d": "8/2017"}, {"body": "checked opera works without problems", "d": "8/2017"}, {"body": "\u8fd9\u6837\u7684\u65b9\u5f0f\u5bfc\u5165\u7ec4\u4ef6", "d": "8/2017"}, {"body": "sethdorris ever get figured using webpack vue seeing issue click listener added anything vbinds templating seems work removing webpack loading everything oldschool style seems fix problem", "d": "8/2017"}, {"body": "issue change events clicktab input field change event triggered", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "\u65b0\u7248\u5fae\u4fe1\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2abug\u4e86 \u5728 zgcodes notifications githubcom receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "serverrendered attribute let vue know needs hydrate markup instead throwing away render scratch remove vue simply fresh clientside render causes fouc real cause short answer ca nt arbitrarily codesplit using ssr reason need ensure async components resolved starting render otherwise server rendered markup render empty placeholders async components client also need resolve async components first starting hydration otherwise hydrating markup async components definitions available yet leads mismatch currently support routebased code splitting vuerouter async route components autoresolved route view rendered routeronready initial render detailed ssr guide along release explain everything better", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "quite interestingly specify key codes works sure mac chrome nt fire event one problem solution triggers event release cmd key enter", "d": "8/2017"}, {"body": "tried dynamic emits idiomatically ok mock events meant something else", "d": "8/2017"}, {"body": "get hint definitely alibaba hahah", "d": "8/2017"}, {"body": "denghongcai forgot last comment push changes probably next weekend currently busy also small improvements bundle size reduction working buffersstreams java api working nashorn", "d": "8/2017"}, {"body": "think exact issue seems different try example whenever accessing specifically get method used onblur event clears field typing dummy field updates another data makes typed value appear commenting onblur event use problem occur seems related cached value computed function bit late tried forceupdate nexttick doesnt change behavior let know create new issue instead", "d": "8/2017"}, {"body": "oops forgot example works see else could wrong", "d": "8/2017"}, {"body": "ok found problem think problem happens thisvalue declared ie declaring fixes issue probably another unreactive value issue worth noting using methods ie instead computed works guess bestpractice would declare object keys", "d": "8/2017"}, {"body": "confirm form data keys initialized", "d": "8/2017"}, {"body": "still work", "d": "8/2017"}, {"body": "vue native", "d": "8/2017"}, {"body": "locking prevent spam current solutions weex near future nativescript", "d": "8/2017"}, {"body": "hi ended issue also vue comments inside div css selector work comments inline read evan comment find workaround sure change since issue reported regarding subject thank adrian ps love vue sounds funny", "d": "8/2017"}, {"body": "works props data binding way pass props like customcomp definition vue amp work results directive rendered attributes directives", "d": "8/2017"}, {"body": "emit update foo newvalue \u4e0d\u660e\u767d\u600e\u4e48\u7528\u8fd9\u884c\u4ee3\u7801 \u5728\u54ea\u91cc\u8c03\u7528 \u6709\u6ca1\u6709\u5b8c\u6574\u7684\u4f8b\u5b50\u770b\u770b", "d": "8/2017"}, {"body": "binsinger \u5c31\u662f\u5728\u7ec4\u4ef6\u91cc\u9700\u8981\u66f4\u65b0", "d": "8/2017"}, {"body": "rayrutjes code coverage working happen encounter issues describe", "d": "8/2017"}, {"body": "cleaned thread unrelated comments please use forumvuejsorg chatvuejsorg questions problems", "d": "8/2017"}, {"body": "doesnt feel right composition logic must chained extended component residing inside inherited maybe combination composition extendmixin could good solution exploring idea parent baseform standard header specific userform usage would expect possible would either method specific forms create using baseform way would see use also baseform option depending desired result way use slots direct access submit method specific form could look like import baseformfrom baseformvue export default extends baseform components baseform additional methods data etc overriden baseform expected method expected make sense sure since got state probably work different extendmixin util gets propsdata using gettersetter methods specified ref ie baseform creates complete mapping example submit declared userform submit return refbaseformsubmit would automatically created userform may add event broadcasting global state common practice framework correct", "d": "8/2017"}, {"body": "like idea using baseform slots directly userform perhaps use directly overriden template natural way baseform userform superuserform essentially reusing defined slots extended class allows template expand let say want enclose form like decorator case yes composition necessary could like userform would agree userform concept bit breaking concept components userform concept seems logical really extends existing component structure", "d": "8/2017"}, {"body": "something worked allows easily override existing slots note work files allow define template way export default function extendtemplateslots template slots import baseform baseform import extendtemplateslots helpersextendtemplateslots export default extends baseform template extendtemplateslots formtemplate default actions props title default user form", "d": "8/2017"}, {"body": "looked like functional component one work well almost would need convert string html vnodes dont know import baseform baseform const userform extends baseform custom option override existing slots slots default actions props title default user form could generic component export default render createelement return createelement userform scopedslots create vnodes userformslots strings header props gt slotsheader slotsheader null actions props gt slotsactions slotsactions userformslotsactions slotsdefault slotsdefault userformslotsdefault props componentprops edit oops component userform still needed finally export functional component configure slots reason able add methods data baseform needed like example functional component would enough", "d": "8/2017"}, {"body": "think would needed trouble using", "d": "8/2017"}, {"body": "continue hope realized issue closed therefore probably nobody notice write want discuss something forumvuejsorg probably better place", "d": "8/2017"}, {"body": "oh right", "d": "8/2017"}, {"body": "vue one handle situation book loaded async initially value", "d": "8/2017"}, {"body": "\u8fd9\u4e2a\u62a5\u9519\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u670d\u52a1\u5668\u6e32\u67d3\u51fa\u7684 html \u548c\u5ba2\u6237\u7aef vue \u751f\u6210\u7684 dom vue warning \u6d88\u606f\u4e2d\u63d0\u5230\u7684\u6d4f\u89c8\u5668\u81ea\u52a8\u4fee\u6b63\u4e0d\u89c4\u8303 dom dom \u7684 directive directive virtualdom directive vshow directive", "d": "8/2017"}, {"body": "thread saved life", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "saves almost memory big nested array", "d": "8/2017"}, {"body": "fridus really like way nasty mustache tags needed thanks", "d": "8/2017"}, {"body": "trying file pr vue get build recommendation move forward", "d": "8/2017"}, {"body": "uncaught promise typeerror read property length undefined dont know error please help", "d": "8/2017"}, {"body": "define member data props name handler broken example clicking foo button causes error message vue foo export default data return edit null methods edit something", "d": "8/2017"}, {"body": "\u6211\u7684\u7b2c\u4e09\u7ea7\u8def\u7531\u7ec4\u4ef6", "d": "8/2017"}, {"body": "update open anything done help move issue", "d": "8/2017"}, {"body": "akryum since teaser back february seemed dead water blakenewman see pinged months ago information issue sorry getting annoying really like know make happen", "d": "8/2017"}, {"body": "scottbedard working hidden gotchas however could documented unusable features work done quite ago unfortuently nt map current state rendering system work need done vuejscollaborators opinion feature overall development effort additional cost core worth feature", "d": "8/2017"}, {"body": "think nice feature since default way write components using templates imho decoupling rendering functions components used templates compiler would great", "d": "8/2017"}, {"body": "problem scope using templates functionally limiting much using jsxrender functions think point building functional components constraints design patterns nt fit template model feature requires small amount extra runtime never performance pure render functions enabling feature assume better performance comparative pure render functions true stance feature moment empower templates used functionality gives true reward", "d": "8/2017"}, {"body": "also would nice scoped style support functional components may unrelated", "d": "8/2017"}, {"body": "unrelated believe working work unless regression", "d": "8/2017"}, {"body": "hey evan follow issue find lots pieces like generated code thousands project add quite kbs compression take care quite easily never less nice generated output could simply remove compiletime see add option template compiler give pull request succeed thinking something like", "d": "8/2017"}, {"body": "also find situations reactive handy without must resort complex solution eg emitvuex get children state anyway think getting children state parent natural straightforward without reactive feature actually useless", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "iceuncle", "d": "8/2017"}, {"body": "iceuncle \u80fd\u5426\u5e2e\u5fd9\u770b\u770b\u7684\u5440\u8c22\u8c22\u4e86", "d": "8/2017"}, {"body": "\u54ea\u4f4d\u54e5\u4eec\u6709\u9047\u5230\u8fc7\u5e76\u4e14\u89e3\u51b3\u7684\u5e2e\u5fd9\u770b\u770b\u8c22\u8c22", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "vue\u6709\u5185\u7f6eeventbus", "d": "8/2017"}, {"body": "created\u91cc\u9762\u6dfb\u52a0 windowfunctionnamethisfunctionname", "d": "8/2017"}, {"body": "custom modifiers come angular background started vue saw thread feel would really help something like angular parsers formatters vue could something like vmodeldateformat result something like mmddyyyy would really cool edit looks like reiterated said", "d": "8/2017"}, {"body": "happening using edge vue", "d": "8/2017"}, {"body": "start range vfor instead", "d": "8/2017"}, {"body": "disagree common case think built way without need custom range function", "d": "8/2017"}, {"body": "guys gitter join receive support getting issue assigned worked first timer oss", "d": "8/2017"}, {"body": "dmcfaddengalway discourage starting feature feature request pretty old forum discord server gitter", "d": "8/2017"}, {"body": "even answered evan closed still want emmet basic syntax quite helpful", "d": "8/2017"}, {"body": "wondering vue add data left selector able select generated elements", "d": "8/2017"}, {"body": "fingerpich js export default name isname", "d": "8/2017"}, {"body": "emadadly want different name id vue file used component recursively set id global name", "d": "8/2017"}, {"body": "fingerpich still working concepts think following set component name globally file create vue instance ie abovebefore vue instance creation add something like import mycomponent componentsmycomponentvue vuecomponent mycomponent mycomponent new vue components member app another component makes available template used", "d": "8/2017"}, {"body": "btw found issue getting error well seems name member singlefile vue component ignored stopped including names started naming member referenced globally eg valid approach used global registrations seems appropriate register used locally however sure performance impact registering locally repeatedly component nested within many components", "d": "8/2017"}, {"body": "want loop itemrealname itemdepartmentname want loop twice trick though produce many tbody elements seems display correctly valuevaluename valuevaluetype", "d": "8/2017"}, {"body": "raychenfj works", "d": "8/2017"}, {"body": "testing attribute seems vue nt render dom binding datacomputed values eg underlying data got work cc posva", "d": "8/2017"}, {"body": "use slot vmodel", "d": "8/2017"}, {"body": "rpkilby one way copy object remove observablereactivity really useful since want keep array states implement state history object vuex edit solution specific case object needed copy property values moment time care references dynamic updates etc", "d": "8/2017"}, {"body": "right vfor map vfor acts received empty array regardless outcome extended discussion whetherhow support maps sets would save lot people lot debugging time vue simply warned maps sets yet supported see", "d": "8/2017"}, {"body": "jiiiiiin style backgroundimage url slideimg", "d": "8/2017"}, {"body": "answer nt seem work anymore new way accomplishing", "d": "8/2017"}, {"body": "desktop apps electron works great native mobile apps im still sure use weex nativescript ionic quasar vuecordova edit ok weex looks promising managed install download adb android studio npm install g weextoolkit weex create myapp cd myapp weex platform add android npm install weex run android", "d": "8/2017"}, {"body": "weex framework building native mobile crossplatform uis moreover evan help weex already supported vuejs one frontend frameworks words use vuejs syntax develop native apps based weex steffanhalv good try great vuejs features still available weex platform except web platformbased features like weex project moved apache software foundation asf latest resources weex official website repo mirror apache weex mailing list", "d": "8/2017"}, {"body": "frankfang manage fix already exact problem", "d": "8/2017"}, {"body": "mrphilipt use", "d": "8/2017"}, {"body": "frankfang okay able resolve issue using vmodel selector instead vref instance putting something data turns nt really need vref", "d": "8/2017"}, {"body": "hit problem really must show records time simplest solution use divs instead table render time case reduced seconds aprox rows columns cells like said usually best option question whether really painting cells cases showing data justified edge cases need handled care", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "yup basic principle set property later declare initialized vue data note nonreactive data private begin expose vue keep data privately current file module working rely public getters proxy specific private data template requires properties albeit might mean boilerplate question got answer data nonreactive template render reactively data anyway template references data something must seriously consider beforehand especially passing props components since nt reactive anyway one approach using far sort like singletonlocal services lazily instatiated stuff resort property lazily instantiatelookup something store nested private reference vue instance context yet found singletonsglobals simply return value directly via global service locator direferencecontainer something example note plain js easily adopted vanilla js", "d": "8/2017"}, {"body": "know way late issue hour pulling hear making babel understand spread operator thinking nt want duplicate object arrived following conclusion become also put trigger trigger somewhere html way pollute scope one variable never set thought check data songduration makes answer better proud guys p ps try add trigger prop data vue still flip moreover looks like loophole works oo", "d": "8/2017"}, {"body": "reference", "d": "8/2017"}, {"body": "von touchstart ontouchstart", "d": "8/2017"}, {"body": "\u611f\u8c22\u5927\u795e\u89e3\u7b54", "d": "8/2017"}, {"body": "", "d": "8/2017"}, {"body": "tanrenjie", "d": "8/2017"}, {"body": "resetting data objects plain json kill prototypes could create instantiated class based objects rootnested object methods since prototypes methodsgetterssetters proxied vue still accessible via data nested data objects problem nt get computed caching unless manually import nested getters optionally namespaced flat vue structure order manually proxy custom haxevx compiletime macro haxevx nt vanilla vue provide objectoriented dot access rerout root vue instance anyway nested accessors vue typically would exist nested vue components vuex modules rather objectoriented nested accessors else set flattened objectpropertyname proxy access however think using non computed nested access object methods nt much problem case though long nt reset yr data plain json nt need caching", "d": "8/2017"}, {"body": "use bindings apply runtime", "d": "8/2017"}, {"body": "implementing tree data structure iterator converting arrays would result large unnecessary overhead", "d": "8/2017"}, {"body": "fixed component tag well", "d": "8/2017"}, {"body": "link gives error", "d": "8/2017"}, {"body": "yes ziyuang removed days ago encourage use webpack performance systemjs really high", "d": "8/2017"}, {"body": "thank solution would work component function", "d": "8/2017"}, {"body": "works components", "d": "8/2017"}, {"body": "bitten problem found real reason vue behaving way laziness operator indeed expression immediately return look whatever value result need called upon fiddle provided returning starts false never called meaning vue register dependency however called anytime property computed first used assignment return meaning laziness never cause us trouble", "d": "8/2017"}, {"body": "one caveats vue since runtime dependency getter access tracking determine dependencies computed property means boolean considerations must seperated first seperate variables stringing operator avoid caveat make codebase much longwinded since ca nt conveniently string conditions single line could easily use haxe macro optionally decompose single line conditional expressions multiple variabledeclared conditions targeting specific environments lazy evaluation needs avoided however issue occur ifelse block requiring preevaluate certain conditions required vue environment intially thought ideal vue would seperate js compilermacropreprocessor engine would analyse computed function expressions precompute ast tree detect expressions cident accesses already precompute bindings already vuevue componentsmodulesstores also avoids overhead preprocessing dependencies getters runtime however easier said done particularly tricky cases indirect function calls fromto different computed getterssetters methods even local dynamic variables may retrieve multiple dependencies across multiple functions hard even haxe macro accompanying ast since nt retrieve dependencies via expressions infer logically potential runtime assignments expressions thus end often cost bit boilerplate often resort manually listing dependencies manually codebases neede vue reflect alternatively always set flag false nt care caching", "d": "8/2017"}, {"body": "case javascript aheadoftime dependency tracking doomed fail ca nt know advance property accessed property names strings result arbitrary computations including network calls", "d": "8/2017"}, {"title": "mean mistake", "body": "require throw error like solution", "num": "4156", "d": "8/2017"}, {"title": "collection parse string", "body": "like suggest collection parse defined function string latter solves probably common use case apps boilerplate function every collection wish could", "num": "4155", "d": "8/2017"}, {"title": "nt propagate internal unset option user code", "body": "prints opinion unset option implementation detail passed handler would possible clear triggering change event model set method maybe could fix code overriding set method clearing think actually bug thanks marco", "num": "4154", "d": "8/2017"}, {"title": "hope generate api pages githubio", "body": "easy browser api online official website ca nt access company thanks", "num": "4153", "d": "8/2017"}, {"title": "modelomit attr returns pojo", "body": "think working solution entirely sure example proxied underscore method understand default behavior seems like context backbone model though somehow return model omitted fields default overriding method chain possibly supering calling another util method intended effect instantiating new model sure ideal solution would whether entity context accounted default", "num": "4152", "d": "8/2017"}, {"title": "jst defined", "body": "use backbonejs templates without rails frameworks backend langs create indexhtml", "num": "4151", "d": "8/2017"}, {"body": "maybe nt jquery", "d": "8/2017"}, {"body": "hmm maybe change function prototype something like cheaper detecting string whatever everyone parse", "d": "8/2017"}, {"body": "cheaper detecting string whatever everyone parse true could said properties support function string used convenience would nice parse well", "d": "8/2017"}, {"body": "knowledge take function underscore related functions take string definitely useful interact known data structure manner handled cases generating predicate primarily string function allows dynamically set opposite primarily method taking multiple arguments see might similar pattern many usecases nt matter simply adding code seems certainly measure guessing part able override string increase complexity lower performance suitable alternative addressed fairly simplistic case parse nt think convenience justifies cost", "d": "8/2017"}, {"body": "think got idattribute confused function idk bad anyway really admire way backbone avoided temptation become everything framework proposal stays true would hope see community thinks dismissing based unproven perf concerns able override string would add complexity consumers aligns nicely existing methods seems logical assuming use case common even given docs look nice vs whether adds code complexity andor lowers performance remains seen proposed code change doubts nt much use methods called much frequently collection parse designphilosophical decision rather implementation imo", "d": "8/2017"}, {"body": "download use locally", "d": "8/2017"}, {"body": "also backbone docs hosted github pages", "d": "8/2017"}, {"body": "easy learn", "d": "8/2017"}, {"body": "try use", "d": "8/2017"}, {"body": "intended return plain object copy attributes desired keys omitted want mutate model removing key firing related events looking", "d": "8/2017"}, {"body": "tweaked solution lennerd little bit", "d": "8/2017"}, {"title": "bug destroying components use inelement", "body": "discovered context test renders component uses hood component nested toggles later test component subsequently destroyed error thrown test fails", "num": "15619", "d": "8/2017"}, {"title": "bug declaring component attribute twice creates mutablecell", "body": "hi updated found weird bug mistake rendering component passing attr twice like know makes sense working correctly nt work suddenly longer instead mutable cell object created twiddle reproduction check console also saying supported maybe throw error difficult debug way", "num": "15618", "d": "8/2017"}, {"title": "api docs embertestwait incomplete markdown block", "body": "assuming api documentation built source everything appears fine reason api website rendering example markdown block wait helper correctly", "num": "15617", "d": "8/2017"}, {"title": "eventdispatcher never instantiated fastboot mode please report ember bug", "body": "ember version app runs server side hitting service injection errors kind digging krisselden found error thrown swallowed earlier engineinstance method error reporting ember bug error told digging found explanation swallowing real error error happens engine engine method correctly returns rejected promise error promise ignored app continues running nothing happened", "num": "15615", "d": "8/2017"}, {"title": "queryparams array attribute becomes string attribute changes model resolved", "body": "see twiddle please two queryparams categories array searchquery string model resolves current time second timeout open console please see categories changes first add least one category hitting add category button see console still array enter text input field searchquerycategories becomes string point becomes even worse every modification escapes escape symbols", "num": "15611", "d": "8/2017"}, {"title": "add assertion classnames property components array string", "body": "found several cases already developers unknowingly used something like instead resulting error message showed would great add assertion component constructor asserts actually array", "num": "15605", "d": "8/2017"}, {"title": "input helper value working ie", "body": "debug ember ember data jquery debug template button shows annoying submit query instead sign", "num": "15598", "d": "8/2017"}, {"title": "promise proxy chains break passed component", "body": "consider controller computed properties return chain object promise proxies javascript appcontrollersapplicationjs import ember ember import rsvp rsvp const objectpromiseproxy emberobjectproxyextend emberpromiseproxymixin export default embercontrollerextend organization embercomputed function return objectpromiseproxycreate promise rsvpresolve name acme co user embercomputed function return objectpromiseproxycreate promise rsvpresolve firstname jimbob organization thisget organization expect available controller template hbs apptemplatesapplicationhbs hi userfirstname work userorganizationname however pass component component template blank reverting restores desired behavior simulates realworld situation using findby extract element async hasmany collection wrapping objectpromiseproxy make templatefriendly walking async belongsto relationship found element template component", "num": "15596", "d": "8/2017"}, {"title": "make possible differentiate helpers properties", "body": "template code write property named icon would like fine problem someone comes along defines helper either locally dependent extension called icon well code suddenly means something different use icon helper instead icon property suggest add way specifying whether reference property helper add possibility put extensions namespaces helpers extensions global scope name clash waiting happen", "num": "15595", "d": "8/2017"}, {"title": "bug using inside work embermocha", "body": "could simulate problem using created ember application simulate problem mycomponentjs mycomponenttestjs javascript import expect chai import describe mocha import setupcomponenttest embermocha import hbs htmlbarsinlineprecompile import emberobject set emberobject describe integration component component function setupcomponenttest mycomponent integration true working function const modelfake emberobjectcreate fullname foo bar working function const modelfake emberobjectcreate fullname foo bar", "num": "15590", "d": "8/2017"}, {"title": "permission denied set get methods ie microsoft edge", "body": "dom element set property remove link dom structure try get set property javascript thisget domelement permission denied error happens get method var desc value null amp amp typeof value object amp amp valueisdescriptor value undefined thisset domelement permission denied error happens set method var possibledesc obj keyname possibledesc null amp amp typeof possibledesc object amp amp possibledescisdescriptor", "num": "15589", "d": "8/2017"}, {"title": "documentation rfc modules", "body": "rfc conversion tables ember ember data ember api docs guides ember cli ember x normalize imports x address minor documentation issues like typos formatting x update documentation code blocks update documentation crosslinking eg x update blueprints tests update metadocumentation etc", "num": "15587", "d": "8/2017"}, {"title": "ember default tostring mixins nt return mixin constructor source code", "body": "track comment saves workaround ember inspector", "num": "15586", "d": "8/2017"}, {"title": "ember component variable set calling init", "body": "hi everyone upgrading app encountered following problem described twiddle expected behaviour function called variable set computed property working seems regression thanks work ember truly great framework best andreas", "num": "15584", "d": "8/2017"}, {"title": "fastboot read property removeattribute undefined", "body": "trying get addon work fastboot works handlebars myparent p pchild c child index cindex pchild pchild c child index cindex pchild myparent child components register parent component initialised parent waits rendered child building final array known children time whilst child initialising index property computed point known many children computed property children determines one considered active based current set parent index child aforementioned computed property also bound attribute happening first milliseconds rendering child considered active nt know many children parent finished rendering parent finished rendering children receive active index attribute compute whether one active fastboot mode initial phase rendering child active index effectively tells attribute binding child active leads following error guess ember trying remove attribute binding ca nt set example repo", "num": "15578", "d": "8/2017"}, {"title": "ember beta fails load beginend used initializer jquery included", "body": "looks like add run loop delayed initializer including jquery using instead application never loads sample repo basic diff expediency diff diff git aappinitializerstestdelayjs bappinitializerstestdelayjs new file mode index devnull bappinitializerstestdelayjs import begin end emberrunloop export function initialize begin settimeout function end export default initialize diff git aemberclibuildjs bemberclibuildjs index aemberclibuildjs bemberclibuildjs const emberapp require emberclilibbroccoliemberapp moduleexports function defaults let app new emberapp defaults vendorfiles jqueryjs null add options diff git apackagejson bpackagejson index apackagejson bpackagejson emberdata emberexportapplicationglobal emberloadinitializers embernativedomeventdispatcher emberresolver embersource emberwelcomepage", "num": "15574", "d": "8/2017"}, {"title": "submit documentation errors", "body": "reading ember documentation page found errors page first trying find list acceptable dom events supported action helper page includes link event names link gives strange error second documentation bug found pencil button top page reads view github links dead page sorry right channel submitting documention errors might nice documentation gave instructions", "num": "15571", "d": "8/2017"}, {"title": "build error ember js occurs adding route ajax call", "body": "occurs shut restart server creating new route ajax call calls another ember app tried deleting npm package npm install removing tmp folder details given stackoverflow link", "num": "15570", "d": "8/2017"}, {"title": "ember integration tests rejected promise", "body": "using test success failure scenarios work resolving promises switching however results error unable replicate twiddle created demo repo instead relevant files mycomponentjs mycomponenttestjs unsure might related", "num": "15569", "d": "8/2017"}, {"title": "ember documentation typo bug documentation", "body": "emberrunstart used instead emberrunbegin runloop pseudocode example link", "num": "15568", "d": "8/2017"}, {"title": "route controller hooks ran order", "body": "version lt runs hooks following order twiddle version gt runs hooks following order twiddle previous order makes sense since could transition somewhere else therefore need initialize controller", "num": "15565", "d": "8/2017"}, {"title": "possible simulate drag drop emberjs like selenium", "body": "simulate click drag element ember tests thread open need help", "num": "15562", "d": "8/2017"}, {"body": "thank reporting fixed release hours ago due nature releases unlikely updated since unlikely gets another patch release", "d": "8/2017"}, {"body": "seems like issue introduced commit moved list list difference registrations resolved point singletons eagerly looked instantiated possible fix would check running serverside environment nt add singletons list", "d": "8/2017"}, {"body": "dug around handled find assertion exactly suggesting see unfortunately assertion never fires due constructed initialize eagerly base class always array means extend create component line executed means works found several cases already developers unknowingly used something like classnames foobar instead classnames foobar resulting error message showed typeerror object foobar method foreach love see full stack trace quick reproduction twiddle emit error string", "d": "8/2017"}, {"body": "love see full stack trace quick reproduction twiddle emit error classnames string funny enough able reproduce either dev builds everything seems work fine seen several bug reports sentry indicating working properly everybody production", "d": "8/2017"}, {"body": "use instead", "d": "8/2017"}, {"body": "typically avoid input helpers use html input since bind attributes directly template created embertwiddlecom example using code provided unfortunately embertwiddlecom nt edge ie instead used create app put applicationhbs file confirm input display expected source code example twiddle work edgeie", "d": "8/2017"}, {"body": "ugh example nt actually demonstrate issue back drawing board", "d": "8/2017"}, {"body": "hi feature requests go move issue thank", "d": "8/2017"}, {"body": "function needs available within context needed work", "d": "8/2017"}, {"body": "restriction mocha tests work worked around reasonable way", "d": "8/2017"}, {"body": "closing according comment thanks everyone", "d": "8/2017"}, {"body": "agree analyzed operation find way solve problem mocha unfortunately works another point falsepositive rule eslint https githubcomemberclieslintpluginemberblobmasterdocsrulesuseembergetandsetmd thanks answering fast", "d": "8/2017"}, {"body": "imho eslint rule stupid used", "d": "8/2017"}, {"body": "hahaha know say opinions", "d": "8/2017"}, {"body": "even agree rule enabled enabled default recommendation stupid rule enabled default hahaha stuckouttonguewinkingeye also problems needed set response api using", "d": "8/2017"}, {"body": "rule enabled enabled default recommendation eslintpluginember said say unopinionated provide rules recommended rulesets also problems emberclimirage needed set response api using serverget myurl entirely unrelated function ember replacing nt work", "d": "8/2017"}, {"body": "stefanpenner use instanceof descriptor resurrect move back meta", "d": "8/2017"}, {"body": "move everything krisselden want", "d": "8/2017"}, {"body": "going experimentally try format yuidocs see howwhere breaks things downstream emberjsonapidocs emberapidocs", "d": "8/2017"}, {"body": "cibernox love take one newbie contributor looks reasonably straightforward thanks recent work inspector", "d": "8/2017"}, {"body": "please guest need help ping anytime slack", "d": "8/2017"}, {"body": "nt seem like bug actually properties pass component must set accessed within", "d": "8/2017"}, {"body": "also cp return value return setter cp values", "d": "8/2017"}, {"body": "rwjblue thanks reply guess sure purpose view attributes set fired understanding possible access attributes state guess wrong", "d": "8/2017"}, {"body": "deepflame say biggest difference run initialize data need runs first render rerender", "d": "8/2017"}, {"body": "locks yes thanks understand documentation however thought runs attributes consumed big deal currently anymore since could refactor code confusing behaviour seemed change", "d": "8/2017"}, {"body": "yeah slight changed deprecated moved nt make much sense believe optimization concerns setting component properties postinitializing something changing shape welcome series sorry hiccups", "d": "8/2017"}, {"body": "see thanks insights", "d": "8/2017"}, {"body": "find help fastboot channel embercommunityslackcom sample repo help troubleshooting sounds like could bug either appaddon implementation maybe emberfastboot codebases would need identify steps reproduce find bug lies emberfastboot vs appaddon code also curious use case sounds implementation specific another way compute index properties result error", "d": "8/2017"}, {"body": "use case select box child components aka options need registered parent component clarify component works fine nonfastboot mode", "d": "8/2017"}, {"body": "anyone thoughts one might changed could caused", "d": "8/2017"}, {"body": "work webark", "d": "8/2017"}, {"body": "locks yep", "d": "8/2017"}, {"body": "webark curious bug embernativedomeventdispatcher ember without jquery embernativedomeventdispatcher must maybe one needs rwjblue investigate", "d": "8/2017"}, {"body": "pixelhandler ya think could good dug little bit embernativedomeventdispatcher maybe little reason filed working maybe disconnect new version", "d": "8/2017"}, {"body": "pixelhandler rwjblue little digging looks like embernativedomeventdispatcher even getting loaded", "d": "8/2017"}, {"body": "case right channel thank much meantime see", "d": "8/2017"}, {"body": "flynsequeira nt seem bug report reached help embercommunityslackcom help chatroom", "d": "8/2017"}, {"body": "curious assertions run also seems error nt rendered component also usage nt recall seeing", "d": "8/2017"}, {"body": "tidle remove whitespace relevant test case yes point previous versions could test error rendered upgrading ca nt", "d": "8/2017"}, {"body": "fixed", "d": "8/2017"}, {"body": "see related issues main crux matter general never guarantee controllers would created specific order related route structure", "d": "8/2017"}, {"body": "change definitely valid bug fix right path forward quite sorry change caused issues app", "d": "8/2017"}, {"body": "rwjblue hope fixed using controller trigger tour triggered first time user enters route ca nt switch components route query params ideas get working without running", "d": "8/2017"}, {"body": "rwjblue hope fixed well thing nt actually think anything broken ember bug basically application code assumes ran route hook ran obviously thats sucky answer sorry nt think much internally fix", "d": "8/2017"}, {"body": "nt think alternative way solve use case using existing hook method think possible introducing flag check hook", "d": "8/2017"}, {"body": "kumkanillam using approach would mean add logic route adds significant overhead many routes use right using mixin controller tour", "d": "8/2017"}, {"body": "hello closing since guarantees order controllers created routes hooks called stated answer ideal sorry thank much", "d": "8/2017"}, {"body": "lot code involved plan support testrecorder point", "d": "8/2017"}, {"body": "hi devinaction issue tracker bugs ember framework seeking help reach ember slack group top asking stack overflow", "d": "8/2017"}, {"body": "working twiddle demonstrate issue component ember twiddle", "d": "8/2017"}, {"body": "work around seems way since supported via babel regenerator betting future seems legit hedge bet initializer like example rfc", "d": "8/2017"}, {"body": "closing happy reopen repro", "d": "8/2017"}, {"body": "rwjblue sorry vacation said nt able reproduce isolated application error appeared ember update hoping one core developers could give hints track reiterate problem reason ember installs mandatory getterssetters internal property eg sets property without using leads stack overflow judging ember code using nt think property mandatory setter cases ember install mandatory setter track reason happening", "d": "8/2017"}, {"body": "ca nt imagine case guidkey would watched hard anything without reproduction", "d": "8/2017"}, {"body": "alright made doublecheck code regard found part inadvertently subscribe part feature conditionally inherit userdefined parameter values widgets nt seem cause troubles glad caught sorry inconvenience", "d": "8/2017"}, {"body": "krisselden mainly documentation issue cc locks", "d": "8/2017"}, {"body": "deividkamui nt seem prepending template", "d": "8/2017"}, {"body": "ohcibi route use logger print console nt think error event firing twice nt seem bug close feel free reach embercommunityslackcom help channel questions example provided great discussing behavior", "d": "8/2017"}, {"body": "running issue latest ember workaround described dguettler nt seem work still experimenting trying reproduce twiddle case mixin followed later hook route nicely render loading animation transition seamless experience avoid ux lockup active state linkto switching route changing positional parameter modelid fails every time links route even different modelids gain active class confirmed removing mixin fixes problem looking workaround force ember recompute linkto active states even hack edit twiddle reproducing issue along workaround workaround found", "d": "8/2017"}, {"body": "need embertwiddlecom example verify bug ember vs mysterious reasons please provide reproduction using twiddle example repo without way reproduce issue need close", "d": "8/2017"}, {"body": "nt going good time reopening stubbing internal things want resolve routes test integration true still lighter weight full acceptance test app resolver default registrations place", "d": "8/2017"}, {"body": "lolmaus notice comment glimmer code mentioned think awareness future refactoring needed nt think bug emberjs repo though perhaps feature request glimmer said think reason number selected way throttle addon work within limitation", "d": "8/2017"}, {"body": "thanks bekzod work glimmervm submitted fix issue", "d": "8/2017"}, {"body": "someone confirm latest canary builds published minutes fox issue cherry pick update beta branch release new beta confirmed", "d": "8/2017"}, {"body": "confirmed canary fixes liquidfire test suite miguel reproduction", "d": "8/2017"}, {"body": "awesome thank confirming pulled fix branch published build also tagged started publishing using npm closing really appreciate everyone affected bug could test latest beta builds confirm things working properly one week final really like ensure nt release issue", "d": "8/2017"}, {"body": "laynegt simply add called reason might intermediate transition showing loading causing bug", "d": "8/2017"}, {"body": "laynegt given description hook executed router completely exits route executed model route changes expectation parent route deactivated transitioning child route instead deactivated leaving child route another route however sure bug would need confirmation cc machty laynegt know last version deactivate behavior worked expected forked twiddle using nt see console logging", "d": "8/2017"}, {"body": "serabe locks seems like regression would agree", "d": "8/2017"}, {"body": "pixelhandler yeah issue seems introduced", "d": "8/2017"}, {"body": "think need rfc improving user feedback assertion messages always appreciated", "d": "8/2017"}, {"body": "help provide get sourcemaps working quite pain css point correct scss file debugging", "d": "8/2017"}, {"body": "nt believe issue relates css sourcemaps", "d": "8/2017"}, {"body": "hmm sourcemaps broke upgrading take another look help detect problem nt look seeing issue assuming related thanks", "d": "8/2017"}, {"body": "makepanic agree behavior seems like bug thanks providing twiddle example however difference general form handling works ember component submit event behaves typical html form element wo ember would need input attr input attr attributes default html form submit behavior work assume submitted using element want submit behavior work embercomponent submit event handler instead using attributes think given difference implementation using ember framework need use action handler form eg something like nt think bug scenario developers need explicitly define ember component behave ember provides lot options including using default form methodaction attributes submit form fork embertwiddle shared added action component using id", "d": "8/2017"}, {"body": "kevinansfield believe unrelated regression canary confirm", "d": "8/2017"}, {"body": "cibernox progress", "d": "8/2017"}, {"body": "really time week since finished fixing inspector", "d": "8/2017"}, {"body": "worth recently upgraded ember ember property appears replaced", "d": "8/2017"}, {"body": "ember newb get error although dont know anything mean", "d": "8/2017"}, {"body": "ember helper iterates items uses key item represent dom iteration used rerendering whatnot default ember choose key automatically either using primitive value value using default scenario never see error see error instruct helper use specific key items iterated would like items array value property error thrown", "d": "8/2017"}, {"body": "said mentioned think error actually correct going close issue", "d": "8/2017"}, {"body": "thank rwjblue", "d": "8/2017"}, {"body": "closed seems like actual bug rationale behind need manually wrapping call", "d": "8/2017"}, {"body": "fixed", "d": "8/2017"}, {"body": "fyi anyone running problem looks like backburner fix included ember looks like shipping", "d": "8/2017"}, {"body": "documented still marked private fix declaration", "d": "8/2017"}, {"body": "mwpastore", "d": "8/2017"}, {"body": "lbarsukov danieldewit released new version ember data fixes issue", "d": "8/2017"}, {"body": "lllama tonyhschu works", "d": "8/2017"}, {"body": "got bit issue found via workaround force ember recompute linkto active states workaround mentioned ticket seem work", "d": "8/2017"}, {"body": "somewhat rabbithole able reproduce specific issue twiddle particular issue due followed hook route problem specifically changing route positional param modelid change found workaround thankfully works essentially replaces digging found number related tickets linking seem related solution found number twiddles jsbins across issues reproduce different variations issue seem related breaking things however hopefully helps identify issue experiencing production app latest ember issue us quite time previously working around using jquery fix classes spent time investigate occurring", "d": "8/2017"}, {"body": "way manually clear memory acceptance tests run also interested doubt fix backported better upgrade ember maybe workaround", "d": "8/2017"}, {"body": "kuzirashi could like run multiple group tests one one different filter reloads phantomjs fresh memory surprise faster keeping instance pahntomjs", "d": "8/2017"}, {"body": "going fixed considered deprecated", "d": "8/2017"}, {"body": "still plans underway tackling style attribute sanitization ember hard time finding much css sanitizers frontend even outside emberland definitely would happy one baked ember", "d": "8/2017"}, {"body": "help looks like yahoo secure handlebars library handles style property values", "d": "8/2017"}, {"body": "glad someone else posted recently backgroundimage style keeps getting slashes escaped tried marking htmlsafe avail docs nt really explain much styles often needs stuff within view even though one would prefer separate viz biz", "d": "8/2017"}, {"body": "would add emberclibuildjs var app new emberapp defaults emberclibabel includepolyfill true see documentation", "d": "8/2017"}, {"body": "allthesignals mistaken effect corejs polyfill polyfills natives specific ember implementations since extend native connection clarify original comment added since nt really notion index indexbased element access", "d": "8/2017"}, {"body": "published pr", "d": "8/2017"}, {"body": "buschtoens thanks clarification right also agree ember array vs enum guess convert back genuine array use maybe interpreting wrong", "d": "8/2017"}, {"body": "either use trick described rfc disadvantage using traverse whole array first order construct native array pretty inefficient", "d": "8/2017"}, {"body": "ccarterc like eg localforagesetitem pita emberobject faced today put custom escaper", "d": "8/2017"}, {"body": "ran issue ember running deleting unnecessary route entry resolved issue", "d": "8/2017"}, {"body": "dwickern lifesaver issue plaguing long time real fix issue thanks", "d": "8/2017"}, {"body": "dwickern actually ran bug implementation used keyed object params coming undefined order resulting transition failing due incorrect positional params changed fixed issue", "d": "8/2017"}, {"body": "kjhangiani good catch maybe route one dynamic segment like works code probably simplified", "d": "8/2017"}, {"body": "ember version autocomplete ember input working giving form tag giving name input urgent suggestion please", "d": "8/2017"}, {"body": "way make work override emberrunlater emberrunnext settimeout counterpart running test reason functions run cause tests time", "d": "8/2017"}, {"body": "mixonic micky second senior dev company wasted significant time dealing issues due unintuitive api design please consider improving ember", "d": "8/2017"}, {"body": "angular similiar problem well", "d": "8/2017"}, {"body": "think another way get event use action helper parameter bare javascript handler handlebars click nameeventstoppropagation eventpreventdefault normally handled action helper could named argument add event arguments action set seems like overkill use make another component time would like javascript event", "d": "8/2017"}, {"body": "one things ember devs looking going forward imo react vue work night day terms simplicity power sort things achieve computed properties frameworks impossible ember worth effort enough featureless releases getting past years something interesting please", "d": "8/2017"}, {"body": "like problem ca nt nested declaring computed nt thing time", "d": "8/2017"}, {"body": "pr glimmer object model believe blocked getting benchmarks sure nt cause regression likely feature would land current ember object model instead es classes rfc starts slow migration away coupled ember object model glimmer object model possibly replace gone bit thanks feedback rhyek", "d": "8/2017"}, {"title": "newly appended html scripts executed ajax handler func completed", "body": "problem jquery previous versions working ok made jsbin show problem basically script like jquery script inside newly added html execute first given code get log expecting jquery script inside added html executes ajax handler function completes log get", "num": "3773", "d": "8/2017"}, {"title": "trigger event jquery collection listener gets dom element jquery collection", "body": "question maybe bug demo page window foo function e elm consolelog elm elm instanceof jquery window trigger foo printed result instance jquery dom element case ca nt jquery collection passed argument tested version", "num": "3772", "d": "8/2017"}, {"title": "css function returning object", "body": "description trying read font size element angularjs application css function returning back element passed set font size using css function without issue trying read property working properly element variable object single result seem unable read properly link test case code elementcss fontsize elementaddclass test console output firefox function jquery element object flotngisolatescope context flotngisolatescope length context length proto object jquery constructor function jquery length element object flotngisolatescope context flotngisolatescope length context length proto object jquery constructor function jquery length elementfirst object flotngisolatescope length prevobject context flotngisolatescope context length prevobject object flotngisolatescopetest context flotngisolatescopetest length proto object jquery constructor function jquery length elementfirst css fontsize object flotngisolatescope length prevobject context flotngisolatescope context length prevobject object flotngisolatescopetest context flotngisolatescopetest length proto object jquery constructor function jquery length element css fontsize object flotngisolatescope context flotngisolatescope length context length proto object jquery constructor function jquery length", "num": "3771", "d": "8/2017"}, {"title": "overflowedelement width return incorrect value", "body": "want get overflowed element width return incorrect value like question could anyone fix issue", "num": "3770", "d": "8/2017"}, {"title": "xss possible testdatajsonpphp", "body": "description file outputs parameter unescaped coupled lack header allows cross site scripting although script meant testing purposes google search reveals file deployed several sites across web presumably entire jquery repository cloned believe adding header perfect solution help prevent sites inadvertently acquiring vulnerability", "num": "3767", "d": "8/2017"}, {"title": "failed husky install script", "body": "description link test case full output run npm run build jquery build homespikeadminjquery npm install amp amp grunt npm warn deprecated minimatch please update minimatch higher avoid regexp dos issue husky install homespikeadminjquerynodemoduleshusky node bininstalljs sh node found npm warn failure might due use legacy binary node npm warn explanations please read usrsharedocnodejsreadmedebian husky uninstall homespikeadminjquerynodemoduleshusky node binuninstalljs sh node found npm warn continuing anyway husky uninstall npm warn continuing anyway exit status npm warn failure might due use legacy binary node npm warn explanations please read usrsharedocnodejsreadmedebian npm warn deprecated toughcookie redos vulnerability parsing setcookie npm err husky install npm err exit status npm err npm err failed husky install script npm err likely problem husky package npm err npm npm err tell author fails system npm err node bininstalljs npm err get info via npm err npm owner ls husky npm err likely additional logging output npm err system linux npm err command usrbinnodejs usrbinnpm install npm err cwd homespikeadminjquery npm err node v npm err npm v npm err code elifecycle npm warn optional dep failed continuing fsevents npm warn deprecated toisostring toisostring deprecated use segmenttoisostring instead npm warn deprecated jade jade renamed pug please install latest version pug instead jade commitplease install homespikeadminjquerynodemodulescommitplease node install sh node found npm warn failure might due use legacy binary node npm warn explanations please read usrsharedocnodejsreadmedebian commitplease uninstall homespikeadminjquerynodemodulescommitplease node uninstall sh node found npm warn continuing anyway commitplease uninstall npm warn continuing anyway exit status npm warn failure might due use legacy binary node npm warn explanations please read usrsharedocnodejsreadmedebian npm warn deprecated minimatch please update minimatch higher avoid regexp dos issue npm warn packagejson formdata license field npm warn packagejson mime license field npm err npm err additional logging details found npm err homespikeadminjquerynpmdebuglog npm err ok code npm err jquery build npm err exit status npm err npm err failed jquery build script npm err likely problem jquery package npm err npm npm err tell author fails system npm err npm install amp amp grunt npm err get info via npm err npm owner ls jquery npm err likely additional logging output npm err system linux npm err command usrbinnodejs usrbinnpm run build npm err cwd homespikeadminjquery npm err node v npm err npm v npm err code elifecycle npm warn failure might due use legacy binary node npm warn explanations please read usrsharedocnodejsreadmedebian npm err npm err additional logging details found npm err homespikeadminjquerynpmdebuglog npm err ok code", "num": "3765", "d": "8/2017"}, {"title": "standardize keyboard event key property", "body": "description according mdn keyboardeventwhich keyboardeventkeycode deprecated recommendation use instead however inconsistencies across browsers one example arrow keys example arrow key shows modern browsers spec link test case focus text box press arrow key keyboard observe value result modern chrome firefox differs", "num": "3764", "d": "8/2017"}, {"title": "uncaught typeerror urlindexof function", "body": "description added jquery yarn imported project developer console says uncaught typeerror urlindexof function jqueryfninitjqueryfnload jqueryjs eval webpackinternal objecteval webpackinternal eval webpackinternal eval webpackinternal object webpackrequire eval webpackinternal object webpackrequire make sure using latest version jquery ran got message warning pattern jquery trying unpack destination c pattern jquery gt could result non deterministic behavior skipping warning fsevents platform incompatible module dunno could anything error still end installed jquery version", "num": "3763", "d": "8/2017"}, {"title": "jquery working nodejs", "body": "installed jquery node packagejson use creates error", "num": "3762", "d": "8/2017"}, {"title": "domcss padding return firefox", "body": "description jquery ff use domcss padding return chrome ok link test case", "num": "3761", "d": "8/2017"}, {"title": "upgrade jquery version throws lint error", "body": "description application used interface like belowit works fine jquery interface jquery data key upgrade version jquery throws lint errors declarations jquery must identical type parameters interface jquery namespace jquery typescript version resolved issue modify interface link test case", "num": "3760", "d": "8/2017"}, {"title": "tests pathname parsing breaks tests hosted urls include string test", "body": "per used testindexhtml tries load testunitreadyjs distjqueryminjs dynamically since splitting string test pathname grabbing first instance hosting url test located earlier eg mydomaincomtestcontentjquerytestindexhtml incorrectly calculates path mydomaincomtestunitreadyjs instead mydomaincomtestcontentjquerytestunitreadyjs resource files breaks test would open submitting pr fix wanting change line question", "num": "3756", "d": "8/2017"}, {"title": "domexception failed execute queryselectorall element x", "body": "hi using jquery latest version jquery application getting exception domexception failed execute queryselectorall element x valid selector due functionalities working recorded exception showing jqueryjs file line column would request kindly look matter soon possible", "num": "3755", "d": "8/2017"}, {"title": "reserve windowjquery together windowjquery amp window", "body": "know controversial question simplify definition library different environments different modules systems use jquery import jquery commonjs use jquery const require jquery amd use jquery define jquery function script tag use jquery function jquery", "num": "3754", "d": "8/2017"}, {"title": "jqueryready calls method named catch without quotation", "body": "think call replaced fails script file parsing old browsers like safari even jquery nt support browsers could break application fallback functionality delivered file", "num": "3753", "d": "8/2017"}, {"title": "passive listener", "body": "pleas use passive listeners addeventlistener description npm jquery nodemodulesjquerydistjqueryjs line nodemodulesjquerydistjqueryslimjs line nodemodulesjquerysrceventjs line", "num": "3752", "d": "8/2017"}, {"title": "trigger click event specific namespace checkboxes trigger click", "body": "description triggering specific namespace like input type checkbox raise click event namespace click event link test case", "num": "3751", "d": "8/2017"}, {"title": "jquery code worked chrome breaks chrome", "body": "description config chrome update chrome update one following code worked fine chrome consolelog returns empty string chrome chrome update used print mensagem node content please give advice looks like find mensagem method working anymore link test case thread stack overflow accessed following link like thank terry benjamingruenbaum help", "num": "3750", "d": "8/2017"}, {"title": "fixhooks usage exploration", "body": "description per opening issue way showing used one particular project nt write code interested making compatible jquery amp intent seems allow touch events act like mouse events longer problem jquery", "num": "3748", "d": "8/2017"}, {"body": "starting jquery always asynchronous changed purpose see", "d": "8/2017"}, {"body": "mgol way execute code scripts added html executed like", "d": "8/2017"}, {"body": "since wrapping code script tag also wrap lines try rely order much though code get quite brittle think technically nt guarantee order preserved case right often better solution put scripts end body wrapping functions necessary", "d": "8/2017"}, {"body": "mgol since ca nt rely order possible something like", "d": "8/2017"}, {"body": "proper usage since issue fix jquery please look help stack overflow", "d": "8/2017"}, {"body": "yes know pseudo code meant something kinda like", "d": "8/2017"}, {"body": "see particularly past discussion potential workaround", "d": "8/2017"}, {"body": "docs passing array plain object wrap jquery object array", "d": "8/2017"}, {"body": "send btc aug vsync notifications githubcom wrote demo page window foo function e elm consolelog elm elm instanceof jquery window trigger foo printed result instance jquery dom element case ca nt jquery collection passed argument tested version receiving subscribed thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "please create test case info issue template requested report current state nt enough details us proceed", "d": "8/2017"}, {"body": "part angularjs application using webpack sure exactly create jsfiddle issue hoping console output would suffice", "d": "8/2017"}, {"body": "console output suffice nt allow reproduce issue get correct output methods mentioned sites basic methods returned objects instead correct value sites using apis would totally break may something like webpack configuration bug buggy patching jquery etc see console following input also please note longer support jquery nt plan releases lines test jquery", "d": "8/2017"}, {"body": "get following edit switched jquery receive error wondering somehow jqlite still used despite jquery added bundle angular replace jqlite jquery detected", "d": "8/2017"}, {"body": "return jquery version used jquery object instead jqlite one one way check code pasted definitely jquery definition nt even match jquery code style nt look like angularjs jqlite definition either though angularjs version using either case nt look like jquery issue closing issue", "d": "8/2017"}, {"body": "stackoverflow answers well container pixels content visually overflowing page jquery returning correct value", "d": "8/2017"}, {"body": "send btc aug notifications githubcom wrote want get overflowed element width overflowedelement width return incorrect value information read question please fix receiving subscribed thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "nodejs shipped npm get npm expect lot things fail npm make sure environment correct modern npm remove nodemodules amp githooks try npm install micha\u0142 go\u0142\u0119biowskiowczarek", "d": "8/2017"}, {"body": "looking help installing jquery via yarn better asking question stackoverflow related jquery bug repo", "d": "8/2017"}, {"body": "dmethvin bug far see yarn vehicle installed jquery wanted mention", "d": "8/2017"}, {"body": "requiring jquery node could look many moving pieces eg webpack bundling using jquery webpack apps works fine whatever happens app importing jquery prerequisite stack overflow amp similar venues better places help debugging really issue jquery debugging would point exactly broken could fix likely cause issue something different jquery way us resolve help debugging app jquery bug tracker correct place action", "d": "8/2017"}, {"body": "package named package names using capitalized letters deprecated package deprecated seen deprecation message install process nt", "d": "8/2017"}, {"body": "typescript issue rather jquery jquery team nt maintain typescript typings please look help stack overflow", "d": "8/2017"}, {"body": "thanks report sure prs welcome micha\u0142 go\u0142\u0119biowskiowczarek", "d": "8/2017"}, {"body": "jquery internal tests sometimes throw errors later caught nothing gets whatever problem nt think error please look programming help stack overflow anything wrong jquery need test case shows working issue template removed asked provide test case", "d": "8/2017"}, {"body": "thanks opening issue first environments mentioned nt require global globals casesensitive nt want pollute global namespace", "d": "8/2017"}, {"body": "lack support means also lack support parsing include jquery separate file affect files combine various files one want support older browsers need transpile", "d": "8/2017"}, {"body": "possible people want call tracks adding support passive event listeners jquery unfortunately requires significant refactor event subsystem ca nt happen", "d": "8/2017"}, {"body": "another part cluster", "d": "8/2017"}, {"body": "live test case stems sizzle use getelementsbytagname behavior apparently changed chrome honest nt think worth fixing proper treatment xml namespaces world browsers theirselves inconsistent worms nt feel like opening going reference wo nt fix list regretfully close issue", "d": "8/2017"}, {"body": "thank answer", "d": "8/2017"}, {"body": "well quite test case nt know exactly features code may use likely needed jquery remove see code still works touch device", "d": "8/2017"}, {"body": "code still needs support old new jquery run code jqueryeventfixhooks exists", "d": "8/2017"}, {"body": "thanks dmethvin seems work fine touch device without hack mentioned try find originally added determine still needed", "d": "8/2017"}, {"body": "good hear jquery could use code like jquery treated pointer touch events like mouse events normalized event objects changes supported browsers different approach normalizing event objects jquery nt needed want support versions could add around code", "d": "8/2017"}, {"body": "thanks dmethvin makes sense actually figured code superfluous case original problem fixed another way another point time needed get x touch screen without hack still works jquery lt", "d": "8/2017"}, {"body": "sometimes breakages caused changes browserstack side rerun tests commit mentioned one results identical broke something indeed marking blocker", "d": "8/2017"}, {"body": "thanks krinkle", "d": "8/2017"}, {"body": "created pr fixing butt significant cost may good basis look real problem", "d": "8/2017"}, {"body": "hello found question stackoverfow setproperty may add parsing important word executing setproperty made changes forked version working issues finalpropname call rewrites name variable example name backgroundcolor calling method makes name variable equals backgroundcolor setproperty method executed value thats save value name var oldname var finalpropname executed beautiful setproperty working lowercamelcased property names also found hooksset call works properties like width height nt exactly understand purpose code maybe anyone knows fork calls ignored important word exists parse execute setproperty fix tests yet refork rewrite commit commit message nt match guidelines commit atomic see", "d": "8/2017"}, {"body": "think agree unwrapping match standard promise behavior wait since breaking change", "d": "8/2017"}, {"body": "thanks looks lot better though still discrepancy idea jsbin example gets zeros latest jquery chrome windows see differences order", "d": "8/2017"}, {"body": "yes using latest actually calculating css boxes even though latter approximate former wrong affected transforms scale rotate etc", "d": "8/2017"}, {"body": "ok makes sense plan sticking project since currently using transforms tue aug pm richard gibson notifications githubcom wrote yes using getboundingclientrect latest actually calculating css boxes even though latter approximate former wrong affected transforms scale rotate etc receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "recommend instead plan upgrade use directly use case needs", "d": "8/2017"}, {"body": "suppose would also possible us use fractional component gbcr would separate issue", "d": "8/2017"}, {"body": "would vulnerable transforms well would nt", "d": "8/2017"}, {"body": "yes maximum error half pixel ie change current recovering perfect accuracy absence transforms", "d": "8/2017"}, {"body": "getting error solve", "d": "8/2017"}, {"body": "maybe posting wrong issue fix pls jquery fails handle common csprelated case correctly case called html including snippet html jquery takes script tag downloads js file ajax tries put js code inline new tag via triggers csp disabled csp basically musthave configuration repro case jquerycspbugzip running http server hosted endpoint expected behavior console shows actual behavior console shows following error refused execute inline script violates following content security policy directive defaultsrc either unsafeinline keyword hash nonce nonce required enable inline execution workaround open new issue handled part issue", "d": "8/2017"}, {"body": "changes briana wrote look good need pr unit tests ensure work nt broken subsequent changes", "d": "8/2017"}, {"body": "dmethvin submitted pr koczkatamas include nonce policy amp snippet patch trick see example alternatively able guessing unlikely difficult given details provided following work without violating csp hopefully helpful", "d": "8/2017"}, {"body": "suspect might compatibility view issue compatibility view checked uncheck issue gone", "d": "8/2017"}, {"body": "done testing appears replacing code tests ready state following code fixes issue least chromium browser catch cases document ready called browser event already occurred documentreadystate complete else documentreadystate interactive documentonreadystatechange function documentreadystate complete windowsettimeout jqueryready else document interactive state code waits document complete state runs ready handler means jquery loaded defer ready handler fired page completely finished loading deferred scripts run jquery loaded defer tries use domcontentloaded immediately fires ready handler idea domcontentloaded still used except jquery loaded defer case waits whole document completely loaded ready handler fired nt ideal think better always waiting document completely loaded ready handler run hopefully helpful missing something anyone could test would great", "d": "8/2017"}, {"body": "sounds like reasonable compromise", "d": "8/2017"}, {"body": "wo nt break users expect fire early nt think issue hard fix think unknown number existing jquery components expect fire early would break behaviour changes fire page actually ready fixing would potentially reopen", "d": "8/2017"}, {"body": "keithhenry yea reread code looks like waiting load thinking could compromise would nt change behavior using", "d": "8/2017"}, {"body": "keithhenry timmywil ah think may right outlined behaviour going jquery loaded run ready handler scripts loaded run immediately run ready handler otherwise run ready handler jquery nt loaded run event handler immediately otherwise run ready handler right also timmywil mentioned could tell domcontentloaded already fired might helpful think might possible using performancetimingdomcontentloadedeventstart although might direction want go", "d": "8/2017"}, {"body": "really jquery already good firing ready called dom events nt issue problem fires soon page interactive unknown number projects depend jquery rely behaviour work set jquery needs delay never fire breaking change unknown projects may even projects use rely current broken behaviour suppose could pass kind jquery order change behaviour either adding already fairly large library splitting code deliver alternate variant adding complexity technical debt either way", "d": "8/2017"}, {"body": "use throttle resize mousewheel scroll events work everywhere used reduce number events fired bigtime really isnt hard implement code good thing pubsub multiple items listen one eg scroll handler need handlers anymore", "d": "8/2017"}, {"body": "throttling certainly big improvement browser still needs call javascript function every rendering frame even small function like throttle check reduce fps rate considerably hooked blocking event", "d": "8/2017"}, {"body": "stems difference getcomputedstyle firefox browsers values former reporting postadjusted used values latter returning absolutized preadjusted concept nt even named since computed value margin properties matches specified therefore remains percentage specified words firefox probably right thing per css specifications", "d": "8/2017"}, {"body": "well param plugin deparam", "d": "8/2017"}, {"body": "discovered put form div problem goes away", "d": "8/2017"}]