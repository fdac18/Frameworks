[{"title": "ajax cache parameter substitution works incorrectly", "body": "jquery actually requests request add test case later needed", "num": "3303", "d": "8/2016"}, {"title": "possible use css function validate css rules", "body": "possible use css validate basic inline rules see valid var tree treefind span css backgroundcolor eee consolelog tree span changed treefind span css backgroundcolor blaahhhhcolor consolelog tree change span treefind span css backgroundcolaar black consolelog tree change span compare see inline style attached valid would possible add type callback css suggest given rules valid know jquery nt linter case possibly others may suffice", "num": "3302", "d": "8/2016"}, {"title": "end support enquiry", "body": "hi end support deadline jquery version thanks choon yong", "num": "3301", "d": "8/2016"}, {"title": "jquery rendering page returned server ajax post", "body": "description putting form capture property posting data express server either via get post server processes data renders template returned client client unable display page call server link directly browser address bar page returned server rendered correctly workaround client windowopen server link windowopen popup restrictions ux considerations tried chrome link test case script document ready function ok click function var org name val org alert please fill required fields else alert post org windowopen allows page rendered code commented tried could get working windowopen subrepos nameorg newwindow toolbarno menubarno post subrepos name org done function data var mywindow windowopen response mywindowdocumentwrite data consoledir data documentwrite data form reset cancel click function form dialog close close form", "num": "3299", "d": "8/2016"}, {"title": "safari bug optionattr selected selected", "body": "code far ideal found legacy code bug really hard track get reported issue customer could nt reproduce test case working chrome aint safari version os x fixed using thought might addressed core", "num": "3298", "d": "8/2016"}, {"title": "ajax call cachefalse prior qparam url generating malformed url", "body": "description due code changes apparently introduced ajaxjs calls ajax url containing anticache query param get broken apart reassembled malformed url changes url around sending older versions replaced anticache param place newer versions remove prior param tacks new param end actual url requested case comes link test case see jsfiddle example", "num": "3297", "d": "8/2016"}, {"title": "whendone breaks backward compatibility", "body": "description maintain full compatibility existing code release attached example shown case behaves absolutely different release support versions jquery see one way write version behaves versions link test case", "num": "3296", "d": "8/2016"}, {"title": "use native mouseentermouseleave events", "body": "right jquery simulates nice event mouseleave event native since chrome firefox bugfree safari since version since forever version ie think time reduce code overhead relying browsers", "num": "3295", "d": "8/2016"}, {"title": "fix double occurence file", "body": "description fix double occurence mentioned file link test case", "num": "3294", "d": "8/2016"}, {"title": "error android native browser", "body": "using webpack every thing ok jquery update jquery browser run time error throw android idea detail problem hard trace compiled code android", "num": "3293", "d": "8/2016"}, {"title": "document collection constant empty results", "body": "using jquery document returns document using jquery document returns empty array", "num": "3292", "d": "8/2016"}, {"title": "read property tolowercase undefined", "body": "description trying get value number throws error normally either return number nothing error thrown assumes entry jquery obejct array dom element tries read case number file jquerysrcattributesvaljs line", "num": "3291", "d": "8/2016"}, {"title": "sourceurl sourcemappingurl deprecated please use sourceurl sourcemappingurl instead", "body": "line jqueryminjs description link test case", "num": "3290", "d": "8/2016"}, {"title": "deprecate jqueryholdready", "body": "suggested decided gap noticed", "num": "3288", "d": "8/2016"}, {"title": "calling jqueryholdready false without jqueryholdready trigger jqueryready without domcontentloaded", "body": "description app assuming called call whenever ready problem probably triggered yet guys consider bug also initially value probably intuitive treat bug think code would look better without magic number bug reports note fix bugs latest versions jquery briefly describe issue encountered expect happen calling without calling trigger dom actually ready acually happens calling without calling triggering jquery actually think dom ready browsers affected provide minimal test case see use latest shipping version jquery test case prefer test cases going backward forward whether open issue totally provide test case", "num": "3287", "d": "8/2016"}, {"title": "result collisions", "body": "current implementation lossy consider bug unsure consequences would fix essentially subkeys need double encoded guarantee noncollisions", "num": "3286", "d": "8/2016"}, {"title": "load javascript html truncated", "body": "description version agent chrome like use html load pice javascript run dynamic pice contains entire javascript gone please find simple test case thank link test case", "num": "3283", "d": "8/2016"}, {"title": "bug datepicker alternate field unpopulate", "body": "description datepicker use alternate field date chosen alternate date field populated date field becomes empty clicking text input selecting whole text value deleting alternate date field retains previous value would expect become empty browsers used test safari chrome mac os x link test case", "num": "3282", "d": "8/2016"}, {"title": "excluding exportsglobal working build", "body": "description tried make custom build without exportsglobal working jquery run grunt custom exportsglobal problem include global hard coded", "num": "3281", "d": "8/2016"}, {"title": "jsonpath support", "body": "description anyone think jsonpath accepted jquery first class feature seems like failry primitive operation something like jsonpath books name moby dick books name moby dick see project nt got much traction", "num": "3280", "d": "8/2016"}, {"title": "update fro version generate error", "body": "update fro version generate error jquerydeferred exception read property indexof undefined typeerror read property indexof undefined rfnload uncaught typeerror aindexof function", "num": "3276", "d": "8/2016"}, {"title": "security error chrome use contents", "body": "description using method contents page iframes remote domain causes fatal error google chrome uncaught securityerror failed read contentdocument property htmliframeelement blocked frame origin accessing frame origin frame requesting access protocol frame accessed protocol protocols must match prevent errors using contents maybe replace try return elemcontentdocument jquerymerge elemchildnodes catch e return false add checking elem iframe remote domain expression link test case", "num": "3275", "d": "8/2016"}, {"title": "event namespacing broken", "body": "hi tested jquery code testfn consolelog test jquery document ready function jquery window loadmynamespace function event testfn event fired tested windows home chrome code jquery window load function event testfn ok also jquery ok", "num": "3274", "d": "8/2016"}, {"title": "script unable get property style undefined null reference", "body": "jquery stops execution internet explorer virtualbox windows first load website cached yet following error message script unable get property style undefined null reference refers function computestyletests particular basically stops script executed page error disappears page reloaded lower silently fails without error message problem appear modern browser platform", "num": "3273", "d": "8/2016"}, {"title": "unify filtering selector", "body": "per complexity separate branches simple vs nonsimple selectors nt seem worthwhile defer directly", "num": "3272", "d": "8/2016"}, {"title": "", "body": "chrome fx ie gt cause scripts background loaded executed order fires however lots scripts loaded applied jquery event fires scripts run test file javascript windowtest fail init test result jquery ready fires function resultjq html jquery result windowtest test result document ready documentaddeventlistener domcontentloaded function resultdom html dom result windowtest file file pagehtml tests pass files load fast enough sufficient delays gt files cause jquery test fail latest chrome fx nt fail consistently jquery ready always fires document one jsbin reproduces first load although might depend network subsequent loads wo nt show bug try throttling connection nt happen first load bug extant latest nt seem occur appears due check javascript catch cases document ready called browser event already occurred support ie lt older ie sometimes signals interactive soon documentreadystate complete documentreadystate loading amp amp documentdocumentelementdoscroll debugging appears true fires minimum delay breaking halts execution numbered js files still network tab nt know whether recent change behavior chrome firefox appear report soon body present deferred scripts evaluated nt problem ie lt nt support sort fires scripts order would fail test anyway", "num": "3271", "d": "8/2016"}, {"title": "fnfilter drops elements customed async attribute", "body": "description drops elements customed async attribute match selector occurs chrome firefox ie windows maybe link test case", "num": "3270", "d": "8/2016"}, {"title": "ajax sends property delete body instead query string", "body": "description ajax functionality regards property compliant rfc spec http delete standards causes issues currently running api behind google compute load balancer getting error codes sending delete requests using data current docs ajax data type plainobject string array data sent server converted query string already string appended url getrequests see processdata option prevent automatic processing object must keyvalue pairs value array jquery serializes multiple values key based value traditional setting described send data body http spec states following payload within delete request message defined semantics sending payload body delete request might cause existing implementations reject request site cares spec says apparently google response cloud support specialist regarding matter delete requests payload rejected google frontend service stated payload within delete request message defined semantics sending payload body delete request might cause existing implementations reject request given load balancer allow delete request body workarounds either use url without body use handler post body delete specific topic id would much appreciate could fix ajax functionality work correctly per standards defined recent version specification believe get method works way delete method could changed work get would perfect long time user fan jquery look forward continued use thank taking minutes review request", "num": "3269", "d": "8/2016"}, {"title": "deferred failfilter exceptionhook called exception donefilter", "body": "jquery executed exception thrown done filter since fail filter called nothing logged specifically fail get logged hoping fail would called add catch get called sure supposed happen say difficult debug deferreds know upgrade guide recommends adding catches everywhere sometimes difficult dynamically chaining promises", "num": "3264", "d": "8/2016"}, {"title": "serialize disabled form", "body": "returns empty string chromeopera ie older jquery browsers works fine description previously form disabled actually works ie others could still serialized get empty string would chalk something crazy never worked forum came link test case lt demo serhtmlzip", "num": "3263", "d": "8/2016"}, {"title": "source file location jquery cdn map file incorrect", "body": "point recent past chrome added ability manually associate map file minified source people using jquery cdn would optimistically mean could right click file dev tools example associate jquery minified file however map file refers back plain old original source frozenintime version refer release process ensure file name matches one cdn could manually associated debugging map files lame", "num": "3260", "d": "8/2016"}, {"title": "jquery line breaks compatiblity firefox older netscape konqueror", "body": "tried update noticed latest releases broke lot old browser versions jquery stop working totally broke javascript browsers looked error messages found solutions getcomputedstyle always needs pseudo element older browsers addeventlistener always needs set usecapture explicitly false older browsers removeeventlistener always needs set usecapture explicitly false older browsers setting null false much huge impact adding browser jquery broke javascript completely browsers worked totally fine sadly old browsers still one problem nt break javascript jquery behaviour gives error message divgetclientrects function since worked think way fix jquery handle second question jquery suddenly bugs places code decided drop support old browsers regression introduced code rewriting thanks", "num": "3259", "d": "8/2016"}, {"title": "typeerror aindexof function", "body": "description firefox ubuntu running jquery trying run little program get following error typeerror aindexof function rfnload expect images besides one hidden happen link test case", "num": "3258", "d": "8/2016"}, {"title": "callbacks fired modified", "body": "expect happen callbacks promise steps fire nesting even second response modified actually happens first callback fired others second request receives browsers affected chrome worked fine chrome tested jquery example see source", "num": "3257", "d": "8/2016"}, {"title": "event types colliding object prototype properties nt work", "body": "use key get array event handlers throws exception instead receive property treat like array standard fix appending space cf delegated selector match tracking sizzle createcache also consider purposes ponyfilling needed especially datajs updated rwaldron original goals creating", "num": "3256", "d": "8/2016"}, {"title": "slow listeners filtering selector", "body": "issue listeners filtering selector usual listeners example jquery comparing selectors time event occurs optimal take long time especially mobile phones use algorithm example let id selector create object key id value handler event occurs something like one handler selector filter merge array need keep order calling add counter every handler calling put array sort counter optimize many selector example attrvalue selector need two nested object first searching attr second searching value one object searching attr value care file size implement module put link user requires module fnon begins work fast algorithm works speed example short implementation optimize id selector ca nt work data nt split handlers space nt override fnoff js fnonoriginal fnon fnon function event selector handler typeof selector string test selector return thisonoriginal event selector handler function domhandler e var handlerbyid etype handlerbyid var targetelem etarget example using html var content content var lt contenton myevent test logid var starttime datenow logs works ms without jqueryfastonjs ms fireme trigger type myevent value true consolelog time datenow starttime function logid e consolelog thisid look example", "num": "3254", "d": "8/2016"}, {"body": "need details particular test case jsfiddle jsbin likely bug code impossible tell error message", "d": "8/2016"}, {"body": "sounds like fixed version soon check git builds see fixed specific case", "d": "8/2016"}, {"body": "thanks already checked open issues nt see one", "d": "8/2016"}, {"body": "check change value different set means rule invalid want something job plugin way specific included jquery core", "d": "8/2016"}, {"body": "thanks could confirm use validate user inputted css way validation mistakes possible prevention xss would work cases mgol", "d": "8/2016"}, {"body": "user validation another issue checking value correct", "d": "8/2016"}, {"body": "thanks could point jquery checks value correct source much ask", "d": "8/2016"}, {"body": "checks sets value browser rest please look help stack overflow though", "d": "8/2016"}, {"body": "thank could achieved without jquery case basic function helps anyone function validatecss rules validatecss background blue true validatecss background bluea false", "d": "8/2016"}, {"body": "focusing jquery fix critical issues jquery issues scope versions generally would nt expect new releases jquery unless really troublesome bug appears please consult upgrade guide jquery migrate make upgrading jquery easier", "d": "8/2016"}, {"body": "hi notes thanks aug micha\u0142 go\u0142\u0119biowski notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "user error container receive html", "d": "8/2016"}, {"body": "setter nt work well dynamic input properties warning since jquery similar issues eg fixing issues like consistently would hard misuse api anyway direct people", "d": "8/2016"}, {"body": "developers need understand difference attributes properties way need understand difference html dom yes confusing jquery early attempts hide difference made things worse", "d": "8/2016"}, {"body": "fixed spurious nt bother anything", "d": "8/2016"}, {"body": "since fixed closing issue", "d": "8/2016"}, {"body": "allowed breaking changes major version updates problem main issue long ago defined play role long term goal split apart call one arg similar otherwise get consistent behavior across versions change maybe suggestions references note mentions single multiple", "d": "8/2016"}, {"body": "dmethvin right see details", "d": "8/2016"}, {"body": "nt think use need handle delegated events mouseentermouseleave nt bubble find approach reduce code overhead accept pr though", "d": "8/2016"}, {"body": "yup reason also clearly stated comment implementation", "d": "8/2016"}, {"body": "reason shim", "d": "8/2016"}, {"body": "old version jquery issue template says note fix bugs latest versions jquery display", "d": "8/2016"}, {"body": "sorry missed note thank", "d": "8/2016"}, {"body": "enough detail us work unfortunately could construct minimal project example exhibits problem share micha\u0142 go\u0142\u0119biowski", "d": "8/2016"}, {"body": "yes may later", "d": "8/2016"}, {"body": "thanks opening issue closing info", "d": "8/2016"}, {"body": "minimal project example jquerytestzip please see read detail thank", "d": "8/2016"}, {"body": "duplicate already fixed fix released upcoming", "d": "8/2016"}, {"body": "passing number jquery supported supported signatures please consult docs", "d": "8/2016"}, {"body": "update jquery must using version least years old future reporting issue please check exists latest version library", "d": "8/2016"}, {"body": "added api list well", "d": "8/2016"}, {"body": "want work issue please inform amp checklist goes like x move x remove x open migrate issue", "d": "8/2016"}, {"body": "left alone test files", "d": "8/2016"}, {"body": "pretty clear advanced feature proper use consisting followed decided deprecate entirely suggested closing anyone considers mistake please post consider reopening regardless recommend replacing uses functionality suggested", "d": "8/2016"}, {"body": "sounds good thanks", "d": "8/2016"}, {"body": "bonus round note nt problem nested keys original serialization javascript decodeuricomponent param root b b gt root amp root b b decodeuricomponent param root gt root amp root amp root", "d": "8/2016"}, {"body": "agree looks wrong entire premise serializing complex data structures way wrong probably beyond trying take anything back either add mess name repair say wo nt fixed point people json seems like would compat issues doubleencoding including possible impacts interpretation server side change would wait past experience shown good predicting people using strange things", "d": "8/2016"}, {"body": "thanks report however jquery bug tracker jquery ui issues latter reported", "d": "8/2016"}, {"body": "fixed master", "d": "8/2016"}, {"body": "jquery dom library seems outside core competency benefit including jquery file publicizing sure project would like anyone wants use always include", "d": "8/2016"}, {"body": "need test case without external libraries jsbin jsfiddle error message nt tell us much also using migrate please update well micha\u0142 go\u0142\u0119biowski", "d": "8/2016"}, {"body": "today found issue code worked jquery", "d": "8/2016"}, {"body": "still need test case jsbin jsfiddle also happen every browser", "d": "8/2016"}, {"body": "error firefox chromium", "d": "8/2016"}, {"body": "reports like super frustrating us majorversion releases breaking changes definition semver write extensive documentation even provide plugin help people process mention endlessly time release new versions yet seems people drop new version existing code puzzled nt work please read documentation use jquery migrate", "d": "8/2016"}, {"body": "thanks including link explains load method removed jquery case nt upgrading previous version starting new project looked jquery documentation found load event handler nt see notes removed also control error message displays example firefox debugger jquery newbies error nt helpful totally control", "d": "8/2016"}, {"body": "naturefreak right side page linked black header saying note maybe note easy skip issue api repo make clearer", "d": "8/2016"}, {"body": "naturefreak also control error message displays example firefox debugger jquery newbies error nt helpful totally control nt handle scenario main problem used two methods named identical different things one would dispatched depending arguments passed removed one use always get second one dispatched pass parameters nt expect anything happen including error random line jquery code", "d": "8/2016"}, {"body": "see also", "d": "8/2016"}, {"body": "thanks explanation error describing look removed bit method lookout future agree would good make stand removed items since error messages might much use jack sun aug micha\u0142 go\u0142\u0119biowski lt notifications githubcom wrote naturefreak also control error message displays example firefox debugger jquery newbies error nt helpful totally control nt handle scenario main problem used two methods named identical different things one would dispatched depending arguments passed removed one use load always get second one dispatched pass parameters nt expect anything happen including error random line jquery code receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "template asked test case construct one note crossorigin document access supported browsers unless cors enabled errors may happen nt try access data allowed access", "d": "8/2016"}, {"body": "closing lacking information provide test case reopen", "d": "8/2016"}, {"body": "nt attach load event ready handler attach outside ready handler", "d": "8/2016"}, {"body": "yes works code works ff chrome", "d": "8/2016"}, {"body": "create example jsbincom jsfiddlenet template asked one missing", "d": "8/2016"}, {"body": "tried testing webs impossible error work normal", "d": "8/2016"}, {"body": "okay well say code incorrect may work unreliably depending browser size page instead work assuming code loaded event fires dynamically", "d": "8/2016"}, {"body": "need information figure time reaches line mentioned already used sure error could occur anything special page example xmlxsl page provide test case", "d": "8/2016"}, {"body": "normal page problem code break browser error appears inside mentioned jquery function without reference specific js div might fail cases computestyletests normally applied maybe could help figure js div refers following msdn library console refers following problem object expected attempted invoke method property object type object passed argument type object object required", "d": "8/2016"}, {"body": "cases computestyletests normally applied maybe could help figure js div refers css feature detection code set breakpoint line changes see", "d": "8/2016"}, {"body": "setting breakpoint line fails clicking continue execute script without error reference specific div", "d": "8/2016"}, {"body": "unless test case ca nt really much", "d": "8/2016"}, {"body": "tried manually uncomment js block block identify underlying problem without much success far assume qunit would way go test case", "d": "8/2016"}, {"body": "ideally test case html file includes jquery ca nt get work jsbin jsfiddle create standalone one work", "d": "8/2016"}, {"body": "coworker mine experiencing issue reproduce computer loaded uncompressed version jquery receives following console error unable get property style undefined null reference file line column revert nt issues side note also using jqueryui sure strip project workable test case", "d": "8/2016"}, {"body": "tested jquery migrate right", "d": "8/2016"}, {"body": "added migrate gets following console output get console output however gets unable get property style undefined null reference error page executes normally refreshes page loads normally without error version sure every setting navigation occurred file filenamehtml jqmigrate migrate installed logging active version jqmigrate jqueryexpr jqueryexprpseudos consoletrace migratewarn http uniqueget http anonymous function http anonymous function http global code http jqmigrate jqueryexprfilters jqueryexprpseudos consoletrace migratewarn http uniqueget http anonymous function http anonymous function http anonymous function http global code http jqmigrate jqueryunique deprecated use jqueryuniquesort consoletrace migratewarn http uniqueget http http twidgetprototypeclasses http twidgetprototypetoggleclass http twidgetprototypeaddclass http createwrapper http anonymous function http serverjquery unable get property style undefined null reference file line column", "d": "8/2016"}, {"body": "another test downgraded jquery ui tested jquery get error seems something jquery ui causing issue", "d": "8/2016"}, {"body": "original ticket template created ticket instructions request test case appear would helpful sort test case sounds like may sort regression condition related jquery ui nt considered without test case would difficult diagnose", "d": "8/2016"}, {"body": "nt open ticket issue started searching possible solution came across ticket sure avexmedia person opened ticket also using jquery ui try strip framework working test case", "d": "8/2016"}, {"body": "problem appeared website almost productionready currently difficulties strip testable case see nevertheless use jquery ui adding jquery migrate gives following warning message every time directly mentioned", "d": "8/2016"}, {"body": "poor man jsperf benchmark typical run yaml method selector complexity implementation findsimplemaster opssec findsimpledirect opssec findsimpleintersect opssec notsimplemaster opssec notsimpledirect opssec notsimpleintersect opssec findcomplexmaster opssec findcomplexdirect opssec findcomplexintersect opssec notcomplexmaster opssec notcomplexdirect opssec notcomplexintersect opssec current code taking huge performance hit vs always using noticeably faster albeit smaller margin still favor completely dropping setintersection branch case could made restricting latter cases thoughts jquerycore", "d": "8/2016"}, {"body": "nice benchmark still like idea simplifying code well", "d": "8/2016"}, {"body": "simplifying", "d": "8/2016"}, {"body": "refreshing change recent complaints firing late one firing soon smile long history us trying use interactive looks like may need revert put comment says see", "d": "8/2016"}, {"body": "think events fire makes sense especially working reduce time first meaningful interaction ca nt ready two events something soon user interact page something javascript libraries need loaded needed thing", "d": "8/2016"}, {"body": "keithhenry agree useful semantics defined either need ensure nt run scripts loadexecute say nt support loading jquery using attribute", "d": "8/2016"}, {"body": "exactly argue mean fully ready would new functionality long clear explicit event jquery firing resolve bug", "d": "8/2016"}, {"body": "jquery inserts special handlers enforce specified behavior html boolean attributes like async values must either empty strings caseinsensitively identical names handlers disrupt nonnative selector processing used calls please use data attributes associate custom data elements", "d": "8/2016"}, {"body": "think acceptable value", "d": "8/2016"}, {"body": "techquery important distinction element content attributes appear html source like element idl attributes appear dom bindings javascript properties element objects like particularly relevant case boolean attributes like reflecting idl attribute attribute getting idl attribute must return true content attribute set false absent setting content attribute must removed idl attribute set false must set empty string idl attribute set true corresponds rules boolean content attributes fact false specifically noted disallowed value boolean content attributes values true false allowed boolean attributes represent false value attribute omitted altogether", "d": "8/2016"}, {"body": "thanks detailed answer opinion boolean idl attribute write html tags customed content attribute ordinary element attribute selected literally according html code css selector", "d": "8/2016"}, {"body": "wo nt address specific code behavior serious concern way markup written use standard attributes like custom purposes creates future hazard case standard decides use code important standard uses elements code broken breaks important web sites standard must work around entire web use different name code stole html standard provides data attributes exactly purpose using use custom data", "d": "8/2016"}, {"body": "opinion boolean idl attribute write html tags customed content attribute true makes document nonconforming b addressing edge cases within jquery would add much size complexity potentially performance degradation use attributes", "d": "8/2016"}, {"body": "dmethvin thanks patience advices attribute spa engine used arguments building query string http api example want extend semanteme html standard attributes frequentlyused kinds html tags conform coding habit traditional nonspa web page naming kind headache coders prefer use existing semanteme similar purposes b hand future use web component standard develop custom html tag also define contentidl attribute name html standard implement similar function loading resource media asynchronously reading book named learning web component development thinking best practice spa developing", "d": "8/2016"}, {"body": "attribute spa engine used arguments building query string http api given generalpurpose nature attributes would bad form assume every one appearing custom element intended one particular use would instead introduce namespacing eg want extend semanteme html standard attributes frequentlyused kinds html tags conform coding habit traditional nonspa web page naming kind headache coders prefer use existing semanteme similar purposes b hand future use web component standard develop custom html tag also define contentidl attribute name html standard implement similar function loading resource media asynchronously fine aware jquery rather indiscriminate code handling attribute sharing name standardized boolean attribute", "d": "8/2016"}, {"body": "discussed length several times discussion key thing particular server accept entity body ability encode querystring rather body implement way around would harder", "d": "8/2016"}, {"body": "would nice separate property could pass data would result query string instead post body example would allow ease use experienced get requests across board understand code written follows standards might nice compromise without creating breaking changes", "d": "8/2016"}, {"body": "point made ticket though already serialize params url longer difficult code clear anyone reading later adding url adding url could certainly add something like explicit data went would require new code plus new documentation new complex rules override addition get requests plus would confuse people using jquery wo nt exist people end using code", "d": "8/2016"}, {"body": "yes certainly acceptable solution getting spoiled node requests properties form body json qs apples oranges suppose thanks feedback", "d": "8/2016"}, {"body": "forgot mention example also call deferredexceptionhook made difficult find", "d": "8/2016"}, {"body": "error thrown first function important realize promise already settled resolved rejected second function applies promise settles code called later executes standard promisea behavior would best discuss explore somewhere like stackoverflow implementing defined reason called explicitly rather error implicitly thrown browser indicative programming mistake explicitly throwing generic chain jquery logged message default cases people used signaling console verbosity would annoying however override deferredexceptionhook exactly want", "d": "8/2016"}, {"body": "thanks example code course actual exception raised handlebars misspelled unknown helper eg bogus xyz nt remember actual type override exceptionhook forgot whitelisted exceptions log topic though nt clear would annoying log uncaught errors perhaps find override common pattern something case exception forgot could happen would really want know perhaps switching whitelist blacklist would help people catch errors anyway thanks reminder exceptionhook works", "d": "8/2016"}, {"body": "topic though nt clear would annoying log uncaught errors perhaps find override common pattern something problem knowing rejection truly uncaught rule saying attached promise immediately exception may cause promise reject attached possible bookkeeping required track exceptions time like also quite bit code instead burdening everyone code jquery added couple hooks native promise implementations better since nt sizeperf constraints jquery need support installed base could use etc", "d": "8/2016"}, {"body": "since forms nt attributeproperty seems like bug disabled test catching forms really wanted fieldsets", "d": "8/2016"}, {"body": "seems microsoft believes forms disabled property", "d": "8/2016"}, {"body": "standard says nt disable elements set edge since ie truly disable forms current behavior probably best thing crossbrowser consistency people setting propertyattribute forms right run jakecigar reported forums", "d": "8/2016"}, {"body": "dmethvin ie even funnier disable form way inputs look like disabled grayed checkbox clickable regular input accepts keyboard input see jsbin mess", "d": "8/2016"}, {"body": "came forum took figure actually disabling form never thought would work anywhere tests forum link top care way resolved op several enough workarounds document jquery support disabling forms patch return browsers correct string older versions returned correct string", "d": "8/2016"}, {"body": "link seems say form controls inherit disabled attribute seems could inherit form matter parent say fieldset div within form div enclosing form etc etc however bit different language permit inheritance fieldset", "d": "8/2016"}, {"body": "form control form element used form", "d": "8/2016"}, {"body": "yes know form control form first link enumerates form control explicitly following elements support disabled attribute button input optgroup option select textarea interpret next sentence attribute inherited local declarations override inherited value maybe possible inheritance select gt optgroup gt option maybe parent documentation explicit", "d": "8/2016"}, {"body": "since things inherit parent select gt optgroup gt option explains writing mention form able disabled", "d": "8/2016"}, {"body": "hey person first brought issue jakecigar used work across ie firefox chrome stated ie still supports believe chrome looks like firefox either longer inherits value ignores inherited value nt know browsers keep simple possible believe changes need listed breaking changes even though may intended hidden feature feature request could created allow multibrowser safe disabling reenabling form input objects allowing serialize work via container could possibly form browsers would support container child parent allow functionality configurable modal screen optional placed container better sort protected serialize sound", "d": "8/2016"}, {"body": "believe changes need listed breaking changes semver refers breaking changes referring breakage documented api garbage goes possible garbage come notice ie example form rather bizarre state disabled sure would want intentionally cause also yet convinced setting propertyattribute form useful effect andor documented standards see disabled form taking jquery equation effect disabling form code trying accomplish disabling form", "d": "8/2016"}, {"body": "dmethvin used work across multiple browsers described would prevent users making changes producing additional events especially click events specs obviously changed years longer works expected bottom line need reliable way disable changing field values events still able serialize values ajax calls done nt really concern time long crossbrowser safe actual serialization maybe need dataserializedefault serialize object dataserialize value fields attributes truefalsealways values default true current functionality something else serialize method leave guys eyes bigger picture", "d": "8/2016"}, {"body": "bottom line need reliable way disable changing field values events right way would enumerating fields setting since standard formwide mechanism disable suppose another way would put kind modal overlay form prevent people interacting general tricky due keyboard interactions example either solutions would plugins still able serialize values ajax calls question whether jquery pay attention property form supposed according standards coin toss given way ie behaves nobody setting property part sizzle issue opened track", "d": "8/2016"}, {"body": "dmethvin trust guys come something workable however one wrench needs considered times specific fields marked disabled state needs preserved protection period removed makes using disabled property individual fields rather tricky suppose could use data attribute fields filter fields addingremoving protection think work something related last thought appears way envisioned working serialize hand thanks", "d": "8/2016"}, {"body": "paying attention nonfieldset ancestors oversight corrected note however descendant elements still match ie truly disabled advice still avoid using property except valid eg fieldsets", "d": "8/2016"}, {"body": "also clear current map file name correct google cdn since deliver copy name jqueryjs jquery microsoft cdns include version number file name require physically different map file versionspecific file names", "d": "8/2016"}, {"body": "showing work come back get chance jquery regressed looks like code rename references map file still names versioned files nt correct jquery cdn microsoft cdn", "d": "8/2016"}, {"body": "nt supported browsers old long time since nt test unsupported browsers nt know make changes might break may actively remove workarounds longer need make supported browsers work reason need support browsers old would stay older versions jquery", "d": "8/2016"}, {"body": "yes programming webpage someone high demands browser compatibility totally fine things limited versions jquery breaking javascript completely great possibility stay would last choice make pull request add parameters would pull rejected possibility fix problems even though browser versions officially unsupported", "d": "8/2016"}, {"body": "nt test browsers nt support browsers even submitted patches would short time change broke", "d": "8/2016"}, {"body": "totally understand could could broken like minutes later said browsers supported anymore since long time got broken recently still see chance fixes would hold even time needed fix problems high mind much breaks shortly pull perspective basically comes question pull would allowed rejected thanks patience", "d": "8/2016"}, {"body": "enthusiastic prs may well break next patch release seeing another issue like reported nt test environment time rarely used seems tradeoff big note removed additional optional parameters knowing break old firefox versions us removing handling done knowledge boxsizing handling broken jquery firefox older decided ok case want support firefox even though jquery using nt always supporting last two firefox releases monkey patch apis loading jquery making sure final parameter always passed untested monkeypatch example", "d": "8/2016"}, {"body": "open supporting firefox esr releases people demanded nt seen much demand far though especially sortof supporting old chrome versions via android testing would still firefox esr currently version firefox years old imagine known security holes browser", "d": "8/2016"}, {"body": "supporting old browsers super high priority best strategy would use older version jquery stay really rare newer browsers break something old jquery definitely nt think try support browsers unsupported maker mgol says suppose could support firefox esr since pretty recent browser would nt help firefox support since seems clear wo nt support browsers listed title close ticket", "d": "8/2016"}, {"body": "okay thanks responses", "d": "8/2016"}, {"body": "also warned filled jquery migrate", "d": "8/2016"}, {"body": "source link posted using jquery post simplified test nt include much code", "d": "8/2016"}, {"body": "removed everything unnecessary regarding jquery version may thought saw file nt used since deleted well", "d": "8/2016"}, {"body": "nt understand problem reported chrome console shows second inner outer think correct network shows two requests test reporting edit chrome windows", "d": "8/2016"}, {"body": "dmethvin strange running chrome running version unfortunately nt really know else try second request reporting etags seems broken machine request browser send etag provided response first request server written way return empty body requests header mimics rails server product uses know nt help four people work gets behavior described mac windows different officesstates incognito mode beforeafter clearing cache cache enableddisabled withwithout extensions etc nobody gets behavior see product worked chrome everybody automatically upgraded affected many requests product sends set globally avoid side affects like missing page content possible browser bug least older versions jquery library claimed handle empty bodies gracefully", "d": "8/2016"}, {"body": "ran another pc windows saw described restarted system could nt repro guess something nt get updated seems like chrome returning change chrome pulled result cache returned firefox example", "d": "8/2016"}, {"body": "seeing jquery make second xhr request getting completion event kind", "d": "8/2016"}, {"body": "trying create simple nonjquery equivalent see missing events far go johntron take look seems like creating second request showing", "d": "8/2016"}, {"body": "dmethvin ah ok thought remembered reading jquery custom behavior make work like caching response initial request guess browser behavior definitely help creating native example create bug report chrome looks like link posted blocked way know specs regarding behavior client checked proposal describes server proxy behavior nothing clients trying determine chrome change reason regression seems like lot applications could break", "d": "8/2016"}, {"body": "yeah reason blocking one nt copy cryingcatface shows owned seems think something wrong example basically example made xhr request logging onload onerror onreadystatechange onabort time logging event current xhrstatus page load made one request set timeout second request looked chrome release notes briefly nt see anything obvious added xhr breakpoints came handy see making requests closest saw claims happened sync xhr", "d": "8/2016"}, {"body": "yeah think submit bug report chrome native proof thanks help dmethvin really appreciate", "d": "8/2016"}, {"body": "johntron post link back chromium ticket thanks", "d": "8/2016"}, {"body": "bug report chrome", "d": "8/2016"}, {"body": "think might somehow related serviceworker nt see reason right chrome team touch xhr code produce new bugs", "d": "8/2016"}, {"body": "hi see similar problem response also response chrome callback second xhr request url returns probable related races chrome cors functionality case break debugger seconds xhr request performed callback called", "d": "8/2016"}, {"body": "also consider purposes one would nt ponyfill", "d": "8/2016"}, {"body": "thought still supported environments fails things look good", "d": "8/2016"}, {"body": "yup changes required case smaller sure phantomjs supports objectcreate", "d": "8/2016"}, {"body": "sizzle already algorithm use fast paths simple selectors done performance tests event delegation jsperfcom longer available ca nt link tests looked fine perf test back statement take long time besides nt understand algorithm like submit pr happily take look sure would work way think would", "d": "8/2016"}, {"body": "timmywil mobile phone filters class takes second every trigger computer ms filters much real project filters n example processing filters takes seconds every trigger part nt understand implementation overriddes fnon fnoff works fast nt think merge without code changing", "d": "8/2016"}, {"body": "timmywil added working implementation first comment example using course real implementation coveraging cases bigger example real implementation big distribute separated module module overrides fnon fnoff said keep order handlers calling wo nt break api", "d": "8/2016"}, {"body": "understand see added code could check rebindings handlers would break existing code relies handler getting executed binding valid due possibility side effects makes change impossible also still real use case ca nt think good reason many bindings handler would indicate problem user code jquery first step figuring problem nt done yet nt foresee us making change reasons free put optimization code suspect bulletproof way restructure code still solve whatever use case addressing", "d": "8/2016"}, {"body": "would break existing code relies handler getting executed binding nt understand mean mean order executing example handlera binded handlerb called first problem keep order want still real use case application content element content defined user something content changed many times app starting add handlers content handlers works great nt need care content content convenient handlers work slow wrote implementation optimization works faster filters even filters optimizitation never works slower also nt forget code executing every trigger", "d": "8/2016"}, {"body": "think approach easy limited cases exampe single id class selector listening becomes large difficult manage generalized features jquery supports event handling give ideas try run unit tests think easier trying describe difficulties think present think code end large would unlikely land core directly however identify simple hooks allow plugin could discuss adding", "d": "8/2016"}, {"body": "per meeting decided support animating attributes attributes settable css near future use css animate work around override step function", "d": "8/2016"}, {"body": "far making plain object support official ticket", "d": "8/2016"}, {"body": "wontfix page updated showing stage pushed tag nt updated yet close ticket edit wiki page needed", "d": "8/2016"}, {"body": "yey", "d": "8/2016"}, {"body": "pr", "d": "8/2016"}, {"body": "breaking jqueryui draggable resizable", "d": "8/2016"}, {"body": "way upgrading fixed problem facing weird widthwidth line removed", "d": "8/2016"}, {"body": "sorry resizable draggable right upgrading jquery jquery resizable broken using css transform scale jquery ui", "d": "8/2016"}, {"body": "right upgrading jquery jquery resizable broken using css transform scale jquery ui never supported transforms interactions", "d": "8/2016"}, {"body": "upgraded jquery hidden bugs gettingsetting height asymmetric due scaling transform root element chiming say positive breaking change agree different method flag added optin getting bare transformed dimensions whichever route taken please make sure height height x work symmetrically", "d": "8/2016"}, {"body": "upgrade guide still mention issue breaking change", "d": "8/2016"}, {"body": "holgerjeromin nt mention consider bug like fix jquery", "d": "8/2016"}, {"body": "mgol nt still documented otherwise people discover via breaking bugs", "d": "8/2016"}, {"body": "ticket documentation bug plan fixing", "d": "8/2016"}, {"body": "docs pr submitted close", "d": "8/2016"}, {"body": "think easier understand state short form countless code samples using different forms would stop working could introduce small barrier people starting jquery", "d": "8/2016"}, {"body": "realistically speaking going able remove nondistant future stating intent forms apis confusing hence discouraging use", "d": "8/2016"}, {"body": "rewrote api description reflect several different things including deprecations mentioned", "d": "8/2016"}, {"body": "landed docs change close", "d": "8/2016"}, {"body": "shashankanataraj seems working please take", "d": "8/2016"}, {"body": "correct changes x move x change usages x modify unit tests x create jquerymigrate issue", "d": "8/2016"}, {"body": "shashankanataraj updates", "d": "8/2016"}, {"body": "try importing react component import react component react", "d": "8/2016"}, {"body": "turns behavior standard could elaborate comment reference something still think strange array extend simply overwrites indexes instead building array unique values", "d": "8/2016"}, {"body": "standard matches ecmascript lodash", "d": "8/2016"}, {"body": "simply makes sense never never yes changing probably breaks existing code bad design begin say sooner better chances much existing code uses work expected anyway match one would expect also easy fix want sansscrollbar width use", "d": "8/2016"}]