[{"title": "splice working expected always removes last item array matter index given", "body": "parent vue component repeats child component feed item template component using emit function access von itemdeleted postssplice causing last item array removed also tried calling function similar example exactly result even console log get desired index would like removed genuine bug template code child item pretty complex even tried making absolutely minimal still result", "num": "4825", "d": "1/2017"}, {"title": "simplify use arguments object events", "body": "occasionally run situations project need data bound callback events example vue methods testhandler componentvalue args think explicitly accessing arguments object bit tedious propose creating new modifier automatically apply arguments object function final syntax would look like vue methods testhandler componentvalue already looked fairly small change compiler nt know correct word use nt allow change context maybe anyway feedback welcome desirable feature write tests create pr", "num": "4824", "d": "1/2017"}, {"title": "simplify listrendered slots", "body": "want render slot list need something like childvue elsewhere produces vue lorem ipsum dolor sit amet hello world want namespace slots eg slots starting need make computed property filters non slots iterate property instead would way vuejs sense given slot rendered list andor multiple entries like childvue elsewhere would rendered code would exactly mentioned think would greatly simplify uncommon useful practice", "num": "4823", "d": "1/2017"}, {"title": "warns", "body": "vuejs version reproduction link", "num": "4822", "d": "1/2017"}, {"title": "running vuecli first time", "body": "vuejs version reproduction link steps reproduce npm install g vuecli vue init webpack myproject cd myproject npm install npm run dev expected expect see page vuecli browser actually happening", "num": "4821", "d": "1/2017"}, {"title": "problem component rendering", "body": "vuejs version happening load object server axios vuex store computed property vue file want open vue component get following stack trace chrome console typeerror read property name null proxyrender eval vuecomponentvuerender eval vuecomponentupdatecomponent eval watcherget eval watcherrun eval flushschedulerqueue eval arrayeval eval nexttickhandler eval caused part code line expected would except maybe component doesnt show deal making user understand error occured actually happening actually complete program freezes browser click button example code behind runs see every logger console nothing screen changes", "num": "4820", "d": "1/2017"}, {"title": "shorthand binding properties", "body": "would convenient able write like think would make lot sense people already familiar shorthand objects would save lot characters people use props lot", "num": "4819", "d": "1/2017"}, {"title": "ca nt login vuejs website participate discussions", "body": "see empty login page", "num": "4818", "d": "1/2017"}, {"title": "lazy loading components resolved vue router vuecomponent nt display", "body": "vuejs version reproduction link repro code js componentsjs import vue vue function lazyloadcomponents paths let resolver return pathsreduce components path gt resolver resolve gt require resolve components path resolver vuecomponent path resolver return components let components lazyloadcomponents app user home inquiry product rental report users rentals products inquiries dashboard login export default components js routesjs import components components consolelog components const routes path component componentshome name home path login component componentshome name login path dashboard component componentsdashboard name dashboard children path users component componentsusers name users path rentals component componentsrentals name rentals path inquiries component componentsinquiries name inquiries path products component componentsproducts name products path user user component componentsuser name user path product product component componentsproduct name product path rental rental component componentsrental name rental path inquiry inquiry component componentsinquiry name inquiry export default routes steps reproduce install webpacksimple using vuecli install vuerouter create routerview appvue use lazyloadcomponents pass file names vue components without extensions use returned components vue router component paths expected resolve components use vue router vuecomponent actually happening component resolved using webpack displays blank page", "num": "4817", "d": "1/2017"}, {"title": "feature request access transition components via refs", "body": "hi wondering ca nt access transition components via fiddle would great listen transition hook programatically handle easily chained animations like misleading think good idea workaround stumbled upon cause need control timing multiple transitions within one project thanks", "num": "4816", "d": "1/2017"}, {"title": "string argument click single quote html encoded content breaks vue", "body": "vuejs version reproduction link steps reproduce call function vue instance using argument string single quote html encoded expected execution calling function vue instance actually happening vue js fails", "num": "4815", "d": "1/2017"}, {"title": "vbind getset function", "body": "sometimes connection data displays direct example need list checkboxes store checked one ids array would useful able add getset function pair vbind ability pass aditional value would called set id true clicking checkbox get id initialising perhaps extend computed property getset functions ability see", "num": "4814", "d": "1/2017"}, {"title": "svg foreignobject nt work first tag component", "body": "vuejs version reproduction link steps reproduce create component specify foreignobject first tag component look errors console output expected recognize valid tag carry actually happening look code pen notice vue looking component called foreignobject finding one gives warning interestingly inline template still seems work messing around single file component nt rendering error spit console noticed making lowercase attribute otherwise suspect would work despite warning dom output interestingly uncomment tag front tag works", "num": "4813", "d": "1/2017"}, {"title": "access array element index vue js", "body": "hello using vue js searching way get array element index without removing ps dont want iterate array", "num": "4812", "d": "1/2017"}, {"title": "vue fails render electron required", "body": "vuejs version reproduction link fairly complex repro nt time make whole repo steps reproduce install electron vue via npm create indexhtml html message var vue require vue windowaddeventlistener domcontentloaded gt var app new vue el app data message hello vue js const app browserwindow require electron let mainwindow appon ready gt mainwindow new browserwindow height width mainwindowloadurl bash electron mainjs expected message hello vue rendered actually happening nothing rendered warning produced note works epxected instead load via html stepping code versions comments appear identical actual code files different line numbers tried follow see whats going could nt figure thing could see null require case assigned empty renderer instead", "num": "4811", "d": "1/2017"}, {"title": "different behaviour value vmodel select tag dynamically adding options none yet selected", "body": "custom select component behaves differently compared simply using raw select element template custom select value null options loaded async first option automatically selected expected custom select selected value remain empty behavior using raw select template custom component simple fiddle illustrating issue uncomment option null optionid fiddle text selected optionid null select behaves perfectly fine selects option really workaround forces us add null option changes ux may related similar issues vuejs version chrome version reproduction link", "num": "4810", "d": "1/2017"}, {"title": "synchronization two variables one", "body": "vuejs version reproduction link steps reproduce would like height one element synchronised height another element contents second element change time visible linked example changes height upper blue background one changes height lower behaviour whether use expected height upper changes synchronization one moment actually happening change one next change lower height changed trigger change upper one note bug report initially question", "num": "4809", "d": "1/2017"}, {"title": "appjs boundle file incorrect injected html document", "body": "hello maybe issue opened webpack plugin page write commented notice official bootstrap site end body says add javascript plugins jquery tether near end pages right closing page looks like html last comment crashes whole page webpacked result html html see appjs injected inside comment", "num": "4808", "d": "1/2017"}, {"title": "prop change fail first time mentioned mounted", "body": "vuejs version js tablabel export default props tab data label string list type array required true default return default tab activeindex type number required true default data return tabpanels methods click index thistabpanelsforeach tabpanel gt tabpanelhide thistabpanels index show set activeindex index consolelog click thisactiveindex active index consolelog acitve thisactiveindex return index thisactiveindex mounted thistabpanels children thisclick thisactiveindex ther tab component pass click second tab class change second click look normal output like seemed change file first time pass run normal js tablabel export default props tab data label string list type array required true default return default tab activeindex type number required true default data return tabpanels methods click index thistabpanelsforeach tabpanel gt tabpanelhide thistabpanels index show set activeindex index consolelog click thisactiveindex active index consolelog acitve thisactiveindex return index thisactiveindex mounted thistabpanels children thisclick puzzled", "num": "4806", "d": "1/2017"}, {"title": "vuejs registering separate indexjs file", "body": "vuejs version latest steps reproduce simple html document logo sass components javascript jsindexjs file expected vue display navbar actually happening vue throwing nt happen indexjs code embed html", "num": "4805", "d": "1/2017"}, {"title": "vm el html comment chrome extension content script", "body": "vuejs version reproduction link steps reproduce open chrome go extensions ensure checked top right click select project directory navigate github labels page eg open chrome console look logs expected element element appears page actually happening html comment element appears page errors logged", "num": "4804", "d": "1/2017"}, {"title": "keepalive support switching component", "body": "maybe reason supported perhaps better ways achieving need explain working think need working vuikit tabs update allow preserving components states tests keepalive test keepalive different components works fine test keepalive component fails different two tests components used would expect keepalive support caching component reason behind bug vuejs version", "num": "4803", "d": "1/2017"}, {"title": "databind doesnt work", "body": "var todoapp new vue el app data displaytitle true displayaddtasks true displaytaskstatistics true displaytasks true displayprogressbar true check issue reproducible latest stable version vue using prerelease please indicate specific version using required clearly describe steps necessary reproduce issue running issues clear repro steps triaged issue labeled need repro receives input issue author days closed recommended make jsfiddlejsbincodepen demonstrate issue could start template already includes latest version vue potential ssr server side rendering issue bugs involves build setups create reproduction repository steps readme issue resolved still open hesitate close case found solution could helpful explain fixed feature request remove template provide thoughtful commentary code samples feature means product allow ca nt today make current workarounds straightforward potential bugs edge cases help avoid etc please keep productcentric vuejs version reproduction link steps reproduce expected actually happening", "num": "4802", "d": "1/2017"}, {"title": "asd", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4801", "d": "1/2017"}, {"title": "testing component", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4800", "d": "1/2017"}, {"title": "view change dispatch action work dispatch", "body": "hi author tested many times happend dispatch action methods inside firebase method please see demo video issue dont know explain exactly video projecy", "num": "4799", "d": "1/2017"}, {"title": "array syntax style binding working", "body": "vuejs version reproduction link steps reproduce use array syntax style binding described docs expected subsequent style refered array applied element actually happening first style applied none used see jsfiddle", "num": "4798", "d": "1/2017"}, {"title": "vmodel custom component behaves differently ie edge", "body": "vue version issue description based examples seen embedding checkbox custom component proxy value used emulate native behaviour checkbox radio input particularly important binding custom component array opposed boolean technique works fine firefox webkitbased browsers fails ie edge demonstration issue steps reproduce open fiddle firefox webkitbased browser check checkboxes note array selected items updated correctly open fiddle ie edge check checkboxes note difference behaviour step expected outcome array selected items raw output updated item checked actual outcome ie edge raw output displaying boolean value checked state checkboxes inconsistent thanks", "num": "4796", "d": "1/2017"}, {"title": "override compiled template using xtemplate usage", "body": "hi using components provide template inside component together script code soon provide template use xtemplate method override template even writing render function checks existing xtemplate uses found else template inside component work would super helpful would way override templates explicitly using xtemplate feature provided within html file", "num": "4795", "d": "1/2017"}, {"title": "computed property set method hit", "body": "vuejs version reproduction link steps reproduce create computed property getter setter create input field computed property expected set method get hit actually happening set method getting hit", "num": "4794", "d": "1/2017"}, {"title": "selected attribute option elements nt work", "body": "vuejs version reproduction link working vue working steps reproduce selected attribute option elements nt work expected selected attribute select value actually happening nt select value use case ca nt add default value vue data props dropdown list dynamic", "num": "4793", "d": "1/2017"}, {"title": "minor bug boolean props casting undefined gt false", "body": "vuejs version reproduction link steps reproduce simply omit boolean prop value casted expected expect property know user nt provide since required prop basically would expect previous example actually happening prop provided content casted also values like casted somewhat related guess intended using", "num": "4792", "d": "1/2017"}, {"title": "feature request allow destructuring scopedslot scope variable", "body": "nt know implementation simple example scope variable could many properties rendering usually need vue currently propsrow ideally row", "num": "4791", "d": "1/2017"}, {"title": "values unrelated inputs reseted", "body": "vuejs version reproduction link steps reproduce type something field click checkbox expected field keep value actually happening field value reseted", "num": "4790", "d": "1/2017"}, {"title": "raise error template contains interpolation string outside root node", "body": "replicate create simple component bind something immediately inside template tag tripped couple times vue simple binding outside root div gives output dom also gives error like would receive two root nodes valid reason allow bindings like root small thing might help new users scratching head like", "num": "4789", "d": "1/2017"}, {"title": "use vue component js cant change boolean object", "body": "think bug use way wont work js loadingvue \u52a0\u8f7d\u4e2d optionsloading \u52a0\u8f7d\u5b8c\u6210 optionsloading export default props options type object default loading true ld type boolean methods js function loading div options divappend thisoptions var loading windowreturnobject loading var loadingvue new vue el div data options options ld false components loading methods changeloading function thisoptionsloading thisoptionsloading thisld thisld use var optionsloading loading false var options optionsmessage page c show message var pagecdiv componentdiv div options \u52a0\u8f7d\u4e2d optionsloading \u5982\u679c\u4e0b\u9762\u7684ld\u90a3\u884c\u4e0d\u5199\u4e2a\u53d8\u91cf\u53bb\u6539\u53d8 \u90a3\u4e48\u4e0a\u9762\u7684\u4e0d\u4f1achange \u5982\u679c\u628aoptionsloading \u6362\u6210 \u666e\u901aboolean\u53d8\u91cf \u901a\u8fc7 props\u4f20\u5165\u4e5f\u6ca1\u95ee\u9898 use loadingvue vue wont show source install serve hot reload run dev bug tag loadingvue vue wont show js see demohtml srctestdemohtml keep server running dev dont open explorer url page c click button", "num": "4788", "d": "1/2017"}, {"title": "use vue component js cant change boolean object", "body": "loadingvue \u52a0\u8f7d\u4e2d optionsloading \u52a0\u8f7d\u5b8c\u6210 optionsloading export default props options type object default loading true ld type boolean methods js function loading div options divappend thisoptions var loading windowreturnobject loading var loadingvue new vue el div data options options ld false components loading methods changeloading function thisoptionsloading thisoptionsloading thisld thisld use var optionsloading loading false var options optionsmessage page c show message var pagecdiv componentdiv div options \u52a0\u8f7d\u4e2d optionsloading \u5982\u679c\u4e0b\u9762\u7684ld\u90a3\u884c\u4e0d\u5199\u4e2a\u53d8\u91cf\u53bb\u6539\u53d8 \u90a3\u4e48\u4e0a\u9762\u7684\u4e0d\u4f1achange \u5982\u679c\u628aoptionsloading \u6362\u6210 \u666e\u901aboolean\u53d8\u91cf \u901a\u8fc7 props\u4f20\u5165\u4e5f\u6ca1\u95ee\u9898 use loadingvue vue wont show source install serve hot reload run dev bug tag loadingvue vue wont show js see demohtml srctestdemohtml keep server running dev dont open explorer url page c click button waiting \u5c24\u5927 online", "num": "4787", "d": "1/2017"}, {"title": "ica nt dynamic add events tag custom grid component", "body": "company devloping grid component javaer use jsp html js question add events data props dynamic von nt want write click mouseover want like another example button component optionsbtnname methods eventbus function rowdata event var eventname eventtype var eventpos eventcurrenttargetlocalname vm trclick function something sometime emit dont kind settlement also use component javaer must write component much oh vif \u7ec8\u4e8e\u53ef\u4ee5\u5199\u4e2d\u6587\u4e86 \u9ebb\u70e6\u5927\u5bb6\u5e2e\u770b\u770b \u73b0\u5728\u5982\u4f55\u53ef\u4ee5 \u6839\u636e\u4f20\u5165\u7684props \u6570\u636e \u6211\u627e\u4e0d\u5230\u529e\u6cd5\u52a8\u6001\u6dfb\u52a0von \u60f3\u505a\u7684\u529f\u80fd\u591a\u4e00\u4e9b \u8fd8\u4e0d\u60f3\u603b\u8ba9\u7814\u53d1\u4eba\u5458\u5199\u52a8\u6001\u7684component \u6211\u5c3d\u91cf\u5c06vue\u5c01\u88c5\u6210 \u5176\u6b21\u662f\u6211\u73b0\u5728\u5728mainjs \u91cc\u628avue\u5199\u597d\u7684\u7ec4\u4ef6\u66b4\u9732\u51fa\u6765window grid gridvue \u7136\u540e\u5728\u5f15\u5165webpack\u6253\u5305\u597d\u7684js \u7136\u540e\u76f4\u63a5\u4f7f\u7528 \u8fd8\u6709\u5982\u679c\u6211\u8fd9\u79cd\u65b9\u5f0f\u5f15\u7528\u7684\u8bdd \u662f\u5426\u8fd8\u80fd\u4f7f\u7528vuerouter \u6700\u597d\u7ed9\u4e2a\u4f8b\u5b50 \u82f1\u8bed\u4e0d\u597d\u9ebb\u70e6\u5404\u4f4d\u4e86", "num": "4786", "d": "1/2017"}, {"title": "checkbox value binding vmodel present", "body": "value binded input type checkbox vmodel attribute present works radio text inputs case scenario compiled result note noted input type value correctly binded reason bug present checkboxes value also bindend attribute removed", "num": "4785", "d": "1/2017"}, {"title": "select showing correct option binding property retrieved ajax callback", "body": "initialization created event created function thisgetbyid routeparamsid thisgetallprofesiones getbyid return object backend correct indexes inside response following apellido basilico dni email franbasilico gmailcom nombre mateo profesion id nombre gasista frontend following select seems promise resolved undefined value asigned even promise resolved return profesionalprofesionid dropdown still shows empty value sometimes works sometimes thanks", "num": "4784", "d": "1/2017"}, {"title": "events triggering dom vmodel update", "body": "vuejs version recent reproduction link custom select element togglable option represent option might change realworld conditions want prevent value vue value select element sync compare value select element value vue lifecycle hook equal means corresponding option longer exists want simply set value null steps reproduce click toggle option buttons custom select element remove currently selected element top element customselect emit null value dom nt updated something else triggers dom update vue devtools worked jsfiddle would also able notice corresponding data value parent component immediately updated emitting null value prop child component updated dom updates bottom element customselectnexttick emits null value dom updated next tick expected expect emitting new value trigger new dom update docs suggest dom updated manipulating state actually happening emitting new value triggering dom update vmodel change unless wrapped thank", "num": "4783", "d": "1/2017"}, {"title": "triggered", "body": "vuejs version reproduction link steps reproduce open devtools click toggle button expected outputs actually happening outputs vue triggered triggered vue document mentions note leaving transition destroyed hook called transition finished also write demo vue works expected", "num": "4782", "d": "1/2017"}, {"title": "suggestion von slots", "body": "ties questionsuggestion closed common scenario would useful proposed solution suggestion would difficult apply suggestion limitation ran authoring reusable components ca nt add event handlers example making logout button intend reuse throughout multiple apps want allow apps override actual button element without worry handling click event call logout method slightly contrived example illustrates point would like able following logoutbuttonvue html log export default methods logout handler slot would applied components within slot button ideally also like able use component root long never ends containing one element topic sure would ever possible parent component could override button like parentcomponentvue everything would still work clicking would trigger handler current solutions knowledge currently three ways implement similar behaviour add directive wrapper element seems like obvious choice already need wrapper component work multiple named slots clutters dom useless elements logoutbuttonvue parentcomponentvue use scoped slot pass method feels like misuse scoped slots also tightly couples parentcomponent implementation logoutbutton logoutbuttonvue parentcomponentvue proposed solution could work reusable using override logoutbutton default slot wrapped another vue component knows event emit tightly coupling adding complexity want use would look little like logoutbuttonvue html log export default methods logout created catch logout event emitted component insert slot parent template logout thislogout parentcomponentvue mylogoutbuttonvue conclusion partial solution perhaps complex scenarios feel like would even cleaner using suggested syntax reasons stated think note fairly new vue overlooked anything apologize", "num": "4781", "d": "1/2017"}, {"title": "problem transition vshow list rendering", "body": "vuejs version reproduction link steps reproduce clone repo npm install dev npm run watch npm run dev time open leave animation working comment consolelog line enter animation wo nt work line removed animation wo nt appear expected rewriting bootstrap components vue animation work like actually happening", "num": "4780", "d": "1/2017"}, {"title": "scoped slot work dynamic slot name", "body": "admit might left field learning experience seems like either bug enhancement go gently see discussion even come point steps reproduce double named slot situation scope feature works fine ie parent child html get child slot text passed child scope child slot text passed child scope also dynamic slotting going like control order certain html blocks without scopes works fine parent html child slot child slot import child childvue export default data return switched true components child child computed return thisswitched return thisswitched html get child slot child slot expected mix two together dynamic slotting child scopes parent html child slot text passed child scope child slot text passed child scope import child childvue export default data return switched false components child child computed return thisswitched return thisswitched html vue least render something possibly even error nt feasible actually happening vue delivers blank page errors jsfiddles double named slots lt works dynamic slots lt works change switchedto true slots change places mix lt nt work interesting jsfiddle least renders results however dynamic slots nt work like said go easy scott", "num": "4779", "d": "1/2017"}, {"title": "failed exec lint script", "body": "vuejs version reproduction link steps reproduce clone mater success exec success exec success exec fail failed exec lint script exec fail expected actually happening vue libo npm run lint verbose npm info worked ends ok npm verb cli usrlocalbinnode npm verb cli usrlocalbinnpm npm verb cli run npm verb cli lint npm verb cli verbose npm info using npm npm info using node npm verb runscript prelint lint postlint npm info lifecycle vue vue npm info lifecycle vue vue vue lint volumestranscendcodevue eslint src build test volumestranscendcodevuesrcplatformsweexframeworkjs error identifier weexrequiremodule camel case camelcase volumestranscendcodevuebuildbuildjs error identifier camel case camelcase error identifier asciionly camel case camelcase error identifier purefuncs camel case camelcase volumestranscendcodevuebuildkarmasauceconfigjs error identifier slchrome camel case camelcase error identifier slfirefox camel case camelcase error identifier slmacsafari camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier sledge camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier camel case camelcase error identifier camel case camelcase problems errors warnings npm verb lifecycle vue unsafeperm lifecycle true npm verb lifecycle vue path usrlocallibnodemodulesnpmbinnodegypbin volumestranscendcodevuenodemodulesbin usrlocalsbin usrlocalbin usrlocalsbib usrlocalbin usrbin bin usrsbin sbin npm verb lifecycle vue cwd volumestranscendcodevue npm info lifecycle vue failed exec lint script npm verb stack error vue lint npm verb stack exit status npm verb stack eventemitter npm verb stack emittwo npm verb stack eventemitteremit npm verb stack childprocess npm verb stack emittwo npm verb stack childprocessemit npm verb stack maybeclose npm verb stack processchildprocesshandleonexit npm verb pkgid vue npm verb cwd volumestranscendcodevue npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run lint verbose npm err node npm err npm npm err code elifecycle npm err vue lint npm err exit status npm err npm err failed vue lint script eslint src build test npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err eslint src build test npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm verb exit true npm err please include following file support request npm err volumestranscendcodevuenpmdebuglog system osx java version vue libo java version java version java tm se runtime environment build java hotspot tm server vm build mixed mode", "num": "4778", "d": "1/2017"}, {"title": "custom plugin imported production mode", "body": "hello two plugins made project registered package npm installed dependency run pops error acl one plugins copied plugins folder within src imported plugin folder worked import npm work problem definitely plugin follow link two file src folder multilanguage plugin acl plugin thank", "num": "4777", "d": "1/2017"}, {"title": "feedback", "body": "using vue prior version released various components community treeview form components fan less high praise vue simplicity power versatile two way binding components strong feature complex applications competition struggling convert many clients apps public repos vue restrictions limitations applied project say disappointed vue become terms development process debugging buggy two way binding restricted due mutation warning nonsense event system improved replaced completely feel vue going right direction following vision started project simplicity yet versatile perfect alternative likes angularjs reactjs vue nt feel like seems like going different direction think try mimic others instead staying something different feels like direction changed contributors make work like angular react derailed path going hope evan rework version put vue back path vision older versions simplicity key seriously considering sticking vue developing complex applications humble opinion best regards", "num": "4776", "d": "1/2017"}, {"title": "custom input object vmodel", "body": "vuejs version reproduction link steps reproduce using object vmodel custom input try clean nt work native input cleans still printing emitted value declare properties form variable like problem solved main advantage using objects case declare form fields something wrong way bind data using vmodel objects like object values updated way normal variables", "num": "4775", "d": "1/2017"}, {"title": "lost child components falsy vif root elements", "body": "vuejs version reproduction link steps reproduce uncheck checkbox check checkbox expected expect parent child root element child component repro code actually happening lost parent root element child component repro code related issue see", "num": "4774", "d": "1/2017"}, {"title": "custom methods vueclasscomponent recognized ref", "body": "hi got error message like points line like method implemented typescript using vueclasscomponent class extends vue located line typesvuedts guess modified using generics like nt work anyone know right thanks", "num": "4773", "d": "1/2017"}, {"title": "invalid render function present self closing tag", "body": "invalid render function generated vuejs version reproduction link steps reproduce expected button text actually happening button text render function generated vuetemplatecompiler", "num": "4772", "d": "1/2017"}, {"title": "chrome von events triggered elements hidden vif", "body": "hello noticed inconsistent behavior browsers regarding events triggered dom bound hidden please check js fiddle works expected firefox chrome version click lock lock unlock callbacks executed reproduction link thank ps vue awesome thanks great work", "num": "4771", "d": "1/2017"}, {"title": "vmodel value styled checkbox nt update", "body": "vuejs version reproduction link steps reproduce check semantic checkbox expected value become true actually happening still false semantic checkbox working vue broken", "num": "4769", "d": "1/2017"}, {"title": "wrong bind vue file methods", "body": "vuejs version code vue file start export default data gt value false methods start gt consolelog return undefined expected expected undefined actually happening found change functions arrow function general function solved mean code problem think file provide including arrow funciton wrong", "num": "4768", "d": "1/2017"}, {"title": "extend options confused super options", "body": "simple case javascript const base vueextend computed return aa const sub baseextend suboptionscomputedb gt bb consolelog baseoptionscomputedb bb consolelog baseoptionscomputed suboptionscomputed true reason found line return parent object maybe replaced code like problem line need change line type like submit pr familiar code like could array things done extend parentval hope someone fix bug thanks actually commonly used set directly met bug using vueloader css module example basevue vue base import vue vue export default vueextend name mybase base color red subvue vue sub import base basevue export default vueextend name mysub sub color blue finally find computed property replaced one share fact following lines using options directly vueloader line line mentioned bug vue cause final problem", "num": "4767", "d": "1/2017"}, {"title": "props slots", "body": "hi wonder would good something like maybe already achievable via current vue functional nt find imagine rows grid component props xs sm md lg single slot looks like want something like modifier wrapped components would possible something like elementslist takes props transforms passes grid accordingly component passes props slot something like", "num": "4766", "d": "1/2017"}, {"title": "props property vue useless demo perpus", "body": "var vuecomponent props list data function return list b template list var obj new vue el test data function return list created function thislist demo work expected even use ajax obj new vue el test define vue instance defined vue component use ajax fetch list remote server vue would say list undefined work doc dome demenstration purpos vuejs version reproduction link steps reproduce expected actually happening", "num": "4765", "d": "1/2017"}, {"title": "methods executed", "body": "vuejs version reproduction link html document getdata new vue el app data return key methods getdata consolelog value key changed return change steps reproduce modify value input view console panel expected getdata method repeated although data dependency normalonly executed actually happening getdata method executed although use computed solved feel executed multiple times", "num": "4764", "d": "1/2017"}, {"title": "dynamic component vmodel", "body": "vuejs behave properly use vmodel dynamic component jsfiddle adress focus input element fiddle press key see hehavior", "num": "4763", "d": "1/2017"}, {"title": "\u7ec4\u4ef6\u7ed1\u5b9a\u51fd\u6570\u4e0d\u6210\u529f", "body": "scripts vuecomponent xinput template lt input value value von input value eventtargetvalue gt data function return value props istype function watch value function val oval consolelog val typeof thisistype lt p gt var vm new vue el demo data function return value validval function str consolelog aa return valid digtest str msg \u8bf7\u8f93\u5165\u6570\u5b57 consolelog typeof vmvalidval \u7528\u4e0a\u9762\u7684\u65b9\u5f0f\u7ec4\u4ef6xinput\u65e0\u6cd5\u83b7\u53d6\u7ed1\u5b9a\u7684istype\u51fd\u6570 consolelog val typeof thisistype \u8f93\u51fa\u662fundefined scripts vuecomponent xinput template data function return value props istype function watch value function val oval consolelog val typeof thisistype var vm new vue el demo template lt xinput vmodel value vbind istype validval gt lt xinput gt data function return value validval function str consolelog aa return valid digtest str msg \u8bf7\u8f93\u5165\u6570\u5b57 vm mount demo consolelog typeof vmvalidval \u9875\u8fd9\u79cd\u65b9\u5f0f\u5219 consolelog val typeof thisistype \u8f93\u51fa\u662f\u6b63\u5e38\u7684", "num": "4762", "d": "1/2017"}, {"title": "change behavior watchers arrays vue", "body": "vuejs version reproduction link steps reproduce click link several times observe console output expected console see add new add new time click link watchers executed behavior code vue actually happening console see add new fieldvalue two new field id value two id value new add new fieldvalue new new field id value new id value new fieldvalue two new field id value two id value new time click link watchers executed", "num": "4761", "d": "1/2017"}, {"title": "incorrect firing hooks eg mounted rendering lists components", "body": "hello question working lists components using handlers mounted destroy monitoring add remove actions components noticed remove component fire beforedestroy hook another component example html css input height width input type button height width container display flex flexdirection row test display flex flexdirection row javascript var test template props element methods deleteme emit deletemeplz thiselementid inithandler consolelog inited thiselementid deinithandler consolelog deinited thiselementid beforedestroy thisdeinithandler mounted nexttick gt thisinithandler var demo new vue el demo data lastid elements id value components test test methods deleteme id vuedelete thiselements id addinput thislastid vueset thiselements thislastid id thislastidtostring value thislastid jsfiddle example algorithm actions open development tools watching console click button check console added message inited means added component id text fired mounted hook component ok click button opposite input text first initial component fired beforedestroy hook second component console writes deinited profit beg pardon english", "num": "4759", "d": "1/2017"}, {"title": "parser fails tags one space inside tag", "body": "vuejs version reproduction link steps reproduce element one space inside tag element html initialize vue parent element expected vue initializes correctly actually happening exception thrown try adding attribute tag wrapper element nt work either changing space worked nt always control code bootstrapping vue", "num": "4758", "d": "1/2017"}, {"title": "typeerror child undefined", "body": "got odd one today doublechecked code everything looks order google turns nothing either missing something subtle obvious simply blind tripped bug using version cdn firebug reports error line reproduced one calls copy code causing import day day code new vue components mcday day data function return page parseint getqueryvariable page computed days function var orders values storestateorders days uniq pluck orders shipdate concat pluck thisshipments shipdate concat pluck thismotds date filter date gt date map date gt startofday date sort motdsbyday indexby values storestatemotds motd gt startofday motddate ordersbyday groupby orders order gt startofday ordershipdate shipmentsbyday groupby values storestateshipments shipment gt startofday shipmentshipdate relevant mount point", "num": "4757", "d": "1/2017"}, {"title": "bug dynamic binding multiple select tag", "body": "hello first thank great framework work faced issue tried use select html tag binded multiple attribute work example jsfiddle partially copy bellow html item item error log safari firefox error vue warn expects array value binding got string found root instance warn setselected componentupdated callhook anonymous function patchvnode updatechildren patchvnode patch update updatecomponent get run flushschedulerqueue anonymous function nexttickhandler promisereactionjob error typeerror bindingvaluesome function bindingvaluesome function v return hasnomatchingoption v eloptions bindingvaluesome undefined componentupdated callhook patchvnode updatechildren patchvnode patch update updatecomponent get run flushschedulerqueue nexttickhandler promisereactionjob expected option filled array selected values actually happening error reported log parameter assigned", "num": "4755", "d": "1/2017"}, {"title": "vmodel components wraps text inputs default model", "body": "vuejs version reproduction link steps reproduce checkuncheck checkboxes expected inputs checkedunchecked represent model value first paragraph bold value actually happening second custom input nt reflect nt change binded model value hi porting mobile framework vuejs provides huge set ready use ui components mobile development including custom component inputs required addition inputs appearance issue use component vmodel wraps input checkbox radio select binded default model used text inputs binds value input events believe vue recognize type input inside ok looks like way control behavior handle change event manually bind checked attribute would good kind additional modifiers vmodel directive allow us tell vue kind model inside eg etc according source code fix could pretty simple let know good idea send pr fix", "num": "4754", "d": "1/2017"}, {"title": "please look bug color link changed", "body": "please visit read description added", "num": "4752", "d": "1/2017"}, {"title": "component use vueserverrenderer vshow disabled", "body": "example result", "num": "4751", "d": "1/2017"}, {"title": "data reactivity bug component discarding change", "body": "may specific scenario found using data tree structures recursion ie parent child relations bug mutation child occurs parent receives reactivity event child components disregards updated property simplest scenario able reproduce bug fiddle reproducing problem able see root components rendered without problem however childs added cause change trigger however see reactivity still play parent parent updated childrens added parent childid", "num": "4750", "d": "1/2017"}, {"title": "keepalive include\u62a5\u9519", "body": "sos \u70b9\u51fb\u8fde\u63a5\u62a5\u9519", "num": "4749", "d": "1/2017"}, {"title": "named slot working render function", "body": "appjs mycmpjs", "num": "4748", "d": "1/2017"}, {"title": "von change randomly fails range input bound computed property", "body": "vuejs version reproduction link steps reproduce jsbin contains slider range logs value computed property bound changes log declared function expected would expect time slider changes prop logged console actually happening two different scenarios drag release slider handler aka thumb prop always logged console ie change handler fires properly times directly click want handler get prop nt logged times ie change handler fails occasions see animated gif using provided jsbin recorded google chrome osx happens safari thought thank", "num": "4746", "d": "1/2017"}, {"title": "input radio reset checked state using component", "body": "vuejs version reproduction link steps reproduce clicking radio click reset button expected one radio must keep checked reset redio clicking reset button radio must checked actually happening radio keep checked", "num": "4744", "d": "1/2017"}, {"title": "compile simple html via vuecompile method", "body": "hi got problem vuecompile method use jquerydatatables want use child row functionality details please look following link want use datatable way described link nt know implement vuecomponent method could please help issue thanks advance", "num": "4743", "d": "1/2017"}, {"title": "set data string input type number value empty", "body": "input value empty turn string type feature think number data input value empty", "num": "4742", "d": "1/2017"}, {"title": "\u7236\u5b50\u7ec4\u4ef6\u901a\u4fe1 \u7528 emit \u89e6\u53d1\u4e8b\u4ef6 \u4e8b\u4ef6\u540d\u4e0d\u80fd\u4f7f\u7528\u9a7c\u5cf0 \u53ea\u80fd\u7528\u5c0f\u5199 \u76d1\u542c\u4e8b\u4ef6\u65f6\u4e5f\u662f\u4e00\u6837 \u5426\u5219\u65e0\u6cd5\u89e6\u53d1\u6216\u8005\u54cd\u5e94", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4741", "d": "1/2017"}, {"title": "vhtml ca nt work vif", "body": "ok first mounted change data thows uncaught promise domexception failed execute removechild node node removed child node tryed sometimes found work way", "num": "4738", "d": "1/2017"}, {"title": "\u7f16\u5199 vue pluginapply function", "body": "node npm os macos sierra webpack import components name components const version const options prefix base \u524d\u7f00 const install vue opts options gt installinstalled return installinstalled true const prefix optsprefix nameforeach key gt vuecomponent components key export default version install components import vue vue import app app import basecomponents components \u63d2\u4ef6\u6e90\u6587\u4ef6\u76ee\u5f55 vueuse basecomponents prefix vue new vue el app template components app pluginapply function import vue vue import app app import basecomponents distindex \u63d2\u4ef6\u7f16\u8bd1\u76ee\u5f55 vueuse basecomponents prefix vue eslintdisable nonew new vue el app template components app \u4e0d\u786e\u5b9a\u662f webpack \u7684\u539f\u56e0\u8fd8\u662f vue", "num": "4737", "d": "1/2017"}, {"title": "\u591a\u6b21\u8c03\u7528vueuse\u62a5\u9519", "body": "\u6ce8\u518c\u4e86\u5417 \u6211\u73b0\u5728\u5fc5\u987bvueuse vuejs version", "num": "4736", "d": "1/2017"}, {"title": "history mode refresh page without", "body": "order nice looking paths without hash bang using history mode var router new vuerouter routes routes mode history however refresh page get error remove mode history go directly urls path refresh pages browser remove hash bang urls able refresh pages use direct urls path", "num": "4735", "d": "1/2017"}, {"title": "ca nt signup vuejs forum", "body": "vuejs version reproduction link steps reproduce go try signup github account expected able sign forum actually happening getting following error", "num": "4734", "d": "1/2017"}, {"title": "disabling warnings inline value attributes vmodel", "body": "hi forms generated phoenix html helpers inline value like rails use vuejs forms creating view model data fly introspecting form inputs values works fine warnings longer necessary case wonder could way disable", "num": "4733", "d": "1/2017"}, {"title": "vuecommonjs errors", "body": "hopefully day wisdom errors nt transcend common sense may dawn somebody somewhere somehow already actually bothered suggest repo seems fix error shite tracing nt stand bug reporting protocol", "num": "4732", "d": "1/2017"}, {"title": "catch errors thrown lifecycle hooks", "body": "vuejs version reproduction link steps reproduce expected expect see alert saying caught error actually happening see uncaught exception console", "num": "4730", "d": "1/2017"}, {"title": "using vif vfor string render result unexpected", "body": "vuejs version reproduction link steps reproduce use vif vfor render string value array velse also render vfor item else desc expected value array render velse string expected actually happening velse render multiple times", "num": "4729", "d": "1/2017"}, {"title": "vueconfigerrorhandler handle vuenexttick vm nexttick exceptions", "body": "app attempts catch unexpected exceptions captured reported back base use vueconfigerrorhandler vue render watch exceptions nt catch exceptions within vuenexttick vm nexttick closures interposed nexttick prototype nexttick functions catch errors feels fragile suggestion existing errorhandler used report vuenexttick vm nexttick exceptions", "num": "4728", "d": "1/2017"}, {"title": "vue view render fail", "body": "view update vue component data update view touch view update view error model number huawei", "num": "4727", "d": "1/2017"}, {"title": "bug", "body": "updating version immediately get", "num": "4726", "d": "1/2017"}, {"title": "mixins props correctly mixed registered globally", "body": "duplicates vuejs version reproduction link steps reproduce open devtools consoleerror expected props imported via mixin render without problems actually happening console throws error prop transmitted", "num": "4722", "d": "1/2017"}, {"title": "vue correctly makes hierarchy components", "body": "vue correctly makes hierarchy components enclosure components necessary example result help please problem", "num": "4721", "d": "1/2017"}, {"title": "perhaps vuejs violation status mpl", "body": "happening vue included modified htmlparserjs moreover chosen mozilla public license mpl mpl obliges following provision since vue chosen mit license vue two licenses include copy license mpl obliges considered violation mpl terms modify include copy license terms mpl avoid violating rules may necessary able distribute modified vuejs license described mit distributed possibility may differ intention expected choose apache software license instead mpl problems solved vue use htmlparserjs selecting apache software license license case want explicitly select apache", "num": "4720", "d": "1/2017"}, {"title": "fire multiple times exist others event binding", "body": "far know would fire one time however would fire multiple times dom last binding dom template example change order two buttons ie would expected behavior issue ca nt assign multiple listeners multiple doms wondering feature bug thank vuejs version latest mac os chrome reproduction link order cause fail ca nt use multiple expected btn fire one time hitting buttons fire alert three buttons actually happening btn fire multiple time btn btn fire multiple times", "num": "4719", "d": "1/2017"}, {"title": "call event child elements contenteditable div", "body": "hi code call keypress keyup keydown events child elements contenteditable div vuejs stackoverflowcontenteditable copy txt stack overflow link", "num": "4718", "d": "1/2017"}, {"title": "transition immediately finished rendering fast", "body": "vuejs version reproduction link steps reproduce click button see ripple transition transition finished ripple removed dom double click button fast could see first ripple immediately removed without transition second ripple remained dom expected act transitions actually happening mentioned", "num": "4717", "d": "1/2017"}, {"title": "element ui \u7684 popover \u548c vif \u4f7f\u7528\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u9519\u914d", "body": "", "num": "4716", "d": "1/2017"}, {"title": "jest testing feedback", "body": "migrated unit tests jest feedback webpack poorly supported reason precompile apps testing big deal though jest support snapshots support simple enough converting rendered dom json nicer standard way guess rise idea creating official testing utils new recall think jest relaunch everything test message rise time kind annoying vue rise production mode inbrowser window global variable defined adding check testing environment could help solve using min version ideal testing beside found experience using jest satisfactory heavy testing dependencies one gets installed fast watch mode awesome", "num": "4715", "d": "1/2017"}, {"title": "help checkbox directive misbehavior working intended", "body": "ca nt reproduce error anymore clue hell happened sorry", "num": "4713", "d": "1/2017"}, {"title": "maybe need better childtemplate overriding solution slot", "body": "change order parent nothing change need wrappers like css framework course wrap componet like button img complex practical works working right button img yes still resolve slot one layer like button img complex situation example button img level button img situation cuz slotxxx wrote inside pair htmltag working example write parts wrappers inside componet template make component tightly coupled slot defects ca nt change order ca nt nested still newbie vue maybe understand wrongs please favor instructions \u62b1\u6b49 \u521a\u4e0d\u5c0f\u5fc3\u8fd8\u6ca1\u5199\u5b8c\u5c31\u70b9\u5230\u4e86\u56de\u8f66 p", "num": "4712", "d": "1/2017"}, {"title": "maybe slot good idea flexible especially", "body": "", "num": "4711", "d": "1/2017"}, {"title": "boolean prop parses true empty string", "body": "issue project created repo try recreate issue appears exact problem may resolved later version vue project using still able reproduce part latest version create component prop expects type boolean passing empty string return true expect return false since empty string falsey", "num": "4710", "d": "1/2017"}, {"title": "slot emit go component", "body": "hi rencently got vuejs question dumb please excuse follow doc example provided stumbled accros something expected wanted overlay actually component slot replace main part mostly like one provided example bug example close button emit close slot footer works intended replace slot footer put another button also trigger emit close event passed back component handy presume bug otherwise demo would missleading provided reproduction link copy paste example overrided button thanks lot everything vuejs version reproduction link steps reproduce run click button nothing happen expected run click button overlay close actually happening event triggered passed component", "num": "4709", "d": "1/2017"}, {"title": "\u5173\u4e8e vif \u4e0e vfor \u7684\u4e00\u70b9\u95ee\u9898", "body": "\u5f00\u53d1\u7684\u65f6\u5019\u53d1\u73b0 vif \u548c vfor \u5982\u4e0b\u9762\u7684\u4ee3\u7801 \u5f53 counter \u5f00\u59cb\u8ba1\u6570 \u7684\u65f6\u5019 resend \u6309\u94ae\u4e0a\u7684\u4e8b\u4ef6 \u7136\u540e\u5f53 counter resend devtool \u68c0\u67e5dom \u53d1\u73b0 counter \u7684 classname \u5c45\u7136\u4e5f\u4ecd\u7136\u5b58\u5728 \u6240\u4ee5 \u731c\u6d4b\u662f\u5426 vif \u4e0e velse \u5e76\u6ca1\u6709\u9500\u6bc1\u539f dom \u53ea\u662f\u6700 dom \u6211\u8bb0\u5f97 vfor \u573a\u666f\u662f\u6211\u5728\u4f7f\u7528 vfor \u5bf9\u4e00\u4e2a \u7ec4\u4ef6\u8fdb\u884c repeat list index \u4e3a \u4e2d index vue \u7248\u672c\u662f", "num": "4708", "d": "1/2017"}, {"title": "", "body": "li ul", "num": "4707", "d": "1/2017"}, {"title": "image render improperly listrendering", "body": "new nt know vue support use vrepeat render list list unshifts new item vue reuses dom rebind data however image show old one loaded uncomfortable network slow mobile phone struggled choose way resolve develop directive togglling visibility around loaded time image vue work around shift new item new image loaded", "num": "4706", "d": "1/2017"}, {"title": "entering value text input resets unconnected select box", "body": "select list input select item enter value input box select value gets reset vuejs version amp works correctly reproduction link steps reproduce select item select list enter anything text input expected chosen item select list item stays selected actually happening select list item reset", "num": "4705", "d": "1/2017"}, {"title": "checked state bugged using checkbox checked truefalse state vuex", "body": "seems fixing bug created new bug checked binding using combination vuex states maintaining checkbox states code example checked set true false whenever active filter array seems component updated via vuex checked stated nt get updated like application state managed almost totally vuex vuejs version reproduction link howto reproduce selecting several checkboxes like brands use browser back button fallback previous states managed popstate event uses vuex actions update actively new state expected checkbox go depending previous action new current state actually happening everything get correctly updated value wise except checkbox nt honored update checked truefalse keeps previous state selecting multiple eachother navigating back forward looks like beat missing last changed checkbox code goes full github repo reading docs vuex seems best practise like work worked like charm seems really fixing bug triggered bug created", "num": "4704", "d": "1/2017"}, {"title": "generic von syntax without argument", "body": "special syntax somewhat inspired let take component example html export default methods handleevents type args consolelog event type args handleaction args consolelog action args call method event emitted following signature call methods call method event emitted usual signature mix everything store reactive property html export default data handlers handleevents action handleaction methods handleevents type args handleaction args props could allow making specialized components generic ones much easier html import modal componentsmodalvue export default name uiinputmodal props modalprops value placeholder string example expose interface component props events making specialized news propsevents premade template want take look working proof concept", "num": "4703", "d": "1/2017"}, {"title": "custom transition component triggering ignoring done inside leave hook", "body": "vuejs version reproduction link steps reproduce click section inside console see pressing button section section content leaving instantly whereas section fading pressing button section content section fading whereas content fading see hooks also triggered different order expected sections fadeinfadeout section section instead disappearing immediatly seen section section actually happening depending order elements animated differently put order problem vice versa", "num": "4702", "d": "1/2017"}, {"title": "firing selection change", "body": "vuejs version reproduction link steps reproduce use internet explorer change selection field next wo nt fire expected method called fires actually happening nothing internet explorer chrome firefox method triggered expected", "num": "4701", "d": "1/2017"}, {"title": "using modifier self mousemove event working", "body": "methods onmousemove e consolelog etarget wan na consolelog always print div synonymlistwrapper using mousemove onmousemove event target would child element li element ul element using mousemoveself onmousemove event onmousemove never triggered", "num": "4699", "d": "1/2017"}, {"title": "things arise using textarea", "body": "issue hopes see understand vuejs version reproduction link demo steps reproduce add picture delete pictures previous step next step save database expected value textarea store last store value inconsistent save database actually happening vmodel textarea store value value always save data vmodel display correct note bug way", "num": "4698", "d": "1/2017"}, {"title": "vuerouter refresh", "body": "vuejs version reproduction link deployment vue app iis refresh page spa component go error", "num": "4697", "d": "1/2017"}, {"title": "working safari", "body": "issue safari vuejs version posted issue find anything issue release notes comments works chrome firefox safari called works well chrome firefox safari function called safari ps testing osx", "num": "4696", "d": "1/2017"}, {"title": "defines name props", "body": "component properties converted name vm member variable personally think provide relevant configuration modify component property name example use following code convert name attribute componentname member variable html export default props componentname name name type string", "num": "4695", "d": "1/2017"}, {"title": "warning error", "body": "remove error webpackprodconfjs var path require path var config require config var utils require utils var webpack require webpack var merge require webpackmerge var basewebpackconfig require webpackbaseconf var extracttextplugin require extracttextwebpackplugin var htmlwebpackplugin require htmlwebpackplugin var env configbuildenv var webpackconfig merge basewebpackconfig module loaders utilsstyleloaders sourcemap configbuildproductionsourcemap extract true devtool configbuildproductionsourcemap sourcemap false output path configbuildassetsroot filename utilsassetspath js name chunkhash js chunkfilename utilsassetspath js id chunkhash js vue loaders utilscssloaders sourcemap configbuildproductionsourcemap extract true plugins new webpackdefineplugin processenv env new webpackoptimizeuglifyjsplugin compress warnings false new webpackoptimizeoccurenceorderplugin extract css file new extracttextplugin utilsassetspath css name contenthash css generate dist indexhtml correct asset hash caching customize output editing indexhtml see new htmlwebpackplugin filename configbuildindex template indexhtml inject true minify removecomments true collapsewhitespace true removeattributequotes true options necessary consistently work multiple chunks via commonschunkplugin chunkssortmode dependency split vendor js file new webpackoptimizecommonschunkplugin name vendor minchunks function module count required modules inside nodemodules extracted vendor return moduleresource amp amp js test moduleresource amp amp moduleresourceindexof pathjoin dirname nodemodules extract webpack runtime module manifest file order prevent vendor hash updated whenever app bundle updated new webpackoptimizecommonschunkplugin name manifest chunks vendor configbuildproductiongzip var compressionwebpackplugin require compressionwebpackplugin webpackconfigpluginspush new compressionwebpackplugin asset path gz query algorithm gzip test new regexp configbuildproductiongzipextensionsjoin threshold minratio moduleexports webpackconfig require shelljsglobal envnodeenv production var path require path var config require config var ora require ora var webpack require webpack var webpackconfig require webpackprodconf var spinner ora building production spinnerstart var assetspath pathjoin configbuildassetsroot configbuildassetssubdirectory rm rf assetspath mkdir p assetspath webpack webpackconfig function err stats err throw err processstdoutwrite statstostring colors true modules false children false chunks false chunkmodules false n", "num": "4694", "d": "1/2017"}, {"title": "ca nt mount created hook", "body": "vuejs version stopped working thing latest attow reproduction link gt gt steps reproduce try mount vue instance createdhook work wrap mount nexttick expected instance mounted actually happening en error thrown uncaught referenceerror c defined", "num": "4693", "d": "1/2017"}, {"title": "class applied component extending abstract component", "body": "vuejs version reproduction link codepen outer class applied component el node try comment absract true line see class applying expected outer class must applied root component element actually happening outer class applied component extends base component abstract flag", "num": "4692", "d": "1/2017"}, {"title": "vue warning error", "body": "remove error webpackprodconfjs var path require path var config require config var utils require utils var webpack require webpack var merge require webpackmerge var basewebpackconfig require webpackbaseconf var extracttextplugin require extracttextwebpackplugin var htmlwebpackplugin require htmlwebpackplugin var env configbuildenv var webpackconfig merge basewebpackconfig module loaders utilsstyleloaders sourcemap configbuildproductionsourcemap extract true devtool configbuildproductionsourcemap sourcemap false output path configbuildassetsroot filename utilsassetspath js name chunkhash js chunkfilename utilsassetspath js id chunkhash js vue loaders utilscssloaders sourcemap configbuildproductionsourcemap extract true plugins new webpackdefineplugin processenv env new webpackoptimizeuglifyjsplugin compress warnings false new webpackoptimizeoccurenceorderplugin extract css file new extracttextplugin utilsassetspath css name contenthash css generate dist indexhtml correct asset hash caching customize output editing indexhtml see new htmlwebpackplugin filename configbuildindex template indexhtml inject true minify removecomments true collapsewhitespace true removeattributequotes true options necessary consistently work multiple chunks via commonschunkplugin chunkssortmode dependency split vendor js file new webpackoptimizecommonschunkplugin name vendor minchunks function module count required modules inside nodemodules extracted vendor return moduleresource amp amp js test moduleresource amp amp moduleresourceindexof pathjoin dirname nodemodules extract webpack runtime module manifest file order prevent vendor hash updated whenever app bundle updated new webpackoptimizecommonschunkplugin name manifest chunks vendor configbuildproductiongzip var compressionwebpackplugin require compressionwebpackplugin webpackconfigpluginspush new compressionwebpackplugin asset path gz query algorithm gzip test new regexp configbuildproductiongzipextensionsjoin threshold minratio moduleexports webpackconfig require shelljsglobal envnodeenv production var path require path var config require config var ora require ora var webpack require webpack var webpackconfig require webpackprodconf var spinner ora building production spinnerstart var assetspath pathjoin configbuildassetsroot configbuildassetssubdirectory rm rf assetspath mkdir p assetspath webpack webpackconfig function err stats err throw err processstdoutwrite statstostring colors true modules false children false chunks false chunkmodules false n", "num": "4691", "d": "1/2017"}, {"title": "\u5173\u4e8echeckbox", "body": "hi truefalse", "num": "4690", "d": "1/2017"}, {"title": "things arise using textarea", "body": "vuejs version reproduction link demo steps reproduce add picture delete pictures previous step next step save database expected value textarea store last store value inconsistent save database actually happening vmodel textarea store value value always save data vmodel display correct note asked forums people say complex situation resolved know hope resolved", "num": "4689", "d": "1/2017"}, {"title": "custom events must emitted lowercase", "body": "first time opening issue happy address concerns helping someone fiddle gitter noticed oddity sorry got open console get jsfiddle demonstrate issue vuejs version reproduction link steps reproduce register custom event listener component emit event callback triggered emit new event callback triggered expected events emitted match case custom event trigger callback caveat noted docs actually happening event triggered unless lowercase", "num": "4688", "d": "1/2017"}, {"title": "servercachekey generation vuex store", "body": "working vue application ssr lot pages components driven data coming contentful cms fed like implement component caching construct data currently available nt see workaround reason available called settles fires", "num": "4687", "d": "1/2017"}, {"title": "unshift array behaves unexpected way passing props", "body": "vuejs version latest reproduction link steps reproduce input value two text inputs press unshift button change values inputs press unshift expected recently inserted values prepended list actually happening values first submit prepended list description problem occurs props passed via vfor proxied local data properties rendered problem occur push method used modify array possible workaround add key vfor directive", "num": "4686", "d": "1/2017"}, {"title": "item index inside vforvif loop", "body": "interface item list based array items displayed vforvif loop like put index number visible item could vuejs expose kind counter visible items guess vuejs info internally would nice expose thanks sorry something already done see", "num": "4685", "d": "1/2017"}, {"title": "click reset button vmodel change", "body": "click input value empty vmodel still old value code", "num": "4683", "d": "1/2017"}, {"title": "vmodel every html tags", "body": "hello possible add vmodel tag example add tag use contenteditable attribute bad thanks", "num": "4681", "d": "1/2017"}, {"title": "ssr update warning message runtimestandalone builds", "body": "currently ssr warn like standalone build used ssr bundle vueserverrenderer using standalone build vuedistvuejs serverside rendering recommended use commonjs build vuedistvuecommonjs instead code run production mode setting nodeenvproduction server renderer supports template option regardless build using new build introduced vue probably read vueserverrenderer using standalone build vuedistvuecommon js serverside rendering recommended use runtimeonly commonjs build vuedistvueruntimecommonjs instead code run production mode setting nodeenvproduction server renderer supports template option regardless build using", "num": "4680", "d": "1/2017"}, {"title": "type\u4e3anumber\u7684input\u8868\u5355\u7ed1\u5b9a\u6570\u636e\u540e\u8f93\u5165 \u5f00\u5934\u7684\u6570\u5b57\u65e0\u6cd5\u4fdd\u7559", "body": "vuejs version vuecli vue reproduction link steps reproduce expected \u9700\u8981\u8f93\u5165 actually happening \u5b9e\u9645\u4e0a\u7ed3\u679c\u5374\u662f \u8bf4\u660e \u7528type tel number \u662f\u5141\u8bb8\u9996\u4f4d\u6570\u5b57\u4e3a \u7684", "num": "4679", "d": "1/2017"}, {"title": "devtools development defined", "body": "development \u6539\u6210nodeenv development defined \u9519\u8bef", "num": "4678", "d": "1/2017"}, {"title": "things arise using textarea", "body": "vuejs version reproduction link demo steps reproduce click left add picture add two remove front one expected find textarea data changed value shown start finish last one removed reason vmodel enter end textarea vuex current value stored contents inside result actually happening pictures textarea correspond one another textarea contents vuex stored inside contents time preservation database popup tips different data saved data case less preservation database poor performance page user clicks back forth operation possible previous step next step save database product demand also used method calculation assignment first problem following prompts least enter judgment ten words input ten words contents emptied click delete textarea appear two page refer link forms note asked forums people say complex situation resolved know hope resolved", "num": "4677", "d": "1/2017"}, {"title": "prop validation work correctly native constructors", "body": "binding value child value created native constructor validate correctly printing following console created jsbin demonstrate behaviour", "num": "4676", "d": "1/2017"}, {"title": "convenient operator hero address street instead vif hero amp amp heroaddress", "body": "hello vue lovers today realized something really miss vuejs liked operator explained good give quick example everybody knows problem get hero async want display subproperty like hero yet loaded get error like usually make something like socalled operator something like statements us really convenient way possible integrate something like vuejs would amazing", "num": "4675", "d": "1/2017"}, {"title": "post product created vuejs", "body": "hello vuejs vuerouter vuex helpers things super helpful awesome create online javascript editor vue post tool post explain people fast web apps vue golang link playcodeio", "num": "4673", "d": "1/2017"}, {"title": "textarea bind bug", "body": "vuejs version vuejs reproduction link english good issue also issued perhaps express clearly questions forum website issued problem almost week passed answered anxious waiting project online yet although small problem optimization point page performance think important business code complex first made gif link demo connection code know use page problem bug understand gif animation problem put array json object package number pictures address description information saved vuex inside page variable data piclist vuex corresponding know use page problem bug understand gif animation problem put array json object package number pictures address description information saved vuex inside page variable data piclist vuex corresponding uploaded picture picture address description information described push piclist page change inserted dom picture information textarea picture horizontal scrolling current selected picture used vmodel itemdescript bind textarea data changes vuex storage content textarea value value samei would like database data storage time steps reproduce test uploaded less equal three pictures problem picture iscroll rolling three pictures bound iscroll plugin three pictures strange fourth picture outside screen mobile end page fit upload total five pictures first three pictures described fill fourth also wrote fifth write time went back first one picture deleted set delete picture automatically move selected picture describe pictures write picture display textarea content time found description fifth picture although written fourth information displayed strangeat time textarea set display found textarea show exactly console piclist vuex corresponding data display correct page display normal expected actually want get result upload picture inserted page insert corresponding textarea dom editor user operation stepbystep must filled textarea ten contents word select operation next step meet requirements described order select next map delete operation selected position current image target first image meet requirements images uploading pictures delete pictures user edit textarea content save database want textarea content picture switch previous step next step switch content change save database actually happening described problems know clearly described know used wrong problem strange thing happened really hope someone answer question really places answer know write demo vue extension sites vue beginner one answer question tell write online vue example code also ok way", "num": "4671", "d": "1/2017"}, {"title": "freshly installed nodemodules error", "body": "developing vuejs couple weeks tried deploy production ran issue wanted test different system rebuild dependencies npm install however npm run dev nt work anymore nt change anything packagejson webpage gives following errors running vue development mode make sure turn production mode deploying production see tips unknown referenceerror h defined proxyrender eval vuecomponentvuerender eval vuecomponenteval eval watcherget eval new watcher eval vuecomponentvuemount eval vuecomponentvue mount eval vuecomponentvue mount eval init eval createcomponent eval logerror possible", "num": "4670", "d": "1/2017"}, {"title": "get infinite update loop warning data watching nan", "body": "think caused see", "num": "4669", "d": "1/2017"}, {"title": "arrayprototypesplice would trigger view update", "body": "error please see", "num": "4668", "d": "1/2017"}, {"title": "contents component slots early rendered", "body": "vuejs version reproduction link first second steps reproduce open two jsfiddle expected show items seconds u click run button actually happening firstly sorry poor english frist jsfiddle codes run successfully show items seconds u click run button second jsfiddle codes run failed typeerror try read property length null difference two jsfiddles line first jsfiddle put bar component slot foo second one itemslength instead bar component bar component render itemslength nothing else however different behaviors u change line jsfiddle items run successfully clearly vue reads properties sending slot fragment components u set null bar vif foo bar rendered set array items u output property null guess bug special design behavior slot", "num": "4667", "d": "1/2017"}, {"title": "class instance working computed definition", "body": "hi code javascript class people constructor name lastname age thisname name thislastname lastname thisage age class computed filteredpeople return thispeoplefilter person gt class data constructor thissearch thispeople new people santi aguilar new people paito moreno new people javier florian new people luisa cordoba class app constructor thisel app thisdata new data thiscomputed new computed var app new vue new app get following error happens methods class always defined nonenumerable implemented code solve javascript function getobjectkeys obj var keys objectkeys obj function initcomputed vm computed var keys getobjectkeys computed var index keys var key keys index istanbul ignore would think nt tested computed definitions problem also make filter keys always returns constructor object pd know use plain object use classes vuejs would way thanks", "num": "4666", "d": "1/2017"}, {"title": "extend template using vueextend", "body": "works well think way extend corresponding template without changing scope example like achieve like renamed confused current slot implementation title form inputs go save delete data return title base title apiurl null record methods saverecord axiospost thisapiurl thisrecordid deleterecord axiosdelete thisapiurl thisrecordid const personform baseformextend template data return title title apiurl apimy record id name age methods incage thisrecordage js merged usual base template blocks replaced new ones compiling template everything works within scope changed different wordsoptions api make sense better way intact vue principles end results", "num": "4665", "d": "1/2017"}, {"title": "vue changing typed arrays", "body": "vuejs version fiddle links reproduction link steps reproduce enter value first input box array value changes enter value second input box array value change expected value changed within typed array vue actually happening value typed array changing", "num": "4664", "d": "1/2017"}, {"title": "", "body": "\u4f7f\u7528vuerouter\u7684\u94fe\u63a5\u65f6\u53d1\u73b0 \u8fd9\u4e2a\u7ec4\u4ef6\u4f1a\u4e0d\u65ad\u521b\u5efa\u53ea\u8981\u5bfc\u822a\u53d1\u751f\u53d8\u5316\u5c31\u4f1a\u521b\u5efa\u4e00\u6b21thisuid\u5728\u53d8", "num": "4663", "d": "1/2017"}, {"title": "delimiters single file components", "body": "delimiters single file components working component vue custom message export default name mycomponent delimiters data return message component", "num": "4661", "d": "1/2017"}, {"title": "enter key handler select elements", "body": "vuejs version reproduction link steps reproduce assign event handler select element override default behavior opening element see expected would expect keyhandler method fire select element focus enter key pressed actually happening enter key presses select elements handled listener keys appear work fine see jsfiddle easy reproduction set focus select element press keyboard key handler called pressing enter key impact default behavior browsers enter key expand select list would like submit form data consistent inputs form behavior adding prevent modifier inline handler nt appear override behavior", "num": "4660", "d": "1/2017"}, {"title": "finding vmodel array works inlined", "body": "vuejs version reproduction link steps reproduce create list form inputs value needs found array expected able extract logic finding function actually happening works logic inline sure bug intended behavior", "num": "4659", "d": "1/2017"}, {"title": "strange binding behaviour", "body": "vuejs version reproduction link steps reproduce change input value click button value rolls back expected input value must touched actually happening input value rolls back origin value remove vbind disabled button works needed nothing happened", "num": "4658", "d": "1/2017"}, {"title": "scope ofn fninvoker", "body": "function fninvoker return function ev var single argumentslength single ofn ev ofnapply null arguments scope ofn different single", "num": "4656", "d": "1/2017"}, {"title": "modifier von except last one nt work one modifier used von multiple elements", "body": "vuejs version reproduction link steps reproduce clicks element expected event handler removed first click actually happening event handler except last one modifier removed", "num": "4655", "d": "1/2017"}, {"title": "textarea element default value bug vmodel bound array", "body": "hope textarea element default value blank textarea default value set textarea default value", "num": "4654", "d": "1/2017"}, {"title": "feature request dynamic subcomponents", "body": "hello situation like computed local subcomponents something like tests nt work exist using wrong feasible implement specific case custom data grid row cell components thank", "num": "4651", "d": "1/2017"}, {"title": "events listeners unbound reusing nodes", "body": "vuejs version reproduction link steps reproduce click toggle select value select expected error console actually happening select trying fire change previous adding attribute one selects workaround rorc", "num": "4650", "d": "1/2017"}, {"title": "race condition data overridden computed property", "body": "vuejs version reproduction link steps reproduce click set user department click set departments expected actually happening", "num": "4649", "d": "1/2017"}, {"title": "html vue correctly updated change model performed inside timeout", "body": "hi big structure data whose content changes dynamicaly want observe tiny variables simplicity made code triggered click code call timeout order sure pending works jquery vue others finished timeout change boolean variable associated html checkbox far seems html vue correctly updated change model timeout call vuejs version reproduction link provided codeexample click html checkbox timeout set called checkbox variable value changed code checkbox var vm new vue el test data checkbox true methods click function windowsettimeout function vmcheckbox true expected expect checkbox updated setting value actually happening variable correctly updated html checkbox", "num": "4648", "d": "1/2017"}, {"title": "uncaught typeerror arr function", "body": "choose approved choose reason open console try choose steps", "num": "4647", "d": "1/2017"}, {"title": "checkbox unchecking programmatically", "body": "expected behaviour one second counter equal checkbox must unchecked", "num": "4645", "d": "1/2017"}, {"title": "vfor data datas error", "body": "vuejs version vuejs old version also problem reproduction link jsfiddle steps reproduce error expected success compile template think variables parentheses like parameters vfor attach data wrong one parameter actually happening", "num": "4643", "d": "1/2017"}, {"title": "timing gap transitions", "body": "resolved gap still occurs repro", "num": "4641", "d": "1/2017"}, {"title": "vuetemplatecompiler compiling correctly", "body": "vuejs version specifically vuetemplatecompiler reproduction link steps reproduce im using vuejs works fine vuetemplatecompiler soon moved project compiler updated get errors compiled webpack script expected errors actually happening property method v defined instance referenced render make sure declare reactive data properties data option something need script vue files work", "num": "4640", "d": "1/2017"}, {"title": "safe navigation operator null property paths", "body": "feature request problem accessing data view template expression null object used like view rendered displayed value blank suppose template expression involves property path next example displaying name null book would throw null reference error typeerror read property name null workaround find workaround using conditional block like bookname abcd solution use safe navigation operator elvis operator similar angular help reducing lot conditional tags complex code", "num": "4638", "d": "1/2017"}, {"title": "use import throw error", "body": "vuejs version steps reproduce newest vuecli init webpack project import components npm run dev look expected console panel report prompt error message actually happening browser display blank throw error", "num": "4637", "d": "1/2017"}, {"title": "warning duplicated options", "body": "see repeatly defined option twice last one overwrite first one warning nt know matter error said defined cause actually defined", "num": "4636", "d": "1/2017"}, {"title": "property nt work using camelcase name custom template see example code", "body": "property testdata wo nt work unless changed testdata anything wrong camelcase miss something thanks lot vuecomponent test template hello testdata props testdata var app new vue el root", "num": "4635", "d": "1/2017"}, {"title": "missing data requested gracefully handled", "body": "note bug report believe behaviour may expected design probably follows best practices js case please close issue maybe treat feature idea vuejs version reproduction link steps reproduce call html code element defined yet crashes script jsfiddle example console information expected exception would caught gracefully ignored actually happening untaught typeerror stops execution script different account cases data provided asynchronously though api call instance available yet js script starts workarounds yes define defaults consumed calls actual data available leads lot code potentially amount data largecomplicated", "num": "4634", "d": "1/2017"}, {"title": "conditionally keepalive component cache goes wrong include prop dynamically changes", "body": "vuejs version vuerouter reproduction link steps reproduce b c back b back b c back b expected b cached enter activated lifecycle component b cached actually happening b cached mounted new one component b b cached", "num": "4633", "d": "1/2017"}, {"title": "space item index vfor loop work", "body": "expect output actually output", "num": "4632", "d": "1/2017"}, {"title": "\u7236\u7ec4\u4ef6\u5f02\u6b65 set \u5b50\u7ec4\u4ef6\u83b7\u53d6\u4e0d\u5230", "body": "\u7236\u7ec4\u4ef6\u5f02\u6b65 set \u5b50\u7ec4\u4ef6\u83b7\u53d6\u4e0d\u5230", "num": "4631", "d": "1/2017"}, {"title": "vif css empty", "body": "one vif empty work vuejs version reproduction link", "num": "4630", "d": "1/2017"}, {"title": "vue filter causes render error raw defined", "body": "vuejs version reproduction link fiddle actually happening custom filter app sample fiddle calculate time difference given datetime string data comes api thats based laravel component gets initialized error console sayin screenshot error remove filter everything workes fine thats want could also happen first rendering fine update date dropbox upload time update error app thx", "num": "4629", "d": "1/2017"}, {"title": "catch vue events similar way lifecycle hooks", "body": "hello proposal feature basically boils one thing catching vue events triggered way hook lifecycle events fiddle clearly show mind catching outside methods without using listener directly added vue instance called everytime event triggered think could also described custom lifecycle event perspective think fits nicely vue current design convenient way catch events multiple situations something like would make listening bigger internal changes component little cleaner think", "num": "4628", "d": "1/2017"}, {"title": "unit test warn infinite update loops leaves warning", "body": "changes scheduler code noticed warn infinite update loops test succeeds following tests fail contain following think leading false understanding happening probably warn infinite update loops clear debugging messages shown later", "num": "4627", "d": "1/2017"}, {"title": "vue file string variable include alert", "body": "use vuecli establish project webpack template file js variable include alert error code file like finally found happed include try write variable include like js let export default name hello data return alert bug use vue version thanks", "num": "4625", "d": "1/2017"}, {"title": "vmodel working properly korean chars ie", "body": "vuejs version reproduction link open link please steps reproduce type english characters input click search button see alert popup every characters typed input filed put korean characters english characters copy amp paste korean character input filed work properly types korean characters hit search button see alert pops english characters value input freezing modified via input filed expected alert properly characters including korean characters actually happening alert english characters typed korean characters vmodel looks like freeze typing korean characters vmodel change even english characters typed guess connected korean ime issue situation bit different cause happens tested though chrome amp ff works properly intended opinion reason issue unfinished compositing characters difference c amp p typing korean characters copy amp paste finishing compositing typing finishing compositing please check", "num": "4624", "d": "1/2017"}, {"title": "tool generate document vuejs", "body": "something like ngdoc vuejs", "num": "4623", "d": "1/2017"}, {"title": "visjs network amp vuejs working properly", "body": "hi using vis network vuejs created two simple applications none working properly first app problem delete first node nodes deleted browser console errors vuecomponent ovsnetwork template mytmp data return network null nodes id label id label id label id label id label edges options manipulation enabled true initiallyactive true deletenode function deletedata callback callback deletedata container second app problem applying method wrong labels displayed see example click button vue method executed updatedata var nodes id label id label id label three nodes reason nodes label browser console errors sure problem vue vis", "num": "4622", "d": "1/2017"}, {"body": "issue somebody please outline common cause problem", "d": "1/2017"}, {"body": "hello kgrosvenor thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "think proposed syntax quite confusing static inside loop nt make use represent think use case render function would make much sense since get full javascript flexibility really nt think adding micro syntax slots good idea", "d": "1/2017"}, {"body": "thank interest project please read contributing guide opening new issues warning pretty clear warning triggered unexpected scenario please provide repro give bit details expected behaviour", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help simply trying access property object make something like use computed property makes sure access existing object", "d": "1/2017"}, {"body": "see", "d": "1/2017"}, {"body": "chrome macos", "d": "1/2017"}, {"body": "looking archives old forum read", "d": "1/2017"}, {"body": "see created second account deveclipse looks like still nt read issue reporting guidelines relevant docs case missed case using webpack check please next time open post forums instead ask help come back found bug narrowed reproduction thanks", "d": "1/2017"}, {"body": "ca nt really post forums ip blocked nt know even registration blocked read documentations see code resolve gt require resolve resolver variable passed well guess try import function", "d": "1/2017"}, {"body": "reached help ip block", "d": "1/2017"}, {"body": "uhm posted hours ago", "d": "1/2017"}, {"body": "well good thing post right thanks", "d": "1/2017"}, {"body": "transition components abstract nt show parent chain refable intentional keep declarative possible use case directly use listener template", "d": "1/2017"}, {"body": "use listener template nt want couple transition action one way emit event trigger animation callback like component definition methods triggeranimationa change state trigger animation triggeranimationb thistriggeranimationa animationafinish gt change state trigger animation b correct seemed little verbose way go thanks", "d": "1/2017"}, {"body": "think would work definitely looks better refbased solution", "d": "1/2017"}, {"body": "bug gets parsed html parser vue sees valid expression want pass literal function entity encode ampersand want pass literal function escape javascript expects", "d": "1/2017"}, {"body": "fyi supports checkboxs bound arrays box", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "would binding type checkboxes work radio buttons storing selected radio item value array removing others values leaving values array intact might use store selections", "d": "1/2017"}, {"body": "andrisi unlikely radio buttons represent single value definition think better stick data structure aligns form inputs designed", "d": "1/2017"}, {"body": "form inputs display might represent ideal data structure home selectable features use checkbox features mutually exclusive house flat door colors use radio button still like store features list suites relational model vuejs data based surprise need workaround initial feature request would come handy setget functions vmodel", "d": "1/2017"}, {"body": "form inputs definitely represent least subpart data structure since already achievable computed setters nt think need add anything new api", "d": "1/2017"}, {"body": "posva yes requires us create computed property radio group getset function pair would support id param solution could cleaner lots radion button groups", "d": "1/2017"}, {"body": "computed property would gather getters setters together would imo cleaner edit nt know code writing looks like imagine", "d": "1/2017"}, {"body": "maybe nt understand solution computed property getset function radio group say doable course nt simpler add vmodel computedwithparam single computedwithparam one set id val one get id function", "d": "1/2017"}, {"body": "nt see difference think add jsfiddle show trying groups enough example", "d": "1/2017"}, {"body": "store form data structure natural form input bindings likely object create single computed property translates whole data structure desired format eg array", "d": "1/2017"}, {"body": "sure work somehow wanted avoid intermediate step lots code translate back forth single view data require even mingling sending data server data come props array manually added computed property", "d": "1/2017"}, {"body": "posva let say something based controls even implement set function instead vmodelset setprop called setprop name value", "d": "1/2017"}, {"body": "talking ofc looks silly simple example imo better approach would using object instead array keep mind computed setters getters generated hope helps cheers", "d": "1/2017"}, {"body": "tag child tag checkout updated fiddle", "d": "1/2017"}, {"body": "right understand bit lazy example still highlights issue said problem nt happen foriegnobject nt first tag component goes without saying would nt work outside svg tag app svg specified component calls component mentioned", "d": "1/2017"}, {"body": "please provide minimal reproduction fiddle", "d": "1/2017"}, {"body": "absolutely one shows problem see error console notice child component inside svg tag exact fiddle except foreignobject wrapped tag nt exhibit issue", "d": "1/2017"}, {"body": "reopening since sure expected maybe added list", "d": "1/2017"}, {"body": "text removed form ask question issue list repo exclusively bug reports feature requests simple questions please use following resources read docs watch video tutorials ask gitter chat room ask forums look forask questions stack overflow", "d": "1/2017"}, {"body": "lol resolved", "d": "1/2017"}, {"body": "default npm export runtimeonly build nt support compiling templates fly better yet may want use electron vue boilerplate", "d": "1/2017"}, {"body": "see thanks trying lazy avoid webpack since nt technically need electron would solve problem thanks info", "d": "1/2017"}, {"body": "behaviour different binding instead workaround use computed property custom select use directive instead", "d": "1/2017"}, {"body": "thank workaround worked great quite sure works anywhere docs explained", "d": "1/2017"}, {"body": "noticed neither custom select workaround demonstrated posva handle null option properly contrary originally stated first comment original select value null properly selects selected options added dynamically initially however toggle blue back selected show empty combobox instead selected edit completeness found workaround problem well would nice component developers updated fiddle following workaround see", "d": "1/2017"}, {"body": "actually value select dom element always string instead null empty string", "d": "1/2017"}, {"body": "use content displayed retrieving div size", "d": "1/2017"}, {"body": "appears webpackhtmlplugin issue please file issue", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen demonstrate issue could start template already includes latest version vue", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "hello sorry added id end happen also correct id", "d": "1/2017"}, {"body": "solved error renaming indexjs file looks like bug", "d": "1/2017"}, {"body": "update webpack config", "d": "1/2017"}, {"body": "hi thanks filing issue simply key components work expected", "d": "1/2017"}, {"body": "fnlctrl got working thank much", "d": "1/2017"}, {"body": "please follow issue reporting guidelines opening new issues", "d": "1/2017"}, {"body": "hello lyquocnam thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "array syntax accept array style objects strings top level value direct css string", "d": "1/2017"}, {"body": "ooops apologies", "d": "1/2017"}, {"body": "added ieedge virtualbox running edge windows screencap reference errors popping console either edit noticing clicking john returns false extremely odd behaviour", "d": "1/2017"}, {"body": "worth pointing worked fine vue lt", "d": "1/2017"}, {"body": "although nt quite understand use case something like", "d": "1/2017"}, {"body": "hm quite solve issue use case want compile whole application templates within one single component file style script template sections deliver within package easier customization template modifications needed nt go directly components rather create xtemplate within html file overrides already provided template onecomponentfile idea could solve", "d": "1/2017"}, {"body": "using single file components", "d": "1/2017"}, {"body": "application using single file components yes", "d": "1/2017"}, {"body": "case possible singlefile components templates precompiled build time also allowing users arbitrarily overwrite component template sounds messy maybe consider using slots allow content composition instead", "d": "1/2017"}, {"body": "computed properties readonly want format values input create component put formatting logic", "d": "1/2017"}, {"body": "stefanosandes computed properties readonly", "d": "1/2017"}, {"body": "working intended setter hit argument would would tell field actually changed want computed property every field single property bulk", "d": "1/2017"}, {"body": "intended behavior use nonminified build see warning fixed", "d": "1/2017"}, {"body": "hmm list using generate option elements computed property constantly changes based several computed properties simply want first value selected means add another watcher computed property keep preselected value correct seems like lot work something worked simply", "d": "1/2017"}, {"body": "vorror quite getting nt first option example static option dynamically rendered based computed property say able hook", "d": "1/2017"}, {"body": "since give prop boolean type normal value missing prop bothers value passed prop cast boolean getting error happens", "d": "1/2017"}, {"body": "posva sometimes required use modals parent control state modal prop value prop parent trigger event", "d": "1/2017"}, {"body": "znck yeah remind read something similar able explicitly pass type prop probably feature", "d": "1/2017"}, {"body": "able explicitly pass type prop probably feature passing works bug prop provided user component naturally expected", "d": "1/2017"}, {"body": "nt think asking type missing prop false intuitive keep prop missing use type", "d": "1/2017"}, {"body": "znck yeah purpose would called edit nevermind issue", "d": "1/2017"}, {"body": "posva honestly way missing prop become would expect missing guess matter opinion thing pointed values like casted true also kind weird javascript empty string falsy value", "d": "1/2017"}, {"body": "boolean casting follows rule boolean attribute presence value casted true absence means false personally think bad idea differentiate state boolean props", "d": "1/2017"}, {"body": "mistaken actually already possible using vueloader", "d": "1/2017"}, {"body": "yes templates", "d": "1/2017"}, {"body": "working tests vueloader component using code works fine specific case rising syntax errors tried well", "d": "1/2017"}, {"body": "original object destructuring syntay nt require vbind either", "d": "1/2017"}, {"body": "facepalm nt know head sorry guys thanks", "d": "1/2017"}, {"body": "every rendering faithfully patch real dom virtual dom render function returns case returning virtual dom something like vue correctly resets input value template single way changing content input update data model might need two way binding update vm fixed", "d": "1/2017"}, {"body": "herringtondarkholme came say exactly variable method changed input value changed therefore never reset never set begin need use directive bind input values data model", "d": "1/2017"}, {"body": "makes sense thanks", "d": "1/2017"}, {"body": "thanks using vue read correct simonmurdock proposing vue allow multiple nodes eg text node element node component root right best knowledge afraid probably scope since code base strong assumption component root single node supporting text node outside root node would require total rewrite also introduce calamitous breaking changes", "d": "1/2017"}, {"body": "herringtondarkholme allow multiple nodes warn binding output placed root outside div code would expect error saying title rendered outside root node currently runs produces output", "d": "1/2017"}, {"body": "simonmurdock record add reproduction jsfiddle thanks", "d": "1/2017"}, {"body": "nt think replicate jsfiddle think webpack required replicate nothing change generated stuff immediately opening tag like", "d": "1/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described case asking question chat room forum beloved stackoverflow issue list repo exclusively bug reports feature requests thanks support", "d": "1/2017"}, {"body": "think bug", "d": "1/2017"}, {"body": "think bug please provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "1/2017"}, {"body": "reproduce particular scene u clone github try", "d": "1/2017"}, {"body": "use variable type boolean object wont work use boolean work scene", "d": "1/2017"}, {"body": "herringtondarkholme", "d": "1/2017"}, {"body": "project count reproduction reproduction minimal concise displaying issue nothing else make concise reproduction likely bug code library thus problem belongs forum issue tracker fine reproduction repo instead fiddle still concise explain result expected goes wrong", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "1/2017"}, {"body": "message created automatically mail delivery software message sent could delivered one recipients temporary error following address es deferred acmeideal gmailcom domain biomassives exceeded max emails per hour allowed message reattempted later copy message including headers received esmtps exim envelopefrom noreply githubcom id greg biomassives thu jan date tue jan dkimsignature crelaxedrelaxed dgithubcom hfrom replyto cc inreplyto references subject listid listarchive listpost listunsubscribe evan notifications githubcom replyto vuejsvue reply replygithubcom vuejsvue vue noreplygithubcom cc subscribed subscribed noreplygithubcom messageid inreplyto references subject vuejsvue ica nt dynamic add events tag custom grid component mimeversion contenttype multipartalternative boundary contenttransferencoding precedence list xgithubsender xgithubrecipient biomassives xgithubreason subscribed listid vuejsvue listarchive listpost reply replygithubcom listunsubscribe xautoresponsesuppress xgithubrecipientaddress greg biomassives contenttype textplain contenttransferencoding please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks receiving subscribed thread reply email directly view github contenttype texthtml contenttransferencoding quotedprintable please make sure read issue reporti ng guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks amp dash receiving subscribed thre adreply email directly view github mute thread", "d": "1/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "1/2017"}, {"body": "object expect see markup binding tested using latest dev branch value bound string renders properly", "d": "1/2017"}, {"body": "binding even text happens input checkbox though jan pm evan notifications githubcom wrote row object expect see markup binding value tested using latest dev branch value bound string renders properly receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "need provide reproduction otherwise nothing", "d": "1/2017"}, {"body": "seems working pen check differs client code come back needed thanks update using dynamic type inputs think might issue got warning codepen though", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "sorry evan new github issues main idea problem want edit entity getting data entity binding one property select sometimes appear selected one undefined value instead one related value retrieved callback", "d": "1/2017"}, {"body": "need actual code run identify problem familiar repro please read", "d": "1/2017"}, {"body": "works intended changing data sadly hairy behavior implementation specific would recommend using hint vue schedule updating dom manually problem vue schedules data changes watchers internally every watcher run hook get called data change gets chance captured executed wrapped change scheduled next update queue doc correctly warns changing state reason might misleading chrisvfritz idea", "d": "1/2017"}, {"body": "herringtondarkholme unless misunderstanding use case nt think even use computed properties watchers advantage updated even dom updates would made eg option removed state change initiated current user updated doc make clearer", "d": "1/2017"}, {"body": "sorry computed properties watchers part want make validity check dom changes used instead use watcher prop take account dom changes take place tick nt think use computed property want sure emit correctedverified value back parent component immediately possible", "d": "1/2017"}, {"body": "use computed property instead component still rerender emit updated value right case nt see advantage using computed property please disregard third paragraph comment nt make sense edit oh unless events emitted computed property function nt trigger rerender either case seems like duplicating state little bit think rather eat second render cycle", "d": "1/2017"}, {"body": "mean something like notice watcher parent component rather custom input using updated hook nt trigger second render cycle makes application brittle since parent component longer sole source truth example changed parent component passed dynamic props instead assigning initial data chance select could start invalid state also select would need rendered times value parent updated properly", "d": "1/2017"}, {"body": "oh see right better thanks", "d": "1/2017"}, {"body": "probably intended may missing something", "d": "1/2017"}, {"body": "yes intended behavior", "d": "1/2017"}, {"body": "explained nt make sense add listeners nt always render single element wrapper element required also take step back say slot simply proper mechanism want actual visual content expected provided parent component thing component fact providing implementation method case scoped slots actually looks like plausible solution however providing javascript method component first place simply javascript module exports method instead importing component try compose template using esoteric techniques simply import method use js import logout authservice export default methods logout point want encapsulate common markupstyling suggest allowing customizations via props instead slots", "d": "1/2017"}, {"body": "thanks insights example perhaps bit simple right importing method would better case idea behind reusable components creating provide functionality eg logout button something complex like navigation control automatically populated well default look feel using style guide apps implement components without involved implementation still override styling classes also custom elements complex scenarios scoped slots might indeed way go", "d": "1/2017"}, {"body": "please take time make reproduction jsfiddle instead sharing whole project also narrow issue appreciate thank", "d": "1/2017"}, {"body": "html item toggle export default data function return items active methods beforeenter function el elclasslistadd beforeenter enter function el elclasslistadd enter afterenter function el elclasslistremove beforeenter beforeleave function el consolelog leave getcomputedstyle el display leave function el elclasslistadd leave consolelog leave getcomputedstyle el display consolelog elclasslist afterleave function el elclasslistremove enter leave toggle function el thisactive thisactive gt thisactive transition transition linear position fixed top display block beforeenter left enter left enterleave left posva made example leave span class transition enter transition enter leave animations nothing happened span disappear", "d": "1/2017"}, {"body": "calling callback enter leave", "d": "1/2017"}, {"body": "posva using javascriptonly transitions done callbacks required enter leave hooks otherwise called synchronously transition finish immediately done callback optional used combination css obviously using css transition", "d": "1/2017"}, {"body": "remove need help please head forums open topic people help cheers", "d": "1/2017"}, {"body": "posva tested solutions neither make sense", "d": "1/2017"}, {"body": "done callback required although using css adding classes via javascript auto css transition handled vue", "d": "1/2017"}, {"body": "hi smolinari thanks report almost perfect thing missing would small reproduction jsfiddlenet similar service could add one look also failing example element parent template never closed typo code example real app well thanks", "d": "1/2017"}, {"body": "hey linusborg thorsten see put together jsfiddle missing closing tag typo corrected scott", "d": "1/2017"}, {"body": "jsfiddles double named slots lt works dynamic slots lt works change true slots change places mix lt nt work interesting jsfiddle least renders results however dynamic slots nt work scott", "d": "1/2017"}, {"body": "thanks quick resolution kind service another reason know vue great choice scott", "d": "1/2017"}, {"body": "moved relevant repository bad nt read correctly", "d": "1/2017"}, {"body": "install packages yarn good go", "d": "1/2017"}, {"body": "install yarn brew made npm broke find semver module reinstall npm fixed use yarn install package lint still exec fail vue libo npm run lint verbose npm info worked ends ok npm verb cli usrlocalbinnode npm verb cli usrlocalbinnpm npm verb cli run npm verb cli lint npm verb cli verbose npm info using npm npm info using node npm verb runscript prelint lint postlint npm info lifecycle vue vue npm info lifecycle vue vue vue lint volumestranscendcodevue eslint src build test volumestranscendcodevuesrccoreobserverindexjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent problems errors warnings npm verb lifecycle vue unsafeperm lifecycle true npm verb lifecycle vue path usrlocallibnodemodulesnpmbinnodegypbin volumestranscendcodevuenodemodulesbin usrlocalsbin usrlocalbin usrlocalsbib usrlocalbin usrbin bin usrsbin sbin npm verb lifecycle vue cwd volumestranscendcodevue npm info lifecycle vue failed exec lint script npm verb stack error vue lint npm verb stack exit status npm verb stack eventemitter npm verb stack emittwo npm verb stack eventemitteremit npm verb stack childprocess npm verb stack emittwo npm verb stack childprocessemit npm verb stack maybeclose npm verb stack processchildprocesshandleonexit npm verb pkgid vue npm verb cwd volumestranscendcodevue npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run lint verbose npm err node npm err npm npm err code elifecycle npm err vue lint npm err exit status npm err npm err failed vue lint script eslint src build test npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err eslint src build test npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm verb exit true npm err please include following file support request npm err volumestranscendcodevuenpmdebuglog", "d": "1/2017"}, {"body": "probably caused eslint configuration reproduce local machine clean clone install eslint prefer local configuration global one would like recheck eslint", "d": "1/2017"}, {"body": "check global config eslint global config make node crash exit status", "d": "1/2017"}, {"body": "believe configuration problem error message indicates eslint using local configuration confident seems path strange maybe clean cloning installing directory full permission generate different results", "d": "1/2017"}, {"body": "work vue libo node nodemoduleseslintbineslintjs src build test volumestranscendcodevuesrccoreobserverindexjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent problems errors warnings work vue libo npm run lint vue lint volumestranscendcodevue eslint src build test volumestranscendcodevuesrccoreobserverindexjs error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent error expected indentation spaces found indent problems errors warnings npm err darwin npm err argv usrlocalbinnode usrlocalbinnpm run lint npm err node npm err npm npm err code elifecycle npm err vue lint npm err exit status npm err npm err failed vue lint script eslint src build test npm err make sure latest version nodejs npm installed npm err likely problem vue package npm err npm npm err tell author fails system npm err eslint src build test npm err get information open issue project npm err npm bugs vue npm err nt available get info via npm err npm owner ls vue npm err likely additional logging output npm err please include following file support request npm err volumestranscendcodevuenpmdebuglog work vue libo eslint src build test oops something went wrong eslint could nt find plugin eslintpluginflowtype happen couple different reasons eslint installed globally make sure eslintpluginflowtype also installed globally globallyinstalled eslint find locallyinstalled plugin eslint installed locally likely plugin nt installed correctly try reinstalling running following npm eslintpluginflowtype latest savedev still ca nt figure problem please stop chat team", "d": "1/2017"}, {"body": "work eslint global config check found something call eslint", "d": "1/2017"}, {"body": "remove global path try source directory report error", "d": "1/2017"}, {"body": "hello leonardovilarinho thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help hint probably fact babelloader nt convert files plugins use classes works files", "d": "1/2017"}, {"body": "thanks feedback sorry disappointment design process pretty open alphabeta phases community plenty feedback many affected outcome final released simply bit late feedback point twoway binding change discussed many times design process nt really feel like repeating thing short story found less maintainable less flexible props events pattern recommended also particularly constructive go nt like removal particular feature project lost way respect personal impression tend believe otherwise based combined feedback community whole overall believe clear improvement nt plan bring breaking changes fix foreseeable future ps please note contribution guidelines explicitly stated issues fit general feedback like better post forums", "d": "1/2017"}, {"body": "thank reply evan", "d": "1/2017"}, {"body": "example success vue dev quasar framework refactor get framework working vue took weeks refactor quasar using well written migration guide said rough patches get also said upgrading vue like keeping toy opposed spaceship safely say efforts get going vue well worth scott", "d": "1/2017"}, {"body": "nt declare set empty object even reactive fixed", "d": "1/2017"}, {"body": "either need cast reify", "d": "1/2017"}, {"body": "weird using templates work fine", "d": "1/2017"}, {"body": "yes template works find render function compiled vuetemplatecompiler using rollup posva basically plugin template", "d": "1/2017"}, {"body": "znck tested locally updating dependencies everything works fine maybe vuetemplatecompiler outdated", "d": "1/2017"}, {"body": "share generated render function", "d": "1/2017"}, {"body": "work webpack rollup build maybe rollup plugin deps outdated", "d": "1/2017"}, {"body": "okay update moving peerdeps", "d": "1/2017"}, {"body": "compiles compiles", "d": "1/2017"}, {"body": "issue method", "d": "1/2017"}, {"body": "looks like chrome event propagated triggered div well sure anything vue meantime utilize modifier like", "d": "1/2017"}, {"body": "yes probably chrome vue patches dom faster event propagates soon event reaches divitem callback already reattached", "d": "1/2017"}, {"body": "works add keys vue reuse div instead destroy create fresh one velse part", "d": "1/2017"}, {"body": "linusborg thanks right", "d": "1/2017"}, {"body": "events styled checkbox captured semantic script modified fiddle add click event counter imo file bug semantic repo", "d": "1/2017"}, {"body": "using events instead events checkboxes trigger updates however based znck showed consider bug semantic ui styling checkbox affect click events element", "d": "1/2017"}, {"body": "encounter issue found solution using pure css version semantic ui checkbox remove checkbox call eg remove hidden class checkbox become unclickable add label tag inside even label content styled checkbox shown checkout fiddle thanks znck", "d": "1/2017"}, {"body": "vue fault use arrow function like use object shorthand syntax lt see babel transpiles code also article probably explain better", "d": "1/2017"}, {"body": "sqal right arrow function captures lexical case return undefined strict mode expected", "d": "1/2017"}, {"body": "could write since values directly available really want values updating one place able achieve scoped slots simply referring variable grid meant used inside elementlist example reference pointed doable render function nt dig since behaviour asking implicit version something already achieved doubt makes sense implement", "d": "1/2017"}, {"body": "yep looks like solution though would nice something looks simple front example kindly provided simple syntax would maybe readable actually nt know complex find children elements according props slot pass parentdefined props hard would really awesome", "d": "1/2017"}, {"body": "dorseth prefer explicit way always rely implicit way means component depends parent reusable", "d": "1/2017"}, {"body": "achieve want using render function iterate vnodes find nodes add appropriate props requires bit familiar vnode structure nt anything extra vue needs expose allow", "d": "1/2017"}, {"body": "sorry bump quick dirty solution without render function looking maybe help someone write cleaner lib html import match jquerymatchheight import grid gridvue export default props width default height default xs type string md type string lg type string elems default extra type string default childextra type string default type string default wrapper type string default components grid created thisxs thisfxs parseint thisxs thismd thisfmd parseint thismd thislg thisflg parseint thislg thismd thisfmd thisfxs thislg thisflg thisfxs mounted thissamelength gt thissame matchheight byrow false data return fwidth parseint thiswidth fheight parseint thisheight", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "templates compiled render functions entire function called whenever component updates means templates never contain side effects put lifecycle hooks instead", "d": "1/2017"}, {"body": "compiler generates different code based wether tag component native tag element vs etc treated component use render native elements wontfix use branches want render different elements", "d": "1/2017"}, {"body": "html dom \u91cc\u7684\u6a21\u677f\u5728\u88ab vue", "d": "1/2017"}, {"body": "make sure lists", "d": "1/2017"}, {"body": "thanks lot sorry invalid issue new vue migrating vue codebase vue", "d": "1/2017"}, {"body": "please consult guide api docs property solves problem questions encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "linusborg thank much worked", "d": "1/2017"}, {"body": "slightly modified test like one triggers error also pinpoint line comment describes problem", "d": "1/2017"}, {"body": "hey thanks fast", "d": "1/2017"}, {"body": "full stack trace", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "happy report building reproduction noticed bug code fixing appears caused issue go away sorry taken time thanks", "d": "1/2017"}, {"body": "note example works bound", "d": "1/2017"}, {"body": "fixed example", "d": "1/2017"}, {"body": "znck well solution current case distributable components need preserve input value radios case example custom radios", "d": "1/2017"}, {"body": "supported component read docs input components", "d": "1/2017"}, {"body": "znck examples docs text inputs otherwise modify example custom radios compatible vmodel", "d": "1/2017"}, {"body": "provide prop different name map checkbox radio option value", "d": "1/2017"}, {"body": "posva ok checked state binding wo nt work value string case makes always checked", "d": "1/2017"}, {"body": "value used input value use different name value", "d": "1/2017"}, {"body": "posva mentioned ok checkbox nt work input type radio check example", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "bug field items list defined upfront vue ca nt pick changes field consider reactive fixed demo information please read", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "1/2017"}, {"body": "thinking may design better way structure data changes reflected currently option repopulate entire tree", "d": "1/2017"}, {"body": "updated fiddle updated please refer", "d": "1/2017"}, {"body": "supermeng \u8bf7\u6309\u7167 issuereportingguidelines \u6765 \u62a5\u544a \u63cf\u8ff0\u6e05\u695a\u6f5c\u5728\u7684 bug", "d": "1/2017"}, {"body": "parent template fault", "d": "1/2017"}, {"body": "thanks undavide seems bug looking", "d": "1/2017"}, {"body": "defcc simplified example make less random click within bar see", "d": "1/2017"}, {"body": "thanks posva", "d": "1/2017"}, {"body": "posva please help check issue nt got enough time follow days", "d": "1/2017"}, {"body": "browser seems triggering change event purpose nt manually trigger event side sure though needs research undavide may already instead listening event watch slider value reliable way", "d": "1/2017"}, {"body": "actually example posted implemented slightly complex scenario building interface photoshop plugin user drags slider andor directly types number stepper routine run either user press enter key stepper easy implemented done dragging handler ie drops nt need routine constantly run slider bound value dragging number properly mirrored stepper done thanks ways binding vmodel dropping function needs called could perhaps implement kind debounce function really far ideal case thank", "d": "1/2017"}, {"body": "imagined needed computation release maybe mouseup event works well", "d": "1/2017"}, {"body": "usage incorrect fixed", "d": "1/2017"}, {"body": "oh dude thanks", "d": "1/2017"}, {"body": "hi thanks filing issue however issue tracker reserved bug reports feature requests please use gitter forum stackoverflowto ask questions thanks", "d": "1/2017"}, {"body": "expected behavior vue try cast string number type return original string fails also reasonable always get delete input value case better deal userland", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "vuejs uses internally", "d": "1/2017"}, {"body": "right", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "dom \u4e2d\u7684 html", "d": "1/2017"}, {"body": "version", "d": "1/2017"}, {"body": "\u53ef\u4ee5\u54cd\u5e94\u554a", "d": "1/2017"}, {"body": "iburning", "d": "1/2017"}, {"body": "\u6211\u7528\u7684\u662f vue", "d": "1/2017"}, {"body": "works fine update vue version fix nt open new issue reproduction", "d": "1/2017"}, {"body": "vue \u63d2\u4ef6\u7684 github \u4e2d\u90fd\u6709\u8fd9\u6837\u7684", "d": "1/2017"}, {"body": "\u6709\u7684vue\u63d2\u4ef6\u662f\u4e00\u4e2a\u7ec4\u4ef6 components\u800c\u975e\u63d2\u4ef6 pluginapply function", "d": "1/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described may import use try something seems wrong webpack setup", "d": "1/2017"}, {"body": "posva sterilesummer \u5728 webpack \u4f46\u662f\u6253\u5305\u540e\u7684\u63d2\u4ef6\u9700\u8981\u624b\u52a8\u5f15\u7528 css vue npm publish", "d": "1/2017"}, {"body": "closing op said issue resolved", "d": "1/2017"}, {"body": "issue \u7528\u6765\u8ddf\u8fdb vuejs bug \u548c feature issuereportingguidelines \u6765 \u63cf\u8ff0\u6e05\u695a\u6f5c\u5728\u7684 bug \u6211\u57fa\u4e8e vueuse", "d": "1/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "1/2017"}, {"body": "issue", "d": "1/2017"}, {"body": "issue web server configuration server needs set deliver page urls assuming nt endpoints server server service using deliver page", "d": "1/2017"}, {"body": "thanks issue vuerouter could open issue vuerouter repository next time rpkilby skaterdad mentioned duplicate could get information", "d": "1/2017"}, {"body": "skaterdad using linux box apache server development using osx", "d": "1/2017"}, {"body": "could file repo codebase filing issue", "d": "1/2017"}, {"body": "confirm issue scott", "d": "1/2017"}, {"body": "public email address associated github account", "d": "1/2017"}, {"body": "selected nt show email address github account settings", "d": "1/2017"}, {"body": "couple folks gitter channel also confirmed issue happening", "d": "1/2017"}, {"body": "also confirm issue guessing comment need public email address order sign using github", "d": "1/2017"}, {"body": "may auth callback url using https updated settings try", "d": "1/2017"}, {"body": "works fine thanks", "d": "1/2017"}, {"body": "worked thanks", "d": "1/2017"}, {"body": "first disable logs warnings setting see understand probably want hide warnings however would also welcome way exclusively turn warnings attribute use case generate html code pythonflaskwtforms use vue optional nice things would like keep javascript optional possible using attribute provide default values everyone people javascript activated still provide object values vue nt need warning", "d": "1/2017"}, {"body": "makes sense imo user explicitly uses provided option know fact input take value instead inline rendering warning believe result upgrade redundant", "d": "1/2017"}, {"body": "please nt project anger onto others", "d": "1/2017"}, {"body": "stated docs handle catches errors render runtime error occurs component render passed global vueconfigerrorhandler config function set demo might good enhancement make possible lifecycle hooks well optinions vuejsvue", "d": "1/2017"}, {"body": "considered error render happen rendering parent component", "d": "1/2017"}, {"body": "quite annoying noncought error stop spa working example using small catch around watcherrun flushschedulerqueue makes live easier error happens evaluating watcher", "d": "1/2017"}, {"body": "exists node vfor higher priority vif", "d": "1/2017"}, {"body": "repsacby said use tag", "d": "1/2017"}, {"body": "repsacby posva got thanks", "d": "1/2017"}, {"body": "moving discussion", "d": "1/2017"}, {"body": "thanks kellerlong need make jsfiddlejsbincodepen demonstrate issue us look please refer happen huawei", "d": "1/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "1/2017"}, {"body": "error result one children undefined still tracking template came", "d": "1/2017"}, {"body": "thanks glittle need provide reproduction repository steps us look please refer", "d": "1/2017"}, {"body": "seeing working everything fails error seems similar issue", "d": "1/2017"}, {"body": "already fixed latest version please provide jsfiddle reproduce", "d": "1/2017"}, {"body": "able resolve updating quasarframework maybe really vue issue least us clue coming though really much go blank white page error also could nt find related issue quasar repo", "d": "1/2017"}, {"body": "dominikbln makes sense frameworks like quasar ship precompiled components older versions component may compiled using older version vue template compiler basically causes version mismatch due different render function code generated glittle suspect due something similar find difficult provide reproduction could provide following information version vue upgrading party vue componentsplugins using", "d": "1/2017"}, {"body": "wo nt able easily close issue however possible include value may want put checks place used", "d": "1/2017"}, {"body": "glittle usually normalized filter values cases skip normalization phase performance optimization based static analysis template structure change introduced issue optimization behavior assumes render code generated newer versions template compiler could potentially runtime errors using party component compiled using older versions vue least case imagine running error seeing try upgrading dependencies latest version see makes difference nt probably still bug needs resolved information", "d": "1/2017"}, {"body": "thanks think issue upgrading everything problem went away problems one dependency critical removing app running", "d": "1/2017"}, {"body": "template outside app also prop needs lower case due html limitations", "d": "1/2017"}, {"body": "ok got problem nt export mixin var", "d": "1/2017"}, {"body": "opened instead please check issues similar one nt exist make sure provide repro found one may related edit nt need worry vue issue nothing going change code component tree looks like devtools", "d": "1/2017"}, {"body": "context component nt find parent childrens also parent inherits root element uitab parent uitabs uitab parent root wtf", "d": "1/2017"}, {"body": "think fact original developers licenses mentioned top code question satisfies rules mpl read section also think larger works may create larger work combining covered code code governed terms license distribute larger work single product case must make sure requirements license fulfilled covered code words cause vue using nt mean must follow license type scott", "d": "1/2017"}, {"body": "searching problem using piece code released apache license long leave notice replace line smolinari said need", "d": "1/2017"}, {"body": "smolinari pointed seems fine attribute specific covered code mpl means still usedistribute vue mit long keep mpl notice vue source code intact", "d": "1/2017"}, {"body": "thanks duplicate fixed via", "d": "1/2017"}, {"body": "hello subhapy thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "using instead dynamic key bindings", "d": "1/2017"}, {"body": "fault made mistake writing demo fixed demo using instead bug remains see updated demo expect rendering two transitions double click button transtions finished immediately triggering hook left second rendered element dom", "d": "1/2017"}, {"body": "\u8fd9\u662f popover", "d": "1/2017"}, {"body": "blakenewman testing well may provide feedback", "d": "1/2017"}, {"body": "discovered jestvuepreprocessor vire merges pr blakenewman saves need use webpack simplifies process thanks", "d": "1/2017"}, {"body": "hey yes playing around jest recently processor needs little fine tuning possibly ability hook apply custom languages one issue highlight coverage reports currently map back correctly experimenting get support little tricky possible provide sourcemap jest internal coverage mechanism moment nt think fully possible however could missing something", "d": "1/2017"}, {"body": "deed preprocessor even updates compiling well components got missing entire props definition example getting back precompile webpack need coverage moment anyway getting better time satisfied", "d": "1/2017"}, {"body": "miljanaleksic vire want let know keyboard thursday take look pr get back", "d": "1/2017"}, {"body": "ok elmariofredo check report issues found thanks", "d": "1/2017"}, {"body": "elmariofredo thanks update rush miljanaleksic use exotic reference branch packagejson test pr exotic reference supports yarn", "d": "1/2017"}, {"body": "blakenewman know already tested works found new issues think better address current changes merged", "d": "1/2017"}, {"body": "blakenewman pr merged", "d": "1/2017"}, {"body": "running issue regarding css modules use preprocessor jest style property nt getting created attempting render template breaks style undefined nt found preprocessor scripts take care seeing vueify ca nt reason vueloader well enough determine", "d": "1/2017"}, {"body": "joezimjs experience say vue jest preprocessors mature enough opted build pre testing running another build jest watch mode would trigger tests run pretty good", "d": "1/2017"}, {"body": "miljanaleksic work build include jest spec files set webpack config", "d": "1/2017"}, {"body": "joezimjs separate two steps first build package use dist files testing check working example vuikit next branch tests util file loads vue vuikit dist directly perfect want start experimenting jest good start", "d": "1/2017"}, {"body": "miljanaleksic completely different trying building application bundled file script runs immediately nt export anything importing bundle nt help one bit", "d": "1/2017"}, {"body": "joezimjs build process end returns script code want test firing build tests execution exactly jest autoexecutable script testable help lot still think nt please open new issue would unrelated topic", "d": "1/2017"}, {"body": "miljanaleksic build process returns entire application tests want test individual pieces application get access importing bundle belong feedback testing vue jest issue files need sort processing used script needed sort utility fully process single file spit javascript module like vueloader except needs work outside webpack unless way use webpack handle individual files without changing module system", "d": "1/2017"}, {"body": "joezimjs always create separate build return functions features want test without production execution seems referencing jest vue preprocessor", "d": "1/2017"}, {"body": "separate build definitely great create new entry file similar file imports everything need test reexports means edit file every time want test new file seems like work also seems like something nt need jestvuepreprocessor works great except completely ignores styles section css modules break style property vm", "d": "1/2017"}, {"body": "testing vue components test separately isolated mocking data environment one index build components like vuikit would job testing entire app behaves workflow etc perhaps jest domjs best tool case", "d": "1/2017"}, {"body": "right right index build probably way go something nt necessary feedback jest testing unnecessarily difficult test components using css modules", "d": "1/2017"}, {"body": "cristian carlesso published awesome post jest vue time refactor workflow", "d": "1/2017"}, {"body": "imo slots content distribution like holes ui filled anything component decides content go parent component know markup children need reorder slots use take forum", "d": "1/2017"}, {"body": "znck nt agree reordering even though slots reorder passing prop better solution reading order parent make slots component like mutable array least mutable named slots nesting html wrappers common usage nt seen opinion better solution child template overriding mixin maybe", "d": "1/2017"}, {"body": "components self contained entities theory component know surrounding way interact using specific problem post forum", "d": "1/2017"}, {"body": "plz check example znck named slots component nt need fetch content parent rendering yes got slots order nt", "d": "1/2017"}, {"body": "wrote something like something slot content something b slot content something c organize component display content parent maybe works slots level deal mentioned button img maybe would say combine two slots one two slots different scope props", "d": "1/2017"}, {"body": "ordered nested contents use default slot instead named slots", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen demonstrate issue could start template already includes latest version vue please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests", "d": "1/2017"}, {"body": "jingsam default slots could nested", "d": "1/2017"}, {"body": "slot composition mechanism overriding seem misunderstand designed slots reordered parent exactly position slots inside child controlled child whole point slots however order elements distributed slot controlled parent nt see point nested slots makes lot complex obvious gain always use render functions feel achieve specific goal via slots open issue concrete proposal think may better solution stated several times already general questions posted forum please respect rule time maintainers", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests also note pointless raise discussions along lines maybe feature x good idea vue relied upon tens thousands users existing feature simply changed removed may good idea", "d": "1/2017"}, {"body": "html boolean attributes considered truthy value empty string vue treats boolean props way", "d": "1/2017"}, {"body": "bug misunderstanding compilation scope slots please read corected example please visit forumvuejsorg support", "d": "1/2017"}, {"body": "many thanks quick answer understand point slot compiled however find behaviour predictable especially way presented example let us believe override keep behaviour correct initial question slot default content trigger call method component correctly overrided slot trigger call method parent component ideal break context separation may missleading somewhere assuming bug could also use event bus send event wild everything else component could handle directly override default call appmodal close override default call app close direct examples probably better solution could think thanks", "d": "1/2017"}, {"body": "dont see confusing slot defaults defined child directives run scope child slot content defined parent directives run scope parent want pass template child child run scope look scoped slots docs", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen could start template already includes latest version vue", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "ping phanan", "d": "1/2017"}, {"body": "lmnsg issue \u4e4b\u524d\u8bf7\u53c2\u8003 \u4f60\u9700\u8981\u6309\u7167 znck jsfiddle \u6765\u5c55\u793a bug", "d": "1/2017"}, {"body": "closing due inactivity also seems working based yijixiuxin fiddle please open new issue reference one follow information list issue make sure key components reordered instead patched place", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "provide minimal reproduction code using jsfiddlejsbincodepen could start template already includes latest version vue", "d": "1/2017"}, {"body": "please use forum questions iirc thread exact topic", "d": "1/2017"}, {"body": "znck see thanks", "d": "1/2017"}, {"body": "cecilpeng use fixed fiddle use forum questions", "d": "1/2017"}, {"body": "fixed released soon", "d": "1/2017"}, {"body": "great thx sorry nt recognise issue", "d": "1/2017"}, {"body": "select multiple boxes keep going back ones seem properly update sure bug code", "d": "1/2017"}, {"body": "described issue seems skip last checked checkbox ran several tests code nt change since running works perfect seems changes reffered issue causing problem", "d": "1/2017"}, {"body": "gotcha fair enough leave experts", "d": "1/2017"}, {"body": "duplicate fixed via released yet", "d": "1/2017"}, {"body": "runned code dev branch issue remained especially state nt get updated click change event", "d": "1/2017"}, {"body": "fkobus build dev branch code", "d": "1/2017"}, {"body": "missed part running new fixes behaving thanks response", "d": "1/2017"}, {"body": "really like", "d": "1/2017"}, {"body": "hmm feel introduces way much syntax variations purpose benefits becomes bit flexible deal programmatic event handling templates however imo need level flexibility attaching event handlers better use render function rather adding new syntax templates", "d": "1/2017"}, {"body": "could syntax support extending templates would implement example", "d": "1/2017"}, {"body": "done render function vnode representing component parent tree directly pass data component makes component inherit props event listeners", "d": "1/2017"}, {"body": "jsx would", "d": "1/2017"}, {"body": "yes", "d": "1/2017"}, {"body": "also thought building custom transitiongroup component reason want take key section calculate fade upper direction lower direction based previous active section", "d": "1/2017"}, {"body": "fork working works provide id via data really interested first example nt work", "d": "1/2017"}, {"body": "following updates regards issue exactly issue custom javascript animation enter leave events seem triggered time first codepen", "d": "1/2017"}, {"body": "working version sot sure bug nt add labels", "d": "1/2017"}, {"body": "posva like example put blocks one transition element works really weird normally use transitiongroup multiple elements otherwise get warning", "d": "1/2017"}, {"body": "right skipped comment sorry", "d": "1/2017"}, {"body": "actually nothing vue simply behaves", "d": "1/2017"}, {"body": "version", "d": "1/2017"}, {"body": "use forum gitter questions html", "d": "1/2017"}, {"body": "znck trying consolelog refs empty object", "d": "1/2017"}, {"body": "use forum gitter questions forumvuejsorg", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "questions please use gitter forum stackoverflowto ask questions also vuerouter issues please open vuerouter repo", "d": "1/2017"}, {"body": "server iis solution", "d": "1/2017"}, {"body": "may help", "d": "1/2017"}, {"body": "works repro", "d": "1/2017"}, {"body": "paulocheque updating latest version vue seems fix issue", "d": "1/2017"}, {"body": "use case nt see point", "d": "1/2017"}, {"body": "closed inactivity feel free open new issue explanation use case", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "error message would like suppress message use minified build build production mode please read link message refer", "d": "1/2017"}, {"body": "use vuecli take good look update vue npm run build", "d": "1/2017"}, {"body": "ca nt reproduce vue latest webpack vuecli template really think bug please report repository template using want supports ask questions ask forum gitter", "d": "1/2017"}, {"body": "warning message nt anything except upgrade vue fron output webpack config supposed according doc really nt know warning message", "d": "1/2017"}, {"body": "extending abstract component component becomes abstract imo abstract components bindingsattributes defined props", "d": "1/2017"}, {"body": "abstract components designed render templates like decorators simply wrap componentselements via composition eg abstract components dom elements simply enhances slot children extending abstract component give concrete dom nt make sense also abstract mode publicly documented may change without notice avoid using unless really sure know", "d": "1/2017"}, {"body": "plan include abstract components doc", "d": "1/2017"}, {"body": "vue", "d": "1/2017"}, {"body": "error message already told please refer", "d": "1/2017"}, {"body": "use look", "d": "1/2017"}, {"body": "need define string literal within quotes example instead", "d": "1/2017"}, {"body": "vuecli prodenvjs moduleexports nodeenv production look", "d": "1/2017"}, {"body": "vuejs", "d": "1/2017"}, {"body": "buildjs edit vuecli generated file sorry since vuecli issue please open issue vuecli repo instead thanks", "d": "1/2017"}, {"body": "solve nodeenv production code error", "d": "1/2017"}, {"body": "en thanks", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "\u7528vfor\u6e32\u67d3\u6709\u72b6\u6001\u7684dom\u5143\u7d20 input\u7b49 dom", "d": "1/2017"}, {"body": "fnlctrl \u5728 mac \u4e0b\u7684chrome", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "fnlctrl", "d": "1/2017"}, {"body": "\u7ee7\u7eed\u6d4b\u8bd5\u4e86\u4e00\u4e0b \u7684\u786e\u6709\u95ee\u9898 \u6700\u540e\u4e00\u4e2a\u70b9\u51fb\u7684checkbox \u72b6\u6001\u4f1a\u51fa\u9519 last clicked remain wrong state chrome edge", "d": "1/2017"}, {"body": "fnlctrl bug actually happens checkbox still focused nt update purpose least makes sense text inputs may want reconsider inputs", "d": "1/2017"}, {"body": "fixed via", "d": "1/2017"}, {"body": "hi thanks filing issue closing seems usage question believe bug please specific problem provide minimal reproduction please nt copypaste code demo try remove code nt cause issue", "d": "1/2017"}, {"body": "html attribute names caseinsensitive converted lowercase browser converted browser general convention like follow always use kebabcase dealing html everywhere except attribute values case vue attribute values treated like js expressions", "d": "1/2017"}, {"body": "thanks clarification rule thumb makes sense suspected something nature still surprising tue jan pm matthew pietz notifications githubcom wrote html attribute names caseinsensitive converted lowercase browser von updatedpoints converted von updatedpoints browser general convention like follow always use kebabcase dealing html everywhere except attribute values case vue attribute values treated like js expressions receiving authored thread reply email directly view github mute thread", "d": "1/2017"}, {"body": "unfortunately something vue fix unless use string templates instead indom templates", "d": "1/2017"}, {"body": "understood would mind opened pull request docs making note tue jan pm evan notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread brian kung unicorn", "d": "1/2017"}, {"body": "intentionally limited props component caching tricky get right directly using vuex store state easily lead cache keys loose ie returning cached result actually needs rerender components need cached designed decoupled vuex stores accept props", "d": "1/2017"}, {"body": "component set data function references shared across component instances", "d": "1/2017"}, {"body": "check console warnings correct way access variables inside template fixed example", "d": "1/2017"}, {"body": "thanks quick action regarding warnings console referring main vue instance component x code based mentions define local data property uses prop initial value initial value props initialcounter data function return counter thisinitialcounter bit misleading also please explain different case push used code without warnings following docs", "d": "1/2017"}, {"body": "keying components child components reordered simply stay position receive new props child components use initial props update receiving new props either properly key components use props directly update", "d": "1/2017"}, {"body": "use computed property js index item data return items computed selecteditems return thisitemsfilter item gt condition", "d": "1/2017"}, {"body": "znck said guess vuejs info internally vue nt keep track", "d": "1/2017"}, {"body": "use computed property method filter array instead using inside", "d": "1/2017"}, {"body": "thanks znck fnlctrl perfect solution still two way sync base data", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "many edge cases need handled differently form elements best use dedicated library purpose otherwise vue core would bloated relatively lowusage use case bad", "d": "1/2017"}, {"body": "actually new dist file setup users likely using commonjs builds default check longer necessary", "d": "1/2017"}, {"body": "set input type number", "d": "1/2017"}, {"body": "znck reading doc nt think expected behavior cast result number modifier native input element allows user input leading zero defcc know better", "d": "1/2017"}, {"body": "currently vue handles input number type logic maybe need improvement behavior keep consistence native number type input", "d": "1/2017"}, {"body": "native input element allows user input leading zero revert real number instead basically value always treated number say current behavior correct", "d": "1/2017"}, {"body": "think good remove leading zeros number need leading zeros number probably want use input nt", "d": "1/2017"}, {"body": "something like social security number native input property always yield string value constraint user input digit decimal mark type necessary least mobile platforms informs browsers pop number pad user", "d": "1/2017"}, {"body": "something like social security number number perse value field floatingpoint number per specs", "d": "1/2017"}, {"body": "say number strict meaning use one aswell", "d": "1/2017"}, {"body": "close per spec se typenumber state appropriate input happens consist numbers strictly speaking number example would inappropriate credit card numbers us postal codes alternatives found", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks", "d": "1/2017"}, {"body": "used build vue production mode refer", "d": "1/2017"}, {"body": "please use refer updated code", "d": "1/2017"}, {"body": "know however determine whether data store last store value method encounter demand must keep open", "d": "1/2017"}, {"body": "say expected instance actually type rather tested happens boolean usually used without operator return proper types", "d": "1/2017"}, {"body": "closing duplicate tldr nt want introduce nonstandard syntax expressions said existential operator ever lands javascript work templates", "d": "1/2017"}, {"body": "nt know write request", "d": "1/2017"}, {"body": "proper place", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests thanks", "d": "1/2017"}, {"body": "happierall nice work editor open source", "d": "1/2017"}, {"body": "smolinari thank sure editor must open source based ace editor open source", "d": "1/2017"}, {"body": "ah ok understand still good work scott", "d": "1/2017"}, {"body": "questions forum website issued problem almost week passed answered anxious waiting project online yet question answered skip issue reporting guidelines really find bug within vue make sure create repro fiddle please keep code short possible open new issue need add long explanation shorter makes clearer", "d": "1/2017"}, {"body": "sunriseshow \u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u6700\u5c0f\u5316\u7684 demo \u6765\u590d\u73b0\u4f60\u9047\u5230\u7684 demo \u653e\u5230 jsfiddler demo", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks depends last version basically make sure missing peer dependency yarn npm warn also make sure delete previous dir reinstalling modules", "d": "1/2017"}, {"body": "using jsfiddle vue global scope fixed", "d": "1/2017"}, {"body": "think bug please provide repro instead stackoverflow question", "d": "1/2017"}, {"body": "thanks using vue second example breaks intended reason quite similar compilation scope component slot must compiled parent template slot content fed container component case first example works pass null props component vue guards runtime error example design thanks understanding", "d": "1/2017"}, {"body": "herringtondarkholme close issue", "d": "1/2017"}, {"body": "please nt component options expected plain objects nt really see point using class class sake proper way use classes vueclasscomponent", "d": "1/2017"}, {"body": "got", "d": "1/2017"}, {"body": "hi thanks filling issue seems trying make template access two scopes parent time violates principal vue component system thus coupling implementation detail parent child really want way simpler approach would accessing eg inside recommended approach would passing everything via props using custom events parentchild communication eg inside inside", "d": "1/2017"}, {"body": "thanks fnlctrl familiar approaches provide problem vmodel bindings inputscustominputscomponents nt think currently way around proposal sure probably vue parentchild relation component specification extending template context using vueextend makes sense mind using basefrom lot personform probably end using js extend writing full templates", "d": "1/2017"}, {"body": "serves creating subclass vue create component instances later nothing templatescope etc though name may suggested talking merging two scopes example template bound want merged data methods available scopes nt seem good idea maybe try something like inside inside", "d": "1/2017"}, {"body": "vue reactivity system currently support typed arrays", "d": "1/2017"}, {"body": "vue awesome", "d": "1/2017"}, {"body": "maps", "d": "1/2017"}, {"body": "closing track along likely implement new data types reach significant support rate alternatively may ship mordern browser build leverages proxy makes supporting new data structures including less hacky", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks bug \u7684\u8981\u6c42\u63d0\u4f9b", "d": "1/2017"}, {"body": "delimiters option available standalone build single file components compiled statically changing delimiters via runtime option possible afaik practical reason change delimiters singlefile components except stylistic preferences", "d": "1/2017"}, {"body": "thanks explanation evan right practical reason change delimiters maintain coherence code", "d": "1/2017"}, {"body": "browser test osx sierra chrome seems work", "d": "1/2017"}, {"body": "fascinating windows chrome", "d": "1/2017"}, {"body": "confirm firefox windows behavior expected appears windows chrome issue", "d": "1/2017"}, {"body": "anyone idea rework around chrome bug close issue fixable vue", "d": "1/2017"}, {"body": "linusborg agree nickfederighi look see bug report already exists report", "d": "1/2017"}, {"body": "thanks help guys believe solved problem chrome windows seems difference browsers well windows vs osx chrome whether default select behavior triggered keyup keydown changing handler allowed intercept default behavior fixed jsfiddle", "d": "1/2017"}, {"body": "thanks scottbedard expected behavior vuejs generate code like hood", "d": "1/2017"}, {"body": "expected behavior vuejs value changes app gets rerendered input value reseted could use updated fiddler also could use", "d": "1/2017"}, {"body": "defcc behavior appeared vue prev releases breaking change cause say works start working like release specific", "d": "1/2017"}, {"body": "defcc say whole template rerender change input textarea value rolled back like input value", "d": "1/2017"}, {"body": "defcc need submit form ajax without bind values vue cant use vue correct", "d": "1/2017"}, {"body": "rhincodon check", "d": "1/2017"}, {"body": "rhincodon good usecase actually defcc pointed coincidence worked vue true could optimised need send data ajax put container element every child parent nt need vue otherwise put every child correct absolutely use vue", "d": "1/2017"}, {"body": "thanks rhincodon open issue", "d": "1/2017"}, {"body": "static value attribute added dom property introduced different behavior previous version related issue textarea different input element internal implemention", "d": "1/2017"}, {"body": "defcc posva thanks partially understand parts html binded inputs inside app template need wrapped", "d": "1/2017"}, {"body": "fact vue automaticly nt need keep mind could check doc details issue fix case", "d": "1/2017"}, {"body": "thanks hitvalley please follow issue reporting guidelines close questions could use official forum stackoverflow segmentfaultcom help", "d": "1/2017"}, {"body": "maybe bug use blank string literal instead empty array", "d": "1/2017"}, {"body": "want bound content array dotneet", "d": "1/2017"}, {"body": "\u6211\u7528 textarea \u6a21\u4eff multiple checkboxes bound array input typetext \u662f\u4e0d\u662f\u6682\u65f6 \u4e0d\u652f\u6301 \u5c06 \u7ed1\u5b9a\u5230", "d": "1/2017"}, {"body": "model \u7ed1\u5b9a\u5230\u591a\u4e2a textarea", "d": "1/2017"}, {"body": "\u8ddf\u540e\u7aef textarea \u5bf9\u5e94\u4e00\u4e2aid \u7c7b\u4f3c\u4e8e", "d": "1/2017"}, {"body": "\u76ee\u524d\u60f3\u5230\u7684\u89e3\u51b3\u529e\u6cd5\u662f \u5c06 vmodel \u8bbe\u7f6e\u6210", "d": "1/2017"}, {"body": "matmoo thank hoping documented like properties accept arguments would computed subcomponents possible implement logistically impossible", "d": "1/2017"}, {"body": "hi simply use computed property return component", "d": "1/2017"}, {"body": "number components known statically ok var components var component components components watch columns function columns change nt smell well", "d": "1/2017"}, {"body": "necessary declare subcomponents property actual component declaration", "d": "1/2017"}, {"body": "necessary declare subcomponents property actual component declaration necessary delcar components inside option since directly use component declaration eg please refer docs thanks", "d": "1/2017"}, {"body": "thank", "d": "1/2017"}, {"body": "seems edge case updatelistener cur function type breaks fix", "d": "1/2017"}, {"body": "posva forked jsfiddle example found added run normally", "d": "1/2017"}, {"body": "jimczj yes makes function defined trying invoke", "d": "1/2017"}, {"body": "issue", "d": "1/2017"}, {"body": "like understand problem goal set selected value instance editing record actual selections available render scott", "d": "1/2017"}, {"body": "would end game kinda like props component sent via prop prop would overridden select options nt rendered yet", "d": "1/2017"}, {"body": "way get selection options setting selected value scott", "d": "1/2017"}, {"body": "could seems like something vue could handle nt seem intuitive property gets overridden data gets loaded also catch developing may push bad code", "d": "1/2017"}, {"body": "options select consider application data ground rule personally always see application data priorty user data terms rendering words form make sure application specific data loaded render form first fill user created data take situation definitely nt mean right scott", "d": "1/2017"}, {"body": "closing duplicate", "d": "1/2017"}, {"body": "sorry seems kind duplicate mine simpler ps checked bug tracker bug filling bug report closed bug code exactly", "d": "1/2017"}, {"body": "doublechecked bug thanks work", "d": "1/2017"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted forum stackoverflow thanks closing providing enough information therefore post looks like stackoverflow question issue report however find actually bug open new issue minimal reproduction", "d": "1/2017"}, {"body": "posva try going steps result error console guess core error else needed describe problem jsfeedle enought", "d": "1/2017"}, {"body": "describing problem enumerating steps get error may bug please take time effort report properly", "d": "1/2017"}, {"body": "understand must write words written code jsfiddle", "d": "1/2017"}, {"body": "changing select field programmatically function trying chose another select shows parent div dom catch error console", "d": "1/2017"}, {"body": "u close issue giddily fast without try see understand really bug", "d": "1/2017"}, {"body": "closing providing enough information therefore post looks like stackoverflow question issue report however find actually bug open new issue minimal reproduction think read issue reporting guidelines debugging found real issue event triggered element removed due englobbing go open another issue shorter simpler repro coming back", "d": "1/2017"}, {"body": "posva ok thanks waiting", "d": "1/2017"}, {"body": "limitation inputs focused update however get around running method", "d": "1/2017"}, {"body": "posva ok thanks", "d": "1/2017"}, {"body": "posva way right using watch", "d": "1/2017"}, {"body": "yes also works vmodel nt change input focused may end weird ux", "d": "1/2017"}, {"body": "vfor usage documented already however maybe could improvement case", "d": "1/2017"}, {"body": "true jsfiddle", "d": "1/2017"}, {"body": "relevant documentation variables parentheses interpreted properties single javascript objects contents arrays", "d": "1/2017"}, {"body": "syntax design braces indicate presence index key", "d": "1/2017"}, {"body": "solved reverted introduced breaking change transitions see example works need use different classname make work find details release notes", "d": "1/2017"}, {"body": "posva got thank much explanation unfortunately nothing mentioned believe documentation updated soon well anyway thanks fixing", "d": "1/2017"}, {"body": "ive realized vuejs version wrong didnt latest scriptonce updated everything worked fine", "d": "1/2017"}, {"body": "thanks suggestion fan idea introducing nonstandard syntax template expressions imo javascript much possible also deep path may may exist level access sounds like code smell modelstate predictable possible", "d": "1/2017"}, {"body": "throw error", "d": "1/2017"}, {"body": "thank found reason chrome plugin block error tip", "d": "1/2017"}, {"body": "hi thanks filling issue vue nt get detect duplicate property inside object literal automatically removed javascript engines eg need configure code editoride give warning", "d": "1/2017"}, {"body": "use testdata", "d": "1/2017"}, {"body": "html attributes caseinsensitive using nonstring templates camelcased prop names need use kebabcase hyphendelimited equivalents", "d": "1/2017"}, {"body": "using indom template nt support cased prop names please use instead zhangyufen suggested using vueloadervueify ok use cased prop names", "d": "1/2017"}, {"body": "right vue designed nt already read doc talks concern change detection caveat declaring reactive properties sections explains vue requires data rootlevel properties upfront scott", "d": "1/2017"}, {"body": "smolinari said", "d": "1/2017"}, {"body": "might wanted mention change time looks complicated track", "d": "1/2017"}, {"body": "linusborg yes like cache components see cached content hit back button want destroy last component order rerender enter sure describe situation clearly", "d": "1/2017"}, {"body": "thanks update", "d": "1/2017"}, {"body": "space required warning telling expression invalid", "d": "1/2017"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "1/2017"}, {"body": "vue preserves whitespace two put line without whitespace using use option", "d": "1/2017"}, {"body": "line replace line good go", "d": "1/2017"}, {"body": "crswll said line error offset lt minute span raw seconds ago", "d": "1/2017"}, {"body": "holy sh sry didnt see took almost whole day kinda debug stuff thx quick response", "d": "1/2017"}, {"body": "fyi inspect stack trace thrown error points exactly error occurs code", "d": "1/2017"}, {"body": "hi thanks filling issue feature events component option removed along dispatch broadcast custom events emit meant parentchild communication already declaratively use inside templates listening events within component actually almost practical benefit adding listener eg catch selfemitted event since call method instead words custom events works best parentchild communication component using instead calling antipattern therefore option like nt really necessary", "d": "1/2017"}, {"body": "fnlctrl thanks comment nt exactly mind nest similarly methods proposal detecting event top level yeah methods best solution cases sometimes larger event would kinda neat treat almost like lifecycle event feature would used right could improve code readability", "d": "1/2017"}, {"body": "sometimes larger event would kinda neat treat almost like lifecycle event feature would used right could improve code readability nt know exactly use case would sounds like want promote method option improve code redability eg access write pluginmixin use adding lifecycle hooks", "d": "1/2017"}, {"body": "clear magically inferring event listeners toplevel options unlikely core easily implemented via userland plugin fnlctrl suggested", "d": "1/2017"}, {"body": "fnlctrl thank mixin replies guys something curious people would think yeah maybe would nt much use cases", "d": "1/2017"}, {"body": "oops think connected changes closing", "d": "1/2017"}, {"body": "files parsed using html parsing rules parsing html parser encounters considered ending current script block fact html file let browser parse also get syntax error escape closing script get around add note vue file documentation", "d": "1/2017"}, {"body": "tested ie korean ime worked fine may missing something usually never type language uses ime", "d": "1/2017"}, {"body": "sorry phanan could nt reproduce issue", "d": "1/2017"}, {"body": "picture recorded test ie korean ime windows blue block disappeared clicked button alert nt show last korean characters keep typing letters alert still show letters type characters composed letters like korean chinese blue block disappear work", "d": "1/2017"}, {"body": "tested seems bug nt fire middle writing something blurring input however listen event work around issue even done userland", "d": "1/2017"}, {"body": "kow closing issue violates contribution guidelines", "d": "1/2017"}, {"body": "tried remove vue examples first one still nt work expect think nt anything vuejs ca nt remove guess vis checks truthyness ids use string id works remove node second example actually work remove vue updating nodes works sure hope helps", "d": "1/2017"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "1/2017"}, {"body": "danieldiekmeier yeah first example definitely nothing vue second example also sure nt work vue without vue everything works fine anyway thanks", "d": "1/2017"}, {"body": "using laravel vue however looks like issue happen use laravel pass data laravel controller blade template vue components", "d": "1/2017"}, {"body": "personally think may much edge case add special treatment current behavior actually gives ability decide whether content cached seems changes really necessary", "d": "1/2017"}, {"body": "hook think need manage animation purely js object higher scope like instance gsap eg would give options cancel reverse animations", "d": "1/2017"}, {"body": "otherwise maybe insight could dig stopreverse css transitions finish", "d": "1/2017"}, {"body": "hey lunelson thank reply unfortunately problem stopreverse animationtransition works well already problem transition reversed transition say finished vuejs still show component stopped transitioning see mean play fiddle drag little right let go component slides back original position vuejs replaces replace turn split second see none less", "d": "1/2017"}, {"body": "run run", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "run run \u5728 vuerouter\u7684\u914d\u7f6e\u91cc\u589e\u52a0 path test redirect \u53c2\u8003\u81ea", "d": "1/2017"}, {"body": "seems similar issue anyone help", "d": "1/2017"}, {"body": "bug seems persisted see two referenced issues", "d": "1/2017"}, {"body": "gd", "d": "1/2017"}, {"body": "issue reproduced end closing due inactivity please open new issue reference one follow information", "d": "1/2017"}, {"body": "still seeing similar problem running latest code example references github", "d": "1/2017"}, {"body": "njleonzhang deleted al local packages reinstalled nt matter", "d": "1/2017"}, {"body": "make sure local package consistent colleagues npm yarn", "d": "1/2017"}, {"body": "getting worse project growing ca nt even use chrome anymore every page always get mergehook error random anymore calls annoying", "d": "1/2017"}, {"body": "solution solution issue sircharleswatson worth got error realized turned experimental javascript chrome flags settings turning solved issue", "d": "1/2017"}, {"body": "worth got error realized turned experimental javascript chrome flags settings turning solved issue", "d": "1/2017"}, {"body": "sircharleswatson dude thank much looked flags page feature enabled turned restarted chrome solved happy thank much cc njleonzhang posva", "d": "1/2017"}, {"body": "posva linusborg hope help guys debug hopefully come fix maybe issue reopened since actually way reproduce", "d": "1/2017"}, {"body": "jessereitsma experimental features stable think wait error appears stable environment since error seems disappear production build new issue repo repro proper steps reproduce issue would great", "d": "1/2017"}, {"body": "thanks much works thanks", "d": "1/2017"}, {"body": "native fire event setting property invalid value jsfiddle think bit unexpected setting property vue would cause immediately overwrite property", "d": "1/2017"}, {"body": "also confused expected behavior may helpful mention form input bindings select section documentation", "d": "1/2017"}, {"body": "seems fixing bug created new bug checked binding using combination vuex states maintaining checkbox states code example checked set true false whenever active filter array seems component updated via vuex checked stated nt get updated like application state managed almost totally vuex vuejs version reproduction link howto reproduce selecting several checkboxes like brands use browser back button fallback previous states managed popstate event expected checkbox go depending previous action actually happening everything get correctly updated value wise except checkbox nt honored update checked truefalse keeps previous state selecting multiple eachother navigating back forward looks like beat missing last changed checkbox code goes reading docs vuex seems best practise like work worked like charm seems really fixing bug triggered bug created", "d": "1/2017"}, {"body": "fkobus please open new issue instead adding bottom closed ones thanks", "d": "1/2017"}, {"body": "vue version still problem", "d": "1/2017"}, {"body": "hello tried reproduce issue ca nt reploduction link anything missed", "d": "1/2017"}, {"body": "thanks looking checkout jsfiddle get back problem apps testing ie however also quite large nt much luck isolating problem last time try", "d": "1/2017"}, {"body": "ok think know hapenning unfortunately nt know reproduce jsfiddle basically code built webpack use strict case everywhere according mdn method called undefiend case strict mode thiswindow however enabled stays undefined would seem call raf detached window object strict mode throw error see would best practice fix would also seem case everything except ie good testing code using standard vue builder executes code eval statements hotreloading note ie following throws error example chrome firefox enough evidence issue get fixed", "d": "1/2017"}, {"body": "repro issue hot reloading ie create pr", "d": "1/2017"}, {"body": "ran app started silently failing errors visible firefox loading chrome worked showed cause assuming want make vue work chrome need make warnings cause firefox fall completely", "d": "1/2017"}, {"body": "found version firefox windows worked annoying seems related either running firefox inside vm doubtful something ubuntu version something way handled transition firebug builtin firebug merge first turned offer use builtin dev tools later think accepted realized mistake even firebug theme nt look really sluggish ironic since supposed performant native dev tool nt know revert long story short installed chromium dev browser use google chrome leisure browser thay way continue using separate unity shortcuts switch nt find resolution issue also tried firefox esr release think already displaying css issues something transform origin scrap posva sadly could nt figure completely remove firefox ubuntu install ealier version confirm infirm switched chromium agree likely vue related although encountered silent error scenarios maybe nt seen happen javascript tools maybe related babel build way outputting errors since unable make reproducible scenario understand closed", "d": "1/2017"}, {"body": "running latest versions firefox firebug mac see issue seems like legit bug", "d": "1/2017"}, {"body": "firebug one", "d": "1/2017"}, {"body": "posva nt buy asking everyone wants use software develop chrome good enough answer", "d": "1/2017"}, {"body": "asking everyone wants use software develop chrome good enough answer nt recommend chrome benefit vue devtools enjoy better dx firebug bug unrelated vuejs someone ever finds way fixing happily welcome pr running latest version firefox mac see issue still running firebug addon know maintained anymore firefox devtools integrate find issues around", "d": "1/2017"}, {"body": "find issues around interesting thanks confirming", "d": "1/2017"}, {"body": "yeah interesting one firebug seem broken completely consoleerror test typeerror dbg undefined fair enough nt support unmaintained plugins time move however want keep vue working cases could use", "d": "1/2017"}, {"body": "using vuejs identified issue strange issue related check jsfiddles one uses book appears one uses book appear ideas issue missing something", "d": "1/2017"}, {"body": "epub framework changing dom directly vue managing dom kinds sideeffects happen good practice manually update dom hierarchy vue manages", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "would great sub elements might transition delay preference would something flexible like posva suggested little full control steps", "d": "1/2017"}, {"body": "akryum example implies bug detection nt case since possible check target event bug", "d": "1/2017"}, {"body": "problem nested transitions detected nt think bug", "d": "1/2017"}, {"body": "okay see animations events transitions way determine nested ones finished explicit value probably best way", "d": "1/2017"}, {"body": "perhaps hack would transition nonchanging property separately force duration", "d": "1/2017"}, {"body": "currently still hack", "d": "1/2017"}, {"body": "certainly", "d": "1/2017"}, {"body": "higher level think strategy brings lot complexity unknown perf gain cases rerendering single component extremely fast also computed properties never used eg falsy branch never evaluated example html computed inside code assume truthy current behavior preevaluating render throw turns undefined technically breaking change makes nogo ultimately vue reactivity system designed immutable data structures intrinsically relies mutations able efficiently determine components need rerender nt think worth shoehorn able play nicer immutable data structures", "d": "1/2017"}, {"body": "yea looking precomputing indeed bad idea subjected many unpredictabilities fact already figured solution userland get precomputation functionality comes immutable structures initially thought manually passing prop values best approach rather referencing data root always changes order get best performance mutable props outside component however mean manually managing lot properties passed unwieldy avoid hassle manually passing props outside component markupcreateelement calls figured using custom higher order component approach sort like mapstatetoprops used redux implementations would good get around higher order component call initial render pass end passing precomputed leafed props hocs precomputation thus props final values passes wrapped component remains wrapped component skip rendering haxevx thinking ifwhen needed low priority implement macro used detect something like bindings used substitute regular computed getter fields may optionally also create full method dynamism similiar redux implementations detected also mixin fields accessible fully typehintedtypechecked props within current haxe component class context also would link underlying implementation higher order component refer prototype functions generated class would transparent enduser ie need call manually macro even better haxe supports inlining higher order component run inlined code well component class static function marked higher order component reference whatever long return explicit objdecl mapstatetoprops note without expando props static typing determined explicit set computedstoreprop static getter functions macro pick fields ast know exactly properties reference hoc rendering short need hoc dynamically iterate keys given mapstatetoprops object macro already knows beforehand object keys use generally though performing virtual dom resolution components nt bad anyway stlli fast enough though sure case components complex markup case higher order component filter pass might come useful", "d": "1/2017"}, {"body": "closing doable userland akryum already implemented one", "d": "1/2017"}, {"body": "found case may make sense see dev console every time click tab tabs rerender depend guess think need rerender fact nt case even props components still update want optimize performance reactlike may helpful", "d": "1/2017"}, {"body": "codincat case tabs forced update slot children technically means implement tabs solely depends prop incorrect slot children may changed accounted lead subtle bugs slot content tab component changes react use pure component purpose also always rerender prop always gets new reactelement references shallow compare consider different course try diff children nodes custom unlikely correct edge cases plus point much different rerendering containing component", "d": "1/2017"}, {"body": "modifiers except actually specific native events nt really make much sense components anyway think best keep component events simple use event name differentiate since ultimately different events rather event different behavior", "d": "1/2017"}, {"body": "aierui remove", "d": "1/2017"}, {"body": "vpre also disables attribute parsing though ie wo nt show since html escaping already done applications way disable moustache interpolation would nice currently setting delimiters long random string sort hacky", "d": "1/2017"}, {"body": "submitted pr review needed", "d": "1/2017"}, {"body": "mdreizin actually find mixin approach quite plausible since super common use case handled userland think better leave userland", "d": "1/2017"}, {"body": "posva thanks guys currently found workaround create really common solution post", "d": "1/2017"}, {"body": "use case trying implement react styledcomponents ca nt pass event handlers since bound parent instance tt would love able far javascript style vuejs components import insertcss insertcss import hash shorthash import tags htmltags import vue vue cache duplicated styles const cache new set get tag name like div return function accepts styling param string element valid html tag name return function style str function styled tagname return style gt const classname syntactic sugar call instead tagsforeach tag gt styled tag styled tag expose export default styled", "d": "1/2017"}, {"body": "rusintez get listeners second argument stateless render functions", "d": "1/2017"}, {"body": "completely forgot thanks", "d": "1/2017"}, {"body": "progress made area laravel community really needs something like vuejs concerned", "d": "1/2017"}, {"body": "basic ideas component properties parentchild communication please explicitly declare props need events emit technically impossible think must feature sometimes main dom element nt highest element component template ca nt know attributes added component want attributes transferred marked element fnlctrl rethink feature please help many framework developers", "d": "1/2017"}, {"body": "nt think implicitly routing html attributes event bindings internal html nodes good idea fact see behavior causing major headaches implicit bindings never good idea opinion trying pass html attributes directly component without declaring props also terrible idea components html nodes components treated want html node write html node use case easily solvable simply explicitly declaring attributes props populating component could also computed value return default event one props undefined", "d": "1/2017"}, {"body": "ajaxhttp layer frameworkagnostic ajax extremely important part web days basically saying users find way making framework work ajax whole point using framework nt figure things know ajax dom manipulations etc would use framework first place", "d": "1/2017"}, {"body": "ajax extremely important part web days basically saying users find way making framework work ajax really saying vue viewlayer library complete framework vue plays nicely pretty much ajax solution axious superagent vueresource ajax integrating vue works pracitcally ame import app use per readme nt see advantage importing vuespecific ajax solution many people would new api learn either way additional value offers nt install import fact retired vueresource exactly reason offered little benefit using something mature like ajax axios superagent also people need personally prefer people prefer different solutions nt want force one solution people might need generalpurpose ajax lib use framework technology clientside libarary example meteor feathersjs apollojs situations would unnessessary bloat include vue ajax implementation final bundle nt need provide ajhax support core extension wer back first point lack value compared established solutions", "d": "1/2017"}, {"body": "vue viewlayer library complete framework case makes perfect sense thanks followup", "d": "1/2017"}, {"body": "wrote changelog version need add classes elements leaving floor impact new ones coming personally created class makes elements absolute position added class attributes hope work guys jerome", "d": "1/2017"}, {"body": "bug back", "d": "1/2017"}, {"body": "please open new issue reproduction thanks", "d": "1/2017"}, {"body": "issue upgraded project generated vuecli months ago problem maybe declared peerdependencies vueloader solution may right one add library manually devdependencies generated project json devdependencies", "d": "1/2017"}, {"body": "error nt seem appear use believe still get functionality intentional", "d": "1/2017"}, {"body": "probably nt get functionality vmodel unless mistaken going happen get gendefaultmodel wo nt work properly select checkbox radio", "d": "1/2017"}, {"body": "nkovacs point use case creating generic text input component part ui toolkit wo nt used selectcheckboxradio specific components could used textemailpasswordphoneetc text input", "d": "1/2017"}, {"body": "updates issue envomer solved problem also trying implement datatables vue vue recompile datatable dom inside datatable drawcallback function make action buttons work datatable datatable drawcallback function settings var element appdatatable vm compile elementget work compile removed", "d": "1/2017"}, {"body": "chrislandeza try dynamic component instead demo", "d": "1/2017"}, {"body": "using vue meteor really miss feature meteor default frontend blaze ref available part party package part core possible core least plugin would valuable option", "d": "1/2017"}, {"body": "majority libraries uses window document clientoriented think instead asking everyone find solution problem better think global universal solution would solve problems glance thank", "d": "1/2017"}, {"body": "agree ramyou end forking libraries patching check environment would great incorporated vue way vue convert framework hells totally love sailsjs vuejs architecture kudos vuejs team regards", "d": "1/2017"}, {"body": "issue var todoapp new vue el app data displaytitle true displayaddtasks true displaytaskstatistics true displaytasks true displayprogressbar true", "d": "1/2017"}, {"body": "wontfix addressed via ability explicitly declare transition durations", "d": "1/2017"}, {"body": "chrisvfritz since vue utilizes objectdefineproperty convert instance data observed object inline expression without instance data would compiled bug suspect anyone would inline expression interpolation like good reason", "d": "1/2017"}, {"body": "intended work reusable components instance say party component order warn user needs know implementation details appjs import thirdpartycomponent thirdpartycomponentjs vueconfigignoredelements customelement new vue el root template components thirdpartycomponent alternative third party module modifies global config state seems antipattern similar better modules export component configs rather", "d": "1/2017"}, {"body": "onenewlife script requirejs \u62a5\u9519 \u53c2\u8003requirejs\u7684\u6587\u6863", "d": "1/2017"}, {"body": "cmal vuejs \u4f7f\u7528\u4e86 define html \u4e2d\u5f15\u5165 vue api requirejs amd", "d": "1/2017"}, {"body": "onenewlife \u521a\u5f00\u59cb\u662f\u76f4\u63a5\u5728html\u4e2d\u52a0\u5165script", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "computed vs filters", "d": "1/2017"}, {"body": "filters possibly bad performance since computed every render like methods computed properties easy cake recomputed necessary otherwise results cached means vue fly oh scott", "d": "1/2017"}, {"body": "hey fiddling get great concept", "d": "1/2017"}, {"body": "lock thread discussion long finished vue couple months critique drop filters largely subsided discussion thread productive see new angle topic think needs discussion please open new issue", "d": "1/2017"}, {"body": "like idea trim modifier like idea automatically trimming whitespace generally implicit arbitrary modifications data always bad thing", "d": "1/2017"}, {"body": "component html moved expected least worked hahah", "d": "1/2017"}, {"body": "\u5373\u4f7f\u4f7f\u7528\u4e86 disabled disabled", "d": "1/2017"}, {"body": "thanks great framework issue would agree niceue vuejs supports full power javascript expressions inside templates use template like strange vuejs supports syntax nt support bitwise wrote demo show strange behavior html n amp n js new vue el app data n alert amp alert html renders shows nt like nt thought perfect solution", "d": "1/2017"}, {"body": "xcatliu revisiting issue turn happier computed property bitwise issue also flexible filters still limited text interpolations vbind expressions", "d": "1/2017"}, {"body": "warning would great spent hour trying figure custom event nt responded answer camel cased name", "d": "1/2017"}, {"body": "warning corresponding component prop would respond version component prop make typo event much vue mean default existing event props like short", "d": "1/2017"}, {"body": "guidobouman template file child component actual event listened parent course took ages figure easy debug thinking would good warn camel case attribute would parsed forgetful folk like perhaps already discussed apologize", "d": "1/2017"}, {"body": "anthonygore unfortunately impossible browser converts html lowercase vue chance access", "d": "1/2017"}, {"body": "somewhat related stumbled upon thread searched eventtarget clicked element vue eventcurrenttarget always null turns due consolelog works thus consolelog event expanded browser console currenttarget always null however consolelog eventcurrenttarget contain element clicked stackoverflow explanation bug vue caused js consolelog works leaving users issue waste hours scratching head hope helps", "d": "1/2017"}, {"body": "simple work around create computed property output bool value let explain example yourcomponentfilevue script section data return myobject computed hasmyobject function return objectkeys thismyobject length yourcomponentfilevue template section", "d": "1/2017"}, {"body": "agreed would nice able tell changed array", "d": "1/2017"}, {"body": "thought try hand fixing vue looks like directive code executed props values populated loss chance seeing vue think current behavior considered bug documentation states possible", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "still valid vue work arraypush works find change unshift alters array correctly dom duplicates last element trackby thing work", "d": "1/2017"}, {"body": "rgigger need use attr vue", "d": "1/2017"}, {"body": "created private props ca nt track vue nt think reasonable props defined vue data props methods one scope vue define data prefix vue tell ca nt find prop", "d": "1/2017"}, {"body": "wtf document", "d": "1/2017"}, {"body": "\u4e0b\u9762\u7684\u4ee3\u7801 \u4e3a\u4ec0\u4e48\u8981\u89e6\u53d1 input \u4e8b\u4ef6\u5462 \u8fd9\u4e2a input dreampie", "d": "1/2017"}, {"body": "gongph", "d": "1/2017"}, {"body": "\u591a\u8c22\u4f60\u7684\u94fe\u63a5 fnlctrl", "d": "1/2017"}, {"body": "hi fnlctrl \u6211\u5728\u770b vladimir kharlampidi \u5927\u795e\u5c01\u88c5\u7684 html export default props active boolean methods ontabshow function e emit tab show e ontabhide function e emit tab hide e html export default methods onopen event consolelog button open emit button open event onclosed event consolelog button closed emit button closed event js import vue vue import vuewebpack srcvuewebpackjs vueuse vuewebpack const app new vue el app methods onopentest event alert hello html button", "d": "1/2017"}, {"body": "ps \u4e3b\u8981\u662f fnlctrl", "d": "1/2017"}, {"body": "sirlancelot nice solution whenever need computed property accomplish append computed property name computed would become personal convention sharing case someone finds useful", "d": "1/2017"}, {"body": "made simpler reference reactive properties return value guaranteed different every time way avoid performance overhead array operation original example sirlancelot though trivial cases also x z objects would give result every time xyz changed prevents watcher fired js new vue computed compoundproperty required reference properties thisx thisy thisz return different value every time return datenow performancenow", "d": "1/2017"}, {"body": "two cents watchers supported expressions could globally mix method would return way generate unique value define watcher would called every time changed demo watch expression define computed prop watch instead best way think ease creation computed field", "d": "1/2017"}, {"body": "sorry english \u6211\u7528\u7684\u662fvuecil phone \u6211\u7528\u4e86\u8fd9\u4e2a\u65b9\u6cd5 return detect incompatible browsers", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "lshnltt check", "d": "1/2017"}, {"body": "sterilesummer", "d": "1/2017"}, {"body": "gamadril question answer vuejs used together requirejs thanks", "d": "1/2017"}, {"body": "cmal yes would nt although recommend use bundlers like webpack", "d": "1/2017"}, {"body": "posva hi currently problem using vuejs requirejs add vuejs html tag requirejs props error described followed instructions given result use jquery way problem vue give opinions deal examples successed using vuejs requirejs thank much", "d": "1/2017"}, {"body": "cmal sorry last time used requirejs years ago recommend use something else bundling like webpack start remember post question forums locking keep quiet", "d": "1/2017"}, {"body": "package vue component web component could nt find examples far oh see gist provided shows would nice recipe accessible via official docs real life examples cheers", "d": "1/2017"}, {"body": "nt answer question question bind model select question preselect select element pretty different personaly need von change behavior preselect without binding model property need oneway databind", "d": "1/2017"}, {"body": "please nt comment closed issues years ago ask questions forumvuejsorg open new issue found bug thanks", "d": "1/2017"}, {"body": "vm watch array callback second parameter mutation component created hook expected log mutation object speak actual logs array reverted", "d": "1/2017"}, {"body": "hi crescentfresh issue made two years ago vue version find current docs", "d": "1/2017"}, {"body": "reading docs looking relevant code see information made available watchers know mutation event caused array change accurate statement", "d": "1/2017"}, {"body": "billxcode thanks lot problem errors tip helped days searching solution", "d": "1/2017"}]