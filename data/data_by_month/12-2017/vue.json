[{"title": "bug vmodellazy undeclared object fields view update", "body": "version reproduction link steps reproduce type smth declaredstring input type smth undeclaredstring input expected updated well model updated well model actually happening model updates intended resets becomes empty every time model therefore view updates starts update intended next cases comment interpolation remove modifier declare field advance section managed make input change modelview update string become declared", "num": "7348", "d": "12/2017"}, {"title": "accept domelement createelement arguments", "body": "problem feature solve many data visualization graphics library dom manipulation domelement extracted let say want build abstraction design component draw rectangle drawing done hold amp drag mouse button rectangle placed another section usage like like html drawing done rectangle moved fill black svg texture complex case done clone element slots slot js const rect svgadopt slotsdrawing elm recton click event gt dodrawinglogic event recton drawfinish event gt reason clone move slot logic annotation slot applied clone preserve referenced logic case need make createelement accept domelement duplicating maybe also converting node vnode js newrect newrectclone animate dmove const clone createelement newrectnode slotsannotationpush clone example createelement act creating element rectangles lol proposed api look like basic usage js const div documentgetelementbyid mydiv createelement div clone move slots another slot js const clone createelement slotsmyslot elm slotsdefaultpush clone", "num": "7347", "d": "12/2017"}, {"title": "fr reactive css variables", "body": "problem feature solve often desirable component expose properties caller use customize style take arbitrary values rather say class names child component must use attributes apply values unfortunately litters markup style information also attribute used assign css properties pseudoelements like significantly limits properties component expose caller custom styling workaround parent css override child css requires parent css coupled child implementing markup value variants based lighter darker shades color may used number selectors complicating effort component uses scoped css highlyspecific selectors may even difficult override css variables fully supported every common browser proposing vue support mustache syntax block sfcs css variables declared vue set react changes values using dom method allow component authors provide props styling decisions way still reactive using attribute capabilities pseudoelements tidier template internally components also use make styling decisions including pseudoelements based computed values fully reactive example component support css variables properties wire manually watcher may possible support ie lt replacing variables style values replacing generated style tag needed proposed api look like api would simply block accepts mustache syntax declaration css variables behind scenes reacts changes using stylesetproperty method update css variable value component author perspective html title export default name colorheader props bg type string default inherit required false bghover type string default inherit required false title type string default untitled required false root bgcolor bg bghovercolor bghover backgroundcolor var bgcolor hover backgroundcolor var bghovercolor one side see would require vue compiler parse css recognizes variable name mustache could problem using css needs preprocessor alternative implementation vue supports mustache syntax anywhere within style block understood used css values names properties selectors vue makes attempt parse css find mustaches discrete mustache expression vue replaces mustache syntax css variable declaration top autonamed mustache syntax appeared vue needs update value names created reactively would compatible css variant allows css variable syntax nt replace mustache syntax something else mustache syntax causes much headache linters ides etc since curly braces important css third alternative would component author use css variable syntax require want vue reactively set update variable simply use kebabcase version one data prop computed attributes ie complex expressions direct use methods example html title export default name colorheader props bgcolor type string default inherit required false bghover type string default inherit required false title type string default untitled required false backgroundcolor var bgcolor hover backgroundcolor var bghover prevent collisions real legacy variables samenamed component features could optin attribute style element like scoped operates", "num": "7346", "d": "12/2017"}, {"title": "using existing rendered template", "body": "problem feature solve mount vue existing php rendered markup vue directly hook example direct request server render markup without using vue take document loaded client side vue router request js render markup also try php js render markup proposed api look like php rendered markup datarendered attribute detected vue hook directly", "num": "7345", "d": "12/2017"}, {"title": "vue parsing prop names numbers", "body": "version reproduction link steps reproduce run linked fiddle check result see prop number nt parsed verify inspecting devtools prop attached element attribute expected prop parsed value component actually happening prop parsed value component default value hi working time picker using sfc want boolean prop determine whether use format time however using prop template equivalent nt seem working switch props example works fine thinking something number prop name maybe using numbers prop names like supported nt able find anything docs thanks time", "num": "7344", "d": "12/2017"}, {"title": "time value syncing empty values", "body": "version reproduction link steps reproduce use input type time step seconds fill minutes seconds expected sync minutes seconds think even fill hour zeros maybe actually happening syncing sure bug vue browsers general tested new chrome new firefox old browsers seems work fine thanks good work", "num": "7343", "d": "12/2017"}, {"title": "vfor \u548c vhtml \u540c\u65f6\u4f7f\u7528\u65f6\u5982\u4f55\u53bb\u6389 \u5916\u5c42\u6807\u7b7e", "body": "version reproduction link steps reproduce domarr expected actually happening", "num": "7342", "d": "12/2017"}, {"title": "allow using js constants template event attributes", "body": "problem feature solve remove redundant values actions names template attributes events often use values actions names component event methods allow simplicity proposed api look like make following code valid currently impossible reference onupdatesearchterm input valid code clone constant value template instead reference javascript import mapactions vuex import storeactionkeys export default name minimalexemple methods mapactions onupdatesearchterm", "num": "7341", "d": "12/2017"}, {"title": "\u4f7f\u7528vuecli", "body": "\u5728chrome\u663e\u793a\u6b63\u5e38 \u914d\u7f6e\u5982\u4e0b", "num": "7340", "d": "12/2017"}, {"title": "vfor\u91cc\u9762\u53ef\u5426\u6dfb\u52a0\u5bf9 \u7684\u8bbf\u95ee api", "body": "problem feature solve \u53d1\u73b0vfor\u91cc\u9762\u65e0\u6cd5\u8bbf\u95ee vm vm \u4f8b\u5982 thislistdata value v \u73b0\u5728\u89e3\u51b3\u529e\u6cd5\u662f\u4f7f\u7528 methods vuex \u7684 getters \u662f\u5426\u53ef\u4ee5\u914d\u7f6e\u4e00\u79cd \u4e0d\u88ab\u8f6c\u5316\u4e3a get set \u7684 \u53ef\u662f\u4e66\u5199\u7684\u6709\u70b9\u957f\u800c\u4e14\u4e0d\u80fd\u8868\u8fbe \u8fd9\u662f\u6570\u636e proposed api look like \u53ef\u4ee5\u53d6\u540d\u53ebself\u6216\u5176\u4ed6\u6216\u53eb \u83b7\u5f97\u4e00\u79cd\u53ef\u4ee5\u58f0\u660e \u6b7b \u53ef\u4ee5\u53d6\u540d\u53eb \u53ef\u4ee5\u4e0e data props", "num": "7339", "d": "12/2017"}, {"title": "use vfor", "body": "version reproduction link steps reproduce use routeparmas vfor get error route undefine expected want use routeparmas vfor actually happening use routeparmas vfor get error route undefine", "num": "7338", "d": "12/2017"}, {"title": "vfor", "body": "use routeparams vfor take error route undefine think scope action get relly vfor", "num": "7337", "d": "12/2017"}, {"title": "vfor amp amp", "body": "use routeparams vfor take error route undefine think scope action get relly vfor", "num": "7336", "d": "12/2017"}, {"title": "support array objects", "body": "version reproduction link steps reproduce modify properties valuename percent let map let data dataarr dataname test mappush data export default name app data return dataarray map computed percent function return map arrlength methods function consolelog map arr map arrsplice consolelog map arr expected test actually happening", "num": "7335", "d": "12/2017"}, {"title": "\u5173\u4e8escoped\u7684\u6df1\u5ea6\u4f5c\u7528\u9009\u62e9\u5668", "body": "problem feature solve gt gt gt proposed api look like \u5efa\u8bae\u6587\u6863\u8865\u5145", "num": "7334", "d": "12/2017"}, {"title": "\u751f\u547d\u5468\u671f\u51fd\u6570\u4e0d\u652f\u6301 async \u5417", "body": "problem feature solve \u5e0c\u671b\u751f\u547d\u5468\u671f\u51fd\u6570\u80fd\u591f\u63d0\u4f9b async \u7684\u652f\u6301 proposed api look like async create await something mounted wait something done", "num": "7333", "d": "12/2017"}, {"title": "typeerror read propertywithtaskof undefined", "body": "writing components modifying data components change display sub components components appear typeerror read propertywithtaskof undefined version version make mistake", "num": "7332", "d": "12/2017"}, {"title": "required inputs child components highlighted invalid render firefox", "body": "version reproduction link steps reproduce additional steps required opening jsfiddle firefox automatically cause issue display expected required inputs rendered child component without valid default value display normally actually happening unselected required inputs highlighted though submit attempt made despite user action taken", "num": "7331", "d": "12/2017"}, {"title": "svg\u4e2dforeignobject\u5143\u7d20\u5185\u7684svg\u5185\u90e8\u5b50\u5143\u7d20\u4e0d\u663e\u793a", "body": "version reproduction link steps reproduce ok bug expected actually happening", "num": "7330", "d": "12/2017"}, {"title": "component reuse events cleared", "body": "version reproduction link steps reproduce click click show button bind click bind expected click bind actually happening click bind", "num": "7329", "d": "12/2017"}, {"title": "support collection data types vfor", "body": "version reproduction link steps reproduce example var map new map mapset mapset write vfor statement expected actually happening result empty", "num": "7328", "d": "12/2017"}, {"title": "support collection data types vfor", "body": "example write vfor statement", "num": "7326", "d": "12/2017"}, {"title": "vue template compiler modifies viewbox attribute name", "body": "version reproduction link steps reproduce get svg file html format call vuetemplatecompilercompile inspect resulting element viewbox changed viewbox expected svg element attribute name equals viewbox actually happening svg element attribute name equals viewbox reference issue nuxtjs", "num": "7324", "d": "12/2017"}, {"title": "duplicate keys detected error keyed children inside vfored template", "body": "version reproduction link steps reproduce open jsfiddle demo open console run demo see error like vue warn duplicate keys detected expected children inside repeated share keys rerender target element changes actually happening errors raised message vue warn duplicate keys detected raised cause behavior linked pr also references issue workaround could avoid error adding prefix suffix", "num": "7323", "d": "12/2017"}, {"title": "tel change change root data", "body": "version reproduction link steps reproduce roottime change tel expected change tel data actually happening tel change change tel change roottime", "num": "7321", "d": "12/2017"}, {"title": "tel work change root data", "body": "js bin roottime num new vue el root data num created roottime new date setinterval gt roottime new date thisnum mathrandom", "num": "7320", "d": "12/2017"}, {"title": "vuejs recursive components nt get updated using nested array raw json", "body": "version reproduction link steps reproduce trying create tree add function using computed data used treeview example vuejs official homepage combine computed function created found luck implementing trying solve days already still luck trying look help expected click add symbol end list call addchild function successfully append data actually happening data gets appended recursive component reactive", "num": "7317", "d": "12/2017"}, {"title": "vuejs event target return undefined wrong html node", "body": "version reproduction link steps reproduce try figured problem eventtarget think lag expected return id clicked element form eventtarget way use vuejs function inside javascript onclick von click event like onclick vuefn thisid wanted receive current clicked id without event says vuefn define thx advance actually happening works click faster return empty id wrong tag click tabs slowly works fine click little bit faster appvue line returning empty id line excepted return element return tag", "num": "7316", "d": "12/2017"}, {"title": "vuejs event target return undefined wrong html node", "body": "hello facing issue eventtarget click tabs slowly works fine click little bit faster appvue line returning empty id line excepted return element return tag gist way use vuejs function inside javascript onclick von click event like onclick vuefn thisid event wanted receive current clicked id without event says vuefn define thx advance", "num": "7315", "d": "12/2017"}, {"title": "user defined types namespace typescirpt template expressions", "body": "problem feature solve know attempt access user defined globals template expressions c wpf user love vuejs use vuejs typescirpt build projects work hope vuejs support syntax like xmlns xaml maybe come true day future proposed api look like issue typescript myenumsts export enum shape rectangle rectangle ellipse ellipse triangle triangle hexagon hexagon export enum size small small medium medium large large html import component vue prop vuepropertydecorator import shape size myenums component export default class mycomponent extends vue prop shape shape prop size size get classes array return shape thisshape size thissize html curent time myclasscurrenttime import component vue vuepropertydecorator import mycomponent mycomponentvue component export default class app extends vue", "num": "7313", "d": "12/2017"}, {"title": "vue dev mode production environment", "body": "version reproduction link steps reproduce php application uses vue js mainly settings page settings created vue use webpack everything works fine live version console error vue development mode use vue also one component dashboard page vue todo list like one vue documentation dashboard page get console message vue development mode use webpack dashboard settings page hence settings looked hours try find answer successful creating issue php file place vue component included javascript file plus variables see everything used fiddle really nt think make reproducible sorry help using bunch stuff php symfony twig sure could expected vue production mode actually happening vue dev environment", "num": "7312", "d": "12/2017"}, {"title": "allow reference registered components extends property", "body": "problem feature solve registered component could referenced identifier using property currently works set component directly order get registered component would look like proposed api look like however shorter syntax could using string reference previously registered component", "num": "7310", "d": "12/2017"}, {"title": "custom attributes valid", "body": "problem feature solve buffered linting validationtools invalid html risking conflicts future html svg mathmlspecs proposed api look like short version instead use long version think add discussion unfortunately allowed opened duplicate buffers much htmlvalidator know nodejs browserplugin ide thinks invalid tell buffers minor specs gave us data custom attributes sure conflict native attributes future specs since native attributes intepreted sourcecode think js remove invalid attributes fitting argument custom attributes data also javascript api like differs code native attributes structurally visually think great think data might bloated problem specs", "num": "7309", "d": "12/2017"}, {"title": "slotscope name misleading true clearer name slotprops", "body": "problem feature solve rename reduce needless confusion around using slots current name slotscope rather misleading scope wrong concept suggest particularly given angular use scope true correct concept props suggested name change render current developer confusions moot less explaining developer questions answer know rename gross help make learning vue easier proposed api look like add slotprops alias slotscope prefer slotprops documentation deprecate spelling slotscope", "num": "7307", "d": "12/2017"}, {"title": "custom attributes valid", "body": "think add discussion unfortunately allowed opened duplicate buffers much htmlvalidator know nodejs browserplugin ide thinks invalid tell buffers minor specs gave us data custom attributes sure conflict native attributes future specs since native attributes intepreted sourcecode think js remove invalid attributes fitting argument custom attributes data also javascript api like differs code native attributes structurally visually think great think data might bloated problem specs", "num": "7306", "d": "12/2017"}, {"title": "", "body": "problem feature solve proposed api look like \u65e0", "num": "7305", "d": "12/2017"}, {"title": "difference filter computed", "body": "want transform time stamp back end beijing time essential difference application scenario filter computed filter computed", "num": "7304", "d": "12/2017"}, {"title": "", "body": "", "num": "7303", "d": "12/2017"}, {"title": "use compilerincluded build nodejs project without webpack", "body": "version reproduction link steps reproduce code nodejs project html message const vue require vue lt p gt new vue el app data message hello vue expected html render hello vue actually happening start project got error write code like work finebut hard build project production known webpackconfigjs using webpack resovle problem like dont use webpack way let node resolve development environment", "num": "7301", "d": "12/2017"}, {"title": "component rerendered even needed", "body": "version reproduction link steps reproduce render component children parameter empty array different behavior empty array component rerender every time parent change even nt depend parent parameter component updated correctly expected nt render foobar needed actually happening render every time link issue opened vuejs jsx", "num": "7300", "d": "12/2017"}, {"title": "", "body": "code nodejs project html message const vue require vue lt p gt new vue el app data message hello vue either precompile templates render functions use compilerincluded build write code like work finebut hard build project production known webpackconfigjs using webpack resovle problem like dont use webpack way let node resolve development environment", "num": "7299", "d": "12/2017"}, {"title": "regexp causes bug injecting js html", "body": "version undefined reproduction link steps reproduce injecting vue html nothing show android webview try replace", "num": "7298", "d": "12/2017"}, {"title": "computed property maybe bug misunderstanding", "body": "version reproduction link steps reproduce hello please check small report maybe helpful component receive array objects props two computed property sortedbymetro sortedbyavailable order display two results user inside computed property take thisstores props sort see example add const temp constant order make shallow copy incoming props case everything works great receive results looking take away const temp computed property try sort array objects props thisstoressort end crush vue dev tools browser stop responding console error visible vue chrome version official build beta maybe usefull maybe best regards expected hello please check small report maybe helpful component receive array objects props two computed property sortedbymetro sortedbyavailable order display two results user inside computed property take thisstores props sort see example add const temp constant order make shallow copy incoming props case everything works great receive results looking take away const temp computed property try sort array objects props thisstoressort end crush vue dev tools browser stop responding console error visible vue chrome version official build beta maybe usefull maybe best regards actually happening hello please check small report maybe helpful component receive array objects props two computed property sortedbymetro sortedbyavailable order display two results user inside computed property take thisstores props sort see example add const temp constant order make shallow copy incoming props case everything works great receive results looking take away const temp computed property try sort array objects props thisstoressort end crush vue dev tools browser stop responding console error visible vue chrome version official build beta maybe usefull maybe best regards", "num": "7297", "d": "12/2017"}, {"title": "dynamic type coming vbind ignored vmodel", "body": "version reproduction link steps reproduce set input type via vbind like codepen use checkbox change bound value expected checkbox control value assigned vmodel actually happening value changed seems vbind evaluated vmodel thus input always textbox eg default therefore bound properly works textbox related input types comparison type variabletype works fine see also worked vue might expected behaviour could find mentioned anywhere cheers", "num": "7296", "d": "12/2017"}, {"title": "vue interpolating template strings", "body": "version reproduction link steps reproduce pen see errors console look like expected errors expecting vue interpolate template strings actually happening error happen vue passing literal template strings custom elements elements elements throwing errors vue interpolating strings", "num": "7295", "d": "12/2017"}, {"title": "custom event emit vif component yet trigger velse component listener", "body": "version reproduction link steps reproduce define custom component witch emit custom event use vif velse create component instances first instance use von listen custom event second donot toggle vif condition emit custom event second instance expected listener first instance triggered actually happening listener first instance triggered", "num": "7294", "d": "12/2017"}, {"title": "npm run dev taking long laravel webpack", "body": "version reproduction link steps reproduce using vue laravel default vue components js files separate vue instances css files processed webpack previously npm run dev took seconds create js files npm run prod taking like minute recently updated vue latest version started taking long npm run dev taking like around minutes run even npm run prod taking lower time expected npm run dev take seconds actually happening npm run dev taking long", "num": "7293", "d": "12/2017"}, {"title": "performance decrease upgrade", "body": "version reproduction link steps reproduce change fix clone slot nodes render fn usage well render function become slow compare vue vue child node component become even obvious expected render faster scrolling actually happening slow", "num": "7292", "d": "12/2017"}, {"title": "feature request lightweight nondom vue class services", "body": "overview tl dr related store pattern store pattern perse one end datamodelling spectrum components reactive properties complex apps lot extra functionality parent components things related component job end vuex state getters async actions careful find lot preparatory related code store however find needing something shared across various components without overhead vuex needing centralised simple reusable service classes generally fit bill service dumb let say loader get away simple class however service requires state looks advantageous move state several components say service using normally best way using vue instance great way declare data methods per rest app use computed properties free watchers free gain access however also come bunch machinery probably needed anything dom related events props refs parent children etc anything visual templates probably ca nt think right would really nice able break simple reactiveness vue component kind precursor could used independently something visual problem feature solve provides simpler yet still vuecentric alternative silos reactivity dom component overhead allows components store cleaned makes wiring debugging simpler proposed api look like javascript component import foo servicesfooservice import bar servicesbarservice export default computed foo foo optionscomputed maybe even foo computed bar barvalue baz return thisbazreplace wg sure yet much vue api would included events well vue class would mixin extend store class", "num": "7290", "d": "12/2017"}, {"title": "vue detect changes map collection", "body": "version reproduction link steps reproduce map collections reactive even computed properties depending map collections changes dependency changed expected map collection like data structure reactive actually happening instance variable type map collection reflect changes ui", "num": "7289", "d": "12/2017"}, {"title": "element vshow link relationship", "body": "version reproduction link steps reproduce check appvue see router view vshow true check componentshellovue see vshow false root expected component hidden actually happening component still show think vshow amp amp linked", "num": "7288", "d": "12/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u5f02\u6b65\u7ec4\u4ef6\u52a0\u8f7d\u6210\u529f actually happening reason typeerror read property call undefined", "num": "7285", "d": "12/2017"}, {"title": "provideinject fails polyfilled symbol", "body": "version reproduction link steps reproduce run code either remove component change symbol string work fine expected print message parent hello world parent actually happening nt receive injection", "num": "7284", "d": "12/2017"}, {"title": "param routerlink loop data array", "body": "version reproduction link steps reproduce make loop routerlink params data array expected every routerlink iteration relevant param array item actually happening every routerlink iteration param first array item bug new version change version code everything ok use developer console check href parameter generated links ok label wrong href generated param", "num": "7283", "d": "12/2017"}, {"title": "vue accept undefined values returning array functional component", "body": "version reproduction link steps reproduce check console log expected render input element actually happening functional component returns array array contains values besides vnodes like eg null undefined vue render anything throw error checked previous versions seems never worked correctly get different warning set property isrootinsert null question case handled vue internally careful return nullundefined values returned array", "num": "7282", "d": "12/2017"}, {"title": "\u4f7f\u7528 vscode \u65f6 vuecomponent \u4e2d\u7684 \u7c7b\u578b \u5728 ts \u4e2d\u662f\u6b63\u786e\u7684 \u4f46\u5728 js \u6587\u4ef6\u5374\u662f \u7c7b\u578b", "body": "version reproduction link steps reproduce git clone vuesandbox cd vuesandbox npm npm expected error assign x constant readonly property error assign x constant readonly property actually happening error assign x constant readonly property \u4f7f\u7528 vscode \u67e5\u770b\u5c31\u4f1a\u770b\u5230 \u5728 js \u6587\u4ef6\u4e2d \u7684\u7c7b\u578b\u4e3a \u7c7b\u578b \u660e\u660e\u662f\u540c\u6837\u7684\u5185\u5bb9 \u4f46\u7c7b\u578b\u68c0\u67e5\u7684\u7ed3\u679c\u5374\u4e0d\u4e00\u6837 \u8ba9\u4eba\u611f\u89c9\u5947\u602a", "num": "7281", "d": "12/2017"}, {"title": "data getters invoked component initialisation", "body": "version reproduction link steps reproduce run jsfiddle snippet open browser console see warning property getter expected expect data props enumerable properties invoked without explicit call actually happening seems function works way accepts object property value instead getting getter demand despite fact uses respect userdefined getters setters faced problem context lazyloaded backend entities redux store selectors returns restfull models models nested properties wrapped getters call needed trigger background api request additional info getters invoked immediately bunch requests sent initial rendering pull request fix may understand concept behaviour sorry bad english", "num": "7280", "d": "12/2017"}, {"title": "invalid key modify validation rules object prop", "body": "version reproduction link steps reproduce getting following warning defining prop like know standard property vue used vue plugin way disable warning change validation rules props expected ideally way disable specific warning actually happening way currently", "num": "7279", "d": "12/2017"}, {"title": "invalid key modify validation rules object prop", "body": "getting following warning defining prop like know standard property vue vue plugin reads property assigns data according way disable warning change validation rules props", "num": "7278", "d": "12/2017"}, {"title": "windowonbeforeunload\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c", "body": "version reproduction link steps reproduce expected \u5173\u95ed\u9875\u9762\u76f4\u63a5\u54cd\u5e94 actually happening \u4e0d\u77e5\u9053", "num": "7277", "d": "12/2017"}, {"title": "windowonbeforeunload\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c", "body": "version reproduction link steps reproduce expected \u5173\u95ed\u9875\u9762\u76f4\u63a5\u54cd\u5e94 actually happening \u4e0d\u77e5\u9053", "num": "7276", "d": "12/2017"}, {"title": "nested slot would work", "body": "version reproduction link steps reproduce open jsfiddle see nothing result panel result reproduction expected expected see dom label field result dom inside code alerts print undefined slotslabel slotsfield actually happening suggestion use nested slot vue", "num": "7275", "d": "12/2017"}, {"title": "provide way allow module augmentation vueconfig", "body": "problem feature solve inject field switch global language ts redefine field proposed api look like extract interface", "num": "7273", "d": "12/2017"}, {"title": "\u5b98\u65b9\u6587\u6863", "body": "", "num": "7270", "d": "12/2017"}, {"title": "pushing empty array vfor unique key", "body": "array items rendering vfor loop using key itemid track removing items list application add new item items div blank form field issue add item unqiue key since itemid exists brand new item saved way deal", "num": "7269", "d": "12/2017"}, {"title": "spread syntax error unexpected token", "body": "syntax error unexpected token", "num": "7268", "d": "12/2017"}, {"title": "write type declaration typescript definitelytypeddts vue component", "body": "problem feature solve vue support typescript getting better want able get older vue components sfc support typescript declarations definitelytypeddts nt find information came ask help vue development team future development plans typescript type declaration proposed api look like create type declaration file vue component sfc typescript import vnode vue interface mycomponentoptions data value number name string props defaultvalue number defaultname string event changevalue value number gt void changename name string gt void export mycomponentoptions", "num": "7267", "d": "12/2017"}, {"title": "vue typescript functional component", "body": "carduserinfotsx javascript import vue vuepropertydecorator import indexscss export default vuecomponent carduserinfo functional true props userinfo type object required true hitext string describe string render h ctx return test javascript test tsx exclude nodemodules loader tsloader use babelloader loader tsloader options appendtsxsuffixto vue result dom dom test used nonfunctional component got expect", "num": "7266", "d": "12/2017"}, {"title": "validate nested props", "body": "version reproduction link steps reproduce prop validate allow key prop one throw warning error happens array object must validate key element object example expected expect key type default required validator valid actually happening key type default required validator invalid", "num": "7265", "d": "12/2017"}, {"title": "vuemodelstage keep data complete operations", "body": "problem feature solve although two way binding quite convenient useful uiux requirements sometimes hope vue help keep data temporarily user complete entire operations simple actions implement easily complex operations cancel behavior wizard idea support stage cache ability call react automatically views proposed api look like", "num": "7263", "d": "12/2017"}, {"title": "remove global variable", "body": "problem feature solve library use less global variables possible one time copy amp pasted code one function another forgot change back code could run shocked actually pointing viewmodel global variables especially one common name might cause confusion renamed proposed api look like applicable", "num": "7262", "d": "12/2017"}, {"title": "watcher strange behavior", "body": "version reproduction link steps reproduce open link view code expected message must hello night stalker actually happening message happens watch method called", "num": "7261", "d": "12/2017"}, {"title": "valid html breaks vue", "body": "version reproduction link steps reproduce pen comment within attributes leaks content element outputted dom using dombased template behavior different error thrown original template stays dom see supposedtobeinterpolated variables screen expected comment sort thing handled similarly plain html handles actually happening vue errors might invalid put html like technically valid browsers accept format convert comments bunch attributes know ideally people nt put content like think vue gracefully work like regular html makes possible developer example take html may handed designer designed nonvue environment work without hassle dev able get working data stuff", "num": "7260", "d": "12/2017"}, {"title": "\u5217\u8868\u8fc7\u6e21\u6548\u679c\u7684\u5c0fbug", "body": "value index arr \u5217\u8868\u7684key\u503c\u662f key index", "num": "7259", "d": "12/2017"}, {"title": "vue performing unnecessary rerender using listeners", "body": "version earlier versions reproduction link steps reproduce open console observe typing something input fields enter text name field vue rerenders three textfield components line replace empty object enter text field vue rerenders updated textfield expected vue rerender ony component props changed actually happening using component components rendered vue also rerender components parent component although props may changed", "num": "7257", "d": "12/2017"}, {"title": "hoped onscroll event bound component", "body": "problem feature solve app handle onscroll event proposed api look like von onscroll", "num": "7256", "d": "12/2017"}, {"title": "solve seo problem", "body": "project create vue project lunch problem seo website please guidance thank developer", "num": "7255", "d": "12/2017"}, {"title": "vif compatible ie", "body": "version reproduction link steps reproduce open ie expected hide table data data actually happening still", "num": "7254", "d": "12/2017"}, {"title": "vif compatible ie", "body": "please open ie see first data data", "num": "7253", "d": "12/2017"}, {"title": "flag compatible ie", "body": "please look demo open ie see first data line data", "num": "7252", "d": "12/2017"}, {"title": "date fields appear empty first load initialized vue", "body": "version reproduction link steps reproduce create input type date initialize valid date value view safari ios see appear empty although value set click field see ios datepicker set value provided affects date inputs initialized vue jsfiddle provided date inputs easier reproduction expected date inputs value actually happening date input initialized vue appears empty", "num": "7251", "d": "12/2017"}, {"title": "option set document", "body": "problem feature solve \u5e0c\u671b\u80fd\u6709\u9078\u9805\u53ef\u4ee5\u8b93\u6211\u5011\u81ea\u8a02 vue \u6240\u4f7f\u7528\u7684 document \u800c\u4e0d\u9700\u8981\u53bb\u5c07 document \u8a2d\u5b9a\u70ba global var \u4e26\u4e14\u652f\u63f4\u8b93 document \u53ef\u4ee5\u5728\u5c0e\u5165 vue \u4e4b\u5f8c \u624d\u5efa\u7acb hope option set document vuejs use nt need set document global nt make us set document import vue proposed api look like", "num": "7250", "d": "12/2017"}, {"title": "bug unable use custom elements web components inside vue components", "body": "summary custom elements registered example try use vue component like html get error like following info vue component entire content looks like html thing outputted dom", "num": "7249", "d": "12/2017"}, {"title": "input event dropdown fire", "body": "version reproduction link steps reproduce select option dropdown expected console appear record triggered event processinput data updates actually happening record appears console input event triggered data updates change text textfield event input triggered correctly select element firefoxsafarichrome everything working textfield select list", "num": "7248", "d": "12/2017"}, {"title": "error props parameter dynamic component", "body": "hello actually know report problem happen versions vue vuex", "num": "7247", "d": "12/2017"}, {"title": "vue wrong \u8bed\u6cd5\u9519\u8bef", "body": "", "num": "7246", "d": "12/2017"}, {"title": "gets clobbered uglifyjswebpackplugin run webpack", "body": "version reproduction link na steps reproduce running uglifyjs webpack plugin error thrown function vue error reads instance referring function found method expected uglify able correctly minify vue actually happening vue successfully minified webpack locking build back fixed uglify issue", "num": "7245", "d": "12/2017"}, {"title": "working ie new link", "body": "version reproduction link steps reproduce open ie expected act opened browser actually happening vue component template rendering computed item html within rendering pulled vue via cdn using transcribe utility ie babel", "num": "7244", "d": "12/2017"}, {"title": "template tag multiple element looping nt work", "body": "version reproduction link steps reproduce run fiddle ie see render code runs fine chrome firefox expected show table info cars run horizontally actual project length cars unknown looping unavoidable actually happening ie render error dev tool says car undefined", "num": "7243", "d": "12/2017"}, {"title": "working ie", "body": "version reproduction link steps reproduce none expected simple form shown browser actually happening html template showing computed item html within rendering pulled vue via cdn using transcribe utility ie babel default site uses bootstrap jquery yet pulling vue end thanks", "num": "7241", "d": "12/2017"}, {"title": "make possible cleardisable templates cache", "body": "problem feature solve using providing template source get cached using elements templates like different pages like components rendered first compiled template even using different template ids content cached unnecessary leads memory bloat caches inner html fast fetch proposed feature give ability opt template caching proposed api look like", "num": "7240", "d": "12/2017"}, {"title": "wrong vuecli big error", "body": "use vuecli build project vue init webpack myproject get big mistake look big wrong cant use vuecli create project please help urgency", "num": "7239", "d": "12/2017"}, {"title": "vuecli\u521b\u5efa\u7684\u9879\u76ee\u6253\u5305\u540e\u5728\u5b89\u5353\u624b\u673aqq\u6d4f\u89c8\u5668\u548cuc\u6d4f\u89c8\u5668\u9875\u9762\u7a7a\u767d", "body": "version reproduction link steps reproduce expected \u6b63\u5e38\u8bbf\u95ee actually happening", "num": "7238", "d": "12/2017"}, {"title": "\u7ec4\u4ef6\u540d\u79f0\u6821\u9a8c\u9519\u8bef", "body": "version reproduction link steps reproduce expected \u4e0d\u62a5\u9519 actually happening \u62a5\u9519 \u5bf9\u7ec4\u4ef6\u540d\u79f0\u6821\u9a8c\u5f15\u5165\u4e86breaking \u53c2\u89c1 elementjs tag\u548csvg \u89c4\u8303\u89c6\u89d2 \u89e3\u6790\u5668\u89c6\u89d2 \u5bf9\u4e8etemplate dom \u7528\u6237\u89c6\u89d2 \u5f53\u7528\u6237\u5728template \u5bbd\u8fdb\u4e25\u51fa \u603b\u7ed3", "num": "7237", "d": "12/2017"}, {"title": "\u7ec4\u4ef6\u540d\u79f0\u6821\u9a8c\u9519\u8bef", "body": "version reproduction link steps reproduce expected \u4e0d\u62a5\u9519 actually happening \u62a5\u9519 \u5bf9\u7ec4\u4ef6\u540d\u79f0\u6821\u9a8c\u5f15\u5165\u4e86breaking \u53c2\u89c1 elementjs tag\u548csvg \u89c4\u8303\u89c6\u89d2 \u89e3\u6790\u5668\u89c6\u89d2 \u5bf9\u4e8etemplate dom \u7528\u6237\u89c6\u89d2 \u5f53\u7528\u6237\u5728template \u5bbd\u8fdb\u4e25\u51fa \u603b\u7ed3", "num": "7236", "d": "12/2017"}, {"title": "\u7ec4\u4ef6\u540d\u79f0\u6821\u9a8c\u9519\u8bef", "body": "issue helper\u4f1a\u62a5 requesturi large \u5bf9\u7ec4\u4ef6\u540d\u79f0\u6821\u9a8c\u5f15\u5165\u4e86breaking \u53c2\u89c1 elementjs tag\u548csvg \u89c4\u8303\u89c6\u89d2 \u89e3\u6790\u5668\u89c6\u89d2 \u5bf9\u4e8etemplate dom \u7528\u6237\u89c6\u89d2 \u5f53\u7528\u6237\u5728template \u5bbd\u8fdb\u4e25\u51fa \u603b\u7ed3", "num": "7235", "d": "12/2017"}, {"title": "thisroutego \u65b9\u6cd5\u6267\u884c\u540e\u9875\u9762\u6ca1\u6709\u540e\u9000", "body": "problem feature solve routergo proposed api look like \u8fd4\u56de export default methods routerback routergo", "num": "7234", "d": "12/2017"}, {"title": "thisroutego \u65b9\u6cd5\u6267\u884c\u540e\u9875\u9762\u6ca1\u6709\u540e\u9000", "body": "routergo", "num": "7233", "d": "12/2017"}, {"title": "\u670d\u52a1\u7aef\u6e32\u67d3\u5e76\u53d1\u6d4b\u8bd5\u540e\u5185\u5b58\u4fdd\u6301\u9ad8\u70b9\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u624d\u5f00\u59cb\u4e0b\u964d", "body": "version reproduction link steps reproduce expected \u5e76\u53d1\u5b8c\u6210\u540e\u5185\u5b58\u9a6c\u4e0a\u4e0b\u964d actually happening \u5e76\u53d1\u5b8c\u6210\u540e\u5185\u5b58\u6ca1\u6709\u9a6c\u4e0a\u4e0b\u964d", "num": "7232", "d": "12/2017"}, {"title": "force watcher", "body": "problem feature solve computed vmodel input using computed vmodel prop default using trim return value user input something emit parent handle prop back last example case input input return value always actually input filed look like two value match return value always active watcher update input field feature vmodel always match return value proposed api look like value handler function val oldval force true", "num": "7231", "d": "12/2017"}, {"title": "ios", "body": "version reproduction link steps reproduce css html body width height margin padding position relative container position relative width height background fff expected actually happening \u81ea\u9876\u90e8\u5230\u5e95\u90e8\u6709\u4e00\u5927\u7247\u7a7a\u767d\u4f1a\u906e\u76d6\u4f4f css html body width height margin padding position relative container width height background fff overflow scroll webkitoverflowscrolling touch position absolute \u673a\u5668\u4e0a\u4f7f\u7528webview history container \u5e76\u4e0d\u662f container scroll \u8fd9\u6837\u5199 \u5982\u679c\u4e0d\u52a0 webkitoverflowscrolling touch", "num": "7229", "d": "12/2017"}, {"title": "select correct option render syntax sugar", "body": "version reproduction link steps reproduce use syntax sugar render option select expected select option selected actually happening select option selected", "num": "7228", "d": "12/2017"}, {"title": "warn misused singular option name", "body": "problem feature solve might confusing hard realize wrong especially beginners proposed api look like", "num": "7227", "d": "12/2017"}, {"title": "watch immediatetrue effect declared component options", "body": "version reproduction link steps reproduce open jsfiddle see expected handler component options invoked immediatly like handler watch method actually happening handler component options invoked initially", "num": "7226", "d": "12/2017"}, {"title": "add distvueesmdts", "body": "problem feature solve typescript error following code proposed api look like file content environment parcel nt support webpack alias nt support", "num": "7225", "d": "12/2017"}, {"title": "vuetemplatecompiler doubleescaping newlines ssrnode text string templates", "body": "version reproduction link used gist ssrcompile exposed globals build vue steps reproduce expected vuetemplatecompiler doubleescape newlines attributes ssrnode string templates actually happening vuetemplatecompiler doubleescapes newlines attributes ssrnodes look output reproduction steps see newline character n double escaped part attribute ssrnode optimized string template stored attrs property fine newlines outside attributes also fine bug observed vuetemplatecompiler nodejs example seems silly newlines attribute common using responsive images multiple sizes srcset attribute usually broken onto one line per sizeurl readability colleague mine ran bug responsive images working differently ssr rehydration due problem browser aborted srcset parsing finding n literal string", "num": "7223", "d": "12/2017"}, {"title": "better jsx examples", "body": "please suggest better resource vue jsx maybe working jsx example", "num": "7222", "d": "12/2017"}, {"title": "uncaught domexception error vue ssr production mode using vif unpredictable data", "body": "version reproduction link steps reproduce given repo run issue reproducible production mode hit refresh bunch times get error console unfortunately nature bug unpredictability data difference client server opted mathrandom based scenario hence need hit refresh times reproduce issue highlight problematic code html js export default name app created unpredictable data differ client server thistherandom mathrandom gt expected app nt explode instead somehow quarantine error everything else continue work print error console actually happening app encounters runtime uncaught domexception vue stops working completely sorry addressed already tried search issues found loosely similar ones closed action due missing informations reproduce bug something like may understand particular problem may bug per se maybe known issue fixed hence warning development mode says watch datadom mismatch something really byte hard case error happened production live customers really possible foresee depended data different client server specific timezones quite fun debug asking possible make error less disruptive single component error whole stop work component also understand answer something line stop using vif use vshow instead probably going unfortunate something useful also dangerous maybe pointed documentation one last thing warning development quite right albeit useful cases nt represent actual error encountered simple vif wrong place thanks whomever look", "num": "7221", "d": "12/2017"}, {"title": "wirte consolelog printout property method splice defined instance", "body": "problem feature solve cancel write consolelog vue warn property method splice defined instance referenced render make sure property reactive either data option classbased components initializing property see found srcpagesuseruserloginvue srcappvue export default name userlogin data return msg userlogin created function consolelog proposed api look like none", "num": "7220", "d": "12/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected actually happening", "num": "7219", "d": "12/2017"}, {"title": "", "body": "", "num": "7218", "d": "12/2017"}, {"title": "vuecli", "body": "", "num": "7217", "d": "12/2017"}, {"title": "vnode reference original component", "body": "problem feature solve two components meant used together parent child meaning components allowed default slot parent component child component originally enforcing check following code importing child component typically works fine however noticed nt context karma test evaluates copy component main difference seems additional property minor differences eg converted looking sure way ideally via strict equality object references ensure children parent component child component used bfs check vnode references proposed api look like opinionated api sort reference original component accessible", "num": "7213", "d": "12/2017"}, {"title": "global namespaced component name cause warn", "body": "version \u7248\u672c reproduction link \u91cd\u73b0\u94fe\u63a5 steps reproduce \u91cd\u73b0\u6b65\u9aa4 js vuecomponent component template expected nt cause warn actually happening warn vueextend vue anonymous function install vueuse component context cause warn js new vue global context namespaced component usable although cause warn think might problem carelessness engine upgrading intentional", "num": "7212", "d": "12/2017"}, {"title": "typescript fails compile methods component mixin", "body": "version reproduction link steps reproduce component file nt build illustrates problem three scenarios define component mixin method interface nt method component build passes call mixin method component render function define method interface component use define component call mixin method even field references mixin make method interface extend mixin method interface component complains implementing mixin methods expected able mixin component define different methods use component type safety actually happening get passing build type declaration scenario please advise", "num": "7211", "d": "12/2017"}, {"title": "scroll event triggered rerender variable inside grid element chrome", "body": "version reproduction link steps reproduce open jsfiddle chrome scroll green div stop scrolling watch scroll event emitted update value yellow box expected scroll event stops emitted stop scrolling actually happening scroll event emitted every value update need use unit template otherwise works fine firefox edge good sure vue chrome issue", "num": "7210", "d": "12/2017"}, {"title": "await async component lifecycle hooks", "body": "problem feature solve user needs implement lifecycle hook depends async operations vue respect async nature implemented hook await vue land proposed api look like api change works awaiting async hooks", "num": "7209", "d": "12/2017"}, {"title": "author know vuejs refresh view fix bug", "body": "version reproduction link steps reproduce author know vuejs refresh view fix bug puzzeld vuejs fan intolerability expected author know vuejs refresh view fix bug puzzeld vuejs fan intolerability actually happening author know vuejs refresh view fix bug puzzeld vuejs fan intolerability author know vuejs refresh view fix bug puzzeld vuejs fan intolerability", "num": "7205", "d": "12/2017"}, {"title": "author know vuejs refresh view fix bug puzzeld", "body": "author know vuejs refresh view fix bug puzzeld vuejs fan intolerability", "num": "7204", "d": "12/2017"}, {"title": "vue \u591a\u5c42\u6570\u636e\u53d8\u5316\u4e0d\u66f4\u65b0\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce \u8be6\u7ec6\u53c2\u89c1 expected actually happening", "num": "7203", "d": "12/2017"}, {"title": "input checkbox multiplechoices working mobile browser nested object", "body": "version reproduction link steps reproduce nested object variable want assign multiple checkboxes bound array eg data subscription category try using form ios android browser value true false expected suppose working perfectly value actually happening value true false input assigned multiple checkboxes bound array lots bug especially android browser sometimes trigger multiplecheckbox sometimes trigger another checkbox everything working fine normal web browser ps working within another application webview normal browser", "num": "7202", "d": "12/2017"}, {"title": "cultures working vue looks like dynamic routing issue", "body": "version reproduction link live website working sqanetcorethetowertechcom steps reproduce open website open chrome console window start showing error expected run properly start working working development server actually happening making website vue using aspnetcore using development bug issues working perfectly fine rolling production giving error internal server error uncaught promise messagetypeid error text request failed status code title code undefined error messagetypeid error text request failed status code title code undefined error proto object", "num": "7201", "d": "12/2017"}, {"title": "bug vdom trying update children data changed case", "body": "version reproduction link steps reproduce open codepen demo open devtool u chrome click button see error like refresh demo page click button see error like data updated correctly expected maybe behavior like raise error raise error maybe error showed help developer easier find data killing page actually happening data duplicate keys behavior different error raise click button data raise error special changes remove keys except duplicate key b compared initial data order different make function hit code section create first key b comes set value next key comes compare old node new node via function samenode time index old node key undefined js error raised", "num": "7199", "d": "12/2017"}, {"title": "\u670d\u52a1\u7aef\u6e32\u67d3\u5b8c\u6210\u4e4b\u540e \u5982\u4f55\u5173\u95eddom\u6821\u9a8c", "body": "problem feature solve \u5c06\u63a8\u65ad\u5ba2\u6237\u7aef\u751f\u6210\u7684\u865a\u62df dom \u6811 virtual dom tree dom \u7ed3\u6784 dom structure dom \u6211\u73b0\u5728\u6709\u4e2a\u9700\u6c42\u5c31\u662f \u6211\u8981\u5728vue\u903b\u8f91\u6267\u884c\u4e4b\u524d \u5728\u5ba2\u6237\u7aef\u5bf9\u670d\u52a1\u7aef\u8fd4\u56de\u7684dom\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539 \u6240\u4ee5\u8ba9\u4ed6\u5728vue\u4ee3\u7801\u6267\u884c\u4e4b\u524d\u6267\u884c \u6821\u9a8c\u4e86dom \u7136\u540edom\u51fa\u73b0\u4e86\u95ee\u9898 proposed api look like \u5982\u4e0a", "num": "7196", "d": "12/2017"}, {"title": "pushing previously empty array nt update dom", "body": "version reproduction link steps reproduce using vue laravel array statuses button click want push new status update dom dynamically array initially empty nothing happens dom doesnt update statuses declare array like statuses element works fine expected expecting dom update push empty array actually happening nothing happening dom updates", "num": "7195", "d": "12/2017"}, {"title": "privide regclass method register component instance", "body": "problem feature solve current implement support register component use tag special attribute loginname gender age birthday createtime may provide parse hook template render proposed api look like provide parse hook method regclass method regclass name etc", "num": "7194", "d": "12/2017"}, {"title": "privide regclass method register component instance", "body": "current implement support component use tag register special attribute loginname gender age birthday createtime may provide parse hook template render", "num": "7193", "d": "12/2017"}, {"title": "data method called argument using mixins data option", "body": "version reproduction link steps reproduce run reproduction logged console uncomment run reproduction expected logged console actually happening logged console", "num": "7191", "d": "12/2017"}, {"title": "got warn accessing vm data method", "body": "version reproduction link steps reproduce run reproduction check console panel expected works fine actually happening found", "num": "7190", "d": "12/2017"}, {"title": "separate namespace computed props data variables within templates scripts", "body": "problem feature solve love everything vue request certainly gripe also realize quite paradigm shift suited major release wanted get get opinions matter currently vue instances hangs member variables regardless props computed data instance share namespace works nicely small components always strive write components small possible however continuing struggle explaining first part new developers different variable constructs smashed together never great explanation satisfied padawan imagine ideal world constructs would namespace solely avoid naming collisions though would extra benefit make easier identify source variable lies proposed api look like templates definition structure remains unchanged think help clarify particular value originated order help new users well old user might taking new codebase thoughts", "num": "7189", "d": "12/2017"}, {"title": "ssr value hydration elements render function", "body": "problem feature solve using jsxrender functions inputs setting default rendered value ssr requires specialist understanding vnode api currently binding value input get rendered html works client side mutating thus set initial value elements may attributes ect server rendering predefine initial value checkboxradio example react api called setting initial value note client value updated via element want cause attribute change time proposed api look like solution could follow defaultvalue api nt really work thus internally handling input types correctly render default value via attribute ssr content simplify setting initial display value inputs", "num": "7188", "d": "12/2017"}, {"title": "\u7ec4\u5efa\u4e2d\u5199 \u6253\u5305\u62a5\u9519", "body": "version undefined reproduction link steps reproduce \u6253\u5305 expected actually happening \u5fc5\u73b0 \u7ec4\u4ef6\u4e2d\u8fd9\u6837\u5199\u6253\u5305\u4f1a\u62a5\u9519 error srcappvue module found error ca nt resolve cssbootstrapcss vuewebpackwebpacksimplesrc srcappvue srcmainjs", "num": "7187", "d": "12/2017"}, {"title": "establish standard way document component props", "body": "problem feature solve currently vetur offers autocompletion amp hover info custom components defined elementui onsenui bootstrapvue however handmaintaining json files seem lot work also colocating doc component definition make updating component challenging helperjson repos feature makes possible write doc sfc js component file autogenerate helper json used enhancing editing experience autogenerating api doc website proposed api look like two optional attributes default export thinking maybe using custom block applies sfc js components jsdoc might another option ideas welcome another idea similar packagejson component libraries point generated helperjson file editors could pick enhance editing experience cc leopoldthecoder elementui masahirotanaka onsenui bootstrapvue rstoenescu quasar johnleider vuetify would interested using feature vue component libraries maintaining would interested helping specing format generated json file editing experiences enabled using file", "num": "7186", "d": "12/2017"}, {"title": "\u5982\u4f55\u4ece\u5217\u8868\u7684slotscope\u4e2d\u53d6\u51fa\u6b63\u786e\u7684ref", "body": "\u5217\u8868\u7ec4\u4ef6\u7684\u6a21\u677f \u6bcf\u4e00\u9879 propstext clickhandle \u6b64\u65f6\u6253\u5370\u51fa\u7684\u6c38\u8fdc\u662f\u6700\u540e\u4e00\u4e2adiv consolelog refsitem", "num": "7185", "d": "12/2017"}, {"title": "memory leaks cached static render functions", "body": "version reproduction link steps reproduce chrome take heap memory snapshot chrome devtool click big link go route lot components click small link return back small component collect garbage devtool take second snapshot compate snapshots heap increase vue cache div element big component element prop context reference zombie component zombiecomponents alive route changed repeat actions memory leak remove big component div memory doesnt leak expected cached nodes contain references destroyed components actually happening memory leak gb large lists components like memory leaks memory doesnt leak", "num": "7184", "d": "12/2017"}, {"title": "client side hydration works development fails production", "body": "version reproduction link steps reproduce install template run devserver make sure app works fine build production run see clientside hydration fail expected app expected behave way production development environment actually happening app works perfectly devserver production appears totally dead clientside hydration somehow fails decided build vue ssr template could use projects partially based example everything fine worked expected still devserver built app production suddenly discovered totally dead got errors warnings signs could point direction search answers whatsoever blowing mind sure vue bug really probably might something else maybe stupid enough miss something simple nt know spent much time trying solve found nothing feel pretty helpless help would appreciated", "num": "7183", "d": "12/2017"}, {"title": "\u5e0c\u671b\u63d0\u4f9bslot\u7684\u6269\u5c55\u7279\u6027", "body": "problem feature solve proposed api look like vue title actionbar \u7ec4\u4ef6 export default props title string javascript navigationbtn \u7ec4\u4ef6 export default slot left javascript actionitem \u7ec4\u4ef6 export default props position string \u4e5f\u53ef\u4ee5\u662ffunction slot return thisposition", "num": "7182", "d": "12/2017"}, {"title": "virtual dom replacement template literals library viperhtmlhyperhtml", "body": "problem feature solve ease manual dom manipulation performance console errors proposed api look like usage library", "num": "7181", "d": "12/2017"}, {"title": "computed property vuex array", "body": "version reproduction link steps reproduce hello using vuevuex laravel problems array computed property example similar attached jsfiddle computed property component nt seem watch statestatuses push elements even log statuses vuex see statuses added component expected expected see statuses appearing dynamically actually happening nothing happening dont see statuses", "num": "7180", "d": "12/2017"}, {"title": "reactivity component", "body": "version reproduction link steps reproduce click expand blocks page using data property value passing parent updating properties inside data expected update property data parent properties nt get altered actually happening property data updating prop prop updating data parent pass props component use prop define property inside data change content prop updates parent element data want initialitems keep initial testes value data function data function return items thistestes defaultclasses xs col thistestescol extrasmall sm colsm thistestescol small md colmd thistestescol medium lg collg thistestescol large xl colxl thistestescol extralarge initialitems thistestes", "num": "7179", "d": "12/2017"}, {"title": "ability pass scoped slots descedants templates", "body": "problem feature solve related issue closed need clarify point exist convenient way define template items hierarchical component example tree list sections know solved render functions native way building components vue react mean writing reading render functions uncomfortable average vue user used occasionally even worse user need setup webpack babel jsx think render functions avoided notsoadvanced cases slots passed children using templates like drawbacks creates wrapper function level first wrapper wrapper wrapper breaks fallback content default template feature proposed api look like remark propose syntax boiled version first markup supported compiler test implementation seems quite easy give green light try prepare pr something missed implementation let know please", "num": "7178", "d": "12/2017"}, {"title": "pushing object array defined variable adds reference ca nt modified without affecting variable", "body": "version reproduction link steps reproduce page loads array persons loaded one item thomas provided two buttons demonstrate issuebug add ok button pushes new object array passing object clear js object format add ok button pushes new object array passing already defined object newperson click add ok button two times try change value array gray boxes notice object newperson array objects changed vue added reference instead adding value even possible expected copy newperson variable array leave alone also adding multiple objects expect seperated seem changed time actually happening suspect pushing object array added reference instead added value issuefeature javascript vue", "num": "7177", "d": "12/2017"}, {"title": "blur routerlink bug", "body": "version reproduction link steps reproduce menu display none rootactive menu display block open elclasslisttoggle active expected transition actually happening transition help figure situation remove dom render frame vue routerlink transition event canceled nexttick help blurnative work use transparency hide everything works maybe bug vue vue vuerouter", "num": "7175", "d": "12/2017"}, {"title": "blur routerlink bug", "body": "help figure situation remove dom render frame vue routerlink transition event canceled nexttick help blurnative work use transparency hide everything works maybe bug vue vue vuerouter menu display none rootactive menu display block open elclasslisttoggle active", "num": "7173", "d": "12/2017"}, {"title": "clojurescript vuejs", "body": "anyone interested", "num": "7172", "d": "12/2017"}, {"title": "vue method support asyncawait", "body": "babelrc vue methods async gettasklist let data await storedispatch tasklist tid consolelog tasklist data mounted thisgettasklist got error chrome console vueesmjs vue warn error mounted hook referenceerror regeneratorruntime defined", "num": "7170", "d": "12/2017"}, {"title": "\u5d4c\u5957\u8def\u7531\u6ca1\u6709\u8fc7\u6e21\u6548\u679c", "body": "problem feature solve \u91cc\u5c42\u8def\u7531\u6ca1\u6709\u751f\u6548 \u6700\u5916\u5c42\u6709\u6548\u679c \u53ea\u628a\u7559\u91cc\u5c42\u7684\u52a8\u753b\u6548\u679c proposed api look like transionname", "num": "7169", "d": "12/2017"}, {"title": "vuejs integrated angular fails work second time", "body": "version reproduction link steps reproduce please check details reported issue thanks expected normal behaviour click buttons change slide work expected actually happening click nothing happens please check thanks", "num": "7168", "d": "12/2017"}, {"title": "xtemplate internet explorer microsoft edge", "body": "version reproduction link steps reproduce using vue laravel inline template use tag expected expect see landing page component ieedge actually happening nt get errors get blank space component", "num": "7167", "d": "12/2017"}, {"title": "routerbeforeeach \u65b9\u6cd5\u91cc \u600e\u4e48\u8df3\u5230\u5916\u90e8\u94fe\u63a5", "body": "problem feature solve \u91cc\u9762\u662f\u5426\u6709token \u6211\u5728\u4f7f\u7528routerbeforeeach \u7684 path \u53ea\u80fd\u8df3\u8f6c\u5230\u5f53\u524d\u57df\u540d\u4e0b\u7684\u9875\u9762 \u6211\u8981\u8fdb\u5165\u7684\u9875\u9762\u548c\u767b\u5f55\u9875\u4e0d\u5728\u540c\u4e00\u4e2a\u57df\u540d\u4e0b proposed api look like routerbeforeeach", "num": "7166", "d": "12/2017"}, {"title": "injecting body post request json component", "body": "sorry maybe naive question find answer question would like post json data vuejsssrvuejs app operation get body post request maybe bodyparser inject responsible component maybe data function achive documentation thanx lutz", "num": "7164", "d": "12/2017"}, {"body": "unfortunately adding modifier undeclared variable explicitly telling vue wait till input blurred set therefore design everytime vue renders use value nonexistent fill input clears ideally declare always possible isolate template component make sure nt get rerendered", "d": "12/2017"}, {"body": "hi thanks suggestion see problem ate trying solve however dot like mixture virtualdom real dom since dom element created properties virtual dom node counterpart information required copyclone vnode sure slots contain vnodes normal elements component supersimple slot also contain components bit complicated since data children component vnodes found different properties stitched together javascript function clonevnode vnode const children vnodechildren vnodechildrenmap x gt clonevnode x const iscomponent vnodecomponentoptions const tag iscomponent vnodecomponentoptionsctor vnodetag const data iscomponent clonecomponentdata vnode objectassign vnodedata const clone createelement tag data children clonecomponentdata vnode const data objectassign vnodedata hooks undefined dataprops vnodecomponentoptionspropsdata dataon objectassign dataon vnodecomponentoptionslisteners realize easy someone familiar vnode api goal work virtualdom possible take feature request yes may sometimes good easy way clone element render function nt want use dom elements render functions deal virtual dom real one alternative suggestion would rather offer nice way clone vnodes either vue core small libplugin community", "d": "12/2017"}, {"body": "fact vue supported interpolation inside tags back amp see fiddle issue seems quite similar like mentioned inefficient style needs recalculated updated back css custom properties becoming widely supported inject custom property declarations scope component root elements rather interpolate whole style tag content thus style recalculation optimized inside rendering engines gon na limit reactivity affect custom properties need way map custom property names reactive data necessarily writing custom property declarations directly inside tags", "d": "12/2017"}, {"body": "vue server side rendering requires call php via", "d": "12/2017"}, {"body": "may completely wrong please try understand tried calling php talking existing template projects already well php already server rendered case hook vue component directly sync markup js vue component work well vue router short server side rendering without dependancy consider scenario project going distribute among several client ca nt force everyone install php js extension", "d": "12/2017"}, {"body": "sure understand mean obviously mount vue components existing markup simply replaces whatever previously", "d": "12/2017"}, {"body": "yes mount existing markup instead like markup state sync vue component", "d": "12/2017"}, {"body": "remove dash seems work", "d": "12/2017"}, {"body": "way vue converting camelcase props kebabcase pretty simple inserts hyphen upper case letters convert lower case think much numbers adding hyphens around consecutive numbers breaking change", "d": "12/2017"}, {"body": "hi timevalue seems control error debian chrome versi\u00f3n build oficial bits console get error vue warn property method timevalue defined instance referenced render make sure property reactive either data option classbased components initializing property see found warn", "d": "12/2017"}, {"body": "browsers emit partiallyfilled input typetime values input field partiallyfilled value blank string agnostic javascript framework knowledge way obtaining value partiallyfilled timedatedatetime field nt know older browsers would work treat text field yes could obtain value might nonstandard prestandard way obtaining value", "d": "12/2017"}, {"body": "thanks comments kasseltrankos bingolumity point would like minutes seconds need hours case would rather avoid need forcing user always set hours break app", "d": "12/2017"}, {"body": "create custom component use existing one browsers work would see behaviour using vanilla javascript try getting value console see empty string", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "\u8bd5\u8fc7\u4e86 \u8fd8\u662f\u62a5\u9519", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "assuming available template result code would course valid callback function string making constants avaliable templates whatever way wo nt solve problem", "d": "12/2017"}, {"body": "thanks", "d": "12/2017"}, {"body": "use javascript import mapactions vuex import storekeys export default name minimaltest methods mapactions terminputchanged onupdatesearchterm", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "\u4f60\u8ddf\u6211\u95ee\u9053\u4e86\u540c\u6837\u7684\u95ee\u9898 \u4f60\u53ef\u4ee5\u770b \u6211\u7684issue\u88abclose\u4e86", "d": "12/2017"}, {"body": "nt use templates code shared valid vue template contains invalid javascript issue obviously feature request abusing ask question issue guidelines meant bug report missing required runnable reproduction \u6211\u4eec\u7684\u4e2d\u6587\u652f\u6301\u8bba\u575b\u5c31\u5728\u8fd9\u91cc", "d": "12/2017"}, {"body": "first variable seems nothing related proposal constant data second discussed constant data self pluginmixin easy", "d": "12/2017"}, {"body": "template \u9ed8\u8ba4\u5c31\u662f\u4ee5 vm \u4e3a", "d": "12/2017"}, {"body": "already opened issues question second issue also received answer explained newissuevuejsorg issue tracker meant support questions please use forum forumvuejsorg chat chatvuejsorg open issues topic might consider blocking", "d": "12/2017"}, {"body": "linusborg second issue tip invalid issue ans right perfunctory distinguish questions bug", "d": "12/2017"}, {"body": "linusborg ask question", "d": "12/2017"}, {"body": "ans right perfunctory since nt share runnable code snippet template ca nt actually tell erorr error see shared use third issue rules well since reproduction nt reproduction codepen template snippet lines vue code making work harder opening issues nt follow rules please nt distinguish questions bug doubt ask others forum chat first lock issue reason", "d": "12/2017"}, {"body": "\u8bf7\u4ed4\u7ec6\u770b\u6e05\u695a\u5f00 issue issue", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "using template remove variable template jsx", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "zdream \u70b9\u8fd9\u91cc\u67e5\u770b\u6587\u6863 issues\u4e0d\u662f\u63d0\u95ee\u7684\u5730\u65b9 \u8fd9\u79cdissues\u4f1a\u88ab\u5927\u4f6c\u5ffd\u7565\u7684", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "properties arrays reactive recall correctly", "d": "12/2017"}, {"body": "\u4f60\u7684", "d": "12/2017"}, {"body": "\u4e0d\u751f\u6548\u8bf7\u53bb vueloader \u5f00\u5bf9\u5e94 reproduction", "d": "12/2017"}, {"body": "diff \u548c render", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "looks like firefox highlights inputs soon touch using js imagine could add condition sure firefox bug", "d": "12/2017"}, {"body": "maybe applicable", "d": "12/2017"}, {"body": "use key avoid component reuse", "d": "12/2017"}, {"body": "schoonc said key needed avoid component reuse", "d": "12/2017"}, {"body": "currently supported including reactivity supported new version coming early", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "sure raw template using lowercase changed properly preserved generated render function", "d": "12/2017"}, {"body": "oh right bad thanks", "d": "12/2017"}, {"body": "unfortunately expected elements level telling vue said need add suffix prefix let vue treat differently may think working pre warning always working warning simply missing", "d": "12/2017"}, {"body": "thanks quick reply clap makes perfectly sense know considered anonymous component vue think word template key doc could help others especially doc said serves invisible wrapper smile", "d": "12/2017"}, {"body": "contributions docs always welcome think invisible wrapper accurate try use template also get error looks covered ofc open pr docs found case covered", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "stated issue helper instructions issue list place seek help please use forum discord chat", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow btw write vue pass", "d": "12/2017"}, {"body": "posva thx response eventtargetid returning clicked id every time clicking fast tabs bug call like eventtarget event catch target node giving time anyway thx answer try another way", "d": "12/2017"}, {"body": "keep mind native event problem probably related vue", "d": "12/2017"}, {"body": "posva thx yeah got ya used onclick consolelog thisid von click work even fast clicks using eventtargetid eventtoelementid eventsrcelementid working times fast click looks like dom nt existed mean time probably vuejs inner stuffs could nt catch id eventtarget hope got yeah thx time", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "specific xmlns xaml feature looking", "d": "12/2017"}, {"body": "guess something similar op probably wants way import symbol files template code script code currently must import symbols script section attach vm order use template", "d": "12/2017"}, {"body": "herringtondarkholme right request different issue request something like assigning context request feature support using external variables object class enum nonviewmodel member template uwp examle look root element page default uses vm use import external things xaml", "d": "12/2017"}, {"body": "\u4f7f\u7528\u67d0\u79cd import filter", "d": "12/2017"}, {"body": "template vm created \u91cc\u9762\u6302\u8f7d\u5230 vm \u5b9e\u9645\u4e0a\u8fd9\u6837\u7684\u9700\u6c42\u7528 render function tsx", "d": "12/2017"}, {"body": "forgot webpack configuration javascript const path require path const webpack require webpack const extracttextplugin require extracttextwebpackplugin const manifestplugin require webpackmanifestplugin const chunkmanifestplugin require chunkmanifestwebpackplugin const require const cleanwebpackplugin require cleanwebpackplugin moduleexports entry dashboard assetsjspagesdashboardjs dashboard part issue js fiddle provided settings assetsjspagessettingsmainjs output filename processenvnodeenv production js name chunkhash js js name js path pathresolve dirname webdist publicpath dist module rules test pngjpggif use loader fileloader options name name ext outputpath images test js include pathresolve dirname assets use babelloader test ttfeotsvg loader urlloader amp namefonts name ext test scss include pathresolve dirname assets use extracttextpluginextract fallback styleloader use cssloader resolveurlloader sassloader sourcemap test css use extracttextpluginextract fallback styleloader use cssloader resolveurlloader test vue loader vueloader options loaders scss vuestyleloader cssloader sassloader sass vuestyleloader cssloader sassloader indentedsyntax resolve alias jquery jquerysrcjquery vue vuedistvueesmjs plugins new extracttextplugin filename processenvnodeenv production css name chunkhash css css name css new webpackprovideplugin jquery jquery jquery new new manifestplugin basepath dist performance hints false devtool sourcemap processenvnodeenv production moduleexportsplugins moduleexportsplugins concat new webpackdefineplugin processenv nodeenv production new webpackoptimizeuglifyjsplugin minimize true comments false compress warnings false new webpackloaderoptionsplugin minimize true new cleanwebpackplugin dist root pathresolve dirname web verbose true dry false also message get console", "d": "12/2017"}, {"body": "sorry really special case question stated nt take questions issues", "d": "12/2017"}, {"body": "including production", "d": "12/2017"}, {"body": "opinion fully stated something ever consider obsessing html validity something eventually rendered browser pointless also changing syntax point practical impossibility whole ecosystem built upon existing syntax", "d": "12/2017"}, {"body": "changing syntax point practical impossibility whole ecosystem built upon existing syntax well case closed guess thanks clarifying", "d": "12/2017"}, {"body": "considered anecdotal running forum regular chats stackoverflow ca nt recall single question naming lead confusion realting angular furthermore concept scoped slots exists since vue standard vue vocabulary point introduced html scope slotscope slotprops might well confuse anyone worked scoped slots previously could improve understanding others said certainly wo nt deny always potential confusion vue concept angular said nt seem widespread problem would also would say could turn back time introduce feature synatx since right start going would probably better point time however established concept vue community nt think suggestion offers enough improvement warrant essentially deprecation current syntax adding another special attribute could collide existing apps bottom line would unconvinced opposed either", "d": "12/2017"}, {"body": "linusb thank time helpful explanationconsideration yes agree assessment", "d": "12/2017"}, {"body": "linusb bad must admit personal confusion slotscope fogged evan stretching word scope one many genius vue features one point randomly stumbled lowlevel runtime javascript diagnostic revealed exactly transpiling scope attribute freaking clever technique yes perhaps misleading name still find wherever socks blew linusb kind comments educational thanks history time working documentation example may helpful share integrate recent discovery socks land happy new year", "d": "12/2017"}, {"body": "genedronek runtime referring im trying dive vue internals might good starting point", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "issue requirements stated please use issues ask questions", "d": "12/2017"}, {"body": "unsure judge behaviour vue wrong happens recieves array children foobar component slots causes rerender since empty array everytime would strictly necessary question verify reliably performant way ie array content previous render cause update would hagve compare optimize thing jsx plugin appearantly creates empty arrays components nt slot first place definitely triage issue independently depending one gets judged", "d": "12/2017"}, {"body": "think pretty rare special case caused incorrect transpilation jsx plugin empty array eliminated whenever possible done template compiler let track jsx plugin repo reasoning updating linusborg explained pretty well note even slot content content change still fresh vnodes need diffed order ensure consistency special case empty arrays nt really meaningful improvement terms perf", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "try replace difference please provide valid repro reporting bug", "d": "12/2017"}, {"body": "posva sorry ignoring github editor self encoding updated written instead", "d": "12/2017"}, {"body": "would need escaped could provide repro please", "d": "12/2017"}, {"body": "posva parsed comment tag html files injecting code tag would found nothing rendered android webview sorry could nt provide real repro private project found simple way reproduce yet really useful replace treated comment tag prevent code execution", "d": "12/2017"}, {"body": "ah see repro version browser failing change minimal want make sure actually problem", "d": "12/2017"}, {"body": "vue version android system version", "d": "12/2017"}, {"body": "weird happen unless inlining entire vue codebase inside html would", "d": "12/2017"}, {"body": "optimization strategy hybrid web page wide range android device used users lowerend means low performance network speed use devices webview native cache reliable time would wasted network requests found injecting jscss files html effectively improve speed open pages really reduce rtt roundtrip time weaknetwork environment also offline packages supported native app would really fast native app could prefetch html cache circumstances page loaded locally without ssr need machine labor costs would good practice inject js css files html get significant performance optimization users use lowerend phone weaknetwork environment", "d": "12/2017"}, {"body": "deal objects inside incoming props array object keys steps deep maximum", "d": "12/2017"}, {"body": "props mutable recommended approach clone props data need change far dont know makes browser crash tbh dont even know happening anyway give error console problaly bug", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "12/2017"}, {"body": "hello diego thank answer know props stay untouched mutate thought arrayprototypesort confirmed pure function approach return new sorted array without mutating first one bad arrayprototypesort mutate input array dont know reference incoming array props inside two computed properties arrayprototypesort method inside crush browser vue dev tool sad console error given way browser stop responsing", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "system memory usage skyrocketed almost trying reproduce issue browser crashed memory freed check blue line screen print", "d": "12/2017"}, {"body": "happen program run incoming infinite loop pretty sure happened sometimes", "d": "12/2017"}, {"body": "wonder could happen far judge computed properties act like everything js run completion first one computed property evaluated another one infinite loop case figure", "d": "12/2017"}, {"body": "idea put computed method test easier debug also return void looks weird isnt causing maybe return false would maybe better sure", "d": "12/2017"}, {"body": "check helpful", "d": "12/2017"}, {"body": "rewrite component logic using method calls sorting data instead computed props result pass tests works great even stupidly trying mutate props wisely make shallow copy incoming array props sort result figeout using two computed property logic inside trying mutate props cause system memory disappear", "d": "12/2017"}, {"body": "think found looking case vue aware computed property depends props update bindings depend computed property props changes exact point get infinite loop first computed prop mutate props trige another computed prop fire computation", "d": "12/2017"}, {"body": "first computed prop mutate props really nt computed properties nt side effects eslint rule help prevent happening code", "d": "12/2017"}, {"body": "always aware props must treated immutable inside child component point view make exact case mistake official docs attempt mutate prop inside child component vue warn console trying say vue warn working props reference type array say browser going crash infitite looop tons memory leack computed properties depand props maybe add red warnings docs case", "d": "12/2017"}, {"body": "thanks everyone great vuejob", "d": "12/2017"}, {"body": "yeah happening cannot say compiling either interpreting infinite loop going happen", "d": "12/2017"}, {"body": "changed title", "d": "12/2017"}, {"body": "hmmm nt seem template strings change arrays seems vue interpolating either console custom elements report strings containing stuff like passed case vue interpolating arrays values passed custom elements would form rather arrays converted string show commaseparated list values vue interpolating attributes", "d": "12/2017"}, {"body": "hmmm looks like got working sure working made changes using single file components babel compile opposed vue compile templates runtime codepens honestly got clue maybe sure", "d": "12/2017"}, {"body": "replaced repro correct one use non minified version warns problems workaround moment add attribute button", "d": "12/2017"}, {"body": "likely nothing vue version number please investigate build tool chain starting mix", "d": "12/2017"}, {"body": "nt need wait us build services vue scope everybody like think vuex goes well vue free use something else precisely nt come baked right vue offer alternatives vuex know nt fit everybody mindset created different solutions use well google similar end want pretty much doable already nt need provide function use vue instance purposes store event bus may small memory overhead compared using barebones solution overhead comparable another component page therefore low even create custom properties store make global mixin merges properties hook", "d": "12/2017"}, {"body": "hey posva thanks reading reply certainly right doable right thought would get short shrift nt really memory honest api general complexity got weird edge case recently vue store services essentially broke app hours severely dented confidence vue stores discovered nt alone maybe issues could solved struck breaking reactivity system would useful side note recently made service vuex pretty cool see data programatically added store right situations cool", "d": "12/2017"}, {"body": "duplicate", "d": "12/2017"}, {"body": "thing explicitly showing element adding vshow parent counts override put another way declared style eg fontsize child hellovue override parent appvue one parent would take precedence intentional allow users override componentspecific attributes case always move nested similar directly provide prop toggle visibility", "d": "12/2017"}, {"body": "know solve problem easy way still case need logic think tabs table support search keyword tab use vshow control tab show table record vshow check show use solution match plan logic", "d": "12/2017"}, {"body": "nt think put logic another component child component good solution", "d": "12/2017"}, {"body": "even fail every time need proper boiled reproduction example able remove vuex vuerouter github repository important boil minimal may even find problem came way need make sure reporting bug asking question forum discord server closing moment boil still think vue bug come back open new issue", "d": "12/2017"}, {"body": "ok thanks", "d": "12/2017"}, {"body": "symbol nt even supported using polyfill", "d": "12/2017"}, {"body": "yeah checkout external resources section using babelpolyfill", "d": "12/2017"}, {"body": "hesitant say issue symbol polyfill specifically since works change parent component found bug reproducible symbol converted string parent using wrapper component also providing arbitrary data", "d": "12/2017"}, {"body": "reverting related changes", "d": "12/2017"}, {"body": "array must contain vnodes things created weird expecting find information typings allow returning vnode arrays nt know typing wrong never intended forgotten typings", "d": "12/2017"}, {"body": "\u8fd9\u4e2a\u4e0d\u5c5e\u4e8e core", "d": "12/2017"}, {"body": "nt think guarantee regarding getters invoked case need traverse observe returned value getters invoke getter also bad idea rely getters side effects getters pure", "d": "12/2017"}, {"body": "sorry nt get thing guarantee nt suggest traverse properties get value property despite fact used property getter see parameter necessary method usecases function think omitted without harm calculated property getter thank aware getters thing using carefully saving development time reason think change usefull may common usecase using getters props data source lags costly getter functions unintended behaviour", "d": "12/2017"}, {"body": "think question plugin makes little sense add additional properies", "d": "12/2017"}, {"body": "hi issue definitely breaking change caused pull request already broken lots cases far completely ok add custom property prop used later custom transformations actions documentation also saying anything customization trading spell checking loosing flexibility framework seems quite odd would rather leave spelling checks static code analysis tools case change must one possible solution adding concrete custom property cases used besides type default required validation greetings plamen", "d": "12/2017"}, {"body": "seems something like", "d": "12/2017"}, {"body": "imho prop plain javascript object take possible abstraction thus custom fields possibly serve advanced logic vue component indeed dedicated serve purpose vue framework still object different property inside mistake thrown exception warning possibly yes javascript exception many possible cases errors cause troubles actually help case typo examples code base defines object later used props custom vue components case need sanitize objects order use props hit error custom logic involves additional evaluation props prop name suitable enough context needed zdravkov nicely suggested custom field put context like idea another great example", "d": "12/2017"}, {"body": "reverting warning since causing issues existing use cases strict validation still applied opting tools like eslint plugins typescript", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow also recommend read mdn doc note also various browsers ignore result event ask user confirmation document always unloaded automatically", "d": "12/2017"}, {"body": "render anything vue uses template parent component defined template option script tag template incorrect using default slot instead namd slots label field template html block almost correct need wrap paragraphs component fixed example suggestion use nested slot vue yes course everything well explained documentation read using named slots vue named slots good luck", "d": "12/2017"}, {"body": "sqal yeah fixed example worked situation want pack child tag inside parent tag used convenient people use parent tag two slots instead using parent tag child tag", "d": "12/2017"}, {"body": "slot name respected level content gets passed child becomes default slot", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "\u6211\u611f\u89c9 vue", "d": "12/2017"}, {"body": "\u6211\u4e5f\u89c9\u5f97\u5f88\u7b80\u5355", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "missing babel plugin syntax supported browsers yet", "d": "12/2017"}, {"body": "already support officially", "d": "12/2017"}, {"body": "talking write typescript definitelytyped dts vue sfc written using javascript rather support typescript", "d": "12/2017"}, {"body": "ask question official forum chat room stackoverflow issue list exclusively reserved bug reports feature request", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "expected nested keys recognized validator try change string use vue version warn warning message telling using incorrect way prop validator want validate need define", "d": "12/2017"}, {"body": "jounqin think using validate key complex config works simply define prop array object elements", "d": "12/2017"}, {"body": "bug feature request", "d": "12/2017"}, {"body": "also think done function returns true false based validity prop really nt complex give another chance", "d": "12/2017"}, {"body": "many potential problems syntax require exact shape length keys object deep go object happens contains one builtin keys done writing custom validator factory function reuse project", "d": "12/2017"}, {"body": "aware lazy modifier", "d": "12/2017"}, {"body": "yes situation wait multiple input finished think detail think custom directive implement emit", "d": "12/2017"}, {"body": "use data props temporarily store data", "d": "12/2017"}, {"body": "vue global variable default", "d": "12/2017"}, {"body": "oh thanks ktsn embarrassing nt know", "d": "12/2017"}, {"body": "happens setting message mounted trigger new render using plain objectin vbind triggering watch creates new object every time renders object data instead would nt trigger watcher value wtf prop would nt changed mounting", "d": "12/2017"}, {"body": "hello posva thanks explanations maybe know would better need prop wtf object type need watcher prop becase parent components may update message watcher need call prop changes really example mounted event triggers fresh data delivered axios another version message ca nt see fresh data prop wtf update message old lt happens first time works good upd happens use component without parent component", "d": "12/2017"}, {"body": "create computed property nt create new object everytime renders", "d": "12/2017"}, {"body": "would nt say even technically valid html parsers vue template parsers different levels error tolerance html parsers implemented intentionally tolerant syntax errors fact never explicitly fail personally think bad idea vue parser mirror level error tolerance potentially leads types mistakes implicitly ignored wontfix", "d": "12/2017"}, {"body": "understand pov also annoyance figure html working nt added vue", "d": "12/2017"}, {"body": "also worth noting like react people writing html inside js opposite vue people likely write regular html apply vue designerfriendly way", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "moment always set updating parent yes triggers children updates use render function maybe could prevented making sure listeners updated setting", "d": "12/2017"}, {"body": "unfortunately even shallowequal check setting specific example would still rerender listeners created new anonymous function render technically different similar passing different anonymous function prop every render", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "please read document carefully first", "d": "12/2017"}, {"body": "hello page use tag inner table ul ol code less clean english french china japan", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow use template string wo nt limited dom limitations", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "closed", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "mmh looks like dynamically adding element doc makes behaviour appear sure something workaround vue moment use workaround set input js", "d": "12/2017"}, {"body": "yes thanks workaround ended using vue initialize form field project think something vue address breaks expected behavior app entire page div id app vue instantiated affects pages nt use vue convention laravel comes box feeling developers might affected", "d": "12/2017"}, {"body": "keep mind breaks expected behaviour safari bug laravel comes convention imagine also possible workaround like give hints pr sure add workaround", "d": "12/2017"}, {"body": "see safari bug nt think resolved vue maybe contribute note documentation browser quirk instead sure warrants inclusion docs though", "d": "12/2017"}, {"body": "ran issue well bzarzuela mentioned well app also wrapped app div page load date field empty value set setting manually later selecting another date date shown disabling vuejs worked like expected", "d": "12/2017"}, {"body": "proposal describes want nt explain want need provide full context use case need assume trying implement something like custom renderer already feature request actually looking something different please follow details", "d": "12/2017"}, {"body": "typeerror read property innerhtml undefined javascript import loader import tsloader libplugints import vue vuedistvue create jsdom document loaderregister loaderuse tsloader consolelog vue import options temptestvue const vm new vue options mount consolelog vm elinnerhtml consolelog vm elinnerhtml consolelog documentdocumentelementinnerhtml consolelog documentdocumentelementinnerhtml work javascript import loader import tsloader libplugints create jsdom document loaderregister loaderuse tsloader import vue vuedistvue consolelog vue import options temptestvue const vm new vue options mount consolelog vm elinnerhtml consolelog vm elinnerhtml consolelog documentdocumentelementinnerhtml consolelog documentdocumentelementinnerhtml", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "use event tags need specifically probably works vue cause problem indeed event supported ieedge tags source", "d": "12/2017"}, {"body": "oh thank event used vuejsonschema library working ie open issue ie problem sorry checked mdn first", "d": "12/2017"}, {"body": "andreiglingeanu said nt think vue anything", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "tried fresh build everything seems work fine please provide reproduction possible", "d": "12/2017"}, {"body": "figured forcing ie give error output using ajax call back function thanks", "d": "12/2017"}, {"body": "known limitation using dombased templates simply allow placed inside work around need use stringbased templates instead", "d": "12/2017"}, {"body": "tried implementing string based templates luck since multiple root elements also allowed template since multiple tds ca nt really wrap div ideas", "d": "12/2017"}, {"body": "repro requirements clearly stated expect minimal reproductions must inspectable source code full apps", "d": "12/2017"}, {"body": "updated link jsfiddle thanks", "d": "12/2017"}, {"body": "wondering different templates instead using logic directive template", "d": "12/2017"}, {"body": "templates intended used component always template use vue logic directives display different content based data", "d": "12/2017"}, {"body": "thank try localized templates template id different translations want give ability switch language without full page reload", "d": "12/2017"}, {"body": "jounqin features available premium users want parts templates visible even page source", "d": "12/2017"}, {"body": "wrapper take optional argument set cache object explicitly place passed way template cache accessible userspace cleared manually", "d": "12/2017"}, {"body": "template cache something intend expose user app logic rely template self language express dynamic information work within template outside nt want expose template source use precompile step eg", "d": "12/2017"}, {"body": "thank checked vueloader seems work webpack please advise done server renders vue template translations eg action names labels etc user changes locale server renders new content markup different translated phrases script tag way vue continue render template old locale way see use locale suffix template ids require global js variable used looks dirty upd moving translations js acceptable app", "d": "12/2017"}, {"body": "saying changing locale page reload simply fetches new templates via ajax updates nodes", "d": "12/2017"}, {"body": "maybe need", "d": "12/2017"}, {"body": "yes use turbolinks replaces body one fetched via xhr akryum thank get right lib clientside translations able move translation logic frontend scope current tasks", "d": "12/2017"}, {"body": "one issue faced rendering old templates deploying updates server renders updated vue template applied user reloads page", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "\u7684 targets", "d": "12/2017"}, {"body": "vue vuerouter vuex mintui axios \u5b89\u5353uc\u6d4f\u89c8\u5668\u548cqq\u6d4f\u89c8\u5668\u7a7a\u767d\u9875", "d": "12/2017"}, {"body": "caosenvip", "d": "12/2017"}, {"body": "babelhelpervuejsxmergeprops \u591a\u4e86 babelpluginsyntaxjsx \u591a\u4e86 babelplugintransformvuejsx \u591a\u4e86 connecthistoryapifallback \u5c11\u4e86 eventsourcepolyfill \u5c11\u4e86 functionbind \u5c11\u4e86 nodenotifier \u591a\u4e86 portfinder \u591a\u4e86 postcssimport \u591a\u4e86 postcssloader \u591a\u4e86 shelljs \u591a\u4e86 uglifyjswebpackplugin \u591a\u4e86 webpackdevserver \u591a\u4e86 webpackdevmiddleware \u5c11\u4e86 webpackhotmiddleware \u5c11\u4e86", "d": "12/2017"}, {"body": "\u73b0\u5728\u53ef\u4ee5\u786e\u5b9a\u662f\u81ea\u5df1\u7684\u95ee\u9898", "d": "12/2017"}, {"body": "checkbox\u91cc\u9762 \u540c\u65f6\u4f7f\u7528\u4e86vmodel checked", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "\u9700\u8981\u4fee\u6539babelrc", "d": "12/2017"}, {"body": "fengjiel", "d": "12/2017"}, {"body": "\u55ef \u6342\u8138", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "vue webpackdevserver", "d": "12/2017"}, {"body": "merge \u4e4b\u524d\u53ef\u4ee5\u624b\u52a8\u62c9\u6211\u7684\u5206\u652f\u91cc\u7684\u6539\u52a8", "d": "12/2017"}, {"body": "webpack scope hoisting webpackoptimizemoduleconcatenationplugin plugin \u540e\u6062\u590d\u6b63\u5e38", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "\u5176\u5b9e\u5173\u4e8e iview jingsam vuejs \u5927\u90e8\u5206\u4eba\u4f7f\u7528\u7684\u662f webpack iview \u4e00\u5f00\u59cb\u501f\u9274\u7684 vuejs \u6587\u6863\u4e2d\u4e5f\u6709\u8fc7\u5bf9\u8fd9\u79cd\u7528\u6cd5\u7684\u5f3a\u70c8\u63a8\u8350 \u6bd4\u5982\u5728 webpack \u800c\u4e0d\u662f \u89c9\u5f97 vuejs webpack \u4e0b\u7684\u6807\u7b7e\u540d\u505a\u5c0f\u5199\u8f6c\u6362\u5373\u53ef vuejs thanks", "d": "12/2017"}, {"body": "\u6211\u4e5f\u4e60\u60ef\u7528 table button", "d": "12/2017"}, {"body": "icarusion template\u4e0d\u80fd\u533a\u5206\u5927\u5c0f\u5199\u662f\u56e0\u4e3a\u6d4f\u89c8\u5668\u5c06\u6a21\u677f\u704c\u5230compiler\u524d\u8fdb\u884c\u4e86lowercase", "d": "12/2017"}, {"body": "\u89c4\u8303\u89c6\u89d2 vue template compiler svg vue template compiler \u89e3\u6790\u5668\u89c6\u89d2 vue template compiler kebab \u7528\u6237\u89c6\u89d2 \u8fd8\u662f tag \u5bf9\u4e8e \u603b\u7ed3 html", "d": "12/2017"}, {"body": "pascalcase dom \u6a21\u677f\u4e2d\u603b\u662f kebabcase dom", "d": "12/2017"}, {"body": "\u8001\u5927\u51fa\u6765\u8bf4\u660e\u4e00\u4e0b", "d": "12/2017"}, {"body": "button", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "\u548c iview \u751a\u81f3\u662f\u65b0\u63a5\u89e6 vue vuejs \u6587\u6863\u4e2d\u4e5f\u6709\u8fc7\u5bf9\u8fd9\u79cd\u7528\u6cd5\u7684\u5f3a\u70c8\u63a8\u8350 \u6bd4\u5982\u5728 webpack menuitem \u800c\u4e0d\u662f menuitem vuejs", "d": "12/2017"}, {"body": "vueesmjs vue warn use builtin reserved html elements component id circle vueesmjs vue warn use builtin reserved html elements component id switch", "d": "12/2017"}, {"body": "html \u89c4\u8303\u80cc\u9053\u800c\u9a70\u771f\u7684\u662f\u4e00\u4e2a", "d": "12/2017"}, {"body": "\u4f60\u6709\u5199 \u4e5f\u6709\u5bf9 html warning", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "please read requirements make proper bug report", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "\u8fd9\u4e0d\u7b97 bug \u542f\u52a8 node \u7136\u540e\u624b\u52a8", "d": "12/2017"}, {"body": "trouble understanding want code nt even runnable assume looking way force trim input even user typing case call right input component", "d": "12/2017"}, {"body": "\u4f60\u90fd\u8bf4\u4e86\u8fd9\u662f ios vue \u672c\u8eab\u7684", "d": "12/2017"}, {"body": "expected behavior special logic handling changed options using direct bindings need add bindings options instead", "d": "12/2017"}, {"body": "definitely help make initial mistake nt believe worth fattening vue src handle trivial mishap make mistakes imho nt seem essential", "d": "12/2017"}, {"body": "job linter see eslintpluginvue", "d": "12/2017"}, {"body": "watch option write way", "d": "12/2017"}, {"body": "oops sorry noise strange typescript nt catched though", "d": "12/2017"}, {"body": "typescript error following code please clarify kind error happening error happening parcel parcel got", "d": "12/2017"}, {"body": "error error happening parcel parcel want use esm release going wait parcel support alias use", "d": "12/2017"}, {"body": "wouldnt typescript path mapping allow thing", "d": "12/2017"}, {"body": "yes work temporary solution", "d": "12/2017"}, {"body": "feature typescript working essentially babel webpack would nt call temporary solution really parcel added support aliases would even better course", "d": "12/2017"}, {"body": "report explicitly mentions newlines double escaping also occurs escape sequences like", "d": "12/2017"}, {"body": "looks like attribute first escaped using call finally whole string template escaped using inside causes double escaping", "d": "12/2017"}, {"body": "could fix problem applying following patch function", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "g", "d": "12/2017"}, {"body": "docs place want go go discord server somebody probably give examples improvements proposals docs repo", "d": "12/2017"}, {"body": "ok thx wo nt create discord account though really building integration nt want create new accounts understand opensource library works guess play around understand thank anyways since nt use vue intention probably wo nt contribute sorry project goes expected might rethink", "d": "12/2017"}, {"body": "one last thing warning development quite right warning absolutely right since dom structure relying random data dom generated server sent client differs dom clientrendered virtualdom representsexpects find hydration hence app runs error sure hint would expect hope something like condition server another value client disappoint would require kind ai analysing component render function code interpreting intelligently possible understanding issue facing point expected behaviour pretty much unavoidable hydration succeed reliably data responsible defining dom client server component something random like example nt render server skip first render client nice example easily found otherwise would try find way skip random part data generation first render instead use data created server eg storing vuex", "d": "12/2017"}, {"body": "random emphasize error make easier reproduce happen kind external data unforeseeable reason may differ server client concerned uncaught error understand clientserver data mismatch something avoid bail rerender like done development mode instead isolate error component failing see problem inside small component levels deep app structure would expect component fail render instead makes whole app stop working least could avoidable great otherwise sorry waste time", "d": "12/2017"}, {"body": "easy hydration whole app rendered first attached dom trot happen inside component really wanted check dom node every component really belongs performance suffers performance whole point ssr lose valuable ms hydration verify every piece dom stop ssr warnings development production", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow error probably happen using template without declaring", "d": "12/2017"}, {"body": "posva tks u reply use vuecli init easy project export default name helloworld data return msg welcome vuejs app created function consolelog error appear consolelog thismsg ok", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow examples vuerouter repo may find useful", "d": "12/2017"}, {"body": "posva \u6211\u8fd9\u662f\u7ed9\u4f60\u4eec\u63d0\u529f\u80fd\u9700\u6c42", "d": "12/2017"}, {"body": "transition", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "giving component name check component name example", "d": "12/2017"}, {"body": "sqal strings nt unique like said post looking sure way ideally via strict equality object references working components used parties nt want risk name collision also concern time", "d": "12/2017"}, {"body": "achieved userland use custom logic verify correct component used slot following snippet demos approach ensure type child components vue listitemvue import listitemtype componenttypes export default group listitemtype vue listvue import listitemtype componenttypes export default render h const children slotsdefault return h div childrenmap vnode gt vnodecomponentoptions vnodecomponentoptionsctor return vnode vnodecomponentoptionsctorextendoptionsgroup listitemtype return vnode consolelog vue warn invalid use vnodecomponentoptionstag child component comp return vnode working demo", "d": "12/2017"}, {"body": "znck definitely achieved userland issue nt opened question find custom solution point feature request request official support", "d": "12/2017"}, {"body": "feel would increase vue api surface additional benefit think added vue reopen issue", "d": "12/2017"}, {"body": "think extra property reference original component offer credible convenient way confirm identity hence integrity vnode question cost one property added vnode gain official way assure right component passed vnode think good deal", "d": "12/2017"}, {"body": "vuejscollaborators comments", "d": "12/2017"}, {"body": "znck might want reopen want discussion collaborators closed issue sea notifications drowned personally ca nt say much nt understand original problem enough check nt work karma etc moment", "d": "12/2017"}, {"body": "might worth noting problem occurred using vuetestutils however filing bug fr supporting way accurately identify component vnode", "d": "12/2017"}, {"body": "work checking caches constructors created raw options imo use case lowlevel specific create dedicated api", "d": "12/2017"}, {"body": "would recommend identify vnode component surely reading slot vnodes nt uncommon able tell kind vnode would useful sure mean code snippet returns constructor function references object would never equal example guessed may meant nt evaluate true expected either", "d": "12/2017"}, {"body": "fyi believe nt able strict equality deep clone vuetestutils turned cloning clone false", "d": "12/2017"}, {"body": "\u901a\u5e38\u7528\u6765\u6807\u793a xml \u7ea7\u522b\u7684 html", "d": "12/2017"}, {"body": "component defines method name defined mixin component method overrides method defined mixin could lead unexpected bugs typescript implementation loudly tells method collision think warn collisions mixins component using ideally follow mixin namespacing rules avoid collisions", "d": "12/2017"}, {"body": "hi znck override mixin method defining another method compiler complaining override mixin method", "d": "12/2017"}, {"body": "octref ktsn please look", "d": "12/2017"}, {"body": "type parameters mean additional properties property types component example provide mixin type type parameter component options follow type type check failed also current expected provided types manually used type inference component options object may support use case future typescript compiler handle use case currently", "d": "12/2017"}, {"body": "ktsn thanks understand types inferred trying use methods mixin component trying work around issue manual typing solved issues however want mixin two different mixins wo nt work basically problem single vs multiinheritance possible support inferring types mixins array", "d": "12/2017"}, {"body": "impossible infer component type array need use wrapper function", "d": "12/2017"}, {"body": "closing wontfix", "d": "12/2017"}, {"body": "closing nt appear vue issue sorry trouble frustrated spending lot figuring fiddle without using vue interested issue chromium issue tracker", "d": "12/2017"}, {"body": "want display creating feature request please add realworld use case make request worth implemented", "d": "12/2017"}, {"body": "theoretically cool idea requires fundamental rethinkrewrite architecture achieve potentially break lot logic relies synchronous nature lifecycle hooks benefits must substantial order justify change otherwise considered plan full breaking upgrade unlikely happen soon closing feel free follow concrete reasoning use cases implications", "d": "12/2017"}, {"body": "posva understood apologize actual use case one component receives page route parameters fetches actual user data database server using command like refers field part component ideally want line code executed component created available component actually mounted template safely use interpolations without getting errors undefined values might noob nt change adding keyword call lifecycle hooks like etc vue land", "d": "12/2017"}, {"body": "actual code want awaited would part component", "d": "12/2017"}, {"body": "worries imagining use case better handle described vuerouter docs opens different ways displaying loading state already wait data rendering component btw", "d": "12/2017"}, {"body": "ok makes sense however user component stripped version user page say like component appears hover user name facebook peek profile router involved passed property component", "d": "12/2017"}, {"body": "taking big picture view functions javascript either synchronous asynchronous lifecycle hooks functions way think functions support asynchronousity demonstrated use case intuitive reach approach using", "d": "12/2017"}, {"body": "many ways simplest one using variable starts null fetch data set toggling actual component vif exotic version would function resolves component use please nt hijack issue question use forum discord", "d": "12/2017"}, {"body": "really nt want help code actually already implemented workarounds similar suggestions trying say much intuitive use js async features", "d": "12/2017"}, {"body": "part nt realize asynchronous synchronous code fundamentally different nature synchronous code forced adhere asynchronous code without fundamentally changing asynchronous code saw immediately took time understand comment completely thanks time guys sorry miscommunication part somewhere way", "d": "12/2017"}, {"body": "hope author fix", "d": "12/2017"}, {"body": "please follow contributing guidelines opening bug report repro course also need steps reproduce", "d": "12/2017"}, {"body": "hi please describe problem mean", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow opening bug reports please provide repro happens specific browsers list browsers test", "d": "12/2017"}, {"body": "facing problem", "d": "12/2017"}, {"body": "sorry full project valid repro boiled minimal please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "12/2017"}, {"body": "posva uploaded code routing basic issue code perfectly working okay development machine soon made production stops working", "d": "12/2017"}, {"body": "first button indeed warn user duplicate keys second button change vue file nonminified version", "d": "12/2017"}, {"body": "think warning thrown click first button fixed second one throw js error make page unusable production env important fixed even thought repeated key correctly common js error introduced framework happen write valiant script", "d": "12/2017"}, {"body": "error expected code never deployed dev warningserros help prevent", "d": "12/2017"}, {"body": "think good case case fire error special data hard exposed dev sometimes hidden bug crash app day", "d": "12/2017"}, {"body": "sorry changes job recently follow late may feel strange nt trigger warnning new array length longer old last one duplicate key need perform insert operation operation check warning message case duplicate key included data warning triggered think needs checked two cases checked development mode agree posva reasons performance even production environment would like good way", "d": "12/2017"}, {"body": "\u8fd9\u4e0d\u7b97 feature", "d": "12/2017"}, {"body": "jsfiddle works fine ca nt reproduce", "d": "12/2017"}, {"body": "yes exactly scenario wont work laravelvue project using vue", "d": "12/2017"}, {"body": "well sure evaluate possible bug without reproduction likely made mistake suggest ask forums chat forumvuejsorg chatvuejsorg provide runnable minimal reproduction problem reopen issue", "d": "12/2017"}, {"body": "please elaborate bit asking need attribute", "d": "12/2017"}, {"body": "guess looking yeah", "d": "12/2017"}, {"body": "code black box like may need use implement like try idea current api may loginname gender age birthday createtime try compare two ui table implement iviewui vs element ui posva linusborg", "d": "12/2017"}, {"body": "sorry closing simply enough feature request missing basic information like problem solving proposal recommend using forum discord server stackoverflow questions feel free come back open issue turns bug manage better describe feature request", "d": "12/2017"}, {"body": "still think would happy", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "please use access component instance hooks methods", "d": "12/2017"}, {"body": "akryum since function receives vm instance first argument", "d": "12/2017"}, {"body": "pr", "d": "12/2017"}, {"body": "think fix adding second arg function", "d": "12/2017"}, {"body": "funny log error", "d": "12/2017"}, {"body": "accessing instance working fine usecase hook also argument unecessary example", "d": "12/2017"}, {"body": "ca nt reproduce jsfiddle may issue related codepen", "d": "12/2017"}, {"body": "well already possible write plugin creates object simply proxies fields vue instance seems already achievable today although without getting rid name conflict", "d": "12/2017"}, {"body": "oh right forgotten recent addition thanks may write small plugin create object crafts templates unambiguously", "d": "12/2017"}, {"body": "sure following renders value expected renders rendering value probably something wrong need bug report reproduction", "d": "12/2017"}, {"body": "nice cheers makes sense", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "12/2017"}, {"body": "would nt interesting add props libs usually use object syntax already long stripped build productions think could nice add something like maybe prepending attributes special character could even better something like clearly make distinction", "d": "12/2017"}, {"body": "part component options api seems nt serve particular purpose vue runtime behavior case would commentbased syntax reasonable stripped default using component option would require extra toolchain changes properly strip", "d": "12/2017"}, {"body": "possible read comments language server", "d": "12/2017"}, {"body": "hey specific bootstrapvue needed component typings long time ago first iteration exactly using component runtime instance extract props autogenerating documentation componentdocvue implementation pros nt adds extra bytes runtime general purpose used document type vue components fly even runtime used sfcs js components cons add custom description prop add additional field props costs lots unneeded runtime comments custom slots events supported added custom meta descriptor components inside used making full set docs hintings example methods used nuxt based docs also generateveturhelpersjs written alexsasharegan maybe unify metadata structure used bv onesen vuetify handcraft autogenerate meta component library either file way like part vue ecosystem tooling delegated library authors may also provide helpers making process easier forcing use specific syntax like jsdocs cc tmorehouse egoist mosinve alexsasharegan", "d": "12/2017"}, {"body": "something cool discovered far project polymer component documentation spec nice cli analyzes components jsdocs extracting meta json using similar component like use visually render docs exporting via vuelanguageserver usage", "d": "12/2017"}, {"body": "would great vuelanguageserver parse jsdoc inside components", "d": "12/2017"}, {"body": "part component options api seems nt serve particular purpose vue runtime behavior case would commentbased syntax reasonable stripped default disagree imagine lot cases vue warnings devtools could improved extra information examples using component option would require extra toolchain changes properly strip yes think changes would quite simple since already manipulating options exported sfcs possible complexity realizing though please correct case really like avoid manage separate types file find fall date quickly accuracy enforced compiler plus remembering check another file every time want update component pretty significant cognitive overhead", "d": "12/2017"}, {"body": "chrisvfritz sfcs manipulate options runtime big description strings included bundle minified dropped special babel plugin hacked buble transform", "d": "12/2017"}, {"body": "posva possible read comments language server wo nt easy possible since typescript server supports analysis jsdoc added custom meta descriptor components inside packagejson used making full set docs hintings agree chrisvfritz one strength vue sfc sensible way organizing related information colocating htmlcssjs unvuelike put component specific information centralized place idea make possible write components selfdocumenting spirit jsdoc javadoc etc also helps reading vue libraries source code something look amp learn part component options api seems nt serve particular purpose vue runtime behavior case would commentbased syntax reasonable stripped default nt agree nt help runtime would bloat code size compiled away build time think achievable babel plugin though however thinking think jsdoc might better approach either way ca nt runtime info easily need parse script find descriptions parser reused vuetemplatecompiler redesign descriptions go another idea make custom block sfc like chose yaml since looks cleanest export default name vcard props width height description card component props width width rendered card component height height rendered card component libraries using js components convert format putting js file tag extra description info custom tag compiled away compile time also makes super easy extract description data mentioned info used vetur component doc generator etc better dx go beyond one example elementui use info enhance warn user runtime check", "d": "12/2017"}, {"body": "like idea custom block pattern already used vuejsecosystem libraries like kazupon sure easily strip block away compile time", "d": "12/2017"}, {"body": "wrote vuedocparser generate sfc doc supports extract component name name field filename extract component description keywords support define keywords symbol like extract component props extract component data extract computed properties dependencies extract component events extract component slots extract component methods sample vue unamed checkbox simple checkbox component author s\u00e9bastien export default name checkbox props checkbox model model value type array required true initial checkbox value checked type boolean default true data return initialvalue null computed id return checkbox thisinitialvalue created emit component loaded emit loaded methods check checbox check event identifier name emit check true generate something like js header entry name checkbox component name props entry vmodel type array required true comments checbox model entry checked type boolean default true comments initial checbox value data visibility public description null keywords value null name initialvalue computed visibility public description null keywords value object name id dependencies initialvalue slots name label comments use slot set checkbox label events name loaded comments emited component loaded name check comments event identifier name methods entry check type functionexpression comments check checbox", "d": "12/2017"}, {"body": "thanks clarifying little research see difficult babel plugin would much amazement accidentally created working proofofconcept definitely babel expert could issues seemed work codebases tested without breaking anything could even expanded strip properties needed production like props change thoughts feasibility", "d": "12/2017"}, {"body": "however thinking think jsdoc might better approach either way ca nt runtime info easily need parse script find descriptions parser reused vuetemplatecompiler redesign vuejsvuecomponentcompiler comment descriptions go descriptormetadata descriptordescriptions octref saw comment say ca nt access information easily difficult thinking would way could help explore possibilities ask personally prefer avoid jsdoc already meta information properties like component name prop types comments lose ability use additional information vue warnings devtools custom block would solve problem assuming vue template compiler could parse javascript object still issue component meta information fragmented included component option new custom tag things bother use information vue warnings devtools made dev features exclusive sfcs nt really need nt make meta information exclusive sfcs vetur would learn parse anyway people chose use custom block education perspective personally prefer avoid introducing completely new concept sfcs", "d": "12/2017"}, {"body": "chrisvfritz thinking along line using typescript extract data use supplement html completion actually nt way one independent tool takes commands tool generates manifest file user edit vue files add documentation manifest file regenerated vetur reloads manifest file enhance html editing task exist independent vetur also used tools", "d": "12/2017"}, {"body": "might want include non sfc components functional components ie files", "d": "12/2017"}, {"body": "octref like idea tooling create manifest file vetur eslintpluginvue tooling would never worry parsing information still available vue warnings devtools best worlds separate tool like might issues though since properties javascript means could runtime dependent eg solve problem wonder could build manifest file perhaps manifest file per component runtime stored manifest files standardized location vetur tools would able check location extra information added bonus parsing would agnostic syntax eg babel typescript coffeescript etc remotely possible thoughts", "d": "12/2017"}, {"body": "tmorehouse could tricky babel plugin detect nonsfc vue components since files unrelated vue could export similarlyshaped js objects also functional components exist files well nt really reason use sfcs kind component using build system would expecting babel plugin strip properties production", "d": "12/2017"}, {"body": "generating es style builds transpiling es directory module structure currently vuetemplate compiler handle situation one nt conclude every one using sfcs ran issue generating es module build bootstrapvue allow user better tree shaking files causing ssr errors due differences vueloader options converted using render functions instead files", "d": "12/2017"}, {"body": "tmorehouse according chrisvfritz idea still es style builds sfcs source custom props strippingextracting comments using babel build metajson", "d": "12/2017"}, {"body": "summary nice comments something think us agree need final manifest something like demsking suggested used documentation ide hintings big questions declare typings extract sfcs seems best place put inside jsdocs ts new custom block inline props stripped production compiling got possible methods extracting manifest using parse files extract needed parts adding support extract meta loading sfcs making external cli tool job manually document components imo enforce combination methods still forcing toolchain methodology task agree standard manifest structure let developers make choose best tooling recommend add support best method probably something else ps sorry talking lot little excited enhancement", "d": "12/2017"}, {"body": "want add observations vetur report users use third library global plugin eg elementuibootstrapvue provide global components would hard vuelanguageserver find components third lib nt specify library component manifest declaration extraction also crucial spec another problem ship component library support shipping component sfc format well compiled js already done awesome summary thanks", "d": "12/2017"}, {"body": "another problem ship component library support shipping component sfc format well compiled js sfc preferred js component render functions built two ways javascript function browser build string concatenation ssr build experimenting utility library define prop validation rules shimming utility functions production build using prepack extra meta dropped think similar techniques used documentation maybe babel plugin analyze ast export meta compile time", "d": "12/2017"}, {"body": "agree evan seem serve particular purpose want allow feature however like idea adding inside prop", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "note happens without vuerouter well html document memory leaks toggle let zombie template lt div gt text lt div gt props text string let smallcomponent name smallcomponent template small component let bigcomponent name bigcomponent components zombie template lt div gt lt div gt lt div gt big component lt div gt lt div gt lt zombie vfor elem bigarray key elemid text elemdata gt lt zombie gt lt div gt data return bigarray created let lt thisbigarraypush id elem data element vuecomponent ca smallcomponent vuecomponent cb bigcomponent const app new vue data currentcomp ca mount app", "d": "12/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow turns bug manage boil necessary open issue", "d": "12/2017"}, {"body": "component control slot explicit less flexible current solution explicit imo controlling position slot quite advanced usage doable render functions also able add prop reuse value", "d": "12/2017"}, {"body": "posva although may become less flexible quite difficult write custom components current solution need inserted different slots without slot attr define", "d": "12/2017"}, {"body": "difficult specify slot attribute", "d": "12/2017"}, {"body": "fact code example copy", "d": "12/2017"}, {"body": "posva specify slot attribute difficult sub component think slot attribute nothing redundancy case extreme example looks silly", "d": "12/2017"}, {"body": "imagine writing ending redundant use slots place order written user", "d": "12/2017"}, {"body": "imo better use explicit slots added core however possible implement render functions inspect resolve slot vnodes custom logic eg checking", "d": "12/2017"}, {"body": "thanks providing viable solution", "d": "12/2017"}, {"body": "first time troll around vue issues looks like projecting anger understood nt like vue template syntax really want feel better ask questions forums discord chat plenty people enjoying coding vue probably willing help people feel way well", "d": "12/2017"}, {"body": "yes ridiculous virtual dom slower viperhtml preventing direct dom manipulation helpful console errors nt take issue", "d": "12/2017"}, {"body": "please read docs computed properties code contain valid js syntax fixed example please next time ask questions discord chat many people stack overflow", "d": "12/2017"}, {"body": "sqal said", "d": "12/2017"}, {"body": "nt know coming may happen nature js pass nested object passing reference therefore modifying modify original object well actually clone deep cloner like lodash please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug also website repro need editable boiled reproduction", "d": "12/2017"}, {"body": "hi posva im sorry consider bug explain simple way maybe im missing something example store new variable props store props testes items call method expand store new value thisitemslist expanded true storage affects original props testes affect thisitems hope clarified issue", "d": "12/2017"}, {"body": "bug needs reproduction please read requirements", "d": "12/2017"}, {"body": "like posva wrote bug javascript works use case clone prop initializing note cloning large objects impact performance vue ca nt behalf", "d": "12/2017"}, {"body": "hello nt quite understand asking transforming first version second one know prefer add ways already doable things unless gain justifies", "d": "12/2017"}, {"body": "first version drawbacks creates wrapper function level first wrapper wrapper wrapper breaks fallback content default template feature transform first case compiles actual output pseudo show difference second compile", "d": "12/2017"}, {"body": "also note even works vue versions prior found today suggested workaround works accident guarantee wo nt broken future versions", "d": "12/2017"}, {"body": "working expected clone self", "d": "12/2017"}, {"body": "javascript works clone object jounqin said", "d": "12/2017"}, {"body": "css event occur earlier js necessary js first fulfill logic", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "find solution modify babelrc", "d": "12/2017"}, {"body": "include regeneratorruntime rather use increase bundle size", "d": "12/2017"}, {"body": "sorry stackoverflow question valid bug reproduction", "d": "12/2017"}, {"body": "seem posted wrong fiddle doesnt contain xtemplate", "d": "12/2017"}, {"body": "oh sorry cant really put exact code pretty much like blade file put xtemplate landing page component chrome works perfectly ie doesnt show anything", "d": "12/2017"}, {"body": "thanks real link clears define templates outside element mount app also define root element inside template well mounting element replaced vue", "d": "12/2017"}, {"body": "thanks reply unfortunately nt seem fix issue tried installing npm various polyfill packages unlucky", "d": "12/2017"}, {"body": "oh well xtemplate component missed first look define template main instance course empty nt know want render inside either define content directly inside mount element define xtemplate main instance notice case ca nt use must use call way example nt even contain proper script tag vue could nt run still nt work please provide proper reproduction actually runnable", "d": "12/2017"}, {"body": "ok post bladephp file problem lines html irrelevant", "d": "12/2017"}, {"body": "remove irrelevant lines runnable example take look", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "first one blade file second register component third vue file", "d": "12/2017"}, {"body": "works chrome", "d": "12/2017"}, {"body": "would put template outside vue file whole point precompile requires template vue file honest may still work somehow never tried nt see would use vue file nt intend put template inside also use sepearate plugin nt maintain idea compatible external xtemplate main file still looks nested template inside part page controlled main instance ca nt tell nt show main instance set seems way template directly beneath custom element nt main instance use custom elements compiled javascript inserted end page anyway ca nt debug basic setup many moving parts guess would ca nt use xtemplate andor probably rather open thread forumvuejsorg details andor open issue vuecustomelement repo", "d": "12/2017"}, {"body": "afterthought since works chrome add polyfill custom elements ie nt support", "d": "12/2017"}, {"body": "hmm nt putting outside vue files need lot blade methods use inside template pass prop could get messy maybe suggest alternative better communication within blade files vue components", "d": "12/2017"}, {"body": "idea much appreciate help polyfill custom elements fixed issue thank much", "d": "12/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "12/2017"}, {"body": "printercu try making numeric input component uses empty valid value issue typed invalid number ca nt clear setting value ca nt distinguish empty valid", "d": "12/2017"}, {"body": "lbogdan looks great thank slightly changed also works instead give try app soon please help previous comment also wonder implement vmodelnumber userspace took code internals still allow input input missing something", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "sirlancelot one case using nuxt everything vue sfc", "d": "12/2017"}, {"body": "investigation wonder usage worth major redesign reactive system vue two reactive components hood quite like execute callback changes problem component acting like executes callback notifies watchers observables computed values subscribers mock watcher dep optimize memory usage probably need new reactive component like however new class might optimize limited usage op already stated quite hard write code would really affect users bug", "d": "12/2017"}, {"body": "version try vue set export error", "d": "12/2017"}, {"body": "believe pr tackles issue", "d": "12/2017"}, {"body": "clarify esm build also disables transpilation addition allowing direct import browser module", "d": "12/2017"}, {"body": "actually input element first remove document move places example first renders like focus input input words virtual dom insert parentinsertbefore input moves input element comment element eventually lose focus delete comment node think could use vshow better avoid insertbefore move problem remove document insert reference node case comment default action virtual dom vue nt replace comment node", "d": "12/2017"}, {"body": "also simply give key ensure replaced element focus lost either case", "d": "12/2017"}, {"body": "seems like one", "d": "12/2017"}, {"body": "really translate one think sure exactly want vue well way declare scope container", "d": "12/2017"}, {"body": "translation updated solander", "d": "12/2017"}, {"body": "changing import data datajs export default data import data datajs export default datasomedeepprops", "d": "12/2017"}, {"body": "atinux thanks comments also cautious feature provide shortcut v export props implementation feature sometimes useful resulta resultb seems heavy complicated implementation hope get feedback feature xd", "d": "12/2017"}, {"body": "atinux thanks comments austio help right person", "d": "12/2017"}, {"body": "using would consistent name third typically middle button", "d": "12/2017"}, {"body": "discussion kinda moved pull request evan okayed naming", "d": "12/2017"}, {"body": "bumping get thoughts subject approach also happy make pr allow check happen production happened us hard failure results white screen content rendered today mobile safari wrap span nossr component renders mount cycle everything renders fine according html li spec allows flow content inside contained nodes", "d": "12/2017"}, {"body": "support local directives would awesome need respond action use plain old functions js event handler function onclick context e consolelog clicked div component export default functional true render h context return", "d": "12/2017"}, {"body": "yes scottbedard thank know ca nt functional html template vue emit click log click import logclick logg", "d": "12/2017"}, {"body": "yea would great right ca nt really expose things template clean way technique thought prop default value works looks terrible opinion unnecessary bloats component api", "d": "12/2017"}, {"body": "meet problem", "d": "12/2017"}, {"body": "maysnow mint\u7684\u6e90\u7801\u4e5f\u8fd9\u6837\u5199\u7684", "d": "12/2017"}, {"body": "skottiewang \u5bf9\u7167\u8fd9\u4e2aissue\u770b", "d": "12/2017"}, {"body": "hello add solution others could problem tha answer message error seems keyword used sharepoint creates problems instead use use simple kr giovanni", "d": "12/2017"}, {"body": "workaround use case want dynamically load component based data loaded nt want specify component outright something like", "d": "12/2017"}, {"body": "let think provide config let make lifecycle hooks promise function catch asynchronous error like code created hook async function impossible catch error vue deals function like promise catch catch async error javascript import axios axios export default data return async created await axiosget user", "d": "12/2017"}, {"body": "interesting suggestion consider", "d": "12/2017"}, {"body": "wanyaxing \u6211\u4e5f\u9047\u5230\u8fc7\u4f60\u7c7b\u4f3c\u7684\u95ee\u9898 \u6211\u7528\u4e86keepalive", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "wanyaxing b c alive \u7136\u540e\u6211\u5728b\u9875\u9762\u8fdb\u884c\u5224\u65ad\u5982\u679c\u662f\u8fd4\u56de\u4e0a\u4e00\u7ea7\u9875\u9762 go destroy", "d": "12/2017"}, {"body": "\u8fd9\u4e2a\u662f\u6211\u6574\u7406\u7684", "d": "12/2017"}, {"body": "fadexiii keepalive includes login \u4e3a\u4ec0\u4e48\u6211\u628a includes", "d": "12/2017"}, {"body": "stumbled onto well would liked write directive access shared object injected components inaccessible directive shared object main instance application gives us access state case whether running phone tablet desktop etc based information vresponsive directive would behave slightly differently setting appropriate classes bound element duplicate detection code still wo nt able allow consumer application instance override within instance one screen scenarios overriding also required ssr btw", "d": "12/2017"}, {"body": "give main instance well", "d": "12/2017"}, {"body": "useful situations want add contextual meaning example slot body want dismisshide popover user clicks particular link way kind contextual directive popover component popover provide instance everybody inside easily get", "d": "12/2017"}, {"body": "use scoped slot", "d": "12/2017"}, {"body": "linusborg ca nt use scoped slot need bind whatever event vue files ca nt shows error telling duplicated attributes also nt want make template handlers complicated duplicate attribute click update also create scoped popover directive ca nt use inside provided slots shows error failed resolve directive vdismisspopover", "d": "12/2017"}, {"body": "shows error telling duplicated attributes also nt want make template handlers complicated valid opinion personally think scoped slots worthy learn everyone arsenal update also create scoped popover directive ca nt use inside provided slots shows error well nt issue trying use scoped slots instead directive", "d": "12/2017"}, {"body": "linusborg cases popover content different components ca nt easily access popover close dialog clicking selecting somethid use case cannedresponses inside surveylist need close popover user selects survey possible way currently emit event times reach popover", "d": "12/2017"}, {"body": "would probably solid usecase provideinject nt want pass scoped slott callback levels directive component regular way personally would probably still prefer component emit event something selected even better simply use vif parent edit way jus give perspective seems like actively try resist adding feature generally try challenge feature request thoroughly want try keep filesize api surface increases minimum codebase already grown since want keep eye every new feature request comes potential unclear challenge arguing ones arguing see options solve adequatly current api tried found suffice consider feature request make core", "d": "12/2017"}, {"body": "xiachaoxulu solve problem", "d": "12/2017"}, {"body": "similar problem wanted reload components manually fetching fresh data server one simple brutal solution found force reload web application via clears confirm dynamic include also works expected allows avoid full app reload edit added dynamic include solution", "d": "12/2017"}, {"body": "mainly nt see large benefit mixins extends linusborg react already abandoned hoc brings lots benefit article analyzed benefits contract component mixins implicit use mixins single component begin clash mixins tend add state component whereas strive less think vue team consider support hoc carefully although easy seems vue designed way", "d": "12/2017"}, {"body": "convinced hocs superior concept implicit contract potential clashes happen hocs well example see talk maintainer reactrouter said nt think bad either useful many situations magic bullet praised react world though downsides evident discussion implementing hocs vue nt trivial react vue api functionality broader edge cases taken care surely talk improve long nt require breaking anything vue hoc nt worh breaking change view", "d": "12/2017"}, {"body": "ca nt happen prod mode strips away warnings behavior logic remains exactly works dev work prod well actually happen actually seems hard debug", "d": "12/2017"}, {"body": "actually reared head user entered bad markup closing tag wysiwyg caused page render serverside clientside render failed well way catching hydration failure would least give way knowing certain pages failing due user generated content", "d": "12/2017"}, {"body": "perhaps something simple allowing root component wrapper element used could return everything within element root wrapper", "d": "12/2017"}, {"body": "react nice implementation current version", "d": "12/2017"}, {"body": "add fragment root like web component shadow root", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "\u4f60\u597d \u6211\u4e5f\u662f\u9047\u5230\u8fd9\u4e2a\u95ee\u9898 \u8bf7\u95ee\u63d0\u95ee\u8005\u8fd9\u4e2a\u95ee\u9898\u89e3\u51b3\u4e86\u5417", "d": "12/2017"}, {"body": "migrating legacy apps vuejs came across form like example guide vue breaks form yes nice nice warning grateful would nice way ask vue skip tags us however try workaround suggested", "d": "12/2017"}, {"body": "position ca nt use babel found able modify createelement property beforecreated hook using global plugin like", "d": "12/2017"}, {"body": "think needs reopened especially since pwa future incremental loading code must", "d": "12/2017"}, {"body": "especially since pwa future incremental loading code must sounds nice catchy still nt seen important usecases directives big codesplitting chunk would useful surely meant big big dependencies import inside deirective could course codesplit quite easily today nt see reason adding code codebase something nobody provided acutal usecase would nice good enough reason", "d": "12/2017"}, {"body": "situation right need writing wrapper vue kotlin shell js rest application kotlin app written using kotlin wrapper chunk loaded shell honestly using js would way", "d": "12/2017"}, {"body": "sounds exciting nt understand usecase asynchronous directives nt know kotlin hope necessary understand directives big codesplit", "d": "12/2017"}, {"body": "directives big definition included app chunk along kotlin loaded shell directive declaration shell chunk vue instance instantiated declaration definition two different chunks shell downloaded quickly show basic ui spinner two rest app loaded spinners disappear show content well rest ui makes app fully functional shell chunk able asynchronously load vuecomponents defined app chunk creating communication layer two chunks following instructions asynchronous components already working components looking type asynchronous loading directives include app chunk place used anyway actually may thought solution already since directives nt need render function testing today would nice vue built way idea nt work feel vue definitely needs built way edit idea work create plain empty js object shell pass directive definition vuedirective also shell pass communicator communicates shell app chunks app chunk finishes loading creates directive definition passes communicator communicator matches two based directive name concatenates directive definition object app chunk empty object shell chunk already registered using vuedirective shell go asynchronous directive definition loading everything works github repo working", "d": "12/2017"}, {"body": "makes lot sense lot shortcuts ctrl windows replaced cmd macos think multiple file selections ctrlcmd click example", "d": "12/2017"}, {"body": "exact use case hectorhumberto thanks suggestions", "d": "12/2017"}, {"body": "hello guys came across exactly issue point view nt work proper way chrome mean better use syntax instead fail freezing success works like charm tia", "d": "12/2017"}, {"body": "optional chaining elvis operator could reconsidered love see added beautifully simplify code", "d": "12/2017"}, {"body": "lehni optional chaining becomes available babel would need enable babel plugin need vue support syntax since javascript update found babelpluginproposaloptionalchaining could already work", "d": "12/2017"}, {"body": "sirlancelot already using plugin works js code work within template expressions eg", "d": "12/2017"}, {"body": "bad looks like template compilation uses customized version buble babel", "d": "12/2017"}, {"body": "oh see explains things guess means flexibility except vue would allow engines plugged transpilation using babel falling back buble idea even possilbe", "d": "12/2017"}, {"body": "dont think could solved javascript", "d": "12/2017"}, {"body": "network run", "d": "12/2017"}, {"body": "changing title meta really important professional websites ca nt live without vue team take high priority make happen could simple feature made unavailable vue unbelievable", "d": "12/2017"}, {"body": "based create function reusable like documentation expose create mixin handle head title metas questions want know opinion code create new mixin name headjs looks like const cleanmetas gt return new promise resolve reject gt const items documentheadqueryselectorall meta const items typeof items object amp amp viewport findindex val gt valitems name amp amp items name documentheadremovechild items resolve const createmeta vm name attr gt const meta documentcreateelement meta metasetattribute name name const attr const attr const k metasetattribute k getstring vm k documentheadappendchild meta const getstring vm content gt return typeof content function contentcall vm content export const getmeta vm meta env gt typeof meta object return env return objectkeys meta map value gt return objectkeys meta value map key gt join map value gt join n else return meta const serverheadmixin created const head options head const title head title ssrcontexttitle const clientheadmixin mounted const vm export default processenvvueenv server serverheadmixin clientheadmixin add srcappjs import headmixin utilhead vuemixin headmixin set components like export default head title return thisname con meta name description content return el perfil de thisname name keywords content return thisname thislastname thisemail name twitter card content summary name twitter site content jqemprendedorve name twitter creator content jqemprendedorve name twitter url content name twitter title content return thisname creando vuejs ssr firebase name twitter description content modelo de vuejs ssr con firebase cloud function hosting name twitter image content asyncdata store route return promise action return storedispatch fetchitem computed display item store state item return storestateitems name return storestateitems nombre lastname return storestateitems apellido email return storestateitems correo data return data ssr created firebasedb ref data value snapshot gt consolelog snapshotval finally template look like nt know good practices first intent manage head tag first question really necessary show de meta client benefys anyway like title code recreate metas client like updated title opinion demo repo", "d": "12/2017"}, {"body": "seems like common enough use case justify kind builtin helper", "d": "12/2017"}, {"body": "change vuecommonjs vueminjs problem solvedhowever still nt understand", "d": "12/2017"}, {"body": "phatchai example works correctly change parent model checkbox component would nt change need take checked props emit event input onchange nt store local state example vue export default name vswitch props value methods changehandler emit input thisvalue", "d": "12/2017"}, {"body": "like please something thanks", "d": "12/2017"}, {"body": "love vue lot working two years lack specificity render errror complaintrequest fix error occurs either template corresponding js code line number would greatly help even problem located either template js code", "d": "12/2017"}, {"body": "two keyed children inside also get error duplicate keys html order avoid need add thing keys html", "d": "12/2017"}, {"body": "totally agree meantime issue ranks quite well google provide way starting index ranged vfor use index instead value", "d": "12/2017"}, {"body": "meet question first think work venter", "d": "12/2017"}, {"body": "still working want look", "d": "12/2017"}, {"body": "think could useful something like bind property vue instance form model instead one would simply glad work pr", "d": "12/2017"}, {"body": "dynamically importing singlefile component solved issue", "d": "12/2017"}, {"body": "scenario wanted submit form outside form calling refsformsubmit would nt fire savedata function workaround form html save vue component method savedata function manually trigger validation refsformcheckvalidity try focus error refsformreportvalidity return hopefully helps someone still submitted via refsformsubmit still manually trigger validity although sure reportvalidity reliable", "d": "12/2017"}, {"body": "issue vue nuxt", "d": "12/2017"}, {"body": "minjs version suitable imports esmjs version suitable imports", "d": "12/2017"}, {"body": "answer work nonlocal url thanks", "d": "12/2017"}, {"body": "good ca nt", "d": "12/2017"}, {"body": "wenliangcan key nt show page", "d": "12/2017"}, {"body": "giologist find solution", "d": "12/2017"}, {"body": "apologies bringing old thread back life issue seems removed conditionally passing string prop want default best way within prop", "d": "12/2017"}, {"body": "correct robsterlini coerce remove migration guide suggests alternative", "d": "12/2017"}, {"body": "issue way array mutated see", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "returns undefined returns object literal parser nt interpret two braces object literal block statement", "d": "12/2017"}, {"body": "maybe help", "d": "12/2017"}, {"body": "brianvoe hi change event method component like", "d": "12/2017"}, {"body": "list reserved directives", "d": "12/2017"}, {"body": "miss list directives api documentation", "d": "12/2017"}, {"body": "linusborg oh see nt know", "d": "12/2017"}, {"body": "hi issue rgigger help array changes correctly duplicates last mycomponent bug something wrong", "d": "12/2017"}, {"body": "using index key default behaviour need use unique identifier eg db id otherwise deletions array reuse components please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "12/2017"}, {"body": "may problem simple arrays unshift elements change indexes vue renders additional component new element old last element array rest components dont change unshift trigger vue component rerender existing elements", "d": "12/2017"}, {"body": "also issuei large size data row key value binding ul li ok binding select option slow think select binding large size data common situation find vue way support without databind example", "d": "12/2017"}, {"body": "hi kinanson use value vbind value instead vmodel test element really fast", "d": "12/2017"}, {"body": "fact reali try binding select also slow maybe tray rows", "d": "12/2017"}, {"body": "kinanson try slow ok really slow think browser issues things environnement little bit faster demo gif gave mac", "d": "12/2017"}, {"body": "try", "d": "12/2017"}, {"body": "anything wrong using store nonreactive properties long future conflict options vue adds globally looks cleaner declaring inside export default name mydashboard toolbar dashboard lt nonreactive property mounted consolelog optionstoolbar lt use nonreactive property data return reactive data", "d": "12/2017"}, {"body": "nothing wrong really many plugins use well ie vueapollo vuefire etc", "d": "12/2017"}, {"body": "yo try solution interpreted desires correctly want solution following traits creates dependencies parent components creates dependencies child components require passing data component component require receive data component even require components simple solution even require vue create data model js export import data model whatever components want use use answer question using vue go back regular javascript declare b page scope access exactly like want", "d": "12/2017"}, {"body": "issue twoyear old closed quite time nt even apply current state vue", "d": "12/2017"}, {"body": "inpute dbclick solve problems dblclick", "d": "12/2017"}, {"body": "thanks", "d": "12/2017"}, {"body": "vue", "d": "12/2017"}, {"body": "\u6bd4\u5982\u4f2a\u4ee3\u7801 react const config id row gt rowid name row gt rowname const data id name sy objectkeys config map item gt config item render data item \u8fd9\u6837\u4ee5\u540e\u53ef\u4ee5\u4efb\u610f\u4fee\u6539config vue \u600e\u4e48\u5b9e\u73b0 \u662f\u4e0d\u662f\u53ea\u6709 slot \u65b9\u5f0f", "d": "12/2017"}, {"body": "amp jsx\u7684\u7528\u6cd5", "d": "12/2017"}, {"body": "hello similar problem await refs code work put alert test inside refsmenusenlignemloadlist put first loading give error put second loaded fine solution write code without async", "d": "12/2017"}, {"body": "solved problem beforedestroy mount", "d": "12/2017"}, {"body": "hi everyone solution turn input component give ref use mounted hook emitting input js input element value seems possible without component input convinced turning inputs separated components good practice", "d": "12/2017"}, {"body": "krivoops ran similar situation ended basing solution article mounted function ended looking like dont copy paste code unique component beautiful solution need app good luck", "d": "12/2017"}, {"body": "state issue", "d": "12/2017"}, {"body": "quick question creating dynamic selects depending data would like set way first option always selected passed vmodel since setting formdata empty object initial load vmodel bind doesnt get assigned vmodel get work would like add selected option vmodel", "d": "12/2017"}, {"body": "solved problem think may facing problem use single store computed properties reactive store getters use store module reactive longer stuck days update nothing submodules update find", "d": "12/2017"}, {"body": "personally much testing vue minimum need following", "d": "12/2017"}, {"body": "land googling vue datatables another approach found works use vue render using nonobservable list variable hand datatables use datatables calls alter data created function nonobservable vars go thisdatatable null thispersons vfor iterate one time thisinit methods init function thispersons getthedata thisdatatable personstable datatable gist detailed code", "d": "12/2017"}, {"body": "quick question creating dynamic selects depending data would like set way first option always selected passed vmodel since setting formdata empty object initial load vmodel bind doesnt get assigned vmodel get work would like add selected option vmodel", "d": "12/2017"}, {"body": "sorry bump experiencing issues exactly symptoms unfortunately ca nt publicly provide link site also ca nt pin problem reduced test case since large project experience vue instance child component instances would behave extremely slowsluggish firefox tested win compared browsers system ff versions systems win mac", "d": "12/2017"}]