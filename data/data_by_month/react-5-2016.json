[{"title": "change event fires many times inputing chinese characters ie", "body": "like", "num": "6927", "d": "5/2016"}, {"title": "warn unsupported lifecycles stateless components", "body": "example generating child context stateless component context available children", "num": "6926", "d": "5/2016"}, {"title": "cant clone clone child element", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "6923", "d": "5/2016"}, {"title": "put js code related ui react", "body": "suppose render table react component want add features make columns resizable bind several keypress events updown highlight shiftupdown select enter processing etc none tasks anything react aspect component states props component lifecycle etc scenario write ui features code inside file import corresponding jsx file place entirely please advise", "num": "6922", "d": "5/2016"}, {"title": "ondoubleclick event bug", "body": "use ondoubleclick event found problem move mouse doubleclick found ondoubleclick event triggered", "num": "6920", "d": "5/2016"}, {"title": "html jsx working", "body": "hi wanted report page working", "num": "6918", "d": "5/2016"}, {"title": "form disappears without calling onsubmit", "body": "want request feature report bug report bug current behavior form element disappears result state change eg triggered onclick handler submit button onsubmit handler called html even form element removed dom onsubmit handler still called current behavior bug please provide steps reproduce possible minimal demo problem via similar template plain js html version expected behavior reproduced react commentedout settimeout react code usable hack fix time expected behavior code specified form onsubmit executed form disappears versions react browser os affected issue work previous versions react react chrome os x", "num": "6916", "d": "5/2016"}, {"title": "test", "body": "test", "num": "6912", "d": "5/2016"}, {"title": "appear child", "body": "want request feature report bug bug current behavior render function one rows data noticed react automatically put span tag around elapsedtime ms triggers dom validation warning issue appear child current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior put span tag around text versions react browser os affected issue work previous versions react", "num": "6911", "d": "5/2016"}, {"title": "typescript definitions", "body": "official blessed typescript definitions react reactdom jest definitions definitelytyped repo type definitions outdated definitelytyped outdated favour typing advantages dt want create type definitions typings create pr use instead hardcoded poorquality definitions react repo help reuse type definitions react repo react applications made typescript developers current plan create uptodate typings typescript definitions react reactdom plans jest prefer start prefer type definitions official communitydriven suggestions corrections plan", "num": "6910", "d": "5/2016"}, {"title": "provide optin way easily manage event handlers", "body": "shortage places react dev write something like alternatively ideal recreate functions render alternative would form autobinding class constructor recreate functions per instance require boilerplate love see react team add way opting handler ed current component set current component mean component whose created element nt know called example called ownclick would look like button clicked would called object owns method rendered button set", "num": "6908", "d": "5/2016"}, {"title": "external javscript react component", "body": "hi problem wan na use external javascript fabricjs component serverside render tips still error message fabric defined thank much", "num": "6907", "d": "5/2016"}, {"title": "building things upon react diff algorithm", "body": "since react treediffing dom rendering decoupled paving way projects like way give treediffing algorithm clues operations fast slow suppose fictitious drawmodel updating certain property node much expensive recreating entire node tell react situation switch really easy way repurpose become", "num": "6906", "d": "5/2016"}, {"title": "sdfssd", "body": "", "num": "6902", "d": "5/2016"}, {"title": "add support eventlistener interface", "body": "would nice support eventlistener interface example mdn necessary listeners creating unnecessary copies callback instance component making use event delegation make sense made working proof concept plunk first approach tests added", "num": "6901", "d": "5/2016"}, {"title": "bug controlled input type number", "body": "seems bug way react interfaces controlled inputs type number input contains invalid number let say trying clear input value setting empty string nothing check example reproduce onchange handler set controlled value value returned evtargetvalue case invalid value input returns empty string per html spec actually clear input invalid input stays setting input value empty string entering invalid value clear input content keep invalid value seen react osx chrome firefox", "num": "6900", "d": "5/2016"}, {"title": "cursor jump end value contains", "body": "reporing bug current behavior cursor jump end value contains rerendering component without changing value click text reproduce problem expected behavior rerender preserve cursor position reproduced react react chrome safari affected latest version firefox fine", "num": "6897", "d": "5/2016"}, {"title": "error performupdateifnecessary unexpected batch number", "body": "maintainers problem please see explanation getting strange error never come across googling nt help caused lot headaches reverted days ago error persists even though days ago everything running smoothly tests passing would appreciate sort direction begin resolve bug guesses error redux webpack reduxform react know precise quite lost example redux logger information max os x el capitan react error persists sorry nt specific react look error message code appears coming facebookreact code thanks", "num": "6895", "d": "5/2016"}, {"title": "change website use codemirror jsx mode", "body": "right use codemirror javascript mode website jsx mode start using instead", "num": "6894", "d": "5/2016"}, {"title": "purerendermixin release process broken", "body": "want request feature report bug report bug current behavior several versions specifically versions published npm specify nonexistent versions react peer dependencies etc assume bug release process mixin assumes equivalent react version always exist current behavior bug please provide steps reproduce possible minimal demo problem via similar template throw peer dependency warning reactaddonspurerendermixin resolves wants least react nt exist whereas react ca nt resolve anything expected behavior install latest versions package without throwing warnings versions react browser os affected issue work previous versions react", "num": "6892", "d": "5/2016"}, {"title": "docs enhancement link source", "body": "thought might useful able jump source code right documentation eg reactdomrender section docs included link source github believe easier access source code increase familiarity things work background perhaps induce community involvement also understand might add complexity docs management could also difficult point right source file eg depends platform serverclient maybe spoiled jsduck handles ideas welcome", "num": "6891", "d": "5/2016"}, {"title": "childrentoarray return flat array children", "body": "would quite surprised actual bug since would probably reported long ago case think documentation made clear interpret documentation way supposed return children including nested ones flat array want request feature report bug bug unclear documentation current behavior return flat array rather returns flat array including direct children nested ones current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior return flat array children including nested ones versions react browser os affected issue work previous versions react documentation return children opaque data structure flat array keys assigned child release notes api made public added reactchildrentoarray takes nested children object returns flat array emphasis added keys assigned child helper makes easier manipulate collections children render methods especially want reorder slice thispropschildren passing addition reactchildrenmap returns plain arrays", "num": "6889", "d": "5/2016"}, {"title": "string whitespace causes uniteless css warning", "body": "current behavior assigning style object component results unitless css warning divunknowncontent demo fiddle demo fiddle expected behavior throw warnings css properties need could string one following values versions react tested react", "num": "6888", "d": "5/2016"}, {"title": "ensurescrollvaluemonitoring issue", "body": "app wrapped sentry error catching service encountered bug may react specific kind workaround done mind sure tackle yet occurs mounting root component dom using react happens really rarely chrome far caught versions mac windows thousands renders app daily got hits past days tried search info return could nt find viable info react popularity odd nobody filled issue earlier leds think maybe usage somehow different others thing kinda special app running inside iframe", "num": "6887", "d": "5/2016"}, {"title": "perfprintwasted nt work component conditionally returns null", "body": "upgrading react able use printwasted perf tools react throws error react discovered error connected returning lot components something like try measure one components get error removing conditions components fixes problem", "num": "6885", "d": "5/2016"}, {"title": "reactcreateelement type key undefined handled incorrectly", "body": "believe introduced behavioral difference development production versions react released part difference still exists production behavior changed however development behavior diverged change expect appear development production development production dev behavior different dev code path checks existence property whether undefined whereas prod code path checks undefined explicitly affected include warnings seem like major problem nobody noticed real world think fix related fix works add tests include", "num": "6879", "d": "5/2016"}, {"title": "docs production note needs updated", "body": "could nt find reactdocs repo anything posting spent past mins googling get webpack build react production page nt clear ended hunt production undefined error ended asking irc could get clear answer correct way build react production add following plugins array would great get docs notice production string containing literal double quotes page might others question", "num": "6875", "d": "5/2016"}, {"title": "escaped ampersands query params within srchref attributes", "body": "ampersands query params within srchref attributes escaped currently attributes sanitized browser using escapetextcontentforbrowser however case attributes escape within query parameters example attribute name available calling quoteattributevalueforbrowser would need degree refactor create conditional behavior consideration given attributes might contain urls possible attributes alter variations nt know bug exists design nonobvious reasons versions", "num": "6873", "d": "5/2016"}, {"title": "perfprint method working read property foreach undefined", "body": "upgrading trouble using react perf tools done following added one files launch app chrome open dev tools run console get failure line behaviour occurs method behaviour occurs put commands code ie running chrome console", "num": "6871", "d": "5/2016"}, {"title": "attribute works inputlike things", "body": "want request feature report bug report bug current behavior adding attribute react component inputlike thing desired effect current behavior bug please provide steps reproduce possible minimal demo problem via similar template fails work div works input expected behavior would expect focusable element could also receive behavior versions react browser os affected issue work previous versions react nt yet bisected issue please let know needed", "num": "6868", "d": "5/2016"}, {"title": "performance disable proptypes validation production builds", "body": "react run faster production builds nt check proptypes looking code nt see checks would prevent proptypes validation running production builds createelement cloneelement seeing functions like pop performance analysis app", "num": "6864", "d": "5/2016"}, {"title": "props passing included description component", "body": "unsure bug expected behavior component two components js import modal modal import inviteform inviteform render return js modal hidemodal render return reactcloneelement thispropschildren hidemodal thishidemodal hidemodal available props inviteform scenario include prop hidemodal becomes available props also whats interesting include containing file modal file actually overwrite hidemodal prop passed inviteform js import modal modal import inviteform inviteform render return using react reactdom babel webpack", "num": "6863", "d": "5/2016"}, {"title": "createelement warn propsproto null fails instead", "body": "bug code warn null since believes plain object originating since directly accesses fails object passed props reproduce expected behavior nt use directly props object expected react browsers os affects versions react since acceptable shape props explicitly defined explicitly supported well", "num": "6854", "d": "5/2016"}, {"title": "click select version ie", "body": "nothing happens attempt click date select ie works every browser export function monthsarray return january february march april may june july august september october november december map monthname index gt let month monthname monthname monthabbr monthnameslice monthnumber index monthpadded monthnumber lt monthnumbertostring monthnumbertostring return month", "num": "6845", "d": "5/2016"}, {"title": "function", "body": "hi guys tried use perfstart latest version return error console used latest version react reactdom idea thanks advance", "num": "6843", "d": "5/2016"}, {"title": "react devtools ctor timer error", "body": "bug warning displayed console internal error react performance measurement code js import react react import render reactdom import perf reactaddonsperf import browserhistory router reactrouter import routes routes import persist altfluxpersist persist docs const target documentgetelementbyid app perfstart render target gt perfstop perfprintwasted google chrome", "num": "6842", "d": "5/2016"}, {"title": "possible typeerror syntheticuieventjs", "body": "static analysis found issue react code line null check line", "num": "6840", "d": "5/2016"}, {"title": "react devtools error", "body": "since updating react getting error multiple times", "num": "6839", "d": "5/2016"}, {"title": "rfc reactinstrumentationdebugtoolonsethostnode debugid node", "body": "need way get host nodes react devtools new api currently get reaching directly propose transition using devtool api renderers provide host nodes become available propose renderer code would emit something like node becomes associated deassociated dom renderer would happen would add reactcomponenttreedevtool would handle event sound reasonable longer term would make something like possible userland", "num": "6834", "d": "5/2016"}, {"title": "support passing array components reactdomrender", "body": "would like something like could nt find answer elsewhere possible similar algorithm work way works mounting children inside component using keys etc know simple wrap everything div always felt wrong", "num": "6827", "d": "5/2016"}, {"title": "unable use testutilssimulatechange consecutively", "body": "using coupled test code check following code snippet second expect would fail see value indexfieldnode updated change code make like time everything works properly", "num": "6826", "d": "5/2016"}, {"title": "npm react satisfy siblings peerdependencies", "body": "bug current behavior errs expected behavior run react documentation without error repro default blank answers npm err argv usrlocalbinnode usrlocalbinnpm install react reactdom npm err node npm err npm npm err code epeerinvalid npm err peerinvalid package react satisfy siblings peerdependencies requirements npm err peerinvalid peer reactdom wants react info", "num": "6825", "d": "5/2016"}, {"title": "add child parent name keymissing warning stack", "body": "information", "num": "6823", "d": "5/2016"}, {"title": "onchange firing properly react clearing input x button rightclick delete", "body": "onchange event inputs seem working correctly react using clear x button provided ie using clicking clear button fire immediate onchange time click rather seems queues onchange fires next time text entered effectively rapidfiring two onchanges succession becomes problem using component maps state two probably inputs values made two fiddles different versions react reactdom react fiddle buggy react fiddle working react fiddle reproduce typing value left input box typing another value right input box clicking x button clear right input box typing whatever left input box see right input box reverts value clicked x also see happening instead clicking x clear right input highlight input text right click click delete x button rightclick delete cases work fine react tested fiddles exact browser code", "num": "6822", "d": "5/2016"}, {"title": "react production mode", "body": "nodeenv still required change development production mode find anything source code version", "num": "6821", "d": "5/2016"}, {"title": "react statechildren could undefined reactelement array element", "body": "ca nt understand always array would much easier work since nt check type time children get changed performance would likely better think", "num": "6819", "d": "5/2016"}, {"title": "figure strategy reactperf separating renderers", "body": "discussed need figure strategy friends ships", "num": "6812", "d": "5/2016"}, {"title": "noscript tags allow child elements", "body": "", "num": "6810", "d": "5/2016"}, {"title": "ondoubleclick named ondblclick", "body": "dom event diverged adds confusion opinion dblclick maybe badly named react events follows dom counterpart makes really easier stick original names", "num": "6809", "d": "5/2016"}, {"title": "onmouseleave nt work node gets detached", "body": "problem kind component javascript class onhover extends component constructor props super props thisstate bool false render return show onmouseenter show onmouseleave notice first works fine move mouse slowly though cut mouse fast event gets triggered event always working though options tag edit think something rerendering components type force rerender causes issues javascript class onhover extends component constructor props super props thisstate bool false render return", "num": "6807", "d": "5/2016"}, {"title": "trying write event onchange multiple fields getting errors", "body": "warning failed proptype invalid prop type supplied expected check render method genericform warning child array iterator unique key prop check render method see informationwarning warning string valid react element null must returned may returned undefined array invalid objectwarning warning string valid react element null must returned may returned undefined array invalid object uncaught invariant violation string valid react element null must returned may returned undefined array invalid object files upldtargz please help one", "num": "6805", "d": "5/2016"}, {"title": "rfc ish ship", "body": "branch branch published alpha react native using master soon already cut ideally would nt ship would get however real risk rn churn rc could say tough shit used alpha really cool big happy family work together told use alpha even nt think ideal work pragmatically probably publish already final since patch fixes top ship easily changes changes top longer term nt think shipping maintaining multiple releases really tenable us doubtful ship outside security release need properly plan cadence consider trainlike model tangential decision though write thoughts later discuss wherever couple related discussions amp", "num": "6803", "d": "5/2016"}, {"title": "react node removed child node", "body": "hi simple code like upgrading react whenever click link got message uncaught notfounderror failed execute removechild node node removed child node function code componentjs js ondispatchclick event eventpreventdefault appdispatcherdispatch type routepickupconstantsdispatchingrunsheet routeid apidispatch thispropsrouteid gt appdispatcherdispatch type routepickupconstantsdispatchingrunsheetsuccess routeid thispropsrouteid getdispatchlink route routeisdispatching dispatchlink dispatching else dispatchlink dispatch render let route thispropsroute storejs js case routepickupconstantsdispatchingrunsheet case routepickupconstantsdispatchingrunsheetsuccess", "num": "6802", "d": "5/2016"}, {"title": "support server rendering attribute", "body": "attributes like necessitates server rendering features corresponding dom properties prefer case app cache know well serverside meaning generic problem might need way solve serverside nt want global plugins client side solution refs manual manipulation generally nt need fix uncommon enough nt create ecosystem fragmentationisolation global plugins learned something mootools", "num": "6798", "d": "5/2016"}, {"title": "move instrumentation isomorphic renderersshared", "body": "per sebmarkbage want folder contain code necessary author react components dependencies friends moved caller right folder onsetstate inside need move somewhere inside renderer eg update queue implementation labeling mostly involves moving files goal files folder contain anything references grabs one takes", "num": "6797", "d": "5/2016"}, {"title": "submit form element nt trigger onsubmit", "body": "want request feature report bug bug current behavior ref dom element call trigger callback repro fiddle hit input properly calls alerts click button calls expected behavior trigger versions react browser os affected issue work previous versions react chrome test others unknown broken previous versions", "num": "6796", "d": "5/2016"}, {"title": "create separate copies renderer", "body": "simple plan copy files renderer package rewrite require files isomorphic folder hardcode whitelist needed way share isomorphic modules none files way versioning separate renderers easy nt depend everyone updating peer dependencies", "num": "6795", "d": "5/2016"}, {"title": "react performance", "body": "parent component subcomponents rerender parent component found subcomponent execution requires time hide refresh need excuse way handle scenario thank", "num": "6794", "d": "5/2016"}, {"title": "option elements selected attribute applied", "body": "want request feature report bug report bug regression current behavior elements get attribute applied current behavior bug please provide steps reproduce possible minimal demo problem via similar template demo issue expected behavior currently selected would attribute applied demo behaviour versions react browser os affected issue work previous versions react worked", "num": "6793", "d": "5/2016"}, {"title": "prop types validation happen twice", "body": "historically validated prop types component mount time switched validating upon element creation gives earlier errors better stack traces nt want ever show message failed composite proptype remove code generates addition remove check fbjs unnecessary code cleanup mildly improve performance dev mode", "num": "6791", "d": "5/2016"}, {"title": "key warnings show component stack", "body": "made proptypes warnings show stack components warning occurred key warnings key provided child array iterator unique key prop nt hard use reactcomponenttreedevtoolgetcurrentstackaddendum way proptypes warnings using update unit tests pass new format", "num": "6790", "d": "5/2016"}, {"title": "uncaught typeerror function action imported without curly braces", "body": "using react see following behavior want import actions redux import like try import like used import single react components without curly braces bundling see following exception see exception", "num": "6788", "d": "5/2016"}, {"title": "move shared utilities react", "body": "slowly working making sure code fb depends modules internal react mostly involves changing code use public apis also several things react general purpose moved example hitting right used used used couple modules fixed data table know also used elsewhere transition event detection surely others mostly reminder notice sorts others random files disappear repo live fbjs instead", "num": "6786", "d": "5/2016"}, {"title": "add option ignore specified props shallowcompare", "body": "feature requestquestion consider component stateless functional component sfc prop eg like using would always return cases makes sense use props except sfcs like issue reduxform solution idea common pattern saw added thought maybe would possible add option make ignore one several props eg signature could like instead could array string keys avoid breaking change could course added fifth argument instead seems robust makes sense could go pr", "num": "6784", "d": "5/2016"}, {"title": "form elements readonly attribute ignored", "body": "want request feature report bug bug current behavior readonly attribute nt exist generated real dom input field example expected behavior add readonly attribute generated input element react credit stackoverflow question", "num": "6783", "d": "5/2016"}, {"title": "current starter kit examplesbasiccommonjs working", "body": "want request feature report bug bug current behavior running npm install npm start examplesbasiccommonjs directory found results following error current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior example works versions react browser os affected issue work previous versions react react npm node osx unknown worked previously", "num": "6782", "d": "5/2016"}, {"title": "warning changing uncontrolled input type radio controlled", "body": "code click radio gives warning warning test changing uncontrolled input type radio controlled input elements switch uncontrolled controlled vice versa decide using controlled uncontrolled input element lifetime component info clear bug", "num": "6779", "d": "5/2016"}, {"title": "change expression brackets", "body": "feature request change expression brackets able render style tag react component", "num": "6774", "d": "5/2016"}, {"title": "react router error occur", "body": "use react router broken code like import react component react import reactdom reactdom import router route link browserhistory reactrouter const app reactcreateclass const reactcreateclass etc const users reactcreateclass render return users use link route around app thisstateusersmap user gt user userid gt username thispropschildren const user reactcreateclass componentdidmount thissetstate route components rendered useful information like url params user finduserbyid thispropsparamsuserid render return thisstateusername etc declarative route configuration could also load config lazily instead really need single root route nt need colocate entire config reactdomrender documentbody error like uncaught invariant violation createclass class specification must implement method", "num": "6766", "d": "5/2016"}, {"title": "reactperf expose isprofiling exported object", "body": "tested new perf tools one screens one app working works great one thing wanted also old one perf tools able check whether perf tools started stopped basically exposing variable use keyboard shortcut development bound startstop perf tools currently forced maintain variable know whether start stop gets sync startstop perf tools without keyboard shortcut nt think worthwhile expose feel free close issue", "num": "6762", "d": "5/2016"}, {"title": "jsx doc render html tag vs render reactelement", "body": "file section says react either render html tags strings react components classes according react terminology nt", "num": "6761", "d": "5/2016"}, {"title": "use testutil component", "body": "used run tests components using changed component getting also tried", "num": "6758", "d": "5/2016"}, {"title": "able use testutils addon outside npm", "body": "working old project started using react ui part order test react components need testutils addon comes npm using react outside npm project built using npm anyway use testutils addon outside npm project test react components", "num": "6757", "d": "5/2016"}, {"title": "input element rendered cursor gets position mobile browser", "body": "input tag bug following official document document user input event occurs controller input value method however tried code works well browser pc mobile browser chrome safari bug like enter inputs remove letter cursor get position second line even though remove first letter guessed component rendered method cursor get positioned tried code works well guess right fixed thank", "num": "6755", "d": "5/2016"}, {"title": "new reactperf free memory dev profiling", "body": "purge code run early exit need fix add test case make sure regress", "num": "6750", "d": "5/2016"}, {"title": "warn inline style update bad value", "body": "set inline style attribute component update state bad value make inline style like currently takes effect component backgroundcolor remain yellow live example suppose correct behavior old value override new value even value nonstandard fallback use parent style like plain html leave previous style behavior component lose connection component state style become chaotic unpredictable", "num": "6749", "d": "5/2016"}, {"title": "attributes custom elements removed diff", "body": "trying adopt custom elements parts ui ran issue update tree custom attributes custom elements removed correctly seen need click false inspect dom node dev tools browser tracked issue method seems special check loop corresponding section missing deleting results incorrect behavior starting work patch", "num": "6747", "d": "5/2016"}, {"title": "hidden true works element display css", "body": "css js expect element hidden actual element hidden solution div hidden display none important seems like react use div hidden hide element think important better", "num": "6743", "d": "5/2016"}, {"title": "reactprerftools", "body": "testing latest refactor perftools using printoperations often always get getoperations line", "num": "6742", "d": "5/2016"}, {"title": "uncaught typeerror read property addeventlistener null", "body": "getting error console certain components removed dom calling method assumes target null tries access addeventlistener null object checking target amp amp targetaddeventlistener instead components removed incorrect way would cause happen", "num": "6740", "d": "5/2016"}, {"title": "react app load facebook ios webview", "body": "hello know might best place ask seem find better place react said application built facebook inc built react application demo page main issue arises want users share link facebook people viewbook cellarevent page loads fine desktop browsers android devices tested also facebook webview ios devices using safari load facebook webview range devices going iphone ipad nano ipod touch nt access ios devices found behavior tested ones put kind shims support also legacy browsers also render using phantomjs works fine issue comes facebook webview ios use track console outputs nothing thrown accessing facebook webview simply wo nt load clueless next packagejson dependencies", "num": "6739", "d": "5/2016"}, {"title": "publishing separate disttag", "body": "react native requires currently published installing module leads peerdependency warnings errors ex actually fails several packages peerdeps react nt match several people including raised issue npm time could fb publish master use npm disttag feature tag latest next atyourownrisk", "num": "6738", "d": "5/2016"}, {"title": "rerender element componentdidmount error read property rootid null", "body": "reactdomrender container element toplevel componentdidmount function react show error read property rootid null use settimeout run reactdomrender work even feel uncertain could someone help html ajsx amp bjsx var reactcreateclass componentdidmount function reactdomrender documentgetelementbyid container render function return hello world var b reactcreateclass render function return hello world b appjsx", "num": "6737", "d": "5/2016"}, {"title": "docs build russian", "body": "something went wrong build think page nt checked", "num": "6735", "d": "5/2016"}, {"title": "svg sprite freeze", "body": "svg sprite using within component changing sprite freezing jsx example javascript var hello reactcreateclass clicknum click function thissetstate statemessage click thisclicknum thisclicknum render function var icon thisclicknum heart heartactive reactdomrender documentgetelementbyid container link jsfiddle", "num": "6734", "d": "5/2016"}, {"title": "svg clippath url issue", "body": "tried upgrading react run issue svg seems related change way react emits clippath css property following jsx simplified react emitted following react produces following note quotes around clipabove new clipping work", "num": "6733", "d": "5/2016"}, {"title": "textarea placeholder nt shown ie rendered using react", "body": "nikolai mavrenkov already created good description problem stack overflow confirm breaks works browsers react", "num": "6731", "d": "5/2016"}, {"title": "force react reorder keyed children instead destroyingrecreating", "body": "using react build application viewing multiple webcasts one time component arbitrary number components children unique key described trying implement ability swap positions webcasts screen important dom nodes reordered recreated order prevent webcast embeds reloading based documentation components reordered destroyed recreated unique keys react reconciles keyed children ensure child reordered instead clobbered destroyed instead reused problem destroyed vital components reordered destroyed nt know diffing algorithm decides components reorder destroy recreate seeing mix two behaviors nt want created simple test case jsfiddle demonstrate problem click button swap keys assigned first last components note last component correctly moved first position remainder components including ones indices nt change destroyed recreated see embedded video reloads way force react reorder children instead destroying recreating", "num": "6729", "d": "5/2016"}, {"title": "unable render backgroundimage single quote url", "body": "single quote background image url react even flush changes dom got around url works fine without manipulation set exactly sure react rejecting even putting dom sort inconsistency browser handles single quotes background image could react handle simple string manipulation", "num": "6728", "d": "5/2016"}, {"title": "installation error node postinstall", "body": "got node postinstall error running npm install ubuntu npm err linux npm err argv usrbinnodejs usrbinnpm install npm err node npm err npm npm err file sh npm err code elifecycle npm err errno enoent npm err syscall spawn npm err spawnsync postinstall npm err spawn enoent luckily found similar issue realized issue also resolved creating symbolic link node nodejs running sudo ln usrbinnodejs usrbinnode missing something command node postinstall needs replaced nodejs postinstall", "num": "6726", "d": "5/2016"}, {"title": "componentdidupdate running render flushes", "body": "trying write simple transition component react router looks like var transitiondaemon reactcreateclass getinitialstate function return stage active componentwillreceiveprops function nextprops var nextpath nextpropspathreplace g var currentpath thispropspathreplace g idea fade new child component css changing class active hidden noticed small child components componentdidupdate run new dom flushed resulting transition work around seems put setstate componentdidupdate settimeout gt thissetstate stage active", "num": "6725", "d": "5/2016"}, {"title": "support unquoted attribute values jsx", "body": "example jsx", "num": "6724", "d": "5/2016"}, {"title": "support eventmovementxy featurerequest", "body": "currently seems synthetic events nt properties mousemove", "num": "6723", "d": "5/2016"}, {"title": "proposal getcomponentatnode", "body": "reactdom already function think would useful similar utility function simply let get component instance particular dom node would allow guard calls also help folks need lots interop nonreact code react code furthermore seems like good function sake reactdom api completeness perhaps could named similar happy start working pr yall like idea", "num": "6721", "d": "5/2016"}, {"title": "support", "body": "ton browser support right appears horizon webkit right getting dom events fired chrome wonder syntheticevent could prollyfill", "num": "6717", "d": "5/2016"}, {"title": "test authentication flow app", "body": "hi app implementing auth using reactrouter redux sagas jwt tldr approach testing authentication flow basically using reactrouter onenter method check user authenticated allow access function checks info app state credentials submitted action dispatched received sagas send api request store credentials details local storage gets reduced app state", "num": "6714", "d": "5/2016"}, {"title": "docs clarification complete example refs", "body": "relevant code centers around nt defined complete example defined maybe move together", "num": "6711", "d": "5/2016"}, {"title": "objects valid react child", "body": "searched issue earlier saw mention think different using immutablejs immutablelist react children react works fine modern browsers inside ie react throw invariant saying objects valid react children symboliterator polyfill using babelpolyfill current solution calling tojs children ie nt complain sure supposed happening jsfiddle reason ie example works babel babelpolyfill throws error sure ca nt reproduce fiddle adding tojs onto end list error goes away site", "num": "6708", "d": "5/2016"}, {"title": "add ref root element", "body": "would weird implicit ref root el returned render definitely convenient especially cases wrapping components ca nt throw another messes flexbox rendering etc", "num": "6707", "d": "5/2016"}, {"title": "text adjacent radio button wrapped tag results minified exception", "body": "results minified exception nearly impossible debug tells switch development mode however receive errors development mode result errors sure problem spent hours trying debug issue figured bring attention", "num": "6705", "d": "5/2016"}, {"title": "setting progress element value removed markup", "body": "seems like nt working expected regular html expected rendered empty progress bar react however rendered noticed however setting value seems get around bug using react", "num": "6704", "d": "5/2016"}, {"title": "react perf always prints empty array", "body": "hi guys trying test performance app using react perf tools problem working call perfstart perfstop perfprintwasted console works console errors warnings always returns empty array message total time ms also happens functions like problem ps using reactrouter react perf performing maybe causing issues also set production using", "num": "6702", "d": "5/2016"}, {"title": "nativeevent object missing returnvalue input onchange events", "body": "ran issue testing upgrade ie preventdefault stoppropagation called inside handler onchange event input control member found exception thrown stepping code appears nativeobject reference broken accessing properties mseventobj throw exception able reproduce minimal case clean test vm microsoft repro fiddle", "num": "6699", "d": "5/2016"}, {"title": "proposal validating object proptypes object outside rendercontext flows", "body": "avoid using lots event handling manual prop chaining inside parent form wrote component accumulates form data using context like import react react import rcomponent reactcomponent subclass let func string object reactproptypes class reactform extends rcomponent reactformchildcontexttypes report funcisrequired export default reactform context exposes function child namely input reports final json key value validation status although could bring party schema validator wanted see could leverage property object containing react proptypes understand proptypes nt get checked rendering production hoping want call whatever react uses take object check accumulated form data ie looking docs stackoverflow looks like exposed api validate proptypes solution find involves using stateless components intercepting console messages paranoid solution might look like matchschema going fly nt want run react dev mode production react expose way take advantage validation system regardless mode test object shape property types without hacking around flow", "num": "6698", "d": "5/2016"}, {"title": "unknown plugin babelplugintransformreactjsxsource", "body": "added nt export module fail removed line tests still pass remove change troydemonbreun jimfb also cc spicyj since might know issue", "num": "6695", "d": "5/2016"}, {"title": "error boundaries crash server rendering", "body": "component crashes server rendering tested pretty sure master well fiddle cc jimfb", "num": "6689", "d": "5/2016"}, {"title": "rfc configure warning levels using env variable", "body": "would feasible specify version warnings want static environment variable would silence new warnings safely update minor versions without worrying warning spew dynamic configuration creates stateful shared module dependencies close getting rid isomorphic package reactcurrentowner last one", "num": "6683", "d": "5/2016"}, {"title": "read property addeventlistener null", "body": "component whose method looks like javascript render const condition thisstate state changes changes triggers error trace helps eventlistenerlisten simpleeventplugindidputlistener eventpluginhubputlistener putlistener assignnotifyall ondomreadyqueueingclose mixincloseall mixinperform mixinperform assignperform flushbatchedupdates reactupdatesflushbatchedupdates mixincloseall mixinperform reactdefaultbatchingstrategybatchedupdates batchedupdates reacteventlistenerdispatchevent returning empty div instead null fixes issue javascript render const condition thisstate", "num": "6680", "d": "5/2016"}, {"title": "read property addeventlistener null", "body": "component whose method looks like javascript render const condition thisstate state changes changes triggers error trace helps eventlistenerlisten simpleeventplugindidputlistener eventpluginhubputlistener putlistener assignnotifyall ondomreadyqueueingclose mixincloseall mixinperform mixinperform assignperform flushbatchedupdates reactupdatesflushbatchedupdates mixincloseall mixinperform reactdefaultbatchingstrategybatchedupdates batchedupdates reacteventlistenerdispatchevent returning empty div instead null fixes issue javascript render const condition thisstate", "num": "6679", "d": "5/2016"}, {"title": "dom property case warning broken nonssr", "body": "", "num": "6676", "d": "5/2016"}, {"title": "disable checkproptypes production performances issue", "body": "hello recently found taking cpu rendering massive amount object wondering way somehow improve perfs disable checkproptypes instance mainly useful development mode much production thinking right may already disabled nodeenv set prod unlikely thanks", "num": "6674", "d": "5/2016"}, {"title": "require image server side rendering", "body": "code works well webpack browser side server side function exports require module filename dirname syntaxerror unexpected token illegal exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require render reactcompositecomponentmixinrendervalidatedcomponentwithoutownerorcontext process finished exit code", "num": "6672", "d": "5/2016"}, {"title": "changelog release", "body": "neither blog changelogmd updated npm says", "num": "6671", "d": "5/2016"}, {"title": "add context support shallowcompare", "body": "add context support shallowcompare pr coming", "num": "6670", "d": "5/2016"}, {"body": "codepen page works fine renders test message joevp", "d": "5/2016"}, {"body": "using hmm browser configured way default edit clarification tested clean modernie vm edit clarification appears work", "d": "5/2016"}, {"body": "apparently none component lifecycle events supported intended context also supported suggest warning thrown using nonproduction build react", "d": "5/2016"}, {"body": "yeah warning lifecycles probably good idea", "d": "5/2016"}, {"body": "would correct location specify warning", "d": "5/2016"}, {"body": "yeah sounds like reasonable place cc spicyj confirmation", "d": "5/2016"}, {"body": "nt think makes much sense mental model functions called constructed prototype nt come play guess reasonable place want warning", "d": "5/2016"}, {"body": "yeah sort violate mental model contexttypes proptypes related properties get set function see someone could think could add lifecycle function way really nt harm adding warning might help people catch errors mental model", "d": "5/2016"}, {"body": "minimum could trigger warning since supported require additional prototype function available", "d": "5/2016"}, {"body": "yeah makes sense let start childcontexttypes revisit anyone else confused", "d": "5/2016"}, {"body": "mean ui features nothing react react library help manage ui anything related ui better written react components use case probably component column sizes stored component state global state key bindings done react event system etc future please discussreactjsorg questions", "d": "5/2016"}, {"body": "previously thought creating another component table refs needed functions ca nt anyways take advice shift forum", "d": "5/2016"}, {"body": "ie ok chrome wrong", "d": "5/2016"}, {"body": "provide jsbin example issue", "d": "5/2016"}, {"body": "createselectedcell args let mergecell displaytext focuscelloffset focusstyle columns ondoubleclick onclick error point rowstyle cellstyle columnstyle selectedrowinfo getrowstyle args height focusstyleget height width focusstyleget width left focusstyleget left top focusstyleget top row pointget column pointget classname cellfocus columncfg columnsget column rowkey field row rowdata selectedrowinfo let ismoney columncfgget ismoney cellprops errtxt gridsupportutilsgeterrortext row field error cellprops key selectedcell classname style width height top left onclick ondoubleclick like", "d": "5/2016"}, {"body": "looks like https error loading properly recommend trying magicreactjsnethtmltojsxminjs finding different source pull", "d": "5/2016"}, {"body": "htmljsxmd references url currently gives permanent redirect leads possible way fix might replace see cors issues edit inspection seeing accesscontrolalloworigin response good cors perspective", "d": "5/2016"}, {"body": "fritzc react nt really add listeners actual dom elements like example adds listeners root uses event delegation capture events example following submit event nt really fire click button synchronously removed form element preventing submit event bubble root though case could easily things handler instead listeners", "d": "5/2016"}, {"body": "react removed use spans around text nodes go away upgrade wo nt back porting change mean time could use rows cells make spans ok use", "d": "5/2016"}, {"body": "active discussions handle binding think general consensus moment drift toward using property initializers lambda functions property standards nt officially approved standard yet nt officially recommended anyway thinking probably wo nt add parallel prop every prop going close issue", "d": "5/2016"}, {"body": "wanted chime saying like see us provide good explanation issue obvious lot people place write possible apis reasons working us keep open nobody gets chance reply come back writeup", "d": "5/2016"}, {"body": "confused property initializers seen decent solution assuming constructor defined burden adding one thisfoo gt dowhatever either case still recreating function per instance nt hard data cost starts matter love able know never worry love way handler question defined prototype ed right value impossible infeasible means state assumed render method would reference containing instance somewhere close", "d": "5/2016"}, {"body": "render method reference containing instance passing function create elements guess theoretically would possible react track reference instance call internally call event handler would demand binding nt pay cost time main concern approach like inconsistent rest js works rest use methods would work maybe works function make former work expectation would likely latter works however would nt cheated made special latter works bind creation everything prebound reference also bind ctor approach popular", "d": "5/2016"}, {"body": "guess theoretically would possible react track reference instance call render internally call event handler handlercall trackedinstance event would demand binding nt pay cost time think even would work correctly consider js class button extends component render return class mybutton extends component handleclick consolelog render return event handler element created inside however think everybody would surprised got instance rendered", "d": "5/2016"}, {"body": "magically treating inside value babel plugin would also cause weird issues even autobinding scope able would different behavior code equivalent js extremely fragile situation basically would mean safely extract variable", "d": "5/2016"}, {"body": "gaearon number places implicitly ing handler set instance whose render method created component fully recognize feature request explore whether couldshould way optin places would make sense", "d": "5/2016"}, {"body": "arackaf suggest api would confusing two names event seem elegant calls", "d": "5/2016"}, {"body": "arackaf also thoughts zpao argument maybe works function make former work expectation would likely latter works however would nt cheated made special latter works bind creation everything prebound reference also bind ctor approach popular", "d": "5/2016"}, {"body": "missed opportunity fixed arrow functions expect classes static initializer proposal would fix issue binding function construction time js class button extends component render return class mybutton extends component handleclick gt notice arrow function binds instance consolelog render return", "d": "5/2016"}, {"body": "gaearon zpao maybe works function settimeout thisothermethod would say leave pipeline react dispatching methods within event handlers stops concern react certainly asking react solve eccentricities works js part charm language want boost react get initial value right handler first dispatched exactly api standpoint sadly sure seems like one disadvantage putting html js react visavis putting js html angular similar", "d": "5/2016"}, {"body": "ran crude rudimentary tests extra function creations costing real life since really care created alternate classes methods one put prototype made inline privileged allowed use crockford terminology using classes anyway creating objects inline methods almost eighth million bumped memory usage mere chrome tried measuring firefox literally could nt figure memory usage dump larger conceivable use cases imagine literally creating google drive spreadsheets many objects functions floating around crude tests seem indicate fine imagine even mobile browsers could handle small load would ever reasonable render much content phone prototype version bumped memory usage zero wycats decorators proposal advancing stage anytime imagine nice simple autobind decorator would best solution still nt feel right functions recreated instance irrational feelings hardly react team problem course amount boilerplate removal always nice reasonable way opt implement would course nice nt appear real consequences reallife scenario nt readily see clean implementations gaearon sebmarkbage gratitude spending much time discussing react community awesome benchmark ran know crude sure tricks happening methods wanted big picture idea things would play", "d": "5/2016"}, {"body": "think accumulated info would hard thread refer question arises future thanks asking", "d": "5/2016"}, {"body": "gaearon maybe solution want use bind everywhere implement available pure vanilla js dom event api made proposal add support feature think actual implementation ok compatible dom api using callback functions agree react team extracting variable odd seems like native dom eventlistener interface created solve sort things using object polymorphic message", "d": "5/2016"}, {"body": "usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow also message contain enough information actionable based said sounds like fabric correctly loaded serverside environment may need add project dependency dynamically request file eval jsvm unfortunately information provided possible determine going wrong either way nt appear related react", "d": "5/2016"}, {"body": "best medium discussions like probably discussreactjsorg use github tracking bugs react core reason going close issue feel free continue discussion thread move discussreactjsorg", "d": "5/2016"}, {"body": "thought move question thought experience nt get answer question like people nt know enough reactinternals", "d": "5/2016"}, {"body": "places community members reactiflux reactcontributors reactiflux reactinternals", "d": "5/2016"}, {"body": "sminutoli benchmarks indicate creating object would faster binding function", "d": "5/2016"}, {"body": "clear problem solving solution related problem assume trying solve mention binding would still need bind want call instance methods maybe referring paying binding cost even function nt called case think like redirect bit discussion already make use event delegation attach single listeners event top level think might tangential obviously understanding clearly please correct made incorrect assumptions", "d": "5/2016"}, {"body": "hi zpao first thanks spending time trying understand proposal trying solve problem support actual dom interface works modern browsers using object implements interface need bind want call instance methods prototype delegation bind thing one various benefits interface lets decide want share one object handle several events reusing contexts lot oop creativity instead simple callback execution uninvertion control another useful thing calling object instead plain function take advantage dynamic updates implementation transparent way play example provided plunk notice changing method binded function remains old copy original function another one chain instead actual instance create instances reuse handle thanks prototype delegation side note see problem adding support making proposal order change actual behaviour using functions callbacks ok would nice option using object well jimfb benchmark guy yet see libraries using good prototypical oop techniques like stampit matter copy function", "d": "5/2016"}, {"body": "duplicate related", "d": "5/2016"}, {"body": "valid characters input field ideally sanitizing value point introduced never ends input still work wonder actually selection bug webkit reporting incorrect values", "d": "5/2016"}, {"body": "scroll earlier errors ones see field redux logger", "d": "5/2016"}, {"body": "first errors using react hot loader hide show side logger reproduce error think error one dependencies sure one postcssautoprefixer reduxform back list guesses edit reverted back weeks get error think os dependency failing", "d": "5/2016"}, {"body": "show one copy react create minimal project reproducing problem", "d": "5/2016"}, {"body": "unmet peer dependency react npm err peer dep missing react required reactaddonscsstransitiongroup npm err peer dep missing react required reactaddonstestutils npm err code packagejson specifies", "d": "5/2016"}, {"body": "ugh breaks peer deps confusing though seem please update packages well make sure contain inside", "d": "5/2016"}, {"body": "okay upgraded packages checked respective folders see contain nt returns still seem getting error", "d": "5/2016"}, {"body": "cool still issue point reduced example would help", "d": "5/2016"}, {"body": "reverted back even finally works major package changes reduxform smaller stuff going keep trying different packages find throwing issue hopefully post back soon solution rare chance someone else similar problem thanks lot help gaearon", "d": "5/2016"}, {"body": "sounds like probably bug react invariant new added released six days ago brotzky provide reproducible test case would super helpful even part larger codebase share guess going super hard isolate example cc spicyj", "d": "5/2016"}, {"body": "yes post something reproduces problem would helpful", "d": "5/2016"}, {"body": "yes updated yesterday may started getting new errors see isolate issue hard track error message get nt break components ones specific view example view uses entire log get start finish", "d": "5/2016"}, {"body": "ive removed component page loads fine continue looking seems original suspicion correct nt playing nicely", "d": "5/2016"}, {"body": "erikras ever seen", "d": "5/2016"}, {"body": "erikras specifically remove everything works expected", "d": "5/2016"}, {"body": "definitely react bug though nothing redux form would wrong repro please share case", "d": "5/2016"}, {"body": "sure react least react sure errors thrown react possible errors thrown correctly said never seen specific batch errors upgrading newest version descriptive errors issue reduxform slightly improper setup causing issues resolve specific errors alter function reduxform container overall using reduxform need get form fields value props recommend using instead approached issue much cleaner less prone issues sorry nt able create example still sure replicate error specific example unfortunately ca nt expose code currently working", "d": "5/2016"}, {"body": "sure react sure errors thrown react possible errors thrown correctly highly unlikely unless code reaching deep internals react possible user trigger error message error message internal debuggingsanitycheck purposes probably bug going need sort repro someone experiencing bug mentioned probably going really hard isolate bug even fullapp repros acceptable case", "d": "5/2016"}, {"body": "anyone else experiencing bug please feel free post like collect much data one possible", "d": "5/2016"}, {"body": "time see weekend", "d": "5/2016"}, {"body": "also saw error yesterday upgraded react day yesterday case use reduxform well except eventually found error triggered line code destructing object like certain rendering cycles weird nt get usual error though happened upgrading react", "d": "5/2016"}, {"body": "realbugger try extract minimal case reproducing", "d": "5/2016"}, {"body": "gaearon able recreate took set everything initially tried reduce application single bug nt work well went go look decent boilerplates overly complicated ended using todo example added upgrading clone repo root go npm install npm start open recreate bug focus example input type example input get errors console also commented line fixes bug everything contained added router app setup probably necessary recreate bug downgrading removes batch errors undefined error stays let know questions", "d": "5/2016"}, {"body": "downgrading react removes batch errors undefined error stays thank much mean see earlier error code invariant", "d": "5/2016"}, {"body": "erikras ever seen", "d": "5/2016"}, {"body": "gaearon yes looks like redux method fails due undefined value also get batch error typing input field", "d": "5/2016"}, {"body": "brotzky asking beginning thread scroll earlier errors ones reason asked code threw eg pretty much expected react gets inconsistent internal state bug react error appear blue appeared another error thrown user code", "d": "5/2016"}, {"body": "damn sorry misunderstanding appears original example previous error like one linked agree probably react bug", "d": "5/2016"}, {"body": "hmm still something like original example afraid unless could error swallowed promise", "d": "5/2016"}, {"body": "got oops mobile closed accident still bit weird error occurred specifically may worth checking error message helpful regular user nt change code te upgrade caused obscure error", "d": "5/2016"}, {"body": "might want look possible invariant see correct numbers even user code throws", "d": "5/2016"}, {"body": "added error previously react nt notice would cause problems see proper error boundaries updates could also help jimfb", "d": "5/2016"}, {"body": "anyone reading search like error seems come improperly destructing variables undefined value could also issue reactredux function specifically error mapping undefined value props reduxform solve issue remove entire components see app would render correctly without turned pretty good strategy hours headaches approach may help isolate issue likely looking passed along assigned somewhere overall react behaving correctly instance overlooked different possible issue good luck", "d": "5/2016"}, {"body": "take one since need get familiar doc site", "d": "5/2016"}, {"body": "kidding impression latest release internal registry cache acting", "d": "5/2016"}, {"body": "vast majority users really reason jump react source code react source code complex enough jumping code going give user meaningful understanding things work feel free continue discussion thread reopen issue thinking matter changes substantially", "d": "5/2016"}, {"body": "pull children elements flatten would nt really make sense flattens nested arrays objects ie becomes something similar", "d": "5/2016"}, {"body": "thanks quick answer syranide feeling missinterpretation part maybe could made clear documentation especially release notes seems bit confusing since actually states takes nested children object returns flat array", "d": "5/2016"}, {"body": "proposing fix", "d": "5/2016"}, {"body": "thanks", "d": "5/2016"}, {"body": "browserplatform info could broken bot someone running modified environment seen super weird errors caused chrome extensions edit afaik never able return null unless overloaded naturally", "d": "5/2016"}, {"body": "able confirm real users came across error bot days gon na release todaytomorrow version passing user infos sentry real users authenticated application iframe loaded chrome extensions messing browser ai nt sure way detect", "d": "5/2016"}, {"body": "guess possibility would great could log value determine native implementation reason overloaded would assume overloaded actually native implementation something odd happening", "d": "5/2016"}, {"body": "also received error first time received error may last time may", "d": "5/2016"}, {"body": "also dealing iframes app", "d": "5/2016"}, {"body": "syranide using iframes capacity", "d": "5/2016"}, {"body": "receiving bug reports would interesting know overloaded ie still native function using polyfills according standard never return null nt see", "d": "5/2016"}, {"body": "receiving error collection system sure root cause", "d": "5/2016"}, {"body": "syranide hit production check native probably know couple days", "d": "5/2016"}, {"body": "andarist oh awesome using nonstandard polyfills aware", "d": "5/2016"}, {"body": "nope everything rather standard babel transforms", "d": "5/2016"}, {"body": "believe duplicate reactperf work production build react fix throw need use development build measurements reproduce development build please provide minimal project showing thanks", "d": "5/2016"}, {"body": "oh second read realize different problem let discuss plans make fixes reactperf", "d": "5/2016"}, {"body": "warning internal error react performance measurement code expect componentdidmount timer stop timer still progress another instance please report bug react looks weird try produce minimal reproducing case bunch tests verify returning works obvious going", "d": "5/2016"}, {"body": "particular run call console call app", "d": "5/2016"}, {"body": "call console run recording nt use nt make visible components return null visible everything works errors make one components visible errors small test removed started working try prepare code reproduce previous version nt problems perf tools", "d": "5/2016"}, {"body": "try prepare code reproduce please previous version nt problems perf tools completely rewritten number reasons issues expected rough edges get fixed thanks helping make better", "d": "5/2016"}, {"body": "discovered issue occurs use materialui dialog component execution path something like link code dialog component monday prepare full demo nt cdn version material make quick demo jsfiddle", "d": "5/2016"}, {"body": "thank", "d": "5/2016"}, {"body": "repository code noticed little difference latest version able use printwasted see table results despite errors logs", "d": "5/2016"}, {"body": "sorry took long nt download page elsewhere say use ensures quoted quoted string granted page needs attention make easier find documented probably link page downloads page", "d": "5/2016"}, {"body": "bug according spec escaping would bug consider url provide browser would translate unless nt first escaped intended bringing seeing problems", "d": "5/2016"}, {"body": "ah see whoever receiving end markup eg browser could something else sticking spec parsing escaped ampersands correctly", "d": "5/2016"}, {"body": "syranide correct would expect ampersands within uri unescaped however query string concerned eg", "d": "5/2016"}, {"body": "pgoldrbx still escaped render click see", "d": "5/2016"}, {"body": "syranide confirmed close anchor gt renders escaped gt clicking behaves desired iframe gt passes params server gt hapi express receive params expected thanks feedback", "d": "5/2016"}, {"body": "probably happens running production build react reactperf works development build need make clear emitting warning instead crashing", "d": "5/2016"}, {"body": "ah yes indeed running perf production mode wanted avoid proptype validation getting way profiling", "d": "5/2016"}, {"body": "allow future possible moment track", "d": "5/2016"}, {"body": "someone wants take make return regardless environment add warnings early returns methods", "d": "5/2016"}, {"body": "gaearon hi try fix", "d": "5/2016"}, {"body": "dang beat", "d": "5/2016"}, {"body": "sashashakun thanks put assignee forget come back please work feel free ask questions", "d": "5/2016"}, {"body": "gaearon great issue looks difficult want best already started work nt deep knowledge react internals questions point add warnings early returns methods reactperf dev false found deprecated methods reactperf simple add thing like beginning method much copypaste may better make separate helper like beginning reactperfjs warning message use need return may one methods reactperf use fixed way add checking first point method also", "d": "5/2016"}, {"body": "may better make separate helper like roundfloat beginning reactperfjs sure sounds good warning message use need return false may think methods exit early without return value like usually anyway methods probably return empty arrays suggest using whatever return type usually without information add dev checking first point method also worth adding log warning return value empty array anyway finally think make sure warn somebody calls around hot function want spam console production", "d": "5/2016"}, {"body": "start work branch reactperfwarningschanges done reactperfjs added reactperfjs added reactperfjs value passed param added reactperfjs added variable alreadywarned set turn warning first one rollback calling reactperfstop done reactdebugtooljs also steps open pr x fork repo create branch added code tested add tests need investigate changed apis update documentation need investigate x ensure test suite passes x make sure code lints done best make sure rules match internal linting guidelines x nt already complete cla looking forward feedback", "d": "5/2016"}, {"body": "suggest let open pr forget look thanks bunch", "d": "5/2016"}, {"body": "note warning noop prod builds", "d": "5/2016"}, {"body": "haha oops realize preferences tackle", "d": "5/2016"}, {"body": "let consoleerror", "d": "5/2016"}, {"body": "ok fix", "d": "5/2016"}, {"body": "div tags support autofocus html spec meaningful content attribute tags specified global attribute seem allows make nonform tags focusable attribute standardized mention made autofocus effect chrome os x autofocus combination present imo react nt go beyond spec ignore autofocus nonform tags currently end user could obtain ref focus mount", "d": "5/2016"}, {"body": "sounds like per spec agree nt want exceed spec sounds like whatever chrome going close feel free continue discussion thread reopen thinking changes substantially", "d": "5/2016"}, {"body": "actually misreading aria spec role states initial focus goes element within dialog later goes detail alert dialog displayed authors set focus active element within alert dialog form edit field ok button thanks discussion", "d": "5/2016"}, {"body": "seeing validateproptypes checktype production build production build minified would even find functions", "d": "5/2016"}, {"body": "yeah pretty sure functions linked called production", "d": "5/2016"}, {"body": "jimfb prevents called production builds", "d": "5/2016"}, {"body": "looking reactelementvalidator functions used production build look matches source see used dev", "d": "5/2016"}, {"body": "thanks looking providing explanation looks like made mistake verifying theory modified react deleted build determine whether made things noticeably faster however produced bundle app accidentally included minified version react dev build instead production build sorry trouble", "d": "5/2016"}, {"body": "happens", "d": "5/2016"}, {"body": "use", "d": "5/2016"}, {"body": "use objectprototypehasownpropertycall config key sounds good would like send pr fix test case", "d": "5/2016"}, {"body": "gaearon sure need know would community want fix support prototypeless objects fail reason support prototypeless objects grin", "d": "5/2016"}, {"body": "support prototypeless objects sure see think support regressed added warning thanks", "d": "5/2016"}, {"body": "fixed", "d": "5/2016"}, {"body": "vonkieffer provide jsfiddle demonstrates issue", "d": "5/2016"}, {"body": "would nt even know begin massive code base tried include thought necessary", "d": "5/2016"}, {"body": "vonkieffer example uses capital setting props nt define code code fragments posted depend application logic outside react allow us easily reproduce issue ca nt reproduce bug jsfiddle probably issue application either way going need reproducible test case demonstrates bug otherwise issue unactionable", "d": "5/2016"}, {"body": "vonkieffer completely clear something react provides custom component import somewhere verified bug component", "d": "5/2016"}, {"body": "select component js import react react import selectcss export function select props let label name value options onchange onblur error touched placeholder optionvalue optiontext style width auto changed function props const styles select display inlineblock width stylewidth wrapper position relative display inlineblock background value fff color value fff width stylewidth select webkitappearance none mozappearance none background none border solid borderradius padding position relative fontfamily open sans sansserif fontweight fontsize width option background fff important color black important arrow width height borderleft borderbottom transform rotate webkittransform rotate position absolute top right return label null placeholder null options optionsmap option index gt return null error error null selectproptypes label reactproptypesstring name reactproptypesstringisrequired options reactproptypesarrayisrequired changed reactproptypesfunc onchange reactproptypesfunc export default select selectcss", "d": "5/2016"}, {"body": "quite issues throughout application ie react component rendering", "d": "5/2016"}, {"body": "vonkieffer code still setting props nt specified issue realistically much going us easily see userland react bug think going need simplified examples using jsfiddles", "d": "5/2016"}, {"body": "fyi fixed formatting comment much smaller example deep app jim said helpful thing would jsfiddle good one start probably use code make sure reproduces ie would even helpful could reduce eg removed styles still happen specific style breaks", "d": "5/2016"}, {"body": "provide simple jsfiddle example demonstrates issue", "d": "5/2016"}, {"body": "jsfiddle work tried reinstall react packages work sorry jimfb", "d": "5/2016"}, {"body": "please provide complete runnable example reproduces", "d": "5/2016"}, {"body": "gaearon private repo npm install npm start gt errors console", "d": "5/2016"}, {"body": "thanks makes sense context forgot portal use case people right inside lifecycle method thus making timers stack probably keep warning push timers running flush starts onto stack pop flush ends", "d": "5/2016"}, {"body": "eeh really nonissue target always nonnull submit pr remove null check since little confusing extra check really would nt hurt anything", "d": "5/2016"}, {"body": "hi thanks reporting publish minimal project reproducing issue", "d": "5/2016"}, {"body": "gaearon team investigated issue little custom hooks debugtool upgrading react onunmountcomponent hook passing integer handler parameter instead component instance javascript const eventhandlers onunmountcomponent internalinstance consolelog instance internalinstance typeof internalinstance reactinstrumentationdebugtooladddevtool eventhandlers console output", "d": "5/2016"}, {"body": "sounds like userland issue devtool never publicdocumented api still iterating api guarantee stability across even patch releases going close unless able reproduce standard devtools regards specific point numbers instead instances intentional internal instances intended internal react third party tools using reference identity transitioned using ids order enforce actually exposing internal instances feel free continue discussion thread reopen turns actual bug core", "d": "5/2016"}, {"body": "jimfb thanks response debugid guaranteed unique consistent across renders words rerender different view could another component get debugid also rerender page would component always get id", "d": "5/2016"}, {"body": "words rerender different view could another component get debugid unique single session assigned ever incrementing counter reused also rerender page would component always get id possible ids change guarantees creation order components", "d": "5/2016"}, {"body": "sounds like debugid useless want match instance component two different renders instance built unique persistent key possibility gone also made onunmountcomponent hook useless also side note even though public api change api able work multiple devtools aka reactinstrumentationdebugtooladddevtool eventhandlers changing api please take consideration uses devtools use cases react devtools used api timetravel inner component state reduxdevtools", "d": "5/2016"}, {"body": "instance built unique persistent key possibility gone build persistent key based internal instance clear also made onunmountcomponent hook useless also side note even though public api change api able work multiple devtools aka reactinstrumentationdebugtooladddevtool eventhandlers changing api please take consideration uses devtools use cases react devtools encourage experimentation api mere fact allows adding several devtools mean change said public api make useful need iterate fast declaring public letting people rely make changes reason exposing internal instances dangerous blocks work new reconciler big goal react year effectively creating fork react inside react logic written different way reconciliation done multiple passes means internal structures likely change anyway know internal instances might even get created cases know unnecessary long chain tools including comes depend internal structures transition incremental reconciler painful even react devtools currently reaches internal instances problematic maintain module tries make sense break soon change private field names skip instance creation cases needed add api would instanceagnostic soon possible exposes events like etc lets us keep tooling decoupled reconciler gradually transitioning react devtools use new devtool api well used api timetravel inner component state reduxdevtools sounds cool help understand need internal instances generate unique key guarantee indeed unique across refreshes unique key across refreshes help implement time travel thanks", "d": "5/2016"}, {"body": "gaearon thanks detailed response need internal instances generate unique key guarantee indeed unique across refreshes unique key across refreshes help implement time travel since rootnodeid deprecated unique component id need internal instances generate unique keys actually needed getting rootnodeid guarantee persistent unique enough need generating key based component name location component tree yes iterate tree possibly get quite long key works devtools short long answer need unique persistent key across renders order able identify right component inject cached component state using reduxdevtools without redux created special adapter interface reduxdevtools scenario map generated unique component key key innerstate object value whenever component mounts setstate called store new state matching component key also another map updates onmountunmount holds current component instance unique key ever pass state object reduxdevtools also pass snapshot current innerstate map state injecting thunk later injection javascript const createstatesinjectingthunk states gt const clonedstates new map states innerstates map return gt clonedstatesforeach state key gt const currentcomponentinstance componentkeymapget key component instance map currentcomponentinstance null amp amp currentcomponentinstanceinstance currentcomponentinstanceinstancestate state use unique key manage component instance map match bw state current component instance unclear please let know revise", "d": "5/2016"}, {"body": "guarantee persistent unique enough need generating key based component name location component tree yes iterate tree possibly get quite long key works devtools work check gets added automatically tracks parentchild relationships write something like", "d": "5/2016"}, {"body": "thank much time id returned getparentid id consistent across refreshes", "d": "5/2016"}, {"body": "nt guarantees using id using position tree assume mean consistent refreshes give try", "d": "5/2016"}, {"body": "gaearon building unique key using function looks good problem nt instance order get component state mount order inject state later way get instance debugid", "d": "5/2016"}, {"body": "omerts moment however interested implemented needed react devtools would like send pr implementing need add corresponding apis setting props state devtools let discuss separately", "d": "5/2016"}, {"body": "work pr next days", "d": "5/2016"}, {"body": "sounds reasonable going fire sfcs becomes disassociated", "d": "5/2016"}, {"body": "would called dom components react devtools would use reactcomponenttreedevtool establish closest dom component host node", "d": "5/2016"}, {"body": "pass elements component returns aka element passed actually fixing automatically fix problem regardless probably nt want change behavior independently let close", "d": "5/2016"}, {"body": "think probably reactdom got bumped whereas react nt yet published npm edit published", "d": "5/2016"}, {"body": "resolved", "d": "5/2016"}, {"body": "sorry small mistake publishing working", "d": "5/2016"}, {"body": "recommend switch npm much less annoying warning look error closely see fails half react packages another half please use single version problem go away", "d": "5/2016"}, {"body": "jquense ideas", "d": "5/2016"}, {"body": "yes afaik although discussion usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "5/2016"}, {"body": "fwiw source code github nt contain nodeenv checks part transform step shipping npm look dev code get transformed", "d": "5/2016"}, {"body": "wrapped want save object allocation allocation array object single child always using reactchildren utilities transparent", "d": "5/2016"}, {"body": "personally agree confusing better name decision made use probably add warning people nt confused", "d": "5/2016"}, {"body": "ok", "d": "5/2016"}, {"body": "leaving issue open track adding warning", "d": "5/2016"}, {"body": "let wait merges since new changes might break", "d": "5/2016"}, {"body": "ready someone work", "d": "5/2016"}, {"body": "natenorberg far see take", "d": "5/2016"}, {"body": "cool beans take look", "d": "5/2016"}, {"body": "ok opened let know better way", "d": "5/2016"}, {"body": "fixed", "d": "5/2016"}, {"body": "related think anyway simply element emitting event replaced messes events could wrong iirc also weird browserspec thing involved behavior saying", "d": "5/2016"}, {"body": "ask question stackoverflowcom try keep area actual bugs react help share code using site like people wo nt want download file uploaded feel free leave link question stackoverflow", "d": "5/2016"}, {"body": "indeed please use stackoverflow discussion forums questions use issue tracker bugs feature requests feel free leave link questions thread thank", "d": "5/2016"}, {"body": "cc ide pretty sure board", "d": "5/2016"}, {"body": "zpao thanks works rn tangent assuming follows semver fully compatible everyone depending need multiple releases necessary bumping major version", "d": "5/2016"}, {"body": "need add fixes memory leak introduced earlier", "d": "5/2016"}, {"body": "alright going ship additional fix even though ready really unlikely following pattern parallel patch amp minor point starting ide yup always risk especially since semver gets hard define around edges considering option provide people want smaller set changes", "d": "5/2016"}, {"body": "another fix needs get", "d": "5/2016"}, {"body": "attempt reduce enough us determine might wrong least please share happening since problem occurs", "d": "5/2016"}, {"body": "zpao thanks reply updated code please check", "d": "5/2016"}, {"body": "thanks still nt enough go need reduced test case runnable example using jsfiddle similar would helpful", "d": "5/2016"}, {"body": "lovedota applying form progressive enhancement dom would mess node hierarchies react expect", "d": "5/2016"}, {"body": "sebmarkbage thanks opening issue", "d": "5/2016"}, {"body": "amp spec", "d": "5/2016"}, {"body": "sebmarkbage looks like wo nt able use react server rendering attributes well need included tried amp validator complains attribute update turns workaround nt working nt applied react module actually loaded dependency project manage get following work", "d": "5/2016"}, {"body": "also move", "d": "5/2016"}, {"body": "yea gaearon plan new perf tool api used since tied particular renderer addons", "d": "5/2016"}, {"body": "nt quite understand asking user point view used way reactaddonsperf create third party renderer need emit events tell going nt see tied rn dom renderers", "d": "5/2016"}, {"body": "gaearon currently requires wo nt file live however works dom react native require", "d": "5/2016"}, {"body": "still quite understand want affected addons", "d": "5/2016"}, {"body": "currently uses instance shared modules uses runtime dependency injection determine environment actually gets used idea copy modules one except isomorphic ones way multiple renderers coexist npm importantly versioned independently means two copies modules npm one renderer alternative would keep debug tool isomorphic renderers register somehow addons affected depend things folder remain shared", "d": "5/2016"}, {"body": "understand correctly concerned changes eg adding new events force us release isomorphic often force us keep versioned closely together would preferred otherwise", "d": "5/2016"}, {"body": "intent also get away current dependency injection would allow multiple independent renderers coexist runtime environment well possible upcoming scenario reactdom reactart reactdom using current reconciler art using incremental reconciler", "d": "5/2016"}, {"body": "iamdustan yes imminent upcoming scenario", "d": "5/2016"}, {"body": "gaearon concerned events making sense across renderers guess already tried make generic maybe unfounded concerned much isomorphic package supposed small also concerned stateful modules isomorphic package would nice let direct dependency instead peerdependency also practical issues difficult calls nt nested inside two different renderers different work stateful module think least per renderer level like one tool many could connect number renderers hook could live package need way connect ui based tools chrome react devtools used global variable coordinate way nt matter npm nests packages nt matter module loads first perf tool renderer sure solve programmatic api though one solution would expose reactinstrumentation module renderer register get paired perf tool comfortable remaining peerdependency could every renderer register instrumentation would call perf tool summary renderers ever registered", "d": "5/2016"}, {"body": "offering problems solutions eager hear proposals btw design goal allow third parties something like would full access custom profiling etc", "d": "5/2016"}, {"body": "thanks understand better created track share thoughts next week", "d": "5/2016"}, {"body": "expected behaviour see mdn form onsubmit event handler example onsubmit return false triggered invoking method geckobased applications using event handler calling think api method something different", "d": "5/2016"}, {"body": "aha gotcha button example go alternate approach", "d": "5/2016"}, {"body": "renderers reactdom reactdomserver reactnative reactart plan regarding mapping haste nodemodules build step correct", "d": "5/2016"}, {"body": "renderers still dependent package right version independently without publish react words wanted theoretically stick dep might still want version least initially would help immediately case think lasts longer term particularly around current owner know talked pulling well iamdustin made effort", "d": "5/2016"}, {"body": "yea plan along current owner part peerdependency work pulled nt necessarily need peerdependency anymore could support multiple versions react critical reactart wo nt work standalone yet depend reactdom hopefully cut new reconciler", "d": "5/2016"}, {"body": "plan regarding mapping haste nodemodules build step correct right eventually cut haste part entirely yea plan along cool making sure nt variation", "d": "5/2016"}, {"body": "cool making sure nt variation variation nt properly remove unused files packages still nt flat builds uglier subset guess", "d": "5/2016"}, {"body": "already needing track requires isomorphic think skip copying files renderer packages pretty easily subsequently inverse edit ultimately file exclusion nt matter since wo nt referenced packages maybe makes sense exclusion shortterm addons packages might get bit", "d": "5/2016"}, {"body": "yeah agree goal nt need go way though simplest nearterm solution looks copying native renderer files rn want update leaving react dom alone solves versioning problems also solves internal problem rn devs finding frustrating work rn renderer files package rn depend isomorphic bits", "d": "5/2016"}, {"body": "would delay getting rid providesmodule flat bundles build step might necessitate keeping specialized flow configuration since flow special case nodemodules whatever nonidiomatic thing chasing support instead addressing core issue fine feel like never permanently fix anything anymore minimal viable thing fix next thing next week may pm ben alpert notifications githubcom wrote yeah agree goal nt need go way though simplest nearterm solution looks copying native renderer files rn want update leaving react dom alone solves versioning problems also solves internal problem rn devs finding frustrating work rn renderer files react package rn depend react isomorphic bits receiving authored thread reply email directly view github", "d": "5/2016"}, {"body": "make build script make packages time since currently line thing copy result rn repo seems orthogonal alternative put sync build script rn repo still build way nt address use cases guess nt see building harder one time rnonly another time later", "d": "5/2016"}, {"body": "nothing actionable test case code close specific stress test work talk much vague comment performance", "d": "5/2016"}, {"body": "works though looked implementation assume difference using js dom api set rather html attribute quote though making guess result gets selected different means attribute important", "d": "5/2016"}, {"body": "came attention broke ci build project working point use capybara assert given option selected like nt really care perhaps breaks css way ca nt think another way programatically determine selected option bit problem webdrivers like capybara scrapers", "d": "5/2016"}, {"body": "able access indeed important", "d": "5/2016"}, {"body": "ca nt think another way programatically determine selected option use dom api able access option selected indeed important still read dom api attribute", "d": "5/2016"}, {"body": "able access dom elements via selectors including attributes normal way external tools example extensions external scripts enhance page onboarding example may use kind selector without know fact page rendered react kind specificity btw cents", "d": "5/2016"}, {"body": "able access dom elements via selectors including attributes normal way using ui library abstract away dom handling library opinion apply changes opinion may vary different versions well whether react uses attributes properties implementation detail react rely like put attribute selected option explicitly put react mess attributes set explicitly please expect emit particular attributes things like parent close issue reason please feel free continue discussion though thanks explaining reasoning hope answer provides viable solution", "d": "5/2016"}, {"body": "hi use react issue tracker bugs react describe sounds like usage question redux ask ask usage questions stackoverflow instead please feel free leave link comment cheers", "d": "5/2016"}, {"body": "question might find helpful", "d": "5/2016"}, {"body": "zpao may worth remembering implementation excessively optimized performance may good idea export whatever opposed simplersmaller generic implementations", "d": "5/2016"}, {"body": "really meant super intelligent cover cases problem calling function identity also problem event handlers callback refs nt intent support box really muddies api add things like add context state well want something like feel free fork shallowcompare another solution write code differently remember creating newly bound function vm needs track scope every render pass use arrow functions like something like would maintain identity would work fine", "d": "5/2016"}, {"body": "thanks feedback understand considerations", "d": "5/2016"}, {"body": "must use note camelcase currently bug warning telling firing sorry", "d": "5/2016"}, {"body": "zpao thanks", "d": "5/2016"}, {"body": "also fails npm node amp node", "d": "5/2016"}, {"body": "looks like babelrc file present master oddity packagejson explicitly requiring react", "d": "5/2016"}, {"body": "indeed appears missing cc zpao", "d": "5/2016"}, {"body": "fixed go whatever release next sorry oddity packagejson explicitly requiring react think using caret ranges get latest one always update major releases might miss updating file releases", "d": "5/2016"}, {"body": "bug think reacting set without considering radioinput uses differently", "d": "5/2016"}, {"body": "related issue getting warning switching uncontrolled component controlled one code add useless prop warning think warning code acknowledge property checkbox indicate whether controlled rather prop", "d": "5/2016"}, {"body": "cc zpao spicyj sounds like want get fixed", "d": "5/2016"}, {"body": "yea saw yesterday", "d": "5/2016"}, {"body": "bug bit annoying one thing many different input types consider browsers seem support types spec indicates instance mozilla appears support month per particular case radio button complicated fact ca nt determine controlledness group looking single input need look inputs prop within form group yuck bad ca nt ban uncontrolled components would make life much easier p", "d": "5/2016"}, {"body": "bug bit annoying one thing many different input types consider browsers seem support types spec indicates instance mozilla appears support month per jimfb sure following far understand concerned checking whether testing instead seems tested regardless right types nt really matter rely particular case radio button complicated fact ca nt determine controlledness group looking single input need look inputs name prop within form group yuck mixing controlled uncontrolled radios problem entirely separate problem imho warning simply switching individual input controlled uncontrolled ie go null nonnull vice versa individual component bad ca nt ban uncontrolled components would make life much easier p still opinion entirely separate components", "d": "5/2016"}, {"body": "im experiencing also clicking radio shows error person", "d": "5/2016"}, {"body": "syranide think bit complicated think would implement warnings switching controlled uncontrolled radio buttons radio inputs within form group attribute specified whole group controlled controlledness ca nt tracked pernode basis radio buttons", "d": "5/2016"}, {"body": "let scope handling case warning incorrectly worry making perfect time", "d": "5/2016"}, {"body": "zpao talking warning firing incorrectly often radio buttons want quick fix think need disable warning radio buttons nt think solution radio buttons wo nt occasionally fire spurious warnings correct fix require tracking radio inputs within form group", "d": "5/2016"}, {"body": "test case initial report warning needing track across radios case incorrectly looking radios checkboxes right falling back using type determine looking talking real problem tangential one", "d": "5/2016"}, {"body": "zpao right uncontrolled radio group required set defaultchecked elements controlled radio group allowed set defaultchecked controlled element reset button means unless smarter logic check wrong fire spurious warnings might well remove check radio buttons point", "d": "5/2016"}, {"body": "syranide think bit complicated think would implement warnings switching controlled uncontrolled radio buttons radio inputs within form group checked attribute specified whole group controlled controlledness ca nt tracked pernode basis radio buttons jimfb huh nt use radiobuttons like text inputs null uncontrolled nonnull controlled depending truthiness checked right nt check radios scenario check changes null nonnull vice versa ie changing controlledness missing", "d": "5/2016"}, {"body": "syranide required specify radio button checked controlled component today answer maybe couldshould change much wider discussion almost certainly within scope quick fix zpao wanted example legal immutable controlled form checked obviously contrived example imagine user list elements sets checked attribute one checked result controlledness input defined entire group within form lack attribute insufficient know particular input element controlled case controlledness first input determined controlledness second warning tricky radio buttons", "d": "5/2016"}, {"body": "syranide required specify checked false radio button checked controlled component today answer jimfb actually answer yes sense contrived example still also would consider weird someone dynamic controlled component explicitly set doubt find anyone even additionally warning basically intended shine light bad behavior really sure would consider problem anyway example legal immutable controlled form works sure would agree good idea regardless would nt problem since checked provided property others almost certain static radio buttons dynamic would never change controlledness warn anyway use pattern create static radio buttons seems like case winwin wrongbadly get warning one right get warning perhaps missed something nt see case involving good practice would actually cause see warning bad ones", "d": "5/2016"}, {"body": "withdraw earlier comment spec indicates required attribute checkboxes even nt plan use", "d": "5/2016"}, {"body": "correction mdn indicates required attribute spec nt actually seem say sure citation mdn seems incorrect personally rather omit property checkboxes seems perfectly sane browser default something necessary", "d": "5/2016"}, {"body": "actually answer yes sense contrived example still wow sucks terrible thing seen month give credit demonstrates problem specifying checked prop controlled component values false also would consider weird someone controlled component explicitly set checked doubt find anyone even additionally warning basically intended shine light bad behavior really sure would consider problem anyway sure weird pretty intuitivenatural loop data set iff data says value checked assuming nt using jsx even convinced bad behavior except given fiddle anyway suppose fine banning behavior think work edge case worry happens controlled checkbox turns controlled text input easy us get right need test making change", "d": "5/2016"}, {"body": "even convinced bad behavior except given fiddle posterity ca nt realistically get away nullness determining controlledness current design given null effectively means uncontrolled would say wrong mix happens rely pattern long one always checked guaranteed true may values used correspond radio necessarily error wrong way radio would still checked edge case worry happens controlled checkbox turns controlled text input easy us get right need test making change imho think pr would consider remounting component think everyone agreed never ended merged something like happens would nt even worry virtually error sense change type input today broken edgecases afaik", "d": "5/2016"}, {"body": "problem code click checkbox got warning warning questionheader changing uncontrolled input type checkbox controlled", "d": "5/2016"}, {"body": "lijinyao means always rather example make sure always boolean problem go away", "d": "5/2016"}, {"body": "entirely sure requested highly unlikely going change jsx syntax definition since already implemented many places babel typescript editors etc reason going close always reopen thinking matter changes however regards specific feature request elaborate trying already pass tags expression demonstrated", "d": "5/2016"}, {"body": "jimfb mean want render component styles jsx syntax css js like html js brakcets allowed render style tag component know good idea good realisation may reactjs realised feature render css js think hard current jsx core example", "d": "5/2016"}, {"body": "working way represent styles javascript still work progress however solution likely change expression brackets current recommendation representing styles", "d": "5/2016"}, {"body": "think using must use classes syntax valid javascript class extends reactcomponent render return null vs var reactcreateclass render function return null edit nt forget member functions edit said wrong please see gaearon answer", "d": "5/2016"}, {"body": "ggalansmithee believe correct object literal shorthand notation allows superchangme use issue tracker bugs feature requests react asking seems like usage question would appropriate stackoverflow error says createclass class specification must implement render method means one calls misses function specification object since post complete code say exactly see error like click small arrow next stack time error thrown third line show code call click find component missing method hope helps closing unlikely bug react please feel free continue discussion", "d": "5/2016"}, {"body": "ggalansmithee believe correct object literal shorthand notation allows render ah bad thanks informing", "d": "5/2016"}, {"body": "public api least yet open adding though public api would like send pr", "d": "5/2016"}, {"body": "yeah send pr method check currently exposed keep track state separately", "d": "5/2016"}, {"body": "yeah add real state", "d": "5/2016"}, {"body": "pr branch", "d": "5/2016"}, {"body": "yep", "d": "5/2016"}, {"body": "opened pr", "d": "5/2016"}, {"body": "shogunsea creates react element render html tag creates react element render react component correct super obvious admit edit react renders react elements react element may reference html tag react component", "d": "5/2016"}, {"body": "goal speak higher level try avoid intermediate element representation actually relevant understanding agree bit confusing generally people know enough skip past section think raising point made clear know enough", "d": "5/2016"}, {"body": "class look like importexport set correctly classes function never object", "d": "5/2016"}, {"body": "ping", "d": "5/2016"}, {"body": "install react using npm include able access download directly downloads page download", "d": "5/2016"}, {"body": "stated part development addons bundle thanks commenting ajgreenb", "d": "5/2016"}, {"body": "hckrmoon create simple jsfiddle demonstrates problem also list device type iosandroid browser version used", "d": "5/2016"}, {"body": "result css simply ignoring trying set invalid value preferably react would warn detected afaik something want dev realistic indirectly fixed react switches setting style via big", "d": "5/2016"}, {"body": "related potentially fixable", "d": "5/2016"}, {"body": "exactly suggesting react support attribute react supports styles", "d": "5/2016"}, {"body": "zpao sorry updated", "d": "5/2016"}, {"body": "react specific expected behaviour html property note changing value css display property element hidden attribute overrides behavior instance elements styled display flex displayed despite hidden attribute presence please also note warning page hidden attribute must used hide content could legitimately shown another presentation example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance screen readers react setting hidden property html magic involved property irrelevant usecase probably well trying display", "d": "5/2016"}, {"body": "thanks clarifying twoeo mijamo correctly notes nt react issue class overriding browserdefault property", "d": "5/2016"}, {"body": "way find test case reproducing would really helpful", "d": "5/2016"}, {"body": "happens pretty big app always relatively often hard isolate something simple could pinpoint iteration operationsforeach operation variable value operation instanceid undefined reproduce figure app big open sourced available", "d": "5/2016"}, {"body": "probably happens composite switches rendering rendering dom tag", "d": "5/2016"}, {"body": "fixed big thanks reporting", "d": "5/2016"}, {"body": "likely duplicate fixed master next react release soon", "d": "5/2016"}, {"body": "took brief look far tell nt react issue looks like maybe something wrong locale fetching code since page says network inspector safari seems show request itjson none enjson sure would differ facebook inapp browser safari though keep trouble trying reduce minimal repro could help maybe even alert debugging similar able post link facebook local dev server privacy test locally get small repro case still ca nt figure post back take look", "d": "5/2016"}, {"body": "spicyj hello found problem apparently facebook inapp browser sends user agent different safari intl polyfilled want give try open ios safari inapp browser making pr polyfilljs small problem detail would say ua sent inapp browser formatted way ios android browser android inapp browser correctly interpreted chrome ios one get identified facebook even leading ua recognizing tools want give try would nice could get facebookchrome facebooksafari chrome safari expert matter two cents said issue solved matter usual internet conventionnotconvention stuff thanks assistance v", "d": "5/2016"}, {"body": "could always recommend poking dependencies change peer dependency instead way also compatible prereleases would least nonproblem eventually npm fixes real doubt anyone releasing react would picked anyone updating stable nt", "d": "5/2016"}, {"body": "could always recommend poking dependencies change peer dependency instead way also compatible prereleases alas help case matches example way semver specify major version prereleases afaik", "d": "5/2016"}, {"body": "gaearon oh wow bad right sigh", "d": "5/2016"}, {"body": "npm recommendation use disttags instead prerelease versions frankly think nt help lot sometimes want publish unstable version like wo nt supported yet want see works wild next best alternative publish nonprerelease version like untag latest unpublish deprecate ends buggy anyway situation npm changes peerdep validation seems unlikely new npm client comes along supports desired behavior", "d": "5/2016"}, {"body": "next best alternative publish nonprerelease version like untag latest unpublish deprecate ends buggy ide screws anyone depending common practice npm recommendation use disttags instead prerelease versions frankly think nt help lot sometimes want publish unstable version like wo nt supported yet want see works wild understanding nt perfect nt see viable solution npm going back getting things right ways around also violate semver may silently ignore unintended version conflicts goes entire point semver teh first place seems obvious least npm allow force install specific module version peril force dependencies accept perhaps missing something", "d": "5/2016"}, {"body": "screw anyone using disttag makes opt way get explicitly asking specific version", "d": "5/2016"}, {"body": "screw anyone using disttag makes opt way get explicitly asking specific version perhaps nt understand well enough saying depending would match would still satisfy peer dependencies entire point", "d": "5/2016"}, {"body": "knew would next superseded could make something like nt want go route publish real versions burn versions way quickly attempt make things work rn disttags really help need deps use right ca nt break semantics eg publish nextrn move point new major version time comes", "d": "5/2016"}, {"body": "disttags really help need deps use right ca nt break semantics eg publish nextrn move point new major version time comes modules include tag version string definition also announce support latest version react even module nt maintained since forever obviously nt seems equally problematic different way", "d": "5/2016"}, {"body": "seems equally problematic different way perhaps equally definitely still problem could probably guarantees something like much like however would nt ever point past people would republish support new major version probably want anyway think something similar without preprelease bits make harder shipping client different shipping library nt think publishing pile unobviously unsupported versions right thing still nothing game though", "d": "5/2016"}, {"body": "saying depending would match whatever whatever would still satisfy peer dependencies entire point syranide exactly removing latest disttag achieves modules include tag version string disttags separate version strings metadata npmjsorg control works zpao problem npm needs real versions unless every package maintainer peerdependencies adds obviously unsustainable disttags help let us publish real versions making optin full bugs ok definition ok way could get packagejson explicitly asked anyone asking get solution root cause npm fix issue thought bit think npm current semver behavior peerdeps wrong either block prerelease versions everything real version someone needs come along write npm client replacement wink wink happens next best solution think reactnative packages use react depend prerelease versions", "d": "5/2016"}, {"body": "nt philosophically agree shipping seemingly stable versions react intended us try make rn work need publish times get right help understand scope packages rn depends ships issue people building apps using rn github latter propose nt care published versions rn point released versions react maybe goes rcs well plan react side ship alphas rn get things quickly possible shipping alpha stable release update rn final version never uses alpha cc facebookreactcore since talking perhaps discussions around nt part", "d": "5/2016"}, {"body": "nt philosophically agree shipping seemingly stable versions react intended us try make rn work need publish times get right fwiw philosophically npm current behavior issue packages rn depends ships issue people building apps using rn github latter potentially including rcs going sometime friday monday plan react side ship alphas rn get things quickly possible totally agree plan makes lot sense npm overly strict peerdep validation causes issues comprehensive testing react rn reactredux example fix core issue need npm fix upstream closed though alternative npm client supplant npm", "d": "5/2016"}, {"body": "latter potentially including rcs many people sure much actually care go way support small number people building arbitrary points master maybe change modus operandi rcs though", "d": "5/2016"}, {"body": "lot though awhile back almost everyone something serious rn using fork master anyway understandably want wait publish live really npm peerdeps making things issue", "d": "5/2016"}, {"body": "let live tiny bit longer unbearable step way help make work really muddies process stable branch publicize releases top philosophical reservations bit figure disttag alphas doable mean time want pursue", "d": "5/2016"}, {"body": "let close see anything actionable side decided speed release cadence help things bit", "d": "5/2016"}, {"body": "also", "d": "5/2016"}, {"body": "approved related prs created new files far saw super confused", "d": "5/2016"}, {"body": "cc zpao ideas happened", "d": "5/2016"}, {"body": "cc dotu future permalinks need unique", "d": "5/2016"}, {"body": "showing chinese atm many pages still showing russian", "d": "5/2016"}, {"body": "travis taking lot time run finished two minutes ago cmdr see pages english", "d": "5/2016"}, {"body": "browser freezes completely blocking user interaction second button click issue first noticed react click svg sprites nt working", "d": "5/2016"}, {"body": "actually related spriting related click events fiddle break plain js implementation basically thing", "d": "5/2016"}, {"body": "zpao nice point actually freezes also plain js implementation either click sometimes faster react happens even first click also smaller svg sprite make difference", "d": "5/2016"}, {"body": "nt actually changed way way operate dom difference seeing longer generate html initial render use code path would use updates assume looking devtools make bit harder really see true values parsing style attribute vs setting result visually setting property gets parsed displayed extra quotes recreate case nt work specify browser took clippath example mdn tried reproduce appears working fine firefox nt seem working chrome also nt work take plain html example either", "d": "5/2016"}, {"body": "seeing problem chrome interesting component rendering svg showing ticking realtime timeseries data although initial render uses innerhtml react subsequently updated many times renders fine try create test sample works demonstrate effect", "d": "5/2016"}, {"body": "run issue trying use clippath url chrome upgrading fiddle works fine firefox seeing different bug application clipped svg elements gone entirely firefox try create test example next couple days replicate", "d": "5/2016"}, {"body": "confirmed really weird trying reproduce outside react ca nt really sure could causing", "d": "5/2016"}, {"body": "yet another bug automatically fixed demo without fix demo fix please get pr reviewedmerged cc facebookreactcore", "d": "5/2016"}, {"body": "set key instead updated fiddle react guarantee keyed children recreated read documentation react reconciles keyed children ensure child reordered instead clobbered keyed child still exists destroyed instead reused keyed child removed", "d": "5/2016"}, {"body": "usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "5/2016"}, {"body": "jamesblight nt fully solve problem embeds indices maintained recreated usage question rather bug react core sure bug per se curious react treats keyed children know documentation says children reordered destroyed case keys neither added removed reordered seems like sensible behavior would swap position relevant nodes dom", "d": "5/2016"}, {"body": "nt problem react moving iframe dom cause reload", "d": "5/2016"}, {"body": "might related", "d": "5/2016"}, {"body": "jamesblight wow thanks finding example linked accepted answer duplicates seeing exactly means react behaving expected", "d": "5/2016"}, {"body": "react rejecting anything browser rejecting invalid css single double quotes special characters css use part value without encoding one way another", "d": "5/2016"}, {"body": "actionnick perhaps could warn situations give exact style object setting", "d": "5/2016"}, {"body": "jimfb would require parsing css though something want", "d": "5/2016"}, {"body": "syranide something want production code path might worth dev mode allows us give good warnings style failures might otherwise difficult debug", "d": "5/2016"}, {"body": "also little curious see exactly went wrong better understand going user mind nt work expected", "d": "5/2016"}, {"body": "jimfb something want production code path might worth dev mode allows us give good warnings style failures might otherwise difficult debug bigger issue xss ask assume lack encoding likely reason people would bump unlikely warning would ever help late really imho teachinglack understanding something need proactive really impact saying nt worth make sense validate css one way another would beneficial perf issue cherrypicking easy detect cases able test others seems like worms", "d": "5/2016"}, {"body": "bigger issue xss ask assume lack encoding likely reason people would bump unlikely warning would ever help late seems like even reason warn increase chances someone sees problem digs cherrypicking easy detect cases able test others seems like worms idk pragmatic view create helpful warnings whenever nt get hung fact wontca nt catch every possible conceivable bug", "d": "5/2016"}, {"body": "command nodejs sometimes installed instead due package naming conflict info react bug closing", "d": "5/2016"}, {"body": "sure going componentdidupdate could use reactcsstransitiongroup render avoid using lifecycle hooks set key thispropschildren unique path render", "d": "5/2016"}, {"body": "please provide fiddle demonstrating issue", "d": "5/2016"}, {"body": "intend refer variable string main ambiguity regards intent would slightly suboptimal also makes parsing slightly difficultcomplex reasons think unlikely make change however feel free continue discussion thread always reopen thinking changes substantially", "d": "5/2016"}, {"body": "case feature suggestions jsx would better placed", "d": "5/2016"}, {"body": "oh nativeevent sorry", "d": "5/2016"}, {"body": "zpao syranide spicyj something want support looks like status candidate recommendation supported couple browsers", "d": "5/2016"}, {"body": "sounds like firefox chrome edge support might well though nt know worth polyfilling", "d": "5/2016"}, {"body": "jimfb spicyj guys want add supported browsers polyfill well", "d": "5/2016"}, {"body": "add something synthetic event object needs available browsers", "d": "5/2016"}, {"body": "synthetic event system way access previous instance event since difference current last value possibly tracked something like", "d": "5/2016"}, {"body": "always bit weary polyfilling things require rather nontrivial logic opposed interpolating data case point assume would required permanent global mouse move listener tracks last xy value feels bad edit lot fuss get rid viewportmetrics listener potential issues event stopped event order mousemove unnecessary global mouse move listener etc", "d": "5/2016"}, {"body": "calculates difference last two events nt seem complicated keep track sure might considering corner casesgotchas pr", "d": "5/2016"}, {"body": "using component instances escape hatch anyway recommended pattern nt want encourage usage providing helper functions already get reference instance attaching ref root node mount component instance could attach container dom node anything else like eg save somewhere else point additional nt actually allow anything could nt prior function compelling reason increase api surface area adding functions hope makes sense going close since probably something want add however feel free continue discussion thread reopen thinking matter changes substantially", "d": "5/2016"}, {"body": "jsfiddle demonstrates issue", "d": "5/2016"}, {"body": "also like submit pr something probably want support react", "d": "5/2016"}, {"body": "issues used track issues react library usage questions like asked stack overflow reactiflux", "d": "5/2016"}, {"body": "thanks iamdustan", "d": "5/2016"}, {"body": "nt understand defined complete example point complete example", "d": "5/2016"}, {"body": "may happen use variable section callback refs nt depending anything section", "d": "5/2016"}, {"body": "confusion", "d": "5/2016"}, {"body": "actually looked page nt even using variable name previous section refs section uses complete example uses", "d": "5/2016"}, {"body": "mean clear defined maybe magic line making hard read", "d": "5/2016"}, {"body": "expando property pretty standard javascript", "d": "5/2016"}, {"body": "maybe magic line making hard read add context think jimfb means pattern really specific equivalent much different patterns like prevalent code many libraries pass callback writes javascript people often declare initial empty values fields set asynchronously refs set asynchronously technically could put somewhere really make difference therefore would prefer leave", "d": "5/2016"}, {"body": "hmm ca nt repro contained case might due polyfill whenhow gets loaded get warning ca nt find iterator function object look fn since pretty particular case might helpful try repro outside jsfiddle using babel right probably different maybe standalone html amp js file amp shared gist", "d": "5/2016"}, {"body": "okay thanks tip try tonight thu may paul shannessy notifications githubcom wrote hmm ca nt repro contained case might due polyfill whenhow gets loaded get warning cant find iterator function object look fn since pretty particular case might helpful try repro outside jsfiddle using babel right probably different maybe standalone html amp js file amp shared gist receiving authored thread reply email directly view github", "d": "5/2016"}, {"body": "turns add webpack entry point instead inside entry point think using provideplugin webpack either way fixed problem react sorry p", "d": "5/2016"}, {"body": "meh nvm fine haha little annoying big deal perf implications", "d": "5/2016"}, {"body": "enough information issue actionable reproduce bug minimal reprojsfiddle", "d": "5/2016"}, {"body": "put breakpoint error usually quite easily see error originating look actual error development build", "d": "5/2016"}, {"body": "must something outside causing bug tried reproduce jsfiddle", "d": "5/2016"}, {"body": "think determining factor value point nt looked see node types nt valid labels best guess", "d": "5/2016"}, {"body": "response op", "d": "5/2016"}, {"body": "hi sorry traveling got lost essentially trouble figuring way replicate guys main issue exception occurs minified production whenever check development version errors", "d": "5/2016"}, {"body": "digging tried follow syranide advice similar issue img tag able trace function line stacktrace one piece runs production", "d": "5/2016"}, {"body": "dev mode throw invariant violation exception message evaluate point contents", "d": "5/2016"}, {"body": "please try reproduce version react compiled master grab one", "d": "5/2016"}, {"body": "hey guys found culprit still nt quite understand cloudflare causing issues cloudflare reminifying already minified script causing sort issue lead weird errors like thanks everyone help everything looks working", "d": "5/2016"}, {"body": "thanks following figure cloudflare might break way let us know might want work ensure nt happen others", "d": "5/2016"}, {"body": "potentially related mounting serverrendered markup", "d": "5/2016"}, {"body": "investigate see related", "d": "5/2016"}, {"body": "new dom renderer root cause html quirky always caused reporting even attribute nt different actually sigh new dom renderer sees nt update value nt normally happen specialcased inputs right causes behavior happen ps also set empty string workaround", "d": "5/2016"}, {"body": "mention input weird things seems still function fine set plain html inspect still react input input inspecting nt show attribute markup quirk probably concern might give us room wiggle changing things progress without breaking regular input understand desire make special case progress", "d": "5/2016"}, {"body": "scottdowne intended behavior exhibited html try typing regular input inspect anyway known issue indirectly fixed afaik end result value specialcased rather handled differently thus problem goes away", "d": "5/2016"}, {"body": "ran well hopefully rebased resolved soon looks like gathering bit dust", "d": "5/2016"}, {"body": "fixed also gathering bit dust intended supersede", "d": "5/2016"}, {"body": "ah nice", "d": "5/2016"}, {"body": "react nt know hand going react perf stuff work far know nt generally supportdebug old versions react recommendation upgrade provide jsfiddle using new version react demonstrates bug react happily look going close actionable bug end feel free continue discussion thread", "d": "5/2016"}, {"body": "jimfb thanks prompt response hoping someone similar issue provide adequate help", "d": "5/2016"}, {"body": "yeah use github tracking bugs master release react core pretty proactive closing issues like personally recommend trying stackoverflow better setup getting usage help", "d": "5/2016"}, {"body": "one thing check whether include two copies react page mistake would explain one unaware time spent", "d": "5/2016"}, {"body": "gaearon page included react inside also included react moved code index page calling works looks like right", "d": "5/2016"}, {"body": "run check duplicate installed library", "d": "5/2016"}, {"body": "run see problem using react one component one calling others react simply thanks help guys", "d": "5/2016"}, {"body": "nt looked tentatively tag regression since apparently worked jslatts sounds like started looking already want submit pr", "d": "5/2016"}, {"body": "jimfb definitely take crack tracking issue submit pr figure first foray react codebase anyone knows feel free jump also would nice someone else confirm issue", "d": "5/2016"}, {"body": "happening happen using development build guess related new warnings synthetic events would start investigating", "d": "5/2016"}, {"body": "set test moment issue happens release distributed via fb cdn used test case good news located commit line code caused bug also appears fixed master assuming commit fix lands future release nt think work", "d": "5/2016"}, {"body": "jslatts would mind verifying build contains commit mentioned", "d": "5/2016"}, {"body": "jimfb fork test works correctly", "d": "5/2016"}, {"body": "excellent close thanks jslatts", "d": "5/2016"}, {"body": "looks like change nt likely make may waiting fix something smaller fixes issue might able take", "d": "5/2016"}, {"body": "zpao smaller like reverting line code back", "d": "5/2016"}, {"body": "zpao jslatts stumbled across workaround time see fix planned confirm simply reverting mentioned jslatts fixes issue must breaking plenty sites", "d": "5/2016"}, {"body": "tjcampbell reverted back workaround would happy submit pr one line change zpao confirms accept nt know enough intent behind change first place possible side effects", "d": "5/2016"}, {"body": "might help getting jquense opinion made change zpao reopen feel urgent enough warrant separate fix merged issue seem caused making react pretty unusable ie", "d": "5/2016"}, {"body": "afaik proptypes considered legacy maintenance mode unlikely additional development happening", "d": "5/2016"}, {"body": "zyrolasting proptypes soon become noop functions production save bytes downloading react production mode nt usable production build also aweary mentioned proptypes legacy nt adding new features think best bet would copypaste validator code react separate library could use production like mentioned use third party validation library going close reasons feel free continue discussion thread", "d": "5/2016"}, {"body": "thanks prompt response guys nothing else add given circumstances great day", "d": "5/2016"}, {"body": "probably confused test would passing even without want look keyanzhang", "d": "5/2016"}, {"body": "really weird build fails master commit could reproduce locally travis spicyj", "d": "5/2016"}, {"body": "nt tried locally travis broken trying calculate coverage unrelated jest tests appear pass", "d": "5/2016"}, {"body": "oh figured fails since nt flatten deps travis build runs dependency pr change nt need actually need plugin", "d": "5/2016"}, {"body": "got let add explicit dep packagejson change babelrc reference directly nt need babelplugin prefix babelrc", "d": "5/2016"}, {"body": "gsabran share jsfiddle reproducing error", "d": "5/2016"}, {"body": "probably duplicate", "d": "5/2016"}, {"body": "sounds like duplicate sorry could get simple jsfiddle reproduce feel free close", "d": "5/2016"}, {"body": "vadorequest pretty sure prop types checking disabled sanity checks pay attention use production bundle reactjs depending workflow webpack browserify whatever", "d": "5/2016"}, {"body": "vadorequest see reactcompositecomponentjs called processing true", "d": "5/2016"}, {"body": "disabled others said reproduce amp share case nt would helpful case nt abbreviating comment make sure set going close reopen need", "d": "5/2016"}, {"body": "thanks guys fast amp detailled answers indeed abbreviated use", "d": "5/2016"}, {"body": "lanfei might need something like", "d": "5/2016"}, {"body": "usage question webpackcommonjs rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "5/2016"}, {"body": "okay thanks raitobezarius jimfb", "d": "5/2016"}, {"body": "hi danielheath found notes github release hope helps", "d": "5/2016"}, {"body": "nt blog post every release update releases page neglected cherrypick commits master landed release branch", "d": "5/2016"}, {"body": "mmakarin already open pr", "d": "5/2016"}, {"body": "response op", "d": "5/2016"}, {"body": "well let give example react docs controlled form components example accepting value provided user updating prop component updating right says controlled component maintain internal state component renders purely based props missing something component using pattern owns internal form inputs special usually validate state happens based pattern comes winner actually updating contradicts major nono listed best practices definitely nt oneway data flow", "d": "5/2016"}, {"body": "updating props updating prop docs talk controlled uncontrolled components mean dom components user components example controlled component receives prop controlled would maintain state invisible would unable modify inside parent would uncontrolled", "d": "5/2016"}, {"body": "react topdown data flow component maintains state passes state prop another component component passes prop another component way easy trace prop tree originated case described hand antipattern component maintains state passes state prop another component component passes prop another component uses prop initialize state passes state prop another component case described antipattern bold part get sync issues everything component may potentially receive props sync summary passing props children based state good basing state props generally good", "d": "5/2016"}, {"body": "thanks detailed response gaearon really appreciate", "d": "5/2016"}, {"body": "jimfb cool definitely join discussion reserve github code issues future thanks taking time lay understand response completely think admirable guys sticking guns try whittle last declarative way possible clear asking imperative solution highlighting rough spot using framework encouraging salve applied react way possible fully keeping declarative approach suggesting imperative solutions like events nt play well react still cases time differentiator duplicate values acceptable like timestamped list model suggested although slightly funky way work actually mentioned response hacks include storing timestamps manage state changes aware possible workaround since guys actively discussing topic internally guess contribution post would point perspective react dev feels like workaround clunky practice react made easy look timestamp prop without extra baggage might help types situations might also strengthen react diffing capabilities hard though without adding metadata primitive values javascript strong suit means anyway coming specific solution interested raising infrequent notable problem area slight tweak capabilities framework might soothe thanks much thoughtful response react team attitude openness inclusion breath fresh air really sets strong positive example community spirit open source keep great work", "d": "5/2016"}, {"body": "applies parameters seems making flash virtually unusable react", "d": "5/2016"}, {"body": "seems reasonable fact took weeks reported suggests people situation able get patch work", "d": "5/2016"}, {"body": "fact took weeks reported suggests people situation spicyj yeah would assume object andor flash rarely used nowadays especially react able get patch work slight misunderstanding domlazytree works also saw specialcase already present document fragments simply added test works intended", "d": "5/2016"}, {"body": "released", "d": "5/2016"}, {"body": "zpao logic related check using ssr would checking essentially replace let us remove check", "d": "5/2016"}, {"body": "hi code reproduces error", "d": "5/2016"}, {"body": "thanks andrey", "d": "5/2016"}, {"body": "keyanzhang try dig figure underlying cause pull requests simply add null check trying dereference node component instead canceling timers dequeueing things unmounted never null elements left", "d": "5/2016"}, {"body": "hey stumbled across seeing error lot sentry logs uses reactcsstransitiongroup react see come fix reading child source think internal consistency used within flushclassnamequeue node cached beginning currently refinds node", "d": "5/2016"}, {"body": "bengotow sounds right want send pr store alongside use node flushing classes null afterwards like timeout check fixes codepen linked", "d": "5/2016"}, {"body": "jimfb could issue also related", "d": "5/2016"}, {"body": "arendjr nt think nothing events", "d": "5/2016"}, {"body": "okay thanks try dig bit deeper see track", "d": "5/2016"}, {"body": "okay confirm reverting autofill issues get fixed pr merged resolve would proper way forward", "d": "5/2016"}, {"body": "arendjr presumably autofill fires sort dom event event fires new value fire onchange event proper path forward figure event listening add logic ensure onchange fires", "d": "5/2016"}, {"body": "jimfb yes fires input change events case problem nt fire propertychange event react listens want know events ie fires see confirmed also tables page correct autofill input change fire propertychange nt thing except specific input types react never listens change event nt listen input event anymore either ie tried dig fix conclusion keep coming back reverted applied stead maybe create new pr exactly", "d": "5/2016"}, {"body": "oh darn testing branch need fixed soon soon attempted create pr master discovered already reverted maybe regular git revert least functional changes undone try testing master first", "d": "5/2016"}, {"body": "tracked revert accompanying fixes", "d": "5/2016"}, {"body": "ie react specific safari issue react autocompleting input fields note autofilling eg username passwords works fine clarify autofill browser populating eg usernamepassword form safari password manager page load clicking input field selecting account use autocomplete browser completing users started typing pressing key selecting list previously filled values might wrong seems like values seem get saved form submitted using standard post safari save autocomplete values filled form got submitted using ajax standard browser behaviour canceled inspecting two input fields autofill usernamepassword saved safari using shows browser fires change event autofilled field expected inspecting input field autocomplete values stored safari using shows single event fired accepting autocompleted value react nt pick value irregardless version used", "d": "5/2016"}, {"body": "cyberthom thanks clarification according definitions talking autocomplete rather autofill appears jimbolla well main difference describing safari however ie correctly fire change event autocomplete react also correctly detected unfortunately regression react nt get detected anymore nt work either safari safari nt fire event agree nothing react would say technically different issue", "d": "5/2016"}, {"body": "fairly certain fixed line code also listens onchange oninput polyfillsunce already deduping value change send pr anyone one yall want test nt access today", "d": "5/2016"}, {"body": "jquense would work given react nt listen input events code path maybe missing something happy test anyway", "d": "5/2016"}, {"body": "help resolve issue", "d": "5/2016"}, {"body": "jimbolla help figure nt working p access recently try", "d": "5/2016"}, {"body": "started looking events nt fire autofill reconciling react source nontrivial trying follow progress arendjr made identifying specific commits related issue anyone needs access testing purposes download windows vm microsoft", "d": "5/2016"}, {"body": "getting react listen specific events case trivial provided know looking admit obvious nt mind working wo nt access still wednesday", "d": "5/2016"}, {"body": "minimal fiddle illustrating issue shouldcomponentupdate plain context passing context updated involved", "d": "5/2016"}, {"body": "submit pr failing test case please", "d": "5/2016"}, {"body": "find pr first pr react hope nt miss anything obvious", "d": "5/2016"}, {"body": "sorry late response lack example encountered problem try write test functional component javascript import import react createelement react import renderintodocument reactaddonstestutils import unmountcomponentatnode finddomnode reactdom let functionalcomponent props gt class reactcomponent extends reactcomponent render return describe functionalcomponent function let element describe reactcomponent function let element test result bash nodepathsrc mochify recursive test transform babelify presets react r spec phantomjs functionalcomponent render reactcomponent render passing failing functionalcomponent render null object evaluating elementshould callfn run runtest next next timeslice error exit npm err test failed see details maybe problem tried debug found work fine", "d": "5/2016"}, {"body": "line jest expect nt property probably intended write something like also clear thing returned", "d": "5/2016"}, {"body": "jimfb using shouldjs mochify point returned object might ca nt rendered", "d": "5/2016"}, {"body": "hotay per note bottom stateless functions backing instances also mentioned documentation want reference need wrap stateless function stateful component like class component backing instance", "d": "5/2016"}, {"body": "oh thank explanation jimfb appreciated", "d": "5/2016"}, {"body": "strangely enough ran issue today different chrome versions tested fiddle muted attribute unavailable", "d": "5/2016"}, {"body": "expanded bit jimfb fiddle check server rendering tested safari well rendered attributes despite attribute showing using video muted despite attribute showing access attribute resuming server render", "d": "5/2016"}, {"body": "moret run code fiddle video appears muted sound thing react guarantees react required set attribute required", "d": "5/2016"}, {"body": "rendering client use property since determined modifying attribute nt actually affect video must set nt see reflected attribute", "d": "5/2016"}, {"body": "zpao makes sense explains well difference seemingly similar attributes thanks explanation", "d": "5/2016"}, {"body": "landed fix whichever release next", "d": "5/2016"}, {"body": "may useful broken broken nt throw obviously nt want case using moving components around started happening updated nt help chrome updated behavior", "d": "5/2016"}, {"body": "need additional repro cases unless confirm still broken master come", "d": "5/2016"}, {"body": "spicyj give go tagged somehow npm install master branch", "d": "5/2016"}, {"body": "kilianc master branch", "d": "5/2016"}, {"body": "easiest install npm ca nt use github repo without building", "d": "5/2016"}, {"body": "ca nt reproduce anymore master must race condition nt happen anymore", "d": "5/2016"}, {"body": "kilianc believe issue fixed master sure unable repro also super similar issue showing chrome vanishes upgrade chrome chrome browsers autoupdate point perhaps issue either way glad resolved", "d": "5/2016"}, {"body": "jimfb indeed never issue", "d": "5/2016"}, {"body": "also issue using chrome react easy track like rickychien could resolve temporarily removing handler eventually solved problem change component contained stateless component class based component", "d": "5/2016"}, {"body": "schneck solved next update", "d": "5/2016"}, {"body": "gaearon issue would nt make sense prop says instance user explicitly set default instead trying infer implicitly combination props value onchange asking causing problems code needed input controlled value thanks much", "d": "5/2016"}, {"body": "needed input controlled value undefined mean value undefined input using value work great", "d": "5/2016"}, {"body": "jimfb would fix", "d": "5/2016"}, {"body": "yes fairly certain", "d": "5/2016"}, {"body": "related issue jquery fails get value input jsdom codes looks attribute value nt anymore react issue input typeradio val return react jquery code return elemgetattribute value null elemvalue", "d": "5/2016"}, {"body": "also bumped something similar unit tests running phantomjs upgrading react worked fine", "d": "5/2016"}, {"body": "please try provide minimal example reproducing", "d": "5/2016"}, {"body": "seems kind timing issue cases pass delay calls reacttestutilssimulatefocus reacttestutilssimulateclick", "d": "5/2016"}, {"body": "another factor consider recordings guys considering enzyme officially supported community based library testing react parts enzyme currently require reaching react either would need work together need continued access internals example", "d": "5/2016"}, {"body": "another factor consider recordings guys considering enzyme officially supported community based library testing react parts enzyme currently require reaching react either would need work together need continued access internals yeah absolutely related core notes challenges ideally want test runner separate renderer tests run consistently often synchronously want run incremental reconciler official renderer apis yet without testutils enzyme would rely react internals understand case keeping mind figure strategy move without breaking everyone", "d": "5/2016"}, {"body": "something like chars would enough imo bad communicated clearly could ship reactlibreadmemd explains hash changes every major version gaearon case nt make sense call still kind invite people use neither screams offlimits would mostly think continue personally would say enough though whatever worth", "d": "5/2016"}, {"body": "syranide gaearon would nice directory name corresponded value case", "d": "5/2016"}, {"body": "worth noting relevant long use might much longer point probably using relative requires perhaps go even flat bundling approach npm module single file things work peopleprojects work finalize anything regardless think probably worth changing things multiple times thus doubt anything", "d": "5/2016"}, {"body": "let close favor", "d": "5/2016"}, {"body": "dylanpiercey checksum still would thrown anything added adblocker like work identically error message misleading case though disable adblocker error get instead", "d": "5/2016"}, {"body": "going close unlikely actually react bug please reply continue debug", "d": "5/2016"}, {"body": "spicyj sorry replying quicker tried couple projects similar setups works fine must something specific project stay closed thanks", "d": "5/2016"}, {"body": "worries wanted clarify earlier comments nt mean put pressure reply quickly trouble project feel free post figure going", "d": "5/2016"}, {"body": "released new version objectassign includes feature test bugs someone reinstall try new version verify fixed", "d": "5/2016"}, {"body": "spicyj seems resolved issue getting mismatched checksum consistently nt seen since reinstalling modules appears even remove startup script something else requiring pulls already though may case everyone", "d": "5/2016"}, {"body": "sounds great close hopefully works everyone else", "d": "5/2016"}, {"body": "works", "d": "5/2016"}, {"body": "using objectassign still getting started upgraded react", "d": "5/2016"}, {"body": "using objectassign still getting started upgraded react please provide project reproducing issue also please make sure older somewhere deeper tree eg inside", "d": "5/2016"}, {"body": "yeah check tree first thought see find time put together sample project monday", "d": "5/2016"}, {"body": "digging turns objectassign solve pages running nt realize different issue please disregard noise", "d": "5/2016"}, {"body": "also running using code accessing refs keys definitely function code read ca nt tell pr specifically solves particular issue", "d": "5/2016"}, {"body": "problem using", "d": "5/2016"}, {"body": "gaearon still release", "d": "5/2016"}, {"body": "gurinderhans browser also provide jsfiddle demonstrates issue", "d": "5/2016"}, {"body": "jimfb go browser chrome jsfiddle", "d": "5/2016"}, {"body": "following chrome debugger found line code makes call value input tried changed nt yet called update element attribute thus warning generated called gets set like suppose everything goes according plan ps course removing call inside rids warning may required cases also notice gets called element could check type change set value update type set value inside also wondering call required cases like", "d": "5/2016"}, {"body": "landed chrome updated plan support react", "d": "5/2016"}, {"body": "thinking walking dom checksum validation beneficial create virtual dom based existing dom instead trying validation way would able patch update serverrendered dom equivalent clientrendered markup instead wholesale replacement already traversing dom validation slower create virtual dom instead similar incrementaldom proposes react case would initial instantiation top existing dom", "d": "5/2016"}, {"body": "sure really relevant may worth considering webpack come tree shaking allows discard unused modules bundle due current design react probably make measurable difference anyway compiling single file flatout prevent also logistical hurdles cross feasible may worth keeping inmind least", "d": "5/2016"}, {"body": "context discussion occurring want start discussing might affect community tools may rely react internals enzyme import lib folder vested interest might affect ability integrate", "d": "5/2016"}, {"body": "unknown ideally would expose everything library like enzyme would need impacts addons packages well", "d": "5/2016"}, {"body": "", "d": "5/2016"}, {"body": "breaking change one unit test suites regarding issue upgrading built custom checkbox component wraps setting prop turn set html attribute personally prefer sets attribute element", "d": "5/2016"}, {"body": "agree rovolution see similar case code use radio inputs like every change value changed browser works correctly dev mode getting console means way render server different client syranide property updated attribute reflects initial state lt see attribute removed client", "d": "5/2016"}, {"body": "krzysu means unchecked means checked rendering different markup server vs client hence errorwarning", "d": "5/2016"}, {"body": "yes know happens upgrading react way new react rendering inputs different client server writing client removes attribute new logic causing checksum invalid causing warning component props exactly server client react way rendering different", "d": "5/2016"}, {"body": "krzysu unable reproduce rendering checked radio input server resuming client works fine mismatch error", "d": "5/2016"}, {"body": "ok try prepare example reproduces", "d": "5/2016"}, {"body": "gifs custom checkbox react setting attribute react attribute set code jsx setting attribute element", "d": "5/2016"}, {"body": "ok issue different one rovolution syranide promised extracted code reproducible example find found far problem caused dependencies specific version included npmshrinkwrapjson remove npmshrinkwrap reinstall nodemodules reported issue gone sure worth debugging wink", "d": "5/2016"}, {"body": "krzysu using problem hierarchical dependencies plugins may depend older versions react installed sidebyside compatible generate slightly different markup cause problem seen also find likely considering subsequent attributes even order clientserver output warning generally shows differently experience knows external versioning conflict obviously", "d": "5/2016"}, {"body": "issue react repo nt really place discussing things timdorr yeah lets continue", "d": "5/2016"}, {"body": "repro case tootallnate posted throw error also throws error uncaught typeerror read property firstchild undefined want add warning calling setstate server render least case nt regression look others bit", "d": "5/2016"}, {"body": "jacksongariety cloning repo manually installing babelplugintransformobjectrestspread chalk lodash load without errors something wrong", "d": "5/2016"}, {"body": "anyone give repro instructions example works fine broken small repro cases ex jsfiddle preferred also work full app clone otherwise close issue cases tried far repro also broken", "d": "5/2016"}, {"body": "spicyj remove conditional try error specifically caused", "d": "5/2016"}, {"body": "issue decided remove parts project figured could causing issue lines causing removing everything worked fine complete version react component lines try reproduce edited clarity", "d": "5/2016"}, {"body": "removing warning really annoying makes write unnecessary checks mind normal flux store data", "d": "5/2016"}, {"body": "think effectively request closing duplicate two issues", "d": "5/2016"}, {"body": "using browserify want utilize console without changing app code bundle includes react console pain neck sure one option using currently alternatively could dev include additional entry file disk stream sets global eg", "d": "5/2016"}, {"body": "hi tj reactaddonsperf module apparently exist installed hmm weird must something funky webpack problems going explain case scenario maybe useful someone else using nt notice loads iframe could nt access context default dev tools console dropdown chrome firefox allows switch iframe context solution could use inline mode nt wrap app inside iframe", "d": "5/2016"}, {"body": "initial work started", "d": "5/2016"}, {"body": "important svg animations used dictate", "d": "5/2016"}, {"body": "love help translation smile bjrmatos", "d": "5/2016"}, {"body": "appear reports issue nt enough information make actionable get clear repro reinvestigate", "d": "5/2016"}, {"body": "jimfb seems issue happening loading via https", "d": "5/2016"}, {"body": "met question fix", "d": "5/2016"}, {"body": "stackoverflow solution wrote issue", "d": "5/2016"}, {"body": "nt consider input value null undefined qualifying factor determining input controlled uncontrolled controlled forms paradigm may share qualities uncontrolled forms listening changes updating state value react nt stipulate value ca nt undefined additional burden following good practice using controlled forms warning occur defaultvalue value props used throughout input lifecycle", "d": "5/2016"}, {"body": "additional burden following good practice using controlled forms agree sense nt single component two separate regardless would say actually providing correct string value interactive component expects string value seems like rather good practice otherwise two distinct value states intended mean exact thing warning occur defaultvalue value props used throughout input lifecycle makes uncontrolled definition nt switch controlled uncontrolled", "d": "5/2016"}, {"body": "note original pr fixed reverted bug still exists", "d": "5/2016"}, {"body": "new react hit issue today rendering two different dom trees based boolean switch trees shared structure switching input trees retained value behavior quite puzzling outsidebeginner perspective makes sense react nt really know whether html returning new element update existing element wonder would good idea jsx compiler automatically insert random keys root elements already provided", "d": "5/2016"}, {"body": "yes result facebook thus fbme blocked could probably get around making fiddles use different location eg cdnjs otherwise unrelated issue", "d": "5/2016"}, {"body": "hi wanted throw hat say edge case terms wanting compile jsx browser tutorial told nt supported six months due people using webpack mentioned webpack might wasted lot time trying get code running react understanding everyone answers stack overflow questions nt running complaining much asking support planned future new version jsxtranformer implemented part babelstandalone least people nt confused docs trying make decision whether get babelstandalone compile jsx andor whether webpack worth really lightweight projects currently using templating framework virtual dom would easier implement existing js code would love use react project file comparable native development thanks", "d": "5/2016"}, {"body": "issue velocityreact includes velocity changing makes everything go smoothly going propose pr", "d": "5/2016"}, {"body": "made upgrade behavior using redux model emit changes store component code import react component proptypes react import connect reactredux import toolselected actionsuiactions class tool extends component handletoolchange e const dispatch panelid thisprops const selectedindex etargetselectedindex dispatch toolselected panelid selectedindex render const tools panels panelid thisprops toolslength const tool tools panels panelid selectedtoolindex const value toolpropsname tooltypenicename tooltypedisplayname const selector return return else return null const mapstatetoprops state gt tools statetimberuitools panels statetimberuipanels export default connect mapstatetoprops tool behavior correct tool react component show dom every time change made redux store state accurate select still show last selected tool value redux store updated second time however small change using selected render function solves issue albeit warnings suggesting use value select components instead working render function using selected", "d": "5/2016"}, {"body": "first example missing attribute documentation correct usage otherwise react thinks none match", "d": "5/2016"}, {"body": "hmm maybe wrong perhaps fix", "d": "5/2016"}, {"body": "worked put value select options works without warnings many thanks gaearon", "d": "5/2016"}, {"body": "still bug probably let keep open gets merged", "d": "5/2016"}, {"body": "closing per yungsters answer seems perfectly reasonable nt think anything could reasonably current relayprop behavior seems correct", "d": "5/2016"}, {"body": "related wrapper convert web component react component use web component firstclass citizen within react components", "d": "5/2016"}, {"body": "looks like merged", "d": "5/2016"}, {"body": "hi kayneb got bitten issue nt happen find workaround", "d": "5/2016"}, {"body": "get attribute via string srctestreacttestutilsjs return value seeing specifically also using jsdom", "d": "5/2016"}, {"body": "thanks aweary see actually using older version react test utils nt check typeof classname seeing svganimatedstring like kayneb using jsdom would expect moment issue old code base dom", "d": "5/2016"}, {"body": "done", "d": "5/2016"}, {"body": "repro", "d": "5/2016"}, {"body": "download thing react diff", "d": "5/2016"}, {"body": "anyone seeing wrong attribute orders reinstall make sure objectassign fix issue", "d": "5/2016"}, {"body": "spicyj works thanks", "d": "5/2016"}, {"body": "thanks spicyj uninstalled react installed react seems fixed", "d": "5/2016"}, {"body": "shipped", "d": "5/2016"}, {"body": "know specific case still accurate reactperf rewritten scratch particular bug report likely longer accurate since described way reproduce closing feel free follow still happens", "d": "5/2016"}, {"body": "short update still issue react want disable double clicks ie checkboxes workaround one mentioned brigand thank", "d": "5/2016"}, {"body": "prs welcomed", "d": "5/2016"}, {"body": "afaik fixed part janusch need update", "d": "5/2016"}, {"body": "appear standards track supported major browsers chance adding react perhaps shim browsers nt support", "d": "5/2016"}, {"body": "seems reasonable enough performance compromise reopen wo nt high priority us", "d": "5/2016"}, {"body": "react onclick disabled elements fire makes ton trouble open issue", "d": "5/2016"}, {"body": "attilaaronnagy fairly certain react issue browser one", "d": "5/2016"}, {"body": "using latest chrome latest mac react worked perfectly nt think create onclick wo nt fire", "d": "5/2016"}, {"body": "attilaaronnagy believe expected matches htmldom spec gaearon miss changelog", "d": "5/2016"}, {"body": "spicyj need input select etc disabled onclick event made graphical html editor would like select components onclick edit mode active would like disable component ca nt use select", "d": "5/2016"}, {"body": "spicyj even try still working nt know kind magic guys cooked disabled blocking every possible thing matter whatever thinking puting global click event listener body backward calculating one components clicked coordinates absurd common", "d": "5/2016"}, {"body": "attilaaronnagy browsers nt support click events inputs nt anything would affect addeventlistener works", "d": "5/2016"}, {"body": "spicyj element disabled code works normal onclick also working input tried browser jsbin older react working disabled input also difference react version number whatever gave", "d": "5/2016"}, {"body": "attilaaronnagy jsbin using react nt work let know seeing otherwise", "d": "5/2016"}, {"body": "", "d": "5/2016"}, {"body": "spicyj works", "d": "5/2016"}, {"body": "nt disabled input disable see behavior posted browser react want capture onclick event disabled input put wrapper node around listen top level prefer matches standard dom behavior personally think behavior surprising desirable find valuable match dom spec planning leave way", "d": "5/2016"}, {"body": "react team learn thing two angular team handlingmessaging kind errors", "d": "5/2016"}, {"body": "yeah nt understand react chose make behave like fas tell way getting old behaviour back docs claim misnomer nt really fire change input also loses focus validation sometimes nt want show validation errors done typing maybe nt want rerender every keystroke way onblur also need check value changed manually big deal seems like react threw away useful event deviated standard behaviour already event", "d": "5/2016"}, {"body": "agree mnpenner fireing every keystroke redux store changes simultaneously avoid use finally two events work manner", "d": "5/2016"}, {"body": "ie change event fires many times inputing chinese characters", "d": "5/2016"}, {"body": "use react small part larger project many devs nt want message crowding console dev tier standard way disabling message nt involve altering source code would highly preferable", "d": "5/2016"}, {"body": "see also related approach based tracking reads writes think mentioned thread gotten mature since heard good things people used cc mweststrate", "d": "5/2016"}, {"body": "mobx indeed tracks reads writes react perspective reads interesting mobx decorator wraps render function component tracks observables accessed render rest pretty much described sebmarkbage initial post thread render old subscriptions disposed new ones made makes extremely straight forward write components regardless observables used coming props state context closure singletons etc performance wise approach beneficial child parent components render independently usually saves react reconciler lot work mobx also adds components need deeply check equality objects properties observable since months actually stopped using react state mechanism observable instance fields straightforward use regularly seen colleagues storing state nt relevant render components resulted unexpected component behavior struggled async nature automatic subscriptions avoids problems technically makes render indeed impure reality never run trouble since rendering still idempotent force extra rendering calls subscriptions lost rendering still work expected observable subscriptions nt influence rendering see also jsbin want play bit mobx", "d": "5/2016"}, {"body": "mweststrate seems like primary function mobx create objects arrays notify properties external consumer notified properties type functionality see effectively maps filters subclassed arrays mechanism able lookup even emitters bound property wire notifications accurate reactive programming composition particular design seems like paradigm sort pullbased reactive model layer similar ember actually property really coolinteresting sure talking thing also term observable case mobx accurate merriamwebster definition might misnomer think observable think bacon kefir rx etc", "d": "5/2016"}, {"body": "also term observable case mobx accurate merriamwebster definition might misnomer think observable think bacon kefir rx etc yeah posted think sense original issue post implying see also something similar mobx spirit", "d": "5/2016"}, {"body": "blesh many kinds observables indeed old concept way older rx observables mobx similar ones javelin ember knockout killed proposal different ones rx bacon observable values instead observable event streams explicit reactive programming composition mobx terms operators exactly thing abstracts away doubt however whether distinction categories relevant context thread otherwise gladly elaborate long observable implements fine mix match think mobx proves mechanism automatically un subscribes observables side effect rendering viable mechanisms even current versions react mechanism pulled react thing needed api allows observable signal react accessed something like react link currently rendering component way developers bothered explicit dependencies sideways loading react reactive library settle", "d": "5/2016"}, {"body": "way developers bothered explicit dependencies sideways loading honestly prefer react nt opinions async types works best even rx observables rather handled generic async types via interoperability points like symbolobservable thennables", "d": "5/2016"}, {"body": "blesh indeed standards best pointed jimfb observables thennables enough solve problem undersubscribing allow automatically subscribing observables used render", "d": "5/2016"}, {"body": "kennethaa link working example", "d": "5/2016"}, {"body": "hi mmahalwy something like work js import react react import reactdomserver reactdomserver import htmldocument htmldocument import routercontext reactrouter import provider reactredux export default function render renderprops store res next const assets webpackisomorphictoolsassets", "d": "5/2016"}, {"body": "kennethaa thanks much appreciated", "d": "5/2016"}, {"body": "confusing beginners started directly style classes documentation little help learning need full blown documentation compatible people starting react dont reason learning non react volunteer converting sure facebook commitment towards documentation", "d": "5/2016"}, {"body": "volunteer converting sure facebook commitment towards documentation great see recent meeting notes happy situation either think want convert docs use functional stateless components state lifecycle hooks needed classes wherever state lifecycle hooks necessary would leave examples specifically discuss usage eg mixins zpao spicyj sound like folks mind note contributors like work please leave comment issue avoid duplicated work also want add class examples want change existing examples use classes", "d": "5/2016"}, {"body": "gaearon sounds right", "d": "5/2016"}, {"body": "yeah let also link createclass docs tutorial intro docs showing reactcomponent alternative people nt want use classes", "d": "5/2016"}, {"body": "faced problems migrating style would love help converting documentation surely help beginners developers nt used style yet", "d": "5/2016"}, {"body": "would like help docs", "d": "5/2016"}, {"body": "also willing help terms autobinding core team notes say could always bind constructor documentation want verify final decision since wording make sound little uncertain articles prioritizedtriaged way people comment issue whatever article working prevent duplicate prs", "d": "5/2016"}, {"body": "gillchristian jakegavin feel free organize work thread eg write like take pages b c others see pages working join say cool take e way split effort track individual progress core team notes say could always bind constructor documentation want verify final decision since wording make sound little uncertain yes use class properties docs want use stable syntax need bind event handler constructor", "d": "5/2016"}, {"body": "would possible introduce toggle similar done reactdnd concerned exclusively showing implicitly require build step new syntax many developers nt currently understand", "d": "5/2016"}, {"body": "iamchenxin idea love way react dnd shows multiple versions let know used future", "d": "5/2016"}, {"body": "iammerrick best option removing createclass docs signify community deprecated regardless intention say keep fully deprecated", "d": "5/2016"}, {"body": "would like help cents many stateless components possible sure createclass andor examples components binding constructor property initializers binding inside render", "d": "5/2016"}, {"body": "start taking quick start pages ie getting started tutorial thinking react converting examples stateless much rest classes", "d": "5/2016"}, {"body": "already displaying data interactivity dynamic uis add multiple components pr latter today edit gaearon branch pr edit github links corresponding master guessing master", "d": "5/2016"}, {"body": "gillchristian yes master branch thanks", "d": "5/2016"}, {"body": "gaearon converting reusable components transferring props forms submit pr later", "d": "5/2016"}, {"body": "interactivity dynamic uis already done displaying data multiple components pr one latter hope everything right", "d": "5/2016"}, {"body": "maybe stupid question skip migrate function stateless components", "d": "5/2016"}, {"body": "skip migrate function stateless components many examples docs concerned state andor lifecycle hooks suggest use functional components possible though", "d": "5/2016"}, {"body": "reusable components updated pr let know feedback please", "d": "5/2016"}, {"body": "stepping anyone toes would like start converting addons one subsection time anyone else work remaining subsections simultaneously start animation quick question though stateless component proptypes defined still prefer functional form", "d": "5/2016"}, {"body": "yeah stateless dont see reason check says functional components lifecycle methods set proptypes defaultprops properties function", "d": "5/2016"}, {"body": "pr addons animation picking twoway binding helpers next", "d": "5/2016"}, {"body": "gaearon documentation page thinking react code jsfiddle supply new code next picking keyed fragments create fragments add ons", "d": "5/2016"}, {"body": "gaearon twoway binding helpers deals mixins wo nt changing use classes using shorter function declaration style plus letsconsts", "d": "5/2016"}, {"body": "next picking refs components tooling integration subsections", "d": "5/2016"}, {"body": "smaller updates addons twoway binding helpers moving tackle context think one would benefit introducing functional components", "d": "5/2016"}, {"body": "cool soon documentation ported classes stateless components moving picking first sections reference toplevel api component api component specs lifecycle supported tags attributes event system", "d": "5/2016"}, {"body": "pr context", "d": "5/2016"}, {"body": "transferring props converted previous commit finishing forms question stateless components use normal style shorthand like standard style use edit finished forms documentation update pr", "d": "5/2016"}, {"body": "picking last section reference react virtual dom terminology edit pr", "d": "5/2016"}, {"body": "gaearon since leading effort track progress somewhere maybe hijack original description tracking hard know state glance also ideally land updates time within couple days get update place happy merging need change language immediately followup otherwise docs going get worse particular tutorial main place people learn react going need lot attention topics need introduced discussions intentionally right order", "d": "5/2016"}, {"body": "hey folks thank much contributing expect people react actively awesome large change though need make cohesive work well currently preparing talk reacteurope next week dedicate time yet week half ready review changes address merge together cheers", "d": "5/2016"}, {"body": "gaearon would help community react agrees guidelines two types questions features go documentation ones avoided nt fully baked whole ecosystem feature used coding guidelines cases multiple ways writing guidelines also living evolving document unlike writing stone", "d": "5/2016"}, {"body": "think following features use classes arrows destructuring use distracting still examples functional components use functional declarations work everywhere guidelines mind make sense let know", "d": "5/2016"}, {"body": "gaearon explain make everything explained allowed features classes arrows destructing use whenever possible use stateless functional components declaring following way else use class declare component ok edit changed stateless function style reflect gaearon suggestion", "d": "5/2016"}, {"body": "yes propose declare functional components familiar form arrows find use elsewhere though helpful", "d": "5/2016"}, {"body": "thank gaearon looks like enough standards enable everybody write consistent style suggest anyone contributed review code ensure follow guidelines provide feedback", "d": "5/2016"}, {"body": "sounds good update fit push continuation arrows functional components", "d": "5/2016"}, {"body": "issue seems back referenceerror htmltojsx defined", "d": "5/2016"}, {"body": "guys quick question dynamic children need bind onchangehandler generated select component seems ref unique binds last loop", "d": "5/2016"}, {"body": "hi also taken case would awesome still fix thanks advance felix", "d": "5/2016"}, {"body": "eta completely breaks controlled date inputs firefox android", "d": "5/2016"}, {"body": "adamboxall welcomed submit pull request", "d": "5/2016"}, {"body": "still sure patent grant means infringement patent grant invalidates bsd license", "d": "5/2016"}, {"body": "neilgalarneau provide brief sample code using particular curious whether using jsx reactcreateelement directly", "d": "5/2016"}, {"body": "came twice situation needed dynamic use proper component suggestion react team could create helper function example reactgetcomponentbyname name string returns component name input string way easily implement following use case rendering proper component based props received import import import const mycomponentslist let mycomponentslist reactgetcomponentbyname jsx render return", "d": "5/2016"}, {"body": "want need provide mapping nothing react react works regular classes classes magically registered react js import import import const mycomponentslist const mycomponentslistbyname syntax const mycomponentslistbyname", "d": "5/2016"}, {"body": "syranide said render", "d": "5/2016"}, {"body": "hi yagudaev keyboardevent tried keypress work", "d": "5/2016"}, {"body": "fyi got error react component wrote inside element", "d": "5/2016"}, {"body": "thomaschan provide jsfiddle demonstrates problem", "d": "5/2016"}, {"body": "jimfb tried react running looks like need compile corejs used webpack dev otherwise got error said object support method reactminjs", "d": "5/2016"}, {"body": "nothing else added documentation spent much time trying figure going checkboxes finally type correct phrase google arrive issue could saved hours mentioned docs", "d": "5/2016"}, {"body": "still minor problem appears children yes stops working", "d": "5/2016"}, {"body": "verbose works js buttongroupproptypes children props propname componentname const allowedtypes button evpozdniakov nt tried might able also wrap js buttongroupproptypes children reactproptypesoneoftype reactproptypesshape type reactproptypesoneof button", "d": "5/2016"}, {"body": "last version nt work reason first one works however prefer create error message javascript proptypes thcells function props propname componentname const th proptypesshape type proptypesoneof th const thisrequired arguments const proptypesarrayof th isrequired arguments", "d": "5/2016"}, {"body": "evpozdniakov implemented functionality used", "d": "5/2016"}, {"body": "actually writing lightweight form validation library kind tired manually ran problem get jsx validates singular field var fieldtype reactproptypesshape type reactproptypesoneof field accepts either single field array fields note reject form children formproptypes children reactproptypesoneoftype reactproptypesarrayof fieldtype array fields fieldtype singular field isrequired", "d": "5/2016"}, {"body": "nt know react implementation particular created library uses jsonml diffing jsx minimal hard syntax also rerendering granular passing previously instantiated controllers associated components require redrawing perhaps something similar", "d": "5/2016"}, {"body": "coffeescript equivalent syntax", "d": "5/2016"}, {"body": "similar issue itemsjsx componentdidmount eventhubfire trigger patentjsx componentdidmount eventhubon trigger know tell completely wrong idea amp need think react cropped example nt give soul patent component mount items component surely bug", "d": "5/2016"}, {"body": "want point without change forced build react app development mode anyways thereby stripping benefits discussing going make recommendation customers running react well rely us getsentry report errors applications going make choose small performance improvements fundamental successful bugfree operation application going go option every time nt know anyone would prefer choose option please please consider either restoring error messages keep stripping warnings eg proptype validation b give us additional configuration option lets us preserve error messages either approaches amenable glad contribute patch", "d": "5/2016"}, {"body": "want point without change forced build react app development mode anyways thereby stripping benefits discussing would recommend dev builds slower hardly small performance improvement fundamental successful bugfree operation application please help understand react invariant error messages relate bugfree operation apps errors thrown react rare generally helpful anyway usually indicate bugs react get reported us regularly dev builds try best fix many scenarios getting exact internal error message would helpful record errors thrown app due rendering directly react warns development things tend shake naturally", "d": "5/2016"}, {"body": "think key point remember react stripping internal errors obfuscating errors thrown userimplemented components think number people need reports internal react errors occur production rather small imagine also almost completely handled error boundaries stable seen correct wrong", "d": "5/2016"}, {"body": "would recommend dev builds slower hardly small performance improvement understand sucks want error messages reenabled way configure availability please help understand react invariant error messages relate bugfree operation apps errors thrown react rare generally helpful anyway usually indicate bugs react get reported us regularly dev builds try best fix many scenarios getting exact internal error message would helpful let give real world scenario occurring right fundamental view getsentry broken particular customer stack trace basically useless least tells error message error stripped see component name object keys object might information way closer figuring problematic child solution right amend staging server uses production database put development react code see original error message pertains customer awesome either purpose staging server mimic production environment much possible everybody access additional servers kind verification", "d": "5/2016"}, {"body": "awesome either purpose staging server mimic production environment much possible everybody access additional servers kind verification would get solved providing separate profiling build running production codepath without minification little bit instrumentation track work may choose run build staging even run production perf impact would much less dev builds", "d": "5/2016"}, {"body": "think key point remember react stripping internal errors obfuscating errors thrown userimplemented components may intention reality construct views trees views trigger invariant errors fail render see example", "d": "5/2016"}, {"body": "gaearon additionally keep error messages intact realistically recommend react sentry users safelyconfidently use production", "d": "5/2016"}, {"body": "profile additionally keep error messages intact afaik plans minify would expect discuss realistically recommend react sentry users safelyconfidently use profile production anyone using dev builds purpose today certainly better served profile build profile build would still slower production build acceptable tradeoff sure case necessary prerequisite us actually implement build looking coming weeks", "d": "5/2016"}, {"body": "benvinegar understand frustration getting useable stack traces react maybe lucky nt seen production runtime errors react sentry setup might side effect us validating react components renders without consoleerrors runtime errors thanks react rather simple bunch props fixtures bit provocative production really place want see errors setup hard unit test maybe missing something", "d": "5/2016"}, {"body": "skovhus maybe lucky nt seen production runtime errors react sentry setup might side effect us validating react components renders without consoleerrors runtime errors thanks react rather simple bunch props fixtures definitely real issues predictable confirm sentry scrubbed pii update links showing examples bit provocative production really place want see errors setup hard unit test maybe missing something said perfect engineer means dont write perfect bug free code know exactly tests need cover ensure also happen", "d": "5/2016"}, {"body": "dcramer nobody course highlighting usually easy set automatic tests components tests enforce dumbview components kind basic test really curious kind runtime errors dig share", "d": "5/2016"}, {"body": "maybe lucky nt seen production runtime errors react sentry setup want step back make clear nt us improve experience customersusers using sentry monitor react applications eg original submitter issue even benefit users competing crash reporting products merely drawing examples sentry account help illustrate problem", "d": "5/2016"}, {"body": "expand example issue earlier problematic code ended following expected always string particularly rare case ended object single subproperty since object error message would stripped", "d": "5/2016"}, {"body": "keyanzhang started working error code system check let us know think plan", "d": "5/2016"}, {"body": "philikon becomes would nt correct becomes way opportunity work ref soon element rendered catch rendering errors specific components currently whole app explodes one component throws error rendering use promises functions setstate well", "d": "5/2016"}, {"body": "confirm react slow many elements drastically slow nothing name reallife usage definitely reactive", "d": "5/2016"}, {"body": "confirm react slow many elements drastically slow nothing name reallife usage hi love help vague many elements render thousand elements page probably show anyway case better used virtualized lists render many items need stay performant also use something like mobx automatic granular subscriptions hitting performance limits thousands items traditional react data flow said equally likely react fast case use production build instead development build difference perf provide react performance optimization hints good guide optimizing performance react apps please check interested definitely reactive reactive refers fact update state dom updated automatically reacting state change mean react claims fastest library possible however definitely used widely facebook including react native performance important enjoys ton realworld usage", "d": "5/2016"}, {"body": "agree using virtualized lists reducing number dom elements lists get performant lists vasco pessanha senior software engineer outsystems wwwoutsystemscom tue may pm dan abramov notifications githubcom wrote confirm react slow many elements drastically slow nothing name reallife usage hi love help vague many elements render thousand elements page probably show anyway case better used virtualized lists render many items need stay performant also use something like mobx automatic granular subscriptions hitting performance limits thousands items traditional react data flow said equally likely react fast case use production build instead development build difference perf provide react performance optimization hints good guide optimizing performance react apps please check interested definitely reactive reactive refers fact update state dom updated automatically reacting state change mean react claims fastest library possible however definitely used widely facebook including react native performance important enjoys ton realworld usage receiving authored thread reply email directly view github", "d": "5/2016"}, {"body": "renaming shape something understandable mindblown mbrio finally learned meaning shape react", "d": "5/2016"}, {"body": "anyone point example use ca nt seem figure make work", "d": "5/2016"}, {"body": "thomnic officially support error boundaries unofficially", "d": "5/2016"}, {"body": "understood thanks example unfortunately ca nt seem get working defined root component console log statement nt see called strange", "d": "5/2016"}, {"body": "still getting error even using react newer react sure missing something else needs updated writing library using react reactdom sure babel something else code import react proptypes react import doesbrowsersupportsvg utilsdoesbrowsersupportsvgjs var emptypng require assestsimagesstaremptypng var wholepng require assestsimagesstarwholepng var halfpng require assestsimagesstarhalfpng class rendericon extends reactcomponent static proptypes data proptypesshape fill proptypesoneof whole half empty isrequired size proptypesstring cursor proptypesstring constructor props context super props context const size cursor thisprops const size size size const cursor cursor cursor auto optionsfill optionsfill empty render consolelog icon doesbrowsersupportsvg return star thispropsdatafill else switch thispropsdatafill case whole return case half return default return export default rendericon packagejson file name uielements version description collect commonly used ui elementscomponents written react built using webpack main distuielementsjs scripts build examples babelnode presets examplesbuildjs build umd webpack srcindexjs distuielementsjs config webpackconfigdevelopmentjs build umd min webpack srcindexjs distuielementsminjs config webpackconfigproductionjs watch npm run build umd watch build npm run build umd amp amp npm run build umd min check npm run lint amp amp npm run test clean rimraf lib dist coverage lint eslint src test examples preversion npm run clean amp amp npm run check postversion git push amp amp git push tags amp amp npm run clean prepublish npm run clean amp amp npm run build test mocha compilers js babelregister recursive test examples babelnode examplestestsjs test watch npm test watch test cov babelnode npm bin isparta cover npm bin mocha recursive version npm run build repository type git url keywords ui components elements react rating star button dropdown modal license mit bugs url homepage peerdependencies react devdependencies babelcli babelcore babeleslint babelloader babelpluginflowcomments babelplugintransformdecoratorslegacy babelpresetreact chai cssloader eslint eslintconfigairbnb eslintpluginimport eslintpluginreact expect extracttextwebpackplugin fileloader isparta mocha nodelibsbrowser nodesass postcssloader react rimraf sassloader skindeep styleloader urlloader webpack npmname uielements npmfilemap basepath dist files js finally error others getting", "d": "5/2016"}, {"body": "quietomen want", "d": "5/2016"}, {"body": "zpao thanks reason missed commented thanks repeating", "d": "5/2016"}, {"body": "add fragment api allow returning multiple components add fragment api allow returning multiple components add fragment api allow returning multiple components add fragment api allow returning multiple components add fragment api allow returning multiple components add fragment api allow returning multiple components add fragment api allow returning multiple components add fragment api allow returning multiple components", "d": "5/2016"}, {"body": "texttechne suggestion better instead introducing additional api react handle multiple root elements render", "d": "5/2016"}, {"body": "handling multiple root elements render would hard think means would array elements rather element due far understand instantiate multiple react elements mount multiple instantiated react elements reconcile markup produced good order think comes drawbacks might want get around reconciliation process want fragments elements fragments sugar syntax around transformations think fragment element alright need create new type internal node similar text nodes empty nodes right though nt know manage instance handle one roots unmounted handle update properly manage multiple roots inside devtools obvious answer fix devtools think fragment composite component difference exactly end duplicate code order implement fragments better implement sugar syntax order keep react internals pristine wondering playing around react internals around subtree question rendersubtreeintocontainer feel like somewhat related want render new subtree render new root fact support multiple roots tree level render new roots time hi would results two render new root call rather one call used wrapper right performance simplicity honest feeling touch react internals handle situation rather pull feat jsx improve jsx syntax disclaimer totally used react internals might parts nt fully understand nt understand apologies misunderstanding", "d": "5/2016"}, {"body": "edit fixingclarifying things also github mysteriously styles emails oddly reformat code block hi core mithril contributorcommitter tl dr fragments extremely hard even api internals simple way know experience difficult implement also requested multiple times mithril declined sheer difficulty every attempt implement failed least third test suite failing still working details vdom library planning writing treat everything fragment something literally write rendering portion scratch like react decoupled dom api significantly differ conceptually rendering catch fragments manage completely internally nt properly diff even useless example lets transform two trees rendering omitted fragment b class foo b class bar c b class foo fragment c correct transform replace elements element leaving rest untouched figuring nontrivial basically iterate fragment children ignoring fact fragment fragment gone handle hook semantics like nt remember react name hook still track fragments independently diff contents part parent fragment still keep track fragment position component sake words components longer intrinsically linked dom node instead linked corresponding fragment react like vdom libraries frameworks intrinsically couple component tree representation even expected types easiest way implement diff algorithm handles components decoupled separate bookkeeping nt initialize components initialize node two completely separate processes hard initially even harder add support afterwards", "d": "5/2016"}, {"body": "thanks words know hard still todo list asking enthusiastically wo nt make happen sooner janrywang", "d": "5/2016"}, {"body": "isiahmeadows fyi mithril rewrite branch support fragments spicyj welcome take look implementation tests nt already following whole diff engine loc hopefully easy follow", "d": "5/2016"}, {"body": "isiahmeadows think github ate part comment code block broken ca nt see passed first instance looks ok email though maybe found bug github", "d": "5/2016"}, {"body": "unfortunately github markdown handling behaves differently comment comes email edited comment remove blank line shows", "d": "5/2016"}, {"body": "forwarded original email support github hopefully fix parser", "d": "5/2016"}, {"body": "lhorie use array syntax fragment polyfill documentfragment", "d": "5/2016"}, {"body": "using pseudo wrapper element like html comment option thought way text nodes solved", "d": "5/2016"}, {"body": "thanks fixing comment spicyj address concerns isiahmeadows brought example new mithril engine follow semantics isiahmeadows suggested several reasons implementing semantics would make diffing significantly complex would make difficult reason keys keyrelated bugs since becomes possible key spaces bleed components even sibling subchild components would make fragment lifecycles nonintuitive eg example removed fragment new fragment created wrap c violates general principle lifecycles cascade meaning longer sure child node removed given parent node removed like previous point potential cause leakages encapsulation capabilities component hypothetically one run diff issues related diff engine adhering semantics applicationspace solution trivial wrapping fragment around offending node interested core team could expand note top hard current architecture seeing react mithril rendering engine fundamentally trying solve issues mithril support fragments degree believe feasible useful maybe implementing react might feasible different aspects semantics assessed separately potentially rejected like done mithril", "d": "5/2016"}, {"body": "note fixed comment made mistakes github nt well styling email responses frowning", "d": "5/2016"}, {"body": "primajin wondered suspect passed one element important make fragments composable see example however probably times want treat one unit perhaps expand fragments want iterate every child including children child fragments use want treat fragments opaque box work directly propschildren array element", "d": "5/2016"}, {"body": "lhorie nt involved rewrite though familiar intricacies busy fact one final week three next week plus working someone set internship college requires also focused finishing techtonic almost cli done test broken nt", "d": "5/2016"}, {"body": "isiahmeadows friendly reminder stay topic feel free use mithril gitter room want chat topics appsforartists perhaps reactchildrenmap expand fragments mithril stable something similar internally ie flattening subarrays moving away model due perf reasons also due historical headaches regarding vnode lists mixed keyed nonkeyed nodes might something consider", "d": "5/2016"}, {"body": "using pseudo wrapper element like html comment option thought way text nodes solved using production months uses comment wrapper approach fragments unambiguously nested", "d": "5/2016"}, {"body": "mwiencek possible use approach without custom react package", "d": "5/2016"}, {"body": "mwiencek comment wrappers even necessary would expect clever things fragments move element fragment sibling fragment root element recreated follow vdom tree order nt need comments anyway solution looks like exactly needed resolve issue first glance", "d": "5/2016"}, {"body": "strictly made implementation simpler instance", "d": "5/2016"}, {"body": "essentially currently possible create proper description lists react def description def description", "d": "5/2016"}, {"body": "kaistapel issue returning multiple components elements guess long function returns one root element component work ok ok", "d": "5/2016"}, {"body": "ggalansmithee well hardcoded yes loop print dtdd pairs sad also goes tables rowspans since render two elements", "d": "5/2016"}, {"body": "top valuable use cases already written comments eg know ca nt put elements", "d": "5/2016"}, {"body": "updates", "d": "5/2016"}, {"body": "closed indicates one looking uses react works iphone someone post example broken", "d": "5/2016"}, {"body": "spicyj works iphone mean click instantly recognized touch delay", "d": "5/2016"}, {"body": "oh totally misunderstood expected get click delay onclick handler bug tracking clicks nt work ios use something like reacttappable listens touch events script like fastclick", "d": "5/2016"}, {"body": "spicyj yeah using reason though react brings something get rid", "d": "5/2016"}, {"body": "might take look thoughts probably want show suggestion check fails functions right alright condition showing message would valuable also attempt something like checking name property bound checktype looks like unminified proptypes functions", "d": "5/2016"}, {"body": "adding support mean time anyone interested workaround needed able support came return", "d": "5/2016"}, {"body": "chrome issue closed pretty clearly work chrome react", "d": "5/2016"}, {"body": "fix yet", "d": "5/2016"}, {"body": "issue example", "d": "5/2016"}, {"body": "solution issue", "d": "5/2016"}, {"body": "hi tried use reactdomunmountcomponentatnode documentgetelementbyid abc gives following warning warning unmountcomponentatnode node attempting unmount rendered react toplevel container instead parent component update state rerender order remove component", "d": "5/2016"}, {"body": "amitjamwal node passed must one previously passed warning says want unmounting container node renderered node managed react defined component method unmount inner node managed react use described", "d": "5/2016"}, {"body": "confused use unmountcomponentatnode chenglou said pass container component targetdom itbut parent component displays want remove apple component retain grapes tried use unmoutcomponentatnode like still return falseis container", "d": "5/2016"}, {"body": "jashonwang usage questions asked stackoverflow use github issues tracking bugs react core", "d": "5/2016"}, {"body": "jimfb alright thanks", "d": "5/2016"}, {"body": "jashonwang comment covers exactly scenario", "d": "5/2016"}, {"body": "quite bit unexpected serverside react ca nt actually render whole page", "d": "5/2016"}, {"body": "spicyj want note bug impossible erase char backspace credit card input cursor end right space", "d": "5/2016"}, {"body": "guria thanks pointing", "d": "5/2016"}, {"body": "referencing comment", "d": "5/2016"}, {"body": "adhoc element dangrous nested component react event event wo nt stopped", "d": "5/2016"}, {"body": "would great addition example want handle triple click generic way wrap component another wrapper would also output another element like jsx class tripleclickwrapper extends component render return onclick e gt counts clicks handles timeouts etc calls propsontripleclick somewhere else nt want use inject new props contained component might already event currently solution bind new events without new element without altering nested component using regular dom events stated andreypopp nt goodies react event system something like jsx class tripleclickwrapper extends component componentdidmount dom node actually refers whatever component nt dom nodes reactdomfinddomnode addeventlistener click thisonclick false componentwillunmount reactdomfinddomnode removeeventlistener click thisonclick render return reactchildrenonly thispropschildren onclick e gt counts clicks handles timeouts etc calls propsontripleclick imagine jsx class tripleclickwrapper extends component componentdidmount thisaddevent onclick thisonclick also autoremove unmount render return reactchildrenonly thispropschildren onclick e gt counts clicks handles timeouts etc calls propsontripleclick", "d": "5/2016"}, {"body": "sorry comment closed issue ever implemented see react nt converted warned made fiddle convenience", "d": "5/2016"}, {"body": "want use custom attribute prefix data seems nwjs recognizes extra prefix etc could thanks", "d": "5/2016"}, {"body": "fritx", "d": "5/2016"}, {"body": "jayphelps thanks pointing comment many figure movement still movement tried workaround work util later found another issue thanks buddy great effort guess problem nwjs", "d": "5/2016"}, {"body": "still wonder entirely equivalent stuff still tiny difference two definition btw gitblamesomeoneelse awesome plan fake funny commit prj smile janhancic", "d": "5/2016"}, {"body": "fritx using inside different using react jsxvirtual dom sense happens element already inserted dom depending library works might impact things find often decide worth integrate library incompatible react best create wrapper react component create real nodesuse plugins insert inside like regular javascriptjquery remember clean nt ideal personally take reality nt always ideal approach getting work done also nt personally knowledge progress react supporting arbitrary attributes discussed", "d": "5/2016"}, {"body": "btw gitblamesomeoneelse awesome bash beginner kind research eventually created gitgreensomeoneelse heavily inspired gitblamesomeoneelse hope guy enjoy missing something let know ps fond taking friends force project looks active lol", "d": "5/2016"}, {"body": "another use using react perform server side rendering google amp pages google amp requires info currently react removes amp attributes thoughts", "d": "5/2016"}, {"body": "think interface really nice future interface polished made public interface devs happy stability think would make good solution issue range nonstandard properties reason used react fairly narrow interface could create libraries would inject support nonstandard properties attributes react library could inject attributes library could inject attributes library could support attributes perhaps support actual properties kinds libraries could whitelisting attributes could better integrate react library tied", "d": "5/2016"}, {"body": "libraries integrating using attributes", "d": "5/2016"}, {"body": "sebmarkbage conflicting libraries could use one like tried use angular twice another library used attributes dom used two react components defined used string type context parameter named two different purposes", "d": "5/2016"}, {"body": "sadly following snippet work ideas resort string replacement ca nt get react allow attribute update turns workaround nt working nt applied react module actually loaded dependency project managed get workaround work", "d": "5/2016"}, {"body": "server renderer alternative way fix particular problem unfortunate fix isolation spawned new issue", "d": "5/2016"}]