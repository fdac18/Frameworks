[{"title": "render multiple models breaks dependencies controllers needs api", "body": "javascript app template parent appparents appparents contains multiple parent objects render parent parent parent template child children parent several children render child child appchildcontroller emberobjectcontrollerextend needs parent seems needs child controller reference right parent controller new parentcontroller created ember children know related parent model example expected looking code seems since parentcontroller singleton referenced app container therefore childcontroller needs ember creates new parentcontroller link model properly maybe misunderstanding supposed work", "num": "2376", "d": "3/2013"}, {"title": "wikipedia emberjs article clarify", "body": "bug issue important project communication issue wikipedia article emberjs pretty obscure focusing sproutcore timeline nothing said embers usages specificities etc wikipedia entry really confusing sproutcore sproutcore really emberjs embers js relationship emberjs handlebarsjs please may go ahead clarify bit introduction project last least also receive encouragement yug wikipedia", "num": "2374", "d": "3/2013"}, {"title": "bindattr contenteditable working", "body": "quick issue trying nt work works well replacing contenteditable class would emberjs cares attribute arbitrary way contenteditable attribute around since quite useful thanks", "num": "2369", "d": "3/2013"}, {"title": "deprecated", "body": "hi added emberjs project via emberrails gem notice showed console running chrome dev ember handlebars jquery best regards", "num": "2366", "d": "3/2013"}, {"title": "history based location working safari", "body": "approuterreopen location history works fine chrome firebox url updating safari updates fine using however another website using backbone pushstate working fine safari", "num": "2365", "d": "3/2013"}, {"title": "nt render outlet within render", "body": "ca nt render outlet view rendered render helper html outlet info render details javascript rendertemplate function thisrender iteminfo outlet info", "num": "2361", "d": "3/2013"}, {"title": "proposal resource routes auto determine models", "body": "interest pushing convention configuration following automatically set function would developer decide function overridden", "num": "2360", "d": "3/2013"}, {"title": "invalid record handling", "body": "sure guys saw posted one replied get thoughts matter please", "num": "2356", "d": "3/2013"}, {"title": "observing child views seems broken", "body": "exactly sure causing atm really seems like bug stackoverflow question posted couple weeks ago christopher swasey seems good insight op comments nutshell effectively observe changes child views observing method fires seems get oldstaleoutdated version", "num": "2355", "d": "3/2013"}, {"title": "jasmineclock emberrunlater incompatible", "body": "found jasmineclock mockup emberrunlater incompatible see example quite sure issue ember jasmine", "num": "2349", "d": "3/2013"}, {"title": "turn routing global template application", "body": "hello would nice use power emberjs routing global template like application trying use emberjs one component page manage whole site thought emberjs would nice potability use power ember wide problems specter thank sergey", "num": "2348", "d": "3/2013"}, {"title": "make api sections bookmarkable", "body": "would really useful sections api docs easy bookmarkshare like guides section", "num": "2346", "d": "3/2013"}, {"title": "logging option controllerviewtemplate creation", "body": "new ember apologies well trodden ground found picking things made much harder lack logging options framework understand ember magically creates viewscontrollers present able see happen logs makes debugging issues much harder needs way switch logging bindings routing think would hugely beneficial offer logging template view controller creation something along lines looking examplecontroller examplecontrollerfound looking exampleview exampleview found looking exampletemplate example template found looking anothercontroller anothercontroller found generated anothercontroller perhaps dig deeper ember find ways keep eyes someone trying understand framework definitely would made life much easier", "num": "2345", "d": "3/2013"}, {"title": "transitiontoroute keydown triggers keydown event transitioned routes view", "body": "hi following example element rootview handler bound transitions another route otherview certain key pressed capital k example otherview input field gets focus right otherviews element got inserted app coffeescript windowapp emapplicationcreate approutermap gt route filters appapplicationview emviewextend keydown event gt eventkeycode get controller send transitiontoroute filters appfiltersview emviewextend didinsertelement gt input focus templates html please click following div press k key information outlet filters view emtextfield problem keydown event triggers transition seems get triggered second views text field well pressing k k appears second views textfield working demo may need hit run button", "num": "2344", "d": "3/2013"}, {"title": "render model nt work inside", "body": "even though fixes case manually using multiple times still nt work fails", "num": "2340", "d": "3/2013"}, {"title": "callback coalescing tests brittle", "body": "failure test", "num": "2339", "d": "3/2013"}, {"title": "documentation computedproperty cachable outdated", "body": "code sample nt call cachable nt everything cachable default love needed", "num": "2329", "d": "3/2013"}, {"title": "needs work inside case", "body": "think really common situation developer uses inside wants possibility access childcontroller parentcontroller worked stopped worked commit using inside childcontroller instead needed instance getting newly created made small investigation looks like error happens childcontroller container parent code function key inheritingdict method var dict thisdict return false cause creation new instance used code reproduce issue template contollers", "num": "2327", "d": "3/2013"}, {"title": "route model method never called", "body": "jsfiddle example open project projectsprojectkeywordsindex appprojectroute model method called appprojectroute setupcontroller called normal", "num": "2323", "d": "3/2013"}, {"title": "embernamespacecreate overrides existing namespace", "body": "used custom namepace function previously one things liked fact could declare namespace everyfile forget current embernamespacecreate check name space already exists problem file embernamespacecreate emberobjectcreate file b nt need declare namespace lets say namespace created original object inside file overwritten might say would need declare two places consider example lets suppose namespace declaration file indexhtml shuffle order script tags dependency issues file b loaded first immidiately error cause non existant trying create member inside find file declared namespace move namespace declaration file b instead something check see namespace already exists would better declare namespace concerned files forget", "num": "2320", "d": "3/2013"}, {"title": "support precompiler", "body": "since emberjs ships customized handlebarsjs would nice precompiler since emberjs goal make development complex apps simple would fair expect complex single page apps declare templates single html file kind beats purpose advocating big framework", "num": "2319", "d": "3/2013"}, {"title": "nested index route gets overwritten parent implicit index route", "body": "given route definition would expect route higher precedence implicit route gets created currently inspect find last handler contain array", "num": "2318", "d": "3/2013"}, {"title": "action helper causing memory leak", "body": "issue may ca nt reopen investigating memory issues new ember app see post forum think action one possibly culprit test using ember implementation todomvc try creating todos check number delete todos recheck see number changed think problem resides way action helper linked registered actions view idea view clear render registered actions deleted todomvc app concrete view encapsulates individual todo consequently registered actions linked top level view refreshed todo deleted causing registered actions deleted keep associated destroyed view causing leak sure handle problem pr may desired behavior consequently may fixed documentation", "num": "2316", "d": "3/2013"}, {"title": "make linkview class public", "body": "small issue want make linkview class public packagesemberroutinglibhelperslinktojs make things like", "num": "2315", "d": "3/2013"}, {"title": "linkto hardcoded css class active", "body": "discovered hidden feature linkview used linkto handlebar helpers add css class active html element given route linked active questions route active find anything ember guides remove feature annoying ember decides use simple case frequently used css class name functionality neither documented obvious understand correctly linkview even public class could reopen fix hidden private construct specific reason solutions problem would suggest remove active feature linkview make sure people need could add extendingreopening linkview", "num": "2314", "d": "3/2013"}, {"title": "setting sibling view computed property causing rerender error", "body": "building form elements dynamically following view idea set element label proper view name passed view proper value call page renders get correct value however setting function computed property throws seems getting causes view attempt rerender render prior intended render", "num": "2311", "d": "3/2013"}, {"title": "api improvement consistent parameter naming", "body": "option option naming consistent ie", "num": "2309", "d": "3/2013"}, {"title": "deprecate eachproxy get", "body": "understand wycats tomdale used actually seem work properly see instance code deprecate", "num": "2305", "d": "3/2013"}, {"title": "needs bindings objectcontroller", "body": "jsfidle example create controller error set content controller project always empty controllersproject exist", "num": "2304", "d": "3/2013"}, {"title": "property chains raise error intermediate value undefined", "body": "computed alias like yes know long probably correct could gets job done alias defined controller controller manages error switching emails get lovely error call method split undefined comes method method chain returning undefined breaking things however basically impossible track property undefined tried trigger error able trigger error two code snippets funny thing happening around well property chain observers generate chains exist generated contentundefined case question using aliases correctly create property build guards", "num": "2301", "d": "3/2013"}, {"title": "bug two blocks similar nested helpers render content blocks", "body": "hi template handlebars appalwaystrue appalwaystrue hey hey appalwaystrue appalwaystrue yeah yeah output hey hey yeah yeah outputs hey hey hey hey created simple jsbin shows issue sebastian", "num": "2300", "d": "3/2013"}, {"title": "syntax error", "body": "instead using", "num": "2298", "d": "3/2013"}, {"title": "ember checking wrong version pattern handlebars", "body": "ember checking version name handlebars uses dash version name version check inside emberjs looking using", "num": "2297", "d": "3/2013"}, {"title": "partial template lookup use container lookup", "body": "currently partial helper looks embertemplates instead looking template via container consistency templates looked changed", "num": "2295", "d": "3/2013"}, {"title": "assertion failed ember handlebars requires handlebars greater", "body": "using ember version handlebars version use include two files get uncaught error assertion failed ember handlebars requires handlebars greater console", "num": "2288", "d": "3/2013"}, {"title": "observing property containerview dependent eachblah fails breaks certain aspects containerview", "body": "see fiddle clear problem arises computed property depends property observer binding either property another property line ultimately depends first property update simply directly observing without intermediary computed properties exact behaviour observer never fire length property gets reported regardless true value remove observes length property restored additional chaining computed properties place observer effect binding effect", "num": "2283", "d": "3/2013"}, {"title": "emberrunnext autowrap emberrun", "body": "write omit get runloop error test suite reason nt automatically wrap function", "num": "2281", "d": "3/2013"}, {"title": "access around subcontrollers guard null", "body": "seeing lot errors upgrading latest emberrails gem includes ember version version last commit well using version version last commit getting lot seems occur near line fact subcontrollers null application call inside fails etc seems like setting embera every turn somehow null fix used set embera initially line instead null everything proceeds work expected", "num": "2280", "d": "3/2013"}, {"title": "router redirect problem", "body": "hi stumbled upon strange router behavior think bug old router used initalstate property route class tell router default sub route porting app new router since initialstate available anymore wrote something similar example wrote routewithparentmemory class adds defaultroute property redirect route activated additionally update parent route defaultroute last used sub route two fiddles using redirect overriding setup second example want achieve opinion first using redirect first last outlet get rendered screen example redirecting directly route leaf causes outlets connect example opinion kind inconsistency behavior hope described understandable way", "num": "2277", "d": "3/2013"}, {"title": "application store property defined", "body": "ca nt understand happening error file appjs javascript windowapp app emberapplicationcreate appstore dsstoreextend revision appproducts dsmodelextend title dsattr string description dsattr string style dsattr string var products appproductsfind", "num": "2275", "d": "3/2013"}, {"title": "router triggering views nested resources", "body": "route like visiting example eventsindexview triggered change route visit url eventsindexview triggered", "num": "2272", "d": "3/2013"}, {"title": "containerview throws error add childview init method", "body": "new able add childviews init method throws error jsfiddle", "num": "2271", "d": "3/2013"}, {"title": "setting tagname metamorph helper create nonmetamorph specified tagname", "body": "see context", "num": "2270", "d": "3/2013"}, {"title": "control helper fails content parent objectcontroller changes", "body": "hi using experimental control helper view controller content changes parent objectcontroller ember throws error function fiddle showing problem action something wrong way use helper", "num": "2268", "d": "3/2013"}, {"title": "rerendering application view possible", "body": "hi reasonable explanation rerendering fiddle working background need adapt application certain runtime events fire views used app may render differently events fire therefore easiest way achieve rerender root view hierarchy subordinary views also rerender onviously works post consider bug least issue documented thanks", "num": "2267", "d": "3/2013"}, {"title": "ember rc ca nt support", "body": "hi project need support lumia windows mobile phone issue lumia get error parentnode null object know maybe ie ca nt support parentnode property idea ie otherwise edit ember source code thanks", "num": "2264", "d": "3/2013"}, {"title": "routes ability change page title", "body": "love able define titles html page routes entering route title would update value something like would great would perfect magical could enable sort bindings could say title like unread posts like gmail", "num": "2262", "d": "3/2013"}, {"title": "bindattr", "body": "viewscreens string array works desired error uncaught typeerror objectdefineproperty called nonobject works different output hope missing something suspect bug", "num": "2259", "d": "3/2013"}, {"title": "app becomes ready soon", "body": "compiled latest version emberjs contains bug fixes needed however app becomes readyinitializes immediately app declaration anything declaration never gets processed example jsfiddle using compiled version emberjs version last commit", "num": "2250", "d": "3/2013"}, {"title": "outlets use class id attributes template tag", "body": "since outlets basically way stating place instead outlet tag assumed could pass tag options could pass view imagine surprise found yes could pass property like view property see jsfiddle working correctly view outlet would look identical annoying someone likes keep markup separate code give view rendered outlet class either define view definition code flies face separation concerns b use wrapper div either around outlet around view template pollute markup hopefully issue fixed easier write cleaner templates result cleaner html", "num": "2248", "d": "3/2013"}, {"title": "proposal expose cp possibly semantics", "body": "tl dr important expose cp templates bind properties leaf routes let discuss possibility bubbling semantics bindable properties possibly via something like motivation old router nice pattern could bind property current route within template via widgets imagine stepbystep howto ui explanation facilitated variety clean statebased patterns less code less error prone alternative toggling attributes controller limited though fact leaf route could queried properties way apply bubbling semantics binding words could nt parent route set true bubble parent route value assuming child routes nt override value nowadays nt seem way bind property current route even nonbubbling leaf route add back probably cp bring back old approach also like investigate whether conceptually clean way could allow bubbling semantics presently rather binding directly property could specify something like would bind leafiest would allow specify properties shared child routes parent route higherlevel templates application would able say things like allowing various leaf parent routes able hide navigation makes sense without toggle within seems backbony messy error prone conceptually seems clean powerful implementationwise perhaps much seems like usher minor form chain invalidation logic full cp bindings deal might worth getting point like hear arguments concept general", "num": "2245", "d": "3/2013"}, {"title": "seems cause dreamweaver crash scanned", "body": "script tag inserted page using dreamweaver editor dreamweaver automatically read scan file appears cause dreamweaver crash scan totally bizarre far tell prevents use dreamweaver application developing ember web applications using rc files problem occur earlier releases dreamweaver mac os x", "num": "2244", "d": "3/2013"}, {"title": "proposal require leading underscore partial templatename", "body": "unlike rails refactoring path template used partial becomes template used render refactor require file rename furthermore legitimate cases using render inside partial lead confusing case templates named underscores templates named without underscores nested within currently use partial template registered without leading underscore works deprecated propose deprecation warning removed", "num": "2242", "d": "3/2013"}, {"title": "linkto helper notice changing emberdata id", "body": "linkto helper pass emberdata model newly created id links routenamenull far good persist model database model gets id link notice new id stays persist model template", "num": "2241", "d": "3/2013"}, {"title": "observing property breaks existing bindings property", "body": "code looks like works expected whenever properties property list function change embedcode properly updated however simply add function observe embedcode property embedcode property stops binding properties seemingly unpredictable fashion handlebars code binding property looks like works fine add observer embed code updates properties property list update ignores properties seems like adding observer nt effect properties cause binding fire unless something really stupid thanks", "num": "2239", "d": "3/2013"}, {"title": "action helper nt obey disabled", "body": "clicking following button nt anything", "num": "2238", "d": "3/2013"}, {"title": "bound block helper updating view", "body": "hi following code following template display playing thissortnbr controllercurrenttracksortnbr problem view rerender playing rendered view gets rerendered event playing suddenly appears", "num": "2237", "d": "3/2013"}, {"title": "consolidate logging flags", "body": "", "num": "2236", "d": "3/2013"}, {"title": "back button broken refresh using history location type", "body": "using history location type app works perfectly fine manually refresh browser click back button ember nothing enabled refresh see transitioned message click back button additional messages logged url changes expected browser stays page refreshed using default hash location type back button works perfectly fine even full refresh example click switch pages link couple times refresh try going back", "num": "2234", "d": "3/2013"}, {"title": "implement helper testacular", "body": "want able run functional tests something like js describe phonecat app function describe phone list view function beforeeach function browser navigateto appindexhtml need port ngscenario ps example ember application tests", "num": "2232", "d": "3/2013"}, {"title": "linkto nt bind", "body": "model change string id updated link feature binding nt work linkto big bug", "num": "2231", "d": "3/2013"}, {"title": "embercontroller nt exist", "body": "want try emberjs follow guide suggests controller object type extend embercontrollerextend version nt work simply try consolelog embercontroller undefined", "num": "2230", "d": "3/2013"}, {"title": "documentation dsattr something", "body": "think explanation dsmodel first ca nt find data type dsattr datatype use integer datetime described database second ca nt find type dsattr datatype first deal dsattr datetime thought string tried use string manipulate function first time date object obviously learned docs things entry user would use ember easily", "num": "2227", "d": "3/2013"}, {"title": "deferred view removal animation route change", "body": "route changes using anchor created linkto someroute current view outlet immediately destroyed seems way deferred view removal checked issue default animation set seems good think also way somethings like hook set removal animation view think animation crucial part user experience", "num": "2226", "d": "3/2013"}, {"title": "callback view lifecycle willdestroyelement", "body": "reason nt rely upon callback case wish jquery effect view element run element destroyed would easiest callback fire callback effect function current implementation destroys function completes suggested observe boolean use case run animation based upon changing state boolean nt think suitable solution see discussed reverted clear dismiss container view would allow one target specific views instead views current solution missing bigger picture work callback", "num": "2224", "d": "3/2013"}, {"title": "documentation mention jquery dependency", "body": "hi started looking ember read info emberjscom started hello world app believed got setup properly wouldnt work stackoverflow question realised needed reference jquery nowhere emberjscom website mention need reference jquery get work", "num": "2223", "d": "3/2013"}, {"title": "conditionalbinding feature", "body": "would interest conditionalbinding modifying emberbinding include pausing feature took stab conditionalbinding following jsfiddle use like var emberobjectcreate value var emberobjectcreate valuebinding conditionalbinding fromvalue pauseiftrue pausingproperty default onresumesetbothto latest pausingproperty false set true binding synchonized either direction upon resume binding synchronized latestwins also use explicitly set synching want pause one direction add", "num": "2220", "d": "3/2013"}, {"title": "require statement remains compiled emberjs", "body": "change occurred specifically require statement present emberjs file built interferes gruntbased build system using specifically neuter plugin based neuter plugin detects statement tries replace local file named nt exist causing javascript handlebars amp amp typeof require function handlebars breaks loaded browser supposed included compiled version emberjs way include statementmodule final output currently work around editing file remove require statement manually", "num": "2213", "d": "3/2013"}, {"title": "property caching", "body": "stumbled across issue tracking seems different issue ember post one nail better seems like property caching issue ember well could problem emberdata really sure point please feel free move emberdata repo needs tl dr ember seems cache length properties least object arrays bit aggressively jsfiddle bug action output console make sure open basically fetches array models adds object fact checks reported length object toggling line truefalse illustrate slightly different behavior makes think caching issue line set get asynchronous operation result first check length property returns ajax request nt returned yet second batch tests occurs initial load completes original dataset models notice tests still show length next blocks tests length tests add new object subsequently remove object finally remove one original objects change line get synchronous operation first set tests immediately show original dataset models subsequent addition removal models tofrom array yields mismatched results length array cases middle ish tests consistently retain first reported value first last tests appropriately reevaluated", "num": "2211", "d": "3/2013"}, {"title": "linkto inside view helper issue", "body": "refer code code given inside linkto helper inside view helper stored somewhere template payroll eventhough nothing given inside linkto helper inside second view template first linkto displayed view linkto payroll payroll linkto view view linkto payroll linkto view output payroll link payroll link", "num": "2210", "d": "3/2013"}, {"title": "lastest ember rc run version internet explorer", "body": "want know whether lastest version rc run internet explorer", "num": "2201", "d": "3/2013"}, {"title": "documentation incorrectly implies lastobject method", "body": "enumerable page snippet sample code running throws exception typeerror property lastobject object b c function code", "num": "2196", "d": "3/2013"}, {"title": "emberjs requirejs", "body": "hi read stackoverflow questions issues related use ember requirejs together still nt found good solution know introduced activate method way delay configexecutionrendering matched route tried require modules files inside active method problem meanwhile require loading files ember move noticed controlerview route creates part ember convention time files loaded ember configured rendered view created rerender view lose setupcontroller hook problably something workaround created subclass emberroute follow route using works keeps giving warning think ember allow elegant easier way considering number questions alike would well received problem described details", "num": "2194", "d": "3/2013"}, {"title": "proposal add", "body": "proposal add allowing specify properties nt overridden subclasses attempts throw error useful preventing antipatterns surprises general overriding meant truly private api embercoreview emberobjectextend emberevented reservedproperties states whatever else states states proposed writing following would yield requesting feedback idea general also specific pain points idea applied ember core", "num": "2192", "d": "3/2013"}, {"title": "documentation getpath seems missing", "body": "example using event bubbling section guide could nt find documentation getpath method api page", "num": "2191", "d": "3/2013"}, {"title": "stack overflow controllers circular dependency", "body": "ember raises rangeerror maximum call stack size exceeded using controller circular dependency need jsfiddle", "num": "2190", "d": "3/2013"}, {"title": "documentation incorrect emberhandlebarshelpersaction", "body": "displays documentation render helper instead action helper", "num": "2189", "d": "3/2013"}, {"title": "emberhandlebarscompile undefined", "body": "trying run todo example latest rc getting following error line build jsfiddle replicating bug believe based jumping chrome console line error", "num": "2188", "d": "3/2013"}, {"title": "short hand equivalent computed property observing lists", "body": "lot code like short hand succinct way expressing common type expression ie users userslength", "num": "2187", "d": "3/2013"}, {"title": "nested routes rendering templateoutlet breaks browser back button click", "body": "nested route hierarchy need application track user model selections trying use main application template route render single outlet template works traverse route hierarchy parent child however click browser back button go back route hierarchy parent route rendertemplate hook nt fire results child unhooked outlet nothing rendered back fiddle example click links traverse routes click browser back button application template rendered nothing hooked outlet way force rerender going wrong way", "num": "2186", "d": "3/2013"}, {"body": "thanks reporting building ember nt part", "d": "3/2013"}, {"body": "yes building", "d": "3/2013"}, {"body": "looks like two run loops inside ajax response could investigate", "d": "3/2013"}, {"body": "seeing anything like exactly investigate", "d": "3/2013"}, {"body": "code using emberdata", "d": "3/2013"}, {"body": "yes using emberdata", "d": "3/2013"}, {"body": "ember sproutcore little common current article likely confuse anyone new either especially since redirects well", "d": "3/2013"}, {"body": "let clarify move ahead wikipedia article version sproutcore amp version emberjs relationship fork relationship know know wikipedia", "d": "3/2013"}, {"body": "others community better articulate fit address issue answer question definitely fork relationship emberjs started sproutcore evolved way made since rename ember sproutcore emberjs maintained independently", "d": "3/2013"}, {"body": "recorded relevant history question", "d": "3/2013"}, {"body": "ok forked article sproutcore one side emberjs think emberjs enough notability stand wikipedia article key factors play comming weeksmonths article reviewed wikipedians nt know field may critical article least content coherent ask delete move things wish good luck article expand", "d": "3/2013"}, {"body": "luke amp community would good emberjs community create historytxt file within ember github project wikipedia got reliable source expand wikipedia article", "d": "3/2013"}, {"body": "create jsfiddle jsbin us isolating behavior seeing updated todomvc example use works relevant template code example doubleclicking todo makes true becomes editable", "d": "3/2013"}, {"body": "hey trek thank answer made quick jsfiddle sure works case example thanks", "d": "3/2013"}, {"body": "set isediting flag string true boolean least worked", "d": "3/2013"}, {"body": "suspect related namespace lookup code", "d": "3/2013"}, {"body": "hi bugsinamber could perhaps provide jsfiddle us verify thanks", "d": "3/2013"}, {"body": "hi expecting index url change thank", "d": "3/2013"}, {"body": "agree make sense especially since already", "d": "3/2013"}, {"body": "envision behaving way nested routes inside posts resource would model automatically set postsindexroute would automatic model setting case", "d": "3/2013"}, {"body": "jasonkriss would think", "d": "3/2013"}, {"body": "heads nt ember issue specific ember data", "d": "3/2013"}, {"body": "completely right put wrong place thanks moved", "d": "3/2013"}, {"body": "condensed version comments ticket virtual view wrapping view array contains children consider wrapping view parent creates view new content item newly created view notifies array changed array changed observer wrapping view fires even though array proxy actually yet unchanged", "d": "3/2013"}, {"body": "added comprehensive answer achieve result emberish way think issue closed", "d": "3/2013"}, {"body": "sebastianseilund might better solution kogi initial problem still underlying bug opinion observing view containing work expected intended nt seem dispute", "d": "3/2013"}, {"body": "design specifically changed work way pull request idea want guarantee wrapping code run separate run loop even timer expires time current run loop finishes might seem like surprise rare case timer expires current run loop finishes important preserve deterministic guarantee fires separate loop would fire immediately current run loop certain worth documenting lot words describe esoteric scenario would probably damage good people understanding run loop open persuasion", "d": "3/2013"}, {"body": "sergxiiith mean without routing global template", "d": "3/2013"}, {"body": "wagenet yep update original message sorry misspell", "d": "3/2013"}, {"body": "ca nt routing turned pretty sure saw test", "d": "3/2013"}, {"body": "wrong repo bad", "d": "3/2013"}, {"body": "working something along lines unfortunately nt yet chance get finished merged", "d": "3/2013"}, {"body": "got working changing", "d": "3/2013"}, {"body": "okay still interesting doesnt work one thing add must something runloop also works either transition call happens example would append k supposed like bug", "d": "3/2013"}, {"body": "ohcibi setting event handlers inputs like generally recommended instead observe value ember already sets certain event handlers imagine ordering expect", "d": "3/2013"}, {"body": "wagenet point input field used input make example easier real app first input li tab index thus focused letter k actually button remote control emits keycode kkey normal keyboard pressed writing phone update example shortly make point clear", "d": "3/2013"}, {"body": "wagenet updated issue problem without input field whichs value change one could capture least something missing documentation trigger transitions properly without user click links", "d": "3/2013"}, {"body": "believe fixed", "d": "3/2013"}, {"body": "merged fixed let know", "d": "3/2013"}, {"body": "machty ideas", "d": "3/2013"}, {"body": "test particular others occasionally fail", "d": "3/2013"}, {"body": "think rely runtime scheduler", "d": "3/2013"}, {"body": "could tests depend scheduler", "d": "3/2013"}, {"body": "everything indeed cacheable default make property cached theory property volatile guess could make cached though seems bit odd", "d": "3/2013"}, {"body": "common point confusion actually way suppose work see better explanation also heads type question probably better stackoverflow let core team focus energy", "d": "3/2013"}, {"body": "jasonkriss good reference thanks going leave open mark documentation issue since something many people confused", "d": "3/2013"}, {"body": "closed", "d": "3/2013"}, {"body": "html shuffle files around except first one course would save writing files", "d": "3/2013"}, {"body": "interesting workaround sounds better ember support multiple levels deep namespaces seeing problem namespacing", "d": "3/2013"}, {"body": "seems really odd trying declare namespace independently multiple files namespaces intended global nt think something specific interest supporting think technically supported nested namespaces though nt know recommended specific problems maybe file new issue", "d": "3/2013"}, {"body": "precompiler precompilation process actually nt terribly difficult set well need document better though sounds like want build tools though independent precompiler instead defining templates html file assign set build tools find files wrap like use ember", "d": "3/2013"}, {"body": "build tools like", "d": "3/2013"}, {"body": "think want set name straight forward write pr test accept right away", "d": "3/2013"}, {"body": "right works proposed fix however name comes gets prefixed parent currently testing exposing option route", "d": "3/2013"}, {"body": "closing favor pr", "d": "3/2013"}, {"body": "fixed", "d": "3/2013"}, {"body": "confirm fixes issue one closed thanks lot sebastianseilund", "d": "3/2013"}, {"body": "fixed", "d": "3/2013"}, {"body": "igoralekseev many times", "d": "3/2013"}, {"body": "", "d": "3/2013"}, {"body": "covered", "d": "3/2013"}, {"body": "changing would break peepcode emberjs integration test mentioned ember camp", "d": "3/2013"}, {"body": "thanks comment etrom answer question seriously speaking emberjs general application framework may impose css classes used used application", "d": "3/2013"}, {"body": "haha get break publicly document api guess api guides seriousness think cost vs benefits weighed ember right effective answer effective effective one could argue right disregarding emberdata effective getting new users onboard quickly without frustration see point nt get wrong thinking pain new user watching peepcode screencast might encounter active table nt turn black screencast like first cool thing see happen automagically watching peepcode screencast could argue side though make good point although seems less important right new people loving experience getting running", "d": "3/2013"}, {"body": "got point peep screencast important see youtube views could assume people devs would try reproduce iam one never saw video problem happen using emberjs develop larger aka ambitious emberjs application expect ember careful markup styles understand hardcoded values surprisingly appear markup something like really nt want move discussion right effective area imho hardcode style names changed patching source professional professional see thing framework creating ambitious web applications", "d": "3/2013"}, {"body": "zubairov route marked active enter also believe linkto helper ca nt override make linkviewextend active css class abstract enough global comes really useful probably removeclass jquery nt want view specific selectoruse", "d": "3/2013"}, {"body": "ulisesrmzroche thanks comment nt see point sorry hacking attributes jquery sucks sorry", "d": "3/2013"}, {"body": "zubairov overriding helper nt work either", "d": "3/2013"}, {"body": "ulisesrmzroche right see link source code first comment linkview private class ca nt reopen", "d": "3/2013"}, {"body": "nt think linkto helper though instantiates whole view seems like could put view class configure stuff feel linkto active convention", "d": "3/2013"}, {"body": "customize active class linkbylink basis even class using", "d": "3/2013"}, {"body": "bradleypriest would good able override appwide active ok app prefer isactive fit naming convention rest css would handy regard", "d": "3/2013"}, {"body": "namespace like ember already emberview class make emberactive emberlinktoactive", "d": "3/2013"}, {"body": "seanabrahams doubt default change close would break peepcode integration test amongst things", "d": "3/2013"}, {"body": "surprised see peepcode motivation emberjs work realised one pay usd get access emberjs peepcode tutorial know open source monetization models usually indirect selling books consulting etc people creating maintaining open source product families wondering wherever peepcode indirect incentives causes much issues fixing obviously raw feature", "d": "3/2013"}, {"body": "zubairov past year many blog posts tutorials videos become quickly date changes ember frustrating trying learn framework ember core decided peepcode video line drawn sand unless absolutely necessary tutorials point remain correct extent integration test made around code video anyone reading writing articles blog posts etc ember confident wo nt rug pulled", "d": "3/2013"}, {"body": "rlivsey thanks quick reply important personally company use committed emberjs know decisions made ember core clear governance rules transparency decision making important every open source project", "d": "3/2013"}, {"body": "linkview public", "d": "3/2013"}, {"body": "awesome thanks making public still convinced respect emberjs right use css classes obvious names hope issue associated discussion raise awareness", "d": "3/2013"}, {"body": "created jsbin recreate problem check errors javascript console", "d": "3/2013"}, {"body": "bcardarella really scaring", "d": "3/2013"}, {"body": "never mind poor implementation found better way want suspect might still bug", "d": "3/2013"}, {"body": "bcardarella problem jsbin example occurs second view triggers computed property first one change time first view state rerender allowed changed order views example would work solution problem could put property controller would created view starts rendering instead particular case hard tell based example gave", "d": "3/2013"}, {"body": "pasting transcript joliss still sure understand exactly controllers supposed used general one hand supposed access models hand stuff like view people itemviewclass apppersonview means view going controller end viewcontentfirstname template rather firstname wonder autoinstantiating controllers somehow maybe late kind change ca nt help feel way controllers still bit strange kselden think auto instantiate think concept render routes consistent controller hierarchy backs view would create child controllers inside controller kind like angulars scope question time really hoping rope ghempton issue since app component based controller hierarchy workaround main pain point ember data", "d": "3/2013"}, {"body": "maxkazar correct way set content declaring basically property nt explicitly defined proxied content assume case nt want proxy explicitly define also instead using binding want", "d": "3/2013"}, {"body": "twinturbo seems bad assume master", "d": "3/2013"}, {"body": "c mar pm stefan penner notifications githubcom wrote twinturbo seems bad assume master reply email directly view github", "d": "3/2013"}, {"body": "friendly fiddle reminder", "d": "3/2013"}, {"body": "stefanpenner still working figuring fiddle demonstrate issue nt keep trying", "d": "3/2013"}, {"body": "twinturbo thanks dude track would awesome see lend hand weekend", "d": "3/2013"}, {"body": "handlebars bug fixed master release handlebars cc wycats", "d": "3/2013"}, {"body": "sweet thanks", "d": "3/2013"}, {"body": "think text editor helping deceiving code repo quite time think editor might converting chars reporting false error", "d": "3/2013"}, {"body": "think browser tried download file apologies", "d": "3/2013"}, {"body": "please use latest emberjs version available emberjs website", "d": "3/2013"}, {"body": "nt fixed either message says regex matching looking issue closed wrongly please reopen", "d": "3/2013"}, {"body": "indeed submitted take care", "d": "3/2013"}, {"body": "agreed", "d": "3/2013"}, {"body": "provide jsfiddle show reproduces error", "d": "3/2013"}, {"body": "link page loaded use inspect element option chrome see error message console", "d": "3/2013"}, {"body": "since ember handlebars dependency handlebars must loaded first try swap order wich loading eg jquery handlebars ember order problem", "d": "3/2013"}, {"body": "correct thank realized", "d": "3/2013"}, {"body": "ok turns problem property nt call arraycontentdidchange never gets expired even though content array terms getting set goes x without notifications see updated jsfiddle showing expected behaviour arraycontentdidchange call added", "d": "3/2013"}, {"body": "closing favor", "d": "3/2013"}, {"body": "joliss yuno fiddle", "d": "3/2013"}, {"body": "joliss pretty sure fixed master following code snippets master seem indicate runnext run run loop fixed confused unveiled narly bug", "d": "3/2013"}, {"body": "seems fine one master please reopen", "d": "3/2013"}, {"body": "possibly arraycontrollers calling thissuper init functions documenting case someone else problem", "d": "3/2013"}, {"body": "could describe real use case trying implement using constructs generally needed", "d": "3/2013"}, {"body": "sorry long response tests prepare reasonable examples first managed workaround problem example working code use case user clicks changes category get back selected lets assume simple router like use examples sorry coffee entering ok redirect lost template redirect every thing ok redirect route child route eg every thing ok problem redirecting nonleaf route route child route nt get warning error", "d": "3/2013"}, {"body": "using emberdatajs separate js file currently part core", "d": "3/2013"}, {"body": "yes using emberdatajs", "d": "3/2013"}, {"body": "searchinnerpeace submitting bug submitting alongside jsfiddle jsbin really helps us", "d": "3/2013"}, {"body": "code jsfiddle", "d": "3/2013"}, {"body": "fixed guess since code global scope think getting executed initialize method completes building objects moved code method find", "d": "3/2013"}, {"body": "thanks hashg still getting used assynchronous nature javascript", "d": "3/2013"}, {"body": "problem fixed issue go ahead close bug possible", "d": "3/2013"}, {"body": "sorry bumping seem getting error initially got simple crud app running couple minutes rpflorenceembertools trying rewrite hand learning exercise using brunch compilation etc seems working fine newpostroute fine first version app coffeescript app emapplicationcreate appstore dsstoreextend revision apppost dsmodelextend title dsattr string author dsattr string updatedat dsattr date body dsattr string appnewpostroute emrouteextend model gt consolelog appstore returns expected result error consolelog apppost returns expected result error apppostcreaterecord approutermap gt resource posts resource post path posts postid route editpost path posts postidedit route newpost path postsnew soon hits apppostcreaterecord get totally weird console logging model amp store within method says present ideas really impressed coming back ember morning hiatus amp getting lots done quickly stuck bug literally hours using latest versions ember amp emberdata", "d": "3/2013"}, {"body": "jongd specify adapter defining", "d": "3/2013"}, {"body": "sorry guys ended deleting ember amp emberdata rebuilding cleaning server cache amp worked tried wasted hours day lol", "d": "3/2013"}, {"body": "looks use like route leaf must declared route resource", "d": "3/2013"}, {"body": "thanks", "d": "3/2013"}, {"body": "followed error found view able get currentstate", "d": "3/2013"}, {"body": "need call function working fiddle", "d": "3/2013"}, {"body": "thankslooks silly mistakei actually called end method previous ember versions worked time", "d": "3/2013"}, {"body": "usually want call thissuper beginning methods really ambiguous", "d": "3/2013"}, {"body": "kselden actually bad replicated wrong jsfiddlethe actual problem unable push containerview child another containerview also call thissuper containerview child class updated fiddle", "d": "3/2013"}, {"body": "another fiddle adding containerview click main containerviewstill throws error normal view works fine", "d": "3/2013"}, {"body": "nested view nt calling super", "d": "3/2013"}, {"body": "yeabecause created objects allowed btw still error clicking view another view come able correct giving didinsertelement containerviewbut looks weird behavior", "d": "3/2013"}, {"body": "thumbsup also related", "d": "3/2013"}, {"body": "believe proper way leads different error", "d": "3/2013"}, {"body": "vanthome fiddle nt load correctly", "d": "3/2013"}, {"body": "seems like using conditionals handlebars instead rerendering whole thing", "d": "3/2013"}, {"body": "load tested three browsers works works means click button second time whole output disappears scenario perfectly sensible rerender everything generally speaking think valid requirement clientside rendering framework", "d": "3/2013"}, {"body": "hmm loading appears jsfiddle issue fiddle nt rendering sorry", "d": "3/2013"}, {"body": "vanthome application view actually rerendering fine happen lose reference outlet seen modified fiddle leave ticket open highly recommend go ask better way handle case really nt think right approach", "d": "3/2013"}, {"body": "wagenet thx thoughts however comprehend losing reference mental model matter build view hierarchy ember ends view hierarchy thus knowledge views subviews call rerender needs walk tree rerender everything initial render irritatingly first call method looks like first rerender maintain parent child relationship effectively preventing successive rerenders really rerender supposed work alternative way achieving maybe reevaluating route", "d": "3/2013"}, {"body": "isolate bug jsfiddle jsbin failing know specifically code happening", "d": "3/2013"}, {"body": "machty think run ember project get parentnode null object error", "d": "3/2013"}, {"body": "sample app works fine going close produce failing fiddle jsbin please file new ticket", "d": "3/2013"}, {"body": "current practice seems tying necessary messing", "d": "3/2013"}, {"body": "could try reproduce jsfiddle nt see behaviour emberjs master", "d": "3/2013"}, {"body": "jsfiddle nt use real ca nt reproduce version using could good sign look report new issue problem still reproducible", "d": "3/2013"}, {"body": "duplicate", "d": "3/2013"}, {"body": "also fix progress", "d": "3/2013"}, {"body": "ah nt see thanks", "d": "3/2013"}, {"body": "outlets nt really element rather range elements merely adding outlet nt add extra depth mess css want enclosing element need wrap outlet content may case want force outlet element practice unsure really want", "d": "3/2013"}, {"body": "case setting still allowed far know outlet insert single view ca nt outlet tag customized like normal tag insert template using tag default create class ember identifier whatever view chosen except gives way customize element apparently", "d": "3/2013"}, {"body": "tbh probably remove outlets least deprecate clear benefit since still create metamorphs might well specify styling child view goes outlet wrap another element", "d": "3/2013"}, {"body": "talked wycats suggested use non metamorph view outlet tag passed also use instead would error tagname used metamorph builtin helpers makes sense", "d": "3/2013"}, {"body": "closing favor", "d": "3/2013"}, {"body": "fwiw linkto code determining link would certainly stand benefit change name one example ember source active embercomputed function var router thisget router params resolvedpaths thisparameters currentwithindex thiscurrentwhen index isactive routerisactiveapply router thiscurrentwhen concat params routerisactiveapply router currentwithindex concat params", "d": "3/2013"}, {"body": "working app oldrouter ca nt done new router way without activatedeactivate essentially comes something like", "d": "3/2013"}, {"body": "put controller", "d": "3/2013"}, {"body": "property new router part suggesting add", "d": "3/2013"}, {"body": "even possibledesirable develop ember apps dreamweaver much goes writing handlebars templates splitting different files extensions dw almost certainly nt understand perhaps something could tweaked end prevent pretty sure rest world unanimously idea developing ember apps dw successes previous versions ember", "d": "3/2013"}, {"body": "certainly possible develop using dreamweaver ember done using previous versions ember right prerelease versions desirable corporate websites complex beasts active web applications often built subsections rest built static form particular pages designoriented program oriented constructed graphic designers content develop bbedit web browser designer wants adobe issue hand dreamweaver scans javascript rc ember flips could maybe likely adobe fault given behavior showed rc versions prerelease versions something somewhere fishy show stopper odd odd", "d": "3/2013"}, {"body": "gotcha makes little sense building subsection existing site could file bug dreamweaver crowd pinpoint happening offer relatively painfree workaround time might able oblige", "d": "3/2013"}, {"body": "rlbrown nt dreamweaver test could narrow problem occurred git bisect ember repo run put commit test run dreamweaver crashes run ok repeat process tells commit issue introduced hopefully something obvious", "d": "3/2013"}, {"body": "examining console logs believe dreamweaver issue ember issue appears dreamweaver attempts scan file references file linked web page memory outofbounds error occurs likely ember javascript complex dreamweaver handle accordingly closed something ember team tackle", "d": "3/2013"}, {"body": "", "d": "3/2013"}, {"body": "unify template resolution anything else category guessing optionally dev adopt underscored naming scheme ditch deprecation keep format prioritized check", "d": "3/2013"}, {"body": "think dup", "d": "3/2013"}, {"body": "rlivsey looks like", "d": "3/2013"}, {"body": "mhh states course handle case actual attribute like id changes help cases time use id time id change exactly talking id", "d": "3/2013"}, {"body": "goltergaul bit different case situation would something like problem even generate link nt id fail without id", "d": "3/2013"}, {"body": "goltergaul actually see mean may want still render link object saved yet may linkable clickable unfortunately point rather hard fix emebr order generate path ember needs go route run method ca nt easily analyze params needed serialize time id maybe something else ca nt refresh href accordingly despite technical problems behind strongly believe solved ember end user proposal would always check id addition param handle cases leave us non id attributes example travisci uses url would solve allowing declarative approach either routes like making easier reload link template helper like without changing context would helpful", "d": "3/2013"}, {"body": "drogus workaround good idea thanks agree rest", "d": "3/2013"}, {"body": "sinfree going difficult figure going without jsbin fiddle", "d": "3/2013"}, {"body": "ok try throw together little sample post working example", "d": "3/2013"}, {"body": "example displays problem removing fruitsobserver function js allows checkboxes live update fruit string causes bindings update string expected", "d": "3/2013"}, {"body": "bit discussion", "d": "3/2013"}, {"body": "good eye rlivsey", "d": "3/2013"}, {"body": "probs turned tricky detect made pull request hopefully trick", "d": "3/2013"}, {"body": "intentionally avoided supporting helpers nature core believe cases better served computed properties right bat bit nervous think problem expecting arguments also bound case need set bindings arguments within helper", "d": "3/2013"}, {"body": "arguments need bound think got wrong problem update view argument passed value changes case nt", "d": "3/2013"}, {"body": "trying figure render block bound helper something similar comparing equality two objects one main difference passing two arguments relying options like trick getting block render bound helper", "d": "3/2013"}, {"body": "reason nt making url listener fully active first url change happened refresh hit back never takes place yet sure set way hesitant change looks like wycats wrote original code", "d": "3/2013"}, {"body": "correction original code ghempton", "d": "3/2013"}, {"body": "yeah seems case refreshing clicking switch pages link works properly click back get page refresh ie take step forward steps back interested hear rationale behind hope get resolved thanks", "d": "3/2013"}, {"body": "looks like trying work around initial popstate event fired chrome page load looking alternate workaround wo nt case side effects", "d": "3/2013"}, {"body": "fast works great thanks", "d": "3/2013"}, {"body": "seems like great idea unfortunately familiar testacular also nt think something core team likely address think sorts things best handled community makes sense consider pr otherwise live standalone addon package", "d": "3/2013"}, {"body": "possibly duplicate", "d": "3/2013"}, {"body": "bradleypriest yup seems like duplicate", "d": "3/2013"}, {"body": "perhaps stupid question consolelog ember defined", "d": "3/2013"}, {"body": "could wrong ember defined throw error looks like referenceerror ember defined", "d": "3/2013"}, {"body": "lcoq exactly right error really weird", "d": "3/2013"}, {"body": "maybe errors thrown ember completely loaded like ember require handlebars version greater something like", "d": "3/2013"}, {"body": "synthresin try", "d": "3/2013"}, {"body": "synthresin topic better suited emberdata repo devinus pointed guides", "d": "3/2013"}, {"body": "synthresin agree animation something needs better addressed tickets relating something want address", "d": "3/2013"}, {"body": "unsure correct place animations see animation layer destroying view finished rather views destruction triggering animation great success keeping animation logic view layer state chart", "d": "3/2013"}, {"body": "kselden lukemelia experienceadvicewarstories would lovely", "d": "3/2013"}, {"body": "bcardarella problem using willclearrender seems work know correct place", "d": "3/2013"}, {"body": "jchannon issue move", "d": "3/2013"}, {"body": "probably use computed property complex behaviors nt think something likely support bindings", "d": "3/2013"}, {"body": "historical note bindings used featurefull instance allowing transformation values pared performance code api simplicity computed properties took much behaviour well", "d": "3/2013"}, {"body": "took pass implementing computedproperty based ie conditionally pausable equivalent suspect semantics ca nt really covered computedproperty least without help observer maybe missing something ensure dependentkey side sync unpausing would require pausiblealiasgetset called since lazily evaluated may called resulting order gets changes behavior seems undesirable operations whetherwhen get affects semantics javascript function setpausedaliaswithfinalget doafinalget var emberobjectextend paused false dependentvalue initial value aliasedvalue pausiblealias dependentvalue paused create suggests need pausiblealias observe pauseiftruekey comptuedpropertysetupteardown invoked class instance ca nt setup observers object looked places hookin ca nt find anything obvious workaround additionally requiring haspausiblealiasesmixin initializes observers pausiblealias properties case requiring observers maintain sync two properties smells suspiciously like reinventing bindings figure combination mixintoinitializetheproperties derivative computedproperty overall seems relatively convoluted compared bindingbased approach many ways rewriting bindings", "d": "3/2013"}, {"body": "uploaded jsfiddle", "d": "3/2013"}, {"body": "snickell give examples use cases times tempted feature experience always found better way go", "d": "3/2013"}, {"body": "machty actively taking user input sometimes nt want feed back programmatic tweaks constraints useraction ended use case mytextfield ui focused value nt updated programmatic changes focusout breaks typing ie input focused temporarily make connection oneway use case dragging draggableview allow go outside xy bounds imposed controllermodel xy computed property ie drag active temporarily make connection oneway biggie validations use case validations ui input fail nt propagate invalid value forward continue receive changes backward ie invalid temporarily make connection onewaytheotherway characterizes cases want tightly bound except normal state binding would best edge cases want disconnect binding make oneway sometimes onewayfwd sometimes onewayback however rather bound normal case want rebind instantly condition changes little tricky achieve computedproperties perclass instance", "d": "3/2013"}, {"body": "check nt nail every one use cases goes long way handling slow bindings least far pausing bindings goes feel like pandora box feature build framework need pause binding given condition thing computed properties eg set dependent keys bound property condition return update value condition true return old value stored however want object condition false use frequently seems like kind thing could well encapsulated mixin rather change embermetal", "d": "3/2013"}, {"body": "machty initial jsfiddle uses essentially approach though digs little deeply layered binding nt require changes metal keep using since digs little deeply fiddle smells like something break future ember upgrade hand computedproperty solution much convoluted rather longwinded stuff goes detail nt think actually build computedproperty least without addobserver doable rather complicated suspect validation usecase particular common one might nice make really easy inside emberjs though perhaps right answer use ember data validations anyway problem implement possible ways something run lot suspect others sure see pausing binding pandora box say tranformation essentially providing convenience api disconnect connect declarative imo emberstyle nt require client caller keep passing disconnect obj every time requires understanding bindings api might desirable pausing binding", "d": "3/2013"}, {"body": "machty look", "d": "3/2013"}, {"body": "hmm sure suggest nodecompatible distro needs able handlebars swappable whatever version seems like safest generalized form neuter filter ought replace missing files something still valid javascript throw runtime actually accessed maybe change belongs", "d": "3/2013"}, {"body": "trek think", "d": "3/2013"}, {"body": "leaning towards agreement machty need support multiple execution environments handlebars neutering strategy kind squatting territory nt think want silently ignore missing required files neutering development possibly passed flag could make configurable option list required paths silently ignore either way issue go bother guy", "d": "3/2013"}, {"body": "helper seems happening", "d": "3/2013"}, {"body": "teddyzeenny indeed hopes helpful direct link jsfiddle also noted question using also note found several variables fix problem least sometimes text content opening tag opening tag see last vieweach fiddle may true reliably differing options parameters passed view eg currently working around problem defining arbitrary property view like etc dineshrb curious either things changes output case", "d": "3/2013"}, {"body": "odd one definitely something need fix", "d": "3/2013"}, {"body": "suspect may handlebars bug wycats chime", "d": "3/2013"}, {"body": "indeed handlebars bug fixed master handlebars", "d": "3/2013"}, {"body": "greedylion would like see work least lack bandwidth testing someone put together lower known issues add missing testcases sure would help effort", "d": "3/2013"}, {"body": "think wagenet something spiked integration", "d": "3/2013"}, {"body": "trek roadmap rate wont get anytime soon someone else wants champion buy beer", "d": "3/2013"}, {"body": "stefanpenner thks", "d": "3/2013"}, {"body": "hekevintran good catch", "d": "3/2013"}, {"body": "want require file inside route require code upfront everything solved", "d": "3/2013"}, {"body": "twinturbo large apps apps memory constrained devices may want lazy load code", "d": "3/2013"}, {"body": "twinturbo stefanpenner said", "d": "3/2013"}, {"body": "would personally opt loading code upfront ondemand evaling using something like drastically cuts http requests significant cost minispade end synchronous suffer issue cases would recommend think exist legitimate usecase asynchronously loading code supported go path code loading handled via promise similar deserialize works promises see discussion topic would great", "d": "3/2013"}, {"body": "stefanpenner changed setupcontexts said test promises works setupcontexts failure proceed collectobjects dotransition many others functions method router class way could subclass would good go see approach ember code kind mess mix oo functions well back main problem route activate called inside route enter take call enter call directly setupcontexts like javascript function setupcontexts router handlerinfos", "d": "3/2013"}, {"body": "refactored code replace functionality function promises call loader function item results application product loader function router loads appropriated module depending handler name ie product even application advantage put routes classes file controller view load async exemple image loader function complex cases could create jsonfunction maps routes filesmodules default would call done automatically since nt anything load working fine think", "d": "3/2013"}, {"body": "managed way easier first try wo nt affect using requirejs please take look see think", "d": "3/2013"}, {"body": "duplicate", "d": "3/2013"}, {"body": "issue wo nt solved fix proposed would like reopen allright wagenet", "d": "3/2013"}, {"body": "guilhermeaiolfi correct wagenet lazy async loading code routing going open one currently solve", "d": "3/2013"}, {"body": "imo properties part private apis prefixed example emberdata ran issues data property since renamed data", "d": "3/2013"}, {"body": "slightly concerned might complicate testing making difficultimpossible stubout reserved properties", "d": "3/2013"}, {"body": "good point desirable could disable reserved property check true based value wycats remember thoughts", "d": "3/2013"}, {"body": "", "d": "3/2013"}, {"body": "related presently put template unquestioningly wipe controller separate category would appropriately belong something called themequestion whether rope certain words might come variety different flavors maybe jostle loose idea someone nt think making private via underscore would really make sense custom view management may well end calling destroy nt discouraged privatizing underscore", "d": "3/2013"}, {"body": "synthresin actually getpath deprecated always use even deep paths going close issues fix website thanks pointing", "d": "3/2013"}, {"body": "synthresin fixes getpath references reference seems already fixed someone else would appear website needs redeploy", "d": "3/2013"}, {"body": "think example using nested property get method doc", "d": "3/2013"}, {"body": "perhaps curiously issue two controllers directly require circular indirect dependencies work fine", "d": "3/2013"}, {"body": "unregistered believe could intheory solved inserting proxy inplace one controllers turn relationship nonissue indirect dependency endash mentioned", "d": "3/2013"}, {"body": "stefanpenner thanks little less elegant like trick hopefully direct circular dependencies supported future", "d": "3/2013"}, {"body": "ya likely common case smoothed", "d": "3/2013"}, {"body": "also take away bindings refer controller thisget controllers controller name error check jsfiddle looks like issue bindings controllers", "d": "3/2013"}, {"body": "think bindings nt lazy initialize one controller binding immediately hooked access initializes controller unfortunately first controller nt completely finished initializing yet try set another copy", "d": "3/2013"}, {"body": "wagenet suppose changing way binding works bind object initialized would invasive right", "d": "3/2013"}, {"body": "issue belongs ember website issues could post also put pr would definitely help us crazy fix", "d": "3/2013"}, {"body": "machty api generated emberjs think fine issue", "d": "3/2013"}, {"body": "good call", "d": "3/2013"}, {"body": "problem handlebars runtimeuse instead", "d": "3/2013"}, {"body": "examples nt even repo anymore appear getting trolled github cache going make sure go away", "d": "3/2013"}, {"body": "stefanpenner nt repo site first link google find date tutorials currently examples first hits google appear date", "d": "3/2013"}, {"body": "mjallday ya mega annoying see trick github flushing cache inserting dummy example page mjallday interested solid uptodate examples help teach best practices unfortunately available bandwidth premium someone else interested helping champion best help time allows", "d": "3/2013"}, {"body": "stefanpenner kind help need bandwidth promises interested hear", "d": "3/2013"}, {"body": "working todomvc getting started guide tutorials take ton planning want proceed logically step building previous minimal handwaving stefanpenner going update repo entirely empty except deprecation notice since easy miss", "d": "3/2013"}, {"body": "like remove repo contents", "d": "3/2013"}, {"body": "probably better question stackoverflow short answer dependent users redundant dependent userslist ember watches part property path dependent key automatically friday march paul wrote lot code like people blah property users userslength contacts contactslength short hand succinct way expressing common type expression ie users userslist reply email directly view github", "d": "3/2013"}, {"body": "also worth noting observing length wo nt work expected array mutates without length actually changing ideal situation believe somewhat mysterious enumerable property always get triggered contents enumerable changes", "d": "3/2013"}, {"body": "endash correct question stack overflow", "d": "3/2013"}, {"body": "experiencing issue", "d": "3/2013"}, {"body": "similar issue navigating via back button nt render child outlet first endpoint like render fine using back button child outlets render fine except navigate past move forward eventually render properly setup similar fiddle provide another helps", "d": "3/2013"}, {"body": "going wrong way render template route actually enter however case switching children parent route never reentered never left means overwrite parent template reason ever rerender like suggestions alternate setups ask question stackoverflow", "d": "3/2013"}, {"body": "wagenet following scenario enter route model hit editbutton page link default postview replaced one values input fields hence nt want see anything parent viewtemplate anymore hit save transition back empty cry nt current setup assume always render child parent masterdetailsstyle yes route never left nt mean template still screen makes lot ui hard implement", "d": "3/2013"}, {"body": "scenario let say resource called post case would postedit postedit overwrite post since parent route rerendered leave reenter post route nt case instead use postindex autogenerated part resource postindex level postedit switch back forth without overwriting parent template", "d": "3/2013"}, {"body": "oh see thanks lot knew index routes nt fully understand could used situations like helpful thanks", "d": "3/2013"}, {"body": "removing requirejs example nt affect error", "d": "3/2013"}, {"body": "good find kselden digging found interesting result jsfiddle view frame jsfiddle generates see wraps js code jquery call like cdata window load function windowapp emberapplicationcreate approutermap function thisresource users gt drop option jsfiddle choose wrap js code selected instead updated jsfiddle reflecting wrap option change application works expected familiar internals requirejs seems either isolated issue identified related issue specific requirejs wrapping application code also produces error", "d": "3/2013"}, {"body": "actually known bug jsfiddle code must loaded framework see frustrating got good time ago hopefully ember master cdn available less issue said huge gotcha", "d": "3/2013"}, {"body": "stefanpenner nt answer original issue please take another look original issue see use jsfiddle demonstrate bug created gists downloaded run locally gist demonstrating issue console display control cases work expected remove requirejs still use build gist download keep requirejs use instead build gist download", "d": "3/2013"}, {"body": "workaround related discussion commit caused difference master relying autorun called code ready logic", "d": "3/2013"}, {"body": "fixed", "d": "3/2013"}, {"body": "using observersafe methods pushobject replace modify array also combine subsequent get set operations ie thisget foobar thisset foobar fyi", "d": "3/2013"}, {"body": "could refiled docapi issue", "d": "3/2013"}, {"body": "yeah noticed well wonder bug seems like", "d": "3/2013"}, {"body": "akshayrawat works location type afaik possible make work location type probably need document better", "d": "3/2013"}, {"body": "", "d": "3/2013"}, {"body": "think done see", "d": "3/2013"}, {"body": "workmanw pretty sure helper return achieve goal see", "d": "3/2013"}, {"body": "wagenet yeap right would sworn tried guess failed thanks", "d": "3/2013"}, {"body": "darthdeus pretty sure issue bindings looks like route always sets content controller even context case content set", "d": "3/2013"}, {"body": "updated outlet docs happy make changes anything inaccurate could explained better", "d": "3/2013"}, {"body": "appears happening uses returns object sorted indices rather object original unsorted index also affects methods mixin", "d": "3/2013"}, {"body": "stefanpenner tomdale use failing test", "d": "3/2013"}, {"body": "think duplicate issue related issue put observations issue issue", "d": "3/2013"}, {"body": "wagenet like talk reopening spent time looking ember source thinking guides say rendered link matches current route link given class active think behaviour implemented wrong frustrating clearly instance current route matches rendered link ember looking magical internal ember ids make comparison objects linkto helper failing mark active route match stands going write boilerplate get behaviour work stated guides app going page records different times magic ember ids differ even though route ids matches thoughts", "d": "3/2013"}, {"body": "reopening documentation issue since probably explain better ya wagenet real problem binding using instead", "d": "3/2013"}, {"body": "twinturbo could call documentation also nt already make clear explain bit detail", "d": "3/2013"}, {"body": "wonder events could functions route defined events object functions would support need special support work inheritance could use annotation like computed properties would set meta determine functions event handlers route object would built extended point available router would backwards compatible would require changes tildeiorouterjs becomes false use something like would pretty simple try put aside time morning whip proof concept pull request", "d": "3/2013"}, {"body": "like idea rlivsey", "d": "3/2013"}, {"body": "another possibility tinkering deal extend idea conceptually closer ember way jeff", "d": "3/2013"}, {"body": "along lines needing hash property concatenate instead clobber personally used customwritten dictionary class implements concat combine hashes inside extend operations instead replace ember use base value concat method instead creating array one exists subsequent hashes seamlessly merged onto original dictionary downside approach nonprimitive object api place simple object hash would ideally", "d": "3/2013"}, {"body": "sketchy working proof concept set otherwise nt get setup properly givedescriptorsuper sure nicercleaner ways getting setup instead pretending computed property dig deeper tomorrow feedback amp suggestions better approaches welcome", "d": "3/2013"}, {"body": "believe something code embersortablemixin javascript contentarraywillchange function array idx removedcount addedcount var issorted get issorted line think actually array parameter passed contentarraywillchange event actually unsorted array arraycontroller content", "d": "3/2013"}, {"body": "nice catch", "d": "3/2013"}, {"body": "thanks see make pull request todaytomorrow", "d": "3/2013"}, {"body": "tried making change fails unit test module failed embersortable content sortproperties test failed sortproperties observers removed content removal assertion failed removal listeners sortproperty change observer item removed removed inner foreach contentarraywillchange anyone ideas", "d": "3/2013"}, {"body": "oh test passes change looks like javascript test correct object removed content removal function var removedobject removeobjname emberrun function sortedarraycontrollerset sortascending false removedobject sortedarraycontrollerfindproperty name scumbag katz removeobjname removedobjectname sortedarraycontrollerremoveobject removedobject", "d": "3/2013"}, {"body": "related", "d": "3/2013"}, {"body": "awesome thanks helping everyone", "d": "3/2013"}, {"body": "retract earlier comment think needs sticking around", "d": "3/2013"}, {"body": "sure bug seems work nt seem documented", "d": "3/2013"}, {"body": "ran esseelle point breaks unquoted partial names works fine quotes work replacing trick maybe warning future unquoted could look property", "d": "3/2013"}, {"body": "bringing lukemelia suggested drop prefix partials unsure want practice would clear confusion", "d": "3/2013"}, {"body": "still needed influx new developers say ever", "d": "3/2013"}, {"body": "working something along lines", "d": "3/2013"}, {"body": "peter let know anything could help write tests document whatever", "d": "3/2013"}, {"body": "guess longer issue emberjswebsite", "d": "3/2013"}, {"body": "ahazem believe would also want api docs although unsure would go vote close trek", "d": "3/2013"}, {"body": "sure status seems somewhat similar", "d": "3/2013"}, {"body": "kayleg example would function information needs determine whether user logged without already deserialized would asking another controller eg whether logged", "d": "3/2013"}, {"body": "machty case using application ready function check correct cookie set try fetch currentuser else redirect back index fetching currentuser errors also redirect back index secure routes check appcurrentuser loaded", "d": "3/2013"}, {"body": "global appget user value initialized either using deferreadinessadvancereadiness application load via login route application loaded coffeescript appauthenticationrequiredmixin embermixincreate redirect gt unless appget user transitionto login appwidgetroute emberrouteextend appauthenticationrequiredmixin model params gt appwidgetfind paramswidgetid problem occurs somebody goes directly without logged case model gets called server returns unauthorized sit looking completely blank page layouts type point longdelayed redirect function finally gets called snap login route weird say least something strange going promises edit yes appwidgetfind returns unloaded object implements via dsloadpromise router blocks promise restadapterfind never specifies error handler leaves widget unloaded state wget name somehow convinces loaded causing router finish routing looks like really ember data issue two may better way provide functionality appauthenticationrequiredmixin best could figure documentation source", "d": "3/2013"}, {"body": "would really nice guys soon find implement enough hooks find document stable way implementing loginauthenticationauthorisation ember spent hours searching implement authentication ember rails everywhere find different hacks solve undocumented critical feature web apps really needs addressed ember hits imo nice see progress discussions ways achieve", "d": "3/2013"}, {"body": "everyone please take look tell would cover use case basically transition confirmed nt think reorder redirect happen code working gives opportunity within transition event handler redirectprevent attempted transition deserialize ever called examples gist live code runs changes question making sure settle correct pattern suggesting somewhat daring side please check see could adapt use cases", "d": "3/2013"}, {"body": "wow matchy code looks amazing really clean way define kind logic imo sweet", "d": "3/2013"}, {"body": "pattern looks good nice explicilty state conditions per transition basis instead multiple ifelse statements one method proposed machty nested routes would follow dot pattern like linkto helper routing guide rather slash pattern like urls templates right nt go code changes notice pesky collectobjects function gone performance aspect string based keys become issue transitions list grows thinking case one several named transitions make matters worse add nested routes realize transitions relatively low occurrence app startup may worth checking disclaimer working performance critical stuff recently previous paragraph might worthless case", "d": "3/2013"}, {"body": "logic method transition object preserved could scare people yes nested routes follow dot pattern like mostly done way keep logic knows naming scheme concerned performance nt tons tons defined plus transitions oneshot events afford slower something might occur loop plus think optimizations future need", "d": "3/2013"}, {"body": "build master still nt appear working setting content controller ember data object actual controller content null controller returned controller see two different values controller following get correct value however similar original issue something silly", "d": "3/2013"}, {"body": "tonywok converted using debugging actually using app latter aware private used actual app", "d": "3/2013"}, {"body": "wagenet using debugging view reference controller content set correctly however controller set able get work using curiosity", "d": "3/2013"}, {"body": "tonywok suspect issue something else like file new issue failing jsbin jsfiddle", "d": "3/2013"}, {"body": "wagenet thanks time", "d": "3/2013"}, {"body": "bitten bug causing pulled built make progress one thing controller like barindexcontroller reason thisget controllersbarnew undefined would expect barnew resolve controller defined route", "d": "3/2013"}, {"body": "running issue inkredabull example sure tell container register", "d": "3/2013"}, {"body": "length notified though length actually changes swapping element instance would notify length would notify edit days ago idea showed top list strange", "d": "3/2013"}, {"body": "using moment seems trick eg event router somewhere clear outlet view", "d": "3/2013"}, {"body": "already raised concerns please nt close issue framework strong conventions conventions easily overridable worked ember apps new router already relied fact override default behaviour", "d": "3/2013"}, {"body": "looked seems support outerhtml method fallback browsers nt support method found", "d": "3/2013"}, {"body": "right replacing string method packagesemberviewslibsystemrenderbufferjs got working firefox lt ugly someone deeper understanding renderbufferjs probably create much nicer fix", "d": "3/2013"}, {"body": "fixed", "d": "3/2013"}, {"body": "workaround seem work anymore think control support non singleton controllers render nt think know enough emberjs implement wycats insights plans control regarding issue", "d": "3/2013"}, {"body": "schmidp nt think much changed front comment whether still issue", "d": "3/2013"}, {"body": "machty yes still case", "d": "3/2013"}, {"body": "darthdeus thanks keeping uptodate fyi anyone come issue via error using ruby sprocketshandlebarstemplate gem make sure latest barber dependency today error updating barber fixed", "d": "3/2013"}, {"body": "looked seems support outerhtml method fallback browsers nt support method found", "d": "3/2013"}, {"body": "used binding eg works get inversed calculated property computed seems ignored adding", "d": "3/2013"}, {"body": "ran looking using controls build datepicker widget seems like would useful thing use control want able however nt work bindings nt get passed meantime probably go view inline controller code view seems like view nt know stuff anyway long story short accepting property bindings get sent controller seems like would useful making kind components may wrong idea control meant used", "d": "3/2013"}, {"body": "dug source understand problem nt realised properties sent view problem knowing want send view controller seems similar issue helper need know collection item similar approach could work might make sense go way default controller allow specifying view options although might counterintuitive different helpers", "d": "3/2013"}, {"body": "", "d": "3/2013"}, {"body": "costent thanks", "d": "3/2013"}, {"body": "rlivsey think fixed still issues please file new ticket clean slate", "d": "3/2013"}, {"body": "issue needs input glad remove hacks cringeworthy best", "d": "3/2013"}, {"body": "phpaddiction sirzach seen method would nt cover use cases", "d": "3/2013"}, {"body": "end using redirect part works enterfilter naming threw nt fit exactly nt thought completely couple weeks pushing get ember app door production think wanting canenter canexit type scenerio nt want make transition find ca nt enter nt want logic redirect prevent entrance sending route transitioning thats way keep things robust", "d": "3/2013"}, {"body": "closing ideas outdated nt hold much merit others proposed two likely candidates handling sort thing opinion event transition handlers described actually implemented mechanism attempted transitions converted actions sent routes via original idea precursor issue shown work production apps ebryn took approach square router partial first option like dsl drawing transitions overrides easy dynamically inject intermediate routesstates purpose animation among things regardless seems best way go forward point amass suite different use cases compare two different approaches get closer point start fresh discussion feel free continue post closing since diverged concept", "d": "3/2013"}, {"body": "missing discussion implementation get pr merged aside good suite tests else holding issue", "d": "3/2013"}, {"body": "essentially everything nt even pull request top head extension coffeescript patch javascript person actually used far know discussion feedback anyone core team discussion feedback anyone except supports history location hash location support helper tests happy work code issues tests however moment going nowhere without buy ember core team milestone seem quite busy doubt going given serious consideration wrong merge proper pull request javascript hash location support tests happy work issues nt think priority team moment nt want waste loads time right find want query string support patch constantly goes date master maintain get around giving consideration needs", "d": "3/2013"}, {"body": "way glad using working", "d": "3/2013"}, {"body": "toranb new version broken cases", "d": "3/2013"}, {"body": "taking shot implementing core location based solutions much like one alexspeller proposed use one hashlocation functional particular scenarios hacks best one issue keeps coming determine contexts affected query string transitioning route handlers higherup maintain context good thing however query string changes could affect active handlers without specific information routes call obviously desirable behavior way see several approaches problem give every route handler method filters query parameters route uses save return value method handler transitioning compare new query string object current one changes actually implemented point felt like hack allow query string parameters leaf route handler allow set query string parameters every handler essentially allowing mildly strange urls like urlwise actually seems quite nice contains query string parameters handler affect would require support routerecognizer though far nt able find clean way add optional different note much complex old nt pretty much thing way assuming query string affects model app paginate sort server side query strings params sent api imagine scenarios influences something routecontroller context case might want call two cents hopefully ranting much still positive implementing sometime soon much like guys opinion things upload implementation shortly clarify talking", "d": "3/2013"}, {"body": "passing nt given much thought repercussions implementing syntax similar matrix parameters", "d": "3/2013"}, {"body": "hmm like like syntax feels less awkward wo nt easier implement though", "d": "3/2013"}, {"body": "hmm matrix parameters could work may even elegant way avoid calling deserialize route transitioning although current solution implemented emberquery possible affect model without calling deserialise every route callback called every route need intercept correct route however bit hack sure instances wo nt work thinking matrix params approach seems like best compromise especially allows global state maintained parent routes fact suspect matrix params would even require changes emberjs extension could nt parse current route callbacks already exist eg javascript parsematrixparams function string params var pairs stringsplit pairsforeach function pair var kv pairsplit params kv kv return params approutermap function thisresource posts path posts params postsroute emrouteextend model function context params parsematrixparams contextparams return mymodelfind page paramspage nt tried wo nt robust moment foosbarastringwithansignanda example reason wo nt work moment", "d": "3/2013"}, {"body": "main issue approach like parameters nt optional forces uri end slash although posts uri actually parameters specified also used something like back seem recall matching issues without parameters want something like issues well params left empty", "d": "3/2013"}, {"body": "wo nt work expect hook called solution host dynamic segment inner route responsible stash params somewhere bubbles hook simply call find stashed params stashed controller javascript approutermap function thisresource posts function thisroute index path params postsindexroute emberrouteextend serialize function parse stash params postsroute emberrouteextend model function return postfind stashedparams need latest master get pr fixes behavior also need handle case url accessed directly called delegate case", "d": "3/2013"}, {"body": "kamal could show stash params curious string values get put pulled dynamically", "d": "3/2013"}, {"body": "toranb gets stashed model full example set spent inordinate amount time trying figure put right callbacks order get called javascript approutermap function thisresource posts function thisroute index path params postsindexroute emberrouteextend model function params return thiscontainerlookup route posts model params serialize function return thiscontrollerfor posts get params pull stash setupcontroller function controller model model thiscontrollerfor posts setproperties model model params modelget params pull stash postsroute emberrouteextend model function params params params thiscontrollerfor posts get params var records postfind params recordsset params params stash model return records go url flow value performs find built default state controller calls find stuffs instead route flow performs find current controller state serializes controller state", "d": "3/2013"}, {"body": "mention get called already route hack route basically redirects back", "d": "3/2013"}, {"body": "kamal thanks quick reply might wait official deploy nice working example helps grok router exists today thanks full example", "d": "3/2013"}, {"body": "another idea deserialize stuff perhaps route could specify exactly params affect eg would require slightly complex implementation would result deserialize model hooks called parent routes query params changed would therefore efficient whilst sticking conventional querystring style every setupcontroller hook state tree called transition anyway issue eltehupkes think approach", "d": "3/2013"}, {"body": "yeah indevelopment app uses something like seem train thought still feels like hack nt agree requires configuration user want work currently trying incorporate matrix parameters routerecognizer believe would make things much flexible", "d": "3/2013"}, {"body": "suppose working would better slightly torn matrix parameters strange new query parameters comfortable reassuring happen never heard trying get head around honest way ember route works think make sense conceptually think need get used idea", "d": "3/2013"}, {"body": "alright built something like opinions code branch created quick jsfiddle mess around without code address bar quite useful case overview modified routerecognizer recognizegenerate query strings handlers handler query string path nonempty exception root index route posts nested handler empty path handler would nt support query string prevent things like specifying query objects transition methods done using special objects separated context objects internally avoids need additional every transitiontype method objects created using instance transition posts route specifying query object note supply query object every handler along way transitioning called every route handler new query object supplied specify query object route left current state supplying boolean false clear queries assumed affect context way context object passed called object determine query route query object already supplied handler somewhat conflict situation case supplied query takes preference using supply static dynamic query parameters apply route linking nt thought good syntax yet supply parent handlers links currenly maintain parent states query string known issues change parent handler query scenarios needed probably scarce though using without query options generated url reflects query time url generated holds parent handlers query string link href would bind query string objects handlerchain nt yet found proper solution else make pretty serious changes onecharacter state recognition would simply support optional query string path exactly sure implications whether make anybody angry p probably worth mentioning entire test suite still passes change actually two tests fail unrelated tests also fail master hoping feedback", "d": "3/2013"}, {"body": "issue fixed ember original fiddle one forked uses ember still seem issue chrome", "d": "3/2013"}, {"body": "goes investigate", "d": "3/2013"}, {"body": "knowuh actually reproduce details", "d": "3/2013"}, {"body": "stefanpenner sorry mistake must malfunctioning chrome extension reran using incognito window could longer reproduce either sorry trouble", "d": "3/2013"}, {"body": "knowuh problem better safe sorry", "d": "3/2013"}, {"body": "updated jsfiddle works anyone watching issue", "d": "3/2013"}, {"body": "two issues may related", "d": "3/2013"}, {"body": "wagenet wycats tomdale plan fixing would like refactor places currently use make code simpler would love contribute fix sure plan behave", "d": "3/2013"}, {"body": "drogus nt know plan best bugging wycats tomdale", "d": "3/2013"}, {"body": "pivotalmedici seems like definitely issue sure without able reproduce possible give core team member access app maybe via pairing session", "d": "3/2013"}, {"body": "also spent days tracking symptom mouse drag events nt delivered properly new view jquery draggable amp selectable stop working nt workaround yet hopefully additional details help someone else", "d": "3/2013"}, {"body": "seems likely making perroute loading routes vs single global loadingroute exists today mind think handle route whatever call single global state multiple ones depending", "d": "3/2013"}, {"body": "multiple failure states makes sense failure might mean different things based route much like loading", "d": "3/2013"}, {"body": "pagination essential functionality", "d": "3/2013"}, {"body": "either guide handroll w ember seeing common", "d": "3/2013"}, {"body": "anyone looking date friendly pagination example got working back button support router included", "d": "3/2013"}, {"body": "toranb clientside example take account meta say level functionality live standalone mixin nice work routes btw sort route definitely something useful sure bookmarking particular page though least affords history functionality need support obtaining meta information paginating things like limit etc", "d": "3/2013"}, {"body": "loadx agreed solution nt scale well nt true server side pagination solution depend emberdata mvc part ember", "d": "3/2013"}, {"body": "absolutely pointed emberdata ticket cheers", "d": "3/2013"}, {"body": "getting pretty sure latest ember data strange bug", "d": "3/2013"}, {"body": "even worst returning value promise wo nt give error simply render view", "d": "3/2013"}, {"body": "solution new router read ghempton gist lukemelia gist question refer old router", "d": "3/2013"}, {"body": "indeed", "d": "3/2013"}, {"body": "perhaps tangential official browser support denoted anywhere quick google search ember browser support yields handful stack overflow questions clearly something people considering investigating ember wagenet know mention browser stack top hit answer documentation could specific browsers nt passing unit tests given time ember approaches official support list would probably useful aforementioned documentation pointing polyfillstools like jquery hashchange expanding support could place", "d": "3/2013"}, {"body": "", "d": "3/2013"}, {"body": "public service announcement provide development resources lacking already agreed love feature much nontrivial support certainly something block", "d": "3/2013"}, {"body": "agreed wagenet nontrivial code paths touch mission critical parts ember", "d": "3/2013"}]