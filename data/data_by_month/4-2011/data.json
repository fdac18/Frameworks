[{"title": "typeerror backbonemodelextend function", "body": "typeerror backbonemodelextend function", "num": "340", "d": "4/2011"}, {"title": "backbonehistory exception thrown route contains character", "body": "backbonehistory checkurl function function contains call decodeuricomponent thisfragment fragment appears already decoded encoded fragment might contain top decoded equivalent contain top checkurl decodes already decoded uri encounters character expects find special character throws error perhaps browser specific behaviour work browsers decode uri others", "num": "338", "d": "4/2011"}, {"title": "pubsub modules would nice", "body": "starting backbone may wrong understanding order able pass data different modules one view another instance one needs one module created inside one specifically bind imho makes difficult modular code loosely coupled modules would nt nice kind pubsub modules backboneviewextend initialize function thissubscribe custom event callback backboneviewextend foo function thispublish custom event data said starting learn backbone may missed something obvious already possible implement would appreciate pointers thanks", "num": "335", "d": "4/2011"}, {"title": "saving model return model attributes accessible", "body": "using following model saving model returned value nt expected newmodel new artistmodel newmodelset thisnewattributes n newmodelsave thisnewattributes consolelog n returns object visible attributes consolelog nattributes also prints objects hooked attributes object printing attributes undifined consolelog nattributescreated returns undefined", "num": "334", "d": "4/2011"}, {"title": "documentation bug", "body": "left side table contents section history start savelocation savelocation link work corresponding section content", "num": "333", "d": "4/2011"}, {"title": "model ids using mongodb", "body": "hello new backbone sorry missed something obvious currently learning backbone writing small app nodejs mongoose mongodb backend issue every time mongodb creates new document unique identifier automatically generated called id opposed id mistaken break one ability get document collection id ie collectionget id work anymore also define url model something like documents thisattributesid thanks", "num": "328", "d": "4/2011"}, {"title": "nonsynching base class collection", "body": "times one needs functionality collection want synchronized remote data instance list selected items ui want use collection track changes however moment collection selected items items added effectively destroys syncing inside original collection course use plain array access events could also extend backboneevents want simple collection suggest backbonecollection divided plain base class underscore functions triggering etc build syncing functionality top extending break existing functionality done correctly", "num": "327", "d": "4/2011"}, {"title": "mailing list", "body": "hello started looking backbonejs far looks terrific one issue though beginners like backbone times prove little overwhelming steep learning curve made somewhat worse relative lack support beginners address would nt mailing list make sense would help keep github repo issues section less cluttered allow people good knowledge backbone help less experienced people simple questions like one todos example todo model defaults property also need initialize function set content thanks", "num": "326", "d": "4/2011"}, {"title": "preprocessing model attributes set", "body": "found common things often need attributes entered user saving model instance attribute string trim whitespace around currently calling modelset adds clutter view code thought creating basemodel overrides set would obviously work means basemodelset loop attributes set modelset loop occurs backbone models could quite easily preprocess values setting attribute preprocessor function could added model options passed set instance alternatively preprocess function could passed options set could accomplished little change backbonejs simple change line would take set function attrs options function name bit long cumbersome name might better sure many uses trimming whitespace", "num": "325", "d": "4/2011"}, {"title": "previousattributes updated silent change", "body": "ordered list items stored collection rank item change update ranks collection item backbonemodelextend code items backbonecollectionextend initialize function var thisbind change rank function changeditem find item rank var mefind function e return eget rank changeditemget rank amp amp ecid changeditemcid change rank previous rank changed item otherset rank changeditemprevious rank silent true mesort given item rank item b rank change rank item find item rank b change rank previous rank item rank item b rank everything ok change rank item b breaks previousattributes b correctly set used change event handler nt use silent trigger another change event mess items rank monkey patched backbone solve problem normal silent changes nt update previousattributes", "num": "324", "d": "4/2011"}, {"title": "question controller view events interaction", "body": "hi stuck one problem since days ca nt find nice solution view listening click event button user makes click view changes locationhash adds class name button clicked selecting using currenttarget passed event object controller listening hashchange says model fetch data view listening change event model renders view works fine far triggered browser controller gets hashchange event caused user using adress bar controller says model fetch data server view listening change event model renders html need add class name button make active way right select element manually add class example code var view backboneviewextend events click action action looking way make interaction controller view events automatically fe method enable trigger click event action button probably without write code triggering selecting element know mean something totally wrong missundestand concepts fe something like var view backboneviewextend events click action action", "num": "323", "d": "4/2011"}, {"title": "backbonesync issue", "body": "use localstorage persistence strategy override function global app need crud json restful local storage suggest specify sync object model sync specified model use default implementation backbonesync refined interface global object", "num": "321", "d": "4/2011"}, {"title": "triggering events manually objects inside collections causes typeerror", "body": "reproduce fail typeerror read property idattribute undefined workaround", "num": "319", "d": "4/2011"}, {"title": "triggering location change controllers", "body": "hi want able trigger location change without use locationhash directly nt want stuck hash bangs pushstate support done clarify mean example var controller backbonecontrollerextend routes action name action var controller new controller var view backboneviewextend events click action action controllerchangelocation something missing right change url using locationhash pushstate call propper controller action trigger route event oleg", "num": "317", "d": "4/2011"}, {"title": "backbonesync params", "body": "depending use backbonejs backboneminjs passed parameters different backboneminjs uses backbonejs uses documentation refers guess one correct difference", "num": "316", "d": "4/2011"}, {"title": "debounce view events", "body": "would debounce keyup listener subdomain check happens delay kind works function still called keyup event calls get delayed events keyup subdomain checksubdomain checksubdomain function e thisdebounced debounce bind thischecksubdomain e thisdebounced checksubdomain function e called keyup event consolelog etargetvalue", "num": "315", "d": "4/2011"}, {"title": "reverse sort order models collection", "body": "hey best way reverse sort order collection comparator sorts models date would need reverse order using seems pretty ugly given missing something important vote backbone model attribute set sort order along comparator cheers daniel", "num": "314", "d": "4/2011"}, {"title": "unsilence setting attributes model initialization", "body": "hey first thank awesome library really enjoying question models hasmany relations would like extend backbone automatically listen event like new model initialized far see change event fired silent set true would option backbone model set one could bind change attribute instead using function currently make sense", "num": "313", "d": "4/2011"}, {"title": "problem delegateevents functionality subviews", "body": "many cases deal heavyweight subview integral part mainview case visualization involving lots dataviewstate want setup subview within mainview constructor keep reference comes rendering render mainview first injects container element subview live render subview working fine except declarative events working subview backboneview delegateevents called view construction since construction time container element place events bound could solve calling thisdelegateevents manually end subview render method however better solution nt common usecase case simply want reduce number view constructions minimum code working could improved", "num": "310", "d": "4/2011"}, {"title": "unbind model event within trigger", "body": "events model would like equivalent jquery one concept basically event triggered callback run immediately unbound thought might simply unbinding callback within problem multiple events bound example model change event trigger subsequent event errors callbacks kept within array trigger loops array callbacks one callbacks removes unbind slice callback changes array size within trigger loop tries call callback array nt exist anymore two questions anyone else deal situation callback triggered accomplish also seems like could better way keep track callbacks events store array using slice remove could guard callback removing list still allow others continue", "num": "309", "d": "4/2011"}, {"title": "add callback backbonecontroller", "body": "hey feel extending backbonecontroller optionally call function hashchange event triggered matching route found example new backbonecontroller thanks matt", "num": "308", "d": "4/2011"}, {"title": "nested views", "body": "situation one views nested inside another relationship models nested one views tr view single td inside tr bind events td get consumed tr far know option consume event handler", "num": "306", "d": "4/2011"}, {"title": "collection sync abort ajax request one running", "body": "hello wonder backbone nt handle multiple requests right maybe question framework implementation line backbonejs ajax call handled simply making ajax call sync method would mixin instances models collections default method call would would possible handle kinds things easily reason might considered harmful practice therefore discourages backbone thank", "num": "304", "d": "4/2011"}, {"title": "modifying collection iterating", "body": "creating collection like windowsomelist backbonecollectionextend localstorage new store stuff using localstorage class var alist new somelist adding items collection later trying remove items seems remove half items every second one thought destroy failing nt seems quit prematurely ideas put example app play anyone help", "num": "303", "d": "4/2011"}, {"title": "renaming id id couchdb", "body": "hello couchdb stores ids name id map every id backbone models id reverse annoying waste bandwidth way tho configure name id attribute backbone models", "num": "302", "d": "4/2011"}, {"title": "element found fetching results", "body": "case server nt returnng results application initial state without entries db get returns response empty array strange reasons ca nt understand firebug stack trace error message element found probably null reference somewhere backbone ca nt cope", "num": "301", "d": "4/2011"}, {"title": "support websocket", "body": "socketio nodejs raise could big plus enhance backbone light websocket adapter something similiar localstorage socketio contains many code lines slows app implement light adapter straight backbonesync handler adapter maps crud websockets instead rest speeden communication make backbone attractive real time applications", "num": "300", "d": "4/2011"}, {"body": "sure javascript call timeout id view removed", "d": "4/2011"}, {"body": "redefine put cleartimeout inside inside handle every click event links point inside click handler explicitly call windowlocation right something terribly wrong looks tricky", "d": "4/2011"}, {"body": "nt want ever want things work properly ie use savelocation otherwise nt see anything matter", "d": "4/2011"}, {"body": "route controller points want load need trigger hashchange setting hash directly call savelocation wo nt load thank much advice", "d": "4/2011"}, {"body": "noticed thing going open bug good catch", "d": "4/2011"}, {"body": "sorry saw addressed previous issue", "d": "4/2011"}, {"body": "yes trying resist think eventually make current unofficial backbone mailing list official", "d": "4/2011"}, {"body": "added backbonejs example application written switch app use", "d": "4/2011"}, {"body": "sure might want run code calling overriding set simply using different function right way example", "d": "4/2011"}, {"body": "point overriding set creating separate function like means attributes looped multiple times method proposal provides simple oneline solution avoids looping attributes could improve performance browsers slow javascript processing models lot data", "d": "4/2011"}, {"body": "afraid current behavior correct point change considered change point view model state example attribute value change silently change correct previous value time change", "d": "4/2011"}, {"body": "ok understand write code differently jashkenas lt reply replygithubcom afraid current behavior correct point change considered change point view model state example attribute value change silently change correct previous value time change reply email directly view github", "d": "4/2011"}, {"body": "maybe wrong seed lines thissync backbonesync call read options model object use sync method first sync nt exist use global sync instead", "d": "4/2011"}, {"body": "documentation clear", "d": "4/2011"}, {"body": "added pull request", "d": "4/2011"}, {"body": "thanks fix merged master", "d": "4/2011"}, {"body": "see right could var view backboneviewextend events click action action negative side still use location path string save location access action directly even dependencies controllerchangelocation could really handy", "d": "4/2011"}, {"body": "updated backbonejs point release removed file master branch avoid future confusion", "d": "4/2011"}, {"body": "see thanks", "d": "4/2011"}, {"body": "ended solving like events keyup subdomain checksubdomain initialize function thisgetsubdomain debounce bind thisgetsubdomain checksubdomain function e var subdomain etargetvalue thisgetsubdomain subdomain getsubdomain function subdomain called every seconds consolelog subdomain", "d": "4/2011"}, {"body": "best way reverse sort collection return negative value comparison criterion", "d": "4/2011"}, {"body": "nope ca nt bound event model created object bind onto suggest writing pattern like", "d": "4/2011"}, {"body": "reason nt really want set view element external dom object avoid makes depend specific rendering order ui much better leave view alone simply insert dom ready way views created events delegated convenient order", "d": "4/2011"}, {"body": "similar problem cause thinking replacing callback want remove empty function fiddling callbacks directly later could purge empty functions callbacks necessary least would affect size array callbacks lie otherwise course ugly suppose could also make model extending existing one though starting sound like bad idea p", "d": "4/2011"}, {"body": "would wrapping around callback need", "d": "4/2011"}, {"body": "yes removing element list iterating nt great idea nt problem specific backbone callbacks removal use make sure ever gets called callback third function calls onetime function appropriate good options", "d": "4/2011"}, {"body": "great idea remove item list explicitly iterating remove concern could happen accident backbonejs eventdriven framework lot seemingly unrelated things happen triggering events point view one defer every single time unbinding avoid possible problems unbind kinds bugs take unproportional chunk time realized", "d": "4/2011"}, {"body": "tehmou got particular patch like propose ears", "d": "4/2011"}, {"body": "jashkenas triggering loop check whether list valid list list apply arrayprototypeslicecall arguments else listsplice unbind set callback null instead splicing array trigger purge nulled callbacks described sounds feasible missed something", "d": "4/2011"}, {"body": "ok added sophisticated event handling able unbind event middle triggering go next release thanks bringing issue", "d": "4/2011"}, {"body": "thanks listening appreciate sorry slow constructive proposals took process problem side note pushing backbonejs recommended framework inside company bulletproof", "d": "4/2011"}, {"body": "added entry", "d": "4/2011"}, {"body": "yes either bind catchall route handler rely fact returns initial route matches", "d": "4/2011"}, {"body": "great info thanks", "d": "4/2011"}, {"body": "view events backbone jquery event stop propagation let continue needed look handle events jquery good go", "d": "4/2011"}, {"body": "nt realise used jquery events thanks", "d": "4/2011"}, {"body": "override global model collection specific basis giving function allow accomplish describe", "d": "4/2011"}, {"body": "hm nt know override get work wondering improve", "d": "4/2011"}, {"body": "turns ca nt modify collection iterating normal though mentioned documentation little strange calling destroy model automatically removes collection simply copy array first eg using arrayslice destroy items iterating", "d": "4/2011"}, {"body": "yes redefine idattribute whatever name id models", "d": "4/2011"}, {"body": "idattribute sorry rename id attribute backbone model id checked annotated source code see id hardcoded ca nt renamed repeat couchdb ids stored id backbone id one needs redefined renamed otherwise direct json communication nt possible thank hints", "d": "4/2011"}, {"body": "read around line", "d": "4/2011"}, {"body": "oh see trunk tried sorry still working expectations save model back couchdb put id name id used json id server side rename id id save assume synch method needs fixed somehow id paramsdata named like idattribute", "d": "4/2011"}, {"body": "always change tojson function model", "d": "4/2011"}, {"body": "yes could think sould implemented backbone respect idattribute tojson function", "d": "4/2011"}, {"body": "dunno afraid ca nt debug app brief description problem turning browser debugger let get full stacktrace exactly going", "d": "4/2011"}, {"body": "websockets great backbone models wellequipped work together smoothly nt something backbone builtin external plugin integrates backbone websockets solution like socketio", "d": "4/2011"}, {"body": "duplicate", "d": "4/2011"}, {"body": "persuasive removed minified versions underscorejs backbonejs respective repos rebuild branch thanks pushing issue", "d": "4/2011"}, {"body": "awesome rock", "d": "4/2011"}, {"body": "thanks clarified jquery zepto required history support", "d": "4/2011"}, {"body": "views share behavior able simply extend would class example documentcloud", "d": "4/2011"}, {"body": "implement event handlers dialog event handlers timelinedialog use extend parent child events property overrides parent events property child events bound right", "d": "4/2011"}, {"body": "yes currently need override constructor child merge properties prevent constructor blowing away events defined parent least stay example might nice cleaner solution box works", "d": "4/2011"}, {"body": "remove dom events view element sharing dom element among multiple views use custom approach", "d": "4/2011"}, {"body": "recentish patch copy closest version prototype chain making overridable inheritable", "d": "4/2011"}, {"body": "options forwarded correctly refresh perhaps added since issue opened", "d": "4/2011"}, {"body": "afraid aware particular examples backbone draganddrop integration open codebase perhaps would good question mailing list", "d": "4/2011"}, {"body": "awesome thanks forum must new", "d": "4/2011"}, {"body": "take look ideas table deeply nested collections ie ligamentsjs see anything worth pulling may also suggest option ormrelational type stuff working fairly good", "d": "4/2011"}, {"body": "found implementing method turned look less exactly like existing fetch method except calls instead method takes care specifying pageoffset might nice built existing option", "d": "4/2011"}, {"body": "right passed reference simultaneously iterated amp altered patch fixes issue test case also adds test case missing anyway", "d": "4/2011"}, {"body": "call effectively remove models additionally pass second parameter silence events", "d": "4/2011"}, {"body": "cool handy even think modified handle special case way works results unexpected behaviour", "d": "4/2011"}, {"body": "special case remove objects using really want remove objects cloning outside collectionremove call necessary handle special case removing members referencing words wanted remove handful models sending new array anyway", "d": "4/2011"}, {"body": "", "d": "4/2011"}, {"body": "agree needs fixed events delegation feature best feature view class working around every time extend crappy", "d": "4/2011"}, {"body": "desktop memory really nt issue mobile app working discovered large allocations backbone views list items bound respective models course cause noticeable slowdowns mobile safari android even crashes one occasion testing caching reusing views much possible helped type cleanup would definitely help lot manually", "d": "4/2011"}, {"body": "probably effects dom seeing true browser certain extent want optimize piece ui hundreds thousands items good way go turn single dom insertion means instead hundreds views one inside single template loop builds html models documentcloud use technique entities tab potentially thousands items", "d": "4/2011"}, {"body": "great advice something well clarified list view displaying items time slowdown saw happening list simply refreshed times row time views created responsiveness got worse worse list items completely solved issue far tell caching views model id reusing list refreshed simply updating model attributes fresh data server rerendering", "d": "4/2011"}, {"body": "tried profiling memory use chrome heap profiler perhaps references dom fragments holding", "d": "4/2011"}, {"body": "great thought nt seeing slowdown desktop plenty memory mobile safari ios android nt occur try found whole lot areas could optimizing thanks", "d": "4/2011"}, {"body": "patch really helped jonleighton thanks", "d": "4/2011"}, {"body": "jon leighton patch fix issue backbutton seems work ideas solve backbutton problem hashurls saved browser history", "d": "4/2011"}, {"body": "sorry chiming late reason exists clicking regular url like nt save history ie instead urls like also try jump anchor page want use correctly create history entries browsers still bug reproduced calling", "d": "4/2011"}, {"body": "note get permission denied errors make sure none code accidentally removes iframe dom eg replacing entire contents elements", "d": "4/2011"}, {"body": "commits around feb fixed validation issue maybe help guys try replacing collectioncreate using latest one give shot find collectioncreate starting line source code still problem attributes available initialize function however", "d": "4/2011"}, {"body": "wondering well written code specific application manages instances type model ensures ever one instance overriding add method collection well checking see whenever model instance created sure limitations method would happy generalize time future submit review backbonejs hope get discussion going first determine best way architect addition would best even include backbone could potentially external module backbonemodel subclass currently backbonecollection subclass currently super messy know thoughts", "d": "4/2011"}, {"body": "exposing ajax request deferred using jquery per would also allow handle scenarios like much nicer using version latest request exposed property var req modelsave request callbacks executed whenever request finishes right away finished already req done function response textstatus xhr success callback fail function response textstatus xhr error callback function response textstatus xhr called complete", "d": "4/2011"}, {"body": "ahhh bug agree bug bit instanciate view twice parent element later child element change events child element trigger twice", "d": "4/2011"}, {"body": "problem escape method moment nt preserve whitespace pointers deal", "d": "4/2011"}, {"body": "sorry ignore comment", "d": "4/2011"}, {"body": "good use case fetch one model might grabbing current user settings might one singleton resource like settings currentuser suggest always returning array one object case", "d": "4/2011"}]