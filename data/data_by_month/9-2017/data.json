[{"title": "website yarn dev throwing error node", "body": "website docs list nodejs version greater requirement however tried run using version got following error pretty sure caused fact nodejs support trailing commas function parameters couple file maybe good idea change required version node website docs either remove trailing commas error unhandled exception error syntaxerror unexpected token require runapi www gatsby www gatsby www gatsby async replenish let know solution prefer gladly open pr", "num": "10995", "d": "9/2017"}, {"title": "link download html file working page", "body": "want request feature report bug bug current behavior link download file downloading anything current behavior bug please provide steps reproduce possible minimal demo problem via similar template click link page download html file download mac chrome browser click link downloads something says file open appears like nothing downloaded expected behavior able download html file versions react browser os affected issue work previous versions react mac os chrome version react irrelevant open file version", "num": "10994", "d": "9/2017"}, {"title": "react fails rehydrate noscripts", "body": "want request feature report bug bug current behavior react properly rehydrated equivalent code works react current behavior bug please provide steps reproduce possible minimal demo problem via similar template consider following serverside code js const react require react const reactdomserver require reactdomserver class main extends reactcomponent function createapp return reactcreateelement main null consolelog reactdomserverrendertostring createapp react contents hello hello react contents hello hello consider following application jsbin html hello class main extends reactcomponent render const contents lt strong gt hello lt strong gt consolelog contents contents return reactcreateelement noscript dangerouslysetinnerhtml html contents null function createapp return reactcreateelement main null reactdomhydrate reactdomrender createapp documentgetelementbyid target consolelog initialized react displays following console swap comment blocks html react used code works fine warnings true regardless whether change contents react output react output error message confuses states server output consistent output serverside code neither contents final markup emitted html entities please note important breaks known workaround believe may specific one replaces occurrences example works fine react expected behavior rendering component rehydrating component verbatim yield error versions react browser os affected issue work previous versions react regression tested chrome", "num": "10993", "d": "9/2017"}, {"title": "website restructure docs provide paths guidance", "body": "per dan recent comments lot people still seem complaints way docs structured might worth trying restructure docs kind like choose adventure book different paths based know far want accomplish suggestions reference hypothetical paths example looking want see ready learn react know first links page discussing common js prerequisite knowledge want try react right without installing anything links page points codepen codesandbox stackblitz online playgrounds also gives copypaste html snippet links cdn libs user save edit locally want learn basic ideas react nothing new involved links page describes components rendering syntax without using jsx want learn recommended way use react links page talks createreactapp jsx syntax understand basics learn think react build something probably links current tutorial section trying build application solve realworld problems react links page addresses topics like routing state management etc like guides discussed looking advanced react usage patterns help reuse code better links page covers topics like hocs render props context etc another related idea would code samples docs multiple syntax variations could viewed switching tabs global option across site like plain syntax jsx syntax syntax", "num": "10991", "d": "9/2017"}, {"title": "webpack building react reactdom packages version", "body": "want request feature report bug would call bug webpack building react reactdom packages using version running command tells hidden modules keeping everything else works fine app launching correctly using version react reactdom running tells hidden modules machine ubuntu packagejson webpackconfigjs file running show hidden modules version gives running version gives", "num": "10990", "d": "9/2017"}, {"title": "nt work", "body": "see original report problem svg case sensitive na\u00efvely setting relying insensitivity wo nt work good news seems like valid svg attribute problem missed applies html svg think fix add back whitelist", "num": "10987", "d": "9/2017"}, {"title": "website buttons live code sections bad styling", "body": "new site button todo example looks strange nonstandard generally happens border styling overridden nice styling applied button appears case removing fixes styling", "num": "10986", "d": "9/2017"}, {"title": "website upon scroll active item side navigation remains", "body": "would call bug click sidenav items page goes part page sidenav item get active state correctly blue span front link text scroll manually parts sidenav nt refresh active state items tested browsers macos see screenshot interactive component active", "num": "10984", "d": "9/2017"}, {"title": "reduce function", "body": "change", "num": "10983", "d": "9/2017"}, {"title": "new docs site add section headers navigation element", "body": "new reactjsorg docs nav different pages makes difficult quickly find jump part docs care change would accepted create pr example life cycle events react closest thing nav quick start gt state lifecycle navigating page reading seconds becomes clear tutorial list lifecycle events sure scan whole page nt look like maybe missed repeating process scrolling entire pages time consuming instead google react lifecycle events end finding someone independent blog post", "num": "10980", "d": "9/2017"}, {"title": "rss feed", "body": "intentionally drop assume reported twitter", "num": "10978", "d": "9/2017"}, {"title": "reactorg enable tab live jsx editor", "body": "current reactorg default behavior keyboard users get code sections live editor get stuck someone configure ignoretabkey makes editor ignore tab key presses keyboard users tab past editor without getting stuck chrome windows atm edit submit fix sorry", "num": "10976", "d": "9/2017"}, {"title": "recommend using componentwillmount instead using constructor", "body": "want request feature report bug feature current behavior docs recommended use constructor componentwillmount current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior recommend using componentwillmount constructor classes react provide lifecycle hook mounting since constructors already defined however constructors generally confusing considering ways defining things react take following example tutorial written componentwillmount would look like following weird pass super props happens constructors nowhere else react also setting state different constructor nowhere else react using componentwillmount extract props like normally would method react class also setting state exactly every method react class feel like consistency componentwillmount better even though classes provide constructor componentwillmount also supports server rendering benefits performance wise using constructor componentwillmount thanks versions react browser os affected issue work previous versions react react", "num": "10972", "d": "9/2017"}, {"title": "datareactroot attribute missing", "body": "want request feature report bug bug current behavior versions prior react added datareactroot attribute generated div wrapping render rely attribute order select div css case make height fills container eg root gt datareactroot height version attribute longer appears ca nt easily select div css hack javascript lot cleaner datareactroot attribute version version", "num": "10971", "d": "9/2017"}, {"title": "website defer loading babel needed", "body": "currently load babel via cdn nice load page nice load pages actually use eg pages use", "num": "10969", "d": "9/2017"}, {"title": "website gracefully recover ad block prevents babel loading", "body": "seen reports certain ad blockers eg fair adblocker prevent babel loading causes script error breaks docs site robustly handle case probably showing error codepreview side would show script errors", "num": "10968", "d": "9/2017"}, {"title": "website docsearch improvements", "body": "current behavior docsearch new page changed design two features different previous version cursor longer separate colour visible use arrow keys select result longer algolia logo mention expected behavior slightly different background colour cursor mention search algolia logo required free plan happy open pr issues whatever colour solution choose cc bvaughn gaearon", "num": "10965", "d": "9/2017"}, {"title": "github pages", "body": "seems", "num": "10964", "d": "9/2017"}, {"title": "react summit showing conferences page", "body": "successfully added second react summit ng page via pr summit showing list please missing anything get appear conferences page", "num": "10963", "d": "9/2017"}, {"title": "detecting outside events using logic portals", "body": "surprised pleasantly read events bubble portals component tree rather dom tree obviously means detect clicks occur within component child components without worry whether happen portal hosted however another fairly common thing may want detect whether event occurred outside component child components plenty libraries afaik use dom tree nt behaviour curious whether anything new unadvertised react help part puzzle", "num": "10962", "d": "9/2017"}, {"title": "reactdom createportal behavior rendersubtreeintocontainer", "body": "want request feature report bug nt know bug feature last function reactdomunstablerendersubtreeintocontainer works like reading html code new feature reactdomcreateportal behavior bud may understand new feature create portal minimal demo problem demo reactdomcreateportal demo reactdomunstablerendersubtreeintocontainer jsx class container extends reactcomponent constructor props super props thisstate show false show consolelog show thissetstate show true close consolelog close thissetstate show false render const show thisstate class portal extends reactcomponent constructor props super props thisnode documentcreateelement div documentbodyappendchild thisnode render return reactdomcreateportal thispropschildren thisnode reactdomrender documentgetelementbyid body rendered sourcecode html click show portal content state visible close portal expected behavior portal render content body want close portal click close button trigger show action problem shadowdom rendered html container portal separate close portal child container versions react browser os affected issue work previous versions react react reactdom chrome version", "num": "10960", "d": "9/2017"}, {"title": "react bug warning update mounted mounting component", "body": "trying run snippet causes warning noticed triggers hook react hooks consoled next order previous version component mounting twice behavior also bit strange comes without data fetching everything works fine", "num": "10959", "d": "9/2017"}, {"title": "reactdom exist error", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react react reactdom reactdomdevelopmentjs line commits show measurement per method name avoid stretch commit phase measurement overhead var labelsincurrentcommit new set lt undefined var formatmarkname function markname return reactemoji markname var formatlabel function label warning var prefix warning warningemoji reactemoji var suffix warning warning warning return prefix label suffix var beginmark function markname performancemark formatmarkname markname var clearmark function markname performanceclearmarks formatmarkname markname set undefined", "num": "10958", "d": "9/2017"}, {"title": "website tutorial warning showing moves", "body": "running code locally using going well hit section see grabbed current code link get warning code typed manually text talks warning seeing", "num": "10957", "d": "9/2017"}, {"title": "reactrouter work react", "body": "baseroutersjs", "num": "10956", "d": "9/2017"}, {"title": "svg tag unrecognized react", "body": "element code similar svg paths rendered get error console right way render svg never got message like react", "num": "10955", "d": "9/2017"}, {"title": "website maintain scroll position mobile menus", "body": "going quickly pages mobile really nice scroll long menus eg docs navigating next page returning menu previous scroll position maintainedrestored could done rendering menu layout component isnt unmounted page changes storing menu scroll position layout passing page component render", "num": "10952", "d": "9/2017"}, {"title": "correct callback custom renderer repainttick", "body": "previous discussions gather way render whole tree ready eg flushsync updatecontainer however nt see way get callback completed possible via one builtin functions way dealing make sure root node higher order component put callback logic seems work far would better could little closer metal yet still entire tree definitively reconciled previous renders finished thanks", "num": "10950", "d": "9/2017"}, {"title": "correct way return custom components renderer", "body": "renderer basically working woooo way creating components nt seem way done current examples basically renderer returns nonreact objects correct seems work basic tree updates far eg going wanted make sure right", "num": "10949", "d": "9/2017"}, {"title": "react devtools update highlight screenshots", "body": "react react", "num": "10948", "d": "9/2017"}, {"title": "upgraded using units without px shows warnings like", "body": "want request feature report bug feature current behavior div style width component changing accord input like version versions effects nt add px value like warning like version took time realize react needed add unites change css fly example states inputs message react warnings react simply div dont change new width code import react component react export default class testcolors extends component constructor props super props thishandleinputchange thishandleinputchangebind thisstate width handleinputchange event render const style backgroundcolor orange width thisstatewidth", "num": "10947", "d": "9/2017"}, {"title": "production check reacttestrenderer", "body": "upgrading reacttestrenderer started failing tests message test renderer available production mode fact running unit tests using renderer production build trying understand restriction introduced saw change made could nt find explanation pull request documentation production mode disallowed renderer thanks alex", "num": "10938", "d": "9/2017"}, {"title": "reactjs generating pdf using phpwkhtmltopdf", "body": "hi new reactjs created component generate report pulling node module php application created smarty template tpl using mainversionjs mainversioncss files build passing required data component data attributes able view report problem generate pdf click print hyper link browser using wkhtmltopdf converter using able merge different pdfs generating single pdf getting blank page give text working fine working react component content failing react component please guide right direction", "num": "10937", "d": "9/2017"}, {"title": "okay use reactdomhydrate always", "body": "regarding use hydrate nextjs use render code base render initial ssred version client side generated renders user clicked link question okay use cases assume fallback hydrate sure solution see makes sense check pr", "num": "10934", "d": "9/2017"}, {"title": "add react summit nigeria conferences list", "body": "facebook developers circle lagos nigeria organizing react summit nigeria love know event added list ie guideline regard would appreciated", "num": "10932", "d": "9/2017"}, {"title": "mobile web upgrade react automation input box sendkeys got failure ios simulator", "body": "protractor seleniumwebdriver test device saucelabs iphone simulator ios mobile web build react mobile web input box build react controlled input upgrade react automation test got failure submit input box value backend used saucelabs execute automatino testing saucelabs recording video see input value presented used webdriver sendkeys function insert value input box element click submit button check backend log input box value empty try manual simulator saucelabs use soft keyboard type value click submit works also try use android emulator run test works seems sendkeys function nt trigger react properly event react component think input value nt changed saw react changelog noticed upgrade include input improvment anyone face issue know hope fix workaround thanks charles", "num": "10930", "d": "9/2017"}, {"title": "website increase contrast result headers homepage", "body": "want request feature report bug accessibility issue home page new docsite current behavior word result interactive code samples nt enough contrast background current behavior bug please provide steps reproduce possible minimal demo problem via similar template running axe accessibility audit flag issue expected behavior lowcontrast issue also look cool", "num": "10929", "d": "9/2017"}, {"title": "website highlighted lines code snippets nt enough contrast", "body": "want request feature report bug accessibility issue new documentation website clearcut problem solution pretty open ended ill defined might difficult could use design creativity current behavior using prismjs syntax highlighting styles code snippets also sometimes want highlight certain line lighten background line lighter background many font colors nt provide enough contrast current behavior bug please provide steps reproduce possible minimal demo problem via similar template verify running axe audit page expected behavior need way highlight line without losing much contrast choosing different hue without making lighter looks bad opinion would rather fiddle various font colors used syntax highlighting either collaborate prism project add highlight option enough contrast find another librarysystem use syntax highlighting", "num": "10925", "d": "9/2017"}, {"title": "website add twitter timeline support docs", "body": "want request feature report bug bug docs introduced migration gatsby current behavior empty link community gt get support page bottom past twitter timeline rendered expected behavior see twitter timeline see old version looks like script added pr script nt loaded think adding gatsby twitter plugin would fix probably need tweak gatsby twitter plugin", "num": "10924", "d": "9/2017"}, {"title": "prevent react modifying elements manipulated external code", "body": "new york times rebuilding website using react currently isomorphic app server clientside renders question best way include nonreact interactive graphic maps charts visualizations created custom code within fully react page ideal scenario serverside react renders initial html graphic using part react page clientside react never touches elements even component mounting thought react might solve method still removes nodes nt expect nodes generated clientside code none options integrating libraries seem exact match either classic use case graphic map serverside html includes text placeholder map well map js page load map immediately drawn gets erased react mounts clientside nodes included serverside output often vary based viewport device etc trivial example showing react removing clientcreated nodes one second mobile devices loading react library potentially dependencies could take seconds simplest solution think function could return false rest react components page would mount leave interactive graphic part alone probably solutions constraints need use dangerouslysetinnerhtml need deploy graphics outside site releases need render initial html serverside performance simplicity use iframes everything flexible enough rerender reattach elements causes many problems css animations restart media playback interrupted input cursors text selections lost etc guidance appreciated cc gaearon leeb", "num": "10923", "d": "9/2017"}, {"title": "document error boundaries", "body": "nt think either toplevel doc reference yet cc chantastic", "num": "10922", "d": "9/2017"}, {"title": "bla", "body": "bla github bug", "num": "10913", "d": "9/2017"}, {"title": "umd production builds define global variables", "body": "want request feature report bug bug current behavior umd production build linked announcement define global variables reactdom current behavior bug please provide steps reproduce possible minimal demo problem via similar template use build app defined function variable loaded react expected behavior react builds define global symbols versions react browser os affected issue work previous versions react worked fine betas", "num": "10909", "d": "9/2017"}, {"title": "reactos please read respond final request", "body": "issue seems closed without input noted responded strongly suggest read final post suggest new location discussion aware reactos project community reaching please nt ignore", "num": "10908", "d": "9/2017"}, {"title": "react breaks webpackhotmiddleware", "body": "output updating react seems like webpackhotmiddleware relies internal created issue webpackhotmiddleware repo", "num": "10907", "d": "9/2017"}, {"title": "react onmouseenter triggered extra time entering new child", "body": "react reactdom \u7ed9\u7236\u7ea7\u522b\u7ed1\u5b9a onmouseenter onmouseenter js import react component react class demo extends component constructor prop super prop thisenter thisenterbind thisstate flag false enter event consolelog eventnativeevent consolelog enter click thissetstate flag thisstateflag render let old height width border solid let aa height width border solid red let content border solid black display flex padding return thisstateflag amp amp", "num": "10906", "d": "9/2017"}, {"title": "return value type prepareupdate", "body": "official renderers seem generally return prepareupdate example tutorial suggests return nature return type affect", "num": "10904", "d": "9/2017"}, {"title": "schedule callbacks renderer", "body": "looking early implementation custom fiber renderer seems callback official renderers additionally callback official renderers tutorialexample lastly referenced guide begs question custom renderers meant implement best practices general sense custom renderers relationship setting proritylevels affecting scheduler", "num": "10903", "d": "9/2017"}, {"title": "website overlapping headers", "body": "cc joecritch", "num": "10901", "d": "9/2017"}, {"title": "feature request global didupdate", "body": "currently easy write global logic executes react rerendered lifecycle method works great logic isolated component found recently wanting global hook baked react simple example useful want isolated function perhaps keyboard shortcut creates element screen focuses notion written custom logic makes upgrading react difficult unstable think would useful others particularly use redux building complicated ui interactions", "num": "10900", "d": "9/2017"}, {"title": "website footer links reset scroll top", "body": "open scroll bottom click link footer eg resources gt conferences new page load scroll position remain bottom obvious new page loaded", "num": "10898", "d": "9/2017"}, {"title": "website add flow types website source www", "body": "replace flow types components make sure checks types protect regressions", "num": "10897", "d": "9/2017"}, {"title": "renamemove docs examples license files github clearly shows mit license top navigation bar", "body": "want request feature report bug feature current behavior nt show license react github repository multiple license files examples docs keep links docs examples licenses readme root directory github correctly detects mit license react current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior make even obvious project uses mit license versions react browser os affected issue work previous versions react react", "num": "10889", "d": "9/2017"}, {"title": "website side nav sometimes shows incorrect current highlight", "body": "bug active navbar item incorrect sometimes reproduction steps navigate observe synthetic event highlighted expected behavior highlighted", "num": "10888", "d": "9/2017"}, {"title": "reactcomponent render fragments docs typo example jsx tag closed prematurely", "body": "want request feature report bug bug current behavior render fragments example jsx tag closed prematurely current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react react documentation website chrome android previously array fragments nt supported", "num": "10883", "d": "9/2017"}, {"title": "tutorial text challenge unclear", "body": "want request feature report bug bug current behavior first challenge end tutorial says suggests already displaying locations moves nt specify move locations displayed either makes challenge unclear expected behavior change text challenge something similar versions react browser os affected issue work previous versions react", "num": "10880", "d": "9/2017"}, {"title": "expect server html contain text node due whitespace react", "body": "updated react application everything seems work fine instead fact error appears using reactdomhydrate app completely ssr ready found old issue stackoverflow someone wrote could problem markup send server client far see html code without markup problem", "num": "10879", "d": "9/2017"}, {"title": "detect reconciliation completed", "body": "reading fiber architecture renderers general quite sure tell reconciliation completed particularly important rendering animation targeting something dom let consider example ticker root node pushes changes children setting state every requestanimationframe react finished reconciliation quickly cascade mountain pending updates therefore reasonable strategy would skip frames set state reconciliation definitively finished naively tried practical level simply waiting root node using gate assuming called children finished render cycles children ultimately update canvas render though sure relevant sure successful simple way measure practically ideally even scenario children set state way tell whether tree whole finished reconciliation perhaps even particular node", "num": "10878", "d": "9/2017"}, {"title": "update implementation notes documentation", "body": "implementation notes still describes stack reconciler currently using resources would great updated description fiber part official docs", "num": "10877", "d": "9/2017"}, {"title": "multiple onfocus events fired single focus safari", "body": "like report possible bug brief description onfocus synthetic event fired multiple times single focus occurrence safari expected behaviour fired per focus live demo minimal steps reproduce install createreactapp create example application edit application file add input onfocus event handler javascript import react component react import logo logosvg import appcss class app extends component handleonfocus evt gt consolelog handleonfocus evt render return welcome react get started edit save reload input export default app start application open safari click input field developer console opened notice focus event fired multiple times additional info issue found following environment macos sierra version also tested found high sierra safari also tested found safari safari seems work latest safari mobile chrome firefox react js also tested found react example steps reproduce generated createreactapp version observations might come handy issue seems behave randomly extent event usually fired twice changing focus input input first click input fires two events consequential fire one changing focus different input field fires twice additional interesting behavior happens multiple input fields instance input fields first focus input generates two events onfocus input focus input sometimes generates three events onfocus input input input targets", "num": "10871", "d": "9/2017"}, {"title": "thinking react example filter correctly", "body": "want request feature report bug bug current behavior type bas nt get hits baseball basketball current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior get basketball baseball type bas versions react browser os affected issue work previous versions react version", "num": "10869", "d": "9/2017"}, {"title": "grammar mistake portals docs", "body": "want request feature report bug bug current behavior current text open browser devtools observe button child div onclick handler note child div onclick handler missing word current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior open browser devtools observe button direct child div onclick handler versions react browser os affected issue work previous versions react react", "num": "10868", "d": "9/2017"}, {"title": "async render function", "body": "since fiber react team even consider render functions like obviously changing core ways react working consequences approach every render needs promise backcompatible tho require figuring loading state shown imagine whole new way could write apps rely async api think", "num": "10867", "d": "9/2017"}, {"title": "react fiber batched updates ignores arguments", "body": "want request feature report bug bug current behavior calling reactdomunstablebatchedupdates fn b eventaully calls fn ignoring third argument current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react bug worked possible workaround", "num": "10866", "d": "9/2017"}, {"title": "documentimplementationcreatehtmldocument api requires title argument specified", "body": "want request feature report bug bug current behavior react interactivity lost react crash current behavior bug please provide steps reproduce possible minimal demo problem via similar template run reactdomdevelopmentjs sure exactly exact repo steps fix attempted simply pass empty string var normalizehtml function parent html testdocument testdocument documentimplementationcreatehtmldocument fix var testelement parentnamespaceuri htmlnamespace testdocumentcreateelement parenttagname testdocumentcreateelementns parentnamespaceuri parenttagname testelementinnerhtml html return testelementinnerhtml source mdn docs expected behavior well react crash dev mode interactively continues work versions react browser os affected issue work previous versions react", "num": "10865", "d": "9/2017"}, {"title": "unpkg latest working", "body": "following links ceased work last day top one returns find module distreactjs package react", "num": "10864", "d": "9/2017"}, {"title": "react lowercase html attributes generated html", "body": "want request feature report bug bug current behavior reactdomserver generates camelcased markup attributes example pen believe attributes canonically lowercased lowercase attributes jsx react warns using right names expected behavior attribute names would rendered lowercase versions react browser os affected issue work previous versions react prior versions react stripped attributes", "num": "10863", "d": "9/2017"}, {"title": "use returned string src tag", "body": "want request feature report bug feature want use new feature react returning string use string current behavior well render component see string displayed screen see attached screenshot goal use string code component returns strings class mycomponent extends component render switch thispropstype case text return thispropsjsondata thispropskey break case image return thispropsjsondata thispropskey break default return null break const usercomponent props gt return displays string page parent component class app extends component constructor props super props thisstate json fetching data api componentdidmount fetch response gt responsejson json gt thissetstate json json render return export default app achieve current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior want use returned string inside versions react browser os affected issue work previous versions react react browser chrome version official build work previous versions react new feature react", "num": "10859", "d": "9/2017"}, {"title": "bug eventistrusted always true onfocus event handler", "body": "want request feature report bug bug current behavior triggering focus element onfocus handler receives eventistrusted true current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior eventistrusted false focus triggered programatically versions react browser os affected issue work previous versions react far reproduced react chrome", "num": "10858", "d": "9/2017"}, {"title": "tostring classname", "body": "react used call tostring non string objects would receive packages working anymore far tell likely reason specifically anything using similar might something add docs breaking change ca nt figure else components suddenly throwing errors dont styles", "num": "10857", "d": "9/2017"}, {"title": "update authors", "body": "seems like nt run script", "num": "10854", "d": "9/2017"}, {"title": "broken links new docs", "body": "root footer inside installation inside tab react used setting production build process learn integrating react existing code links creating production build better error handling experience inside next section inside next section encapsulated stateful components inside discuss next sections next section inside one previous sections mentioned inside see syntheticevent reference create stateful component called embed expressions jsx extract component inside inside inside inside simply refer react docs inside inside inside inside inside inside inside inside inside inside inside inside inside inside inside inside none soft links work incorrect capitalization inside inside inside inside inside note nt go blog posts", "num": "10852", "d": "9/2017"}, {"title": "suggestion remove misleading docs code new react portals", "body": "want request feature report bug want suggest docs optimization mislead core idea new react portals current behavior currently docs example code uses jscreated div element referenced object thisel property used componentdidmount componentwillunmount render modal class component current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior point view mentioned implementations represent misleadingunnecessary docs boilerplate might lead confusion especially beginning new feature probably denied good possible working fork showing core idea feature nothing else versions react browser os affected issue case agree open pull request", "num": "10850", "d": "9/2017"}, {"title": "use reactos logo project name", "body": "project seems subsumed almost name logo reactos project seems rather disengenuous reactos logo close spinning atom logo globe middle project name reactos reactjs seems best confusing worst looks project treading coattails reactos edit name correction", "num": "10849", "d": "9/2017"}, {"title": "error decoder website displaying messages error codes", "body": "want request feature report bug bug current behavior visiting show error message current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react macos chrome", "num": "10838", "d": "9/2017"}, {"title": "react release checklist", "body": "ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions x x x x ping someone team ensure react fresh x ensure x x master green ci check recent commits x check local output matches commit list x run repo root ensure runtime dependencies match users would get x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x run x might change lockfile change x commit changes local sanity checks repo root x run repo root x run repo root x run repo root stable release update error codes x run repo root x changes maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master stable release write changelog x open add release notes format earlier x make sure changes easy understand friendly oneliners better pr titles x make sure contributors credited like x verify markup messed previewing online editor update version x update root x update export x update x x x x x x see packages update list x run verify changes x build x run repo root run fast packaging smoke test x open browser smoke test x say hello world run slow packaging smoke test x go run x x go repo root run x open verify every iframe shows hello world release x run x run x go x every subfolder nonstable versions run subfolder x stable versions run subfolder x run verify things published expect fixme really automate part currently atomic stable release create github release x open new release page github x choose tag version pushed dropdown says existing tag x paste new release notes x attach files except release x press publish release stable release update version reported website x open x change newly published version x maybe still separate branch docs reading need cherrypick commit branch makes sure website knows updated config ideally change docs serve master stable release update bower x clone bower repo outside main repo x make sure x delete js files bower repo copy react repo x bower repo x bower repo miss x bower repo stable release try x x x x stable release reach dom team x reach dom team nhunzaker jquense aweary case would like go dom fixtures block release", "num": "10833", "d": "9/2017"}, {"title": "warning stateless function components given refs attempts access ref failnull updating react", "body": "want request feature report bug bug current behavior page load throws console error expected behavior console error least way trace stateless component causing issue versions react browser os affected issue work previous versions react error started appear upgrading react", "num": "10831", "d": "9/2017"}, {"title": "safari input invoke callback input nonnumeric character", "body": "want request feature report bug bug current behavior safari invoke callback input keyboard nonnumeric character ie invoked input invoked input current behavior bug please provide steps reproduce possible minimal demo problem via similar template please see relevant jsfiddle expected behavior callback invoked input affects contents field versions react browser os affected issue work previous versions react reproducible safari version macos react version", "num": "10829", "d": "9/2017"}, {"title": "prevent portal unmounting using reactdomcreateportal", "body": "previous comment use implements portal control portal unmount seems impossible use parent component unmount portal unmount react", "num": "10826", "d": "9/2017"}, {"title": "write react component life cycle methods using arrowfunction syntax", "body": "hello react community getting familiar react question would like clarify react component life cycle method particularly see documents react implement react component life cycle methods example render method use syntax question problem unknown sideeffect change method use functional style method follows hope receive reply soon would like appreciate advance detailed explanation issue thank", "num": "10810", "d": "9/2017"}, {"title": "reactnative mit license week", "body": "heard react relicensing mit reason choose react reactnative reactnative mit license week", "num": "10809", "d": "9/2017"}, {"title": "update thinking react example filter products filterableproducttable component", "body": "step thinking react example component filters displays array products based user input unsure code filtering products component component question previously raised issue think responsible filtering products would improve example two reasons allow used outside better separate concerns filtering products displaying products updated example happy submit pr something changed", "num": "10808", "d": "9/2017"}, {"title": "installationmd content update", "body": "want request feature report bug bug current behavior line installatinmd file saying current behavior bug please provide steps reproduce possible minimal demo problem via similar template line installationmd file say expected behavior line installationmd file say since latest installation createreactapp using yarn versions react browser os affected issue work previous versions react na", "num": "10806", "d": "9/2017"}, {"title": "", "body": "", "num": "10801", "d": "9/2017"}, {"title": "component unmounts constructor state sets componentwillmount fire", "body": "current behavior component unmounts constructor state sets componentwillmount fire expected behavior constructor state sets componentwillmount must probably fire right correct versions react browser os affected issue work previous versions react sure", "num": "10790", "d": "9/2017"}, {"title": "thank relicensing react jest flow immutablejs", "body": "thousands developer love react really great amazing framework many company baidualibabatencentzhihu using react building products millons upon millons people thank brilliant great work thank generous noble spirit", "num": "10789", "d": "9/2017"}, {"title": "react mit license next week", "body": "days age boss asked stop react cause react bsdpatent grant license plan develop stopped choose new framework learn reat best framework heard fb relicenseing react mit license next week true till want use react also need learn framework news true make decision back react", "num": "10788", "d": "9/2017"}, {"title": "learning react problem", "body": "every time decide want learn react google find tutorial seemingly reputable sources try things google go stackoverflow quickly realize syntax different different websites api keeps changing nt know looking old tutorial new one way determining stackoverflow question going apply version react using think needed kind master list based era api talking semver lowlevel talking something like first react came things every one happy came silver age react things following way took put see thing old golden age hit bronze era split everything tiny pieces specific blah blah blah serve cheatsheet anyone new make sense going kinda similar look piece c could say yeah oh looks thanks listening", "num": "10784", "d": "9/2017"}, {"title": "webpack bundle react react dom output large file", "body": "question everyone test react reactdom preact preactcompat using js file generate bundle using different frameworks output react bundle reactdom large preact find lot difference know light version reactdom need optimization webpack big difference anyone seen talked output using preact project using react thank", "num": "10780", "d": "9/2017"}, {"title": "error component causes error thrown twice", "body": "want request feature report bug bug current behavior component throws render example click handler error thrown twice instead error boundaries stop double reporting handle errors thrown render errors handlers etc current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior one error thrown versions react browser os affected issue work previous versions react", "num": "10779", "d": "9/2017"}, {"title": "react cloudflare html minification causes isomorphic react app crash", "body": "think bug compatibility issue react serversided html rendered function contains comment tags represent null components instead tags like react really neat unfortunately app served cloudflare html minification enabled automatically removes comment tags including ones generated react behavior causes client app crash throws error x number usually null component reactid problem solved disabling html minification cloudflare question possible earn benefit html minification keep app running well reactreactdom version node version", "num": "10778", "d": "9/2017"}, {"title": "webdriver input gets partial value upgrading reactdom", "body": "want request feature report bug bug current behavior use webdriverio saucelabs run tests found automation cases consistently failed inputing strings textbox upgrade reactdom input value set partially try input input times javascript webdriverio code browsersetvalue textboxselector current behavior bug please provide steps reproduce possible minimal demo problem via similar template sure could see video expected behavior versions react browser os affected issue work previous versions react happens reactdom works reactdom", "num": "10776", "d": "9/2017"}, {"title": "testutilssimulate appear work reactcloneelement", "body": "want request feature report bug bug current behavior reacttestutilssimulate events fire dynamic children components current behavior bug please provide steps reproduce possible minimal demo problem via similar template class like class keyboardsupport extends reactcomponent render return reactcloneelement reactchildrenonly thispropschildren onkeydown thisdosomething dosomething something use within another component like class foo extends reactcomponent render return handlefocus consolelog called browser called test indicated invoked user focuses component browser attempt use something like never called expected behavior cloned element still fire synthetic focus event versions react browser os affected issue work previous versions react works expected using deprecated package react appear work using", "num": "10774", "d": "9/2017"}, {"title": "unexpected ssr difference warning svg primitives", "body": "want request feature report bug bug current behavior started recieving warning svgs using fegaussianblur expected behavior warnings difference versions react browser os affected issue work previous versions react behavior started right updating never happened", "num": "10772", "d": "9/2017"}, {"title": "toggle menu external button", "body": "different components related manner one button second one menu want openclose menu component click button inside way add class directly without setting redux state", "num": "10770", "d": "9/2017"}, {"title": "warning using development build production", "body": "hi seeing error react developer tools saying use build js file using browserify also tried luck red warning nt disappear", "num": "10768", "d": "9/2017"}, {"title": "think remove girhub star form project bacause reat license", "body": "think remove girhub start form project bacause reat license think remove girhub start form project bacause reat license think remove girhub start form project bacause reat license", "num": "10767", "d": "9/2017"}, {"title": "proptypes definition default value definition", "body": "want request feature report bug feature current behavior defining optional type components make us define well expected behavior set default value proptypes definition property required internally might generated fly based versions react browser os affected issue work previous versions react na cheers", "num": "10765", "d": "9/2017"}, {"title": "bug state updating calling setstate state variable used hidden component display none", "body": "want request feature report bug bug current behavior call setstate update state variable used prop component renders modal modal hidden display none state variable nt update modal displayed state variable update neither componentdidupdate componentwillupdate get triggered current behavior bug please provide steps reproduce possible minimal demo problem via similar template snippet code comments point issue likeuser userid event let itisamatch false let users thisstateuserstomatch let index usersfindindex user gt return useruserid userid let userfirstname users index firstname index gt full code part private repo happy share access would assist investigating issue expected behavior regardless whether modal dialog displayed state variable update versions react browser os affected issue work previous versions react react chrome windows home", "num": "10763", "d": "9/2017"}, {"title": "feature request create components componentcreate", "body": "propose function module added member constructor using syntax following confusion points eliminated vs developers wo nt need add inside components deal vs developers wo nt need remember special case assign use initialising state done inside method developers wo nt manually bind methods vs developers wo nt use syntaxes defining components stateless components transpiled function declarations better performance moreover transitioning stateless component stateful one painless", "num": "10757", "d": "9/2017"}, {"title": "react classname bemcn like libraries", "body": "hello really love new features architecture fiber new behavior nonevent attributes function values react warns ignores got issue jsx const fn gt null fntostring gt foo const render gt would nt add classname even override method object works jsx const obj tostring gt foo const render gt think ok behavior function object feature needed bemcn like library write instead", "num": "10756", "d": "9/2017"}, {"title": "typeerror undefined object evaluating sgetcall input onchange react reactdom safari", "body": "want request feature report bug bug current behavior onchange onkeyup onkeydown causes typeerror undefined object evaluating sgetcall safari current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior component get eventtargetvalue update state turn rerenders new state values versions react browser os affected issue work previous versions react works react", "num": "10755", "d": "9/2017"}, {"title": "typeerror read property createelement undefined", "body": "typeerror read property createelement undefined", "num": "10753", "d": "9/2017"}, {"title": "sorry continue make noise people really love react forced abandon", "body": "patent licence change clearly explain good morning see tomorrow thank", "num": "10748", "d": "9/2017"}, {"title": "tools", "body": "according patent patent aim protect facebook avoid legal risk think patent clearly explain means could using react make damage tools facebook could make competitive product imsoftaisoft post issue love react nt want abandon react really want using react building useful things humans", "num": "10747", "d": "9/2017"}, {"title": "change bsd licensepatent licence please", "body": "baidu already baned using react licence brings extreamly negative effects long term development hurted people love react one post issue everyday change", "num": "10744", "d": "9/2017"}, {"title": "give react cause licensed", "body": "react great framework native give react cause bsdparent licensed react keep using bsdparent licensed people give iv choose new framework project good bye", "num": "10742", "d": "9/2017"}, {"title": "add official react faq docs", "body": "wrote redux faq last year pretty helpful answering actual frequently asked questions great could add similar faq directly react docs tim arney already standalone react faq site would great starting point lot material reactredux links list also useful source info general opening place discuss possible formatting react faq well possible topics volunteers help write", "num": "10740", "d": "9/2017"}, {"title": "recent radio input onchange changes break expected behavior", "body": "background see issue thread recent changes pushed mind broken expected behavior comes firing events group radio button inputs aware conversation problem describing exactly far tell note problem describe occur react lt expectations would expect individual radio button fire two conditions among others radio input clicked state changes label radio input clicked causing indeed native elements work precisely way click radio buttons observe console output see event firing expected desired input state changed something new codepen example react expectations following react component work expected react inputs component work expect native dom elements work codepen shows working properly event seems fire another codepen showing nt work imported course entirely possible something incorrectly couple years breaking change components came recent updates", "num": "10739", "d": "9/2017"}, {"title": "adding letter e input field type number cause onchange handler fire", "body": "want request feature report bug report bug current behavior adding letter e input field type number cause onchange handler fire current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior fire event value least maybe versions react browser os affected issue work previous versions react nt know", "num": "10738", "d": "9/2017"}, {"title": "attach thirdparty tools monitor component state updates", "body": "want request feature report bug feature exists previous releases react current behavior feature implemented versions react browser os affected issue work previous versions react react worked previous versions hey would really like able use reactinstrumentation fiber found gaearon pull request work stopped would like know pick implement also asked pull request figured might get ignored since closed pull request omer", "num": "10736", "d": "9/2017"}, {"title": "rendering nan dom attribute", "body": "blog post states values ignored dom attributes tests case rendered created codesandbox using react demonstrate", "num": "10733", "d": "9/2017"}, {"title": "render list message html new line", "body": "hi new react came problem using rendering array strings html array one two three want render new line seems adding br n nt work use tag eg p start new line method using block tag hoping advice thanks", "num": "10731", "d": "9/2017"}, {"title": "trigger duplicate calls miss others", "body": "bug know deferredupdates unstable maybe known problem one tricky trigger spamming inside lot end update happening multiple times calls skipped entirely example code result mouse wheel real fast red area see console output would expect number output console unique sequence incremented every time closure captures inside new version", "num": "10729", "d": "9/2017"}, {"title": "component returns undefined outside render function", "body": "want request feature report bug bug current behavior react component imported file exports components one place returns outside function container component path components folder resolved webpack config option file structure file content js ui components export checkbox uicheckbox container file component js import react component react import checkbox components gt undefined import checkbox componentsuicheckbox gt component function returns imported indexjs file components folder returns component function imported directly folder consolelog checkbox update returns component function cases settimeout gt consolelog checkbox export default class container render returns component function cases consolelog checkbox expected behavior described code versions react browser os affected issue work previous versions react react os macos browser google chrome", "num": "10725", "d": "9/2017"}, {"title": "update react license faqupdate license", "body": "read previous discussions regarding react facebook oss license particular agree clarificatory remarks esp gaearon amp sebmarkbage facebook nt intend use license offensively however today announcement automattic wordpresscom calypso wordpress core gutenberg longer using react believe facebook efforts clarifying react license clearly fallen short least faqs need extended explained much greater detail ideally recent announcement cause facebook rework license altogether said issue tracker place discussion believe untrue though apologize causing noise growing apprehension use react undoubtedly effects line regarding react ecosystem buy wordpress core community would huge benefit react think maybe wrong issue track license issue greatest exposure perhaps automattic post implies problem license perception license problem issue react issue get worse without addressed genuinely know developers ca nt hope something done concerns funneled proper channels", "num": "10719", "d": "9/2017"}, {"title": "scrolltop changed chrome loading page", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template tried make minimal example could tried create proxy trap change scrolltop could nt figure make proxy document body tried look react source find scrolltop changed nt find anything set saved quickly click buy rent page scrolls little quickly click preferences page jumps top expected behavior quickly click buy rent page scrolls little quickly click preferences page scroll change versions react browser os affected issue work previous versions react chrome linux chrome android firefox linux test previous versions react", "num": "10717", "d": "9/2017"}, {"title": "portals container child managed react", "body": "want request feature report bug bug current behavior appends rendered component target instead replacing contents target current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior replace contents target new rendered component versions react browser os affected issue work previous versions react react reactdom note might completely misunderstood portals work gaearon encouraged open issue", "num": "10713", "d": "9/2017"}, {"title": "support string targets isomorphic createportal", "body": "proposal api addition nodes support strings second argument container could pave declarative way achieve order server side rendering js createportal container nodestring server could render portals children inplace clientside hydration process move right location clientside using container string", "num": "10711", "d": "9/2017"}, {"title": "react rc", "body": "copy pasting checklist going ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions x x x x ping someone team ensure react fresh x ensure x x master green ci check recent commits x check local output matches commit list x run repo root ensure runtime dependencies match users would get x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x x look version range root x ensure depending specify range x run x might change lockfile change x commit changes local sanity checks repo root x run repo root x run repo root x run repo root stable release update error codes x run repo root x changes x maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master stable release write changelog open add release notes format earlier make sure changes easy understand friendly oneliners better pr titles make sure contributors credited like verify markup messed previewing online editor update version x update root x update export x update x x x x x see packages update list x run verify changes x build x run repo root run fast packaging smoke test x open browser smoke test x say hello world run slow packaging smoke test x go run x x go repo root run x open verify every iframe shows hello world release x run x run x go x every subfolder x nonstable versions run subfolder stable versions run subfolder x run verify things published expect fixme really automate part currently atomic stable release create github release open new release page github choose tag version pushed dropdown says existing tag paste new release notes attach files except release press publish release stable release update version reported website open change newly published version maybe still separate branch docs reading need cherrypick commit branch makes sure website knows updated config ideally change docs serve master stable release update bower clone bower repo outside main repo make sure delete js files bower repo copy react repo bower repo bower repo miss bower repo stable release try stable release reach dom team reach dom team nhunzaker jquense aweary case would like go dom fixtures block release", "num": "10710", "d": "9/2017"}, {"title": "question setstate", "body": "hi came doubt using react eg jsx getinitialstate return instrument row isselected false name mayday method thisstateinstrumentrowtrue thissetstate thisstate method thissetstate objectassign instrument row isselected true instrument object want change nested key value isselected method better prefer second sure works nested object method better change key value", "num": "10708", "d": "9/2017"}, {"title": "use react css framework", "body": "project bulma css done team going redesign bootstrap framework flow old screens continue use bulma new screens use bootstrap implement one one screens pages move create new mainlayout import css still affect whole pages question react", "num": "10706", "d": "9/2017"}, {"title": "faster diff algorithm", "body": "invitation discussion react pretty freaking awesome used quite bit one thing unfortunately react strong performance gave roots inferno preact although generally nonissue desktop mobile might bottleneck know many members team working improving bundle size believe rollup support talk heard asynchronous scheduling etc also aware trueadm creator inferno joined react team working improving point want bring library petitdom uses diff algorithm links explain provided readme seems score incredibly vdom performance tests fact beat technologies vanillajs surplusjs per benchmark snapshot petitdom beats inferno preact mithril vue angular etc course proper js framework however point trying make far faster major difference frameworks seems diff algorithm realize would mean rewrite good portion reactdom simply discussion unfeasible simply going wrong targetbottleneck let know discussion", "num": "10703", "d": "9/2017"}, {"title": "fetch htttp parameter increment timer setinterval", "body": "want function timer get number pages whenever timer runs parameter page code constructor super thisstate data page myfunc gt let myfetchoptions method get componentwillmount setinterval thismyfunc", "num": "10700", "d": "9/2017"}, {"title": "use javascript control router go", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10693", "d": "9/2017"}, {"title": "warn available", "body": "imo warn foo option probably also warn specified empty option either one could also argue change handler called value yes component renders first option selected instead invalidnonexisting one", "num": "10691", "d": "9/2017"}, {"title": "click submit form", "body": "want request feature report bug bug current behavior click edit submit form expected behavior click edit submit form versions react browser os affected issue work previous versions react mac os chrome react tried also issue", "num": "10690", "d": "9/2017"}, {"title": "input value setstate onchange giving odd bug specified value f valid number value must match following regu", "body": "onchange handler settingstate react component changes state console giving errorwarning specified value ffffsaadf valid number value must match following regular expression dddd ee seen instances online people gotten similar error context errors appears different makes debugging difficult error happens adding input onchange function really appreciate insight component looks like import react component react class addmovie extends component constructor props super props handleonchange event gt const name value eventtarget thissetstate name value handleonsubmit event gt eventpreventdefault render return title export default addmovie", "num": "10689", "d": "9/2017"}, {"title": "incorrect function reference adding ref dom element example", "body": "want request feature report bug bug current behavior documentation appears incorrect first example button uses function reference function described example submit example change current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react na", "num": "10688", "d": "9/2017"}, {"title": "react greater safari onchange fire input boxes using sendkeys test automation framework selenium", "body": "want request feature report bug believe bug introduced version also exists latest tagged version current behavior running functional tests using selenium safari web driver using sendkeys method nt trigger onchange event input field appears safari however tested chrome safari result app nt see text form input fields case ca nt log running automation tests username field thinks empty even though text appears field current behavior bug please provide steps reproduce possible minimal demo problem via similar template rather complicated setup process nt already selenium working assuming selenium test set simple reproduce create clean react app edit appjs file include add method render function run selenium test types new input field notice console logs mention ontextchanged edit packagesjson file use react remove nodemodules folder rerun yarn install yarn start notice expected behavior notice console log instance ontextchanged character typed input field versions react browser os affected issue work previous versions react mentioned chrome effected issue issue appears introduced version reverting app back allows automation tests run could fixed would great wo nt upgrading resolved please let know provide useful information", "num": "10687", "d": "9/2017"}, {"title": "reactdom vs benchmark difference", "body": "want request feature report bug hey work got discussion fastest render cycle would namely functional components render functional components children would faster classbased component renders private function members class set prove simple na\u00efve way used benchmarkjs run reactdomrender components render output different existing domnodes current behavior tested react results tests cases relatively close terms opssec however react amount opssec varied heavily wanted know approach taken problem shows flaw reactdom suggesting anything wrong however results varied widely thought share since maybe someone would accurate numbers better way testing would actually highlight perf dev build reactdom results reacdom results production build reactdom results reactdom results current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react chrome node", "num": "10686", "d": "9/2017"}, {"title": "meta creation serverreact npm", "body": "hi react team creator npm website main goal library simplify nodejs development think modern middleware included default fullon plugins soon want one first ones based react like simplicity want make plugin similar functionality without needing cli something like getting started js load main library installed plugins automatically loaded const server require server const render serverreply render request using appjsx server ctx gt render appjsx user francisco running without library make react work local proof concept works great want implement react implementing first proof concept today event tokyo questions think think users might find easy use similarly would like invite react dev interested much little want keeping tabs actively helping develop plugin anyone interested", "num": "10678", "d": "9/2017"}, {"title": "wrong ssr diff warning due non lowercase attributes", "body": "want request feature report bug bug current behavior got warning client side hydratation react tree contains mixed case attributes svg ones expected behavior warnings difference server client attributes versions react browser os affected issue work previous versions react react worked seems happen attribute name put lowercase set set removal done lowercased attribute stays set got wrongly previous warning", "num": "10672", "d": "9/2017"}, {"title": "build indexhtml point static static", "body": "build indexhtml gets css js files root forward slash srchref running indexhtml local remote server nt work app root folder throws error required files correct path relative way project sub folder app grab folder content true react", "num": "10668", "d": "9/2017"}, {"title": "multiple modules names differ casing", "body": "version react rc install react cra", "num": "10667", "d": "9/2017"}, {"title": "find information react", "body": "gaearon want know beta", "num": "10663", "d": "9/2017"}, {"title": "difference yarn npm", "body": "", "num": "10662", "d": "9/2017"}, {"title": "react nt correctly rerender dynamically created components added via state", "body": "want request feature report bug believe reporting bug current behavior dynamic tag named const element attributes parsed correctly tag name wo nt resolved way react component thus wo nt rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template click svg box tag appears svg dom attributes looking like html dashes instead camelcase expected behavior change shapetag circle things work intended another circle appears versions react browser os affected issue work previous versions react bash ubuntu windows chrome", "num": "10659", "d": "9/2017"}, {"title": "bfcache ssr form elements", "body": "want request feature report bug bug current behavior let say start filling form input type text select element click link press back button browser backforward cache kick change initial value form elements get value back however react nt account component controlled tried reproducing behavior jsfiddle react latest react next luck bfcache nt kick without ssr expected behavior expect react triggering event replicate actual form value versions react browser os affected issue work previous versions react react chrome using following hack materialui comes issues instead tried simulating change event suggested stackoverflow nt work anymore going disable bfcache", "num": "10657", "d": "9/2017"}, {"title": "set property nexteffect undefined", "body": "want request feature report bug bug current behavior loading page produces error set property nexteffect undefined current behavior bug please provide steps reproduce possible minimal demo problem via similar template unable replicate bug isolation however seen live page clear without knowing react internals uses tried using etc please advise plausible test case scenario create test expected behavior error versions react browser os affected issue work previous versions react react chrome note important google chrome works otherwise fetch google work either ie pages indexed eg see discussion", "num": "10656", "d": "9/2017"}, {"title": "picture srcset error", "body": "hi idea fix error triggered srcset picture attribute component jsx import react react import link reactrouterdom import observer inject mobxreact import lpimgxlarge assetsimagesexamplejpg import assetsimagesexample inject store observer class extends reactcomponent render return lpimgxlarge alt react json react reactdom reactrouter reactrouterconfig reactrouterdom help", "num": "10651", "d": "9/2017"}, {"title": "reactchildfibercoerceref like undefined ref component", "body": "want request feature report bug bug current behavior coerceref reactchildfiber accepts refnull component typeof ref undefined borks expected ref function string current behavior bug please provide steps reproduce possible minimal demo problem via similar template could fixed either coercing ref null undefined also testing undefined expected behavior treat typeof ref undefined ref null versions react browser os affected issue work previous versions react", "num": "10649", "d": "9/2017"}, {"title": "interactive documentation jsx", "body": "interactive version jsx depth article got nice traction today hacker news interactive snippets powered klipse plugin author plugin evaluation done client side server involved would consider trying klipse plugin official react documentation", "num": "10646", "d": "9/2017"}, {"title": "eifjccgigekurdbfdijghgfbdhbhticgjvcfkjhfjcbj", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10639", "d": "9/2017"}, {"title": "remove performwithpriority scheduler", "body": "nt actually use anywhere let remove", "num": "10637", "d": "9/2017"}, {"title": "question state object setstate", "body": "suppose objects maps different dom components following coding practice helps react setstate save work practice thisstate allobj one true two true three false four true updatestate val key var tmpobjthisstateallobj tmpobj key val thissetstate allobj tmpobj practice thisstate one true two true three false four true updatestateone val thissetstate one val updatestatetwo val thissetstate two val", "num": "10636", "d": "9/2017"}, {"title": "setstate", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10635", "d": "9/2017"}, {"title": "warnings use consolewarn", "body": "want request feature report bug bug feature current behavior warnings logged consoleerror current behavior bug please provide steps reproduce possible minimal demo problem via similar template using react rc behavior come every warning react logged far expected behavior warnings logged consolewarn way actually filter output console distinguish real errors warnings versions react browser os affected issue work previous versions react react rc chrome", "num": "10633", "d": "9/2017"}, {"title": "pattern parent initiated fetch child data", "body": "performance reasons child element whose data stored state state instead passed hierarchal chain using callbacks passed props comes time action parent element dictates need data correct pattern fetching child use refs call childfetchdata method via saved reference change prop flag causing child call prop callback data", "num": "10632", "d": "9/2017"}, {"title": "update use new package", "body": "want request feature report bug stop throwing warnings used recent react nt tested manually seems like throw using old style getting react directly also package listing dependency current behavior probably throws warning least models outofdate syntax wo nt work deprecate current behavior bug please provide steps reproduce possible minimal demo problem via similar template todo expected behavior uses package shown docs versions react browser os affected issue work previous versions react react betarc", "num": "10625", "d": "9/2017"}, {"title": "release checklist rc", "body": "ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions x x x x ping someone team ensure react fresh x ensure x x master green ci check recent commits x check local output matches commit list x run repo root ensure runtime dependencies match users would get x x look version range root x ensure depending specify range x run repo root miss caret x x look version range root x ensure depending specify range x run repo root miss caret x x look version range root x ensure depending specify range x run repo root miss caret x might change lockfile change x commit changes see x edit broken branch nt block rc fixed asap sophiebits flarnie local sanity checks repo root x run repo root x run repo root x run repo root stable release update error codes x run repo root x changes x maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master see update version x update export x update x x x x x see packages update list x run verify changes x build x run repo root run fast packaging smoke test x open browser smoke test x say hello world run slow packaging smoke test x go run x x go repo root run x open verify every iframe shows hello world release x run x run x go x every subfolder x nonstable versions run subfolder x stable versions run subfolder bonus try", "num": "10623", "d": "9/2017"}, {"title": "new release checklist", "body": "current release process convoluted think agreed maintaining branches release master means breaking changes land behind flag issue documenting new masterbased release process intended exhaustive let know something missing agree deleting existing documentation point issue instead issue checklist format copypasteable specific release issues ht flarnie tip ideally automate parts potentially fixing rrm work model want cut release ensure commits master tested facebook check part latest internal sync stable releases prefer landed week skip step really know verify npm permissions ping someone team ensure react fresh ensure master green ci check recent commits check local output matches commit list run repo root ensure runtime dependencies match users would get look version range root ensure depending specify range look version range root ensure depending specify range look version range root ensure depending specify range run might change lockfile change commit changes local sanity checks repo root run repo root run repo root run repo root stable release update error codes run repo root changes maybe still separate branch docs reading need cherrypick commit branch makes sure website decoder knows updated error codes ideally change docs serve master stable release write changelog open add release notes format earlier make sure changes easy understand friendly oneliners better pr titles make sure contributors credited like verify markup messed previewing online editor update version update root update export update react version see packages update list run verify changes build run repo root run fast packaging smoke test open browser smoke test say hello world run slow packaging smoke test go run go repo root run open verify every iframe shows hello world release run run go every subfolder nonstable versions run subfolder stable versions run subfolder run verify things published expect fixme really automate part currently atomic stable release create github release open new release page github choose tag version pushed dropdown says existing tag paste new release notes attach files except release press publish release stable release update version reported website open change newly published version maybe still separate branch docs reading need cherrypick commit branch makes sure website knows updated config ideally change docs serve master stable release update bower clone bower repo outside main repo make sure delete js files bower repo copy react repo bower repo bower repo miss bower repo stable release try stable release reach dom team reach dom team nhunzaker jquense aweary case would like go dom fixtures block release", "num": "10620", "d": "9/2017"}, {"title": "browser version requirements", "body": "react list supported browser version could find browser version requirements", "num": "10618", "d": "9/2017"}, {"title": "tests totree rendered array", "body": "nt know bug wrong component render returns array fiber rendered returns first element javascript const wrap children gt children describe test gt current behavior log first element expected behavior think array elements versions react browser os affected issue work previous versions react react", "num": "10616", "d": "9/2017"}, {"title": "remove cacheinvalidating codehack", "body": "want request feature report bug bug current behavior output code building hack code includes time compilation causes whole file modified codesplitting bad caching relevant output code see lastbuild current behavior bug please provide steps reproduce possible minimal demo problem via similar template build project react reactdom development production check diff two supposedly identical builds expected behavior two builds outputs identical modifications made versions react browser os affected issue work previous versions react", "num": "10615", "d": "9/2017"}, {"title": "add module build npm package", "body": "followup tweet unpkg unpkg module support fun try using inside", "num": "10613", "d": "9/2017"}, {"title": "ambiguous documentation purecomponent component", "body": "want request feature report bug bug ambiguous documentation well feature documentation update request current behavior currently documentation purecomponent says reactpurecomponent exactly like reactcomponent implements shouldcomponentupdate shallow prop state comparison note states furthermore reactpurecomponent shouldcomponentupdate skips prop updates whole component subtree make sure children components also pure question circumstances skip prop updates whole component subtree also implicitly say implement behaviour different example returns props propagation wo nt stopped word make sure children componetns also pure would handy documentation component shouldcomponentupdate says default behavior rerender every state change props returning false prevent child components rerendering state changes prevents prop propagation effectively stops rerender cycle child components sentence sounds like two events may related implemented way prevent rerender rewording something like component state changed called rerender cycle initiated regardless parrental scu returning false point past understand correctly component rerender receives new props parent component component also rerender state gets changed component change state receives new props calling outside component expected behavior expected find explicit documentation currently sentences look like apply expected find explicit mention behaviour exactly happen return articles react components found web reformulate official rules way extends ambiguity versions react browser os affected issue work previous versions react", "num": "10610", "d": "9/2017"}, {"title": "htmldivelement nt placeholder type", "body": "edit content div contenteditablebut typereact placeholder support tsx", "num": "10609", "d": "9/2017"}, {"title": "facebook", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10607", "d": "9/2017"}, {"title": "facebook", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "10606", "d": "9/2017"}, {"title": "support importscripts web worker", "body": "hello could explain importscripts supported web worker added replace importscripts thank", "num": "10604", "d": "9/2017"}, {"title": "proptypes validation", "body": "want request feature report bug feature current behavior proptypes checking type parameters whatever component receiving parent component current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior proptypes also check values type data receiving validation feature useful specification values also want restrict component get particular values versions react browser os affected issue work previous versions react", "num": "10603", "d": "9/2017"}, {"title": "request twoway binding helpers article improved", "body": "want request feature report bug documentation update current behavior describes deprecated feature expected behavior ideally provide reader documentation nondeprecated feature least provide explanation feature heavily discusses deprecated article provide good deal informative information twoway bindings useful react works focuses heavily nowdeprecated feature requesting page top result google uk searching react twoway binding without quotes", "num": "10602", "d": "9/2017"}, {"title": "uncaught error element type invalid", "body": "loginjs import react react import link reactrouter export default class login extends reactcomponent mainjs import react react import reactdom reactdom import browserrouter router route indexroute reactrouterdom import login componentsloginjs import registration componentsregistrationjs reactdomrender documentgetelementbyid app versions react browser os affected issue work previous versions react", "num": "10601", "d": "9/2017"}, {"title": "docs better documentation purecomponent", "body": "want request feature report bug doc update current behavior currently little section current behavior bug please provide steps reproduce possible minimal demo problem via similar template lacks indepth information using refer blogposts get sense implications using expected behavior would really better reference documentation like following example usage specifically points functionality possible override clearer explanation change reference results rerender note inline functions event handlers might rerender pure components nice info history wrt problem note prevents children depending info rerender versions react browser os affected issue work previous versions react part react happy work pr change yall think issue valid", "num": "10600", "d": "9/2017"}, {"title": "returning plain string component renders collapsed text nodes server", "body": "observed react js import react react import rendertostring reactdomserver const b gt b consolelog rendertostring c renders try hydrate get error text content match server bc client b", "num": "10598", "d": "9/2017"}, {"title": "bringing reasonreact reducers reactjs", "body": "awesome reactjs reducers similar reasonreact recently introduced also decided iterate reasonreact instead core react partially reason users partially reasonreact nature new amp less used allow us iterate exciting new apis without legacy concerns since could nt find previous talk assuming discussed internally great chat open iterate core react state management reasonreact reducers example reason type actions bumpcount toggledialog bool type state count int showdialog bool let component reasonreactreducercomponent mycomponent let make classname children gt component initialstate fun gt count showdialog false reducer fun action state gt switch action bumpcount gt reasonreactupdate state count statecount toggledialog show gt reasonreactupdate state showdialog show render fun state reduce gt let message clicked stringofint statecount time stateshowdialog reasonreactnullelement", "num": "10596", "d": "9/2017"}, {"title": "document ca nt rely react ssr patching differences", "body": "ssr loaded client side various wrong behaviors server html differs client html minimal example created repository code snippet example render css background color red server green client force difference server client html property react everything works expected server renders red background client corrects green react however background stays text changes expected probably similar behaviors example found bug conditionally rendering complete component like becomes even weird additional jsx conditional rendering would render additional jsx inside becomes server side client side see behavior website open chrome dev tools lower width get mobile view reload page see list wrapped inside another component", "num": "10591", "d": "9/2017"}, {"title": "warn unknown nonlowercase attributes", "body": "seems problematic allow arbitary nonlowercase attribute html nodes server ability keep case sensitive html nt end different client probably warn attribute known one lowercase", "num": "10590", "d": "9/2017"}, {"title": "make onoff yesno boolean attributes work", "body": "pass boolean attributes eg nt work correctly actually want specific string think also attributes want let make work could use special flagwhitelist similarly probably make valid turn currently think works master", "num": "10589", "d": "9/2017"}, {"body": "referring html link broke new website need fix asap", "d": "9/2017"}, {"body": "pushed temporary fix file", "d": "9/2017"}, {"body": "markerikson like idea tabs markers code boxes variants like latest drafts current es scripttags would nt complete overhaul also nice see differences would nt throw persons flyby perhaps explanation top react adapts preferences language nt much dictate write code gateways intimidating beginner idea actually wanted would skip sites tried push around confronted paths though want find react glancing sure would leave good impression", "d": "9/2017"}, {"body": "drcmda tabs thing last comment suggesting regards code samples yes however think overall flow docs needs guided terms user trying accomplish current experience level", "d": "9/2017"}, {"body": "another related idea would code samples docs multiple syntax variations could viewed switching tabs global option across site like plain syntax jsx syntax syntax imo good idea issue", "d": "9/2017"}, {"body": "markerikson pages liked nt forgotten ones present information want need clear unobstructed manner current react docs instance quite close four code boxes front page almost teach react amazing due javascripts fragmented nature way stretches examples ways either seem verbose unfamiliar guess expect frontpage present react leanest efficient way possible allow us see could screw binding hacks script tags fear path thing would take away site perfectly right", "d": "9/2017"}, {"body": "drcmda saying put information front page right front page toplevel menu items docs tutorial center page links get started link docs tutorial docs link leads hello world page part getting started guide nav section right several entries getting started section thoughts observations advanced guides reference sections right nav start collapsed indication inside difference get started tutorial sections overlap much actual api docs sort buried reference nav subsection bottom hello world page mentions examples use syntax points mdn nt real clear flow guidance order read things going list sections docs nav sidebar per dan tweets hn thread people many different expectations docs cover somehow simultaneously show use react dropin script tag also show use latestandgreatest notyetfinal es syntax cover whole bunch javascript basics also tell build complete applications using libraries tools nt even part react suggesting docs structured way gives reader direction contents inside docs could grouped areas based rewritten better target specific knowledge levels direct reader one topic another front would point reader appropriate starting points within docs", "d": "9/2017"}, {"body": "expected intentional bundle react publishing npm helps ensure produce smaller consistent builds regardless bundler also helps webpack reducing dependency count", "d": "9/2017"}, {"body": "gaearon got thanks", "d": "9/2017"}, {"body": "simple example tabbing works amp nt work depending case note console state error mean really sure display app", "d": "9/2017"}, {"body": "hey work", "d": "9/2017"}, {"body": "really bug much incomplete feature sidenav passive rather active would nice fix though followup list nt converted wiki github issue yet", "d": "9/2017"}, {"body": "included production close", "d": "9/2017"}, {"body": "related gets implemented think nav also sort scrollspy make apparent sub section lack already noticeable tutorial section initially clicked stays highlighted matter document", "d": "9/2017"}, {"body": "slightly proposed change moment would tightly couple sidenav yaml config files markdown content changing article title markdown adding new markdown file requires someone remember also update yaml file proposed change would require edits ensure anchor tags stayed sync ideally would like actually remove yaml files entirely sidenav generated programmatically based markdown content point would possible add section headers although love hear joecritch opinion uiux", "d": "9/2017"}, {"body": "related gets implemented think nav also sort scrollspy make apparent sub section lack already noticeable tutorial section initially clicked stays highlighted matter document always roadmap tutorial nt time add yet issue fwiw", "d": "9/2017"}, {"body": "ui perspective dig think provides focus context reason introduced accordion sidebar sections similar reason think complements well yeah sidebar generated based markdown bvaughn suggested could work although articles need document outlines sanitizing", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "anyone already working glad give shot recently working gatsby personal project think integrate plugin", "d": "9/2017"}, {"body": "thanks bringing attention", "d": "9/2017"}, {"body": "intentional change implementation detail add hook root component accomplish", "d": "9/2017"}, {"body": "hey carruthe use selector match first div", "d": "9/2017"}, {"body": "even spread app component", "d": "9/2017"}, {"body": "sorry unexpectedly broke anything carruthe mentioned implementation detail nt used though understand easier said done suggestions listed hopefully good solutions gaearon maybe add note blog post sure others relying attributes", "d": "9/2017"}, {"body": "hey haroenv thanks bringing attention happy accept help issues cc joecritch cursor color suggestions", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "know", "d": "9/2017"}, {"body": "back", "d": "9/2017"}, {"body": "nt anything new specifically events portals sort work due implemented anything new event code way works nutshell react sees event top level finds component associated events manually walks component tree triggering event handlers mimicking capture bubble phases real dom events previously subtree rendering old portals different component trees react could nt see events portal parent portals properly part react component tree parent react walks fire events cross portal boundaries", "d": "9/2017"}, {"body": "thanks info code tries using existing event system leave case anyone happens find useful bit messy typescript import react react export interface idetectexternaleventsprops component string reactevents array domevents array onexternalevent event event gt void export class detectexternalevents extends reactcomponent fields private disposetoplevelevents gt void null null private lastinterceptedevent event null null javascript content maybe including portals window know internal external unfortunately needs wrapper component attach react events needs duplicate event names dom react formats", "d": "9/2017"}, {"body": "fixed version made two fixes nt trigger events bubble portals added removes end extra empty node time close portal", "d": "9/2017"}, {"body": "nice seen events bubble portals late yesterday thx", "d": "9/2017"}, {"body": "get js class timer extends reactcomponent constructor props super props thisstate secondselapsed tick thissetstate prevstate gt secondselapsed prevstatesecondselapsed componentwillmount consolelog willmount componentdidmount consolelog mount thisinterval setinterval gt thistick componentwillunmount consolelog unmount clearinterval thisinterval render return seconds elapsed thisstatesecondselapsed reactdomrender mountnode", "d": "9/2017"}, {"body": "reports bit hard understand tatomyr report nothing prints code log please provide full code including code logging preferably fiddle github project clone suhaotian explained exactly getting expect get please provide full runnable example eg fiddle description expect see actually see", "d": "9/2017"}, {"body": "gaearon copy component pasted livejsxeditor console log", "d": "9/2017"}, {"body": "suhaotian still nt understand wrong expecting see might website editor accidentally mounts component twice causing mount unmount mount nt sound like react bug please create isolated example demonstrating react bug", "d": "9/2017"}, {"body": "willmount mount log twice", "d": "9/2017"}, {"body": "provide fiddle reproduces problem ran code locally nt see printed twice react website reliable way tell many times something printed live editor", "d": "9/2017"}, {"body": "sorry dan bad test jsbin problem", "d": "9/2017"}, {"body": "sounds great worries tatomyr need complete example", "d": "9/2017"}, {"body": "hmm nt case fiddle seems problem comes webpack settings", "d": "9/2017"}, {"body": "upload project could take look", "d": "9/2017"}, {"body": "already found problem totally fault configured webpack incorrectly", "d": "9/2017"}, {"body": "curious could share happened could help next person bumps", "d": "9/2017"}, {"body": "client bundle js duplicated nt even noticed react actually latest react update revealed problem point initially recognized issue related react update pointing existing fault", "d": "9/2017"}, {"body": "warnings fixed changing link button adding keys", "d": "9/2017"}, {"body": "yes call warnings point seeing warnings guide says plus warning explicit using thought brought attention", "d": "9/2017"}, {"body": "warning browser terminal showing eslint warnings", "d": "9/2017"}, {"body": "haroen right key warning browser developer console lint warning mention terminal depends linting toolconfiguration using agree though change question", "d": "9/2017"}, {"body": "reporting inside reactrouter repo instead threescales", "d": "9/2017"}, {"body": "think right ptomasroos think cause render array", "d": "9/2017"}, {"body": "react router support react please use recent version think support", "d": "9/2017"}, {"body": "gaearon thx let try", "d": "9/2017"}, {"body": "please share complete example reproducing fiddle github project otherwise hard fix issues", "d": "9/2017"}, {"body": "reproduce example please provide full reproducing project say browser using", "d": "9/2017"}, {"body": "ah found example still working ca nt reproduce think something combination external libraries update example find time thanks", "d": "9/2017"}, {"body": "oh copy pasted snippet empty page nt help provide example would great", "d": "9/2017"}, {"body": "rendering menu layout component isnt unmounted page changes pages currently inject params nav menu storing menu scroll position layout passing page component render sounds promising", "d": "9/2017"}, {"body": "put together code sample specific seems methods called neither frame ticks stateprop updates cause called place put export const myrenderer function let container called like", "d": "9/2017"}, {"body": "sake clarity actually really const c name gt props gt reactcreateelement name props export const foo c foo export const bar c bar export const baz c baz", "d": "9/2017"}, {"body": "want say react awesome", "d": "9/2017"}, {"body": "yes works", "d": "9/2017"}, {"body": "problem number problem string use ensure stays number warning react specifically would stop working warning react passing unitless numbers string supported feature", "d": "9/2017"}, {"body": "yes mean would nice warning reac number string without px work nt add px like string width nt change", "d": "9/2017"}, {"body": "understanding warning behavior would change changed warning unnecessary context change made perhaps sophiebits tell", "d": "9/2017"}, {"body": "thanks sens nt keep old warnings thanks dan react running twice three faster", "d": "9/2017"}, {"body": "mostly never intentionally supported minor things could always break without us realising also skips important warnings generally caught testing stage curious hear use case running production accidental switch development mode tests instead", "d": "9/2017"}, {"body": "wave use case using json test renderer power searchanalytics features rather using html using server renderer", "d": "9/2017"}, {"body": "use case much less cool iamdustan simply running production build wanted test actually building end users something different react particular strips things mode doubt production mode broken hypothetically another library could written sorts code nt work outside development mode", "d": "9/2017"}, {"body": "fair enough nt mind relaxing adding support back", "d": "9/2017"}, {"body": "hey welcome react community hope enjoying far try use issue tracker bug reports feature requests recommend checking list great support resources listed doc page get support thanks", "d": "9/2017"}, {"body": "think would make sense check mostly always make intention explicit people mean hydrate get surprised wrong place hydration nt work others mean clear render would surprised hydration happened explicit api helps make always clear expected happen case seems bit unusual", "d": "9/2017"}, {"body": "okay use check thanks", "d": "9/2017"}, {"body": "hi conference meetup generally reserve page conferences edit page", "d": "9/2017"}, {"body": "react conference gaearon event page working website react conferences held nigeria qualify", "d": "9/2017"}, {"body": "also please particular branch raise pr merged gaearon", "d": "9/2017"}, {"body": "master fine thanks", "d": "9/2017"}, {"body": "pr gaearon", "d": "9/2017"}, {"body": "thanks merging pr gaearon please see conference list reasons", "d": "9/2017"}, {"body": "gaearon look sec please event added still appear", "d": "9/2017"}, {"body": "sorry middle moving new website hopefully deployed today already", "d": "9/2017"}, {"body": "thanks lot gaearon looking old website", "d": "9/2017"}, {"body": "mobile web input box build react controlled input upgrade react mean probably issue affects well", "d": "9/2017"}, {"body": "hi gaearon thank provide issue reference glad hear one issue test ran react pass upgrade fail also try build react still work thanks charles", "d": "9/2017"}, {"body": "looking issue right thanks much instruction flarnie", "d": "9/2017"}, {"body": "sorry could please tell set local environment first time contributing react", "d": "9/2017"}, {"body": "hi thomasyimgit glad help first need fork react repo clone fork main directory able follow directions wwwreadmemd context instruction contributor guide may helpful", "d": "9/2017"}, {"body": "hi flarnie issue solved pr merged thank let know means lot first time contributing start future thank", "d": "9/2017"}, {"body": "glad help thomasyimgit look forward next pr", "d": "9/2017"}, {"body": "think make actually make highlight darker rather lighter anything want contrast parts want focus pr", "d": "9/2017"}, {"body": "get started tackle issue first time contributing react try best btw mean timeline nt see difference computer looks like computer thanks time explanation flarnie", "d": "9/2017"}, {"body": "wow sorry looks like someone already fixed around time opened issue thanks anyway volunteering thomasyimgit", "d": "9/2017"}, {"body": "giratikanon throwing something close use cases mentioned could sense check would something like following pattern work js class onlyonclient extends component static proptypes placeholder proptypesnode html proptypesstring state onclient false shouldcomponentupdate return thisstateonclient componentdidmount thissetstate onclient true render thisstateonclient return thispropsplaceholder const graphics gt text rerender html graphics etc wo nt rerender gt okay rerender idea wrap key parts post need avoid rerendered client deferring serverrendering onetime client using use placeholder bestguess height appropriate loader graphic avoid reflow improve reading experience nt really tested possible overlooking something obviousdoing something dumb", "d": "9/2017"}, {"body": "hey issue freetotake give go creating doc", "d": "9/2017"}, {"body": "krizzu give go time later weekend mind ccing branch", "d": "9/2017"}, {"body": "bug probably always wrap umd bundle iife want send pr fix", "d": "9/2017"}, {"body": "tbh never built js project since clojurescript slightest clue build process fix would necessary", "d": "9/2017"}, {"body": "imagine want change something like add case umds maybe unify every bundle", "d": "9/2017"}, {"body": "sent fix realize nt help rollup umd wrapper relies think like know tool responsible toplevel variable first place would expect rollup keep everything inside wrapper uglify add option preserve toplevel wrapper", "d": "9/2017"}, {"body": "apparently gcc", "d": "9/2017"}, {"body": "let continue discussion original issue close one reopen one", "d": "9/2017"}, {"body": "sherryer mean want click button free event handler", "d": "9/2017"}, {"body": "dom renderer one currently using allows react compute new props apply separately applying diff commit useful pausing resuming work renderers compute diff reconciliation added substantially information motivation use case", "d": "9/2017"}, {"body": "animation priority callback removed remember right already expressible existing api eg flush synchronously inside coalesced raf call custom renderers nt currently need aware priorities scheduling need provide idle callback scheduling mechanism said access methods directly exposed renderer expose user example see reactdom exposes flushsync", "d": "9/2017"}, {"body": "thanks gaearon followup questions nt mind idle callback scheduling mechanism done providing something seems noop test renderers manual managing different ways art renderer uses prebuilt please explain little reason one approach taken vs cases flag would ever want turn", "d": "9/2017"}, {"body": "yes example browsers method noop test renderers run primarily node noop renderer originally built test explore fiber reconciler extent knowledge keeps reconciler synccompatibility mode definitely turn use react future asyncprio manner bugs since set features still development", "d": "9/2017"}, {"body": "yes noop test renewers used real browsers simplest thing possible dom renderer uses browser falls back polyfill available forces everything synchronous tests always synchronous simplicity browser want eventually enable async scheduling fiber architecture however ca nt enable immediately quite ready leave disabled offer way gradually opt", "d": "9/2017"}, {"body": "haha seeing similar answer reassuring kinda know talking", "d": "9/2017"}, {"body": "lol", "d": "9/2017"}, {"body": "interesting using renderer drive animation example webgl renderer outside browser manual screen repaint via sdl something would still want like would want instead force always", "d": "9/2017"}, {"body": "would make sense use deferred callback used lowpriority work example components visible might become visible future react start working idle periods", "d": "9/2017"}, {"body": "could nt meant used body posts case markdown fixed", "d": "9/2017"}, {"body": "think trueadm saw something similar optimising performance", "d": "9/2017"}, {"body": "bit tangential kinda feel like lineheight large across board inspecting body text fontsize lineheight feel somewhere range typically better enough fits screen asis imo", "d": "9/2017"}, {"body": "thank fixed fyi relay article uses multiple elements stick one per page aesthetics amp accessibility", "d": "9/2017"}, {"body": "acdlite thanks suggestion changed felt tight case due line width see think", "d": "9/2017"}, {"body": "thanks joecritch", "d": "9/2017"}, {"body": "ccorcos work done toplevel api managing render commit phases check demo explanation acdlite get idea things might headed", "d": "9/2017"}, {"body": "notion pretty cool btw say hi surganov", "d": "9/2017"}, {"body": "interesting use case suggests redux missing feature something like argument", "d": "9/2017"}, {"body": "think thing reason would need global triggers many separate updates many components nt know component schedule callback happens redux works today calls every connected component mostly implementation detail conceptually single atomic update call provider rest changes propagated via context reason nt context uh kinda sucks asis model hook asking would callback provider redux could expose like reason want callback scheduled per action future move async different actions may scheduled different priorities callbacks may fire different times depending priority", "d": "9/2017"}, {"body": "slight tangent idealized possiblefuture version react redux head store state stored component state inside provider something like would allow react scheduler abort reorder rebase redux actions according priority nt possible today though course figure means middleware enhancers maybe fix context though necessarily blocker would still work pub sub like today eh maybe would hard pub sub asyncfriendly way", "d": "9/2017"}, {"body": "course nt really reactredux redux react thing", "d": "9/2017"}, {"body": "nt reduxsplain reactsplain acemarke", "d": "9/2017"}, {"body": "thanks guys acdlite touched things example gave simplest possible example many complicated examples require feature looking application use different places stuff like scroll things view render changing user selection user manipulation focusing elements dragged dropped onscreen clicking elements created etc understand correctly getting user focus could state redux managed component living redux world buy complicated examples like clicking dom elements scrolling elements appear would challenging handle via state actions oneoff events probably live redux action async renderering reprioritizing interesting dilemma could api like called next render called render queue empty", "d": "9/2017"}, {"body": "getting user focus could state redux managed component meant suggest point callback fire right action flushed dom second parameter provides kind like fires specific update rendered every render important world different updates different priorities next render might include update scheduled using callback guarantee effect dispatched action already flushed dom future version redux could potentially expose adding second argument whether focus state stored redux nt important", "d": "9/2017"}, {"body": "ahhh see mean right waiting callbacks complete using something similar reactivemagic state management means application might responsive could least works far implementing granular callback setstate inside redux especially pure way sounds challenging nt know components need update begin rerender suppose means way granular level implement render queues within state management layer nt mean couldnt implement global reactdidupdate waits rendering flush", "d": "9/2017"}, {"body": "nt know components need update begin rerender call every component needs update response update render pass always case today work need make work future redux works react async rendering global pretty unlikely scale besides callback rootprovidertype component described provides effectively thing", "d": "9/2017"}, {"body": "want make sure part clear reason redux triggers many calls single dispatch workaround issue changes propagate component whose returns false connected redux component subscriber store ideally call provider connected components would update via context contextlike mechanism regardless implement never want situation single dispatch causes components rerender different times get tearing momentarily inconsistent ui mostly big deal today world synchronous part synchronous batch tears noticeable async world tearing problem might hundreds milliseconds update flushed depending queue", "d": "9/2017"}, {"body": "yknow excellent point nt connected dots yet tagging jimbolla timdorr fyi", "d": "9/2017"}, {"body": "acdlite research done coordinating via explicit batches especially async react render cycle would get implicitly priorities grouping occurs along priority values think would particularly helpful coordinating sections ui avoid inconsistencies async actions concretely thinking something like would group units work reconcile dom vdom fullyrendered components would way ensure synclike behavior updates component btw saw library recently describe future reactredux forget name basically try find", "d": "9/2017"}, {"body": "curious seen lib good chance seen nothing immediately coming mind", "d": "9/2017"}, {"body": "found freactal pretty sure", "d": "9/2017"}, {"body": "acdlite see point abut tearing makes sense need way ensure two components render sync going demo pretty much every library seen uses subscribers within components otherwise nt scale well could image libraries using custom render queues enqueue forceupdates committing together way could multiple render queues run animations separate queue nt happen sync cool stuff ideas land production sounding like external library feature less like react feature talk", "d": "9/2017"}, {"body": "timdorr yeah considered something like probably would nt use batch ids say batching react done priority level also moving model priorities expressed expiration times lower priority later expiration time current time advances things increase priority eventually expire point rest work flushed synchronously group likepriority updates rounding expiration time eg low priority updates scheduled within expiration time happen start scheduling whole bunch updates right edge bucket could spill next one nt even large amount updates right edge say think redux works today action dispatched store updates state call connected components need way guarantee receive expiration time maybe explicit batch api maybe nt want encourage overbatching either could get starvation every time add something new batch takes additional work updates batch flush another problem solve redux lack commit phase synchronization phase someone calls connected components nt updated yet value get store value actually rendered screen tearing think api inherently flawed async world gets back store state provider component state use updaters comment allows us leverage react rebase actions example dispatch normal priority action high priority action really want flush twice applied later order js const initialstate log function reducer state action return log statelog actionvalue dispatch value normal pri dispatch value b high pri first react flushes b higher priority state log b later react flushes b order state log b note rebased high pri action top low pri action thanks react means getting rid stores know today along things like nt think means replacing redux markerikson nt think store important part redux reducers middlewares stay patterns likely still work might need change bit unchanged essential parts redux imo store another way saying react already really good sophisticated system scheduling ui state updates redux pattern top something replaces", "d": "9/2017"}, {"body": "hello bvaughn work", "d": "9/2017"}, {"body": "sorry missed comment actually fixed response pr feedback would like work another website task several need file morning actually", "d": "9/2017"}, {"body": "fixed via", "d": "9/2017"}, {"body": "hey bvaughn yes definitely thank", "d": "9/2017"}, {"body": "great filter issues tagged component documentation amp website looking help website specifically adding new issues label today", "d": "9/2017"}, {"body": "bvaughn sounds good", "d": "9/2017"}, {"body": "hey bvaughn work also find directory replace proptypes flow types thank", "d": "9/2017"}, {"body": "find gatsby branch", "d": "9/2017"}, {"body": "hi welcome work although want either wait merged branch suggest tackling incrementally via several small focused prs", "d": "9/2017"}, {"body": "maybe move licenses docs directory since docs directory licenses", "d": "9/2017"}, {"body": "nice catch clemmy", "d": "9/2017"}, {"body": "hi bvaughn would like tackle issue would first time contributing react likely need little direction", "d": "9/2017"}, {"body": "check branch run folder open try reproduce issue try figure breaks", "d": "9/2017"}, {"body": "hi nicbonetto sounds great sure gaearon flarnie happy help questions", "d": "9/2017"}, {"body": "new pr", "d": "9/2017"}, {"body": "found problem using package dev mode sending rendered html back client prettify seems cause error shown remove prettify", "d": "9/2017"}, {"body": "sebmarkbage would say expected", "d": "9/2017"}, {"body": "infos also issues react prettify whole html string fix prettify string returned rendertostring seems react problems generated dom prettified", "d": "9/2017"}, {"body": "sending rendered html back client prettify hey timoruetten curious use case sending prettified html client typically see people taking opposite approach sending minified html client reduce payload size", "d": "9/2017"}, {"body": "hey aweary thats absolutely true production mode sometimes need take look html send server app production mode prettify happen", "d": "9/2017"}, {"body": "far thing really real bug close issue", "d": "9/2017"}, {"body": "think reasonably legit special case could support could smart cases text node whitespace would semantic meaning would nt ignore warning case believe hydration mostly fault tolerant individual extra text nodes showing look next node try hydrate however sure need unit tests verified nt think super highpri let reopen case someone feels strongly working important get semantic meaning part right expect pr come big test suite cover whitespace edge cases", "d": "9/2017"}, {"body": "always fire reconciliation completed may trigger another reconciliation calling help", "d": "9/2017"}, {"body": "thank yes answers question triggers another also fire rendering completed relate asynchronous scheduler way detect rendering completed rendering mean entire tree including whatever synchronous processing child nodes", "d": "9/2017"}, {"body": "asynchronous rendering may potentially interrupted restarted many times whole tree ready start committing write dom trigger lifecycles", "d": "9/2017"}, {"body": "ok great thanks closing", "d": "9/2017"}, {"body": "yea going tricky implementing fiberlike reconciler less trivial specific details might get way explaining core idea", "d": "9/2017"}, {"body": "never mind case sensitive", "d": "9/2017"}, {"body": "looks like big footgun component would redownload user data every single reconciliation component tree would stuck waiting component finish downloading every time", "d": "9/2017"}, {"body": "think provide something fetch request abandon redux let project store state messy", "d": "9/2017"}, {"body": "think support single argument probably call breaking changes want send pr", "d": "9/2017"}, {"body": "unfortunately bandwidth figure right way fix furthest could get realize two batches stackbatchedupdates vs fiberbatchedupdates defined differently fiber one use", "d": "9/2017"}, {"body": "yes means support one argument happy take pr notes breaking changes intentional", "d": "9/2017"}, {"body": "gaearon made pr", "d": "9/2017"}, {"body": "impacts users running development build react issue production nuisance easy work around abovementioned change would appropriate fix unfortunately support perform work know expected reasonable fix issue", "d": "9/2017"}, {"body": "provide failing unit test clear code referring", "d": "9/2017"}, {"body": "thought super clear documentimplementationcreatehtmldocument fix unless empty string passed reactdevelopmentjs wo nt function properly edit quirk nt think unit test would fail would require test run inside", "d": "9/2017"}, {"body": "want send pr change", "d": "9/2017"}, {"body": "absolutely acceptable change", "d": "9/2017"}, {"body": "sounds reasonable", "d": "9/2017"}, {"body": "fixed via", "d": "9/2017"}, {"body": "choose cjs umd build take look last slash important example production builds", "d": "9/2017"}, {"body": "yes change url mentioned changelog release notes avoid breakage future please make sure use specific version url", "d": "9/2017"}, {"body": "clear browser need use umd builds development versions production versions", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "since html attributes caseinsensitive work expected js var div documentcreateelement div divinnerhtml produces divcellpadding true", "d": "9/2017"}, {"body": "yes agreed though easy way make react output attributes lowercased would canonical way format currently attributes", "d": "9/2017"}, {"body": "seems like nt matter practice although open reviewing prs lowercase anything html namespace", "d": "9/2017"}, {"body": "understand expected behaviour dom renderer nt render props recall jsx simply data structure render using would need explicitly render component using something like following jsx import rendertostaticmarkup reactdomserver gt note alternative reactdom must mount dom element nt satisfy use case kind acceptable something rendering serverside definitely anything rendered browser obviously would need bundle also rerendered internal state changes though would problem exact example since internal state", "d": "9/2017"}, {"body": "trying achieve using react component returning string instead plain function", "d": "9/2017"}, {"body": "yeah supported use case rendering child others noted plain js function would appropriate component", "d": "9/2017"}, {"body": "please provide plunker", "d": "9/2017"}, {"body": "please see change intentional library see affected far way works highly unusual believe benefits change bugs easier find outweigh downside library unconventional api stops working clear stopped calling tostring functions usually source code uncommon overwrite mean something else happy take prs mentioning prominently changelog", "d": "9/2017"}, {"body": "thanks gaearon agree nt accept functions wanted make sure nt crazy p", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "thanks ton putting list together clemmy believe broken links fixed removing prefix path markdown files adding missing acknowledgements page", "d": "9/2017"}, {"body": "bvaughn took look new deploy seems fixed except following inside docstestrendererhtml none soft links work incorrect capitalization", "d": "9/2017"}, {"body": "hm clarify soft links referring ones tried seem work", "d": "9/2017"}, {"body": "chrome", "d": "9/2017"}, {"body": "ah see broken old site good catch", "d": "9/2017"}, {"body": "fixed via", "d": "9/2017"}, {"body": "haha p", "d": "9/2017"}, {"body": "whoops sorry", "d": "9/2017"}, {"body": "sure fix right nt think works would work", "d": "9/2017"}, {"body": "ah maybe works gatsby", "d": "9/2017"}, {"body": "yeah tested every link making change", "d": "9/2017"}, {"body": "actually think showing valuable gives sense use real projects probably want control order stacked dom technique gives perhaps better way explain cc acdlite", "d": "9/2017"}, {"body": "yes definitely way get control order hand nt part portal components built updated pen adding class portalroot component point mean writing portals way current docs demonstrate must make work creating showcase like would perfectly ok seems like additional boilerplate might confuse explain especially beginning cool react extension", "d": "9/2017"}, {"body": "react logo nothing reactos logo list several projects similar logos atom pun intended think overreacting ops pun intended way think even issue better place post question would websites like ps quick search google would find article", "d": "9/2017"}, {"body": "hey sorry first time since open sourcing react someone brought practice nt seen confusion two people generally know whether looking operating system javascript library overlap two agree logo similarity unfortunate pretty obvious leap react reactor often visualized something atomlike sure find bunch projects called similarly also use similar logo nt think would fair say react treading coattails reactos react installed million times week fairly confident people installed nt mean install reactos intentional users react appreciate sharing concern hope answers cheers", "d": "9/2017"}, {"body": "reactjs reactos difference one letter reactjs almost logo reactos projects reactos irc channel every day new visitors asking helping reactjs", "d": "9/2017"}, {"body": "answer concern resolve name logo confusing lead confusion future definitely issue overreaction point chosen react name atom logo obviously inspired consciously subconsciously previous exposure reactos logo otherwise much coincidence confusion started point atom logo paired react name one element might acceptable starts become mere coincidence regardless cause fact exists result combination confusing least fact react product sponsored facebook could lead serious issues reactos team definitely future rather seeing nonissue suggest start thinking solution need become argument expect discussion argument would become quite clear reactos name logo pairing existed long react prevent argument might wise think possible solution never said react treading coattails reactos said looks project treading coattails reactos certainly look way due pairing logo name unlucky would choose logo name similar certainly mistake unconscious one suggest could quite serious issue future given reactos aims de facto open source replacement windows therefore need give thought resolving projects sake think needs resolved keep civil nonadversarial would suggestion reactos team community friendly group people open ideas please aware reactos team formally raised issue people coming reactos forums commenting may simply best interests reactos project mind remind community project like trying friendly possible order deflect naturally defensive responses think need look prevent problem becomes one edit nt think close one feel like right thing seem rather arbitrary spirit friendliness discussion please reopen provide another location open discussion continue fruitful nonconfrontational sense", "d": "9/2017"}, {"body": "reactos irc channel every day new visitors asking help reactjs telegram group", "d": "9/2017"}, {"body": "reopening continue discussion since seems like answer satisfactory", "d": "9/2017"}, {"body": "regardless cause fact exists result combination confusing least trying say never experienced confusion search reactos issue tracker match two threads saying dismiss concerns much appreciate friendly attitude problem onesided context exactly people get confused could share examples happens understand tough irc chat unlike website less information convey think anybody would mistake projects looking websites single letter easier miss channel list even use irc actively anymore perhaps remove mention website would helpful perhaps could also way highlight clearly reactos channel operating system like mention pierre schweitzer represent reactos reached us years ago agreed renaming either projects realistic solution would love hear specific suggestions improve arrive mutual understanding thanks", "d": "9/2017"}, {"body": "renaming either projects realistic solution able change logo react js", "d": "9/2017"}, {"body": "able change logo react js would fair community logos share shape design logos easy recognize since describing specific issue irc channel changing logo would change something specific problem", "d": "9/2017"}, {"body": "thankyou reopening issue appreciated discussion continuing project use name logo combination affects reactos project future examples adverse affects nt really come point reactos trademark reactos user react word atom logo want assert rights namelogo combination prevent confusion ensure rights subverted another project could claim ownership combination discussion continues sure may comment let leave open moment see discussion matures reactos communityproject team side", "d": "9/2017"}, {"body": "honest first time saw mention reactjs thought typo reactos would nt surprised considering widespread reactjs usage becoming people getting website design would think opposite reactos huh must typo reactjs imo makes bigger issue reactjs reactos least people looking reactjs help finding reactos instead separate issue reactjs reactos field similarities logo name mean want reactos used name logo much longer reactjs could sue reactjs reactjs facebook project think facebook legal team made quite blunder letting reactjs published world reactos already existed personally feel reactjs change name note last paragraph personal opinion please continue civil conversation going", "d": "9/2017"}, {"body": "imo makes bigger issue reactjs reactos least people looking reactjs help finding reactos instead never saw confusion community fact first time heard reactos sure reactjs developers nt know existence reactos never saw mention least react side nt think anyone would confuse reactos reactjs separate issue reactjs reactos field similarities logo name mean want reactos used name logo much longer reactjs could sue reactjs well nt think problem said previous comments representants reactos said renaming projects realistic solution would say case logo logos different still considered coincidence base shape atom react shape highlighted color different think facebook legal team made quite blunder letting reactjs published world reactos already existed maybe know existence reactos project first place seems logical project lot popularity least common developer network github personally feel reactjs change name changing name huge popular project like reactjs something cheap would chaotic community would say even make situation worse thousands articles blog posts stackoverflow questions belong project probably kind content left fly even confusion reactos project", "d": "9/2017"}, {"body": "react side nt think anyone would confuse reactos reactjs obviously case people going reactos irc channel andor telegram group looking reactjs help already stated thread frequently regarding potential suing reactos foundation may intending would intelligent reactjs project take fact putting potentially dangerous legal situation seriously think facebook legal team made quite blunder letting reactjs published world reactos already existed maybe know existence reactos project first place seems logical project lot popularity least common developer network github facebook legal team wholly unaware reactos allowed facebook make reactjs project public failing responsibilities researching projects exists similar names outside field business especially order prevent company placing potentially bad legal situation one primary reasons departments also github presence unlikely decent legal team looks researching potential issues wikipedia hand admittedly good location legal advice would much better quick indicator regarding whether project similar name exists reactos one linked projects wikipedia react disambiguation page place people would check considering naming software project react decade personally feel reactjs change name changing name huge popular project like reactjs something cheap would chaotic community would say even make situation worse thousands articles blog posts stackoverflow questions belong project probably kind content left fly would cause even confusion reactos project stated reactjs change name personal opinion however state changing name reactjs would much less financial burden facebook changing name reactos would reactos foundation also facebook reactjs enough popular presence moment name change would visible likely leave many people confused even considering potential stragglers looking reactjs renamed change would notably cut number people looking reactjs help reactos help channels saying reactjs must change name problem changing name much younger reactjs project personally would vote", "d": "9/2017"}, {"body": "hey seeing error message page linked element ref specified string missing argument owner set may multiple copies react loaded details seeing something different", "d": "9/2017"}, {"body": "probably message bold something easy miss", "d": "9/2017"}, {"body": "gaearon good call maybe even style redbox even easier see", "d": "9/2017"}, {"body": "error message showing really filed issue though even tried refreshing clearing cache changing error code url etc maybe caught update related react release something", "d": "9/2017"}, {"body": "brief period react launched cdn urls using docs site invalid resolved probably visited site period downtime", "d": "9/2017"}, {"body": "offical site breaks", "d": "9/2017"}, {"body": "iinsta thanks report", "d": "9/2017"}, {"body": "stateless functions could given refs even react try converting function component class component", "d": "9/2017"}, {"body": "thanks reporting issue change error message show stateless component causing issue", "d": "9/2017"}, {"body": "charlesstover thanks warnings occur upgraded nt use refs application code probably coming external modules way trace moment", "d": "9/2017"}, {"body": "null end stacktrace pointing offending component seeing null seems like bug share minimal project reproducing please", "d": "9/2017"}, {"body": "see error weird part sack trace stackframeoverlayproxyconsole render srcindexjs webpackrequire bootstrap fn bootstrap lt file typejs file exports json object even imported srcindexjs file happened updated react react", "d": "9/2017"}, {"body": "please provide reproducing project nothing discuss way reproduce", "d": "9/2017"}, {"body": "gaearon found bug lib antd reproduce need click left button", "d": "9/2017"}, {"body": "ps also using ant design library bug reported", "d": "9/2017"}, {"body": "know codesandbox works sure seems duplicate bundle causing issue provide local project reproducing", "d": "9/2017"}, {"body": "experiencing error dragsource droptarget components reactdnd upgrading project react", "d": "9/2017"}, {"body": "already said earlier comment need leave comment thread nt provide project github reproduces warning legitimate points real problem fixed either app library use trying pass ref functional component since wo nt work react warns however warning also display stack instead null end see null end message development environment messed multiple versions react reactdom bundle need fix way fix check run see one react problem remove extra one file issue library brought react peer dependency dependency see one issue remove extra one file issue library brought dependency steps issue unsolved upload project github provide link look causing thanks", "d": "9/2017"}, {"body": "gaearon issue code", "d": "9/2017"}, {"body": "look later problem antd lib", "d": "9/2017"}, {"body": "example helpful thanks fact bug look fixing warning still valid though fix bug react see pointing menuitem functional component something attaches ref", "d": "9/2017"}, {"body": "ok fix thing note said warning correct", "d": "9/2017"}, {"body": "hey biril intentional tradeoff must make number inputs really frustrating chrome safari take look updated jsfiddle gist enter input changes press input reads input changes press backspace remove input changes three change events input changes input invalid reporting changing input valid reporting reason typing fire change event enter invalid input safari reports empty input fires change event invalid number safari reports looks like nothing changed struggle see value included alert box safari reports empty string invalid numbers know user backspaced clear input provided invalid data need fine grain control inputs user data recommend using pattern attribute cc jquense aweary want make sure correct nothing provided good alternative", "d": "9/2017"}, {"body": "yeah quick test confirm fires value changes text written element similar date inputs fire change parts entered valid date parsable also confirmed safari enter select cahgne get change event eg", "d": "9/2017"}, {"body": "thanks jquense updated jsfiddle include native counterpart shows similar behavior", "d": "9/2017"}, {"body": "thanks lot makes sense reason planning go force devices pop numeric keypad focus rather usual one would better fit use case oh well", "d": "9/2017"}, {"body": "unmounting parent unmount looks like feature bug perhaps something similar work use case child element removed children list actually yet removed render result react nt unmount clones last used props sets prop child ready removed calls prop callback", "d": "9/2017"}, {"body": "wo nt make difference examples use standard class methods since class fields arrow member function declarations make use made standard yet", "d": "9/2017"}, {"body": "unnecessary", "d": "9/2017"}, {"body": "ca nt use arrow function dynamic context required better use arrowfunction syntax also make debugging hard", "d": "9/2017"}, {"body": "important issue using arrow function properties properties methods exist prototype prevents browser reusing function rendering multiple copies element copy element running different render function instead function different every time makes optimization javascript engine harder least delays point engine would want optimize even arrow function properties supported typescript babel class properties plugin recommended write everything methods exist prototype methods needs given argument jsx element property recommendation constructor creating local version shared prototype method", "d": "9/2017"}, {"body": "noted commenters technically unnecessary may also hurt performance little bit", "d": "9/2017"}, {"body": "thank everyone comments", "d": "9/2017"}, {"body": "got answer", "d": "9/2017"}, {"body": "could please submit pr", "d": "9/2017"}, {"body": "readme createreactapp repo still uses probably keep consistent stick feel free use like though thanks", "d": "9/2017"}, {"body": "shame record name share company avoid hire", "d": "9/2017"}, {"body": "laitonen nt quite get mean unmount yes invoking sequence refer info", "d": "9/2017"}, {"body": "thomasyimgit componentwillunmount last lifecycle method workflow component unmounting mean exactly component removed dom calls componentwillunmount method", "d": "9/2017"}, {"body": "please nt use alpha versions react web never meant general consumption clear exactly issue please provide fiddle reproducing react", "d": "9/2017"}, {"body": "gaearon understood gets installed default initializing reactnative project reactnative init projectname something wrong reactnative part understand hard provide fiddle since figured part app causes meaning even provide fiddlelike example basically almost entire app wanted know kind behavior generally possible something must wrong app", "d": "9/2017"}, {"body": "good news", "d": "9/2017"}, {"body": "thanks hope makes easier people like react use jobs", "d": "9/2017"}, {"body": "yes read", "d": "9/2017"}, {"body": "yes true", "d": "9/2017"}, {"body": "never mind previous comment hit enter soon try learning docs tutorial documents current version also stepbystep introduction explains every concept one one agree cheatsheet like describe would nice sure official docs would better blog post would like write", "d": "9/2017"}, {"body": "like write", "d": "9/2017"}, {"body": "go darrenlittlejohn", "d": "9/2017"}, {"body": "dam upon reflection say agree complain inconsistent documentation tried using documentation comes react proper see sufficient instead go pluralsight google youtube found frustrating would start learn syntax learn wrong syntax compared see elsewhere decide correct form new old always obvious used documentation vendor insufficient point look elsewhere typically start instead looking docs come library since looked links posted think look quite excellent approachable thank", "d": "9/2017"}, {"body": "hey artgangsta happy found react documentation helpful team puts ton attention react easy get started something documentation confusing suggestions improving feel free let us know best luck welcome react community", "d": "9/2017"}, {"body": "also add would nice could host archived versions website old versions people still look apis etc might easier switch new website", "d": "9/2017"}, {"body": "gaearon providing versioned api page could switch different major versions site", "d": "9/2017"}, {"body": "hard say anything without seeing project", "d": "9/2017"}, {"body": "code appjs webpackconfigjs file appjs javascript import react react import render reactdom class app extends reactcomponent static proptypes name reactproptypesstring render return name thispropsname const comp props gt title propsnamecomp render documentgetelementbyid app javascript var webpack require webpack moduleexports entry appjs output path dirname dist filename bundlejs module loaders test js loaders babelloader exclude nodemodules query presets react plugins transformdecoratorslegacy transformclassproperties plugins new webpackoptimizemoduleconcatenationplugin javascript resolve alias react preactcompat reactdom preactcompat", "d": "9/2017"}, {"body": "please provide full project git clone npm install unfortunately lot issue reports without published projects end invalid actually reproducing problem ask publish project demonstrate thanks", "d": "9/2017"}, {"body": "cursory glance though see nt follow instructions setting production build react gives development build default see helpful warnings preact something incorrectly might find long time causing problems need explicitly switch react production mode deploying measuring app documented link going larger react rich feature set children manipulation api handles edge cases correctly event polyfills older browsers crossbrowser support controlled inputs", "d": "9/2017"}, {"body": "project github webpack command facebookgithub speaks difference little see screenshot react preact difference still huge", "d": "9/2017"}, {"body": "result kb kb like original post looks correct note gzipping react would kb lot next version days react even smaller kb kb gzipped target lowend devices bad connections app relatively simple preact might work well care supporting older desktop browsers runtime performance correctness might want consider react ultimately suggest try stick works best experience hope helps", "d": "9/2017"}, {"body": "someone need info bundle file size react amounts combined size decrease compared previous version postgzip size difference partly attributable change packaging react uses rollup create flat bundles different target formats resulting size runtime performance wins flat bundle format also means react impact bundle size roughly consistent regardless ship app whether webpack browserify prebuilt umd bundles system", "d": "9/2017"}, {"body": "error boundaries currently catch errors coming event handlers blog post goes detail error boundaries catch errors rendering lifecycle methods constructors whole tree", "d": "9/2017"}, {"body": "thats ok error still seems rethrown resulting two errors caught", "d": "9/2017"}, {"body": "seems like discussion", "d": "9/2017"}, {"body": "might wrong think react release candidate try nt use comments", "d": "9/2017"}, {"body": "gaearon thanks suggestion using react production think good idea try rc react anyway recommended try react understand solutions react", "d": "9/2017"}, {"body": "correct react relies comments react", "d": "9/2017"}, {"body": "cc sebmarkbage gaearon looks like ol svg cares casing html nt back", "d": "9/2017"}, {"body": "please provide minimal reproducing example", "d": "9/2017"}, {"body": "nhunzaker seen issue recently ignored thinking fault react case remember correctly browser would appear errors could nt tab icon would get invalid dom property mean could tab icon wanted share appears similar", "d": "9/2017"}, {"body": "sounds right react asks always use react canonical naming camelcase even lowercase version appears work", "d": "9/2017"}, {"body": "actually wait wrong nt sound right based description could bug", "d": "9/2017"}, {"body": "filed new issue problem nt think related issue still need somebody create reproducing fiddle issue", "d": "9/2017"}, {"body": "work today share ticket created", "d": "9/2017"}, {"body": "stack overflow redux best way", "d": "9/2017"}, {"body": "redux best way nt recommend defaulting redux state management great library react builtin state management api often sufficient case always move state tree shared parent button menu passes openclose state try use issue tracker bug reports feature requests usage support question recommend checking get support thanks", "d": "9/2017"}, {"body": "nt recommend defaulting redux state management great library react builtin state management api often sufficient case always move state tree shared parent button menu passes openclose state case need relevant doc describes pattern take look section react docs", "d": "9/2017"}, {"body": "point website reproducing", "d": "9/2017"}, {"body": "gaearon thanks quick reply example", "d": "9/2017"}, {"body": "look saw suggestion using certain transformations browserify config looked like using also running gulp command changed config like tried use got error guess related use could reason need use", "d": "9/2017"}, {"body": "following troubleshooting steps warning console correct react minified properly nt turned string reason browser icon shows production icon another thirdparty library using help scout also uses react block nt load library extension correctly detects development build duplicate react issue discussedsolved", "d": "9/2017"}, {"body": "ok thanks investigating think found solution us finally", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "really need provide minimal demo nt enough go guess working fine something code maybe something causing trouble", "d": "9/2017"}, {"body": "right issue lies calling multiple setstate guarantee order called use thisstate", "d": "9/2017"}, {"body": "hey pretodor module actually old api used included react moved package people nt want migrate classes could still use newer versions react prefer api get feel free continue using since would nt make sense reintegrate api explicitly removed react going close let know questions thanks", "d": "9/2017"}, {"body": "ekfn expand want use function custom method instead object want make sure possible implement dynamic behavior imo makes sense use object instead defining null returning function", "d": "9/2017"}, {"body": "aweary apparently nt best idea simplify example null returning function using function classname common want build class name dynamically example jsx import block bemcn const b block myblock const render gt classname b would return myblock classname b title would return myblocktitle etc use inner elements base block instead really nice", "d": "9/2017"}, {"body": "makes sense idea edge cases allow functions custom tostring methods maybe could done classname really sure best call would great identify want continue support use case", "d": "9/2017"}, {"body": "yeah classname attribute think works way convert value string die trying custom attributes though sure curious special objects try convert string boolean values would ignored react understands attributes browserspecific nonstandard attributes uses functions", "d": "9/2017"}, {"body": "bemcn wrapper return strings instead functions", "d": "9/2017"}, {"body": "hrkv problem return string object work instead function support feature", "d": "9/2017"}, {"body": "write seems like explicit easier understand", "d": "9/2017"}, {"body": "tool need", "d": "9/2017"}, {"body": "gaearon actually inner elements also need final call without arguments cause returns function call chaining use library returns object first call sorry misunderstanding jsx import block bemcn const b block myblock const render gt seriouslyfluffy nt use function well", "d": "9/2017"}, {"body": "question general object valid value function nt", "d": "9/2017"}, {"body": "ca nt use chainable interface attributes like anyone use similar library would need lot refactoring update react ca nt think disadvantages calling function instead ignoring gaearon aweary", "d": "9/2017"}, {"body": "even called function would still want print warning often passing function happens due mistake deliberate eg forget call silently ignoring worse usually means bug since warn libraries nt rely anyway encourage people treat warnings errors passing nt look like solution nt quite understand advantages chainable interface suggesting simpler interface accepts variable number arguments always returns string think always possible react behavior might force api change library nt see use cases would work impossible implement think close vast majority use cases new behavior better catches bugs anyone use bemcn similar library would need lot refactoring update react released rc react behavior weeks ago publicly asked people test late change behavior anyway library first use case relying custom seen pretty exotic big problem encourage build codemod new api wo nt migrate hand change apis facebook sorry nt helpful hope see unusual chaining mechanism possible expose different hopefully ergonomic way", "d": "9/2017"}, {"body": "since warn libraries nt rely anyway yeah case pretty ignoring silently nt quite understand advantages chainable interface suggesting simpler interface really need explain different interfaces good fun deffirernt cases big problem encourage build codemod new api thanks suggestion good practice nt use problem personally case still would prefer changing api thanks anyway", "d": "9/2017"}, {"body": "tried latest version react", "d": "9/2017"}, {"body": "yes tried nt work properly safari tried works wed sep dan abramov notifications githubcom wrote tried latest version react receiving authored thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "safari version using please provide enough details", "d": "9/2017"}, {"body": "yes tried nt work properly safari tried works ok got confused initial report specify version broken read thinking broken understanding correct using desktop safari version error happen react error happens react", "d": "9/2017"}, {"body": "yes correct using safari thank wed sep dan abramov notifications githubcom wrote yes tried nt work properly safari tried works ok got confused initial report specify version broken read thinking broken understanding correct using desktop safari version error happen react error happens react receiving authored thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "sounds lot like bug fixed work get unminified stack trace", "d": "9/2017"}, {"body": "toshisugano using packages always version even patch releases version codepen running version packages verified issue occur safari updating confirm fixes issue", "d": "9/2017"}, {"body": "yes working thank much wed sep brandon dail notifications githubcom wrote toshisugano using reactdom react packages always version even patch releases version codepen running version packages verified issue occur safari updating reactdom confirm fixes issue receiving mentioned reply email directly view github mute thread", "d": "9/2017"}, {"body": "want report bug please fill questions issue template deleted posting single line error message enough information help said sounds like importing try use issue tracker bug reports feature requests additional usage support questions please refer get support list helpful resources", "d": "9/2017"}, {"body": "sorry forced abandon react behavior counterproductive please refer answer license faq explaining react license anything add create issues already created three ban repository", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "sorry legal discussion repository please stop creating new issues see reply", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "also hurt react licence xx", "d": "9/2017"}, {"body": "please stop creating issues see reply", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "wish company small enough fb never find", "d": "9/2017"}, {"body": "react excellent js framework must give pity community also give like wordpress aweary hear something react community could leave issue open two days", "d": "9/2017"}, {"body": "wish facebook purchase alibaba feel free use react", "d": "9/2017"}, {"body": "open issue maybe could open two days", "d": "9/2017"}, {"body": "please stop creating issues see reply", "d": "9/2017"}, {"body": "good idea like reactnative provide learning materials faq answer doubts", "d": "9/2017"}, {"body": "markerikson outside redux js syntax react router common questions seem come reactiflux looking many non straight react questions think faq section could valuable looking surface right questions", "d": "9/2017"}, {"body": "drop note reactiflux later today especially see mods ideas yes lot faqs see nt necessarily react exactly come enough related enough worth trying answer top head section ajax calls make call point common libs make call constructorcwmcdm section method binding necessity approaches function passing references difference passing reference function calling pass parameter function handler faq function called whenever rerender stuff think", "d": "9/2017"}, {"body": "would love see something like directly react documentation acting quick reference need due react highly unopinionated nature great use small reference different styles approaches people building react apps component level way philosophies architecture well help people new react accomplish everyday tasksget pitfalls imparted full understanding going behind scenes ideas questions could apart faq section styling css difference inline styles css ways javascript animation react build animations using react section common performance issues regarding state updates section state exactly ordered state updates difference passing object function section architecture nt need comprehensive acts outline recent developments community found building react years without giving side certain style recommended way organize react application file structure commonly used strategies make transition react component libraries section react internals virtual dom difference shadow dom react new reconciliation algorithm react foresight answers faq future best cautious pointing one method particularly superior another unless antipattern course due many numbers ways one build react differentiating costs benefits way common antipatterns sounds like could section perhaps though could entirely wrong thought mine", "d": "9/2017"}, {"body": "satiewaltz yup totally agree basically approach tried take redux faq enough info answer question lay options pointers resources", "d": "9/2017"}, {"body": "learn academy jsreact bootcamp moment contribute writing way happy nt know expertise yet knowledgable topics certainly edit clarity forth", "d": "9/2017"}, {"body": "darrenlittlejohn would great get perspective struggled learning react anything looking back moment faq section might cover would help confusion", "d": "9/2017"}, {"body": "thanks detailed report darthcheney cc nhunzaker jquense jquense dealt clarify whether isis nt expected also noticed change events fire keep toggling stop dispatching events issue already aware", "d": "9/2017"}, {"body": "hey opr known limitation controlled number inputs check information thanks", "d": "9/2017"}, {"body": "indirection significantly slowing development builds react hooks particular missing", "d": "9/2017"}, {"body": "indirection significantly slowing development builds react could please explain hooks particular missing added custom hook onstatechanged pull request working adding correct wrong think react relies hooks display different warnings really want pick work want understand work stopped actually work", "d": "9/2017"}, {"body": "oops right think decided keep rendering always warn coerce string intentionally", "d": "9/2017"}, {"body": "gaearon thanks hint make sense update post", "d": "9/2017"}, {"body": "yes please", "d": "9/2017"}, {"body": "clear would like rendered single line multiple lines rendered single line replace tag code", "d": "9/2017"}, {"body": "rtsgit rendered multiple lines", "d": "9/2017"}, {"body": "could add css style outer div join array new line character like", "d": "9/2017"}, {"body": "cbpetersen thank nt want use css", "d": "9/2017"}, {"body": "thank nt want use css need use sort block element else would browser know render new line basic text standard always render text inline element requirements really mean additional css styling block elements could go route reason named", "d": "9/2017"}, {"body": "try use issue tracker bug reports feature requests usage support question please refer get support list helpful resources mentioned need either use css block element react special behavior around multiline text", "d": "9/2017"}, {"body": "cc acdlite case bug known checked", "d": "9/2017"}, {"body": "fixed weird bug moving section top file nt know one broken component causes problem described", "d": "9/2017"}, {"body": "question react modules difference two imports one named import default import since using named export named import works case see explanation hope helps", "d": "9/2017"}, {"body": "gaearon fact wrapper something asynchronous like reactcomponent function works cases using default named file exports component default file inside components folder exports component specified example components using additional exportfrom statements transpiled transformexportextensions understand problem one components exported file broken somehow one thing helped moving broken component export bottom file also rewrite better understanding", "d": "9/2017"}, {"body": "provide sample project", "d": "9/2017"}, {"body": "gaearon make sense problem specifically project likely made error project structure provided everything work flawlessly update nt know exactly es modules work hood probably export order file important situation", "d": "9/2017"}, {"body": "unfortunately hard say anything conclusive without seeing whole project dozens ways something misconfigured", "d": "9/2017"}, {"body": "closed issue publish project files ca nt really help problem find error causes bug definitely report", "d": "9/2017"}, {"body": "might also circular dependencies could explain imported value changes apparently case react bug", "d": "9/2017"}, {"body": "treating open source abysmal state underlines facebook continues abuse concepts invented public domain chose use preact using preactcompat anyway", "d": "9/2017"}, {"body": "response moving vuejs sooner companies sooner worries non issue", "d": "9/2017"}, {"body": "please trust area hard without legally endangering company harming future ability open source libraries like react post adam wolff manager manager clarification legally share current moment also previously worked publishing faq sure read addresses several misconceptions give sense hard publish statements took several months internal discussion analysis interested thirdparty posts personally found analysis fair helpful need make clear author represent facebook context around fb picked license time perhaps automattic post implies problem license perception license understanding well however please note first person bring get bombarded questions misunderstandings license every day getting point days actively impeding technical work spoiling weekends filing issues making worse contact adam wolff specific concerns might able help close lock github issues see previous discussions turned practice github issues persuade company need extra legal protection constantly battling meritless lawsuits potential costs going billion dollars past finally would like highlight react vanity project unlike many companies facebook open sources core pieces infrastructure comes increased legal risk many companies able facebook mostly thanks license sad people use react whether companies engage offensive patent litigation scared fud still thankful part move industry forward", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "hey jayenashar tell nt reactspecific issue react nt change behavior looks like rendering simple component couple event handlers registered since try reserve issue tracker bug reports feature requests nothing indicating react contributing issue going suggest refer get support doc page list resources get help usage questions like thanks", "d": "9/2017"}, {"body": "thanks look aweary tips trap change could chrome bug seems happen thought react saw lines code react listen save though nt know purpose saw comments future scroll position restored nt seem react yet post stackoverflow well", "d": "9/2017"}, {"body": "ah nevermind running assumption chrome bug found fix still ca nt make minimum test though change url using history api scroll page finishes loading chrome restores position even though page scrolled nt happen user scrolls scroll done js", "d": "9/2017"}, {"body": "quite understand sandbox interpret tell appending rather replacing see single child bye many", "d": "9/2017"}, {"body": "start rendering wrapping border show boundary component done render portal picks renders see rendered inside inside borderboundary hi bye expectation clear replace bye", "d": "9/2017"}, {"body": "ooh see mean think support rendering portals dom nodes already content managed react like container already react children expect work probably clear warn case sure", "d": "9/2017"}, {"body": "sure expectation honest think work similar replace content slides explore problems solved totally misusing portals", "d": "9/2017"}, {"body": "think behavior makes sense portals still mounted react application still owns container unlike case toplevel render essentially tell old application stop running consider component somewhere expect render saying expect portal child render alone parent calls rerenders render clearly says child actually child different expect overwritten win happens refs sounds like worms single react application two different components interfere dom would make sense disallow rendering portals children managed react restrictive version could look like js class parent extends component portalcontainer documentcreateelement div componentdidmount portalcontainerid hello thisdivappendchild portalcontainer render return hi function child return createportal bye documentgetelementbyid hello allow mount portals reactmanaged nodes would minimal possible implementation honest actually like clear happening bounds parent exits react data flow leaf similar dom manipulations leaf ref children benefit strict approach like never lies true leaf component leaf children explicitly managed manually problem claims render something really dom really wanted clear children explicitly threading relevant state either via props via sideways subscription system think", "d": "9/2017"}, {"body": "less restrictive version let render react node empty js class parent extends component render return hi function child return createportal bye documentgetelementbyid hello probably less annoying overall warn attempt render children let forget happen dynamically first children portal child created normal child appears might miss situation later multiple portals rendering node could become really confusing way trace one comes would prefer forced completely get reactland creating portal container", "d": "9/2017"}, {"body": "saying expect portal child render alone parent parent calls setstate parent rerenders render clearly says child hi actually child different expected using portal overwrite parent rendered even parent calls setstate nothing happens parent nt control child anymore render totally lies overwrote sounds like worms single react application two different components interfere dom would make sense disallow rendering portals children managed react absolutely agree really like example given solves problems tackling looks explicit time less restrictive version let render react node empty let forget happen dynamically first children portal child created normal child appears might miss situation later nah difficult explain works differently first time render subsequent times good would prefer forced completely get reactland creating portal container totally makes sense ps thanks taking time correct silly experiments going close issue", "d": "9/2017"}, {"body": "let keep least add warning conflict maybe get restrictive throw like hear sebmarkbage thinks", "d": "9/2017"}, {"body": "sure", "d": "9/2017"}, {"body": "little surprised issue unless misunderstanding something worry one portal rendering dom node assumed append currently sure problem pain track whether dom node already portal host probably common portal scenario rendering documentbody workaround would append new container documentcreateelement render urgh", "d": "9/2017"}, {"body": "issue two portals rendering one node portal rendering node already managed regular react component", "d": "9/2017"}, {"body": "ah gotcha thanks", "d": "9/2017"}, {"body": "see also discussion", "d": "9/2017"}, {"body": "discussions might translate nondom environments might equivalent", "d": "9/2017"}, {"body": "portal implementation agnostic pass second argument long valid container ie thing top level render dom dom node environments could anything top level render container could", "d": "9/2017"}, {"body": "reason function arg approach nt used see suggested discussed recommendation use guard", "d": "9/2017"}, {"body": "gaearon yes nodeview objects would translate naturally environments idea string argument might rely environments capabilities query view hierarchy specified selector exists dom equivalent implementations might exist outside dom might affect proposal far isomorphic solution concerned", "d": "9/2017"}, {"body": "idea string argument might rely environments capabilities query view hierarchy specified selector exists queryselector dom equivalent implementations might exist outside dom thysultan would selector dom renderer string could signify target renderers would renderer determine resolve target based string inherent coupling dom", "d": "9/2017"}, {"body": "released", "d": "9/2017"}, {"body": "nested object update like gets little tedious would recommend use object spread syntax available babel plugin enabled default create react app seems pretty readable still like use one many helpers like updeep immutabilityhelper update nested objects without mutation", "d": "9/2017"}, {"body": "general solution would recommend first approach mutation invoking setstate forceupdate alternative instead recreating new immutable object objectassign spread operator immutable approach non trivial implement deep property update dynamic deep nested objects like comments tree similar ui also regeneration ancestors objects including copying items arrays would decrease js performance compare single property assignment", "d": "9/2017"}, {"body": "way look like two way binding redundant two way binding setstate", "d": "9/2017"}, {"body": "creates dependency course loved using w react const r require ramda const newinstrument rassoc row rmerge instrumentrow isselected true instrument", "d": "9/2017"}, {"body": "seamlessimmutable", "d": "9/2017"}, {"body": "sure css thing react normally", "d": "9/2017"}, {"body": "hey congkhuong try use issue tracker bug reports feature requests usage support question recommend checking get support", "d": "9/2017"}, {"body": "aweary sorry", "d": "9/2017"}, {"body": "one thing unfortunately react strong performance gave roots inferno preact although generally nonissue desktop mobile might bottleneck point want bring library petitdom think post might conflating two different things initialization time update virtual dom time regarding initialization time yes react ships code internal testing minor improvements get slimmer libraries ymmv depends target devices bandwidth size application expect get better future browsers becomes compatible less need polyfill features like events support many large apps bit conservative removing polyfills gradually still differences initialization time bundle size anything related diffing regarding update time seen research would demonstrate considerable difference using libraries versus react real applications benchmarks similar one linked notoriously easy fool quoting author one best benchmarks kind benchmark games nobody take seriously numbers benchmarks many cases optimizations appear good benchmarks negative effect real apps since different structure sure trueadm share experience effect research vast majority time spent applications built reactlike libraries lies application code wish optimizing diffing algorithm fruitful anything winning benchmark match experience library code small fraction executed code real apps least scenarios looking code spent components rendering lifecycles abstraction cost spending efforts two areas reducing cost component abstraction experiments compilation techniques better prioritization interleaving io rendering improve perceived performance work progress share find something works well said summarize findings novel approach love hear", "d": "9/2017"}, {"body": "gaearon planning improve react performance future hope help react effective tool admire great work done react", "d": "9/2017"}, {"body": "always working perf issues seeing application code library code", "d": "9/2017"}, {"body": "thomasjeepe first benchmark really bad measuring vdom diffing overhead simple test cases easily implemented vanilla js benchmark implementations optimized make sure perform diffing little possible one thing unfortunately react strong performance gave roots inferno preact last time checked preact slower vdom diffing point want bring library petitdom uses diff algorithm links explain provided readme seems score incredibly vdom performance tests worked first vdom implementation also tried different lcs algorithms need find lcs keys unique among siblings better ways solve problem main reason faster alternative vdom implementations different feature set react features petitdom nt noticeable impact vdom diffing immutable virtual dom nodes implicit keys key namespaces children nodes deeply nested arrays wo nt key collisions component lifecycle", "d": "9/2017"}, {"body": "alright got attention fully understand difference start time updating time diffing algorithm influence whatsoever startup time handled via extensive tree shaking ways minimizing code size andor startup computation done start time localvoid reason said preact startup time yes diffing dom versus vdom disadvantages seems slower preact case larger feature set definitely large influence hover nt mean react ca nt steal optimizations libraries although curious immutable virtual dom nodes entail vdom nodes seems inefficient doubt gaearon ok let explain original intent post purposes want build web application mobile fps animations declarative library like reactmotion order handle animations ones ca nt handled via simple css means need fast patching concern react scheduling handled fiber render complex animations means little overhead possible becomes scheduling issue one thing occurring regular situation regular situation user presses button x nice animation occur nt stutter means smaller patch overhead solved something like fiber concern looked around saw inferno preact bobril vdom surplus also vdom petitdom author novel approach uses certain diff algorithm described paper scores among best vdom libraries using information considered overhead patching dom significantly lowered taking certain approaches nt react js take points obviously benchmarks easy fool nt always represent real world cases surplus skips diffing step using mobx style state compiles pure updates dom many libraries nt real world use measure incorrect statistics updating often fast however trying optimize seems much relevant benchmark todo list although still might far anyways viewpoint post regular use case rather areas diffingpatching important animation patching makes difference vdom library use course technically really really wanted best performance could go gsap nt declarative integrated reactmotion closing point reason brought petitdom library nd diff algorithm sort bottleneck diffing algorithm perhaps algorithm could increase speed whatever else bottle neck components maybe trueadm improve knows inferno bottle neck something else maybe improved end want faster react", "d": "9/2017"}, {"body": "although curious immutable virtual dom nodes entail objectfreeze vdom nodes seems inefficient doubt means reuse hoist virtual dom nodes petitdom mutates vdom nodes stores reference dom node vdom nodes", "d": "9/2017"}, {"body": "concern react scheduling handled fiber render complex animations means little overhead possible becomes scheduling issue one thing occurring regular situation interestingly become scheduling issue experience perhaps larger apps example facebook lot ajax callbacks firing interfere video player even optimize hell diffing bump problem scheduling sooner later particular animation part larger app worked many different teams use case still interesting us stress test react update model best way make something faster yes maybe diffing could faster want make use case work well might best way escape react usual model comparing leaf elements minimal work possible ie even compare things know dynamic something inferno explored templates separate static dynamic yet really make big difference dynamic applications experience component abstraction always components middle even optimize leaf node comparisons still got ta go components render optimizations host nodes work well contiguous blocks components get way looking compilation techniques like first make component inlining work end larger contiguous blocks host elements avoid diffing using bytecode similar glimmer hope makes sense sorry came across dismissing idea mean making diffing faster use cases marginal improvements important apps seems like marginal improvements beat systematic issues coming nature flexibility react allows trying address systematic issues instead basically trying cake expressive jsbased components eat efficient corner cases see goes", "d": "9/2017"}, {"body": "hi thomasjeepe author petitdom want add petitdom perf benchmark due nd algorithm even slows things case petitdom diff process split mains phases preprocessing optimizations detect common prefixsuffix simple edits find contiguous lcs linear time run nd algorithm succeed number iterations switch hashmap based approach benchmark nd phase hit create x rows called successively need replace old rows new ones means sequences totally different triggers worst case nd max value process detects nd ca nt find edit path certain threshold fixed actually switches case hit algorithm dont really use even worse process spends time trying compute edit path switching another approach petitdom perf benchmark nt really proof nd approach think due common vm oriented optimizations monomorphism avoiding prototypes picked nd observation actually virtual dom implementations seen start building hashmap old sequence optimize vnode lookup comparing old new sequences say vnodes changed say build hashmap entries start comparing nd algorithm nt use hashmaps cost terms timespace proportional much differences sequences parameter makes suitable diff potentially large sequences differences said need examine pertinence assumptions often encounter sequences elements vdom application experience typically encounter deep trees instead large sequences ie trees much children generally deeply nested building large hashmaps costly may think real impact observation measuring things vm engines really surprise doubts base assumption running time nd predictable depends output parameter difference input sequences perf vary petitdom resolved stopping nd threshold iterations illustrates tradoeffs approach tldr still lack evidence nd algorithm makes noticeable impact perf virtual dom diffing note nt mean approach bad still evidence support actually tradeoffs otoh still think preprocessing optimizations relevant enough react fully take advantage see implicit keys localvoid nt checked think well handled petitdom diff stable meaning unkeyed vnodes preserved long keep appearing order", "d": "9/2017"}, {"body": "often encounter sequences elements vdom application experience typically encounter deep trees instead large sequences ie trees much children generally deeply nested observation well wide list usually virtualize much problem practice unless need items screen time corner case happens eg stock trading common apps though whereas deep tree easy escape death thousand cuts localize solve one place often even spans across subapplications teams mentioned compiler optimizations flatten tree area much interested", "d": "9/2017"}, {"body": "gaearon interesting suppose compilation optimization comes around best way speed diffing performance critical animation paths regular use case reduce component overhead shallower tree also remember inferno attempted go approach diffing dynamic elements via blueprints unsure changed surplus js also takes similar approach cheats uses mobx like state uses compiler span generates real dom node setting text directly maps updating dom node without diffing nt seem work functional render top approach though definitely ways go hyper optimizing area seems either manually opting blue prints compiler two ways go also regarding scheduling issue cheating moving processing websocket requests indexeddb requests web worker meaning dom thread blocking yelouafi thanks coming thread looks like misunderstood exactly petitdom targeting looking article describing algorithm saw preprocessing optimizations seriously impressed meant much faster update time usual minimal computation seems like applying optimizations engaging regular diff could lead perhaps marginal increase performance issue pointed definitely point preprocessing optimizations could come play benefit removing need move many items around however nd diff algorithm wholly nt mean increase speed proven nt applied tried instead preprocessing optimizations make sufficient difference applied optimization rest react would completely separate preprocessing optimizations would likely gaearon referencing perhaps using methods inferno trueadm could help perhaps take optimizations libraries could rewrite rust jk", "d": "9/2017"}, {"body": "yelouafi nt checked think well handled petitdom diff stable meaning unkeyed vnodes preserved long keep appearing order gt part lcs probably get correct results two dom ops remove div insert new div reuse node different position lead losing internal state something even worse", "d": "9/2017"}, {"body": "add discussion mentioned bunch times spending lot time looking making react applications faster real world facebook talk earlier year back started facebook hacked together reactdom lite incomplete version react size applied optimizations inferno possible tried realworld applications saw real performance wins startup time purely bytesize vs plugged reactdom lite popular benchmarks around time numbers looked amazing realistically speaking reason applications today slow really frameworks application code benchmarks tend couple components repeated hundreds times actions applied try benchmark applications hundreds thousands lines code containing lots async network requests images loading audiovideo streamingplaying etc see real win optimizing react diff algorithm might even make slower plenty things working make react applications faster likely involve application framework compilation future might explore compiling react applications bytecode use staticdynamic aware bytecode diffing engine rather virtual dom diffing engine knows", "d": "9/2017"}, {"body": "trueadm thanks response fully agree application side applications react handle without breaking sweat react nowhere near bottleneck want example animate fps mobile using something like reactmotion reasoning little overhead patch brought preprocessing optimizations inferno etc preprocessing optimizations diffing nt right avenue improvement situation definitely makes sense target compilation time optimizations rather react vdom implementation anyways learned lot thread thanks ton hopefully react get even faster heavy diffing animation side would awesome extremely close performance gsap awesome declarative animations", "d": "9/2017"}, {"body": "issue posing speed question faster diff issue title still diff ie application generates snapshots states sequence delta reverse engineered delta info may available application level gets lost time new desired view gets compared existing one cycles spent recovering info lost sure helps longer diffing also overhead restating lot things might changed common thing data visualization huge scene graphs masses scatter points etc immutability help large glyph arrays get mapped cells similar allow efficient update points leaving large quantity unchanging points actual diffing", "d": "9/2017"}, {"body": "regarding update time seen research would demonstrate considerable difference using libraries versus react real applications benchmarks similar one linked notoriously easy fool research vast majority time spent applications built reactlike libraries lies application code let address elephant room post written nov localvoid trueadm yelouafi aware keyed unkeyed impls split since jan yet one points addition new libsimpls passed mutationobserver sanity check upon submission ensure properly categorized perform correct dom mutations correct visual output amount gaming possible today vastly smaller past current results table much better shape agree overall conclusion rendering benchmarks meaningless iff perf bottleneck elsewhere sadly typical case though battery life always notice good algo improvements example currently almost scripting page load generates total dom nodes fast desktop chrome lot scripting small dom size almost certainly react diffing inefficiencies main offender rather overall architecture swapping preact making things async nt going fix significant degree said good see fiber moving perf mem", "d": "9/2017"}, {"body": "hey looks like question generally javascript react usage bug report try keep issue tracker feature requests bug reports luckily great places get answers question better suited issue tracker check get support", "d": "9/2017"}, {"body": "use issue tracker bugs feature requests react please refer community support resources questions", "d": "9/2017"}, {"body": "warn foo option probably also warn value specified empty option either sounds good value specified nullundef uncontrolled warn one could also argue change handler called value yes component renders first option selected instead invalidnonexisting one sounds like bad idea would interpreted user interaction kinds unintended sideeffects", "d": "9/2017"}, {"body": "sounds like bad idea would interpreted user interaction kinds unintended sideeffects yeah experience leads bad consequences well inverting data flow wrong direction", "d": "9/2017"}, {"body": "browser feature react bug", "d": "9/2017"}, {"body": "yes need close issue", "d": "9/2017"}, {"body": "please notice edit button type button attribute", "d": "9/2017"}, {"body": "weird attribute without react behaves correctly even setting type late via attributeproperty idea would happening", "d": "9/2017"}, {"body": "oh wait see problem replacing button correct type essentially type checked event dispatched end changing type thus submitting form need properly key elements", "d": "9/2017"}, {"body": "actually probably better way", "d": "9/2017"}, {"body": "jquense", "d": "9/2017"}, {"body": "stephenweaver provide information test setup version using selenium chrome safari according browser extension deprecated using", "d": "9/2017"}, {"body": "aweary yes right using last supported safaridriversafariextz actually deprecated use new one safari driver apple launching browser automation mode like private mode application suport kind browser mode stephenweaver mentioned react issue react bring us", "d": "9/2017"}, {"body": "hmm experience older safari driver fairly flaky sure input changes could break anything tho running tests older safari older driver seeing issue well anyone idea narrow bit", "d": "9/2017"}, {"body": "would helpful could get repro though know difficult due selenium setup process without difficult say might happening certainty changes made inputs pretty significant resolved number important issues issue isolated deprecated driver worst case scenario acceptable tradeoff better longterm stability", "d": "9/2017"}, {"body": "appreciate responses currently really swamped rolled back version try find time next weeks send complete demo pretty sure nt planning ever addressing issue please let know allocate extra time needed finding way around issue upgrade", "d": "9/2017"}, {"body": "pretty sure nt planning ever addressing issue please let know allocate extra time needed finding way around issue upgrade ca nt definitively say wo nt accept fix since nt know would entail yet identify fix nonintrusive nt compromise fixes already made think would consider though unlikely would include fix introduced specialcased logic driver issue sorry ca nt provide concrete answer right please ping us find time send complete demo", "d": "9/2017"}, {"body": "hey mobinni looks like running benchmarks development build react using devtool option nt meant use production running benchmarks make absolutely sure using production builds development builds contain extra checks validation skew results recommend looking resources information", "d": "9/2017"}, {"body": "makes much sense let rerun", "d": "9/2017"}, {"body": "aweary ran everything production build results way better however seems reactdom render still slower could supposed results make much sense production build reactdom results reactdom results", "d": "9/2017"}, {"body": "please publish github links nt expire accidentally get deleted come back check", "d": "9/2017"}, {"body": "gaearon sorry autoupload easier share link initially repo", "d": "9/2017"}, {"body": "gaearon aweary ran tests different machine node react beat nt know issue machine sorry wasting time", "d": "9/2017"}, {"body": "hmm understanding ran tests browser would node version matter", "d": "9/2017"}, {"body": "gaearon yeah node version really nt matter made sound important reran tests work computer runs chrome still low render sample output however macbook pro runs chrome issues render speed going bump version see happens update output maybe important chrome update pending running long time without restarted memory clog process wearing chrome could also contributed buggy numbers", "d": "9/2017"}, {"body": "like advise microbenchmarks like good way decide whether use functional components classes trying pretty useless represent real apps behave practice said catch silly regressions would good know accidentally something slow mistake", "d": "9/2017"}, {"body": "thanks advice know tests represent real rendering data naive test setup pretty quickly nt think react problem end day browser problem end case sorry wasting time", "d": "9/2017"}, {"body": "also worth checking ran tests devtools open browser extensions active influence results representative real performance consistently get better results render functional component tree x opssec runs sampled render class based component tree x opssec runs sampled render class renders functional components x opssec runs sampled fastest render class based component tree render class renders functional components render functional component tree x opssec runs sampled render class based component tree x opssec runs sampled render class renders functional components x opssec runs sampled fastest render class based component tree render class renders functional components", "d": "9/2017"}, {"body": "makes sense thanks checking case closed guess", "d": "9/2017"}, {"body": "would encourage look nextjs many nontrivial pieces good server rendering even nextjs nt solve problems", "d": "9/2017"}, {"body": "close try keep issue tracker focused bugs feature requests react hope helps", "d": "9/2017"}, {"body": "gaeron sure think nextjs server making basically two sides coin nextjs react frontend plug backend backend add frontend plugin place chat react devs similar many repos gitter email list", "d": "9/2017"}, {"body": "ignore last comment found", "d": "9/2017"}, {"body": "provide full reproducing example", "d": "9/2017"}, {"body": "fix", "d": "9/2017"}, {"body": "released fix please verify", "d": "9/2017"}, {"body": "good cheers", "d": "9/2017"}, {"body": "use yes please add", "d": "9/2017"}, {"body": "right thank", "d": "9/2017"}, {"body": "nt think related react sounds like issue build tool probably trying tell issue project folder specifically happen create folder uppercase name eg lowercase name eg way around suggest create new folder lowercase move project files make sure always lowercase name well", "d": "9/2017"}, {"body": "thanks gaearon try", "d": "9/2017"}, {"body": "release notes react rc", "d": "9/2017"}, {"body": "npm registry people publish packages npm yarn two different clients mostly compatible differences features tradeoffs sure one use would recommend go npm reason nt satisfy try yarn blog post dives motivation yarn created hope helps", "d": "9/2017"}, {"body": "hey davidhatten issue setting string really want reference component remember jsx compiles calls react assumes passing string like trying create dom node like inspect dom see rendering hope clears things", "d": "9/2017"}, {"body": "happen chrome error analytics system set check happens browsers", "d": "9/2017"}, {"body": "able replicate chrome phantomjs taking apart main application component component trying find exactly causing rather slow process share update get bones", "d": "9/2017"}, {"body": "bit context stack trace development mode", "d": "9/2017"}, {"body": "step take note variable values eg whether null first whether somehow undefined etc", "d": "9/2017"}, {"body": "finally figured whats going simple case reproduce issue js import react component react import reactdom reactdom import aux reactaux import browserrouter router route switch reactrouterdom class foo extends component render return foo class bar extends component render return bar const root documentqueryselector app const modal undefined reactdomrender modal root using babelruntime react reactaux reactdom reactredux reactrouter reactrouterdom redux alternatively pull repo", "d": "9/2017"}, {"body": "gaearon anything else help", "d": "9/2017"}, {"body": "take look today repro modern chrome", "d": "9/2017"}, {"body": "repro modern chrome", "d": "9/2017"}, {"body": "download old chrome", "d": "9/2017"}, {"body": "got", "d": "9/2017"}, {"body": "tip assuming using osx best thing create new osx user installing old chrome downloaded disable wifi installed go straight settings disable auto update reason new osx user two chrome versions nt play nice userspace", "d": "9/2017"}, {"body": "helpful thanks", "d": "9/2017"}, {"body": "hmm mentioned react depends collection types map set support older browsers devices may yet provide natively eg see polyfill missing something", "d": "9/2017"}, {"body": "see polyfill missing something", "d": "9/2017"}, {"body": "bug polyfill using", "d": "9/2017"}, {"body": "gaearon course tried force reuse polyfill configuration latest chrome noticed polyfill stack trace nt give second thought good detective work thank", "d": "9/2017"}, {"body": "see value passing", "d": "9/2017"}, {"body": "hi gaearon thank answering got addendum replaced output didnt get errors result result also think wrong", "d": "9/2017"}, {"body": "ca nt really say without project reproducing", "d": "9/2017"}, {"body": "happy finally resolved issue many hours debugging googling smiley may already guessed importing images webpack works well react client side points corresponding file path application isomorphic code also ran server side since node nt support images ignore using application state error appears consolelogging appears code returns empty object looked attribute html page generated server side apparently caused react output error made realize image links html generated server side would cause many seo probelms made change variable added config file webpack use goal production could set cdn base url assets delivered throught think good solution", "d": "9/2017"}, {"body": "works case maybe", "d": "9/2017"}, {"body": "curious ending undefined ref createelement return null real ref", "d": "9/2017"}, {"body": "seems function render returns array string element render like playing type strong key props typeof symbol reactelement store", "d": "9/2017"}, {"body": "say code created array cases would", "d": "9/2017"}, {"body": "result call simplemarkdown format string react elements works fine react mixed array throwing refundefined error reactchildfiber", "d": "9/2017"}, {"body": "fixed simplemarkdown master", "d": "9/2017"}, {"body": "cases equivalent react batches setstate calls technically practice going faster memory efficient probably mutating original state object setting however also less safe recommended mutate state object inplace like would nt worry unless able measure noticeable bottleneck", "d": "9/2017"}, {"body": "react intentionally rely warnings treated errors user fact facebook show modal dialog warning may enable behaviour open source version future help", "d": "9/2017"}, {"body": "problem many developers follow advice looking fix warning see lot issue threads state something like warning development ignore fine production control display warnings least everyone board treat warning error thinking something planned handle warnings future", "d": "9/2017"}, {"body": "looking fix warning see lot issue threads state something like warning development ignore fine production library big plenty bad advice due popularity see could change except clarifying position threads like control display warnings least everyone board treat warning error thinking existing issues providing control warning display search think need get anyone board thinking ask use react disagree please frustrated app work correctly agree educate users clearly approach though", "d": "9/2017"}, {"body": "close mentioned react asks treat warnings errors emit warnings things actually need fixed code ignoring dangerous configurable warnings please track related issues linked", "d": "9/2017"}, {"body": "note eg phantomjs interprets consoleerror actual errors reasonable behavior means error happened unit tests fail due react warnings linked configurable warnings issues see months even years passed without progress front much effort logging setter ifelse whatever require particularly fair silence every react warning given fb team went conventional wisdom made nonconfigurable spend developers around world save cheers victor", "d": "9/2017"}, {"body": "unit tests fail due react warnings sounds like desirable behavior nt emit warnings things safe see warning react means bug code need fix past used consoleerror deprecation warnings listened feedback stopped deprecation warnings nt actually mean bugs code nt break tests hope rationale makes sense", "d": "9/2017"}, {"body": "spend developers around world save warnings nt exist waste time help write bugfree code particular warning noisy means poor job choosing fire give example warning causes much pain perhaps emitting wrong cases nt deduplicate instead silencing warnings let solve root problem make valuable reason nt", "d": "9/2017"}, {"body": "hi gaearon thanks answer see warning internal error react performance measurement code see something wrong normally one real bugs trigger particular warning warning error even phrase says internal error hand specimen different child array iterator unique key prop nt mean bug code something subject improvement prioritization afaict warning umbrella errors nonerrors correct categorization issues seems difficult highly subjective task meanwhile react could give developers freedom choose spend time perhaps prefix would help cheers victor", "d": "9/2017"}, {"body": "nt relevant old code repo understanding code used anywhere currently react repo source truth nt problem", "d": "9/2017"}, {"body": "longer term move source truth back ca nt expose reconciler issue", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "add note running browser fixtures well case failed review browser fixtures merging dom change", "d": "9/2017"}, {"body": "thought already ton work point much work would going dom fixtures automate publishing maybe qa people help go sophiebits ideas", "d": "9/2017"}, {"body": "aweary dan discussed bit expect changes land dom related things run dom fixtures make packaging changes test packaging fixtures agreed smoke test packaging fixtures probably good release rather redoing fixture testing hand also step sync react facebook pretty extensive manual testing internal uses react anything went sync well tested add checklist even note could point internal docs process comment search internal dexwiki", "d": "9/2017"}, {"body": "flarnie added", "d": "9/2017"}, {"body": "thought already ton work point much work would going dom fixtures would take good chunk time maybe add nonblocking defer someone else time give release sure nhunzaker jquense would happy contribute front worry since currently nothing place enforces dom fixtures checked dom changes merged mess forget could slip regression stable release automate publishing maybe qa people help go would great wonder could use something like danger watch changes domrelated files add note reminding us check published fixtures merge talk another time though", "d": "9/2017"}, {"body": "added last note reaching folks", "d": "9/2017"}, {"body": "best thanks creating excited one source truth visible place work towards automating thoughts tag clear another bug report andor want include step updating seems like may covered ensure runtime dependencies match users would get want update know ideally updating regularly since practice nt could good flag size regressions cutting release love details looks good going make clone specifically rc probably continue process lunch part done far open prs update error codes steps", "d": "9/2017"}, {"body": "want include step updating yarnlock seems like may covered ensure runtime dependencies match users would get yes thing need release rest updating dev dependencies done normal development cycle feel like updating land sync want update resultsjson know ideally updating regularly since practice nt could good flag size regressions cutting release sure although time sync usually late fix size add something", "d": "9/2017"}, {"body": "think want instead wo nt change lockfile vs bump latest version still compatible", "d": "9/2017"}, {"body": "updating based previous comment chatting gaearon sounds like want", "d": "9/2017"}, {"body": "yarn docs sounds like work right thing", "d": "9/2017"}, {"body": "note let add something verifying using", "d": "9/2017"}, {"body": "browser requirements nt changed require polyfills though general react supports compliant browsers back", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "could find past browser requirements doc could give link", "d": "9/2017"}, {"body": "react dropped support beginning last year version suggests may still work newer versions may gets unlikely new version released older code cleaned", "d": "9/2017"}, {"body": "docs link bit hidden yes", "d": "9/2017"}, {"body": "tks much", "d": "9/2017"}, {"body": "hope define definitive list supported browsers point see", "d": "9/2017"}, {"body": "familiar backstory curious eliminate merged", "d": "9/2017"}, {"body": "found lastbuild actually variable passed processenv building webpack removing solved cacheing issue least think removing hack would mitigate future bugs", "d": "9/2017"}, {"body": "ah interesting places looks like getting inlined guessing use webpack nt problem react since stack renderer going away case think htis code path stripped away uglify could confirm showing production build", "d": "9/2017"}, {"body": "yes using defineplugin processenv things inside confirm code still present production build uglifying", "d": "9/2017"}, {"body": "thanks reporting fixed master basically file wo nt shipped react already try react beta like nt think making changes", "d": "9/2017"}, {"body": "believe duplicate", "d": "9/2017"}, {"body": "ah man look thanks", "d": "9/2017"}, {"body": "circumstances skip prop updates whole component subtree next props state shallowly equal current props state treated returned also implicitly say implement shouldcomponentupdate component behaviour different example returns false props propagation wo nt stopped word make sure children componetns also pure would handy implemented today behavior exactly though may change future optimizations example call child purecomponent new state shallowly equal old state today child rerendered unless purecomponent infer child also pure future version react may skip rerendering intentionally vague nt know exactly future implementation might users avoid making specific assumptions feel existing documentation could improved please submit pr suggested fixes thanks", "d": "9/2017"}, {"body": "thank confirming findings update documentation slightly", "d": "9/2017"}, {"body": "supported react dom asking typescript support types nt owned us please try opening issue definitelytyped repo misunderstood question please respond details andor reproducible test case", "d": "9/2017"}, {"body": "acdlite thx", "d": "9/2017"}, {"body": "hi sure code means nt seem related react might want try various support channels like stackoverflowcom", "d": "9/2017"}, {"body": "sounds like asking andreoman repo bugs feature requests react library jquense mentioned recommend referring one many support resources", "d": "9/2017"}, {"body": "hi thanks issue proptypes split package please submit feature requests thanks", "d": "9/2017"}, {"body": "thankyou jquense submit provided link", "d": "9/2017"}, {"body": "please feel free submit pr", "d": "9/2017"}, {"body": "might want make shorter title", "d": "9/2017"}, {"body": "hi error message probably correct make sure link component imported defined correctly login component also try one many support avenues stackoverflowcom specific help attention try keep react issue tracker feature request focused thanks", "d": "9/2017"}, {"body": "yes please open pr suggested changes", "d": "9/2017"}, {"body": "post", "d": "9/2017"}, {"body": "let move discussion new component apis react future repo great chat open iterate core react state management context holding major additions changes component api async rendering stable many new constraints quirks created async rendering would counterproductive us introduce new apis find later apis nt resilient async behaviors trueadm also experimenting react component compiler likely also influence design new api tl dr change coming right yes constant collaboration reason team including design new reducer api", "d": "9/2017"}, {"body": "related", "d": "9/2017"}, {"body": "styles patched expected intentional breaking change idea behind sites stabilize solid ssr infra place therefore things nt happen yet would spend time validating unnecessarily know going change optimization second part happen though inserted inside another parent think able provide smaller reduced example eg jsfiddle bit difficult debug fully deployed site", "d": "9/2017"}, {"body": "development mode see warning btw seeing warning", "d": "9/2017"}, {"body": "updated repo example mean code snippet js import react react export default function renderer isserver render return render isserver amp amp documentgetelementbyid root class appview extends reactcomponent render const isserver thispropsisserver return isserver amp amp class servercomponent extends reactcomponent render const styles server backgroundcolor red return class listcomponent extends reactcomponent constructor props super props thisgetlist thisgetlistbind getlist const styles el width height margin backgroundcolor blue return arrayfrom function let lt yield render const styles client backgroundcolor green display flex flexwrap wrap return happen get removed wo nt instead stays list elements get transferred surrounding removedreplaced said styles wo nt patched optimization case replace entire nt update style wai problem website make assumptions screen size might true stable method get screen size initial server rendering use newly introduced ssr streaming method get working", "d": "9/2017"}, {"body": "ah reason happens try reuse structure much possible first item div cases try reuse retains styles different tag name would patch risky rely build little infra passes screen size server separate request might overkill nt screen size server server render wrong output could lead flashes content finally restores js client app resilient way model client render initial mount server render screen size componentdidmount read real screen size nt match guess rerender setting state", "d": "9/2017"}, {"body": "also use case intentionally server render something slightly different client render affected change react well component renders feed items server render one page items time conventional prev next pagination links client render infinitely scrollable virtualized list rendering conventional paginated list server helps improve seo giving search bots actual links follow subsequent pages also ensures clients js disabled still paginate list visible flash jscapable client hydrates list visible difference pagination links typically fold work well however react reuses certain serverrendered elements without removing even though clientrendered state nt use breaks design weird unexpected ways understand generally advisable serverrendered content differ clientrendered content conscious choice made full awareness disadvantages expected slight performance penalty nt expect broken output scenario really considered unsupported react plans allow developers opt full validation hydrating server html seems like dev mode warning outright error order prevent subtle breakage slipping production change probably also called prominently release notes since could unexpectedly break existing code relies old behavior", "d": "9/2017"}, {"body": "yea definitely need prominent release note maybe separate blog post mechanism silencing warning maybe target way inform rely pretty heavily considered actual error even rely minor versions change behavior since true error begin nt throw causes even potential problems code paths differ development production really unexpected ways yea know weird reactism note hydration nt performance optimization way preserve state things like forms animations going add way suppress diff warning individual nodes least text content differences could potentially expand direct child elements node way could work around using different tag names container element", "d": "9/2017"}, {"body": "mechanism silencing warning maybe target way inform basically close eyes put fingers ears yell supervisor took another pass list component using twophase render approach recommended works well think good enough cover use case thanks guess one gotten used ignoring warning try help get word change", "d": "9/2017"}, {"body": "case use server know authorization transitions applications quickly restore part data authorized zone case patch html story thus fast switching applications", "d": "9/2017"}, {"body": "btw relied react clear dom still explicitly automatically currently nt backwards compat", "d": "9/2017"}, {"body": "sounds like action item update docsrelease notes possibly write blog post change showing people migrate code run issue", "d": "9/2017"}, {"body": "hi sebmarkbage use ssr works find front end always sync latest version keep server side code update date avoid dom element overreuse could help something finished page wish warning console cs diff amp break warning think could hook react client side render listener cs diff trigger let reload page client side maybe already sure", "d": "9/2017"}, {"body": "sebmarkbage thanks thorough answers running comments helped us understand going said honesty nt completely see considered bug hard messy ensure rendered serverside clientside equal instance component displays something timebased client clock nt millisecondprecise equal server clock eg always case seemingly random consistent items list suddenly get child div content swapped obviously everything worked around copying every piece global state server client even ensuring eg millisecond time used entire render call nt major overkill obviously using input components nt purely functional making react completely break components nt purely functional quite stretch sure kinds singletonish data time exhibit similar dynamic honesty think screen size example tarnadas nice example", "d": "9/2017"}, {"body": "eteeselink typically time based things things like time stamps text changes order items work fine since text content patched also planning adding ability ignore warning specific special case rare plausible scenario list something depends time determine order eg something conditionally pushes something top list time elapsed changes class name based time elapsing cases theoretical though nt seen one yet probably want represent kind global data state change transition anyway eg indicate alarm fired know ignore even worse case scenario nt need send state solve time based issues use virtualized time note use current time get tearing across screen even rendering client since components render exactly time end different time stamps render prevalent async rendering time render entire update longer bigger issue would data fetching backend end points return different data systems use react server rendering seriously send data along initial request anyway eg see nextjs mechanism avoids two trips backend services avoids unnecessarily hitting services ratio already data loaded might well tack end initial request pipe agree quite complex seems like ultimately best architecture reasons theory could go back model comparing everything trying patch things would make things significantly slower everyone architecture anyway reason theory could two modes however even mode still cases state text input scroll position changes unexpectedly user result inconsistent data also nt seem ideal", "d": "9/2017"}, {"body": "problems casesensitivity pose server client one encountered hydration diffing thought corrected making sure attribute checks caseinsensitive subsequent lowercasings", "d": "9/2017"}, {"body": "use custom attributes customelements custom elements eg rdf angular stuff etc way read getattribute monitoring attribute mutation lowercased would seem like works one case would nt work case eg read lowercase render uppercase work serverhydrated view view rendered client eg due update opposite scenario also problematic also known use case camelcased custom attributes since extensions encouraged use lowercase another issue add something whitelist camelcase already used invalid attribute fixing camelcase form change behavior previous ones noticed", "d": "9/2017"}, {"body": "thank explaining makes sense", "d": "9/2017"}, {"body": "could worms autosave believe autosave expects string name want behavior crossorigin okay aliasing concern neglect types string values empty string represents default example cross origin case think need assign true omit value false pass string assign value autocapitalize harder autocapitalize deprecated trouble figuring false case empty string using browser default behavior also inheriting related form tag technically none sure maybe say flag assigns string value nothing maybe hasbooleanvalue works default behavior unknown attributes flag toggles boolean value many default empty string makes yes flag toggles boolean value still need figure attributes besides deprecated", "d": "9/2017"}, {"body": "think makes sense attributes accept boolean options like attributes like accept set values require explicit value set similarly probably make valid turn currently think works master attributes canonical cases example default default etc would normalize well cases feel like approach would require users knowledge spec behavior know value would represent confusing represents one enumerated value represents none normalize think cases users already expect work add warnings could eventually stop attributes true boolean enumerations could normalize would", "d": "9/2017"}, {"body": "nhunzaker could worms imho perhaps missed much discussion afaik seems like good reason nt straight boolean attributes default true default neither set special like mapped another value like mapping boolean values implied string seems likely cause confusion users also possibility enum values added future like expected feed etc seems far preferable require strings stringattributes expected read work true boolean attributes either gone empty string curious understand want avoid whitelist specialbehavior adopt rules removes attribute strings passed asis boolean becomes empty string optionally valueless attributes ssr simple rules understand would know exactly expect reactdom times would nt depend maybe updated whitelist would nt change versions whitelist updated would work unsupported attributes obviously would need temporary workaround reactdom emit warnings cases previously handled okayish", "d": "9/2017"}, {"body": "syranide check context realize already commented approach outlined sound like thinking", "d": "9/2017"}, {"body": "aweary oh sorry yeah seems already figured imho seems like sensible approach", "d": "9/2017"}, {"body": "taking milestone let come back time decide strategy", "d": "9/2017"}, {"body": "unfortunate react really close issue could make getters nonenumerable think sure would confusing breaking change", "d": "9/2017"}, {"body": "fix issue doubt anyone enumerating reason one think would breaking change ideally warning would fire actually use either features interception proptype fns would exact", "d": "9/2017"}, {"body": "packages export factory function react calls create package maybe could wrap exported factory result update factory accept argument could apply warning right time", "d": "9/2017"}, {"body": "sure effort fix potentially introduce issues worth given imminent", "d": "9/2017"}, {"body": "would flow encourage syntax known invalid broken real modules thinking perhaps discussion another forum", "d": "9/2017"}, {"body": "hey thanks report could please test latest version react fails react rc assuming fails way could provide reduced repro us investigate downloading building full application bit timeconsuming triage seen issues webkitforked browsers may issue js implementation since react works fine major webkit browsers", "d": "9/2017"}, {"body": "hi aweary correct also issues webkitforked browser resolved issue neither resolved react react previous issues resolved issue qtwekbit nt deal well proxy objects resolve issue definition moved proxy syntheticevent generation code temporary solution problem since syntheticevent proxy type event fails called like gives error syntheticeventcall function however able fix moving following statements code solution way around make code conditional browser type nt enter code block simply skip code example referece link issue reproducible qtwebkitbrowser runs desktop ca nt even share ipbased url sorry nt find way provide reduced repro please let know need information also find release information react since resolves webkitbrowser issues confirmed end", "d": "9/2017"}, {"body": "nt think would want include explicit check qtwebkit provide nonintrusive change like resolves happy consider going close since nt supported environment feel free ping find nonintrusive solution usecase thanks", "d": "9/2017"}, {"body": "acdlite would nt sufficient rr since reducer determines whether silent", "d": "9/2017"}, {"body": "mmm see", "d": "9/2017"}, {"body": "recall correctly rr determined return type", "d": "9/2017"}, {"body": "hey msmichellegar thanks report test renderer nt actually dictate component rendered returns representation component tree tools consume including falsy attributes since consumers might want know attribute present case component rendered jest uses package format snapshot results think expected renders falsy primitives could always refer issue tracker verify hope helps", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "thanks comment though sure closed hoping hear team prompted chip throwaway let deprecate finddomnode comments think team members nt know still general feeling ought use without wrapping elements etc edit including early april sebmarkbage", "d": "9/2017"}, {"body": "say thing anyway", "d": "9/2017"}, {"body": "hey flarnie status looks like latest rc warn instead throwing generic error closed", "d": "9/2017"}, {"body": "yes", "d": "9/2017"}, {"body": "doubleyes thanks gaearon", "d": "9/2017"}, {"body": "addressed specifically prefix case", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "yes thanks lot gaearon zpao", "d": "9/2017"}, {"body": "wonder anyone accidentally relies guess way know", "d": "9/2017"}, {"body": "yeah nt think get downloads tag thinking", "d": "9/2017"}, {"body": "way marking exceptions handled would great currently hard time testing exceptions thrown components error boundaries although assert error boundaries work correctly seems impossible prevent exception thrown test framework using tape way preventing uncaught exception fail test created minimal reproduction issue something wrong setup gladly hear error boundaries conceptually optional imho whether errors get rethrown", "d": "9/2017"}, {"body": "use error boundaries display reasonable fallback application user still consider errors development testing meant used control flow want somebody introduce bug leaf component accidentally ship tests swallowed exception boundary make sense", "d": "9/2017"}, {"body": "mweststrate could nt handle though repo nt look like wouldshould make error boundary since might toplevel invariant error like edit strange reaches error", "d": "9/2017"}, {"body": "thysultan wo nt throw exception synchronously meant used control flow want somebody introduce bug leaf component accidentally ship tests swallowed exception boundary make sense gaearon really would indicate component introducing bug nt tested regardless question problem lib author create environment anymore sandbox test exceptions using error boundaries means lib author want test failure scenarios well example component throws wrongly configured specific case context lacks expected information previously lt problem test behavior probably error thrown sync could wrap prevent exceptions escaping anymore fine new default think option influence behavior missing another strategy test exception behavior", "d": "9/2017"}, {"body": "hmm pretty sure wrapping trycatch still works us throwing still synchronous maybe difference testing environment", "d": "9/2017"}, {"body": "see test real browser dom rendering nested components test utils enzyme", "d": "9/2017"}, {"body": "ah thing nt use real browsers testing nt bumped", "d": "9/2017"}, {"body": "gaearon could also apply async operations emit errors like functioncallback pattern", "d": "9/2017"}, {"body": "yeah kind subtle differences exactly reason prefer part test suite running dom subtle differences batches etc work wanted make sure irl behavior expected regards amount renderings order etc might overcautious", "d": "9/2017"}, {"body": "going close since nt supported suggest two events orderdependent registered system native synthetic", "d": "9/2017"}, {"body": "hi aweary synthetic event simulate bubble capture phases listen events toplevel lead eventstoppropagation work simulation initialization time slower dan said also react support well synthetic event react deprecated future", "d": "9/2017"}, {"body": "license headers missing build bundlesthere right", "d": "9/2017"}, {"body": "would great could add support trying combine web components react styled components create ui elements work standalone larger react application", "d": "9/2017"}, {"body": "since update reproduction investigate going close isolate issue provide clear reproduction demonstrates issue react happy help reopen need general help figuring isolate resolve issue suggest checking resources listed get support", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "since already specdefined property reflecting attribute would make sense let users utilize api react api already propertyfocused big leap would least complex change nt breaking", "d": "9/2017"}, {"body": "issue reproduced next", "d": "9/2017"}, {"body": "since root cause going close duplicate", "d": "9/2017"}, {"body": "shallow renderer implement unstablebatchedupdates anymore issue closed", "d": "9/2017"}, {"body": "ran issue upgraded react started getting warnings nt using arrays iterators definitely related plugin refs since remove either one warning disappears see plugin injects helper source refs used falls back perhaps mixing causing issues edit string refs way issue occurs callback refs", "d": "9/2017"}, {"body": "clear expected get meaningless warnings attempt use plugins development plugins must used development using development supported documented plugins pages", "d": "9/2017"}, {"body": "yep definitely clear prefer use plugins development long work found issues production faster way fair also interpreted disclaimer makes existing warning messages cryptic causes new incorrect warning messages appear guess wrong became worried api nt change nt output warnings might new underlying incompatibility", "d": "9/2017"}, {"body": "yea still curious happens love somebody could look easy fix would nice make shipping want make impression supported", "d": "9/2017"}, {"body": "well see happens nt know good way fix happens passed child eg never passed validatechildkeys nt call obviously flag remains triggering warning validateexplicitkey later somewhere sure changed surprising something broke since bypassing internal flags babel able use guess fixed plugin page mentions wo nt intentional reason could nt find git history andor nt know enough react internals know needed", "d": "9/2017"}, {"body": "issue since updating react lots packages reacttooltip one reactgooglemaps another packagejson showing", "d": "9/2017"}, {"body": "please run find package brings wrong version react puts rather please file issue project", "d": "9/2017"}, {"body": "cool thanks dan", "d": "9/2017"}, {"body": "fix module actually included anywhere file anymore may worth adding something release notes user run check dependencies said removing package seemed fix issues instantly", "d": "9/2017"}, {"body": "going update changelog bit collapse details previous beta updates", "d": "9/2017"}, {"body": "trying got line running old android browser", "d": "9/2017"}, {"body": "thanks reporting iqbalnurhakim someone look asap would guess missing transform polyfill", "d": "9/2017"}, {"body": "iqbalnurhakim released fix confirm fixed", "d": "9/2017"}, {"body": "davidfurlong provide reproducing project please bugs like hard fix without context", "d": "9/2017"}, {"body": "apologies advance place ask playing around ca nt quite get work every time seen demo provided dan abramov errors thrown explicitly trying generate typical use case binding correctly handler fairly common mistake see demo clicking button generates nt picked errorboundary however types errors caught expected eg undefined", "d": "9/2017"}, {"body": "anderssonchristian probably caused completely different nature origin types errors types errors caught expected eg x x undefined causes synchronously ie calling method react trying generate typical use case binding correctly onclick handler fairly common mistake hand async triggered component lifecycle definitely harder capture way", "d": "9/2017"}, {"body": "andarist yup makes sense event handler trigger errorboundary thing inside trigger thanks blog actually outlines missed somehow error boundaries catch errors rendering lifecycle methods constructors whole tree", "d": "9/2017"}, {"body": "note bvaughn fyi update points interest op", "d": "9/2017"}, {"body": "pretty sure sep lee benson notifications githubcom wrote rendertostream change rendertonodestream receiving mentioned reply email directly view github mute thread", "d": "9/2017"}, {"body": "render async generator sep wrote pretty sure sep lee benson notifications githubcom wrote rendertostream change rendertonodestream receiving mentioned reply email directly view github mute thread", "d": "9/2017"}, {"body": "render async generator", "d": "9/2017"}, {"body": "leebenson node specific object use es protocol", "d": "9/2017"}, {"body": "yes methods renamed rendertonodestream rendertostaticnodestream pr issue created beta happened beta rc updated description accordingly", "d": "9/2017"}, {"body": "render async generator interesting idea certainly possible future releases fairly certain would nt hard write given current implementation said server rendering mostly done node projects userland rapscallion reactdomstream explored async rendering rendered node streams node web servers deal streams already feels like reasonable api choice course one contributors would think", "d": "9/2017"}, {"body": "aickin long supports back pressure ported interfaces", "d": "9/2017"}, {"body": "let keep thread focused issues rc would better discuss design specific apis separate issues discussion nt get lost stable version", "d": "9/2017"}, {"body": "gaearon k", "d": "9/2017"}, {"body": "async rendering address server side rendering issue want fetch data remote source server renders component fetched data able work around like removing workarounds edit gaeron answered question july might fall react roadmap future sebmarkbage looking", "d": "9/2017"}, {"body": "bit confused default behavior errorboundary component ie one implements always logging caught error console nt programmer responsibility log somehow handle error like normal trycatch block", "d": "9/2017"}, {"body": "intentional easy accidentally swallow errors already big problem react apps nt encourage using errors control flow normal situations yes please log analytics production development display errors console always indicate bug code needs fixed", "d": "9/2017"}, {"body": "portal exposed renamed mean portal unstable feature", "d": "9/2017"}, {"body": "always intended unstable prefix react intending fix bugs rc final release changes rc means team api likely change much react might slightly different", "d": "9/2017"}, {"body": "portal became stable also supported", "d": "9/2017"}, {"body": "changed minds today", "d": "9/2017"}, {"body": "switched current project react react working like charm thanks effort however noticed one thing switched webpack still get stackframe case render error hints", "d": "9/2017"}, {"body": "winterbe loading react cdn checked ensure attribute set", "d": "9/2017"}, {"body": "shame react beta still working enzyme lot errors karma console trying update downgrade", "d": "9/2017"}, {"body": "written explicitly first post popular third party libraries work yet eg enzyme folks working enzyme airbnb took opportunity rewrite solve many longstanding issues plan release rewrite alongside react please give time", "d": "9/2017"}, {"body": "fyi mobx react router work quite well react dan abramov notifications githubcom schrieb mi sep um written explicitly first post popular third party libraries work yet eg enzyme folks working enzyme airbnb took opportunity rewrite solve many longstanding issues plan release rewrite alongside react please give time receiving mentioned reply email directly view github mute thread", "d": "9/2017"}, {"body": "shame react beta still working enzyme folks working enzyme airbnb took opportunity rewrite solve many longstanding issues plan release rewrite alongside react please give time hear close", "d": "9/2017"}, {"body": "react rc fixes report bad dead code elimination react devtools gaearon fix false positive warning hydrating svg ssr gaearon add warning nonlowercase custom attributes gaearon fix memory leak gaearon remove deprecated entry point shallow renderer gaearon remove undocumented methods gaearon add official api without prefix gaearon repeat polyfill twice gaearon please test getting really close end shipping unless folks report bugs", "d": "9/2017"}, {"body": "recommended ship polyfill requestanimationframe production recommended polyfill", "d": "9/2017"}, {"body": "recommended ship polyfill requestanimationframe production depends browsers target raf pretty good support point polyfill probably still pretty good idea recommended polyfill nt official recommendation personally used raf past projects", "d": "9/2017"}, {"body": "stable enough use production", "d": "9/2017"}, {"body": "yes use production final release waiting documentation catch", "d": "9/2017"}, {"body": "cool checked facebookcom living edge", "d": "9/2017"}, {"body": "bvaughn loading react via webpack local bundle cdn", "d": "9/2017"}, {"body": "love componentdidcatch improved error messages would also like able call thisthrow error would nice way propagate async errors tree great work though", "d": "9/2017"}, {"body": "winterbe could create repro us share via new issue would helpful", "d": "9/2017"}, {"body": "fyi people would like try enzyme enzyme betas published currently", "d": "9/2017"}, {"body": "fix issue bootstrap uses returning parent component break css grid react return multiple components array without parent div", "d": "9/2017"}, {"body": "huge thanks everyone react release notes react look inside apicompatible rewrite frontend ui library", "d": "9/2017"}, {"body": "congrats release know linking page instead release notes", "d": "9/2017"}, {"body": "enzyme still working yet tried use npm savedev enzyme nothing changed", "d": "9/2017"}, {"body": "paulocesarpcfj enzyme released last night support react working file issue details enzyme project", "d": "9/2017"}, {"body": "written babel plugin babelplugintransformjsxclassnames automatically add code transform javascript import classnames classnames may need", "d": "9/2017"}, {"body": "meowtec give normal class name add classname", "d": "9/2017"}, {"body": "ianshowell deal case anything inside braces add excepted case stay", "d": "9/2017"}, {"body": "hey example without react nt actually representative react event listeners react single listener registered listeners events capture phase simulates bubblingcapture phases expect issue firefox related capture phase see issue bugzilla calling eventstoppropagation capture phase focus events prevents cursor appearing input elements jsfiddle registers capture listener reproduces issue without react since reported firefox bug working around would require major change react event system going close thanks bringing attention", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "gaearon actionable item adding warning", "d": "9/2017"}, {"body": "let wait popular libs update portal api first take months", "d": "9/2017"}, {"body": "use implement rcdialog one feature dialog unmounting instead calling call trigger animation animation finished call clear portal see example check destroy close feature seems ca nt archive using portal unmount react", "d": "9/2017"}, {"body": "yesmeck please file new issue discuss use case", "d": "9/2017"}, {"body": "interesting use callback clever think new api able handle case way react components eg something like reacttransitiongroup transition component", "d": "9/2017"}, {"body": "iv create new issue", "d": "9/2017"}, {"body": "unable reproduce desktop safari version macos maybe patch release fixed nhunzaker think likely comments related problem issue occur react nt wrap text comments version original jsfiddle running react rc verified ios issue occur anymore since likely browser bug think safe say resolved react since including fix release unlikely", "d": "9/2017"}, {"body": "aweary sorry get back late sounds good nt know nontrivial way fix patch awesome safari might fixed react nt wrap text comments around", "d": "9/2017"}, {"body": "good outcome thanks", "d": "9/2017"}, {"body": "hi created pull request demo purpose want get feedback see whether right track fixed tests linting ready merging basically managed get warning message looks like created hydrationwarningrenderer module following method setcontainer set container dom element hydrating container required organizing warnings tree structure like dom tree registerwarning instead calling old warningfor methods hydration call registerwarning method save diffs central registry flushwarnings method called prepareforcommit hydration completed two steps print warnings buildwarningtree warningtreetotext buildwarningtree starting current container dom element recursively build tree node pair curentdomnode diffs warningtreetotext recursively convert diffs info warning string print whole warning tree formatted string appreciate anyone let know approach worth keeping working", "d": "9/2017"}, {"body": "closing staleness please feel free post followup repro still relevant", "d": "9/2017"}, {"body": "hello idea released waiting controllist attribute video tag thanks", "d": "9/2017"}, {"body": "updates", "d": "9/2017"}, {"body": "still waiting guys give update much appreciated", "d": "9/2017"}, {"body": "seems like sophiebits already published see amp blogpost nt get master yet think", "d": "9/2017"}, {"body": "yep sophiebits sent changes new license last night good go", "d": "9/2017"}, {"body": "nhunzaker thanks managing release", "d": "9/2017"}, {"body": "also experience safari", "d": "9/2017"}, {"body": "help comment closed issues cases people look old problem solved start experiencing issue similar old issue please file new one maintainers keep track provide necessary details appears someone could share information versions use reproducing cases would splendid", "d": "9/2017"}, {"body": "klavs solutions works would love see fixed react release news months thanks", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "awesome", "d": "9/2017"}, {"body": "bvaughn think consider closed", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "gaearon digging bit found due edge ie work documentfragment append working children window reason nt know react provide workaround browsers would nice", "d": "9/2017"}, {"body": "working fix", "d": "9/2017"}, {"body": "quick update bug found root cause react created pr master unused apis closed one created new pr fiber reconciler code instead", "d": "9/2017"}, {"body": "hey maxsalven sorry nt respond issue sometimes issues fall cracks difficult prioritize issues ca nt reproduce since nt information error occurred nt received additional reports going assume either resolved oneoff issue still seeing issue latest version react please feel free ping example reproducing issue thanks", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "agree flaque using listener parent component control state children likely best option since event system meant implement semantics browser event system provide way listen events parent elements usage questions please refer get support thanks", "d": "9/2017"}, {"body": "since example provided going close anyone provide example reproducing issue latest version react feel free ping investigate", "d": "9/2017"}, {"body": "reopened since reverted", "d": "9/2017"}, {"body": "nt sound related issue question react please ask stackoverflow community resources linked docs", "d": "9/2017"}, {"body": "issue likely using indexes keys lists keys page documentation mentions nt usually good idea use unique ids keys instead", "d": "9/2017"}, {"body": "since reproducing example provided going assume longer issue close", "d": "9/2017"}, {"body": "gaearon created pr please review", "d": "9/2017"}, {"body": "get outlook ios mohamed h hegazy notifications githubcom sent friday september pm facebookreact cc subscribed subject facebookreact ca nt build react windows gaearon created pr please review receiving subscribed thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "think fixed wrapping whole dev bundle iife inside check", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "coming back nt think solution proposed expanding api provide firstclass hoc support something pursued core issue difficult access refs wrapped components issue worked independently see example solution problem likely address bulk one", "d": "9/2017"}, {"body": "final plan", "d": "9/2017"}, {"body": "see react released come resolution support third party renderers", "d": "9/2017"}, {"body": "markbrocato", "d": "9/2017"}, {"body": "entirely sure would help nt able get fire button loses focus looking bit turned need focused getting blur basically would work wo nt", "d": "9/2017"}, {"body": "feedback reactfiberreconciler available public way thanks", "d": "9/2017"}, {"body": "hi mcz please read previous comments issue understand status", "d": "9/2017"}, {"body": "rollup scripts indispensable create renderer", "d": "9/2017"}, {"body": "necessarily putting code npm package work singleton modules would break shared renderers maybe ship version resilient compiling bundle reconciler entry point whole code wrapped extra factory", "d": "9/2017"}, {"body": "actually sounds really promising simple want give try", "d": "9/2017"}, {"body": "sounds way easier custom build tool still needs access reconciler somehow", "d": "9/2017"}, {"body": "iamdustan wan na try make bundle would need special postprocessing build script put closure around", "d": "9/2017"}, {"body": "gaearon putting first minutes day towards right", "d": "9/2017"}, {"body": "already similar postprocessing cases", "d": "9/2017"}, {"body": "hours", "d": "9/2017"}, {"body": "let know want hand iamdustan sounds like fun project", "d": "9/2017"}, {"body": "thought goal fiber avoid singleton modules instantiate desired little slower way", "d": "9/2017"}, {"body": "sure goal maybe places singletons practice sure reliably catch except completely forbidding module level variables also sure benefit flat bundles still wrapping trick third parties", "d": "9/2017"}, {"body": "felt strongly making things instantiable sebmarkbage felt strongly buildtime injection way go compromised making factory functions like reactfiberreconciler scheduler etc used runtime recommendation inline things build time nt think necessarily good way enumerate least fix things come", "d": "9/2017"}, {"body": "see case seems like want distribute reconciler separate entry point means needs bundle later fix places remove extra closure make sense", "d": "9/2017"}, {"body": "sure understand suggesting module export factory method modulelevel state create multiple renderers one copy code bundle entire renderer rollup run closure extra constructors disappear", "d": "9/2017"}, {"body": "fwiw wasm version would compiled singleton instantiated multiple times wrapping everything would inline model", "d": "9/2017"}, {"body": "think mostly context stack instantiated right", "d": "9/2017"}, {"body": "suggesting module export factory method modulelevel state create multiple renderers one copy code agree saying nt need prevent iamdustan working cases want bundle remove hack wrapping whole bundle wrap module level state source code level need bundle anyway", "d": "9/2017"}, {"body": "question slight tangent apologies advance wrong place raise someone please point documentation build custom renderer ground nt see react docs tricky reverse engineer looking art renderer alone fwiw rough goal build react interface pixi order address major performance issues hope caused using domrenderer", "d": "9/2017"}, {"body": "dakom nt think official documentation yet interrogation documented findings inside custom renderer source code read comments manaflairmylittledom caution things might entirely accurate good resources understand implemented customdefined functions testrenderer nooprenderer since pretty simple", "d": "9/2017"}, {"body": "oooh found total luck feel like official documentation got consolidated knowledgebase lurking somewhere", "d": "9/2017"}, {"body": "also", "d": "9/2017"}, {"body": "dakom stumble across must really bad marketing", "d": "9/2017"}, {"body": "hehe worries learning path js super weird diving decade browser first modern js things hearing like frp functional things react hoping learn array next", "d": "9/2017"}, {"body": "followup question good live forum discuss building renderer specifically feeling lots little oneliner questions issue probably nt best place post outside scope general react discussions", "d": "9/2017"}, {"body": "reactiflux reactinternals channel", "d": "9/2017"}, {"body": "also file issues happy chat renderers", "d": "9/2017"}, {"body": "hi everyone maintainer works way works right new react wish update soon possible fact idea see new fiber version repo nt apply standalone library wait issue resolved ways use react internals", "d": "9/2017"}, {"body": "please wait land issue closed", "d": "9/2017"}, {"body": "fwiw dumped various links suggested far gist case helps anyone else see one place far early seems comparingcontrasting gets lot mileage slowly filling blanks build first renderer thanks yall", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "mdoelker solution worked long removed check comparing prevpropsvalue propsvalue every componentdidupdate manually set input default value", "d": "9/2017"}, {"body": "hey maybe dumb question polyfill think appropriate place ask looking source reactdomframescheduling see using polyfill limited scope moreorless optimised worry use polyfill code could interfere test line leading suboptimal polyfill used react short anything think using polyfill code", "d": "9/2017"}, {"body": "jobleonard good observation yes polyfills way conservative meaning nt fire often enough fill available cpu cycles frames react rely use conservative polyfill get enough callbacks application performance suffer result matters async mode might want dev detection see nonnative polyfill warn acdlite item ensure used expiration never fires", "d": "9/2017"}, {"body": "cyberhck went inheritance route components large project work worked great really simple components even benefit composition via props functions much easier test case curse project year regretted decision rely much inheritance greatly moved composable model similar gaearon explains inheritance although part language easier humans grok works great relation parent child basically set stone wo nt change much composition hand awesome relationship objects changing quite often think different ui requirements adapting new designs always require components similar functionality slightly different behaviours attached quite lot discussed topic various issues different frameworks github repos highly recommend trying approaches see easiest least team tried inheritance approach composition made much sense simplified lot things us", "d": "9/2017"}, {"body": "say want create slightly different type collection overwrite checkforvalidity whatever required however using composition go collection either add list allowed child really good since collection nt want specialcollectionitem accept allowedchild prop anything want override make prop use approach facebook great success base components", "d": "9/2017"}, {"body": "javascript oncompositionupdate e gt thischinprocessingtrue onchange gt thischinprocessing thischinprocessingfalse return demo", "d": "9/2017"}, {"body": "acdlite wrote evaluates false actually new instance render parent component called happens component mounting nt get remounted right", "d": "9/2017"}, {"body": "look like typescript issue happening flow", "d": "9/2017"}, {"body": "confirm see animated gif", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "hi maybe change docs", "d": "9/2017"}, {"body": "going remove docs anyway redirect new home transition group maintaining addon anymore feel free submit pr docs though", "d": "9/2017"}, {"body": "hi folks update translation progress japanese indonesianbehasa chinese simplified portuguese brazilian french spanish greek korean russian danish german arabic bengali ukrainian czech polish turkish lt details", "d": "9/2017"}, {"body": "ericnakagawa hello korean translation progressing slower thought still working think adding glossary page even want translate hard unify expressions words least want bring korean consistent way give advice", "d": "9/2017"}, {"body": "jisupark think glossary page would help live", "d": "9/2017"}, {"body": "think would make sense create glossary page docs initial work got could help anchor translations well", "d": "9/2017"}, {"body": "ericnakagawa think glossary page docs gaearon opinion glossary help person wants read official docs language also guides people want translate react related docs use general expression", "d": "9/2017"}, {"body": "good glossary original document desirable long run think nt wait japanese translators maintain list words translate react jargon uncontrolled component consistently saying making glossary would nontrivial task forgive say found reviewing entire document original document consistent regarding word usage example referred dom component one place component refers userdefined components another place eg always start component names capital letter custom components composite components userdefined components seem redundant synonyms used elsewhere react component may may include depending context nevertheless even inconsistencies chapters fully understandable translatable basic knowledge react doubt strictly consistent documentation priority core team translators may move without sourceoftruth glossary", "d": "9/2017"}, {"body": "fix issue", "d": "9/2017"}, {"body": "nt think anyway fix selenium operating api much lower anything react even touch working selenium drivers nt firing correct native events input suggestion everyone use empty string seems stable terms right behavior", "d": "9/2017"}, {"body": "jquense though trying snarky maybe something understanding properly add changehandler actual dom element change handler triggers actual dom element changeevent triggered nt seem picked react onchange listener specific componentdidmount triggers thiselemonchange gt consolelog changing doesnt changehandler evt gt consolelog changehandler triggered thissetstate value evttargetvalue render const value thisstate return", "d": "9/2017"}, {"body": "react nt listening events cases listening would event test accurate test think js componentdidmount triggers documentaddeventlistener input e gt consolelog etarget thiselem doesnt changehandler evt gt consolelog changehandler triggered thissetstate value evttargetvalue render const value thisstate return", "d": "9/2017"}, {"body": "might understanding event documentation wrong specifically says understand actual events assumed applies listeners wel assuming correspondence dom listeners amp react listeners triggers documentation nt cover anything difference", "d": "9/2017"}, {"body": "documentation nt really cover implementation detail generally relevant using react selenium case bit special approaching react underneath usual yes may dom react events consider event react fires keystroke unlike native event fires blur input probably named event behavior actually emulating generally events pretty close imagine underlying event particularly abnormal react also handles delegating events rather listen element individually listens top level forwards events happen react traverses tree mimicking native event bubbling capturing affect selenium test tho selenium triggering correct events bubble seen react", "d": "9/2017"}, {"body": "jquense thank taking time explanation hard work around issue first time encountered took figure happening selenium tests nt working expected think threadproposal spec webdriver trigger event close issue", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "page updated sure refers close bennick asking tracked think fixed master", "d": "9/2017"}, {"body": "gaearon means thoughts exactly ref", "d": "9/2017"}, {"body": "understand usually completely useless issues spam notifications everyone give valuable insight new information wish issue using emoji reactions github available every post comment meant understand problem reported issue docs mentioning something already fixed", "d": "9/2017"}, {"body": "true spent last trying fix bug related", "d": "9/2017"}, {"body": "cc aweary", "d": "9/2017"}, {"body": "take look back town", "d": "9/2017"}, {"body": "seems fixed latest master", "d": "9/2017"}, {"body": "acdlite changes merged master since would resolved seeing issue still occurs latest rc", "d": "9/2017"}, {"body": "hi ie edge rendering required select box initial value set trying submit form input getting fail validation select value coming invalid ie edge solution", "d": "9/2017"}, {"body": "aweary using shuaiz solution works well wonder react issue", "d": "9/2017"}, {"body": "yet another use case reactrouter suggested practice ensuring pure components impure reactrouter children update pass otherwise unused prop pure component since prop used purposes would nice able use symbol guarantee name never ever conflict real props given pure component one things tried mildly surprised nt work case syntax cleaner prop injected via reactredux think useful simplifying guideline would react prop keys like object prop keys completely nails opinion", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "problem render components dom nodes content editable component", "d": "9/2017"}, {"body": "chadoh", "d": "9/2017"}, {"body": "unsubscribe sent protonmail mobile original message sep pm jonathan ankiewicz wrote microsoft ie developers use internet like rest us see constant issues ie running issues production try pushing react update first receiving subscribed thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "simple way reproduce render method throw error h get uncaught promise typeerror read property replacechild null see crashed gaearon looks like new handleerror catching", "d": "9/2017"}, {"body": "similar problem large table rows rendered server nt want send data client twice html json form came solutionhack rendering table rows component first checks dom see component exists id prerendered serverside exist extracts html uses directly via js rendertable debug render table const id tablebody const html thisgetexistinghtml id getexistinghtml id typeof document undefined return const node documentgetelementbyid id return node amp amp nodeinnerhtml renderitems debug render items return thispropsitemsmap name url gt return name shouldcomponentupdate return false also coupled prevent renders initial mount", "d": "9/2017"}, {"body": "swlilike solution works understand happens error line react lib contains function error occurred case dom nodes fix added one like parent element edited party library", "d": "9/2017"}, {"body": "coming back still think accepting concession best choice limited dataevents dom provide us case enough implement desired behavior without hacky solutions absolutely need ensure invalid values entered use text input manually validate value handler said think best close possibly document behavior need think nhunzaker jquense", "d": "9/2017"}, {"body": "agree yeah endless rabbit hole think line drawn somewhere tbh real correct way handle edge case culture aware adjacent", "d": "9/2017"}, {"body": "agree jquense spot think right need spot keystroke detection least number inputs would work every language extremely hard problem design challenges move forward removing attribute syncing", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "came across issue well decided solve built hoc takes component makes performance much better implementing wiser shouldcomponentupdate take look", "d": "9/2017"}, {"body": "fixed chrome", "d": "9/2017"}, {"body": "met problem code problem remove img tag", "d": "9/2017"}, {"body": "replaced fontawesome icons get outlook android wglayner notifications githubcom sent monday september pm facebookreact cc colin dekker comment subject facebookreact react updates causing issues dom met problem code problem remove img tag logo receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "hi guys sorry problem trying make application themes without fortune method call componentdidmount application component valueprop valuevalue change nothings happens default theme variables root colors thanks advance nice day", "d": "9/2017"}, {"body": "hi clear providesmodule removed react still alive react native", "d": "9/2017"}, {"body": "think removed react either", "d": "9/2017"}, {"body": "thanks dan understand overall direction get rid therefore reactrn like extreme convenience see potentially confusing pattern little confused whether advocate use learners reactrn", "d": "9/2017"}, {"body": "nt matter learners internal convention advocating others use fact changes react impossible individual modules react internals anyway", "d": "9/2017"}, {"body": "chromium bug labeled fixed going assume resolved case nothing semantically wrong using would unlikely include change address bug one platform thanks", "d": "9/2017"}, {"body": "bit frustrating nobody gotten nobody going try fix rendering placed front page react website blog post least gist please cover issue forms able placed inside modals reliably multiple frameworks seem stuck", "d": "9/2017"}, {"body": "hi kielan directly fixed difficult fix come people also helps people come politely voice need particular bug fixed never otherwise nt know prioritize please also remember open source project provided free anyone like free contribute bug fixes important personally react use reactdomunstablecreateportal implements strategy timing problems", "d": "9/2017"}, {"body": "sophiebits trying rude apologize offended think really tough bug track err actually called silent failure year past actually found solution come yet another project honestly surprised one gotten itthe pull requests offered accepted much feedback given improve pr multiple broken open source projects seem waiting mode feedback willing help build lot modals react point tough exactly understand actual roadblocks outside however figure first thing needs done tests need written identify tree attributes laid", "d": "9/2017"}, {"body": "new portal api addresses issue try react rc released recently tried documented yet use method part returned tree", "d": "9/2017"}, {"body": "initial debugging work jim locate problem consensus real way fix add real first class portals react others noted landed react make point document portals documented able close issue", "d": "9/2017"}, {"body": "documented", "d": "9/2017"}, {"body": "behavior changed react see dom attributes react using result warning still render attribute decided continue recommend using existing attribute names lenient rendering dom nt believe intention move etc canonical names going close thanks", "d": "9/2017"}, {"body": "none assertions exist latest rc release", "d": "9/2017"}, {"body": "react api pure components reactpurecomponent", "d": "9/2017"}, {"body": "seasoned contributors opinions look like become feature merit event hook seems like current react bit mixture two already", "d": "9/2017"}, {"body": "known way around case nt want child mount first parent render call", "d": "9/2017"}, {"body": "surprising functional component purecomponent default although somewhat counterintuitive think actually makes sense functional components default guarantee correct wrong react functional components nt classbased nt internal state people could still mutating props wild relying components rerender making breaking change agree however way optin behavior interim", "d": "9/2017"}, {"body": "facing issue please look image code import react react interface idatatunel data semployee class semployee public firstname string public lastname string public id number public fullname string public enrollmentdate date export class employeestemplate extends reactcomponent id first name last name full name enrollment date thispropsdatamap id firstname lastname fullname enrollmentdate gt id firstname lastname fullname enrollmentdate export default employeestemplate", "d": "9/2017"}, {"body": "resolved", "d": "9/2017"}, {"body": "exactly thing trying still solution", "d": "9/2017"}, {"body": "since longer exists react new package includes clear deprecation message going close", "d": "9/2017"}, {"body": "current implementation property input element updated value changed goes managed attributes well means update dom updates made longer issue thanks", "d": "9/2017"}, {"body": "original issue reported tnlogy expected behavior since updating property attribute sounds like issues mentioned resolved going close", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "since repro provided activity almost years going close still issue latest version react please provide example reproduction issue verify thanks", "d": "9/2017"}, {"body": "verified still issue latest react rc", "d": "9/2017"}, {"body": "issue occur react rc sure exactly resolved seems resolved nonetheless", "d": "9/2017"}, {"body": "\u80fd\u4e0d\u80fd\u81ea\u5b9a\u4e49\u54ea\u4e9b\u5c5e\u6027\u4e0d\u88ab\u5ffd\u7565", "d": "9/2017"}, {"body": "going close nt think anything actionable activity year react release team maintaining detailed uptodate issue betas rc jsfiddle could easily included future issues tracking releases thanks unpkg nt think intention break current versioning practices prereleases", "d": "9/2017"}, {"body": "seriously react native make life easy yes deathmood u r right rcshow ever also rcloop item items rcmodel data really try vuejs save life time well problem nt support native apps framework weex gt weed native witch work vuejs provide alibabcom could nt understand anything documentation chinese witch need learn chinese year weex also way happy coding", "d": "9/2017"}, {"body": "hope make like", "d": "9/2017"}, {"body": "use reactnative component created welcome", "d": "9/2017"}, {"body": "like included screenshot instead js snippet", "d": "9/2017"}, {"body": "streamich like also ida screenshot seem concept behind technique see u ca nt copy", "d": "9/2017"}, {"body": "movement awhile nt seen reports going assume resolved somewhere either react flash firefox", "d": "9/2017"}, {"body": "resolved react renders unknown attributes check dom attributes react information", "d": "9/2017"}, {"body": "usually means user mixed lowercaseuppercase naming convention react experimented upgrading apps several warnings elements warning nt really affect anything making developers question sanity something broken like chime valid use cases use semantics avoid div hell eg add flexible gap flex boxes simple icon fonts nt need react components etc etc", "d": "9/2017"}, {"body": "roberttod find solution problem thanks", "d": "9/2017"}, {"body": "since followup years nt used fiber going go ahead close one", "d": "9/2017"}, {"body": "lt", "d": "9/2017"}, {"body": "year reports issue occurring anymore also clear example could use reproduce issue latest versions react going close assumption commit period resolved issue still seeing issue please provide small repro verify thanks", "d": "9/2017"}, {"body": "relicensing react jest flow immutablejs mit license hope addresses concerns", "d": "9/2017"}, {"body": "supported react", "d": "9/2017"}, {"body": "since followup issue two years old going assume longer issue close", "d": "9/2017"}, {"body": "hey cesarp sorry never responded issue sadly issues fall cracks sometimes since two years almost major releases going close since regression longer concern issue current behavior feel free open another issue updated repro happy look thanks", "d": "9/2017"}, {"body": "works like charm", "d": "9/2017"}, {"body": "xahon really works however make error passing wrong type component warning message helpful warning failed prop type call class function", "d": "9/2017"}, {"body": "benvinegar try sentry nt caught minified error need configure", "d": "9/2017"}, {"body": "firefox datatransfertypes property returns frozen array domstrings per spec rather domstringlist latest versions firefox speccompliant still consider polyfilling older versions firefox cc sophiebits", "d": "9/2017"}, {"body": "seems like may well simple check percent users still old firefox", "d": "9/2017"}, {"body": "sounds good launch would great could address less ambiguity around shouldshould nt polyfill", "d": "9/2017"}, {"body": "look forward seeing added next year common paradigm support callbacks promises usually callbacks uptodate libraries situation dependent set states exist imo antipattern callback first place tossing stuff componentdidupdate certainly get around also end cause amp effect somewhere else sprinkled react component rather right next creating bit maintenance issue least little confusing say anyone coming back looking code next week", "d": "9/2017"}, {"body": "nt think anything actionable going close still warn trying reset controlled input using still recommend syranide advice input either uncontrolled value always undefnull controlled value string empty string rather null entire lifetime", "d": "9/2017"}, {"body": "resolved", "d": "9/2017"}, {"body": "closing since nt actionable us", "d": "9/2017"}, {"body": "looks like issue either nt exist anymore nt impacted anyone almost three years since opened posterity going go ahead close", "d": "9/2017"}, {"body": "longer issue using library", "d": "9/2017"}, {"body": "since proptypes longer part react core going close opened issue repo package", "d": "9/2017"}, {"body": "anyone still interested pr", "d": "9/2017"}, {"body": "issue appears resolved firefox", "d": "9/2017"}, {"body": "actually documentation purposes case someone stumbles back fixed firefox since firefox nt think really depends react version sure whether fixed safari yet", "d": "9/2017"}, {"body": "think easiest way supporting async render method render returns promise allow root component wait children components rendering course result render promise implemented something like preact", "d": "9/2017"}, {"body": "faceyspacey thank detailed answer really like idea reduxfirst router definitely solves problems makes things much transparent clean big thanks", "d": "9/2017"}, {"body": "rarara glad like one biggest challenges nt good abstraction route level datafetching react react callbacks excellent pattern particularly package nonobvious firstclass afterthought importantly however nt live redux really first time redux users complete route level abstraction think rfr gon na see rethinking importance route level vs component level things like relay apollo created lot hype around pairing data dependencies components nt using likely going end world hurt point things lifecycle handlers said eventually rfr route level integration apollo little benefits things component level minus aforementioned rare exceptions least time perhaps app determine data need based route possible likely deriving data view layer well could rethought interpreted url even tools like apollo begin engage problematic antipatterns likely eventually cause pain letting state live nowhere else view layer ie state necessary perform datafetchings often refine exact parameters used fetch data take state props transform get params prior fetching data stuff lives view layer subject rerendering mechanisms ie lifecycle handlers called every app one point another ends data fetched fetched response unrelated props receivedchanged apps write extra code guard unrelated props changed ie props nt affect params used fetch data react native apollo problem less nt ssr therefore potential sequential datafetchings happening server however really need component level datafetching screens small generally know scene needs terms data like desktop web panel dashboard million graphs multiple tables etc one use case perhaps biggest primary place component level starts make sense even specify requirements widgets one place fetch via apollo nt given enough thought yet basic idea attach graphql datarequirements route components connect data like redux data specifically idea eliminate reactredux apollo equivalent want one want flatter using apollo requires destructuring deeply nested data gain access truly want components vision one way looks like regular redux plus graphql specifications route level bit premature talkin barely looked route level correct approach app apollo graphql nt exception lastly testing much easier datadependencies async work separated components separation concerns major productivity booster test components without worry datafetching course tests must populate store async fetchings ahead time separated components easily formalize work helper functions tests use prepopulate store testing components render", "d": "9/2017"}, {"body": "faceyspacey completely agree must admit nt tried apollo graphql definitely check see fit use cases used writing web applications using mvc pattern basically pull data dependencies controller inject data views business logic like said makes testing much easier since view nt coupled data fetching seen mvc applications view part fetching data business logic terrible clue data fetched hidden viewcomponent testing becomes harderimpossible reduxfirst router much like controller part mvc plus routes makes much sense thank", "d": "9/2017"}, {"body": "end day new stack redux v react c reduxfirst router soon renamed rudy react came particularly redux seemed want throw ancient wisdom mvc somehow meant could completely clear pains developing previous applications think ultimately nothing simply tools built yet support end day still benefit greatly mvc even reactive clientfirst applications may work bit differently new clientfirst stack vs traditional serverside mvcs basically separation concerns far difference interactionbehavior basically past controller would get models initial phase render views controller rfr immediately rendering view chosen via ui model ie redux state rerendering view second time controller finds domain models also stored redux state", "d": "9/2017"}, {"body": "agree breaking change app changes behaviour original behaviour convenient able improve radio button group selecting radio item unselected without introduce extra button unselect needed sometimes event could use unselect already selected radio group", "d": "9/2017"}, {"body": "please consider addition long documentation properly warns difference referencing vs argument think could bring valuable sugar let sum pros cons pros removes code clutter every stateful function makes super easy transform stateful pure pure stateful component imho makes api consistent lifecycle events cons decouples rendertime state current state tend agree stevetaylor would say closures pure documentation compromises docs specify clearly closures bad practice also explain difference referencing argument think would make everybody happy nt forget pareto", "d": "9/2017"}, {"body": "gaearon still warning place consider acting wait", "d": "9/2017"}, {"body": "aweary late breaking changes let look probably land soon release behind flag", "d": "9/2017"}, {"body": "bad", "d": "9/2017"}, {"body": "hi also came case invariant violation inside trying use google tag manager gtm specifically interesting nt see issue nextjs react upgrading nextjs react appeared solved though jsx import rendertostaticmarkup reactdomserver export const servergtmnoscript export const clientgtmnoscript rendertostaticmarkup servergtmnoscript layout render function error message google search ps seeing invariant warnings move react", "d": "9/2017"}, {"body": "decorator workaround generic component workaround js trigger onchange event browser autofill see example class autofillwatch extends component static proptypes autofill component like componentdidmount thislistener setinterval gt thisinput thispreviousvalue thisinputvalue return componentwillunmount clearinterval thislistener componentdidmount const ref thisprops ref consolelog ref thisinput ref thisinput refinput input gt thisinput input render const component thisprops return component thisrefinput", "d": "9/2017"}, {"body": "generic form action saves values form state changed however option save details localstorage next time user goes form prefilled however seems using reactdom prefill values storage nt trigger onchange event state nt updated thus submitting form fails blank values anyway around", "d": "9/2017"}, {"body": "stevematdavies fire react gives input new value might use case wrong would willing provide example", "d": "9/2017"}, {"body": "redux action saves user login credentials localstorage check box checked user logs returns log page values read forms state user enters fields using onchange event field way many forms basically except form name use one parent applicationform component form function avoid setting state values selected fields necessary thus use common functionality drop child forms applicationform children rendered thispropschildren thus field inside applicationform harvested onchange including items checkboxes recaptchas etc issue value entered field via storage programmatically eg getting localstorage onchange event fired mentioned thus values added state submit fired undefined course could circumvent parsing values submit however means would ensure know names fields child forms ensure unique silly replication abstract enough coding standards", "d": "9/2017"}, {"body": "actually complicated get unique id constructor props super props thisid new date gettime css selector needs first letter character prefix id render method works like charm nt wait react policy list future pending maybe never implemented", "d": "9/2017"}, {"body": "mtrabelsi approach dangerous multiple components may created millisecond time resolution nt high enough still technique assigning ids constructor approached past however used library usually prepend prefix make id contextual nt perfect still like generate id based props accomplishes task propbased identifiers fail", "d": "9/2017"}, {"body": "uuid constructors work fine nt need ssr tho likely id mismatch server client", "d": "9/2017"}, {"body": "mtabelsi nhunzaker solutions create persistent id especially certain component mountedunmounted across renders even moving tabs might unmount component say refreshes", "d": "9/2017"}, {"body": "omerts correct definitely fix issue think could really great feature unfortunately nt really understand enough fiber make happen would happily assist anyone trying figure", "d": "9/2017"}, {"body": "probably agree whether want behave considering implementations unless proof concept", "d": "9/2017"}, {"body": "sophiebits ah sorry nt get ahead love figure resolution", "d": "9/2017"}, {"body": "issue nt ids whether good idea preserve state across serialization use cases turn ca nt modeled better nt get stuck id thing serialization good idea maybe better build", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "understand bug react guess cursor position manipulate input value way issue block character nt trigger setstate render react still reset position simple example blocking alphabetic characters digits allowed class application extends reactcomponent constructor props super props thisstate value change e const regex regextest etargetvalue return render consolelog render return setstaterender triggered react change dom move cursor end input think gaearon react block new value going input control blocking cursor position change well looks like bug", "d": "9/2017"}, {"body": "tibbus good point normally think filtering invalid chars make string valid rather rejecting change think right common pattern simple way implement interested", "d": "9/2017"}, {"body": "tibbus partial solution someone pastesmovesetc still fail way sure better imho serious better implementing cursor handling getting right also modifying input like clears undo history many browsers chrome even tends corrupt one way proper block characters entered via iirc", "d": "9/2017"}, {"body": "wanted point looks like bug react offer solution issue right best solution right one wrote sophiebits covers cases", "d": "9/2017"}, {"body": "used rchanou solution along addition prop checked parent component use force input take new value keyboard shortcut cause field cleared", "d": "9/2017"}, {"body": "took finally done new site", "d": "9/2017"}, {"body": "research fixed follow work ensure correctness learn new behavior react", "d": "9/2017"}, {"body": "gaearon", "d": "9/2017"}, {"body": "thanks nhunzaker work", "d": "9/2017"}, {"title": "angular compiler refers sourcemap wrong location", "body": "submitting current behavior compiler deployed run app browser see error message ca nt refer expected behavior refer correct folder minimal reproduction problem instructions deploy compiler using command environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "19503", "d": "9/2017"}, {"title": "syntaxerror unexpected end json input", "body": "submitting current behavior upgrading angular suddenly api calls return null give following httpclient commonhttp interprets null empty string gives parse error expected behavior return simply returning null calls rather throwing parse exception minimal reproduction problem instructions get post returns null value motivation use case changing behavior supposedly null responses status nocontent would handled fine turns complicated achieve using api years issues middle converting two large applications share api angularjs angular extremely arduous task claiming life past month please beg go back allowing null response treat null empty string versions angular prior done completely stuck ca nt go back threw wholly angular material dependency latest drop back angular get following trying build menus upgraded fixed issue ca nt move forward backwards help environment", "num": "19502", "d": "9/2017"}, {"title": "router animation working animated element set position fixed absolute", "body": "submitting current behavior routing animation used animate route enter leave animate transition run animated view positionned fixed absolute following animation work expected following animation works expected expected behavior positionning element required trigger animation minimal reproduction problem instructions motivation use case changing behavior forcing positionning fixed animated element might change appearance animation compared normal appearance environment", "num": "19501", "d": "9/2017"}, {"title": "language service incorrectly reports bind functions error", "body": "submitting current behavior language service reports calling templates error expected behavior since work guess false alarm report false positive minimal reproduction problem instructions try binding templates function motivation use case changing behavior binding directly templates done otherwise expect environment", "num": "19500", "d": "9/2017"}, {"title": "documenation issue mockbackend", "body": "submitting current behavior documentation mockbackend contains error unit test code test service backend application available providing mock error response although test fail mock response server valid simulate error response valid response error status expected behavior instead using mockrespond use mockerror js getheroes server fakeasync gt let result string let catchederror thisheroservicegetheroes heroes string gt result heroes catch error gt catchederror error thislastconnectionmockerror new response new responseoptions status statustext url found tick expect result tobeundefined expect catchederror tobedefined minimal reproduction problem instructions simply run unit tests angular documentation motivation use case changing behavior documentation provide correct examples might take new developers find issue failing tests environment", "num": "19499", "d": "9/2017"}, {"title": "angular app loads first time", "body": "app bootstrap first time open url tabs stops bootstrapping however dev tools open start normally js error complaint angular thoughts", "num": "19498", "d": "9/2017"}, {"title": "ngnonbindable ngnoform docs", "body": "submitting current behavior searching docs shows results expected behavior work motivation use case changing behavior finding smile", "num": "19497", "d": "9/2017"}, {"title": "resolve prefetching component data", "body": "submitting current behavior hello friends one problem resolver feature worked well version nt work version example route resolver resolver subscribe observable return result seconds delay navigating route navigate route second new resolver nt start executing behavior version version ok version new resolver waits previous resolver working expected behavior version new resolver executed immediately even active resolver minimal reproduction problem instructions two live examples example buttons need open console please press first button second please press second button second please press third button see difference example angular console see resolver phrase resolver phrase resolver phrase example angular console see resolver phrase resolver phrase motivation use case changing behavior want unsubscribe current request server well current active resolver environment os window ide webstorm", "num": "19496", "d": "9/2017"}, {"title": "server fail ca nt watch document", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19495", "d": "9/2017"}, {"title": "ngdeep breaks css components encapsulation", "body": "submitting current behavior use component view encapsulation turned stays since invalid css rules break silent partial failure css parser simply sees unknown selector expected behavior stripped css minimal reproduction problem instructions comment works alternatively comment settings encapsulation also works motivation use case changing behavior superannoying used scss mixins workaround flag scss mixins conditional uses needed developer charge manual orchestration usage components view encapsulation enabled using viewencapsulationnone wrapping whole file much easier preprocessor allows nesting rules though environment", "num": "19494", "d": "9/2017"}, {"title": "undefined error firebase amp angular platformserver", "body": "deploying functions functions ensuring necessary apis enabled runtimeconfig ensuring necessary apis enabled runtimeconfig necessary apis enabled functions necessary apis enabled functions preparing functions directory uploading error error occurred parsing function triggers undefined sure means nt even tell undefined dist amp distserver folders inside file indexjs take code though works trying use angular platform server onto app require zonejsdistzonenode const express require express const path require path const rendermodulefactory require angularplatformserver rendermodulefactory const appservermodulengfactory require distssrmainbundle appservermodulengfactory const index require fs readfilesync pathresolve dirname distindexhtml const app express appget req res gt rendermodulefactory appservermodulengfactory document index url html gt ressend html catch err gt consolelog err exportsssr functions", "num": "19493", "d": "9/2017"}, {"title": "ngc throws could resolve module angularcore windows", "body": "submitting current behavior ngc throws exception works fine project expected behavior error environment tooling issues node version platform windows", "num": "19492", "d": "9/2017"}, {"title": "templatedriven forms formcontrol multiple radio buttons group removed form", "body": "submitting current behavior using templatedriven forms following scenario inside group radio buttons bound single property component via ngmodel formcontrol group radio buttons validator since want form valid user selected one radio buttons variable number radio buttons group radio button value equal index read ngfor template add choice button adds another radio button group x button removes radio button group note possible remove radio button currently selected case set indicate radio button selected delete one radio buttons ui formcontrol removed form despite fact still radio buttons group bound formcontrol form valid required validator attached formcontrol longer part form expected behavior formcontrol removed form still radio buttons group bound formcontrol would expect formcontrol removed form radio buttons group removed ui minimal reproduction problem instructions minimal demo steps reproduce load plunker observe form currently invalid radio button selected click one x buttons delete radio button ui bug form valid despite fact radio button selected motivation use case changing behavior using templatedriven forms want able use angular validators form contains variable number radio buttons minimal repro aware work around issue writing custom validator checks using reactive forms instead still reporting bug templatedriven forms nt agree behavior formcontrol removed form still radio buttons ui bound environment", "num": "19491", "d": "9/2017"}, {"title": "service worker offline mode assetgroups works unstable", "body": "submitting current behavior page loaded assets precached go offline via devtools turn wifi load page page click reload browser message site reached random combinations offline modesbrowser unloadstabs manipulations get cached version click reload disappears expected behavior check lodashcom service worker got control cached assets stable works offline reload page navigate subpages minimal reproduction problem instructions load page go offline click reload browser source cc alxhub motivation use case changing behavior fix bug environment", "num": "19490", "d": "9/2017"}, {"title": "service worker freshness strategy nt work", "body": "submitting current behavior service worker fetches caches response returns failed one client expected behavior fetch return response client cache offline usage minimal reproduction problem instructions click load timeline uses freshness strategy network error click load favorites uses performance strategy works intended source cc alxhub motivation use case changing behavior fix bug environment", "num": "19489", "d": "9/2017"}, {"title": "service worker ca nt display push notification", "body": "submitting current behavior expected behavior show web push notification minimal reproduction problem instructions click subscribe push wait seconds use push application tab devtools likely object passed methods properties methods removed cc alxhub motivation use case changing behavior fix bug environment", "num": "19488", "d": "9/2017"}, {"title": "feat add clone httperrorresponse", "body": "submitting httpresponse httprequest method help building interceptors would helpful httperrorresponse well motivation use case changing behavior building interceptor api uses api errors like interceptor inspect headers contenttype header least parse json error clone httperrorresponse would make trivial bit trickier without", "num": "19486", "d": "9/2017"}, {"title": "", "body": "submitting current behavior compiling racename ngc configured use throws expected behavior compile without errors environment cc tbosch spoke slack", "num": "19485", "d": "9/2017"}, {"title": "hostbinding support asynchronous structures observables promises", "body": "current behavior component following line hostbinding classasyncclass private asyncclass observable new subject element representing component always css class asyncclass set expected behavior would expect css class asyncclass set unless subject emits true minimal reproduction problem instructions motivation use case changing behavior clear changedetection strategy worse state component maintained observables otherwise efficient strategy code manual subscribe unsubscribe relevant observables handupdate otherwise unnecessary variables environment", "num": "19483", "d": "9/2017"}, {"title": "checksum value form input values feature request", "body": "wish angular checksum valuefield default every form basically lot web applications general helped crud methods like example input fields checksum generated based value fields useful backends frontends", "num": "19481", "d": "9/2017"}, {"title": "mysqlservice declared module appmodule please add pipe directive component annotation", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19480", "d": "9/2017"}, {"title": "angular unable locate ngfactory thirdparty module aot compilation", "body": "submitting current behavior compiler unable locate ngfactory file indirectly included thirdparty module compiling application aot compilation produces following error ng build target production aot true buildoptimizer true date hash time chunk styles bytes initial rendered chunk polyfills bytes initial rendered chunk main bytes initial rendered chunk inline kb entry rendered error gendirnodemodules progresskendoangularinputsdistessliderslidercomponentngfactoryts find module kendoangularresizesensordistesresizesensorcomponentngfactory error gendirnodemodules progresskendoangularinputsdistesswitchswitchcomponentngfactoryts find module kendoangularresizesensordistesresizesensorcomponentngfactory expected behavior application compile normally angular jit mode minimal reproduction problem instructions note referencing including ngmodule question error disappears compilation succeeds motivation use case changing behavior looks like regression compiler environment", "num": "19478", "d": "9/2017"}, {"title": "perf move rxjs lettable operators", "body": "submitting current behavior angular currently use expected behavior angular use new lettable operators introduced rxjs reduce bundles sizes better dev experience otherwise people using new way import rxjs operators see bundles sizes increased operators imported twice motivation use case changing behavior think already somewhere pipe even rxjs beta important plan may introduce breaking change requiring rxjs gt otherwise wait angular see already rc may good time decide", "num": "19476", "d": "9/2017"}, {"title": "issue regularexpression", "body": "submitting current behavior compiling code angular regularexpression error occurs chrome works firefox ie error uncaught syntaxerror invalid regular expression range order character class new regexp object webpackrequire bootstrap object webpackrequire bootstrap webpackrequire bootstrap windowwebpackjsonp bootstrap looks like problem somewhere minimal reproduction problem instructions since compiled code works quite well motivation use case changing behavior hope developers dont run problem hopefully find solution environment browser x chrome desktop version tooling issues node version yarn version platform tomcat red hat openshift", "num": "19475", "d": "9/2017"}, {"title": "animations query working querying animations inside ngcontent first descendant node", "body": "submitting current behavior nt work properly particular case best check stackblitz example seems animation query inside component using animation inside component first child node said component query stagger working assume means query catching works fine use div instead component ngcontent child animation first descendant minimal reproduction problem instructions click button environment cc matsko", "num": "19473", "d": "9/2017"}, {"title": "httpparams documentation inaccurate bug", "body": "submitting current behavior makes request query string expected behavior although example think behaviour could nt find examples using current working code appears const params new urlsearchparams paramsset filter courtsystemid courtsystemid paramsset filter parentid params said could nt find example easily confused apparently working quite differently using also less pleasant use nt share builder pattern design ie methods nt return minimal reproduction problem instructions please see motivation use case changing behavior seems like maybe bug maybe documentation issue could also suck searching docs environment", "num": "19470", "d": "9/2017"}, {"title": "reverted pr amp", "body": "tinayuangao could please take look dming details reverted master cc jasonaden details", "num": "19468", "d": "9/2017"}, {"title": "ngoncatch lifecycle hook", "body": "submitting motivation use case changing behavior new react interesting life cycle hook executes component child components throw error act fall back render error message example instead dismounting whole component tree would interesting see something like angular new ngoncatch lifecycle hook graciously recover make easier debug something goes terribly wrong component tree", "num": "19467", "d": "9/2017"}, {"title": "form validators rerun view creation", "body": "submitting current behavior directive associated form control created view validators triggered expected behavior validators triggered view changes reactive forms tied way represented view source truth model minimal reproduction problem instructions open console use toggle visiblity button confirm validators running control directive creation motivation use case changing behavior continue steps press set errors manually insert error manually mocking manually setting error validation returned backend press toggle visiblity make disappear nothing happens console press make control appear notice console logs means validators running observe fact error message gone toggling view mocking usecase mulitpart form design nt see reason creating view write data form model view action reading model trigger validators far understand see validators run instances created model validators triggered value change environment", "num": "19465", "d": "9/2017"}, {"title": "aio add open search description allow browser bar querying", "body": "submitting current behavior want search api open angularioapi page focus click input box write api search expected behavior start writing browser bar hit tab write api search motivation use case changing behavior searching current api documentation something believe common speed lot particularly searching multiple apis", "num": "19462", "d": "9/2017"}, {"title": "router link redirect home component insted go specified route", "body": "submitting current behavior links variable go home component first instead go specified route example router link like routes problem routes nt problem stackoverflow happens expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19460", "d": "9/2017"}, {"title": "pdf epub versions official documentation required", "body": "submitting current behavior pdf epub versions official documentation available expected behavior would good pdf epub versions official documentation download minimal reproduction problem instructions motivation use case changing behavior documentation large easy navigate crucial ability add notes bookmarks much needed environment", "num": "19459", "d": "9/2017"}, {"title": "dynamically binded html objects calling component functions", "body": "code dynamically binded html objects calling respective component function easily achieve compile nt know achieve like help much appreciated import domsanitizer angularplatformbrowser pipe name safehtml export class safehtmlpipe implements pipetransform constructor private sanitized domsanitizer transform value consolelog thissanitizedbypasssecuritytrusthtml value return thissanitizedbypasssecuritytrusthtml value component selector myapp template export class app name string html safehtml constructor thisname thishtml navigatetocasual consolelog clicked submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19458", "d": "9/2017"}, {"title": "aio type parameters generic aliases shown docs", "body": "expected actual", "num": "19456", "d": "9/2017"}, {"title": "aio parameters wth default values show optional", "body": "given following would expect parameters marked optional docs instead second one expected actual", "num": "19452", "d": "9/2017"}, {"title": "aio modifier nt shown", "body": "modifier properties nt retained docs output may give false impression properties mutated example properties iterablechangerecord marked note theoretically properties modified safe assume previously seen value change however cases used place getter reduce size transpiled code afaict cases property supposed updated externally allowed changed internally time cases modifier docs misleading", "num": "19450", "d": "9/2017"}, {"title": "factory providers called appinitializer resolved bootstrap", "body": "submitting current behavior factory providers called appinitializer resolved bootstrap using pattern appinitializer load external configuration config injection works services provided factory expected behavior factory provider functions executed appinitializer resolved minimal reproduction problem instructions export function initconfiguration configservice configservice function return gt configserviceload makes http request returns promise correctly called bootstrap appinitializer resolved export function servicefactory configservice configservice return new someservicedependentonconfig configservice ngmodule imports imports declarations appcomponent bootstrap appcomponent providers configservice provide appinitializer usefactory initconfiguration deps configservice multi true one get config injected correctly json config yet loaded provide someservicedependentonconfig usefactory servicefactory deps configservice one get config injected correctly json config already loaded provide someotherservicedependentonconfig useclass someotherservicedependentonconfig export class appmodule motivation use case changing behavior need use env config passed te app deployment dev uat prod build app therefore using pattern appinitializer loading env config using http request json file need use env config values directly factory function eg configvalue return return b need use env config values services created factory ps point actually seems kind bug current solution angular environment config passed app build really environment aware always thought point environment config change behavior build make separate builds environment environment", "num": "19448", "d": "9/2017"}, {"title": "infinite loop trying build material via ngc watch mode", "body": "eg reason materialngsummaryjson contains symbol symbol members metadata symbol members", "num": "19447", "d": "9/2017"}, {"title": "css recursive component results pattern", "body": "submitting current behavior created recursive component see plnkr following css css host color red host gt host color green css page becomes following css color red gt shadowcsshost color green expected behavior expected color red color green minimal reproduction problem instructions plnkr environment", "num": "19445", "d": "9/2017"}, {"title": "documentation router outlet", "body": "submitting current behavior current tutorial routing august url router outlet given configuration browser url application becomes heroes router matches url route path heroes displays herolistcomponent routeroutlet placed host view html contentcopy expected behavior host view html plunker download files many html files find routeroutlet appcomponenthtml surrounded statement nothing lt routing gt lt gt example files download website see uploaded screen shot nt understand tutorial saying examples nt match possible review explain minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19443", "d": "9/2017"}, {"title": "update angularbenchpress npm package", "body": "submitting current behavior npm package dates one year ago issues typescript compilation running lib check benchpress expected behavior get latest state code npm package typescript problem already fixed minimal reproduction problem instructions motivation use case changing behavior", "num": "19442", "d": "9/2017"}, {"title": "behaviorsubject next method function error rxjs latest version", "body": "submitting current behavior import behaviorsubject rxjsbehaviorsubject import rxjsrx export class dashboardservice count new behaviorsubject count thiscountasobservable addcount data thiscountnext data expected behavior thiscountnext supposed work throwing error function minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19441", "d": "9/2017"}, {"title": "input value coming sibling component output triggers expressionchangedafterithasbeencheckederror error", "body": "submitting current behavior get error pass one component parent using pass another component basically reason angular detects multiple changes input thus give error expected behavior angular nt give error minimal reproduction problem instructions check console plunker motivation use case changing behavior environment", "num": "19439", "d": "9/2017"}, {"title": "httpclientdelete handle body request", "body": "submitting current behavior httpclientdelete accept body parameter expected behavior httpclientdelete needs accept body clear guidance limitation get around possible original httpdelete via requestoptionsargs motivation use case changing behavior work apis always handled body delete requests unexpected change rest api interaction environment", "num": "19438", "d": "9/2017"}, {"title": "add property components", "body": "loading global application configuration setting using code appmodule code global configuration file instead injecting globalconfigurationservice every component want configurationvariable accessiable component component property use html make decision html based configuration submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19437", "d": "9/2017"}, {"title": "ngtools support paths ts mappings templateurl styleurls", "body": "submitting extending component usually need reuse styles components often comes distant location ts mappings used reference eg import libcomponent liblibcomponent component export class appcomponent extends libcomponent would convenient reference styles manner instead using full path current behavior ngtools ca nt resolve styles template paths use ts mappings expected behavior paths resolved successfully minimal reproduction problem instructions check repo motivation use case changing behavior simplify component inheritance environment", "num": "19436", "d": "9/2017"}, {"title": "angular formarray insert working", "body": "trying update specific value formarray using insert initialize form ngoninit like input change call function try insert new value array index get value pushed html code set exerciseindex pass loop nt show wrong value updating thank", "num": "19434", "d": "9/2017"}, {"title": "delete httpclient causing error callback backend returns success response", "body": "submitting current behavior method delete httpclient causing error callback backend returns success response downgrade everything works well example error message example code success response see message error case runs error callback expected behavior start success callback backend returns success response environment browser chrome desktop version tooling issues node version platform windows", "num": "19432", "d": "9/2017"}, {"title": "angular restarts unexpectedly chrome browsers versions", "body": "submitting current behavior recipe application navigations recipes shopping list one component component url issue add item shopping list array shopping list component url changes unexpectedly makes angular restart app otherhand using another browser firefox issue nt exists perform scenario words using browsers keeps url hence app works great explained issue exists chrome versions checked chrome version last years expected behavior using chrome browsers changing url unexpectedly nt happen minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19431", "d": "9/2017"}, {"title": "video play safari", "body": "submitting current behavior add video element template angular app attempt view video get result viewing video file basic html page works perfectly expected behavior video correctly work safari minimal reproduction problem instructions create blank html page references file see work fine create angular app code inside main component motivation use case changing behavior client wishes video play background landing page works fine everything safari environment", "num": "19430", "d": "9/2017"}, {"title": "testing route guards requires boilerplate components", "body": "submitting provide guidance testing route guards since contain significant application logic moment strategy set routes use blank components feels heavyweight least remove need blank components everywhere ideas best guard testing strategy concern roughly applies route resolvers", "num": "19428", "d": "9/2017"}, {"title": "upgrademodule rootscope digest error even though triggering digest manually", "body": "submitting current behavior issue relates stackoverflow issue conversation conversation gitter authorize user google signin use uirouter send landing page causes rootscope digest already process error trigger digest apply explicitly nt route user location location anything use uirouter uirouter triggers digest within digest far tell appears line ngupgrade expected behavior rootscope digest error minimal reproduction problem instructions go create account log open dev tools clear cache hard reload clear cache hard reload sign google sign see digest error console repeat process times eventually see error short snippet code motivation use case changing behavior bug bug environment", "num": "19426", "d": "9/2017"}, {"title": "ngfactoryjs produced bazel nt named modules", "body": "eg see first argument define string literal names module partly fix changing check file ends still see require statements file wrong cc tbosch", "num": "19422", "d": "9/2017"}, {"title": "router activatedroute returns empty module lazy", "body": "submitting current behavior subscription activatedroute parameter outputs empty module lazy expected behavior must output route object minimal reproduction problem instructions approutingts import ngmodule angularcore import routermodule angularrouter import routes angularrouter const routes routes path terms data title terms use loadchildren termstermsmodule termsmodule ngmodule imports routermoduleforroot routes exports routermodule export class approuting appcomponenthtml terms use termsroutingts import ngmodule angularcore import routermodule angularrouter import routes angularrouter import termscomponent termscomponent const routes routes path data title terms use component termscomponent ngmodule imports routermoduleforchild routes exports routermodule export class termsrouting component inside import component angularcore import oninit angularcore import activatedroute angularrouter component selector toppanel templateurl toppanelcomponenthtml styleurls toppanelcomponentscss export class toppanelcomponent see put routings make sure subscription work well work environment similar issues array routing issue resolved child routes therefore reference", "num": "19420", "d": "9/2017"}, {"title": "uncaught error ca nt resolve parameters", "body": "submitting current behavior getting error browser console uncaught error ca nt resolve parameters apiservice note apiservice guess name service expected behavior inject httpclient service developement mode production mode minimal reproduction problem instructions hi guysi done small angularcli project created services get datas one service called fakeservice provide harcoded data service called testservice another service apiservice injected constructor apiservice use httpclient get datas server got described error message using fakeservice developement mode appmodulets import browsermodule angularplatformbrowser import ngmodule angularcore import httpclientmodule angularcommon import environment environmentsenvironment import appcomponent appcomponent import apiservice servicesapiservice import testservice servicestestservice import fakeservice servicesfakeservice ngmodule declarations appcomponent imports browsermodule httpclientmodule providers apiservice provide testservice useclass environmentproduction testservice fakeservice bootstrap appcomponent export class appmodule apiservicets import injectable angularcore import httpclient angularcommon export class apiservice constructor private httpclient get path string array switch path case tests subscribe response array gt return response return name london name montr\u00e9al return fakeservicets import injectable angularcore injectable export class fakeservice constructor list array return name london name lyon name paris name montr\u00e9al import injectable angularcore import apiservice apiservice injectable export class testservice constructor private apiservice apiservice list consolelog listing races return thisapiserviceget tests ng serve prodng serve error message calling following error message serving development mode aka using fakeservice instead testservice remove constructor parameter private httpclient apiservice error issue running developement mode uses fakeservice ca nt use make http requests followed instructions described angular httpclient doc use httpclient nt know true angular issue done something wrong could please help issue thank much help environment", "num": "19417", "d": "9/2017"}, {"title": "please update upgrading angular js section documentation optionally use upgradeadapter", "body": "recently worked trying get existing angular js module use new angular service followed instructions angulario upgrade section trying succeeding tried using upgradeadapter based following book ngbook complete book murray coury lerner taborda found using upgradeadapter much simpler recommended documentation ie use downgradeinjectable using upgradeadapter made also easy bootstrap application sure downgradeinjectable works process seems much complicated needs submitting current behavior simplify upgrade process expected behavior minimal reproduction problem instructions motivation use case changing behavior see environment", "num": "19415", "d": "9/2017"}, {"title": "httpclient issue request may return json", "body": "submitting current behavior httprequests may return either json content response awkward set headers way makes sense use defaults error result body empty string parsed json set contenttype text avoid error manually call parse responses content expected behavior sure one alternative option indicate response body optional return null set another would recognize responses content try parse return type might still issue though motivation use case changing behavior motivating case http patch request rfc suggests returning patch applied also allows status codes accepted include body information check progress request also somewhat related issue another case clear request instead current case response code body", "num": "19413", "d": "9/2017"}, {"title": "test aio fix reenable aotcompiler example tests", "body": "tests run locally built angular packages failing latest ngc changes tests disabled unblock prs x investigate root cause x fix x reenable", "num": "19411", "d": "9/2017"}, {"title": "language service expected operants similar type", "body": "submitting export type sometype string number component template export class appcomponent one two sometype consolelog thisone thistwo current behavior language service shows error comparison expected behavior totally ok compare types related typescript shows errors minimal reproduction problem instructions check repo environment", "num": "19408", "d": "9/2017"}, {"title": "language service component must template templateurl", "body": "submitting simple component empty template current behavior language service shows error expected behavior empty minimal reproduction problem instructions check repo motivation use case changing behavior cases empty template desirable eg building dom ls nt show error template specified empty environment", "num": "19406", "d": "9/2017"}, {"title": "language service component included module available inside template", "body": "submitting simple component mapping points component folder finally component imported using mapping added main module alongside root component import homecomponent homehomecomponent current behavior language service shows error expected behavior error component actually imported minimal reproduction problem instructions check repo environment", "num": "19405", "d": "9/2017"}, {"title": "interceptor schematic", "body": "submitting angular introduced interceptors think would natural implement schematic angular cli generate interceptor", "num": "19404", "d": "9/2017"}, {"title": "aio landing page layout issue", "body": "", "num": "19402", "d": "9/2017"}, {"title": "style guide restrictive", "body": "submitting current behavior style guide specify avoid using attribute selectors happens want keep native tag add additional template behaviour expected behavior recommend general case avoid explaining sometimes make sense minimal reproduction problem instructions ie modify original label component get title attribute show tooltip want hide native browser tooltip hover case using span empty title prevent way keep intact attribute use lt label mylabel myinput title help text lt label lt input name myinput lt input motivation use case changing behavior would like keep code respecting style guide ca nt avoiding rule", "num": "19401", "d": "9/2017"}, {"title": "add markalltouched method abstractcontrol", "body": "submitting current behavior show form error messages need implement recursive function marking form controls expected behavior method like kara suggested would solve problem recursively marking children abstractcontrol touched minimal reproduction problem instructions motivation use case changing behavior user submits form want quick way display invalidation messages common use case forms submissions know upfront problematic form fields need fix environment", "num": "19400", "d": "9/2017"}, {"title": "bug routerlinkactiveoptions nt exactly match route params", "body": "submitting current behavior setting routerlinkactiveoptions exact true matches routerlink value exactly without consideration optional matrix url route parameters expected behavior setting routerlinkactiveoptions exact true match path exactly including route parameters listed minimal reproduction problem instructions take repro use links environment", "num": "19399", "d": "9/2017"}, {"title": "ngoninit called navigating route url", "body": "submitting current behavior hybrid app angularjs angular routers amp components angular router call appropriate ngoninit lifecycle method component navigated directly entering url browser address bar linking plain hyperlink rather routerlink router shows component page component ngoninit lifecycle method nt get called user clicks page switches tabs perhaps change detection triggered somewhere along line expected behavior whenever route navigated regardless whether caused routerlink direct url change backforward navigation etc component created normal creation lifecycle triggers immediately minimal reproduction problem instructions see example project showing problem checkout repo install dependencies run app app starts actors page change url browser address bar notice movies list start loading immediately problem click blue area kicks life note links work correctly use changed plain hyperlinks motivation use case changing behavior particular scenario router change detection nt seem work expected environment", "num": "19398", "d": "9/2017"}, {"title": "duplicated path loadchildren detected", "body": "submitting current behavior two modules mobile desktop lazy loaded modules login module also lazy loaded getting error duplicated path loadchildren detected expected behavior possible name module minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19397", "d": "9/2017"}, {"title": "ngbind working nt", "body": "code nt display value ngbind works even doest occur every time ideas help", "num": "19395", "d": "9/2017"}, {"title": "adding event router navigation causes error uncaught typeerror guestviewcontainer thisviewtype browserplugin constructor", "body": "submitting current behavior adding app first runs component second one button click first one displayed without issue second one throws error uncaught typeerror guestviewcontainer thisviewtype browserplugin constructor application hosted chrome app webviews added contained component components added via issue also manifests adding component containing webview via router activating route unclear bug angular chrome able reproduce issue chrome expected behavior expect webview displayed properly without error whenever added app first runs displayed later response event route activated minimal reproduction problem instructions steps reproduce load webview angular component either event eg button click via activating angular route get error uncaught typeerror guestviewcontainer thisviewtype browserplugin constructor callstack shown others section minimal demo run packaged chrome app reproduction issue unzip zip file navigate chrome browser chrome extensions check developer mode button checkbox click load unpacked extension button browse folder unzipped find chrome app added extensions window click launch button extensions window app click indexhtml application click button says click add webview check javascript console see error message error callstack listed others section build bug reproduction source pull git repo requires angular cli npm install run following ng build aot npm run chromeapp copies manifestjson backgroundjs dist folder packaged chrome app inside dist folder use folder load unpackaged extension button chrome extensions motivation use case changing behavior want able use would html components inside angular chrome apps chrome apps iframes available need similar functionality webview answer powerful component chrome apps several capabilities require environment", "num": "19389", "d": "9/2017"}, {"title": "formgroup many links incorrectly going abstractcontrol methods", "body": "submitting current behavior formgroup overview links methods incorrectly point abstractcontrol methods name appears copypasta error links many method signatures links also right formgroup methods instance expected behavior links go methods page specific signatures formgroup necessary links abstractcontrol presented way makes clear user taken different class page minimal reproduction problem instructions formgroup overview click many methods overview section eg setvalue result link goes abstractcontrol documentation method name instead formgroup specific documentation page also note signatures shown incorrect formgroup abstractcontrol signatures shown motivation use case changing behavior antichaos sentiment environment", "num": "19387", "d": "9/2017"}, {"title": "complexodd nested ngfor issue ca nt think brief title", "body": "submitting current behavior two lists one possible teams displays possible permissions teams outer loop lists teams inner loop runs time lists permissions inner loop team id correct except change directive change directive always id first team team array weird thing ca nt replicate issue plunker got plunker close code ca nt make happen still happening server makes much sense absolutely none id team would correct interpolation wrong used directive expected behavior would expect team id correct minimal reproduction problem instructions link inexplicably working plunker motivation use case changing behavior bug think environment", "num": "19386", "d": "9/2017"}, {"title": "template parser error svg", "body": "hello developing application uses svg real time implementing webworker layer app followed tutorials work fine simple project ngcharts fails recognize ngif ngfor bindings uncaught error template parse errors ca nt bind ngif since nt known property svg g ng property binding ngif used directive embedded template make sure property name spelled correctly directives listed ngmoduledeclarations ng ca nt bind ngforof since nt known property svg g project without webworkers configurations works fine question configure webworkers recognize bindings thanks", "num": "19385", "d": "9/2017"}, {"title": "blob loaded load", "body": "never called blob loaded load takes secs load one help issue thanks praveen", "num": "19383", "d": "9/2017"}, {"title": "http post getting data null", "body": "trying send http post data struts action class struts action action class variables getter setter receiving description type example null great help get answer thanks advance", "num": "19382", "d": "9/2017"}, {"title": "fix testing docs remove incorrect paragraph", "body": "submitting current behavior currently testing docs section always get service injector representing current behavior code example paragraph test component dependency clearly see use problem use fact get object reference stub plunker proves like way get spystub let change implementation let fix docs expected behavior suggest remove paragraph docs nt correct minimal reproduction problem instructions motivation use case changing behavior keeping docs correct environment", "num": "19380", "d": "9/2017"}, {"title": "httpclient interceptor custom arguments", "body": "submitting current behavior moment far know way send arbitrary arguments interceptors based could alter behaviour currently sending arbitrary params httpparams options strip inside interceptor would nice clean way achieving expected behavior perhaps one optional param httpclient getpost would contain object custom arguments passed interceptor motivation use case changing behavior specific use case sending loadingname used covalent tdloading interceptor creates loading spinner api request removes finally would nice able achieve loading spinner control using interceptor environment", "num": "19379", "d": "9/2017"}, {"title": "parse httperrorresponse body json received server", "body": "submitting current behavior case error string property httperrorresponse expected behavior would like error parsed like implemented body successful response minimal reproduction problem instructions post call using http client extra point specific file angular codebase create new httperrorresponse", "num": "19377", "d": "9/2017"}, {"title": "feature able use remotely hosted module", "body": "submitting current behavior moment seems impossible use remote modulecomponent remote mean angular module compiled deployed webserver umd module instance expected behavior fully modularized angular app need able use remote component known compile time would allow us build plugins system apps deploy small parts bigger app would microservice architecture minimal reproduction problem instructions create simple component try get use remote context motivation use case changing behavior needed build true plugins system one step forward module approach environment", "num": "19376", "d": "9/2017"}, {"title": "pipe invalidpipeargument errors always reference currencypipe regardless pipe used", "body": "submitting current behavior pipe invalidpipeargument errors always reference currencypipe regardless pipe used example using decimal pipe provide invalid digit info get error like valid digit info pipe currencypipe expected behavior invalidpipeargument errors reference pipe used minimal reproduction problem instructions steps reproduce create view add decimal pipe percentage pipe give pipe invalid digits input eg number observe console error references currecy pipe even though used observe console plnkr motivation use case changing behavior fixed error logging environment", "num": "19373", "d": "9/2017"}, {"title": "aot compilation windows searches file wrong directory", "body": "submitting current behavior expected behavior aot compilation successful minimal reproduction problem instructions motivation use case changing behavior environment solution problem templateurl connectorspagecomponentts began bad apologies", "num": "19370", "d": "9/2017"}, {"title": "form validation submit button enabled input tag required pattern fields", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior form submit button validation works properly input tag required property checking heroformformvalid disabled property expected behavior work expected required pattern fields input element form still invalid submit button enabled move focus without value input field empty spaces minimal reproduction problem instructions please run plunkers ans check hero form name empty first example spaces second example motivation use case changing behavior unexpected behavior form validation behaves differently environment browsers angular version live example browser browsers tooling issues node version ran using plunker please find urls platform windows", "num": "19368", "d": "9/2017"}, {"title": "fakeasync test fails using promise domlistener", "body": "submitting current behavior unit test fails following conditions true test runs fakeasync test method calls domlistener component nativeelementdispatchevent component calls promisethen resolved promise tests executed ng test ie source mapping error message error failed execute send xmlhttprequest failed load ng dynamictestmodulepromisetestcomponenthostngfactoryjs xmlhttprequestsend eval createnamedfn c array array b arraymap functionf functionnativeerrorpreparestacktrace c zoneawareerror c getstacktracewithuncaughterror c new longstacktrace c objectonscheduletask c zonedelegatewebpackjsonp zonejsdistzonejszonedelegatescheduletask c objectonscheduletask c zonedelegatewebpackjsonp zonejsdistzonejszonedelegatescheduletask c zonewebpackjsonp zonejsdistzonejszonescheduletask c zonewebpackjsonp zonejsdistzonejszonescheduleeventtask c zoneawareaddlistener c htmldivelementaddeventlistener eval createnamedfn c domeventspluginwebpackjsonp platformbrowser c angularplatformbrowser eventmanagerwebpackjsonp platformbrowser c angularplatformbrowser platformbrowser c angularplatformbrowser expected behavior unit test fail error actually nt fail executed without source mapping ng test smfalse minimal reproduction problem instructions component test source files reproduce run ng test see test failing component import component hostlistener angularcore component selector template export class promisetestcomponent hostlistener pointerdown pointerdown pointerid number const promise promiseresolve true promisethen gt consolelog inside promisethen test source import async componentfixture fakeasync testbed angularcoretesting import promisetestcomponent promisetestcomponent import angularplatformbrowser describe promisetestcomponent gt let component promisetestcomponent let fixture componentfixture beforeeach async gt testbedconfiguretestingmodule declarations promisetestcomponent compilecomponents beforeeach gt fixture testbedcreatecomponent promisetestcomponent component fixturecomponentinstance fixturedetectchanges fit call pointer listener fakeasync gt const element fixturedebugelementquery bycss promisetest elementnativeelementdispatchevent new event pointerdown bubbles true motivation use case changing behavior environment", "num": "19367", "d": "9/2017"}, {"title": "internet explorer datepipe recurring", "body": "submitting current behavior see prod code generated using expected behavior error minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19365", "d": "9/2017"}, {"title": "ngif number values", "body": "submitting current behavior like work streams much possible avoid subscribing hand observables thing stream use value get div obviously bug coerced boolean leads false think annoying case harder work streams numbers example html currently nobody available one person peoplelength persons also option would either definitely number expected minimal reproduction problem instructions stackblitz repro motivation use case changing behavior able work streams number easily without wrap object angular version", "num": "19364", "d": "9/2017"}, {"title": "aio broken snippets chrome", "body": "code snippets across whole aio seem broken chrome version ubuntu sure something chrome works firefox example page renders following screenshot chrome inspecting indeed line breaks syntax highlighting information dom present though errors console fails silently firefox works properly interestingly class gone firefox contents replaced ordered list proper syntax highlighting info", "num": "19359", "d": "9/2017"}, {"title": "decorators nt listed api documentation", "body": "submitting current behavior decorators namely viewchild viewchildren contentchild contentchildren listed types api documentation expected behavior documentation decorators available like angular documentation motivation use case changing behavior new api docs introduce regression nt provide consistent documentation angular decorators", "num": "19358", "d": "9/2017"}, {"title": "calling elsetattribute results error", "body": "submitting current behavior thread started stackoverflow describes required information expected behavior thread started stackoverflow describes required information minimal reproduction problem instructions thread started stackoverflow describes required information environment", "num": "19355", "d": "9/2017"}, {"title": "routes configured w resetconfig broken advancedoptimizations", "body": "submitting current behavior configuring router via closurecompiler mangles loadchildren property differently configuring routes properties routes model mangled fine use cases seem like issue implementation way aot compilation annotates aot compiled code closurecompiler expectation mangled advancedoptimizations mangled examples expected behavior loadchildren mangled advancedoptimizations mangled examples minimal reproduction problem instructions issue reproducible repository instructions installing readme error visible console navigating works example closurecompiler mangles properties except children mangled doesnt example closurecompiler mangles properties except children loadchildren mangled mangled either motivation use case changing behavior issue blocks ability dynamically configure routes lazyload routes compiling closurecompiler advancedoptimizations mode environment", "num": "19354", "d": "9/2017"}, {"title": "render bug", "body": "open console press button click one button rendered render started twice bug", "num": "19353", "d": "9/2017"}, {"title": "add routes app running", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19351", "d": "9/2017"}, {"title": "httpclientmodule broken compatibility ie", "body": "submitting x bug report current behavior older browsers ie invoking put delete methods httpclient browser throws syntaxerror expected behavior expected work older httpmodule minimal reproduction problem instructions ca nt reproduced tested edge emulators browsers ie browser x ie version", "num": "19350", "d": "9/2017"}, {"title": "cors support csrf", "body": "nt configurable need use csrf cors seems like oversight possible done short writing also asked question stackoverflow thanks", "num": "19349", "d": "9/2017"}, {"title": "regression compilercli different code output ngc tsc", "body": "submitting minimal repo instructions caused regression use see partially fault since nt testing nested submodules tsconfig run output nodemodules metadata along full directory path rather sub module input output ngc tsc", "num": "19339", "d": "9/2017"}, {"title": "allow generate code files outside eg nodemodules", "body": "current nt generate code libraries outside implement properly eg also work watch mode algorithm mapping path rootdir take common prefix path rootdir count produce path important generated path mapped back original file without extra caches ts might ask generated files directly passing oldprogram without looking base file first", "num": "19337", "d": "9/2017"}, {"title": "aot compiler allow generated route paths", "body": "submitting current behavior attempting generate const route essentially builds static string results error aot compiler similar error occurs exported referenced instead inline function call expected behavior looking normal file ngfactory file imports file containing router configuration point value generated route path would available instead using though seems like aot compiler statically copying resolved value file motivation use case changing behavior project concept firstclass url objects encode parameters path information would great route configuration could generated url objects besides though nt quite understand rationale aot compiler current behavior far concerns property seems like would nice remove limitation nt good reason although suspect may environment", "num": "19336", "d": "9/2017"}, {"title": "please support angularinmemorywebapi compatible http", "body": "angularinmemorywebapi return response must like xxxdata http xxx data could compatible test easier hope thanks", "num": "19335", "d": "9/2017"}, {"title": "web worker gt behaviorsubject gt subscribe updated component view", "body": "submitting current behavior service star web worker listen message typescript injectable export class marketdataservice private worker worker public tiketschange behaviorsubject component typescript export class toolbarcomponent implements oninit public last number private sub subscription html last comonent init console gt view gt worker start loading console gt view gt worker send message console gt view gt view update workaround component use ok minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19334", "d": "9/2017"}, {"title": "ngfor possibility assign key value like feature", "body": "submitting current behavior right getting key value map need create pipe instead one builtin expected behavior feature minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19333", "d": "9/2017"}, {"title": "test upgrade package angularjs", "body": "submitting current behavior tried updating angular dependencies angular angularanimate angularmocks tests upgrade packages failing errors expected behavior test upgrade angularjs branches minimal reproduction problem instructions update angular angularanimate angularmocks packagejson install versions run motivation use case changing behavior avoid error new versions angularjs upgrade package", "num": "19332", "d": "9/2017"}, {"title": "observable works component template called many times", "body": "submitting current behavior given method authentication service used component component selector mydrawermenu encapsulation viewencapsulationemulated templateurl templatesdrawermenutemplatehtml styleurls stylesdrawermenuscss export class drawermenucomponent public authenticationservice authenticationservice public displayname string works expected see exactly one log entry browser console used inside template component see one hundred log entries browser console expected behavior method called environment", "num": "19330", "d": "9/2017"}, {"title": "forms add types onchangecallback ontouchedcallback", "body": "submitting current behavior expected behavior ts export type onchangecallback gt void export type ontouchedcallback gt void export interface controlvalueaccessor writevalue obj void registeronchange fn onchangecallback void registerontouched fn ontouchedcallback void minimal reproduction problem instructions see motivation use case changing behavior syntax sugar provide type assistance implementing custom explicit declaration type data structure example full usage example styleurls changedetection changedetectionstrategyonpush providers provide ngvalueaccessor useexisting forwardref gt passwordcomponent multi true class passwordcomponent implements controlvalueaccessor value string onchanged onchangecallback ontouched ontouchedcallback writevalue obj string void thisvalue obj registeronchange fn onchangecallback void thisonchanged fn registerontouched fn ontouchedcallback void thisontouched fn eventbindingtoinputfield value string thisvalue value thisonchanged value environment", "num": "19329", "d": "9/2017"}, {"title": "using compilerclimain directly module import renames import compiled file", "body": "submitting current behavior trying create using following generator module consumer project utilizes routing generator gulp script compiling angular following manner js var gulp require gulp var ngc require angularcompilerclisrcmain main run angular compiler ngc tmp folder output compiled modules build folder gulptask ngc function return ngc project exitcode gt exitcode error caught compile task runsequence method callback ngc fails compile whole compile process stops running throw new error ngc compilation failed tmpsrcts files nothing gets changed task output file gets original import renamed crashes consumer project js originally indexts file import uiroutermodule uirouterangular compiled indexjs file import uiroutermodule uirouterangularindex resolve module uirouterangularindexindex part result file manually everything works perfectly expected expected behavior import path modified minimal reproduction problem instructions generate project using yeoman generator minimizing effort reproduction environment initialization add module file run following commands basically build steps order appearance check already path changed motivation use case changing behavior ability extract modules even whole website pages external npm packages environment", "num": "19327", "d": "9/2017"}, {"title": "angular router loading angularjs component", "body": "submitting current behavior moment server based routing loading app planning make spa adding client side routing plan migrate ng soon initial step planning add angular router load existing template ideal way step forward add uirouter first migrate components ng last add angular router expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19326", "d": "9/2017"}, {"title": "exception languageservice getexternalfiles", "body": "submitting current behavior expected behavior crash minimal reproduction problem instructions occurs loading languageservice plugin project visual studio chuckjaz town weekend put together way run scenario commandline something next week", "num": "19325", "d": "9/2017"}, {"title": "systemjs xhr error found loading", "body": "getting found error angularpersistence current behavior attempting complete angulario tutorial made completing simulating web api app fails front end backend console report angularpersistence tried angular persistence method using source able angularpersistence basic angular program working fine try http router concept getting error basic program nt systemconfigjs automatically configure angularpersistence go http concept systemconfigjs manually entered angularpersistence working manually entered angularpersistence angularpersistence please one help give correct systemconfig angularpersistence systemconfigjs system configuration angular samples adjust necessary application needs function global systemconfig paths paths serve alias npm nodemodules map tells system loader look things map app within app folder app app angularpersistence angularpersistence angularinmemorywebapi npm angularinmemorywebapibundlesinmemorywebapiumdjs packages tells system loader load filename andor extension packages app main mainjs defaultextension js meta js loader systemjsangularloaderjs rxjs defaultextension js expected behavior appcomponentts return true successful thispersistenceserviceset myname scott returns scott thisnamethispersistenceserviceget myname appcomponenthtml name output scott angular version see latest browser", "num": "19323", "d": "9/2017"}, {"title": "dynamic component loader example nt work", "body": "submitting current behavior plunkr hangs loading expected behavior runs minimal reproduction problem instructions go click live example link bottom page motivation use case changing behavior angular pretty sweet extremely difficult find date examples use cases documentation lot features would nice work environment", "num": "19322", "d": "9/2017"}, {"title": "httpclientget return instead", "body": "submitting current behavior typescript definition httpclientget returns expected behavior httpclientget return minimal reproduction problem instructions typescript definition allowed array may come backend example text also go jsonformat error ts type observable lt object assignable type observable even try also throw error environment angular version", "num": "19321", "d": "9/2017"}, {"title": "input elements missing name attribute inside output ngfor", "body": "submitting current behavior using ngfor render form controls template driven form name html attribute output browser renders expected behavior input elements name attribute minimal reproduction problem instructions inspect rendered input elements preview input outside ngfor loop name attribute none others motivation use case changing behavior want able reference elements name via jquery glean custom information stored custom attributes validation environment", "num": "19320", "d": "9/2017"}, {"title": "viewencapsulation", "body": "add ability disable viewencapsulation application level addition please use one prefix components strongest side bank css shadowdom makes web turd", "num": "19319", "d": "9/2017"}, {"title": "rebrand angular", "body": "submitting x feature request general point grappling framework major production application come across postsso questionsblogs reference new angular sorts different ways read half post without realizing fact referencing date stamps nt necessarily hold meaninghelp much either since many still developing internal coworker presenting new angular quite using phrase angular replaced nearly twiceover amp trend likely continue major version releases give identifiable name something distinct architecture likely change regular basis eg angularts fun suggestions angularx angular angularmints would make searchability branding amp likely adoption quite bit easier developer masses microsoft pulled similar move net core originally called aspnet helped meothers enormously apologies already suggested amp missed run many times figured get case nt already", "num": "19318", "d": "9/2017"}, {"title": "templateref inside ngif accessed outside", "body": "submitting current behavior templateref inside ngif accessed outside html show hide log log asdfasdf expected behavior templateref accessible outside ngif structural directive also work minimal reproduction problem instructions click show log button check javascript console environment", "num": "19316", "d": "9/2017"}, {"title": "provider depends another resolved aot mode works jit mode", "body": "submitting current behavior component service dependency loaded correctly jit mode works screen shows state component created jit mode run generate aot files run app app fails state component trying create see corresponds third array value expected behavior expected behavior injected minimal reproduction problem instructions create angular app ngbootstrap use systemjs import modules use two level routes app routes productlist routes inject motivation use case changing behavior problem seem originating systemjs ngbootstrap app works jit mode problem may finding type created since ca nt find returns environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows typescript systemjs ide visual studio angular compilercli others nt use angular cli webpack use systemjs successfully angular amp ngbootstrap app successfully runs jit mode nonbundle bundle structure currently using nonbundle version tried bundled version work nonbundle version", "num": "19313", "d": "9/2017"}, {"title": "error message directive declaration fails make clearer reason failure property matches selector", "body": "regression behavior used work stopped working new release bug report feature request x documentation issue request see example angular developer worked angularjs familiar components services nt done much directives got tied problem quite long time getting even though imports exports declarations etc seemed order end error turned fact needs input property exactly name selector nt really obvious error given would nice least amend error message developer directed pun intended towards condition reason error repo penultimate commit working system introduced error demonstration", "num": "19312", "d": "9/2017"}, {"title": "swipe swipe gesture working angular please help urgently", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19311", "d": "9/2017"}, {"title": "ts promise return empty object", "body": "submitting current behavior current promise return object class race get race class show empty expected behavior promise return empty object minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19309", "d": "9/2017"}, {"title": "feature ability host listen multiple events one decorator", "body": "submitting hostlistener currently accept type lot hostlisteners share exact functionality hotkey bindings different platforms wondering would possible accept array strings well currently looks like would awesome could use way perhaps design possible looking solution motivation use case changing behavior", "num": "19308", "d": "9/2017"}, {"title": "uncaught typeerror read property node undefined contenteditable", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior minimal reproduction problem instructions step create simple angular application step use divany block text step using contenteditable block causes error environment angular version angularcli browser x chrome desktop version latest chrome android version chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows additional information happens chrome especially normal mode working fine incognito mode", "num": "19307", "d": "9/2017"}, {"title": "documentation nt show inherited public private methods attributes", "body": "submitting x documentation issue request current behavior classes extend classes way see public protected methods attributes expected behavior please include mechanism showhide inherited public protected methods attributes class particularly important deep inheritance trees motivation use case changing behavior languages support inheritance documentation include mechanism showhide inherited public protected methods attributes environment angular version browser x chrome desktop version", "num": "19306", "d": "9/2017"}, {"title": "whitespace html", "body": "text node get removed imo bug root cause cause please also check leaves alone edit also issue", "num": "19304", "d": "9/2017"}, {"title": "improve error messages", "body": "submitting current behavior missing injectable say matching provide error thrown mention module dependency path current error static injector looks like expected behavior would nice see name module error occurs name component injectable injected intermediate injectables like needs b b needs c c needs foo", "num": "19302", "d": "9/2017"}, {"title": "new formcontrol deep copy passed object", "body": "submitting current behavior sure real bug creating form control based object uses object reference copy object leading original object changed expected behavior would expect angular deep copy objects passed avoid object mutation minimal reproduction problem instructions create object least one property create form control object value declare reference value form control modify reference set value form control reference plunker motivation use case changing behavior sure real issue use case running though multiple inputs modifying form value one xfizz one xbuzz etc able detect changes made comparing form values original object", "num": "19300", "d": "9/2017"}, {"title": "performance many digest calls upgrade hybrid app", "body": "submitting current behavior digest call triggered every time angular zone settles app working array largish objects ngrepeat causes significant degradation page performance even scrolling affected since triggers zone updates consequently digest agree one places look fixing data point smooth sailing angular jittery hell angular introduced via upgrade data google angular js plugins angular upgrade module without angular upgrade module screengrabs done scrolling page custom components behaviour like virtual scroll infinite loading dependent directly affects scrolling understand happening sure understand whether found adding debounce function code triggers digest zone settlement yielded good improvement digestssecond performance drop nt noticeable expected behaviour propose allow specification debounce time arguments method used make sure digest triggered frame pr sounds okay minimal reproduction problem instructions really dependent app success trying recreate lacking complexitydataset needed happen environment", "num": "19299", "d": "9/2017"}, {"title": "needed indexhtml disappears location url upon page refresh direct navigation", "body": "submitting current behavior nt readymade reproduction sorry new working team folks version control repository gitsubversion viewer type application rather like github code browser repository path viewed carried angular app route url example repository path subversionversioned project website index file might angular app route displaying contents file might note firstly works expected versioned items paths actually end literal string angular eats bit location url app shows parent directory instead parent directory display app shows directory listing subdirectory file linked expected navigate repository file display successfully refresh page see location url change removed app shows parent directory listing suspect may something logic location constructor lack skillz prove expected behavior expect part location url would left place available router components need environment", "num": "19296", "d": "9/2017"}, {"title": "request feat router make router bind resolved data component input", "body": "submitting current behavior currently rely subscribing keeping track changedetection manually activated routes produces bloated code prevent single component used routerinstanciated selectorinstanciated component introduces discrepancies deal component inputs makes much harder dx expected behavior would great activatedroute determined router could try bind resolves results components example route could put component access directly component without deal activatedroute plus link reuse route would simply update value trigger change detection directly suggest basically advanced version ready try work tentative pr loss start guessing would add something make adding bindings easier someone could point right direction outline would need done would help lot motivation use case changing behavior basically much bettter dx reusable components unified way using dynamicstatic components could reused provide much flexible extensions example could use similar approach load mddialog", "num": "19293", "d": "9/2017"}, {"title": "running jasmine tests typeerror read property nativeelement null", "body": "submitting current behavior ngif element get element via fixturedebugelementquery bycss welcome even setting value welcome beforeeach method still resolve true ngif welcome expected behavior ngif resolve true element found null minimal reproduction problem instructions modified angular testing sample please see welcomecomponent failure make fail added ngif welcomecomponentts without ngif fail component selector appwelcome template welcome welcomecomponentspects set value welcome ngif welcome shoudl resolve true userservice fixturedebugelementinjectorget userservice componentuserservice userservice userservice root injector userservice testbedget userservice motivation use case changing behavior environment", "num": "19292", "d": "9/2017"}, {"title": "relative navigation siblings broken emptycomponentless routes", "body": "submitting current behavior relative navigation fails crossing emptycomponentlesslazyloaded route minimal reproduction problem instructions created minimalistic plunkr covers issue related lazy loaded also componentless empty routes behavior also depends existence deeper child routes toggles whether routerlinks work fail tested angular version used plunkr time writing plunkr lt follow instructions plunkr watch console plunkr covers another issue using multiple commands navigation eg result urls containing double dots like expected behavior works consistent expected way empty routes treated nonexistent navigating commandspaths existence activated child routes change behavior motivation use case changing behavior current implementation confusing impossible use correctly without analyzing activated routes children mere existence change behavior see plunkr makes correct static configuration links impossible environment might related", "num": "19290", "d": "9/2017"}, {"title": "request throws error unit tested properly", "body": "submitting current behavior body response string eg url error jsonparse fails previously using throw error returned unit tests behaves differently throw error impossible test behavior using expected behavior behave way throw error case b throw error behavior minimal reproduction problem instructions body response string like throws error real xhr however throw using motivation use case changing behavior improve reliability unit tests fix potential issue environment angular version browser", "num": "19289", "d": "9/2017"}, {"title": "find platformbrowserdynamicindexjs", "body": "error error fetch error found instantiating loading loading app zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue packagejson name angular version scripts start npm run lite lite liteserver tsc tsc tsc w tsc w typings typings license isc dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularrouterdeprecated angularupgrade bootstrap indexjs reflectmetadata rxjs systemjs typing zonejs devdependencies angularcli angularcompilercli concurrently liteserver typescript typings systemjsconfigjs function global map tells system loader look things var map app app dist rxjs nodemodulesrxjs angular nodemodules angular packages tells system loader load filename andor extension var packages app main mainjs defaultextension js rxjs defaultextension js defaultextension js var packagenames angularcommon angularcompiler angularcore angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angulartesting angularupgrade add package entries angular packages form angularcommon main indexjs defaultextension js packagenamesforeach function pkgname packages pkgname main indexjs defaultextension js var config map map packages packages filtersystemconfig indexhtml chance modify config register globalfiltersystemconfig globalfiltersystemconfig config systemconfig config", "num": "19288", "d": "9/2017"}, {"title": "angularcompilercli requires typescript lt", "body": "submitting current behavior get warning angularcompilercli requires typescript lt found instead using version result undefined behaviour difficult debug problems expected behavior compiler cli use newer version typescript version nt show warning backstep minimal reproduction problem instructions run motivation use case changing behavior tools use current stable versions tools making one steps back environment", "num": "19287", "d": "9/2017"}, {"title": "please support httpparams set update instance", "body": "", "num": "19285", "d": "9/2017"}, {"title": "angularrouter conflict universal analytics reports", "body": "submitting current behavior hello working project using angular universal using angular implemented universal analytics using tm looking reports notice lot users flow two session start investigate discovered occur user arrive utm params browse website thought maybe could reason happening found nothing angularrouter someone idea thanks ivan environment", "num": "19284", "d": "9/2017"}, {"title": "ran cnpm install reported mistake solve problem", "body": "error", "num": "19283", "d": "9/2017"}, {"title": "bug platformserver platformlocation missing deps static injector compatible", "body": "submitting current behavior throws universalstarterclinodemodules throw staticerror deps required provider error staticinjectorerror provide platformlocation useclass serverplatformlocation deps required expected behavior projects use work minimal reproduction problem instructions packagejson replace environment tooling issues node version platform mac", "num": "19281", "d": "9/2017"}, {"title": "documentation straddles httpmodule httpclientmodule", "body": "submitting current behavior tutorial uses httpmodule fundamentals information uses httpclientmodule according least use httpclient class httpclientmodule using angular httpmodule deprecated expected behavior would good tutorial use newer functionality particularly since older functionality deprecated implemented warning tutorial page httpmodule soon deprecated warning fundamentals page httpclientmodule works angular ideally description check version minimal reproduction problem instructions uses httpmodule uses httpclientmodule motivation use case changing behavior many differences httpmodule httpclientmodule ways json objects handled would good examples using program object complexity tutorial many interactions complex functionality rxjs writing one first code without tutorial straightforward environment", "num": "19280", "d": "9/2017"}, {"title": "innerhtml causes server duplicate content", "body": "submitting current behavior binding causes server render html content property element body html produces html content expected behavior property rendered html needed far tell added code project remove angular renders page everything seems work fine html payload much smaller minimal reproduction problem instructions see motivation use case changing behavior rendered html payload bloated duplicate content environment", "num": "19278", "d": "9/2017"}, {"title": "angular router destroy component error thrown", "body": "submitting current behavior component throws error user navigates component error component prevent component destroyed router expected behavior components destroyed angular router whether throw error minimal reproduction problem instructions link reproduce notice error developer console component click login button using username password scroll page see component still visible beneath component click logout button scroll notice another duplicate copy component component still visible repeated infinite resulting duplicate components never destroyed environment", "num": "19273", "d": "9/2017"}, {"title": "change testbedcreatecomponent testbedcreatecomponentfixture", "body": "submitting current behavior expected behavior motivation use case changing behavior accurate less confusing creating component expect get component instance instead get fixture changing name big change makes testbed accurate environment", "num": "19271", "d": "9/2017"}, {"title": "aot compiler touches depending libraries ngfactoryjs files created", "body": "submitting current behavior many issues compile angular app work third party libraries like described problem related issues compiler wo nt generate files directory generate files compiling files using task compiler touches third party libraries generates files expected behavior running command generate files assume create files app third party libraries file app load umd modules like folder run time wrong creating files files lead believe bundled files different libraries ca nt used aot compiled files minimal reproduction problem instructions use visual studio systemjs umd module loader gulp run tasks generate aot compiled files run following command project root folder file motivation use case changing behavior issues may due compatible environment", "num": "19269", "d": "9/2017"}, {"title": "issue integrating custom web component angular", "body": "custom component indexhtml importing html color red custom component class comptest extends htmlelement constructor super thisattachshadow mode open connectedcallback const tmpl documentcurrentscriptownerdocumentgetelementbyid comptest thisshadowrootappendchild tmplcontentclonenode true customelementsdefine comptest comptest works fine documentcurrentscriptownerdocument current custom template add custom element angular using angularcli configuration changes appmodulets current custom template null", "num": "19268", "d": "9/2017"}, {"title": "uncaught promise error provider e prod flag reactiveformsmodule", "body": "submitting current behavior using reactive form attribute formgroup angular serving building prod flag angularcli result blocking js error uncaught promise error provider e expected behavior form work without error minimal reproduction problem instructions create new app wit latest angularcli app module import formsmodule reactiveformsmodule app component html add basic form add corresponding form component serve app ng serve prod browse app error appears console logs motivation use case changing behavior using forms environment prod flag ng serve prod ng build prod", "num": "19267", "d": "9/2017"}, {"title": "httpclient post http failure parsing error valid json", "body": "submitting current behavior duplicate httpclient fails parse text response expected fixed changelog issue still use post request expected behavior error thrown response ok minimal reproduction problem instructions send post request json contenttype response contenttype textplain ok body error syntaxerror unexpected token json position objectparse motivation use case changing behavior environment", "num": "19266", "d": "9/2017"}, {"title": "angular allow lazy load aot different pipelines", "body": "submitting current behavior using webpack lazy load plugin aot realized different pipelines different deployments different javascript files idea work separated teams developing different sections site order want different pipelines different javascript files loading lazy load jit trying aot nt know nt want loose performance improvement expected behavior want different javascript files different pipelines different deployments production keeping aot modules minimal reproduction problem instructions motivation use case changing behavior developers working application time want separated deployments order nt deploy whole app time change coming environment", "num": "19264", "d": "9/2017"}, {"title": "many errors ng test karma jasmine setup using angularcli", "body": "getting errors error angularcoresrcchangedetectiondiffersdefaultkeyvaluedifferdts find name ap error angularcoresrcdireflectiveproviderdts find name map error promise refers type used value error angularcoresrcchangedetectiondiffersiterablediffersdts find name iterable error angularcoresrcchangedetectiondifferskeyvaluediffersdts find name map error angularcoresrcchangedetectiondiffersdefaultiterabledifferdts find name terable error angularcoresrcchangedetectiondiffersdefaultkeyvaluedifferdts find name ap error angularcoresrcdireflectiveproviderdts find name map error angularcommonsrcdirectivesngclassdts find name set error angularroutersrcrouteroutletcontextdts find name map error angularroutersrcrouteroutletcontextdts find name map error promise refers type used value h ere error angular find name map error angular find name map even changes auto created target tsconfigjson compileonsave false compileroptions outdir distouttsc sourcemap true declaration false moduleresolution node emitdecoratormetadata true experimentaldecorators true skiplibcheck true target typeroots nodemodules types lib dom packagejson name ccwclientapp version license copyright scripts ng ng startng ng serve start node srcserverindexjs build ng build test ng test lint ng lint ng sme nodemodulesbinsourcemapexplorer private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularflexlayout angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter ngrxstore ngxtranslatecore ngxtranslate corejs devextreme devextremeangular hammerjs rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice ngrxstoredevtools typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter karmajunitreporter karmaphantomjslauncher phantomjsprebuilt protractor sourcemapexplorer tsnode tslint typescript please help", "num": "19263", "d": "9/2017"}, {"title": "animations boolean triggers working angular", "body": "hi guys animations workings followed tutorials working import browseranimationsmodule angularplatformbrowseranimations import trigger state style transition animate keyframes angularanimations component selector apphome templateurl homecomponenthtml styleurls homecomponentscss animations trigger myawesomeanimation state small style transform scale bakcground red state large style transform scale bakcground red transition small gt large animate easein animateme article articlestate articlestate small large small alert mouse works fine homecomponenthtml", "num": "19262", "d": "9/2017"}, {"title": "bug http get type request adds object object url", "body": "bug strange nature using angular http library current behavior creating custom behavior around http class extending example happens underlying code changing destination url something like instead provided digging js code showed issue following code file apply additional tuning determine cause console output following applying code file fix methods similarly calling abstraction using signature first parameter change named methods start passing url first parameter prevent behavior appear following code reflects required changes make everything work file notes seems like code inside cause mixups unknown nature javascript file http library methods calling otherwise one type parameter passed second parameter first strict type well string argument erased request signature stay place expected behavior instead url proper url called minimal reproduction problem instructions creating class extends http proper dependencies typescript export class connector extends http constructor typescript public getbyid id number observable motivation use case changing behavior make things work environment ending notes first issue submit hope excuse mistakes made text code", "num": "19260", "d": "9/2017"}, {"title": "angular new project build prop aot", "body": "submitting bug current behavior ng new cd ng build prod aot error error srcmaints module found error ca nt resolve gendirappappmodulengfactory srcmaints multi srcmaints expected behavior new project build minimal reproduction problem instructions ng new cd ng build prod aot environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node platform os upgrade angular cli upgrading angular cli safe exisiting projects created older version angular cli", "num": "19257", "d": "9/2017"}, {"title": "route parameter conflicts others", "body": "hi routes one app module admin section last one client side app routing export const routes routes path admin loadchildren appadminadminmodule adminmodule path redirectto home pathmatch full path redirectto home pathmatch full admin routing const routes routes path admin component admincomponent children path redirectto evenements pathmatch full path evenements component admineventcomponent client routing const routes routes path component corecomponent children path redirectto home pathmatch full path home component homecomponent path city component homecomponent problem try go router try resolve admin city parameter client routing normally router check first admin route found resolve city asked question stackoverflow one knows bug could explain found nothing talking case angular documentation thanks", "num": "19255", "d": "9/2017"}, {"title": "gives error provider e works fine", "body": "submitting current behavior error appears form page processing form model stacktrace goes back till file vendor js f provider e expected behavior issue disappears version minimal reproduction problem instructions na motivation use case changing behavior environment", "num": "19254", "d": "9/2017"}, {"title": "router pathmatch values better naming suggestion", "body": "submitting current behavior configuring route current possible values property expected behavior instead suggest name instead suggest name motivation use case changing behavior teacher teaching property values cause lot confusion names seeing teaching angular conveying true meaning studends keep referring docs try understand values think convey better happen choose value environment", "num": "19253", "d": "9/2017"}, {"title": "feat core support sugar triggering cd running without zonejs", "body": "overview possible run angular without component angular trigger cd automatically whenever inputs components change however component changes internally requires tha developer manually trigger cd invoking intern requires injected component creates subideal experience proposal attempts fix design statesalutation name bye changedetection changedetectionstrategyonpush class mycomponent input name string state state state salutation hello bye thisstateupdate state gt statesalutation bye basic idea separate properties set component externally using internal component state one better reason properties change outside intrinsic component state seen clear data internal external component object present read version internal state adds additional level type safety prevents accidental change state without notifying framework change shallow properties state probably better type safety typescript export interface state update updatefn state gt void void export function state initialvalue readonly amp state return initialvalue annotation needed tell compiler inject state essence property injection rather constructor injection method one see order get hold version state object one would use method takes callback function callback function invoked writable automatically notifies perform cd note caveat methods called constructor yet reference since property injector run constructor done case keep track change occurred perform cd injected playground", "num": "19252", "d": "9/2017"}, {"title": "formgroupdisable formgroupenable allow resetting disabled state", "body": "submitting current behavior dealing ngform want disable included controls users modify eg submit access form within component controller overwrite formgroup states first controls get disabled get enabled even second form hardcoded gets enabled way get back selfgoverning state expected behavior could multiple solutions specific attribute disabled input could take precedence force option method reset disabled state minimal reproduction problem instructions plnkr two inputs one regular one always disabled click submit button inputs get disabled timeout inputs get enabled always disabled input reset motivation use case changing behavior revert input disabled value build forms enforce state certain process eg async update reset disabled states async operation completed environment angular version browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19251", "d": "9/2017"}, {"title": "provider animationengine universal", "body": "see error message reported runtime repro clone expected result errors console message outputted saying angular running dev mode actual result error", "num": "19250", "d": "9/2017"}, {"title": "routerlink directive interprets url path differently compared parsing url", "body": "submitting current behavior access angular application via path construct link page angular application via expected behavior would expect cases page gets addressed practice routerlink directive addresses page reason seems routerlink directive expects string unescaped path segments instead properly escaped url path sample works however string atest pageb path according rfc minimal reproduction problem instructions easily reproduced testcase typescript routerparseurl method produce unescaped segments routercreateurltree produces escaped segments motivation use case changing behavior routerlink take url path consistency reasons path navigate single url path sequence url segments segements unescaped segments since consistent segments represented urltree object environment", "num": "19247", "d": "9/2017"}, {"title": "component constructor selector", "body": "component selector first template export class firstcmomponent component selector first template export class secondcmomponent viewchild templateref read viewcontainerref private container viewcontainerref would great necessary connect additional hard modules understand possible create map selector component want know possible get component means angular", "num": "19246", "d": "9/2017"}, {"title": "redirect render view", "body": "tried redirect constructor function ngoninit function code still displaying view redirect route", "num": "19245", "d": "9/2017"}, {"title": "error npm start", "body": "info worked ends ok verbose cli usrlocalbinnode usrlocalbinnpm start info using npm info using node verbose runscript prestart start poststart info lifecycle angularquickstart angularquickstart verbose lifecycle angularquickstart unsafeperm lifecycle true verbose lifecycle angularquickstart path usrlocallibnodemodulesnpmbinnodegypbin usersmarkangularprojectnodemodulesbin usrlocalbin usrbin bin usrsbin sbin verbose lifecycle angularquickstart cwd usersmarkdimacaliangularproject silly lifecycle angularquickstart args c npm run build silly lifecycle angularquickstart returned code signal null info lifecycle angularquickstart failed exec prestart script verbose stack error angularquickstart prestart verbose stack exit status verbose stack eventemitter verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid angularquickstart verbose cwd usersmarkangularproject error darwin error argv usrlocalbinnode usrlocalbinnpm start error node error npm error code elifecycle error angularquickstart prestart error exit status error failed angularquickstart prestart script npm run build error make sure latest version nodejs npm installed error likely problem angularquickstart package error npm error tell author fails system error npm run build error get information open issue project error npm bugs angularquickstart error nt available get info via error npm owner ls angularquickstart error likely additional logging output verbose exit true note already updated nodejs npm", "num": "19243", "d": "9/2017"}, {"title": "refact aio use new null platform", "body": "trying approach", "num": "19242", "d": "9/2017"}, {"title": "variable change observable subscription nt trigger change detection", "body": "submitting current behavior sometimes variable change inside observable subscribe method nt trigger change detection hard debug since nt always happen usecase add payment method call service fire event finished spinner shown component listens event fires downloads fresh payment methods sets loading false sometimes loading stuck variables properly set loading false trigger change detection something else properly updates current workaround run ngzonerun seems fix problem expected behavior always trigger change detection variable changes inside subscription environment tooling issues node version platform macos", "num": "19241", "d": "9/2017"}, {"title": "angular add lifecycle hooks runtime", "body": "angular add lifecycle hooks runtime current behavior ca nt add lifecycle hooks runtime expected behavior add lifecycle hooks runtime minimal reproduction problem instructions parent component export class parentcomponent child component export class childcomponent parent component implements ngafterviewinit child component add hack method parent component implements ngafterviewinit child component add hack method want worked add empty ngafterviewinit method another way job plnkr example motivation use case changing behavior environment", "num": "19240", "d": "9/2017"}, {"title": "upload file httpclient", "body": "hi trying way upload file form data using httpclient still found yet could someone please help thank much bao", "num": "19239", "d": "9/2017"}, {"title": "add getcomputedstyle", "body": "submitting current behavior developers must use get rendered component style seen browser violate angular universal concept using expected behavior add support minimal reproduction problem instructions look prototypes getcomputedstyle listed motivation use case changing behavior need get color value class applied draw canvas color found way get style class applied environment", "num": "19238", "d": "9/2017"}, {"title": "viewdisposables function zonerunoutsideangular", "body": "submitting current behavior custom event manager allows bypass angular event loop short event manager catches hostlistener directive x far behaviour expected problem directive x destroyed via ngif receive following error browser expected behavior realize intentionally bypassing expected logic wonder way catch case minimal reproduction problem instructions create custom event manager register app module like add directive hostlistener hit bypass motivation use case changing behavior environment", "num": "19237", "d": "9/2017"}, {"title": "receive header blob type", "body": "submitting current behavior typescript thishttp get environmentserverurl thisurl responsetype blob subscribe res blob gt see network tab response include custom header question get headers", "num": "19236", "d": "9/2017"}, {"title": "bug platformserver dynamic styles get converted camelcase kebabcase", "body": "submitting current behavior using hostbinding ngstyle platformserver appends style correct element convert name style kebabcase platformbrowser leads browser recognize name style expected behavior dynamically applied styles transferred dom kebabcase camelcase minimal reproduction problem instructions create component add hostbinding use angularcli build commonjs package render package using nguniversalexpressengine turn js prevent bootstrapping inspect dom find component incorrect styles motivation use case changing behavior user js disabled bootstrapping particularly slow ux greatly impacted styles correctly applied throughout dom environment browser x chrome desktop version tooling issues node version platform linux", "num": "19235", "d": "9/2017"}, {"title": "dynamic edit pseudo elements html element", "body": "submitting current behavior need dynamically set html pseudo elements css component api effective solution expected behavior api extension class example put dynamic css pseudo elements minimal reproduction problem instructions environment", "num": "19234", "d": "9/2017"}, {"title": "error running npm start", "body": "npm start angular start c usersjabbar tsc amp amp concurrently npm run tsc w npm run lite nodemodules angularcoreindexdts error declaration statement expected npm err code elifecycle npm err errno npm err angular start tsc amp amp concurrently npm run tsc w npm run lite npm err exit status npm err npm err failed angular start script npm err probably problem npm likely additional logging output npm err complete log run found npm err c usersjabbar", "num": "19233", "d": "9/2017"}, {"title": "animations limit query applied", "body": "submitting current behavior optional parameter query function animations works number wo nt effect expected behavior limit provided first five elements found animated minimal reproduction problem instructions see plunker environment browser x chrome desktop version", "num": "19232", "d": "9/2017"}, {"title": "aot ngc watch mode starts compilation every save ide", "body": "submitting current behavior ngc watch mode starts compilation every save ide intellij idea autosave sec autosave window deactivation manual save ctrls mean files changed content ngc reports file change detected problem general even incremental recompilation takes quite much time expected behavior ngc try minimize useless recompilations webpack well tsc environment tooling issues node version platform windows", "num": "19231", "d": "9/2017"}, {"title": "apply input placeholder styling input property", "body": "submitting current behavior hi developers currently develop search input component component ussed multiple regions application component inputs define bgcolor color input html element usse placeholder help message define placholder color css properties need webkitinputplaceholder property problem goes try define color placeholder color input saved input inputcolor property minimal reproduction problem instructions environment lot thank time tarik curto", "num": "19230", "d": "9/2017"}, {"title": "aot ngc generates incorrect import paths index files", "body": "submitting current behavior assume file reexporting class currently import class file first two imports generate following js expected behavior anything except invalid least compilation error environment tooling issues node version platform windows typescript", "num": "19228", "d": "9/2017"}, {"title": "support relative urls httpclient platform server", "body": "currently server httpclient accepts absolute urls accept relative urls similar client server use current url figure absolute path becomes important use url key http cache transferred server client", "num": "19224", "d": "9/2017"}, {"title": "httpclient condition always true", "body": "submitting current behavior following source code httpclient expression appears evaluate always since result doubleexclamation lhs boolean always expected behavior expression could evaluate false match intention minimal reproduction problem instructions motivation use case changing behavior intent unclear given expression appears always evaluate environment browser na tooling issues na others na", "num": "19223", "d": "9/2017"}, {"title": "side effect isdevmode", "body": "look like could use isdevmode know dev mode call enableprodmode break app side effect look nt know problem want", "num": "19220", "d": "9/2017"}, {"title": "reactive forms aot staticinjectorerror provider ngform", "body": "submitting current behavior compiling app reactive forms using aot getting following error navigating form expected behavior reactive forms work like minimal reproduction problem instructions testmodulets import ngmodule angularcore import commonmodule angularcommon import formsmodule reactiveformsmodule angularforms import testcomponent testcomponent ngmodule declarations testcomponent imports commonmodule reactiveformsmodule exports testcomponent providers export class testmodule testcomponentts import component oninit angularcore import formgroup formcontrol angularforms component selector appform templateurl testcomponenthtml styleurls testcomponentcss export class testcomponent implements oninit testcomponenthtml motivation use case changing behavior environment", "num": "19219", "d": "9/2017"}, {"title": "error thrown ngoninit results two separate component templates shown", "body": "submitting current behavior throw error method catch custom navigate route show dual show template component error thrown also template component error handler navigated happens either browseranimationsmodule noopanimationsmodule imported leaving cause problem expected behavior show template component error handler navigated using either browseranimationsmodule noopanimationsmodule minimal reproduction problem instructions plnkr motivation use case changing behavior environment", "num": "19218", "d": "9/2017"}, {"title": "eventstopimmediatepropagation unittested", "body": "submitting current behavior functions dispatchevent eventstopimmediatepropagation working together well angular unit tests expected behavior eventstopimmediatepropagation work angular unit tests exactly browser minimal reproduction problem instructions create hello world minimalistic angular project angular cli add following trivial unit test file existing autogenerated sample unit tests let count test listeners gt documentbodyaddeventlistener click event mouseevent gt eventstopimmediatepropagation consolelog listener running count eventstopimmediatepropagation run unit tests suit ng test unit test added us fails handlers run even eventstopimmediatepropagation listener supposed stop two handers executing unit test works perfectly browser using jasmine standalone setup first handler executed need behaviour angular unit tests motivation use case changing behavior seems bug preventing proper testing events angular environment", "num": "19216", "d": "9/2017"}, {"title": "component used two different modules angular", "body": "appheader known element appheader angular component verify part module appheader web component add customelementsschema ngmoduleschemas component suppress message error users context created component appheader includes routing part include home dashboard component working fine include user error user module implemented lazyload one help resolve also tried added header component user module landed error error type headercomponent part declarations modules appmodule usermodule please consider moving headercomponent higher module imports appmodule usermodule also create new ngmodule exports includes headercomponent import ngmodule appmodule usermodule error type headercomponent part declarations modules appmodule usermodule please consider moving headercomponent higher module imports appmodule usermodule also create new ngmodule exports includes headercomponent import ngmodule appmodule usermodule created shared module included header component succeeded thanks ganga", "num": "19214", "d": "9/2017"}, {"title": "error encountered resolving symbol values statically calling function \u0275makedecorator", "body": "error encountered resolving symbol values statically calling function \u0275makedecorator function calls supported consider replacing function lambda reference exported function resolving symbol injectable angularcorecoredts resolving symbol \u0275e angularcorecoredts resolving symbol \u0275e angularcorecoredts", "num": "19212", "d": "9/2017"}, {"title": "angular async filter error rootscope infdig", "body": "defined filter query data asynchronously get results want data console displays error appregisterfilter userdept function error rootscope infdig n digest n apply g k xmlhttprequestzonload uncaught error rootscope infdig n digest n apply g k xmlhttprequestzonload nt know please help code reference modified follows thiis", "num": "19211", "d": "9/2017"}, {"title": "browseranimationsmodule parsed ngmodule", "body": "submitting current behavior project code bases one component library everything works expect project also contains demo application uses library project uses custom set build scripts library demo uses different webpack configs ejected angular cli one development jit deployment compile app aot mode bundles way cli issue aot compilation demo library work compilation fails error error error browseranimationsmodule ngmodule comment browseranimationsmodule main app module code compiles correctly boots angular fails animations try execute makes sense nt understand compilation fails include browseranimationsmodule issue problem however fix issue delete nodemodules reinstall deleted nodemodules run npm clean cache run npm multiple times never fixes issue also tried cloning repo clean directory compiling new copy get error might well issue project figure trying days figure nothing works library built bundled npm scripts build bundle development jit version demo library tied npm start script seem work correctly demo library compilation bundling aot executed npm builddemo script part process fails shows compilation error help would much appreciated expected behavior aot compilation throw browseranimationsmodule ngmodule error minimal reproduction problem instructions clone repo running npm run npm run builddemo motivation use case changing behavior want aot compile demo library together deploy part documentation environment", "num": "19210", "d": "9/2017"}, {"title": "doc tostring activation childactivation events", "body": "submitting current behavior documentations childactivationstart childactivationend activationstart activationend identical represents start end resolve phase routing emphasis mine guess start start event end end event also guess difference activation childactivation documentations otherwise point two kinds events moreover tostring method returns instead guess issue exists finally documentation two sets events circular loop doc start event says see note link activationend use experimental api activationend doc nt note see note link activationstart use experimental api quite confusing expected behavior documentation really describe event actually represents tostring contain actual name event real note use experimental api minimal reproduction problem instructions na motivation use case changing behavior understanding events represent environment", "num": "19209", "d": "9/2017"}, {"title": "unexpected keyboard events fired changing focus button click handler", "body": "submitting current behavior component sample would expect using enter key activate button page button event logged console actually happens button event button event logged expected behavior button event logged console using enter key activate button minimal reproduction problem instructions plnkr sample instructions open debug console focus button keyboard press enter key motivation use case changing behavior application panel opens clicking close button focus return element opened panel environment", "num": "19208", "d": "9/2017"}, {"title": "extracting duplicate resolvers causes weird behaviour aot compilation", "body": "submitting current behavior assume existing resolver create two objects based use values two routes using jit compilation visit either route see resolved data get loaded using aot compilation visit empty object get resolved instead expected data expected behavior routes get correct data resolved whether using jit aot compilation minimal reproduction problem instructions created demo app using angular cli published deployed application cloud foundry see happen jit compiled aot compiled without copying using app works correctly aot jit motivation use case changing behavior imagine different routes share base set resolvers additional resolvers one would nice reduce duplication extracting overlap perhaps importantly behave consistently jit aot builds environment", "num": "19206", "d": "9/2017"}, {"title": "performance issue trying load records single page", "body": "submitting current behavior displaying records table pagination button show records single table pagination hidden ie click show button takes time load records browsers chrome safari fasterthe records trying expected behavior loading records table take time minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19205", "d": "9/2017"}, {"title": "center tag working anuglar", "body": "working angular", "num": "19204", "d": "9/2017"}, {"title": "localized pipe working routerlink outlets", "body": "submitting current behavior set try attach pipe gives error ca nt match routes tried following none work expected behavior expect find localized route works correctly minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19201", "d": "9/2017"}, {"title": "aot compilation fails recursion supported angular", "body": "submitting current behavior ca nt build fails due aot failing works fine issue occured upgraded using package ngxtoastr happened different third party package well changed another one error aot compilation change significantly angular affect every third party library already error error recursion supported resolving symbol style usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules angularcoreindexdts resolving symbol toast usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodulesngxtoastrindexdts resolving symbol toast usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodulesngxtoastrindexdts resolving symbol toast usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodulesngxtoastrindexdts resolving symbol toast usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodulesngxtoastrindexdts syntaxerror usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules simplifyincontext usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules staticreflectorsimplify usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules staticreflectorannotations usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules ngmoduleresolverresolve usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules compilemetadataresolvergetngmodulemetadata usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules addngmodule usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules arrayforeach native createngmodules usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules analyzengmodules usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules analyzeandvalidatengmodules usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules aotcompileranalyzemodulesasync usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules codegeneratorcodegen usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules donepromisepromiseresolvethen usersbalazsrostasdevelopmentavataonewfrontendfrontendnodemodules expected behavior shoud build properly minimal reproduction problem instructions upgrade angular use ngxtoastr package try build environment tooling issues node version platform macos", "num": "19200", "d": "9/2017"}, {"title": "combining hostcontext hostcontext nt work", "body": "submitting current behavior combining multiple template nt work resulting css newlines added readability spacing within selector copy pasted verbatim expected behavior selector matches host ancestor matches ancestor matches resulting selector could something along lines minimal reproduction problem instructions plunker shows elements native web components angular modifying angular version plunker shows nt work expected native web components part seems styled correctly chrome unable debug shadow dom safari motivation use case changing behavior behaviour emulated view encapsulation nt match native shadow dom environment angular version browser", "num": "19199", "d": "9/2017"}, {"title": "angular extraction working", "body": "submitting current behavior using angular cli command extract messages angular expected behavior message extraction work using minimal reproduction problem instructions ng new testproj cd testproj ng generate component echo hello world gt npm run ng stat srcmessagesxlf file exists rm srcmessagesxlf update npm angular animations common compiler core forms typescript npm run ng stat srcmessagesxlf file exists rm srcmessagesxlf update npm angular animations common compiler core forms typescript npm run ng stat srcmessagesxlf file exist motivation use case changing behavior environment cc ocombe", "num": "19198", "d": "9/2017"}, {"title": "domsanitizer apply directives sanitized html", "body": "submitting current behavior would like apply componentsdirectives sanitized html produced domsanitizer currently sanitizing trusted html containing tags offer spesific information spesific tags compiled directives replacing content internal links routerlink components expected behavior angular wizard suppose compiling html willynilly available componentsdirectives would bad regarding security aot ideally would like extend domsanitizer provide componentsdirectives considered safe applied safehtml applied domelement would great also worked aot compilation impossible nothing impossible would nice workaround parsing html stringform seems tedious applying routerlink still impossible since also directive minimal reproduction problem instructions motivation use case changing behavior display certain attribute tags internal links sanitized html environment", "num": "19197", "d": "9/2017"}, {"title": "httpclient posting number zero working", "body": "submitting current behavior number zero nt get sent via post body numbers seem work fine expected behavior possible post via post body minimal reproduction problem instructions demo open dev tools look request environment", "num": "19195", "d": "9/2017"}, {"title": "testbed injecting real service instead provided mock service", "body": "submitting current behavior testing component injects service depends service b want test component mock service mockofa dependencies works test component class wo providing mockofa test component using mockofa testbed injects real service mock hardly believe attached plunker demonstrates problem hope done something incredibly stupid expected behavior test use mockofa minimal reproduction problem instructions version application cutdown issue defines component two services plus model holds two tests one works testbed one nt environment current version write browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues platform mac", "num": "19194", "d": "9/2017"}, {"title": "feature request form enable promise", "body": "submitting x feature request current behavior disabling formgroup large formular takes long produces wrong valid states formgroup expected behavior enable disable functions formgroup returning promises sure formgroup completly disabledenabled want check validity minimal reproduction problem instructions create huge form controls invalid controls motivation use case changing behavior need way absolutly sure enable disable method finished environment", "num": "19193", "d": "9/2017"}, {"title": "created new project angular cli nt edit code went ng build prod failed quoting ca nt resolve gendirappappmodulengfactory sure issue coming", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19191", "d": "9/2017"}, {"title": "feature request router add interstitial loading component option used guardsresolvers", "body": "submitting x feature request current behavior resolvers enter states data resolved desired behavior option show interstitial state url changed yet defined loading component eg intended state swapped current url component url change data resolved url changes intended state swapped error goes swaps loading component back current route component may also nice error handle may want define explicitly canactivate vs resolve may make sense use guards component selector mypageloadingcomponent template loading resolversthingone inject snapshot resolver observables displaying progress etc", "num": "19187", "d": "9/2017"}, {"title": "browser back button changing route first third fifth clicks", "body": "submitting current behavior hava route like go route traversing dynamic routes like want go back page clicking browser back button nothing first click second click url changes previous route third click change route forth click changes previous route example route browser back click nothing browser back click changes previous route browser back click nothing browser back click changes previous route expected behavior route change previous every browser back button click example route browser back click change previous route browser back click change previous route minimal reproduction problem instructions make project define route pointing component videopagecomponent make videodetailservice get video details id get video id route using parammap subscription get videos details videodetailservice using video id get nextvideoid details make anchor tag videopage view routerlink pointing next route show video details also videopage view click anchor tag go next route next click browser back button go previous page go back first click click browser back button go previous route click back button route change motivation use case changing behavior basic routing bug needs resolved environment", "num": "19185", "d": "9/2017"}, {"title": "errorhandler methods internal", "body": "submitting current behavior default errorhandler uses internal method retrieving error changing way error logged complete class needs reimplemented expected behavior methods retrieving context original error internal used implementations motivation use case changing behavior reuse existing methods copy paste source code environment", "num": "19181", "d": "9/2017"}, {"title": "matrix array param retrievable parammap getall function", "body": "submitting current behavior url built matrix parameters contain array value retrievable elements array parammapgetall function provides array one single value original values concatenated instead multiple elements example given navigation like thisrouternavigate example foo bar baz url something like example foobar baz want get back foo values activatedroute thisactivatedroutesnapshotparammapgetall foo get bar baz instead bar baz expected behavior getall function provide elements array foo bar instead array single element foo bar minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19179", "d": "9/2017"}, {"title": "rename ngmodule module", "body": "hey reason behaviour mentioning please let know could nt find sources explaining topic submitting current behavior decorator angular modules decorator eg angular components expected behavior rename motivation use case changing behavior consistency", "num": "19178", "d": "9/2017"}, {"title": "ngoninit broken version used ngonchanges", "body": "submitting current behavior component implements onchanges oninit ngoninit called called angular version used stopped working version version also fails expected behavior component implements onchanges oninit ngoninit gets called like still version minimal reproduction problem instructions create component implements onchanges oninit put example debug logging ngoninit method see newer versions nt work also note nt use onchanges ngoninit called environment", "num": "19177", "d": "9/2017"}, {"title": "aot using random token used token exported", "body": "submitting current behavior use injectiontoken file objects used keys di like ngmodule injectiontoken nt exported aot compiler use token instead without generating warning error causes difficult debug issues expected behavior aot compiler fail message explains everything used provide must exported minimal reproduction problem instructions example", "num": "19176", "d": "9/2017"}, {"title": "date class issue", "body": "think problem class date always increments month field means put new date transforms view regression behavior used work stopped working new release bug report feature request documentation issue request support request gt please submit support request instead see current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19175", "d": "9/2017"}, {"title": "angularjs client request rest api backend authantication filter", "body": "using angularjs frontend pass authentication data angularjs post method username username password password success function response callback response authentication filter use post annotation path annotation path please suggest backend use jersey rest api security refer form site", "num": "19174", "d": "9/2017"}, {"title": "httpclient asynchronous", "body": "submitting current behavior post method asynchronous nt test http methods expected behavior synchronous method minimal reproduction problem instructions service using verifies whether input code correct angular service injectable export class verifycodeservice constructor private httpclient public checkcode params key string header observable let headers new httpheaders set contenttype applicationjson header null let lt headerlength headers headersappend header name jsonstringify header value verifycodeservice angular component constructor private logger loggerservice private verifycodesev verifycodeservice private checkverifycode boolean thissteponeformgroupget verifycode value return output message correct motivation use case changing behavior environment angular packages", "num": "19173", "d": "9/2017"}, {"title": "quickstart project working", "body": "downloaded quickstart project angulario website even installing dependencies giving errors like find module angularcore", "num": "19172", "d": "9/2017"}, {"title": "production build many side effects application running totally wrong", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior created app parsing gpx files showing info map etc works fine running developing env build production stats maps get messed expected behavior application run fro production dev minimal reproduction problem instructions download opensource app run dev upload tcx gpx file eg test app getting map info needed speed cadence places etc build production run app everything messed maps show wrong places many unexpected behaviour motivation use case changing behavior building app months suprised different behaviour production environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "19171", "d": "9/2017"}, {"title": "formarrayseterrors work intended", "body": "submitting current behavior setting set error expected behavior formarray populate property update valid state accordingly minimal reproduction problem instructions plnkr motivation use case changing behavior implementing validation requires certain fields formarray unique error displayed formarray level documentation clearly states formarray inherits abstractcontrol environment", "num": "19170", "d": "9/2017"}, {"title": "ngc problem dynamic templateurl", "body": "hi using dynamic templates url order get multiple themes application htmlcss unfortunately works fine developing tweak way retrieve templateurl order able compile compiling ngc get struggling ever anyone lead nice way make work", "num": "19169", "d": "9/2017"}, {"title": "remove formarray reactive forms", "body": "eg using code creating survey object onload ngoninit thissurvey new formgroup surveyname new formcontrol sections new formarray thisinitsection initsection return new formgroup sectiontitle new formcontrol surveyname sections sectiontitle want delete section array key", "num": "19168", "d": "9/2017"}, {"title": "routerlinkactive nt work properly beginning angular", "body": "submitting current behavior start app routerlinkactive activated element nt activated class quickly understand routerlinkactive component displayed component routerlinkactive activation true dom active class expected behavior start app routerlinkactive activated element musst activated class minimal reproduction problem instructions working angular working angular motivation use case changing behavior menu cant get nested route ui bad environment", "num": "19167", "d": "9/2017"}, {"title": "expands html using browseranimationsmodule", "body": "submitting current behavior project using browseranimationsmodule call variable error undefined browser show html components navigated browseranimationsmodule import angularplatformbrowseranimations source code expected behavior show html current component minimal reproduction problem instructions error code motivation use case changing behavior comment browseranimationsmodule resolved problem environment", "num": "19166", "d": "9/2017"}, {"title": "compileerror htmlfile", "body": "possibility output error message angulartypescript data binding name variable wrong example classnamecheck somethingstupid case attaching somethingstupid code nt output error warning also ngfoorr theres compiler error kind warning thank", "num": "19165", "d": "9/2017"}, {"title": "ngfor trackby", "body": "current behavior html heroid heroname javascript trackbyheroes index number hero hero number return heroid tackby index value arraymap value index array maybe lot people confused expected behavior order trackby parameters", "num": "19164", "d": "9/2017"}, {"title": "update support parameter", "body": "submitting current behavior version added parameter constructor method create new control provided configuration currently signatureinput parameters match expected behavior minimal reproduction problem instructions motivation use case changing behavior keep code consistent environment angular version would nice could also update support simple json provided", "num": "19163", "d": "9/2017"}, {"title": "suggest ngmodellazy ngmodeleager", "body": "current behavior element translated care always look inputing change every char ask last result listen blur event expected behavior actually watch progress get every char refered eager watch last reasult input refered lazy suggest", "num": "19162", "d": "9/2017"}, {"title": "module constructor get called using testbedoverrideprovider", "body": "submitting current behavior import module testbedconfiguretestingmodule also use testbedoverrideprovider module constructor never called even though called running code outside testing environment without testbedoverrideprovider module constructor called one services components instantiated expected behavior module constructor always get called imported either directly transitively testbedconfiguretestingmodule regardless whether testbedoverrideprovider used minimal reproduction problem instructions motivation use case changing behavior need test component important set work done module constructor way moment see without set work component work properly tests fail even though everything working properly outside test environment workaround manually force module constructor called using", "num": "19161", "d": "9/2017"}, {"title": "headers constructor append set date value use correct format", "body": "submitting current behavior objects added get turned strings nonstandard format expected behavior objects added get turned strings standard ie httpdate format specified rfc section expect behavior use issue title first point motivation use case changing behavior section minimal reproduction problem instructions motivation use case changing behavior believe following sentence rfc section applies angular sender generates header field contains one timestamps defined httpdate sender must generate timestamps imffixdate format specifically believe angular least used sender sense sentence know strict adherence spec strong argument think bug instead feature request use must sentence angular could make writing hypertext dare say rest api client easier requiring author client implement required standard functionality rationale ie angular change first know angular right place raise issue places think issue could addressed fetch ecmascript think angular much inferred fetch headers class defined fetch could though since fetch cares feel currently unlikely change could fit fetch even apply fetch would still need implemented also based current functions defined think could addressed though nt asked specifically relevant sections specify format string return value every function implementationdependent adding new one perhaps named without flavor seems place even function added angular would need change use matter think work needs done environment think irrelevant", "num": "19160", "d": "9/2017"}, {"title": "single page routing working browseranimationmodule noopanimationmodule added app", "body": "submitting current behavior whenever add browseranimationsmodule noopanimationsmodule application stop loading routes single page routes load load top instance keep clicking button supposed open new single page component loads component ontop keep clicking page get longer longer expected behavior desired behavior would selected component opens single page normal issue manifests browseranimationmodule added appmodulets minimal reproduction problem instructions motivation use case changing behavior needs load single page application work environment running locally computer", "num": "19158", "d": "9/2017"}, {"title": "angular language service recognizing declartion component module provides usefactory", "body": "submitting current behavior downloaded angular project seed official docs one uses systemjs without cli angular language service enabled gives errors components core module error angular component included module available inside template consider adding ngmodule declartion investigating find happens components core module appmodule feature modules nt occur defention providers core module looks like tried playing part code nothing worked except removing entire object literal use provide factory removing code recompalling worked errors component core belonging ngmodule expected behavior expect angular language service recognize modules even provide tokens using usefactory fashion thus giving error core components minimal reproduction problem instructions gave best code example could come current behavior part sadly im working company connected www cant get actual code also limited time computers connected www nt time write planker something like problem particular time motivation use case changing behavior kind errors overpopulate errors typescript error screen im using webstorm make work angular language service impossible imagine anyone else counters erros using usefactory environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx im accually running electron sure option tick ill write tooling issues node version platform windows", "num": "19157", "d": "9/2017"}, {"title": "httpinterceptor get info unsubscribed requests", "body": "submitting current behavior code nexthandle req get executed unsubscribed requests expected behavior execute code nexthandle req unsubscribed requests minimal reproduction problem instructions minidemo shows code inside nexthandle req get executed unsubscribed completed motivation use case changing behavior one features angulars httpinterceptors run code request made completed good kinds request response manipulation monitoring features implemented current implementation nt possibility get informed finished http requests unsubscribed current use cases feature interceptor counter outstanding requests loading spinner shown easily via ngif expression uses counter possibility prevent executing multiple requests time urls eg user doubleclicks environment", "num": "19156", "d": "9/2017"}, {"title": "aot injectiontoken work", "body": "submitting current behavior injectiontoken work well jit compilation aot expected behavior injectiontoken must work aot compilation minimal reproduction problem instructions localeid use injectiontoken add appmodule add appcomponent today datenow actual exception expected culture frfr displays sept culture enus displays sep motivation use case changing behavior want use easier configuration apps environment", "num": "19154", "d": "9/2017"}, {"title": "find control unspecified name attribute plz add name control", "body": "submitting current behavior concerning error find control unspecified name attribute someone add actual name angular looking would awesome especialy like inputs form try find one actually missing template thanks", "num": "19153", "d": "9/2017"}, {"title": "prerendering lazy loading friction angular", "body": "submitting current behavior context spa uses serverside prerendering implemented dotnet generator see guide also lazyloaded routes moment app bootstrapped lazyloaded module downloaded downloading neither module prerendered content visible jarring enough make prerendering detrimental rather beneficial feature request based issue raised daveriedstra angular user loads app lazyloaded route prerendered content loaded user starts reading app core content loaded bootstrapped app renders without lazy route prerendered content disappears without replacement app starts downloading lazy route lazy route finishes loading rendered content reappears expected behavior handover seamless maybe could configuration angular rendering happens lazy loading finished minimal reproduction problem instructions create new project prerendering substantial placeholder content create lazyloaded route corresponding router configuration load corresponding route directly repro uses alerts illustrate pain points remove see issue action motivation use case changing behavior reap benefits lazy loading serverside prerendering environment essentially version one dotnet generator see repro agnostic example browser chrome official build firefox edge language typescript node aot issues node version", "num": "19149", "d": "9/2017"}, {"title": "httpclient allow different responsetypes success response error response", "body": "submitting current behavior currently httpclient expects responsetype success responses well error responses brings issues web api returns e g json non json based error string case error expected behavior see two solutions provide errorresponsetype field assign received message string json parsing work fallback minimal reproduction problem instructions following test case using web api returns json success case plain text case error tests lead error due validation issues first case requesting plain text text based error message shown second case requesting json would case call succeeded getting null import testbed angularcoretesting import httpclient httpclientmodule httperrorresponse httpheaders angularcommon import httpclienttestingmodule httptestingcontroller angularcommon fdescribe different responsetypes success error case gt let httptestingcontroller let httpclient beforeeach gt testbedconfiguretestingmodule imports httpclientmodule send httperrorresponse error property received body complete function gt let actualbody responsetype text subscribe null resp httperrorresponse gt actualbody resperror expect actualbody nottobenull complete send httperrorresponse error property body flushed response complete function gt let actualbody responsetype json subscribe null resp httperrorresponse gt actualbody resperror expect actualbody nottobenull complete motivation use case changing behavior using existing web apis seamlessly environment tooling issues platform windows", "num": "19148", "d": "9/2017"}, {"title": "aot angular invoke lifecycle listeners typescript mixins used", "body": "submitting current behavior assume base class mixin component class typescript class base implements oninit constructor ngoninit void type constructor new args gt function tagged export class component extends tagged base public item component listener called aot workaround typescript export class component extends tagged base public item ngoninit void superngoninit expected behavior called environment", "num": "19145", "d": "9/2017"}, {"title": "aio toh live example broken angularcommonhttp", "body": "submitting current behavior toh live example broken problem systemconfig configured expected behavior works well minimal reproduction problem instructions motivation use case changing behavior environment related commit looks solving issue released yet cc wardbell", "num": "19144", "d": "9/2017"}, {"title": "angular working restricted csps without unsafeeval", "body": "submitting issues links probably year old advanced browser security focus angular support strict csp current behavior application resteicted csp script src defined wihout unsafeeval starting angular application fails giving following error unsafeeval supported also tried offline template compilation also error less similar mentioned several posts answers still gives csp error error systemjs refused evaluate string javascript unsafeeval allowed source script following content security policy directive scriptsrc unsafeinline self expected behavior way getting angular work restricted csp unsafeeval allowed due multiple reasons minimal reproduction problem instructions create application add following line head enable restricted csp browse application ms edge chrome ver gt get csp error also comile application using offline compiler following tsconfig execute statement compile ngc p path steps get error motivation use case changing behavior environments probably everyone secure environment support csp angular work scenarios angular version browser x chrome desktop version gt chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx x edge version xx followed standard quickstart guidelines provided site", "num": "19142", "d": "9/2017"}, {"title": "promiseresolve function error", "body": "hi using third party library js file statement return promiseresolve point page breaking tried modifying target build work please advise", "num": "19141", "d": "9/2017"}, {"title": "finished function calling single argument jsonp request", "body": "submitting current behavior function calling single argument expected behavior called arguments returning request eg minimal reproduction problem instructions hit jsonp request returing multiple values first value accesible environment", "num": "19140", "d": "9/2017"}, {"title": "problem communicate java spring boot backend", "body": "nodejs version windows ide intellij frameworks spring boot amp angular well need get data backend java angular terminal show message error hpm error occurred trying proxy request apidados econnrefused angular code java code tomcat configurated port proxy angular configurated like image someone help please important", "num": "19139", "d": "9/2017"}, {"title": "build optimizer incorrect code enum", "body": "submitting current behavior using angularcli generates incorrect code module ngbootstrap enum correctly referenced evaluates accessed via instead referencing still referenced source code expected behavior without buildoptimizer generated code looks like seems build optimizer responsible enum lookup using original typescript identifier instead generated enum function could ts bug course using typescript environment", "num": "19137", "d": "9/2017"}, {"title": "tour heroes part example angularinmemorywebapi broke example", "body": "submitting current behavior show screen expected behavior show working example screen minimal reproduction problem instructions make demo work open add add motivation use case changing behavior working demo app would encourage people play around understand angular works environment", "num": "19133", "d": "9/2017"}, {"title": "afterviewinit \u5728\u8bbe\u7f6e\u4e86 changedetectionstrategyonpush \u4e4b\u540e", "body": "ts import component oninit docheck onchanges aftercontentchecked aftercontentinit afterviewinit afterviewchecked changedetectionstrategy angularcore component selector apptest templateurl testcomponenthtml styleurls testcomponentcss changedetection changedetectionstrategydefault export class testcomponent implements oninit docheck onchanges aftercontentchecked aftercontentinit afterviewinit afterviewchecked public arr array constructor ngoninit thisarrpush ngoninit ngdocheck thisarrpush ngdocheck ngonchanges thisarrpush ngonchanges ngaftercontentchecked thisarrpush ngaftercontentchecked ngaftercontentinit thisarrpush ngaftercontentinit ngafterviewinit thisarrpush ngafterviewinit ngafterviewchecked thisarrpush ngafterviewchecked item gt ngoninit ngdocheck ngaftercontentinit ngaftercontentchecked onpush import component oninit docheck onchanges aftercontentchecked aftercontentinit afterviewinit afterviewchecked changedetectionstrategy angularcore component selector apptest templateurl testcomponenthtml styleurls testcomponentcss changedetection changedetectionstrategyonpush export class testcomponent implements oninit docheck onchanges aftercontentchecked aftercontentinit afterviewinit afterviewchecked public arr array constructor ngoninit thisarrpush ngoninit ngdocheck thisarrpush ngdocheck ngonchanges thisarrpush ngonchanges ngaftercontentchecked thisarrpush ngaftercontentchecked ngaftercontentinit thisarrpush ngaftercontentinit ngafterviewinit thisarrpush ngafterviewinit ngafterviewchecked thisarrpush ngafterviewchecked gt ngoninit ngdocheck ngaftercontentinit ngaftercontentchecked", "num": "19131", "d": "9/2017"}, {"title": "build aio running yarn docs aio directory fails", "body": "submitting current behavior complete output yarn docs rimraf srcgenerated docs json dgeni toolstransformsangulariopackage info running processor readfilesprocessor info running processor extractjsdoccommentsprocessor info running processor collectexamples info running processor readtypescriptmodules info running processor linkinheriteddocs info running processor parsetagsprocessor info running processor extracttagsprocessor info running processor codenameprocessor info running processor createoverviewdump info running processor convertprivateclassestointerfacesprocessor info running processor mergedecoratordocs info running processor extractdecoratedclassesprocessor info running processor markbarredodocsasprivate info running processor computeidsprocessor info running processor filtercontaineddocs info running processor filterprivatedocs info running processor simplifymemberanchors info running processor computepathsprocessor info running processor generateapilistdoc info running processor addnotyetdocumentedproperty info running processor matchupdirectivedecorators info running processor processnavigationmap info running processor renderdocsprocessor info running processor unescapecommentsprocessor info running processor inlinetagprocessor info running processor renderexamples info running processor copycontentassetsprocessor info running processor postprocesshtml info running processor computesearchtitleprocessor info running processor generatekeywordsprocessor info running processor checkunbalancedbackticks info running processor fixinternaldocumentlinks info running processor checkanchorlinksprocessor warn dangling links found guideaotcompilerjson warn dangling links found guidequickstartjson generatedzipscliquickstartcliquickstartzip warn dangling links found guidewebpackjson generatedzipswebpackwebpackzip warn dangling links found docsjson generatedliveexamplesquickstarteplnkrhtml error error unmatched links object process fulfilled selfpromisedispatchdone promisepromisepromisedispatch runsingle flush combinedtickcallback processtickcallback error error processing docs error unmatched links object process fulfilled selfpromisedispatchdone promisepromisepromisedispatch runsingle flush combinedtickcallback processtickcallback throw e error unmatched links object process fulfilled selfpromisedispatchdone promisepromisepromisedispatch runsingle flush combinedtickcallback processtickcallback error command failed exit code expected behavior generate docs successfully minimal reproduction problem instructions clone repo cd folder run environment", "num": "19130", "d": "9/2017"}, {"title": "angularcompilercli depends angulartscwrapped", "body": "submitting current behavior angularcompilercli depends angulartscwrapped expected behavior angularcompilercli depends angulartscwrapped minimal reproduction problem instructions na motivation use case changing behavior consistent versioning environment", "num": "19129", "d": "9/2017"}, {"title": "javascript documentation completion", "body": "hello everyone seen lot issues requested javascript documentation completion got closed without resolve issue wo nt happen happen happening released next version important request referred many issues got closed please refer open identical issue monitor state keep issue open update us happening resolved reply", "num": "19126", "d": "9/2017"}, {"title": "angular form validations multiple routes", "body": "submitting hello dear developers help please nt find information angular forms validations multiple routes example one big form contains several sections like tabs navigate moment use rooting like navigation eg template include tabs fill inputs sent data server server validates data data errors server sent front end like json contains errors array objects like parse answer search form control form field value add error message one tab one moment active route one tab form control tab load tabs background get form control set error message ways solve problem tried find answer internet could find anything specific find one article problem really option use redux", "num": "19125", "d": "9/2017"}, {"title": "feature publish use angulardi", "body": "submitting current behavior write services angular app need import etc publish services depend expected behavior general purpose services written angular easily exportable nt depend angular capabilities except di require motivation use case changing behavior nontrivial size angular project completely general purpose services reused parts organizationopensourcecommunity dependency makes reuse cumbersome workarounds webpack package resolution magic replaces imports writing generic version service another wraps angular ps raised issue comment another issue understand may prioritized believe valid open issue also others focus need reusing reusing general purpose services written angular app", "num": "19124", "d": "9/2017"}, {"title": "responsearraybuffer return consistent results", "body": "submitting current behavior specified resulting associated view without associated view expected behavior think behaviour regardless specified motivation use case changing behavior environment browser chrome desktop version official build tooling issues node version platform macos", "num": "19122", "d": "9/2017"}, {"title": "overall performance ngc rollup uglify", "body": "submitting current behavior project size githubcomaldanialcloc v filess liness language files blank comment code typescript html css sum typescript compilation full production build using jit mode starting build starting cleandist finished cleandist ms starting structure finished structure ms starting webpack mode release mainbundlejsmap mb emitted main vendorbundlejsmap kb emitted vendor finished webpack starting notify finished notify ms finished build transpileonlytsloader ci calls typescript compiler another step check compilation errors make fail fast full production build using aot mode starting buildaot starting cleandist finished cleandist ms starting cleanaot finished cleanaot ms starting structure finished structure ms starting ngc finished ngc min starting rollup rollup mode release rollup tag dev rollup version spasourcemainaotjs spadistmainbundlejs created spadistmainbundlejs finished rollup min starting notify finished notify ms finished buildaot min settings builds disk cpu usage low means aot build utilize available resources tried ram disk makes difference expected behavior minutes long gets worse build server motivation use case changing behavior slow highend hardware ssd build server fast actual build time minutes minutes difference environment tooling issues node version platform windows", "num": "19121", "d": "9/2017"}, {"title": "nghost", "body": "proposal like would act similar way css property would apply directives classes host component related current behavior mycomponenttemplatets currently apply class flex host component one use host component decorator hostbinding use wrapping element apply class host parent template suboptimal host component host class flex applies hostbinding class declarations belongs template directives nt work wrapper adds additional tag defining parent leaks implementation outside component expected behavior result compiling wrong usages multiple nghost multiple nghost nested nghost used topmost component solution strictly speaking would make sens invalid solution act strict link host meaning scenarios would result cases thus compiler finds element links whatever finds host matter put find bit less intuitive could easier implement solution compiles", "num": "19119", "d": "9/2017"}, {"title": "make backwards compatible implementation getpluralcase treeshackable", "body": "merged regressed size hello world cli app likely large implementation function vicb says original thinking injection constant minifier would able remove function used turned true closure uglify simple solution fix however implement getpluralcase injectable function two implementations default lightweight one uses locale files large backwards compatible one backwards compatible implementation would provided value via ngmodule way big implementation brought app deprecated module imported", "num": "19115", "d": "9/2017"}, {"title": "build size clihelloworld increased upgrading typescript", "body": "new contains eg old bundle new bundle contain annotations though checking packagejson generated cli project shows typerscript though well checking version", "num": "19113", "d": "9/2017"}, {"title": "docs aio usehostpropertydecorator case route animations", "body": "submitting current behavior reopening issue per mgechev suggestion expected behavior linting error present motivation use case changing behavior general setting tslint option good idea however might one use case helpful case want use property route animation quite common would want use hostbinding class property would unused possibly trigger another linting error perhaps usehostpropertydecorator exception animation bindings also feel added style guide sure submit thought pointers appreciated environment", "num": "19110", "d": "9/2017"}, {"title": "extending html components", "body": "submitting current behavior honest nt much issue rather question would possible extend html components like etc would simplify current requirement map properties classes fields declarations events underlying template custom component declaration example currently polaristextfieldcomponenthtml html label ts component selector polaristextfield templateurl polaristextfieldcomponenthtml styleurls polaristextfieldcomponentcss polarismincss export class polaristextfieldcomponent implements oninit input name string input label string constructor ngoninit html expected behavior instead would lovely could extend something like link component underlying template element would represented component motivation use case changing behavior would remove requirement map fields underlying templates environment", "num": "19108", "d": "9/2017"}, {"title": "add package default plunker template", "body": "submitting current behavior add package plunker expected behavior expect package included default", "num": "19104", "d": "9/2017"}, {"title": "bug automatically parsing error responses string since", "body": "submitting current behavior post tested method request returns error like parsed string even server returns valid expected behavior error response nt parsed minimal reproduction problem instructions click send post take look console specifically error parsed string environment others working see", "num": "19103", "d": "9/2017"}, {"title": "link full ngupgrade examples either based api docs guide examples", "body": "submitting current behavior reference comment gkalpak asked create separate ticket currently weakness upgrade documentation full examples upgrade would look like real world gaps explanations things example gap using angularjs component directives angular code says kinds angularjs directives upgraded directive really component directive cool says hey nt possible nt say supposed directive uses link compile properties order upgrade pretty important behavior obviously still exist app upgrading angular equivalent way linkcompile specific example comment upgradecomponentprototypegetdirective method literally asks question support linkpost according code glance directives link function ok use long contain post function use link function notsupported method called compile compile gets defined valueref link expected behavior basically humble opinions full working example end ngupgrade api doc pages would super helpful important topics yet find good examples using angularjs service angular service using angular service angularjs service directive compile link function use angularjs directive within angular component specifically running problems using old uirouter uisref directives within angular component basically say go back angularjsorg site using angularjs lot angularjs apps real world live world need upgraded use angularjs components upgraded literally upgrade site state angular minimal reproduction problem instructions motivation use case changing behavior less painful upgrade process environment", "num": "19102", "d": "9/2017"}, {"title": "nested animation nt run start callback fired", "body": "submitting current behavior nested component animation trigger defined component toplevel animation run start animation callback called expected behavior callback called minimal reproduction problem instructions motivation use case changing behavior nested animation usefull defined enter animation environment browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx x safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19100", "d": "9/2017"}, {"title": "way differentiate back forward buttons pressed", "body": "submitting current behavior way determine whether browser back forward button pressed expected behavior way differentiate back forward events minimal reproduction problem instructions motivation use case changing behavior sometimes want act back button pressed forward button pressed environment", "num": "19099", "d": "9/2017"}, {"title": "structural directives need onpush", "body": "submitting current behavior currently directives support property metadata switch onpush strategy understand directives nodes cd tree stated solution normally set change detection strategy host structural directives never component host since applied elements structural directives currently always use default change detection strategy workaround expected behavior structural directives able use one way another minimal reproduction problem instructions plunker showing angular iterates entire iterable given input even though use first item open console see iterable logs entire iterations several times motivation use case changing behavior prevents possibility structural directives receive giant arrays inputs display parts constant reiteration slows app halt array large plunker array items want display first item environment", "num": "19098", "d": "9/2017"}, {"title": "test", "body": "something something", "num": "19096", "d": "9/2017"}, {"title": "breaking change browseranimationsmodule makes removal nonanimated elements asynchronous", "body": "submitting current behavior currently importing browseranimationsmodule app makes removal embedded views asynchronous even animated one main problems happens even module declaring import browseranimationsmodule app importing seems override renderer everyone also produces strange situations since addition also synchronous simple updating array given code happening see newly added items removed ones lingering around expected behavior removal become asynchronous animated elements found inside removed component including possible least offer solution force synchronous removal tried using removal still asynchronous maybe force synchronicity used safest solution minimal reproduction problem instructions example behavior mentioning open console see changing items prints exact plunker without import time prints expected example showing issue even kind manual naive implementation sake clarity module import open console see additions happen immediately removals happen asynchronously still logs removed items removing try removing import app see removal becomes synchronous motivation use case changing behavior components need dom updated view modifications typically access dynamic height width rendering purposes wrapping affects performance negatively sometime possible view modifications happen loop dom needs updated step environment", "num": "19094", "d": "9/2017"}, {"title": "browseranimationsmodule prevents angular recover error", "body": "submitting current behavior component throws runtime error model template compatible example foo barr foo undefined handled angular nt break application unfortunately case browseranimationsmodule provided angular able remove old html elements anymore routeroutlet keeps old pages stack grows navigate true ngif expected behavior providing browseranimationsmodule nt effect minimal reproduction problem instructions removing browseranimationsmodule make work motivation use case changing behavior bug makes dynamic component creation almost impossible compilemoduleandallcomponentsasync throws compile errors way validate model templates handle runtime errors bug nt allow us runtime errors environment", "num": "19093", "d": "9/2017"}, {"title": "service method points callers scope called function object", "body": "submitting current behavior points callers class instance expected behavior service instance minimal reproduction problem instructions motivation use case changing behavior environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19092", "d": "9/2017"}, {"title": "select option disabled attribute selected default model value empty", "body": "submitting x bug report current behavior model empty selecteddisabled option selected chromefirefox works perfectly fine safari minimal reproduction problem instructions environment angular version issue present version browser x chrome desktop version version x firefox version", "num": "19091", "d": "9/2017"}, {"title": "httpclient tries fails parse nonexistent body head request json", "body": "submitting current behavior throw error body response expected valid json head request body workaround set options expected behavior seems ideally httpclient know head request body try parse json least throw error body minimal reproduction problem instructions use httpclient send head request motivation use case changing behavior service checks whether resource exists without actually loading via head request browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "19090", "d": "9/2017"}, {"title": "double options ngfor chrashes app", "body": "submitting current behavior used double options tag ngfor app behaved strange mobile android platform strange find problem chrashes part application expected behavior works well mobile android platform show error browser minimal reproduction problem instructions motivation use case changing behavior people met environment", "num": "19089", "d": "9/2017"}, {"title": "perf url style sanitizers relatively slow", "body": "investigating performance test sample application setup performance tracking noticed certain bindings make sanitizer kick slow views creation significantly gt benchpress results sample application without sanitizer kicking sanitizer without sanitizer observed slowdown initial view rendering ms due adding bindings similar turns though patterns trigger similar code paths sanitizer uses regular expressions figure value sanitized contains urls seems expensive part sanitization work still investigation required see mitigate performance impact various sanitizers ideas experiments run rewrite existing code use regular expressions nt use sanitizer bindings safe styles", "num": "19088", "d": "9/2017"}, {"title": "router nt detect pushstate", "body": "submitting regression behavior used work stopped working new release current behavior using historypushstate url changes router nt trigger expected behavior router able detect url changes using pushstate used previous version angularrouter minimal reproduction problem instructions use historypushstate route app motivation use case changing behavior angular version browser x chrome desktop", "num": "19086", "d": "9/2017"}, {"title": "dynamically add output properties angular component", "body": "regressio bug report feature request x documentation issue request expected behavior goal module provide generic table use want make actions data example use module create crud table want dynamically add output properties according columns attribute words let say client passed input value columns new action edit new action validate want make something similar typescript classes export class column constructor public name string export class action constructor public name string component class import component oninit input angularcore import action modelsactionmodel import column modelscolumnmodel component selector export class input columns column input actions action html trick result environment angular version tooling issues node version platform windows", "num": "19084", "d": "9/2017"}, {"title": "ng build prod javascript heap memory", "body": "ng build prod javascript heap memory", "num": "19082", "d": "9/2017"}, {"title": "bug angularformrequiredvalidator may need unregister required validator ondestory", "body": "submitting current behavior following code falsediv destroyed expected behavior unregister required validator directive destoryed motivation use case changing behavior user get right form state formcontrol parent formgroup", "num": "19081", "d": "9/2017"}, {"title": "router nt destroyed owning module destroyed", "body": "submitting current behavior destroying module uses angularrouter router still active try perform routing expected behavior call module uses angular router router longer listen hashchange popstate events try match routes components something else deactivate angular router besides would love hear nt anything missing bug debugged enough maybe close knowing enough send pr fix seems happening router class ngondestroy called module destroyed cleans subscription location reason ngondestroy nt called seems set router class matters moduledestroy called ondestroy flag needs set order ngondestroy called exactly sure reflectionjit compiler stuff get router class nodeflag set current guess might related router class formally declaring providers seem ondestroy flag set routerpreloader minimal reproduction problem instructions click navigate angular app click navigate nonangular app view errors browser console motivation use case changing behavior problematic navigate route angular router nt know dormant route singlepage app consists routes owned angular routes owned something else seem possible turn angular router even calling environment", "num": "19079", "d": "9/2017"}, {"title": "spelling error angular docs", "body": "submitting x documentation issue request current behavior wrong sentence component make request ca nt actually delete hero expected behavior correct sentence component makes request ca nt actually delete hero minimal reproduction problem instructions see", "num": "19078", "d": "9/2017"}, {"title": "aot watch mode honor pretty warnings errors", "body": "submitting current behavior errors monotone terminal expected behavior using flag pretty print errors similar minimal reproduction problem instructions add parameter compileroptions tsconfig set true motivation use case changing behavior typescript outputs errors terminal error contextually highlighted word red highlight grabs attention developers standard color terminal window environment", "num": "19077", "d": "9/2017"}, {"title": "running aot development mode sourcemap missing", "body": "submitting current behavior error appears browser console put mode run angular development mode expected behavior browser able find source maps local machine minimal reproduction problem instructions observe issue browser motivation use case changing behavior browser able find source maps local machine environment", "num": "19076", "d": "9/2017"}, {"title": "directive memory leak dom nodes", "body": "submitting bug report current behavior simple directive creates new element appends host element directive applied template component nested inside repeater array gets updated navigate back forth pages nodes count continue go expected behavior detached node flush memory minimal reproduction problem instructions click load posts button posts page keep pressing load button return home page click load posts button environment chrome desktop version", "num": "19072", "d": "9/2017"}, {"title": "httpparams nt accept array", "body": "submitting current behavior accepted compiled ts set method accepts string expected behavior able set array serializer make like ids amp ids amp ids amp ids minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19071", "d": "9/2017"}, {"title": "redirects auxiliary route prevent redirects", "body": "submitting current behavior using named router outlets prevent redirects mandatory redirects auxiliary routes define redirect absolute applyredirectsts using absolute paths prevents router evaluating redirects applyredirectsts without named outlets relative relative relative app redirect gt redirect b gt b redirect gt named outlets relative absolute app redirect gt redirect bx x gt bx x second redirect missing expected behavior using auxiliary routes prevent redirects expected result named outlets relative absolute relative app redirect gt redirect bx x gt b redirect gt x minimal reproduction problem instructions check plunker reproduce bug empty routeroutlet demo illustrates missing redirect motivation use case changing behavior relative redirects work expected even auxiliary routes environment", "num": "19069", "d": "9/2017"}, {"title": "form validation fails randomly", "body": "submitting current behavior form inputs validations randomly test used fail tried running test loop observed issue html test snippet let lt fit validate form features async gt pageaddregisterspy function printformerrorifany selector let ngform thisfindform selector ngforminvalid consolelog invalid ngforminvalid consolelog valid ngformvalid consolelog errors ngformerrors consolelog submitted ngformsubmitted logs values log valid false log ngform submitted true ngsubmit eventemitter isscalar false observers closed false isstopped false haserror false thrownerror null isasync false form formgroup validator null asyncvalidator null oncollectionchange function pristine false touched false ondisabledchange controls object name email phone valuechanges eventemitter isscalar observers closed isstopped haserror thrownerror isasync statuschanges eventemitter isscalar observers closed isstopped haserror thrownerror isasync statulog ngform submitted true ngsubmit eventemitter isscalar false observers closed false isstopped false haserror false thrownerror null isasync false form formgroup validator null asyncvalidator null oncollectionchange function pristine false touched false ondisabledchange controls object name email phone valuechanges eventemitter isscalar observers closed isstopped haserror thrownerror isasync statuschanges eventemitter isscalar observers closed isstopped haserror thrownerror isasync status invalid value object name email phone errors null expected behavior ngformvalid true cases failing moved minimal reproduction problem instructions motivation use case changing behavior registration page ongoing app environment test", "num": "19067", "d": "9/2017"}, {"title": "plunker working", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19066", "d": "9/2017"}, {"title": "duplicate method corejs bundle", "body": "submitting current behavior corejs bundle generated duplicate get method injector class causes strict mode validation fail using closure compiler suspect result transpiling generic typescript methods javascript corejs expected behavior duplicate methods class invalid strict javascript minimal reproduction problem instructions look inside corejs bundle injector class motivation use case changing behavior duplicate method causes closure compiler strict check fails described environment", "num": "19063", "d": "9/2017"}, {"title": "tracking issue angular buildtools convergence abc", "body": "opensourcing toolchain use internally google build angular apps scale onepager issue used give updates progress faq relate angular cli evaluate toolchain early adopters first goes well evaluate whether use inside cli long nt ejected cli change transparent users", "num": "19058", "d": "9/2017"}, {"title": "bundled rollup amp closurecompiler", "body": "submitting current behavior rollup closurecompiler bundle optimize build without warnings error happens browser console within build chrome version official build expected behavior rollup closurecompiler able interpret output minimal reproduction problem instructions motivation use case changing behavior angular able built bundled rollup closurecompiler similar environment", "num": "19057", "d": "9/2017"}, {"title": "links working angular live examples", "body": "submitting current behavior links live examples angular tutorial broken one gets message expected behavior loading live example plunker minimal reproduction problem instructions click live example link link motivation use case changing behavior used work environment", "num": "19056", "d": "9/2017"}, {"title": "datasrc converted src img tag", "body": "submitting current behavior attribute tag converted attribute template variable present expected behavior changed angular minimal reproduction problem instructions see first tag attribute converted motivation use case changing behavior behavior breaking integration lazy load functionality environment", "num": "19054", "d": "9/2017"}, {"title": "prevent value parsing formcontrol typenumber", "body": "submitting current behavior formcontrol declared value always parsed accessed number check expected behavior would like optout mode formcontrol get parsed perhaps adding separate attribute would motivation use case changing behavior using parse strips leftleading zeros app need get doi user may strat zero user inputs validator gets invalid due instead characters workaround use displays alphabetic keypad mobile browsers environment", "num": "19053", "d": "9/2017"}, {"title": "use bypasssecuritytrustscript", "body": "bypasssecuritytrusthtml guarantee normal implementation html js execute hope html run normaly include js code like html hello world alert hello think security chapter clear link click bypasssecuritytrustscript consider html want run js use bypasssecuritytrustscript", "num": "19052", "d": "9/2017"}, {"title": "angular routing seems reload page", "body": "submitting current behavior dynamically bootstraped angular nt use routing like change states page gets reloaded try set server side rendering use aot compiled angular expected behavior angular shouldnt reload page use tag routerlink attribute atleast minimal reproduction problem instructions current repo install dependencies run need remove preventdefault event see default behaviour motivation use case changing behavior use angularrouter components use router instead regular html navigation environment", "num": "19051", "d": "9/2017"}, {"title": "resolveend urlafterredirects defined string type urltree", "body": "submitting minimal reproduction problem instructions go plunkr click take look console motivation use case changing behavior resolveend defines wrong type urlafterredirectsmember", "num": "19050", "d": "9/2017"}, {"title": "contenttype needed capitalize", "body": "", "num": "19049", "d": "9/2017"}, {"title": "core rendererselectrootelement return null instead throw error", "body": "submitting current behavior throw error expected behavior return null motivation use case changing behavior use rendererselectrootelement selector selector match elements angular throw error hope angular return null documentqueryselector", "num": "19048", "d": "9/2017"}, {"title": "multiple sync async combined conditions ngif work spected", "body": "submitting current behavior component public variables template expected behavior show message items found stop loading items loading variable set false items array empty minimal reproduction problem instructions see code motivation use case changing behavior multiple sync async combined conditions ngif environment", "num": "19047", "d": "9/2017"}, {"title": "params \u53ef\u4e0d\u662f paramsmap", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "19046", "d": "9/2017"}, {"title": "lazy load prod", "body": "hi mgechev plans merge branch lazy master implement lazy loading production time soon thanks", "num": "19045", "d": "9/2017"}, {"title": "appending header httpheaders angularcommon nt work", "body": "submitting current behavior use console get null expected behavior see console minimal reproduction problem instructions plunker gives error import httpclientmodule steps using angular cli ng new si cd edit packagejson replace old angular version current angular version ssave npm install edit appmodulets edit appcomponentts ng serve check console output motivation use case changing behavior change expected behavior need exact behavior environment", "num": "19044", "d": "9/2017"}, {"title": "staticreflector change breaks language service used", "body": "submitting current behavior prior language service could used project allowing one language service angular versions expected behavior language service work versions angular minimal reproduction problem instructions use language service project uses opaquetoken note spurious diagnostics reported bout able resolve opaque token recommended fix revert changes staticreflectorts", "num": "19039", "d": "9/2017"}, {"title": "injected styles nt apply html modified libraries due selectors scope", "body": "submitting regression x bug report feature request documentation issue request support request current behavior injecting styles component new element injected another library example rangy new element nt get styled even inside scoped selector expected behavior element get styled minimal reproduction problem instructions open following plunker select word black get wrapper tag class specialnote however style nt gets applied element sin component used style motivation use case changing behavior injected styles work consistently environment angular version browser x chrome desktop version tooling issues node version platform mac others open developer console modify style expected behavior happens additional test angular", "num": "19038", "d": "9/2017"}, {"title": "new version return error build", "body": "hey guys upgraded application version got uncaught error ngmodule metadata found something mind resolve issue", "num": "19037", "d": "9/2017"}, {"title": "animation triggered list length", "body": "submitting current behavior using animation bound property setting transition trigger every time property changes animation trigger property list length key points list component html itemid itemname html expected behavior animation trigger every time binding changes specified doc minimal reproduction problem instructions find plunker works parent component gives list child child displays list items applying animation every time receives new list error giving list size animation trigger case list immutable also applies simple array know binding wake async pipe something related animation work list number though instead list object motivation use case changing behavior application master details view master list list paginated want animate item every time user changes page application master details view master list children user chooses item list shows children kind tree view length children animation environment", "num": "19034", "d": "9/2017"}, {"title": "dymamic typo breaks aot", "body": "quick edit indexmetadatajson keeps beta", "num": "19033", "d": "9/2017"}, {"title": "lack animation docs", "body": "submitting official doc lacks new router animations disabled attribute information doc available matsko therefore nt know listen animation events router transition even possible would really cool able possible basic router transition system thank hard work", "num": "19032", "d": "9/2017"}, {"title": "ngc support exported symbols", "body": "know need export symbol functionclass module want use componentmodule metadata question thinking maybe ts compiler nt supply information symbols provided function collector compiler checks symbol class exported marks class error symbol comments highly appreciated", "num": "19031", "d": "9/2017"}, {"title": "support async rendering", "body": "submitting new version react introduce core feature called async rendering allows framework render lot things time without blocking main thread thanks feature ui feels much fluid see demo stacked rendering synchronous fibre asynchronous rendering compared wondering something also implemented angular plans similar feature current behavior component rendering happening synchronous blocks main thread expected behavior component rendering happening asynchronous nt block main thread", "num": "19030", "d": "9/2017"}, {"title": "exception visual studio debugging angular app application launches browser", "body": "unhandled exception line column javascript runtime error unable get property apply undefined null reference occurred code start line function combine options return object assignapply object concat options", "num": "19027", "d": "9/2017"}, {"title": "angular compiler rewrites imports", "body": "submitting current behavior using typescript define submodule repo file use import compile using ngc resolves imports correctly sometimes replaces relative path output files fine base usage try use rollup bundle packages based try include files belong submodule roots passed option rollup match rewritten paths anymore code working fine angular expected behavior imports never replaced relative paths minimal reproduction problem instructions ca nt find pattern imports modified seems changed relative path shorter name environment", "num": "19026", "d": "9/2017"}, {"title": "course angulario use ngserver sample use liteserver", "body": "course angulario use ngserver sample use liteserver ngserver build mapjs file", "num": "19025", "d": "9/2017"}, {"title": "error error encountered resolving symbol values statically", "body": "submitting current behavior currently two errors deploying project first error error error encountered resolving symbol values statically could resolve headerheadercomponent relative resolving symbol appmodule resolving symbol appmodule second error error srcmaints remote module found error ca nt resolve gendirappappmodulengfactory remote srcmaints remote multi srcmaints environment", "num": "19024", "d": "9/2017"}, {"title": "ngc produce ngfactory files since", "body": "submitting current behavior since ngc produce ngfactoryts files minimal reproduction problem instructions run compileroptions target module emitdecoratormetadata true experimentaldecorators true allowsyntheticdefaultimports true moduleresolution node sourcemap true noemit true noemithelpers true importhelpers true baseurl paths angular nodemodules angular lib dom types node exclude nodemodules dist srcplatformbrowsermainaotts srcspects filesglob srctypingscustomtypingsdts compileonsave false buildonsave false angularcompileroptions gendir srcngfactory skipmetadataemit true ngc command empty files produced errors information provided console output works expected environment angular version higher tooling issues node version platform windows", "num": "19022", "d": "9/2017"}, {"title": "could update document hero editor", "body": "obvious document date example beginning document uses npm start use ng serve instead", "num": "19021", "d": "9/2017"}, {"title": "upload example official website document github", "body": "talking example source code official website upload example code official website document github download link source hero demo", "num": "19020", "d": "9/2017"}, {"title": "upgrading ngc fails compile", "body": "submitting current behavior upgrading version ngc fails compile ngfactory files expected behavior able compile using config print error terminal minimal reproduction problem instructions issue replicated branch starter changed version number packages packagejson clone repo checkout branch follow install instructions readmemd run notice error log ngc started compiling ngfactory mainprodts error find module ngfactorytmpappappmodulengfactory warn mainprodts error find module ngfactorytmpappappmodulengfactory fails compile files ngc configured would compile moving onto fails compile motivation use case changing behavior better error handling could help resolve issue users built aot resolved environment", "num": "19019", "d": "9/2017"}, {"title": "request ability set default timezone locale date pipe application wide", "body": "submitting current behavior currently specify timezone andor locale every instance date pipe otherwise according docs specified local system timezone enduser browser used expected behavior would nice way set default values fields entire app rather add every instance date pipe motivation use case changing behavior handful date pipes throughout app would good single place change timezone locale rather change instances time want make change current application hundreds date pipes scattered throughout app environment", "num": "19018", "d": "9/2017"}, {"title": "use ternary statement inside ngmodel", "body": "trying user ternary statement inside ngmodel expression binds model newusernamefirst doe nt bind model usertoupdatenamefirst trying find answer stackoverflow nt get result place tried use statement", "num": "19017", "d": "9/2017"}, {"title": "angular language service breaks typescript intellisense vs code", "body": "submitting current behavior angular language service extension enabled files intellisense work expected behavior intellisense still work extension enabled minimal reproduction problem instructions create new ionic project select conference since complete project install angular language service test intellisense ts files repo environment", "num": "19015", "d": "9/2017"}, {"title": "ngmodulemd broken link", "body": "submitting current behavior ngmodulemd link root module link broken expected behavior link work", "num": "19014", "d": "9/2017"}, {"title": "results angularcore installed", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior install angular find rc installed rather latest stable one environment", "num": "19013", "d": "9/2017"}, {"title": "route refresh angular", "body": "submitting current behavior created new component angular added route account run ng serve home page opens link account page clicking account page link account page opens refresh page works problem make build ng build upload build apache click account link account page opens refresh try open account route directly get error add use hash works nt want using angular expected behavior every route build work page refresh directly opened environment", "num": "19009", "d": "9/2017"}, {"title": "aio refactor toh use httpclient api instead http api", "body": "submitting current behavior current version toh tutorial still uses old http api expected behavior new developers use new httpclient api instead old toh tutorial motivation use case changing behavior considering new httpclient api slowly adopted developers would reasonable show new devs api instead old avoid confusion critical area would part tutorial", "num": "19002", "d": "9/2017"}, {"title": "named routeroutlets navigating window url hopefully simple", "body": "submitting current behavior navigate correct navbarcomponent shows routeroutlet named navbar however navigate appdashboard appcentralnavbarcomponent show routeroutlet named navbar instead error error error uncaught promise error activate already activated outlet error activate already activated outlet thrown approutingts appcentralroutingts standardlayoutcomponenthtml html expected behavior expected behavior navigate routeroutlets regardless outlet name correct component based window path minimal reproduction problem instructions steps reproduce create routing approutingts create submodule appcentralroutingts navigate appdashboard see navbar outlet changes motivation use case changing behavior need change navbar based url open window navbar need different per route environment", "num": "19001", "d": "9/2017"}, {"title": "warn build time locale data never imported", "body": "submitting current behavior compiling aot mode application locale totally fine crash runtime never called proper locale data expected behavior sure trivial would great warning build time locale data never loaded minimal reproduction problem instructions project never called discussed briefly ocombe", "num": "19000", "d": "9/2017"}, {"title": "dynamically created view force parent view update", "body": "submitting current behavior follows markup dynamically creating embedded view template unexpected recursive call occurrence injected property setter creating embedded view template issue happens count reach less scenarios removing one markup breaks recursive calls minimal reproduction problem instructions plunker motivation use case changing behavior creating embedded view using template rendering widget content issue breaking functionality environment", "num": "18997", "d": "9/2017"}, {"title": "upon http get request android native browser", "body": "submitting current behavior issuing following xhr request fails message interface expected behavior request succeed subscribing observable instance passed minimal reproduction problem instructions environment angular version browser x android native browser android versions android least claimed supported angular context think problem nonsupported xhr requests android stack overflow discussion details potentially related issue angularjs", "num": "18996", "d": "9/2017"}, {"title": "rerender page events without reloading page angular", "body": "hi dropdown change language api take language parameter return response based passed language call every component ngonit method dropdown changes need rerender instead reload", "num": "18994", "d": "9/2017"}, {"title": "load component content relative templateurl", "body": "submitting current behavior angularjs user using templateurl relative path worked well new version encouter lot issues due use modules bundlers webpack working spring mvc based application thymeleaf server side templating wanted make poc angular integration want make kind mix templating know recommanded security reason want process templates server side want load components via templateurl last one relative define component following example import component angularcore component selector appsample templateurl vuesample export class samplecomponent ng build fails following error error srcappcomponentssamplesamplecomponentts module found error ca nt resolve vuesample expected behavior expected behaviour try resolve templateurl build get build without html injection bundled js want get full control rendered html server side loading component xhr start url please mentionned vuesample templateurl add notice use systemjs urls loaded without problem last occurs use webpack environment", "num": "18992", "d": "9/2017"}, {"title": "canload guard subscribe observable", "body": "submitting current behavior passing observable guard lazyly loaded module stops navigating route even boolean error messages console approutingmodule authguard typescript injectable export class authguard implements canload canactivate angularreduxstore false gt next gt true gt select readonly authenticated observable canload observable boolean return true works return thisauthenticated error routing stops current page canactivate observable boolean return true works return thisauthenticated works lazyroutingmodule expected behavior like guard guard subscribe observable minimal reproduction problem instructions set value observable true lazy load module protect via guard navigate lazy protected module via gt navigation stops environment", "num": "18991", "d": "9/2017"}, {"title": "ng build prod module found error ca nt resolve gendirappappmodulengfactory", "body": "angualrcli version angularcli node os angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice module found error ca nt resolve gendirappappmodulengfactory codeworkspacezuchewebhtmlsrc resolve gendirappappmodulengfactory codeworkspacezuchewebhtmlsrc using description file codeworkspacezuchewebhtmlpackagejson relative path src field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirappappmodulengfactory extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirappappmodulengfactory nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirappappmodulengfactoryts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirappappmodulengfactoryjs nt exist directory codeworkspacezuchewebhtmlsrc gendirappappmodulengfactory nt exist codeworkspacezuchewebhtmlsrc gendirappappmodulengfactory codeworkspacezuchewebhtmlsrc gendirappappmodulengfactoryts codeworkspacezuchewebhtmlsrc gendirappappmodulengfactoryjs codeworkspacezuchewebhtmlsrc gendirappappmodulengfactory srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomehomemodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomehomemodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentagentmodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentagentmodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentindexindexmodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentindexindexmodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactoryts codeworkspacezuchewebhtmlsr c gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentauthenticationauthenticationmodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentauthenticationauthenticationmodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentmerchantmerchantmodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentmerchantmerchantmodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactoryts codeworkspacezuchewebh tmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentenchashmentapplyenchashmentapplymodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentpersonalinfopersonalinfomodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentpersonalinfopersonalinfomodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentcarlistcarlistmodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentcarlistcarlistmodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentorderordermodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentorderordermodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints error src gendir lazy module found error ca nt resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir resolve codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactoryts codeworkspacezuchewebhtmlsrc gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir field browser nt contain valid alias configuration using description file codeworkspacezuchewebhtmlpackagejson relative path src gendir using description file codeworkspacezuchewebhtmlpackagejson relative path src gendirapphomepagesagentprofitprofitmodulengfactoryts extension field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactoryts nt exist ts field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactorytsts nt exist js field browser nt contain valid alias configuration codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactorytsjs nt exist directory codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactoryts nt exist codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactoryts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactorytsts codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactorytsjs codeworkspacezuchewebhtmlsrc gendirapphomepagesagentprofitprofitmodulengfactoryts src gendir lazy nodemodules angularcore angularcore srcmaints multi srcmaints", "num": "18990", "d": "9/2017"}, {"title": "routerlinkactive setting class using address bar", "body": "submitting current behavior using set class along button go route using button class applied go route address bar class applied expected behavior class applied even using address bar minimal reproduction problem instructions issue present following file particular node git motivation use case changing behavior fully responsive nav bar environment", "num": "18989", "d": "9/2017"}, {"body": "varghesep edit file manually change line temporary solution problem", "d": "9/2017"}, {"body": "simplest case able tell angular explicitly expected content type passing request complex cases implement interceptor could handle responsetype nt passed default json cases probably tripping believe intended behavior cc alxhub", "d": "9/2017"}, {"body": "dup", "d": "9/2017"}, {"body": "yes robwormald understand default response type json long time banked used throw parse exception making assumption nt understand assumption always made fine release also nt see good could possibly come trying parse empty string knowing get exception say undefined null guess undefined makes better sense since null parses null", "d": "9/2017"}, {"body": "please submit support request instead see", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "tbosch think problem new nt replace variable old typescript ca nt find module uses find possible workaround using options tsconfig", "d": "9/2017"}, {"body": "incidentally happy submit pull request acceptable feature", "d": "9/2017"}, {"body": "wanting deep object comparison nt think something angular provide since expensive operation misused causing slowdowns wish something like many libs sort comparison compare new values old ones check changed", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "error message updating fix", "d": "9/2017"}, {"body": "nt use method everywhere places use method like would nt change much end users since would effectively however still good idea since would make code much easier read also since recommended method", "d": "9/2017"}, {"body": "could please add details reproduce issue team works chrome time nt seen issue", "d": "9/2017"}, {"body": "vicb commented need reproduce scenario since ca nt reproduce newish versions chrome exact version using could please also try run console browser also could please test incognito mode remove chance interference browser extensions", "d": "9/2017"}, {"body": "would generate error root cause issue see regexp question whenwhy gets turned", "d": "9/2017"}, {"body": "fyi nt matter use ngcontent ngtemplateoutlet", "d": "9/2017"}, {"body": "mixing old new", "d": "9/2017"}, {"body": "yup nailed thanks trotyl sorry waste time", "d": "9/2017"}, {"body": "would nice addition indeed info future reference fwiw add chrome least go gt gt api docs use general search api guides etc use also type focuses search box type query", "d": "9/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "9/2017"}, {"body": "find usecase strange without doubt easier searach website custom search functionality fully aware youresearching might improve futue allow typos etc searching pdf document simple textsearch adding bookmarks quite possible titles subtitles anchor links reference portion text quite easy sure lot plugins make possible stick note page case pdf might prefereable offline reading service workers pwas saying implemented stating fom pov fail see would priority long time", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation angular wo nt compile problem", "d": "9/2017"}, {"body": "nsksaisaravana ca nt angular bindings html passed", "d": "9/2017"}, {"body": "perhaps mark properties getters", "d": "9/2017"}, {"body": "might safer indeed", "d": "9/2017"}, {"body": "shipiak nt reason fact used token also creation new instance use token provider", "d": "9/2017"}, {"body": "mlcmlapis tried also factory provider injection token result factory called appinitializer resolved", "d": "9/2017"}, {"body": "shipiak tried also factory loaded btw general nothing section loaded eagerly first use something else code invokes factory", "d": "9/2017"}, {"body": "mlcmlapis well course need inject services component see behavior code provided full provide plunkr would necessary", "d": "9/2017"}, {"body": "shipiak sure provide please without bit problem judge anything", "d": "9/2017"}, {"body": "mlcmlapis sorry hotheaded report right example enough reproduce cause little bit different thought issue factory providers bit complex details waiting appinitializer behaviour project service customerrorhandler implementing angularcore errorhandler coremodule provide provide errorhandler useclass customerrorhandler customerrorhandler services injected constructor eg apiservice use send error reports backend service configservice using appinitializer pattern works correctly services except apiservice apiservice constructed appinitializer without proper config soon remove injection apiservice customerrorhandler constructor everything works correctly also apiservice issue seems errorhandler injected somewhere appinitializer resolved triggers also injection construction chain services used customerrorhandler even know correctly name bug seems wrong update original report add plunkr report new one many thanks help", "d": "9/2017"}, {"body": "believe answer thanks help anyway", "d": "9/2017"}, {"body": "shipiak understand points main thing seems decide first chicken egg able also catch error appinitializer resolving open new issue plunker also needed still sure issue feature request interesting theme resolved clearly design follow", "d": "9/2017"}, {"body": "guilhermevrs thanks noticing fix cc igorminar", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "certainly local problem works usual create simple plunker demo see nt problem", "d": "9/2017"}, {"body": "change ngafterviewinit ngoninit angular fills static view queries creation view therefore viewchild filled make async promise settimeout", "d": "9/2017"}, {"body": "classical example read first", "d": "9/2017"}, {"body": "making async worked thank", "d": "9/2017"}, {"body": "kubernetes api accepts body delete endpoints swagger codegen using code pr failing httpclient delete wo nt accept body", "d": "9/2017"}, {"body": "seems like spec explicitly forbid delete body even server seem ignore", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "ok thank", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "sorry good plunkr found also information issue maybe post useful understanding", "d": "9/2017"}, {"body": "probably http response payload empty non json format case error", "d": "9/2017"}, {"body": "repro actionnable probably duplicate", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "dear fabian thank reply way describe see succeeded isolate problem found using angular nodejs chrome creates unexpected behavior order give happens glad send link application upload github supply link guidance could see thanks advance eyal nahum wed sep fabian wiles notifications githubcom wrote thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template receiving authored thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "near impossible identify issue angular full application since many factors could causing issues want make reproduction minimal reproduction would best way go outlined submission guidelines", "d": "9/2017"}, {"body": "truly understand meaning fabian nevertheless bug reproduced taking simple code complex issue unexpected behavior relates google chrome angular behind code app works fine using firefox glad something else promote issue together otherwise could make major issues future commercial applications wed sep pm fabian wiles notifications githubcom wrote near impossible identify issue angular full application since many factors could causing issues want make reproduction minimal reproduction would best way go outlined submission guidelines contributingmd submittinganissue receiving authored thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "realistic try confirm behavior devices one even different chrome versions", "d": "9/2017"}, {"body": "mlcmlapis issue important last thing want spend anybody time important cooperate order prevent major issues happen future succeeded eventually isolate problem edited case necessary details anything else need available", "d": "9/2017"}, {"body": "good problem description looks much better description clear using looks steps adding item shopping list array looks like navigation query param route param say nt see similar case result like something wrong code leads situation could also problem combination chrome result unexpected edge case certainly related routing github repository app try locally btw extra reasons use instead", "d": "9/2017"}, {"body": "hi milo\u0161 thank reply regarding hashlocationstrategy routing something nt add created angular cli generated new project uploaded app github thank providing additional help appreciate waiting reply thanks advance", "d": "9/2017"}, {"body": "inspected app confirm issue angular shopping list component inside button type submit since nt using angular forms bind event default behavior post data url causes page refresh would suggest walking tutorial getting started angular might help things like", "d": "9/2017"}, {"body": "toxicable thank reply noticed mistake changed typebutton got fixed curiosity debugging order find root problem guide", "d": "9/2017"}, {"body": "noticed would appear url clicking add indicates post checked button guessed post", "d": "9/2017"}, {"body": "toxicable mlcmlapis great thank sharing information appreciate support great day", "d": "9/2017"}, {"body": "whatever reason ca nt sign telnyx using google sign snippet shows little investigate using emailpassword login seems work without issues seems related signing identity provider afraid much without reproduction already mentioned reason nt play safe check tends hide issue performance problems app see references issues details happy look soon get hands reproduction ideally minimal nonminified code know might lot ask smiley", "d": "9/2017"}, {"body": "would help version source files mangled look stack exception thrown appears something uirouter calling redirect new path looks like using bugsnag monkeypatched wrapped call something possible appears also monkeypatched zones turn triggering hook triggering another try removing bugsnag library also provide version source files minified", "d": "9/2017"}, {"body": "pretty sure stepping code bugsnag causing problem", "d": "9/2017"}, {"body": "disable bugsnag staging environment see fix problem nt turn minification temporarily kind complicated get back hours thank much help", "d": "9/2017"}, {"body": "petebacondarwin turned bugsnag commented code problem still occurs going get non minified version bit", "d": "9/2017"}, {"body": "petebacondarwin gkalpak ok cool uploaded go nt sourcemaps code minified help couple things keep mind order reproduce bug clean cache recommend devtools empty cache hard reload unfortunately cant sign free gmail account change", "d": "9/2017"}, {"body": "anything else assist let know andrewl telnyxcom get back fast humanly possible thank much helping yall heros", "d": "9/2017"}, {"body": "underlying process looks like url changed outside maybe google auth library maybe uirouter latter think next digest change url triggers watcher tries resynchronise browser url writes triggers event angular used sets handler events zone library wraps handler reason logging first time cache cleared zone library decides need run hook hook handled ngupgrade triggers new digest bam error question trouble answering first login causes zone library trigger hook think might need pull big guns mhevery perhaps help dig happening zones", "d": "9/2017"}, {"body": "petebacondarwin champion point need figure know information type angulardevtools witchcraft need learn order able exciting news end gitter channel mysterious person name derekkite noticed bug similar bug one suggested running zone solution worked looked like least end solution appears worked know worked watched zonejs ngconf talk one dude understand level zonejs appreciation however super interested anything change order solve issue fact issue minimum seems like good idea add solution documentation somewhere", "d": "9/2017"}, {"body": "reason solution works longer running function inside angular zone means popstate event triggered ngupgrade handler called turn trigger digest normally dangerous thing anything follows zone async tasks triggered via original call trigger change detection angularjs angular parts app case imagine going impact app much guess depends handler", "d": "9/2017"}, {"body": "glad workaround find start missing change detections know look", "d": "9/2017"}, {"body": "petebacondarwin experience strength angular angular way things obvious problem however deviating explicitly angular way things leads lot pain confusion much prefer things angular way working angular really want know align typically done different angular way think fixing problem direction point worries already done much help understand problem rule", "d": "9/2017"}, {"body": "andrewltelnyx petebacondarwin would like help debug issue try debug trigger", "d": "9/2017"}, {"body": "andrewltelnyx btw something noticed looking code using schedule operation per second cache saw iirc since called inside angularjs bootstraped inside angular zone means times per second get new emission ie angular change detection per second change took quick look take grain salt worth looking probably related issue mentioning headsup might also interested new api introduced allow bootstrap angularjs outside angular zone avoid emission docs still progress get preview suited architectures try keep two parts decoupled sure works interleaving angularangularjs components wo nt work might manually trigger change detections often eg rely global app state services instead propagating via component inputs", "d": "9/2017"}, {"body": "tried subscribe route changes import rxjsaddoperatorfilter import component angularcore import router angularrouter import navigationend angularrouter import activatedroute angularrouter component selector app templateurl appcomponenthtml styleurls appcomponentscss export class appcomponent", "d": "9/2017"}, {"body": "available helllike construction import rxjsaddoperatorfilter import rxjsaddoperatormap import rxjsaddoperatormergemap import component angularcore import router angularrouter import navigationend angularrouter import activatedroute angularrouter component selector app templateurl appcomponenthtml styleurls appcomponentscss export class appcomponent children thisrouter events filter e gt e instanceof navigationend map gt let route thisactivatedroutefirstchild let child route", "d": "9/2017"}, {"body": "case need see looks appcomponentts import component oninit angularcore import testservice servicestestservice component selector tstroot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent implements oninit title tst races array constructor private testservice testservice ngoninit thisraces thistestservicelist", "d": "9/2017"}, {"body": "missing annotation support requests like live stackoverflow github", "d": "9/2017"}, {"body": "benelliott thank hint sorry thought issue angular done lot research stackoverflow internet general nt find solution thought angular issue closing thank sorry", "d": "9/2017"}, {"body": "upgradeadapter belongs old dynamic ngupgrade imported deprecated since recommended new projects thus update developer guide examples showing instead use newer aotcompatible ngupgrade imported fwiw wrapper around nt working problem lying somewhere else found something wrong docs eg broken example running believe bug please create new issue detailed instructions reproduce problem ideally minimal live reproduction use template reproduction also good illustration bootstrap hybrid app using closing since actionable", "d": "9/2017"}, {"body": "george thanks quick response help reason following code nt work sure export class appmodule constructor private upgrade upgrademodule ngdobootstrap thisupgradebootstrap documentbody heroapp strictdi true ngdobootstrap nt get called move thisupgradebootstrap documentbody heroapp strictdi true constructor work ngdobootstrap called missing something", "d": "9/2017"}, {"body": "bootstraping decorator look like example components wo nt get called iirc", "d": "9/2017"}, {"body": "george see responses appmodule bootstrapped follows import platformbrowserdynamic angularplatformbrowserdynamic platformbrowserdynamic bootstrapmodule appmodule ngmodule bootstrap looks follows ngmodule exports imports providers export class xxxmodule", "d": "9/2017"}, {"body": "weird could try reproduce template", "d": "9/2017"}, {"body": "apologize sent wrong ngmodule looks like bootstrap ngmodule providers declarations imports exports entrycomponents bootstrap name component export class appmodule modified removing bootstrap component putting component entrycomponents modified class follows export class appmodule constructor private upgrade upgrademodule ngdobootstrap thisupgradebootstrap documentbody myapp strictdi true angular components nt load get errors good news upgradebootstrap working loads angularjs module reason ca nt put thisupgradebootstrap constructor maybe another suggestion", "d": "9/2017"}, {"body": "guess angular components nt loading nt downgraded root component documented hybrid apps angularjs needs root template sets things needed upgradeddowngraded components shown template shared want angular root element downgrade angular use indexhtml demoappcomponentts must call constructor reason could try following work around demoappmodulets ts export function getrootscope upgrade upgrademodule return upgrade inejctorget rootscope ngmodule providers provide scope usefactory getrootscope deps upgrademodule bootstrap demoappcomponent export class demoappmodule constructor upgrade upgrademodule upgradebootstrap seems turned support request github right place appropriate places getting help types issues wink", "d": "9/2017"}, {"body": "thanks try also one last question timelines angular", "d": "9/2017"}, {"body": "approximate schedule", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "sure empty response apparently though actually work either way think expected behavior throw error cases regardless status code return nt empty response always allowed even example says created nt return anything nt checked rfc speaking experience", "d": "9/2017"}, {"body": "ref", "d": "9/2017"}, {"body": "would ok closing work expected plus valid ts error related angular", "d": "9/2017"}, {"body": "vicb sorry ts error see used comparison component code ts ok", "d": "9/2017"}, {"body": "use directives nt need template", "d": "9/2017"}, {"body": "may need styles dynamically created dom", "d": "9/2017"}, {"body": "route restore loads empty restorecomponent logic session restoring redirect use case example", "d": "9/2017"}, {"body": "duplicate", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "novicekang device browser", "d": "9/2017"}, {"body": "old chrome browser", "d": "9/2017"}, {"body": "chromium", "d": "9/2017"}, {"body": "browsers fine nt think big problem", "d": "9/2017"}, {"body": "ooc os screen resolution window width", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "browsers", "d": "9/2017"}, {"body": "may core compatible", "d": "9/2017"}, {"body": "also windows could nt reproduce resolution afraid ca nt much without reproduction happy investigate anyone provide info", "d": "9/2017"}, {"body": "currently number different projects would certainly nice part framework may efficient way example may going level deep would nice go whole tree mentioned op", "d": "9/2017"}, {"body": "related", "d": "9/2017"}, {"body": "dominiquemueller thanks yep also mentioned issue", "d": "9/2017"}, {"body": "ah yes overlooked one nt issue duplicate", "d": "9/2017"}, {"body": "really issue talks changing current behavior suggesting add new method", "d": "9/2017"}, {"body": "cloned repo run commands coulndt reproduce problem movies list get filled couple seconds also lot typings errors emitted webpack guess nt affect app btw keep mind recommended call appmodule method angularjs bootstrapped inside angular zone", "d": "9/2017"}, {"body": "thank gkalpak moving appmodule method fixed tada seems problem caused angularjs running outside angular zone meaning manual changes url plain hyperlinks trigger change detection anyone issue future example repo fixed commit created branch original broken setup thanks rapid helpful response", "d": "9/2017"}, {"body": "right write different url avoid error desktop route path login loadchildren loginloginmodule loginmodule mobile route path login loadchildren mobileloginloginmodule loginmodule otherwise wo nt work", "d": "9/2017"}, {"body": "met error write different url like according official doc write absolute path method think good one", "d": "9/2017"}, {"body": "think cli fault", "d": "9/2017"}, {"body": "wrong repo", "d": "9/2017"}, {"body": "sounds like angularjs issue repo angular angularjs repo reopen issue think bug angularjs providing minimal reproduction problem ask help one general support channels", "d": "9/2017"}, {"body": "perrierism hi quite sure actually wrong overview talking gets generated automatically underlying source class duplicated functions one actuall class another inherits take instance maybe nt think wardbell classoverview template according memberhelper tuned", "d": "9/2017"}, {"body": "oh looking code renders class found also writes comment overview actually nt see tbh bit confusing yes", "d": "9/2017"}, {"body": "hmm yes noticed bit subtle easy change could split overview codeexample section short explanation plain text rather comment code something like overview formgroup methods inherited abstractcontrol would make clear imo agree probably nt listed inherited method since one takes different parameters called formgroup", "d": "9/2017"}, {"body": "im sorry cant replicate issue investigate issue reporting", "d": "9/2017"}, {"body": "look source find passed directive", "d": "9/2017"}, {"body": "tried everything think problem still exists even tried wrapping checkbox template declared variable declared variable correct displayed via interpolation still first series directive seems something making change directive cache value going go back work plunker see break", "d": "9/2017"}, {"body": "close turns problem materializecss angular sorry", "d": "9/2017"}, {"body": "could closed thanks", "d": "9/2017"}, {"body": "nt think anything web workers changing title", "d": "9/2017"}, {"body": "ngfor ngif definitively work svg elements long import commonmodule seems case ie used might web workers try change order module imports webworkers first common module", "d": "9/2017"}, {"body": "yep commonmodule added modules works fine without webworkers ok webworkers commonmodule raise error deactivate commonmodule webworker layer first error appeard ngif showticks maybe think conflict betwen webworkers commonmodule svg features reorderer project thanks", "d": "9/2017"}, {"body": "help understand problem also tested simple svg control ngif works fine something cause problem", "d": "9/2017"}, {"body": "read doc browsermodule calls commonmodule could something like problem whit svg group", "d": "9/2017"}, {"body": "created another simple test test webworker ngwebworkerscharts code another module inside folder error", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "help takes secs load", "d": "9/2017"}, {"body": "really right place ask type support question see comment ericmartinezr", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "already nobody answer", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "fact question nt answer nt make appropriate probably need reformulate question add details narrow problem etc case nt belong", "d": "9/2017"}, {"body": "try type indeed two different instances", "d": "9/2017"}, {"body": "right made mistake plunker closing thanks", "d": "9/2017"}, {"body": "duplicate", "d": "9/2017"}, {"body": "duplicate", "d": "9/2017"}, {"body": "closing duplicate thanks trotyl", "d": "9/2017"}, {"body": "duplicate support request", "d": "9/2017"}, {"body": "two lines incorrect parameters pr welcome", "d": "9/2017"}, {"body": "woops bad copy paste gon na fix thanks reporting", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "lot code plunks unrelated reported issue please make minimal reproduction issue", "d": "9/2017"}, {"body": "assigning ocombe working pipes short story pipes relies intl api broken browsers angular come much robust pipes independent intl api", "d": "9/2017"}, {"body": "flagged regression version working previously", "d": "9/2017"}, {"body": "nt see reasonable way solve issue think would unreasonable would confusing make render falsey values excluding suggestion work around would wrap value object", "d": "9/2017"}, {"body": "toxicable think meant also including value least still probably really minor importance practically nonsense trying solve angular design", "d": "9/2017"}, {"body": "angularjs custom conversion boolean considered bug already fixed breaking change values f false n longer treated falsy javascript falsy values treated falsy expression parser six false null undefined nan", "d": "9/2017"}, {"body": "yep path angularjs nt want get falsy js ngif specialcasing subset falsy values closing wo nt fix", "d": "9/2017"}, {"body": "think really wants way create template var eg add prop context decoupled structural directive ngif case something like html currently nobody available one person peoplelength persons since op said like work streams much possible avoid subscribing hand observables think real issue", "d": "9/2017"}, {"body": "related", "d": "9/2017"}, {"body": "yessss ghetolay exactly talking victornoel nt know formulate extracting observable pointed ghetolay would okhand", "d": "9/2017"}, {"body": "apparently problem extension killed restarted reenabled working", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "toxicable yes point listed interface decorator user browses decorators core injector decorators shown", "d": "9/2017"}, {"body": "interface", "d": "9/2017"}, {"body": "toxicable also decorator function interfaces called end user uses contentchild decorator function even contentchilddecorator would expect listed decorator assume makes sense document angular team clear regression documentation user point view", "d": "9/2017"}, {"body": "right decorator type used consistently point seem missing guess way exported example component immediatelly exported decorator since tag docs recognize contentchildren exported type alias looks like need tweak precedence label symbols docs make stronger", "d": "9/2017"}, {"body": "cc petebacondarwin", "d": "9/2017"}, {"body": "magic guess pair interface function fact decorator suspect structure typescript defines changed guessing engine missing decorators look thanks notification bisubus", "d": "9/2017"}, {"body": "ca nt use jsdoc tag", "d": "9/2017"}, {"body": "sure mean lazarljubenovic thing information decorator doc spread interface function need find sure could ask developers use jsdoc tag annotate code decorator practice nt need happen long code continues structured way expect", "d": "9/2017"}, {"body": "case interested code guessing", "d": "9/2017"}, {"body": "reason failure guessing algorithm", "d": "9/2017"}, {"body": "answer posted stackoverflow explains smiley", "d": "9/2017"}, {"body": "gkalpak thanks", "d": "9/2017"}, {"body": "closing seems like need annotate closurecompiler make incoming children properly typed", "d": "9/2017"}, {"body": "acopalipsis click run cd whole app default", "d": "9/2017"}, {"body": "mlcmlapis understand behavior expected cd changedetection default behavior overridden", "d": "9/2017"}, {"body": "acopalipsis yes three yes expected cd runs bindings whole app default yes cd short changedetection yes use strategy control exactly component branch whole app tree refreshed related components depend", "d": "9/2017"}, {"body": "support request add new routes method router would nt necessarily bootstrap prior bootstrap provider add routes bootstrap user able navigate directly route example", "d": "9/2017"}, {"body": "ref", "d": "9/2017"}, {"body": "tried reproduce could nt create minimal reproduction eg repo clone investigate", "d": "9/2017"}, {"body": "gkalpak creating project reproduce", "d": "9/2017"}, {"body": "alxhub thoughts thanks", "d": "9/2017"}, {"body": "could work around angularuniversal setting skiptemplatecodegen true angularcompileroptions tsconfigjson regression ngc fixed", "d": "9/2017"}, {"body": "sideeffect ignoring consider paying attention avoid breaking builds used instead work around issue details reason location moves typescript infers base directory common root directory files included project without gendir factory files produced corresponding directory makes inferred project root directory instead directory containing file supplying caused files generated subdirectory directory containing file avoiding issue supplying avoids issue factory files generated added project avoiding issue", "d": "9/2017"}, {"body": "note non trivial drive generated path file path file several places angular", "d": "9/2017"}, {"body": "reference aslong exported evaluate functions aot run statically meaning running code see", "d": "9/2017"}, {"body": "toxicable supported call expression lowering rewrite code export value", "d": "9/2017"}, {"body": "oh good hear thanks update", "d": "9/2017"}, {"body": "vicb indeed fantastic", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "please update", "d": "9/2017"}, {"body": "try using instead another way verify calling log error running appropriate angular zone cc jialipassion", "d": "9/2017"}, {"body": "robwormald reproduced issue fix", "d": "9/2017"}, {"body": "duplicate", "d": "9/2017"}, {"body": "returning new observable every time angular performs change detection consider storing observable component property", "d": "9/2017"}, {"body": "yes thought first place felt right declare poperties place nt possible angular know call method returned observable async pipe already told compiler explicitly expecting observable change detection watch instead method", "d": "9/2017"}, {"body": "implements controlvalueaccessor thisonchange", "d": "9/2017"}, {"body": "come", "d": "9/2017"}, {"body": "duplicate would able make minimal reproduction repository clone nt worry managed reproduce tsconfig", "d": "9/2017"}, {"body": "toxicable got thanks", "d": "9/2017"}, {"body": "one closed since already issue tracking", "d": "9/2017"}, {"body": "approaches valid also look already allows run angular angularjs app look dev guide blog posts one two among others highlight different upgrading techniques always ask help general support channels get stuck smiley closing since actionable part", "d": "9/2017"}, {"body": "change hook", "d": "9/2017"}, {"body": "actually still working fine wo nt break anything annoying", "d": "9/2017"}, {"body": "trotyl yes true plunker created moment angular changes later solved specific behaviors related checking expression changes one cd nt update adapt together", "d": "9/2017"}, {"body": "typescript version", "d": "9/2017"}, {"body": "try", "d": "9/2017"}, {"body": "brooooooklyn even works", "d": "9/2017"}, {"body": "whoops works sorry time spent", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information also suggest review code conduct abide problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "igorminar please excuse turd turd angular competent architecture built people relationship weband nt think turd insult everywhere smileyturd", "d": "9/2017"}, {"body": "use angular angularjs search engine exclude results", "d": "9/2017"}, {"body": "thanks toub aware several tricks use narrowhonein search results think point making things would easier distinct name provided someone team simply considers meritscons suggestion good enough", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "ericmartinezr hmm issue seems swirled around search issue rather overarching branding bit surprised negativity around angularts suggestion guessing worried renaming wo nt help though feel like valid points make angular markedly different net core went several branding iterations amp think settled good place either way take reactnative counterexample one could make specious argument based trends reactnative framework popular based confusion trying isolate share angular term word plus version difference honestly could nt really get handle market share analysis bit tweaking", "d": "9/2017"}, {"body": "reference read branding blog article nt disagree principles laid knowing know would still consider changing primary moniker based issues laid fully expect answer flat never late change mind", "d": "9/2017"}, {"body": "agree really bad one product named angularjs named angular people constantly mix plus search engines nt know difference time waster always type something want angular angularjs angularjs rebranded something completely different like old js library longer needed obsolete angular branding took major hit naming mashup", "d": "9/2017"}, {"body": "maybe call ngx angular currently githubcom finds repos tagged w ngx", "d": "9/2017"}, {"body": "developeralex mean angular angularjs called ngx", "d": "9/2017"}, {"body": "spent lot time discussing branding past resulted branding guidelines published year ago expected take time guidelines get widely adopted reality highly visible resources updated use branding correctly long time ago since seen good adoption guidelines currently intention change see someone using terminology incorrectly help pointing blog post mentioned thank", "d": "9/2017"}, {"body": "igorminar thanks answer expected asking keep open mind since relatively new developer framework still found angular world rife confusion aside seo difficulties months blog post written", "d": "9/2017"}, {"body": "workaround", "d": "9/2017"}, {"body": "create minimal working example describes issue try angular", "d": "9/2017"}, {"body": "please note ngbootstrap modals working perfectly fine aot seen demo page difference fact using webpack angular dev kit build package app production", "d": "9/2017"}, {"body": "created test app reproduce problem unfortunately ca nt reproduce test app repo available test app different original app nt lazy load modules app uses lazy loaded module sure whether lazy loading modules causes dependencies dependencies resolved good news able fix problem app fork copy repo available run command gulp create files replace folder app new one folder run app jit mode app works run command generate aot factory files see new folder created aot process files file folder run app aot mode get error mentioned issue copy files folder change following line ngbootstrapngbootstrapmodalmodalstack lib ngbootstrapngbootstrapbundlesngbootstrapjs ngbootstrapngbootstrapmodalmodalstack lib ngbootstrapngbootstrapbundlesmodalmodalstack nb pathmap may different box important thing referenced modal directory rather bundled file done files folder run app aot mode works", "d": "9/2017"}, {"body": "observations comments approach make aot work tried different ways fix successful observations first observation aot compiler creates new folder create files see file factory files see opinion happen angular client apps developed numerous libraries use bundle file libraries angular aot create factory files factory files created client app files use app module root module aot creating factory files contains many components providers see files nt use alerts client app factory file created bundle file works jit mode able locate memory exported bundle refers internally within aot mode trying import since exported bundle ca nt import able locate object tried import bundle provide provider client app like also work", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "sorry issue caused angular", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "apply several decorators one method example plunker", "d": "9/2017"}, {"body": "related possible workaround besides trotyl suggestion", "d": "9/2017"}, {"body": "trotyl nt know thats possible ericcarraway thanks possible workaround funny enough read article long time ago", "d": "9/2017"}, {"body": "works fine", "d": "9/2017"}, {"body": "sure get chrome normal mode", "d": "9/2017"}, {"body": "check open new window live click editor area inspect element ctrlz stackblitz run iframe error happening fullscreen mode appears", "d": "9/2017"}, {"body": "also would useful see classes subclass class", "d": "9/2017"}, {"body": "show inherited public properties methods sure protected ones petebacondarwin know smiley chrisvelevitch particular example seen working list subclassing classes would nice addition indeed maybe open separate feature request", "d": "9/2017"}, {"body": "far tell public api classes members subclassed might seeing public inherited members shown see extends scroll overview class see inherited members displayed", "d": "9/2017"}, {"body": "create pr list known subclasses", "d": "9/2017"}, {"body": "petebacondarwin gkalpak noticed issue class response extends body class mention methods properties body fact documentation body class gkalpak know mousing member shows inherited feel visual inheritance clue could shown inherited member would possible sort members name would also useful", "d": "9/2017"}, {"body": "publicly exported doc", "d": "9/2017"}, {"body": "looking file exported importantly defines important methods must documented first started using class could nt figure access returned data know types data return request returned data methods inherited class documented anywhere", "d": "9/2017"}, {"body": "exported module barrel include docs needs reexported new http client library nt know many changes library receiving perhaps alxhub say", "d": "9/2017"}, {"body": "class mimic standard body class without using important methods introduced nt need care specially think one standard", "d": "9/2017"}, {"body": "think serious problem state documentation according comments code class depreciated recommended alternative class clear alternative class name documentation nt include depreciation notice direction new class name use instead assuming alternative class", "d": "9/2017"}, {"body": "chrisvelevitch code linked master branch currently probably looking documentation deprecated yet docs angular next indeed marked deprecated pointer use angularcommonhttp package instead deprecating package another one nt necessarily need mapping old classes new classes case httpresponse indeed equivalent would definitely nice make link either package api docs page better yet api querycommon prs welcome smiley", "d": "9/2017"}, {"body": "chrisvelevitch please open new issue provide pr documentation change branch wish issue closed merged", "d": "9/2017"}, {"body": "three issues issue add add ngmodule name error include module name see injector take additional optional name parameter error message creation include error look places injectorcreate gets invoked add useful name issue handle errors way method add token information way probably mean code needs extracted way reusability issue handle errors way requires changes compiler tbosch roadmap repro steps component class mycomponent construct idontexist idontexist ngmodule declarations mycomponent class mymodule produce stack trace never mentions", "d": "9/2017"}, {"body": "use case nice intermediate injectables like needs b b needs c c needs foo pretty critical teams using common components nt know ngupgraded stuff coming exceedingly useful unit testing scenario even ones without ngupgrade", "d": "9/2017"}, {"body": "lworkman observable form level also form control allows subscribe changes", "d": "9/2017"}, {"body": "mlcmlapis good point judging changes based lead false positives someone made changes deleted say hit another issue deep copying passed objects makes harder revert form", "d": "9/2017"}, {"body": "lworkman false positives yes could happen really important save send whatever another data see stream data points even use undo redo want", "d": "9/2017"}, {"body": "places angular uses objects reference think developers job pass copy object form", "d": "9/2017"}, {"body": "akagr maybe try disable handle event", "d": "9/2017"}, {"body": "jialipassion thanks check workaround unsubscribing digest event zone settlement adding back debounce since data communicated zone rootscope listener think work well", "d": "9/2017"}, {"body": "indeed listener events registered inside angular zone trigger micro task subsequently emission finally ensures two change detections wired together changes propagate across frameworks create change detection cycles frameworks apart blacklisting jialipassion suggested couple options control code registers event listener run outside angular zone use new api alternative drops angular zone lt digest wiring also bootstraps angularjs outside angular zone results much fewer change detection cycles docs still work progress get preview future might indeed make things configurable similar sugested nt decided api yet might want wait starting work pr great hear interested smiley", "d": "9/2017"}, {"body": "gkalpak awesome hear coming changes guess make current debounce solution try jump latest becomes available sounds like exactly kind thing looking already started fixing data digests become less expensive wo nt affect perf much", "d": "9/2017"}, {"body": "good idea inside component difference input activatedroute data", "d": "9/2017"}, {"body": "jrmcdona setting compwelcome test try using test suite may help default test components nt run change detection automatically enable auto change detection use beforeeach function", "d": "9/2017"}, {"body": "updated plunkr show related issue auxiliary routes affecting navigation different way", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "using version result undefined behaviour difficult debug problems give specific example problems behavior expected wait till upgrading latest ts version", "d": "9/2017"}, {"body": "give specific example problems new project ca nt tell problems thats also reason opened issue opened version nt warnings ts version opinion undesirable behaviour", "d": "9/2017"}, {"body": "received error message packagejson full error message angularcompilercli requires typescript lt found instead using version result undefined behaviour difficult debug problems please run following command install compatible version typescript npm install typescript lt disable warning run ng set global warningstypescriptmismatchfalse angularcli node os angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcli angularcompilercli angularlanguageservice typescript", "d": "9/2017"}, {"body": "related warning issued cli correct angular compatible typescript might work cases know sure cases using typescript result problems easy way work around angular fact rewrote typescript compiler integration angular compatible likely still testing able update version soon", "d": "9/2017"}, {"body": "ran problem see angular cli drags typescript npm install typescript angularcli typescript typescript invalid nt bit inconsistent first pull typescript complain", "d": "9/2017"}, {"body": "getting warning using vs code updated typescript possible get list known issues make determination want downgrade typescript", "d": "9/2017"}, {"body": "still ca nt use typescript latest angular", "d": "9/2017"}, {"body": "tylerv need angular want use ts", "d": "9/2017"}, {"body": "already pass object directly", "d": "9/2017"}, {"body": "httpparams class immutable design params passed many interceptors mutate class mutable interceptors would easily get bad state think improve documentation class make intention clear missed developers", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "hi sure bug occur session start paid referred navigate routerlink navigate navigatebyurl thanks", "d": "9/2017"}, {"body": "nt see issue angular please create minimal reproduction issue see isolation otherwise unactionable", "d": "9/2017"}, {"body": "sorry josmorsot toxicable said issue hard act create minimal preproduction explain router would interfere analytics please open new issue investigate", "d": "9/2017"}, {"body": "hi igorminar toxicable sorry response ca nt create simple snippet reproduce issue detected happening maybe idea analitycs flow check url searching utm present get referrer angular spa framework users navigate website change url lose utm referrer never change finally user access like paid search change referred utm present referrer change", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "thank much anyway", "d": "9/2017"}, {"body": "mistake issue end resolving proper package", "d": "9/2017"}, {"body": "another problem documentation results used two different purposes json file typescript file demos would clear name reused different items one figure one already understands material tinkering unwelcoming explanatory material use gratuitous ambiguity", "d": "9/2017"}, {"body": "another problem documentation environments throw error comma last array element json data would safer leave comma", "d": "9/2017"}, {"body": "version gets much functionality working httpclientmodule two methods heroservicets working properly create update", "d": "9/2017"}, {"body": "confirm template content content content content", "d": "9/2017"}, {"body": "someone points right place work pr fix might also dig code time", "d": "9/2017"}, {"body": "workaround anyone curious needs", "d": "9/2017"}, {"body": "anybody", "d": "9/2017"}, {"body": "issue", "d": "9/2017"}, {"body": "problem", "d": "9/2017"}, {"body": "option deprecated since effect use instead", "d": "9/2017"}, {"body": "worked", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "duplicate", "d": "9/2017"}, {"body": "issue following link resolved", "d": "9/2017"}, {"body": "nt follow want exactly aot work module must statically analyzable meaning modules must present known build time provide aot run exception rule", "d": "9/2017"}, {"body": "technically fully possible mapping angular packages global variable use mapping bundling module covered angular cli need customize build process could easily done rollup also work webpack ngmodulefactoryloader without systemjs dependency would helpful", "d": "9/2017"}, {"body": "trotyl yeah sure actually made poc exactly lot drawbacks miss globaly optimizations large bundle sizes one would recommend", "d": "9/2017"}, {"body": "toxicable yep treeshaking would available case still much better jit execution performance ok local admin platforms worry network speed", "d": "9/2017"}, {"body": "toxicable could share poc lazy load dynamic modules jit right", "d": "9/2017"}, {"body": "hi trotyl global variables javascript file loading lazy load jit want aot could nt", "d": "9/2017"}, {"body": "use instead bundle router delegate passed string values load want", "d": "9/2017"}, {"body": "antoniojim im sure work box made also remember nt recommend approach", "d": "9/2017"}, {"body": "toxicable thanks try means build packages aot isolated way taking account export everything shared global variables right", "d": "9/2017"}, {"body": "thanks comment", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "ohh got thanks", "d": "9/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "9/2017"}, {"body": "typos code example missing info incase referring boolean trigger values fix closing please reopen working plnkr example incase linked pr nt fix issue", "d": "9/2017"}, {"body": "deprecated favour httpclient see would mind checking httpclient see issue persists", "d": "9/2017"}, {"body": "look next days passing arguments directly httprequest instead using getpostput pretty much working nt think saw httpclient quickstart bundle using angular client probably require additional efforts", "d": "9/2017"}, {"body": "using cli already use", "d": "9/2017"}, {"body": "please report angularcli issues repo look duplicates full", "d": "9/2017"}, {"body": "hi team looks like version compatible running ng build prod seeing lot providers found issue specific prod mode build normal ng serve continous work note version still works even ng build prod thanks", "d": "9/2017"}, {"body": "anandakumarpalanisamy issue related reported one one mention already reported already pr fix", "d": "9/2017"}, {"body": "updating angularcli works hope nt break existing application previous version", "d": "9/2017"}, {"body": "fix remaining issues expect tuesday morning pst", "d": "9/2017"}, {"body": "duplicate", "d": "9/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "9/2017"}, {"body": "sounds like bug maybe wrong bug lazy loaded module routes evaluated problem solved import admin module app module client module lazy loaded concept", "d": "9/2017"}, {"body": "looks like dup", "d": "9/2017"}, {"body": "closing duplicate pr pending fix expect new release later today", "d": "9/2017"}, {"body": "thats confusing", "d": "9/2017"}, {"body": "call", "d": "9/2017"}, {"body": "sure like firstly seems lot boilerplate even definition state need decorator custom function every time want update state need think implementation detail use usual assignment instead special function reminds much react impression angular trying avoid something like api expect angular decorator love angular first place components classes hints angular form metadata explain angular class relate view tied plus information change detection strategy use view class still simple class represents model strip metadata see introduction completely breaks mental model ca nt new decorator solve mention currently decorator needed tell compiler inject cdref time serve setter call sure see reason reactlike function", "d": "9/2017"}, {"body": "component service inject changedetectorref statesalutation providers state class mycomponent constructor public state state thisstateupdate state gt statesalutation hello bye thisstateupdate state gt statesalutation bye problem add providers proposal another con ca nt init state use init value type need explicitly define interface could still use token provide component inject sugar hide user may work still ca nt induce type init state need interface", "d": "9/2017"}, {"body": "mhevery considered approach stenciljs looks similar", "d": "9/2017"}, {"body": "mobx connector angular currently works similar lazarljubenovic proposed given component typescript import observable mobxangular class mycomponent observable foo bar service typescript import observable mobxangular injectable class mystore observable foo bar template references observable property structural directive automatically run change detection observable property modified currently using project instead seems working well far", "d": "9/2017"}, {"body": "closing still hotly debating syntax everybody freaking", "d": "9/2017"}, {"body": "also getting provider issue aot build", "d": "9/2017"}, {"body": "oh thank god thought crazy started happening", "d": "9/2017"}, {"body": "issue resolved release sorry regression seems somehow published bad build investigating root cause regression improving release scripts", "d": "9/2017"}, {"body": "michaelsolati ditto build failing kept scratching head wondering wrong guess compiler wrong", "d": "9/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "9/2017"}, {"body": "mhevery using null platform actually increases mainjs file size need look whether still grabbing code build", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "first would introduce zone monkeypatch zonepatchrxjs", "d": "9/2017"}, {"body": "like linbolen said provided patch sample", "d": "9/2017"}, {"body": "need use latest master branch zonejs solve problem", "d": "9/2017"}, {"body": "mrblaise yes need update import", "d": "9/2017"}, {"body": "jialipassion thanks seems work nt know monkey patch", "d": "9/2017"}, {"body": "jialipassion applying together temporary step actually using systemjs loader cli leads problem contains", "d": "9/2017"}, {"body": "mlcmlapis post full html", "d": "9/2017"}, {"body": "jialipassion sure", "d": "9/2017"}, {"body": "mlcmlapis import several libraries try load load", "d": "9/2017"}, {"body": "jialipassion thanks tip added calling last script problem still using error place line parameter know plan new version rxjs patch included could rxjs", "d": "9/2017"}, {"body": "jialipassion problem probably first condition met even loaded beginning systemjs syntax used means loaded systemjs", "d": "9/2017"}, {"body": "mlcmlapis try provide sample know plan zonepatchrxjs new version rxjs patch included could rxjs mean new api sure new apis provide new patch repo", "d": "9/2017"}, {"body": "jialipassion thanks reply would great check simple case side strange thing defined systemjs lib first condition fine invoked properly systemjs loader also true transpiled ts code js contains line beginning", "d": "9/2017"}, {"body": "mlcmlapis familiar config load javascript everything fine", "d": "9/2017"}, {"body": "jialipassion syntax right problem rxjs bundle possible use umd bundle loaded angular internal structure rxjs rxminjs long story simply load course angular able use know author patch author conditions beginning decide would loaded rxjs count systemjs", "d": "9/2017"}, {"body": "jialipassion following steps solve problem original transpiled module format possible use directly inbrowser transpiler would necessary transpiled source module format first necessary configure importing using systemjs loader depends placed project directory finally importing", "d": "9/2017"}, {"body": "jialipassion problems original solving ca nt find exact description", "d": "9/2017"}, {"body": "mlcmlapis yes author currently make module make module format version post issue repository resolve issue run correct zone find changelog", "d": "9/2017"}, {"body": "jialipassion thanks reply created new issue", "d": "9/2017"}, {"body": "hooks detected compile time", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "closing", "d": "9/2017"}, {"body": "render write app would run even headless mode reason render would never methods reading although old renderer nt think though going different", "d": "9/2017"}, {"body": "suggestions browser universal way get rendered view read", "d": "9/2017"}, {"body": "stoom query manually injecting document", "d": "9/2017"}, {"body": "toxicable document universal safe window non universal safe global stay away", "d": "9/2017"}, {"body": "yup need inject", "d": "9/2017"}, {"body": "cool closing thanks help", "d": "9/2017"}, {"body": "phaedrusthegreek want events check", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "thx", "d": "9/2017"}, {"body": "confirm v work around works testing reproduce add appcomponentts add inside template added", "d": "9/2017"}, {"body": "looks like problem browser implementation code looks like style applied directly element thus leveraging browser implicit transformation camel case dash case", "d": "9/2017"}, {"body": "simple workaround would use class", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "exact thing nt think issue angular", "d": "9/2017"}, {"body": "try see trigger compilation saves without changes", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "followed procedure indicated ericmartinezr stackoverflow community able provide viable answer problem stacksoverflow entries address problem get solution read articles class dont support append child elements think think agree able edit pseudo elements dynamically must necessary functionality least framework level popularity robustness enclose sources check thanks time knowledge look forward decision tarik curto", "d": "9/2017"}, {"body": "tarikcurto would follow issue seems similar asking think may want open new feature request support request even though selected doc issue request decision part team p nice weekend", "d": "9/2017"}, {"body": "make small repository showcasing issue", "d": "9/2017"}, {"body": "tbosch need kill index rewriting feature tsickle newer closure compiler nt need", "d": "9/2017"}, {"body": "correct try console sorry misread issue yeah looks like always true", "d": "9/2017"}, {"body": "results", "d": "9/2017"}, {"body": "good catch snerks effect resulting behavior ends empty object anyway taking different code paths makes sense fix prs welcome wink", "d": "9/2017"}, {"body": "thanks gkalpak leaves question intent test", "d": "9/2017"}, {"body": "guess intention alxhub could know sure grin", "d": "9/2017"}, {"body": "seem issue", "d": "9/2017"}, {"body": "sure bug seeing error upgrading", "d": "9/2017"}, {"body": "confirm running aot reproduce replce appcomponentts open browser inspect console error provider ngform", "d": "9/2017"}, {"body": "think problem angular published npm let see compared jit aot code generated angular angular generates wrong reference controlcontainer provider jit aot null null wrong investigated angular gets reference found following formsmetadatajson angular formsmetadatajson angular since formdts export formdirectiveprovider \u0275e srcdirectivesngform export formdirectiveprovider \u0275l srcdirectivesreactivedirectivesformgroupdirective think related fact directive declares provider name", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "updated", "d": "9/2017"}, {"body": "updated get error reverting helped removed cache nodemodules installed fresh version", "d": "9/2017"}, {"body": "fpmk share small repo reproduce", "d": "9/2017"}, {"body": "alexzuza sorry fault start npm install installs seems fine", "d": "9/2017"}, {"body": "verified works fine broken feel like unit test caught release", "d": "9/2017"}, {"body": "yeah reverted ok", "d": "9/2017"}, {"body": "aot using throws throws working", "d": "9/2017"}, {"body": "aot getting", "d": "9/2017"}, {"body": "thanks alexzuza tracking root cause working fix right", "d": "9/2017"}, {"body": "ocombe release patch soon thanks", "d": "9/2017"}, {"body": "tahadinero working fix right", "d": "9/2017"}, {"body": "tahadinero nt know release new version fix week sure day yet", "d": "9/2017"}, {"body": "ocombe bmayen week great thanks lot", "d": "9/2017"}, {"body": "release probably happen later today sorry glitch", "d": "9/2017"}, {"body": "try update effect still get aot mode", "d": "9/2017"}, {"body": "confirm still issue reproduce instructions provided produces error error provider ngform", "d": "9/2017"}, {"body": "confirm well", "d": "9/2017"}, {"body": "yes nt include patch problems ci another release today sorry", "d": "9/2017"}, {"body": "think got nt know set go packagejson get version number one one angular ex angularcommon replace every careful tu change ran npm install worked checked ng v hope helped", "d": "9/2017"}, {"body": "think got maximebourdel install install read caret ranges specifications use tester play", "d": "9/2017"}, {"body": "version issue solved read multiple questions related issue stating reactive forms failing aot one question aot production ready", "d": "9/2017"}, {"body": "feelthescintillation", "d": "9/2017"}, {"body": "cherrypicked fix branch cut release resolve problem", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "igorminar fixed issue thanks", "d": "9/2017"}, {"body": "confirm fixed issue well", "d": "9/2017"}, {"body": "igorminar fix made branch well", "d": "9/2017"}, {"body": "confirm problem resolved thanks", "d": "9/2017"}, {"body": "thanks update fixes problem", "d": "9/2017"}, {"body": "run gona fix problem", "d": "9/2017"}, {"body": "still nt appear fixed branch coming soon", "d": "9/2017"}, {"body": "temporary workaround beta", "d": "9/2017"}, {"body": "issue version made next steps replace packagejson file angular packages run works thanks everyone", "d": "9/2017"}, {"body": "also something similar happen case navigating routes still works ngoninit error would always load additional components routeroutlet without disposing old ones plunker", "d": "9/2017"}, {"body": "annoying bug could nt believe browseranimationsmodule module causes example without router btw duplicate", "d": "9/2017"}, {"body": "submit pr fix one", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "exactly issue updating angular resolving symbol \u0275e angularcorecoredts toxicable sure angular issue", "d": "9/2017"}, {"body": "yup generally casued error application unless produce minimal reproduction point angular specifically causing error", "d": "9/2017"}, {"body": "ok confirm angular issue fixed mine cleaning whole project building beginning apparently leftovers js transpiled files", "d": "9/2017"}, {"body": "report angularjs repo greater", "d": "9/2017"}, {"body": "githubmann oh thank", "d": "9/2017"}, {"body": "wrong repo", "d": "9/2017"}, {"body": "chuckjaz please look", "d": "9/2017"}, {"body": "reference repo seems broken get following error seems hard coded dependencies", "d": "9/2017"}, {"body": "jnizet would mind submitting pr", "d": "9/2017"}, {"body": "vicb fix simple tostring issue sure events actually represent fired nt know documentation experimental note guess fact linked resolve phase since already resolvestart event also documentation", "d": "9/2017"}, {"body": "already pr pending tostring fix jasonaden improve doc", "d": "9/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "9/2017"}, {"body": "apologies forgot paste link plunker copied example amended description link", "d": "9/2017"}, {"body": "tell happening focus button without clicking use tab press enter keydown event fires counts click focuses div release enter key keyupenter fires examine correct order events changing nt think issue angular believe events work", "d": "9/2017"}, {"body": "sounds reasonable sorry noise", "d": "9/2017"}, {"body": "nt think issue angular disagree please post minimal reproduction performance degradation occurs", "d": "9/2017"}, {"body": "ie slower chrome check using try use change detection policy even disabling change detection table using", "d": "9/2017"}, {"body": "nothing without repro", "d": "9/2017"}, {"body": "deprecated feature removed web standards though browsers may still support process dropped avoid using update existing code possible see compatibility table bottom page guide decision aware feature may cease work time", "d": "9/2017"}, {"body": "localizeroutermodule localize pipe angular report issue project", "d": "9/2017"}, {"body": "vicb bad leaving reference issue created correct repo case someone thread", "d": "9/2017"}, {"body": "ngxtoastr owner recreating bug tried using angularcli well different error slightly better trying build ngxtoastr source w fiirst attempt failed due get recursion error", "d": "9/2017"}, {"body": "issue animations used toastr component comment whole animations section toastr component component uses animations everything compiles use animations change angular compiler issues animations used includes probably", "d": "9/2017"}, {"body": "yarrgh fixed changing import animations errors could helpful sure typescript allowed us import still", "d": "9/2017"}, {"body": "matsko looks like issue published typings allowing symbols typecheck", "d": "9/2017"}, {"body": "chuckjaz looks like bug resurfaced investigate", "d": "9/2017"}, {"body": "bug hope fixed soon", "d": "9/2017"}, {"body": "tried following steps cd followed instructions update project add verify works without aot verify works aot build steps work missing following diff changes made diff git aangularclijson bangularclijson index aangularclijson bangularclijson testtsconfig tsconfigspecjson prefix app styles stylescss stylescss nodemodulesngxtoastrtoastrcss scripts environmentsource environmentsenvironmentts diff git apackagejson bpackagejson index apackagejson bpackagejson private true dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter corejs ngxtoastr rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice angularcompilercli angularlanguageservice typesjasmine typesnode diff git asrcappappcomponenthtml bsrcappappcomponenthtml index asrcappappcomponenthtml bsrcappappcomponenthtml welcome title click links help start diff git asrcappappcomponentts bsrcappappcomponentts index asrcappappcomponentts bsrcappappcomponentts import component angularcore import toastrservice ngxtoastr component selector approot import component angularcore export class appcomponent title app constructor private toastr toastrservice showsuccess thistoastrsuccess hello world toastr fun diff git asrcappappmodulets bsrcappappmodulets index asrcappappmodulets bsrcappappmodulets import browsermodule angularplatformbrowser import ngmodule angularcore import browseranimationsmodule angularplatformbrowseranimations import toastrmodule ngxtoastr import appcomponent appcomponent ngmodule import appcomponent appcomponent appcomponent imports browsermodule browsermodule browseranimationsmodule toastrmoduleforroot providers bootstrap appcomponent", "d": "9/2017"}, {"body": "chuckjaz switched animation imports latest version older version would issue", "d": "9/2017"}, {"body": "issue metadata records calling shrouded private function alias causing recursive loop fixed several bugs regarding metadata produced seems fixed latest build nt exhibit issue primary workaround discovered avoid referencing deprecated animation functions switching importing functions leave open fixed latest release", "d": "9/2017"}, {"body": "chuckjaz working rc correctly looks like import", "d": "9/2017"}, {"body": "would work", "d": "9/2017"}, {"body": "appears work example although would nt expect resulting css second part selector makes work case works classes ancestors host wo nt work anymore also nt work ancestor ancestor first part selector appears identical definitely something expect selector match also note nt work native shadowdom expected spec defines nt allow combinators", "d": "9/2017"}, {"body": "ocombe ypu might want discuss matsko think changed extraction", "d": "9/2017"}, {"body": "gendir replaced outdir new pipeline created fix cli", "d": "9/2017"}, {"body": "sounds like duplicate regardless api", "d": "9/2017"}, {"body": "works fine forgot save see open dev tools clear network log click post inspect successful request", "d": "9/2017"}, {"body": "nt save plnkr seems looks mine still ha sthe problem body", "d": "9/2017"}, {"body": "mayrmax see plnkr works fine", "d": "9/2017"}, {"body": "mayrmax think right see ssuperczynski one made working fine", "d": "9/2017"}, {"body": "see attacked plnkr clarification post nt get sent body", "d": "9/2017"}, {"body": "mayrmax post return returns empty data think problem located angularclientts line optionsbody null body return null", "d": "9/2017"}, {"body": "fwiw happens component defines array assume creates module whose root injector uses component injector still configured idea right way solve even possible", "d": "9/2017"}, {"body": "right nt see component provider embarrassed chastened relieved easily solved override sigh", "d": "9/2017"}, {"body": "aha quite embarrassingly nt know overwrite specific properties like grin tada", "d": "9/2017"}, {"body": "please make minimal reproduction show issue memory methods run synchronously nt issues going need reproduction investigate", "d": "9/2017"}, {"body": "hi toxicable working developer team neminus know project unfortunately possible create minimal demo show may upload source code somewhere public give information needed could also setup kind google hangout problem exists use case reactive form controls several hundret valuechange subscriptions enable disable parts form depending multiple values controls bound angular material controls within several angular material tabs neminus needs validate form disabled state always result valid status user may save monster form invalid state soon valid may mark approved neminus enables root form group checks status disables log status changes console see lots status change events fired status disabled status reaches enabled state think caused hundrets valuechange subscriptions disable anable child form groups addremove validators runtime wrapping valid check enable settimeout works chrome ie takes status changes form state becomes stable enough check valid state neminus settimeout solution customers fast pcs looks like enable method running synchronously valuechange subscriptions take long come stable form status check valid state would need opinion promise event getting resolved soon form status changes disabled valid invalid something like neminus anyway check ie takes seconds enable form thats way long final solution think could setup subscription statuschange thisform filter operator valid invalid first operator able intercept moment form enabled valid check", "d": "9/2017"}, {"body": "please use issue template likely issue addressed angular cli repo", "d": "9/2017"}, {"body": "shashikantjha update cli version fixate package top level dependency specific version see please close issue since bug angular", "d": "9/2017"}, {"body": "please report issue cli repo", "d": "9/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "9/2017"}, {"body": "toxicable added code plunker click next video link times click browser back button come page keep eye video title changes", "d": "9/2017"}, {"body": "nikxda reason differentiate modules", "d": "9/2017"}, {"body": "yes word superoverloaded well applies tbh one thing named would nt help mention would massive breaking change atm thnx proposal pass", "d": "9/2017"}, {"body": "sounds odd could please provide minimal reproduce scenario plunker requested issue template ca nt much potential bugs ca nt reproduce", "d": "9/2017"}, {"body": "sorry issue caused angular defined angular therefore issue angular", "d": "9/2017"}, {"body": "toxicable right javascript builtin provide angular also according mdn months zeroindexed month integer value representing month beginning january december", "d": "9/2017"}, {"body": "angular github repository see angularjs repository", "d": "9/2017"}, {"body": "appears behaves expected still feel issue please provide details new issue appears getting confused procedural code async code javascript bug angular therefore incorrect place asking help", "d": "9/2017"}, {"body": "thanks remind", "d": "9/2017"}, {"body": "verified shipit foxandxss idea might going one going reworked part moving examples cli", "d": "9/2017"}, {"body": "uh ah hell quite error indeed repo probably going deprecated soon land cli stuff still worth look", "d": "9/2017"}, {"body": "foxandxss patch upgrade tour heroes cli could submit one", "d": "9/2017"}, {"body": "appreciate intention evancarroll simple thing upgrade toh cli least hours work well underway already land need land big internal rework land week", "d": "9/2017"}, {"body": "glad help kills faster nt think patch kill quickstart would bad idea working really majority setup think purposes quickstart install cli need rest upgrade would think would better rely cli rather text creation upgrade nt needed could provide help seeding project cli get people going things mostly broke", "d": "9/2017"}, {"body": "working big project right migrate documentation cli includes everything happens behind scenes systemjs currently testing unit testing plunkers zips done want create pr today revamp docs cli toh easy removing setup part say internally different folder examples work needs done times components needs moved folders change prefixes change prose say needs explain thing cli related remove comments systemjs also plan remove explanations really helping things really appreciate help sorry taking long times changes easy think", "d": "9/2017"}, {"body": "talking project downloaded downloaded project executing", "d": "9/2017"}, {"body": "trying learn angular tutorial tour heroes starting rl project", "d": "9/2017"}, {"body": "error happening", "d": "9/2017"}, {"body": "evancarroll foxandxss trying tour heroit also working mei trying hello world cli quickstart project without using cli tool downloading hello world program", "d": "9/2017"}, {"body": "ah quickstart download zip", "d": "9/2017"}, {"body": "aot likely going default reporting bug please clearly explain bug everything messed reasonable explanation bug", "d": "9/2017"}, {"body": "toxicable coming info", "d": "9/2017"}, {"body": "app shows google maps tcx file example looks develop looks production looks like arithmetic problem actually truth really know going wrong toxicable make sense", "d": "9/2017"}, {"body": "toxicable really dont know causing know express issue bit help would appreciated", "d": "9/2017"}, {"body": "sure makes sense nt see issue angular far many variables come play impossible tell angulars fault shown take time debug issue figure causing make minimal reproduction showing bug angular post otherwise right place ask help", "d": "9/2017"}, {"body": "toxicable part understand stuck difference compiling dev compiling prod app grown big expect happen need indication start please", "d": "9/2017"}, {"body": "also expected behaviour mean compiling prod take testing since blind copy dev", "d": "9/2017"}, {"body": "invoke command enable aot compiling runs jit see info", "d": "9/2017"}, {"body": "toxicable way disable uglify prod build also suspect case", "d": "9/2017"}, {"body": "toxicable run dev build means aot enabled dev build correct correct aot issue since build looks fine investigate come back", "d": "9/2017"}, {"body": "back toxicable right used atom dev built fine however uglifying source issue produced code ide configured built process worked fine errors precise part code would get compiled successfully btw thanks lot also mention issue correct well however see coming project created confusion thanks time knowledge", "d": "9/2017"}, {"body": "happy help glad found issue", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "understood thanks", "d": "9/2017"}, {"body": "hi millerf may ask realized dynamic templates url also need work project multiple themes difference css also html already try many ways still idea", "d": "9/2017"}, {"body": "use remove formcontrol formarray yes create formcontrol formarray", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "way found make work hack template variable ngclass", "d": "9/2017"}, {"body": "wandri thanks submiting problem one projects issue still version edit double thanks temp fix works", "d": "9/2017"}, {"body": "think happen animation code properly recover errors encountered", "d": "9/2017"}, {"body": "matsko confusing thing enough import content gets duplicated error example duplicate", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation angular language services handle", "d": "9/2017"}, {"body": "found confusing first", "d": "9/2017"}, {"body": "actionnable", "d": "9/2017"}, {"body": "believe already handled", "d": "9/2017"}, {"body": "yep use case handled updateon blur option", "d": "9/2017"}, {"body": "caused data displaying service", "d": "9/2017"}, {"body": "nevermind still happening matter display data specific component routes nt change stack top almost route killed", "d": "9/2017"}, {"body": "plnkr", "d": "9/2017"}, {"body": "also getting issue fine previous version angular sorry ca nt remember used npm update latest version yesterday behaviour", "d": "9/2017"}, {"body": "issue occurring application imported browseranimationmodule noopanimationmodule get exception routing might data issue exception ngoninit issue happening nt import browseranimationmodule noopanimationmodule", "d": "9/2017"}, {"body": "duplicate", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation values metadata must statically analyzable aot since code run node enviroment aot us run exist use factory isntead", "d": "9/2017"}, {"body": "thanks clear", "d": "9/2017"}, {"body": "original issue", "d": "9/2017"}, {"body": "set initialnavigation enabled router routermoduleforroot routes initialnavigation enabled", "d": "9/2017"}, {"body": "chuckjaz looks like static reflector nt understand part mixin syntax maybe grasp type inheritance", "d": "9/2017"}, {"body": "yeah commit fixes issue see action seems nt backorted stable branch let track", "d": "9/2017"}, {"body": "please suggest aware work around ngcsp like functionality", "d": "9/2017"}, {"body": "likely systemjs angular assuming using aot see", "d": "9/2017"}, {"body": "yes issue systemjs verify angular aot tree shaking working ok csp issues hence marking closed", "d": "9/2017"}, {"body": "seems ar including required polyfills see info btw issue nt fall bug report feature request category issue tracker suitable support requests able resolve problem please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "try posting stackoverflow", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ps error message gave link try read", "d": "9/2017"}, {"body": "tried setting proxy", "d": "9/2017"}, {"body": "ericmartinezr", "d": "9/2017"}, {"body": "resubmitted", "d": "9/2017"}, {"body": "reading changelog guess fixed released yet better close issue wait til update comes", "d": "9/2017"}, {"body": "bengbuyuezhang briefly describe problem", "d": "9/2017"}, {"body": "english good try achieve angualar component lifecycle hooks import component oninit docheck onchanges aftercontentchecked aftercontentinit afterviewinit afterviewchecked changedetectionstrategy angularcore component selector apptest templateurl testcomponenthtml styleurls testcomponentcss changedetection changedetectionstrategyonpush export class testcomponent implements oninit docheck onchanges aftercontentchecked aftercontentinit afterviewinit afterviewchecked public arr array constructor ngoninit thisarrpush ngoninit ngdocheck thisarrpush ngdocheck ngonchanges thisarrpush ngonchanges ngaftercontentchecked thisarrpush ngaftercontentchecked ngaftercontentinit thisarrpush ngaftercontentinit ngafterviewinit thisarrpush ngafterviewinit ngafterviewchecked thisarrpush ngafterviewchecked changedetectionstrategyonpush result public arr equal ngoninit ngdocheck ngaftercontentinit ngaftercontentchecked changedetectionstrategyonpush result public arr equal ngoninit ngdocheck ngaftercontentinit ngaftercontentchecked ngafterviewinit ngafterviewchecked ngdocheck ngaftercontentchecked ngafterviewinit executed ask thanks", "d": "9/2017"}, {"body": "could reproduce changedetectionstrategydefault changedetectionstrategyonpush please fill issue template provide plunker reproduce problem otherwise likely closed", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "lifecycle hooks called regardless change detection strategy view updated change strategy view already initialized checked see logs console page fix constructor private cdr changedetectorref ngafterviewinit thisarrpush ngafterviewinit believe settimeout needed particular case view already checked settimeout gt thiscdrmarkforcheck", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "run first also run end take look aioreadmemd list available commands btw yarn bug bite road see details", "d": "9/2017"}, {"body": "gkalpak thanks add documentation nt know run running maybe help somebody future", "d": "9/2017"}, {"body": "kirtangajjar mind documentation added needed people try build aio project", "d": "9/2017"}, {"body": "still present today release probably important since tscwrapped package dropped angular", "d": "9/2017"}, {"body": "khuongduybui tilwinjoy francescomussi", "d": "9/2017"}, {"body": "foxandxss goes specially please nt interfere issue anyway past comments misleading others community issued question mention actually hiding already closed thread nt want actions thread seen rest community way start wait actual replies references issues closed resolve", "d": "9/2017"}, {"body": "misleading shouting wrong place better attention old repo tried help", "d": "9/2017"}, {"body": "failed try much appreciated please", "d": "9/2017"}, {"body": "part docs team friend comment", "d": "9/2017"}, {"body": "foxandxss okay let others actually know resolve comment nt interfere much helpful interfere case interference closing issue resolved referred one many closed unresolved clones issue open resolved need resolve help", "d": "9/2017"}, {"body": "bannazz ask type javascript documentation mean", "d": "9/2017"}, {"body": "mlcmlapis one reach use link also reach angular need use pure javascript supported completely documented typescript javascript nt run browser right away many language differences saying typescript compiles javascript like saying c compiles assembly nt many things typescript likeno dom model reusability side angular realm also compilation stage legal security issue compiler microsoft product", "d": "9/2017"}, {"body": "old site ts dart js new site typescript", "d": "9/2017"}, {"body": "bannazz please take minute read done cleared head discuss issue biggest thing angular needs ts best features example aot absolutely essential angular application reason going forward would much suggest using ts dosen take long learn cli nt even worry compiling min queickstart ts cli installation", "d": "9/2017"}, {"body": "toxicable sir thanks honest reply compile single bit code using microsoft product security legal reasons always hate nt know issue typescript simple uncanny usage case translator cookbook ts js wo nt make use ts certain level knowledge comparison javascript language cycle mind able use thing ever question issue", "d": "9/2017"}, {"body": "bannazz afraid number people coding angular apps js limited", "d": "9/2017"}, {"body": "bannazz security legal issue use typescript compiler provided microsoft understand might issue licence legal reasons security security issue compiler example like saying security concerns end js compiled machine code compiler involved aswell mentioned teams core focus improving angular typescript since biggest features therefore focus docs team many features works many come need docs", "d": "9/2017"}, {"body": "mlcmlapis course else expect documentation js number people coding js angular high know", "d": "9/2017"}, {"body": "mlcmlapis course limited hard job code language without documentation published asking going published going published quick answer question save lot people lot time spend waiting happen thus issue", "d": "9/2017"}, {"body": "toxicable sir question issue javascript documentation angular ever published", "d": "9/2017"}, {"body": "tilwinjoy used angularjs years know js guess nt believe js docs angular time future today ca nt even imagine coding angular apps js", "d": "9/2017"}, {"body": "mlcmlapis official reply docs team happen", "d": "9/2017"}, {"body": "bannazz member team personal guessing", "d": "9/2017"}, {"body": "mlcmlapis think everybody guess issue open need definitive answer team", "d": "9/2017"}, {"body": "wonder dropped js angularjs toxicable described still catching ts documentation wo nt ever time support js genuine interests time think answer pretty conclusive moved still followed angular development time time hoping js docs happen stop following wish best", "d": "9/2017"}, {"body": "foxandxss toxicable going happen guys say currently published glossary page ecmascript official javascript language specification latest approved version javascript ecmascript also known many angular developers write applications dialect strives compatible typescript modern browsers support much older ecmascript also known standard applications written one dialects must transpiled javascript angular developers write directly drop last line glossary tell us docs going published reply plain simple yesno", "d": "9/2017"}, {"body": "close issue resolve confirm deny please", "d": "9/2017"}, {"body": "nothing confirm deny mentioned still lot document ts primary goal right", "d": "9/2017"}, {"body": "foxandxss yes declare longer support pure version javascript eventhough website quoted says everything ecmascript alone", "d": "9/2017"}, {"body": "foxandxss concerned focus ts please stop saying stuff ts saying word js big nt act like nothing name angular choose javascript changing core language framework huge step need least clear honest faq page one answer question clear crystal please issue finally resolved", "d": "9/2017"}, {"body": "let repeat immediate focus write ts needed happens next", "d": "9/2017"}, {"body": "foxandxss let repeat concerned either concerned happens next nt know nt reply ruin issue like others nothing funny really nt know long earth replying even begging interfere beginning thread issue team actually knows answer question resolve issue read title", "d": "9/2017"}, {"body": "issue resolves yes", "d": "9/2017"}, {"body": "saturday chat", "d": "9/2017"}, {"body": "foxandxss sorry say basically say indirect middle irrelevant sandwich words absolutely right chat issue request needs resolve already asked reply nt enough knowledge instructed say things like threw js trash deal abandon issue leave someone knows escalate someone declare straight forward answer really need help", "d": "9/2017"}, {"body": "foxandxss misleading shouting wrong place better attention old repo tried help opened one issues mentioned someone closed saying please open see already existing issues closed state without proper resolution tries resurrect reply notsofriendly comment along hear need comment every issue clearly resolve issue reopen make statement issues another discussion arises say wrong place open asked reopen issue created nobody tries avoid making official statement saying wrong place closes issues call trying help trying help ideally would kept issues open first place asked team official statement reopen issues people explicitly asked move repos back forth reopencreate issue correct place actions far making sure issues closed remained closed state without official statement sorry totally fail understand helped others issue opened still closed someone else create yet another issue let repeat immediate focus write ts needed happens next trying help part someone docs team say please ask person charge make official statement whether documentation js could done year ago please stop mentioning ts commenting things like ts javascript better focusing ts think op meant misleading asking ts asking js", "d": "9/2017"}, {"body": "sorry tilwinjoy nt know issue talking angulario repo closed one reading everything open say wo nt read anyone team redirect people", "d": "9/2017"}, {"body": "actually list elaborate security legal reasons instead whining", "d": "9/2017"}, {"body": "foxandxss issue angular repo issues tried resurrect angulario told reopen another one points kind roadmap closed without comments", "d": "9/2017"}, {"body": "tilwinjoy first issue months old docs since changed repo angularangulario docs issues repo", "d": "9/2017"}, {"body": "still going topic current focus next months complete ts docs", "d": "9/2017"}, {"body": "foxandxss good hear moment clear wo nt js docs next months still official statement someone say whether js docs coming months done ts hope issue remain open clear yesno official response wo nt yet another issue discussion good weekend", "d": "9/2017"}, {"body": "official statement planning creating js docs point foreseeable future realize might make folks angry metrics show less pageviews hit js documentation incredible amount time thus money us maintain ts docs frankly nt capacity support js ts properly additionally angular entire architecture really designed around typescript perhaps importantly aot compiler currently requires use typescript additional information types decorators allow us kind static analysis necessary nt use aot expose users poor user experience slow boot due compiling browser potential security issues inbrowser compilation much wider attack surface exploits angular moves towards making aot default experience plan deprecate jit compiler longer term clear strongly recommend using typescript angular strongly discourage using plain may mean certain people might able use angular unfortunate always bummer us committed providing best experience typescript developers internal google policy using angular without typescript disallowed reasons nt support js documentation aot compilation roadmap regularly discuss team evaluate things happy discuss sure danielrosenwasser would interested hear specific objections company regarding use microsofttypescript tech went huge amount security infrastructure legal review google today allow unrestricted usage typescript nearly project google give confidence using ts projects everyone thread please treat respect per code conduct", "d": "9/2017"}, {"body": "know issue close statement clear however would like offer little piece insights regarding metrics less pageviews hit js documentation anyone ever raise point maybe page views low pages offer extremely limited information guys offered basic getting started without even guide routing tutorial touched components routing services foundational blocks single page application ts understand respect workload also understand obligations support javascript ever want acknowledge fact supporting javascript stop claiming across website thanks great hard work otherwise", "d": "9/2017"}, {"body": "rob said would actually happy hear concerns using typescript myfirstnamemylastname microsoftcom dm twitter", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "ok thanks information close issue create request", "d": "9/2017"}, {"body": "please outline exactly feature requesting right looks like support request issue tracker suitable", "d": "9/2017"}, {"body": "ts deprecated export function getpluralcase ngmodule declarations exports providers provide deprecatedpluralfn usevalue getpluralcase export class null use api otherwise use function", "d": "9/2017"}, {"body": "kara please take look one lands upgrade angularangular typescript caused size regression hello world integration test guess typescript transpiles corecommon packages slightly differently older version resulting buildoptimizer finding downleveled decorators removed might need adjust ast check finds", "d": "9/2017"}, {"body": "difference change approximately looking decrease size much currently size main bundle hello world cli bytes change bytes", "d": "9/2017"}, {"body": "yep looks like transpiles slightly differently new version ts new version tsickle previously decorators constructor parameters left top level ts var applicationref function super applicationref applicationrefdecorators applicationrefctorparameters function decorators constructor parameters nested inside iife buildoptimizer shallow check top level expression statements could nt find decorators nested iifes remove wip pr devkit repo addresses change building fix back kb", "d": "9/2017"}, {"body": "mean exactly concrete sample syntax btw always create component encapsulates use later place example used customize type inputs", "d": "9/2017"}, {"body": "look angularmaterial thing looking mdformfield components", "d": "9/2017"}, {"body": "done", "d": "9/2017"}, {"body": "looks like bug likely due since handling json parsing nt parsing response either position would parsed browser previously", "d": "9/2017"}, {"body": "alxhub check maybe apply labels thanks", "d": "9/2017"}, {"body": "also present found issue days bugfixing application", "d": "9/2017"}, {"body": "issue", "d": "9/2017"}, {"body": "issue still broken workaround create response interceptor", "d": "9/2017"}, {"body": "nested animation prevented parent design see article understand allow parentchild animations run start callback firing bug sure investigate", "d": "9/2017"}, {"body": "matsko thanks", "d": "9/2017"}, {"body": "related", "d": "9/2017"}, {"body": "nested animation prevented parent design matsko applying slideleft animation route transitions including routes lazy loaded module pages sliding good pages inside lazy loaded module nt seem trigger pages nested animation known bug missing something edit tested using plnkr noticed behave bit different route transition nested animation work ok route transition nested animation works ok", "d": "9/2017"}, {"body": "reason angular iterating items first example dev mode dev mode angular needs check array like structures make sure equal previous value words testing expressionhaschangedaftercheck error enabled prod mode like notice called understood take look onpush works onpush prevents view component view dirty checked cd unless cd ref component marked checked therefore would make sense structuralor directive onpush want directive checked simply make host component onpush therefore cd dirty check view unless marked check", "d": "9/2017"}, {"body": "actually found explanation seeing plunker nt offer workaround case arrays big iterate even dev mode", "d": "9/2017"}, {"body": "youdz ca nt pass whole array input children component use another way exact way depends app concept", "d": "9/2017"}, {"body": "mlcmlapis writing app writing library reusable components one structural directive works array items like passing anything array input makes syntax weird huge hinder library fact ship prod mode way run dev mode bit absurd prod mode checks reference equality get dev mode tries catch modelview inconsistencies way opt specific directive ca nt entire library devtested prod mode one directive", "d": "9/2017"}, {"body": "youdz ok know way opt specific directive functionality relative deeply hidden code generally sounds reasonable solution allow developer disable per case", "d": "9/2017"}, {"body": "plz provide workaround issue", "d": "9/2017"}, {"body": "issue causes lot trouble small error content gets duplicated application becomes less unusable fix highly anticipated one", "d": "9/2017"}, {"body": "seriously labeled inconvenient routing broken use module entire application ca nt use version angular causing enormous amount headaches say goes far beyond inconvenient insane reported weeks ago still nt hotfix", "d": "9/2017"}, {"body": "thought read classification think animation considered nonessential", "d": "9/2017"}, {"body": "needed take httpclient instance parameter since undefined", "d": "9/2017"}, {"body": "alanpurple bug angular javascript works assign method variable method loses context multiple way solve problem call method use bind make method instance method typescript export class herosearchservice constructor private http search term string observableapiheroes name term map response gt responsejson data hero use typescript decorator bind context need implement decorator search library see", "d": "9/2017"}, {"body": "tytskyi thank", "d": "9/2017"}, {"body": "problem trying use get first option selected remove binding simply initialize corresponding value want case empty string component export class selectedproject see demo", "d": "9/2017"}, {"body": "works however scenario bit complex project list dynamically populated options updated accordingly moment list size becomes chrome nt select default option unless refresh page however safari", "d": "9/2017"}, {"body": "still ca nt reproduce case see note delayed response array seconds simulating api request", "d": "9/2017"}, {"body": "populating list removing items anyways illustrates problem main problem list becomes empty disabled option selected default obviously excluded internal details basically im using shared service listen project list modifications repopulate options currently workaround manually set default value list empty", "d": "9/2017"}, {"body": "imho issue misleading said nothing deleting nothing anyway try create plunker demonstrate issue", "d": "9/2017"}, {"body": "actually initial issue disabled option nt selected model empty startup removing suggested fixed", "d": "9/2017"}, {"body": "please attach repro", "d": "9/2017"}, {"body": "try optimizing regular expressions grin", "d": "9/2017"}, {"body": "regexp seems expensive part sanitization work gut feeling measured", "d": "9/2017"}, {"body": "gut feeling measured educated guess still trying narrow", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "wrong repo duplicate duplicate", "d": "9/2017"}, {"body": "thank much", "d": "9/2017"}, {"body": "good catch swirlsky would submitting pr fix line need edit", "d": "9/2017"}, {"body": "gkalpak raised pr fixing", "d": "9/2017"}, {"body": "part also depends fix", "d": "9/2017"}, {"body": "lowlevel dom manipulation like example need cleanup dom nodes created hook importantly though component case would nt need manual dom manipulation would nt bump nodes leak problem imo works designed sure angular track amp destroy manually created nodes", "d": "9/2017"}, {"body": "got thank quick reply clarifications wink", "d": "9/2017"}, {"body": "immutable usage would work kind value", "d": "9/2017"}, {"body": "tried better trotyl said implementation immutable meaning operator returns new httpparams object rather modifying existant instance", "d": "9/2017"}, {"body": "aldoroman unfortunately definition set method string also checked serializer working expected end makinh class", "d": "9/2017"}, {"body": "sorry reported issues require plunker reproducing problem issue persists please create plunker using template describe difference expected current behavior create new issue", "d": "9/2017"}, {"body": "ok example write amp run run test plnkr", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "see annotation nt think valid context", "d": "9/2017"}, {"body": "deprecated non generic function removed still needs fix branch", "d": "9/2017"}, {"body": "sounds like big news angularcli moves abc drop recommend current webpackbased build system", "d": "9/2017"}, {"body": "looks promising going kill angular cli eventually drop replacement codebases built angular cli", "d": "9/2017"}, {"body": "realappie angular cli top layer affected lot changes probably could", "d": "9/2017"}, {"body": "updated description possible could build system cli one day early sure", "d": "9/2017"}, {"body": "related", "d": "9/2017"}, {"body": "possibly ericmartinezr sounds like may dupe related able get generate files typescript javascript despite happening memory confused changes outlined changelog releases team custom build relies aot wait ga test works changes make compatible rollup happened leading angular team left circular imports aot compiled code need able test aot beta seems recurring theme leading even rc near impossible find documentation worked", "d": "9/2017"}, {"body": "tests able get compile edited bug console error browser bundle compiled bug related ericmartinezr", "d": "9/2017"}, {"body": "bug replicated bundle rollup creates bundle transpiled optimized closurecompiler bug slightly different", "d": "9/2017"}, {"body": "tried change", "d": "9/2017"}, {"body": "see metadatajson files compiled code like see contents metadata bundle looking metadata seems thats bundle fails full stacktrace error confused jitcompiler called expecting aot", "d": "9/2017"}, {"body": "ok mistake using still seems", "d": "9/2017"}, {"body": "seems like plnkr issue files contain code like following html part creating form submitting works expected supposed dynamically create new plnkr seems plnkr internal server issues ftw dynamically creating new plnkrs used angularjs docs still works note requires different syntax", "d": "9/2017"}, {"body": "gkalpak starting move examples stackblitz", "d": "9/2017"}, {"body": "ericmartinezr decide grin", "d": "9/2017"}, {"body": "live examples back", "d": "9/2017"}, {"body": "currently works expected stripping prefix compiler idea behind people could prefix nonstandard attributes bindings probably revisit use explicit attribute binding", "d": "9/2017"}, {"body": "worked thanks", "d": "9/2017"}, {"body": "aldoroman thanks taking time describe issue use case sounds bit specific including core trying keep core modules lean possible already way implement app create custom value accessor case probably attribute dir matches number inputs able parse value however like future parserformatter functionality make process easier creating value accessor accomplish need", "d": "9/2017"}, {"body": "thanks take look value accessors curious reviewing parserformatter issue", "d": "9/2017"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "import activatedroute params angularrouter", "d": "9/2017"}, {"body": "ngoninit void thisrouteparams switchmap params params gt thisheroservicegethero params id subscribe hero gt thishero hero", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "diegofalciola wrong channel communication probably want open issue mgechevangularseed", "d": "9/2017"}, {"body": "thnx mgechev", "d": "9/2017"}, {"body": "sorry sure ended thanks", "d": "9/2017"}, {"body": "hi issue oblige put result variable use like", "d": "9/2017"}, {"body": "working expected immutable", "d": "9/2017"}, {"body": "trotyl nt understand comment expected behaviour use headerappend abc add header header collection hood right miss understood shiftsh strange declare another variable use headerappend use found workaround problem", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "research creating issue", "d": "9/2017"}, {"body": "trotyl thanks pointing bug searched http header problems submitting issue see alxhub checkin changed syntax params append cases nt work according cexbrayat fixed released start using beta leave stable version case common stable use functions instance class exist jotatoledo accepted solution stackoverflow work adding params headers loop let headers new httpheaders let lt headersappend itostring itostring", "d": "9/2017"}, {"body": "original issue bug fixed whereas old http service allowed use simple object literal nothing changed since working pretty well", "d": "9/2017"}, {"body": "working perfect working sample link us followed documentation works one header multiple headers thanks advance", "d": "9/2017"}, {"body": "trotyl jotatoledo plunker link reported bug one fix would really nice may something wrong hope help bug", "d": "9/2017"}, {"body": "append returns clone headers need store result append otherwise effect something like plunkr headers params immutable works intended", "d": "9/2017"}, {"body": "cexbrayat thanks clarifying concept behind append sounds bit odd append means add extend something existing object context clone object context return think like orange new black phrase would much nicer create json object pass constructor let headerjson abc let headers new httpheaders headerjson well anyway hope discussion help someone like figureout meant working", "d": "9/2017"}, {"body": "component style would work feature deprecated though", "d": "9/2017"}, {"body": "alternative", "d": "9/2017"}, {"body": "set view encapsulation move stylings common file include main stylings angular cli config", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "sorry animation docs limited variety bugs new features priority getting fixed docs could elaborate listening animation events router animation documentation show soon another external post things stable framework guides docs", "d": "9/2017"}, {"body": "hello thank response link disabled docs events previous way router transition following add transition component could listen animations events call function transition ended populate component animate fully visible new animation system due fact animation trigger component div wrapping router ca nt find way listen event must something missing also latest angular version newer router transition seems broken simple fadeout transition navigating component disappear next one never appear due html probably produced animation system think bug open issue edit fixed latest angular version", "d": "9/2017"}, {"body": "feel pain man wagon docs months", "d": "9/2017"}, {"body": "matsko explain properly previous message", "d": "9/2017"}, {"body": "ngc generates code need reference symbols need public ts transformer automatically export symbols need exported manually export hope helps", "d": "9/2017"}, {"body": "vicb appreciate reply much ts transformer referring asttransformer guys maybe internal document transformer info besides sources like get familiar thanks advance", "d": "9/2017"}, {"body": "react async rendering focus initial release compatibility existing applications async rendering option initially later releases included optin feature web worker solution async rendering still big question serious data compare final effects probably highly dependent exact cases", "d": "9/2017"}, {"body": "mlcmlapis yeah know included yet run whatever code like inside worker thread exceptions example ca nt directly manipulate dom inside worker use default methods properties window object use large number items available window including websockets data storage mechanisms like indexeddb firefox osonly data store api see functions classes available workers details nt think web workers effect render performance way since access dom think idea behind web workers perform heavy computation seperat thread", "d": "9/2017"}, {"body": "sebastianschenk yes true type tasks available even today app including angular angular modules also look", "d": "9/2017"}, {"body": "far understand react fiber split updaterender process different phases reconciliation computingdiffing new virtual dom commit actual rendering dom react lt process done single pass change found update reflected dom execute phases differently reconciliation done asynchronously interruptions main thread responsive commit still one sync pass keep ui consistent concept mapped angular reconciliation basically change detection pass probably done interruptions commit actual calls renderer done one pass async rendering really splitting change detection chunks scheduling right still rendering one sync pass reduce ui artifacts really well explained approach problem", "d": "9/2017"}, {"body": "curiosity ported fiber vs stack react demo angular thought app webworker lead significant performance difference actually animations still junky worker thread unable keep fps however main thread clearly blocked", "d": "9/2017"}, {"body": "gund links working bundles missing", "d": "9/2017"}, {"body": "mlcmlapis thanks pointing base tag problem fixed", "d": "9/2017"}, {"body": "gund interesting thanks demos add move viewport size demo makes scroll bar tell work done background thread able scroll moving still unlike sync demo", "d": "9/2017"}, {"body": "toxicable yeah fact main thread blocked really good animations worker thread blocked still visually user might perception bad performance clearly async rendering smart scheduling prioritizing operations dom", "d": "9/2017"}, {"body": "far understand running app inside web worker would best performance possible bus worker main thread currently slow get reasonable performance boosts using", "d": "9/2017"}, {"body": "toxicable yeap observation ghetolay observed time ago bus limitation cases web worker threads optimal use ones lot processing required inside web worker thread less frequencies communication back main thread would interesting know details source bus limitation bus interface works fully local memory", "d": "9/2017"}, {"body": "really think bus throughput looks like worker thread simply unable compute fast enough push animation updates ui thread remove slow code probably result fps animation worker mode single thread mode", "d": "9/2017"}, {"body": "gund hmm remember best performance possible get everything transfer strings faster objects also frames per second necessary js runs longer ms", "d": "9/2017"}, {"body": "tried locally webworker version without heavy load worker thread expected got fps silkysmooth animations ui really nothing webworkers purely scheduling prioritization problem btw mlcmlapis really want hit fps take thread browser also take time job", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "currently beta compiler changes done yet suggest waiting till rc least trying use", "d": "9/2017"}, {"body": "probably related tsickle trying find main imported file however longer needed flip flag false toxicable would bit time try fixes problem problem seems", "d": "9/2017"}, {"body": "tbosch sure take look", "d": "9/2017"}, {"body": "tbosch attempted reproduce unable made repo show trying see dist produced normal imports libs see ones people issues eddman could make us minimal reproduction maybe something slightly different tsconfigjson", "d": "9/2017"}, {"body": "tbosch ok manged reproduce turns nt using tsconfig totally forgot anyway produces results input paths submodule mymodule root maints import name submodule import name mymoduleindex import name submodule code makes output throws error instead use input output", "d": "9/2017"}, {"body": "toxicable could specify exactly specified fix issue", "d": "9/2017"}, {"body": "kamilius done changing code angular since internal setting tsickle", "d": "9/2017"}, {"body": "toxicable got approximately get fix", "d": "9/2017"}, {"body": "kamilius certain decision needs made indeed going switched ca nt make decision", "d": "9/2017"}, {"body": "td \u53d1\u81ea\u7f51\u6613\u90ae\u7bb1\u5927\u5e08 fabian wiles wrote kamilius done changing code angular since internal setting tsickle receiving subscribed thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "toxicable maybe aware version nt bug maybe workaround", "d": "9/2017"}, {"body": "nope nt changed far im aware", "d": "9/2017"}, {"body": "reproduced toxicable conclusions turning fixes issue current workarounds include use modify manually file set working pr make change", "d": "9/2017"}, {"body": "meant produce ngfactory files anymore working intended", "d": "9/2017"}, {"body": "toxicable use ngc doumentation", "d": "9/2017"}, {"body": "removed used starting", "d": "9/2017"}, {"body": "trotyl effect guess starting new model aot compilation documented yet", "d": "9/2017"}, {"body": "beta wait till rc want docs wait till least ga", "d": "9/2017"}, {"body": "provide new entry yet new model use instead using consistency", "d": "9/2017"}, {"body": "trotyl thanks work case folder ignored vcs root nt notice files emited anyway would nice write changelog", "d": "9/2017"}, {"body": "bukharin agree whether options part public api quite clear additionally command line usage direct use apis covered may also relates documentation angular make use", "d": "9/2017"}, {"body": "hello yes said ngc nt produce ngfactory files anymore stay memory using typescript transformers yes gendir longer used docs coming rc right focusing making sure breaking change merged first rc less time docs", "d": "9/2017"}, {"body": "ca nt angular team give us docs aot changed really frustrating call even test production build agree toxicable wait ga docs need able test production build leading rc", "d": "9/2017"}, {"body": "steveblue functioning aot nt changed significantly made existing process faster refactoring ts transform developers able call ngc use cli create aot compiled transpiled builds betas use cases missing please email devrel angulario", "d": "9/2017"}, {"body": "open file notice triggers command picked folder way nt need globally system start application therefore documentation fine point", "d": "9/2017"}, {"body": "hello find code examples angulario", "d": "9/2017"}, {"body": "think support request closing guessing change compiles compiler omitting ngfactory files", "d": "9/2017"}, {"body": "set locale token option timezone yet", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "alexchaliy basic issue basically shorthand longhand version complex expression like makes sense model gt view binding nt really make sense view gt model direction generally best resolve expression component code", "d": "9/2017"}, {"body": "works fine win", "d": "9/2017"}, {"body": "nt vscode issue", "d": "9/2017"}, {"body": "instructed post issue lazarljubenovic maybe go", "d": "9/2017"}, {"body": "mistake use file instead compiled docs", "d": "9/2017"}, {"body": "seems weird prerelease package latest based rules semver packages specify wo nt match leads whole bunch npm warnings also caused issues packages improperly specify angular dependency instead peerdependency looks somewhat common causes packages pull version angular thus break runtime errors along lines modules modules different ngmodule versions services provide different injectable versions example npm warnings", "d": "9/2017"}, {"body": "listed latest stable version", "d": "9/2017"}, {"body": "yes exactly pointing bug prerelease package marked latest stable noted causing sorts issues", "d": "9/2017"}, {"body": "robwormald said gitter yesterday wrong fixed", "d": "9/2017"}, {"body": "seems fixed", "d": "9/2017"}, {"body": "nt problem angular need configure fallback route server serve indexhtml file route cant matched", "d": "9/2017"}, {"body": "tried recommendation provided someone", "d": "9/2017"}, {"body": "got working adding htaccess root rewriteengine", "d": "9/2017"}, {"body": "figured make navbar route restrictive picked even appdashboard new approutingts follows", "d": "9/2017"}, {"body": "cexbrayat use cli data file imported automatically thanks recent change ocombe use cli better know assume code lazy loading one example comes mind", "d": "9/2017"}, {"body": "causes change detection run since using onpush anywhere cause change detection run across whole app", "d": "9/2017"}, {"body": "reproduced lt items count think items count effect change detection work plunker", "d": "9/2017"}, {"body": "believe already fixed via unrelated fix alxhub", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "maybe look export class yourcomponent implements oninit afterviewchecked public ngafterviewchecked rerender logic", "d": "9/2017"}, {"body": "api take language parameter return response api exactly return type information need infos u need help", "d": "9/2017"}, {"body": "please direct support questions appropriate channel suggested ericmartinezr", "d": "9/2017"}, {"body": "api take language parameter returm response based passes language call every component ngonit method call services language specific reaponse bind new data evry components sep chelayos chanini notifications githubcom wrote api take language parameter return response api exactly return type information need infos u need help receiving authored thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "try yourcomponent create folder vue assume sample cshtml html page", "d": "9/2017"}, {"body": "chelayos thank answer matter vue folder vuesample getmapping vuesample handled spring controller nt want get static html component technic bypass spring controller", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation templateurl angularjs must static known build time angular compile template ahead time sending browser behaviour seeing working expected see related issues info", "d": "9/2017"}, {"body": "thnx toxicable", "d": "9/2017"}, {"body": "problem solved changing webpack config fact created webpackconfigjs contains ts loader ngtoolswebpack last one origin problem concerns aot ahead time according documentation ngtools options section mentionned skipcodegeneration optional defaults false disable code generation refactor code bootstrap replaces templateurl string template require string dont want templateurl compiled aot recommand use tsloader see tsloader rule ts look like", "d": "9/2017"}, {"body": "return observable work well maybe mistake angularredux", "d": "9/2017"}, {"body": "observable used guard must completed", "d": "9/2017"}, {"body": "observable cases one guard works one nt thought must guard fault", "d": "9/2017"}, {"body": "submitting angular issue please make plunker reproduce without library", "d": "9/2017"}, {"body": "ca nt get plunkr work nt know recreate selectobservable store way find observable completed however handle whatever goes store differently would still unexpected angular point view angular exactly returned observable complete operator", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation angular complete observable must pass one example var islogggedin observable never completes canload observable boolean return thisisloggedintake", "d": "9/2017"}, {"body": "thanks looking create question toxicable nt think different behavior two guards could considered bug maybe needs documentation", "d": "9/2017"}, {"body": "related stack overflow question", "d": "9/2017"}, {"body": "also consider bug canactivate able get value observable canload nt nt seen anything documentation would expected behaviour would reproduced testproject", "d": "9/2017"}, {"body": "observables canload canactivate works fine", "d": "9/2017"}, {"body": "modified plunkr project create behaviorsubject value true inside map create observable according understanding resolves value edit fixed fork", "d": "9/2017"}, {"body": "made mistake markusfalk observable returned complete first emission therefore canload complete need return observable complete using operator help example", "d": "9/2017"}, {"body": "take work click lazy home disable lazy route shouldnt able loaded anymore still loaded", "d": "9/2017"}, {"body": "canload works canload runs per docs interface class implement guard deciding children loaded children loaded need rerun guard", "d": "9/2017"}, {"body": "alright something overlooked point still stands though code work guards canload act terms observables like canactivate", "d": "9/2017"}, {"body": "let refocus issue rework plunker toxicable suits original post guard implementation one works may docs issue agree disturbing guard nt requirement also could nt find anything docs saying observable returns must complete", "d": "9/2017"}, {"body": "ghetolay actually original example guard used preloaded module lazyloaded one", "d": "9/2017"}, {"body": "nt think type module matters guard types think found problem may actual bug open pr soon", "d": "9/2017"}, {"body": "ghetolay could please briefly describe think bug could thanks", "d": "9/2017"}, {"body": "fairly simple observable chain build operator nt used like guards either canload something special intended could nt find reason missing see pr goes", "d": "9/2017"}, {"body": "guards require observable meaning emitted values design requiring complete welldocumented guard nt respect bug allowing incomplete although still make suggestion changing existing design would different story", "d": "9/2017"}, {"body": "ghetolay making breaking change user provide multiple values like current behavior using last value namely making first value respected namely", "d": "9/2017"}, {"body": "trotyl saw first comment stating guard observables must complete searched docs find something could nt find anything link think sentence bury middle guide refactoring demo code implements resolver nt would call welldocumented rather mentioned somewhere understand could nt find statement guard observables must complete think could better docs stipulate case really nt get use operator observables purpose really seems handle multivalue possibly infinite observables really ca nt find reason right breaking changes pass guard moment pr reason mentioned wrong current behavior using last value namely false wrong guard current behavior check values fail pass guard inconsistent example fail guard pass guard forgot check thought acted differently real inconsistency guards behavior check first value emitted wo nt wait observables complete check values returned wait observables complete keep last value emitted observable wait observable complete think guards mostly expecting single value observables complete right single emit think angular shape guard observable single observable complete right using users", "d": "9/2017"}, {"body": "discussion even regarded angular bug pr still merged agree consistent anyway", "d": "9/2017"}, {"body": "ok pr one responsible patched", "d": "9/2017"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hey similar problem yesterday imported custom library build angular package format app problem nt know yet publicapits change", "d": "9/2017"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "9/2017"}, {"body": "solution worked using yeoman uses angular package format library root index included code module along export statements changing cleared error error getting prior change running demo app ng build prod used library export \u0275m imported found warning src gendir export \u0275l imported found warning src gendir export \u0275n imported found warning src gendir export \u0275o imported found warning src gendir export \u0275n imported found warning src gendir export \u0275p imported found warning src gendir export \u0275p imported found warning src gendir export \u0275e imported found warning src gendir export \u0275e imported found error src gendir module found error ca nt resolve gendirnodemodules src gendir src gendirappappcomponentngfactoryts", "d": "9/2017"}, {"body": "done testing seems problem happening routes associated component method issue", "d": "9/2017"}, {"body": "see issue related try hack", "d": "9/2017"}, {"body": "welldefined html spec", "d": "9/2017"}, {"body": "thank appreciate link joe kahl application developer business technologies office location tower floor carillon parkway st petersburg fl cid trotyl yu mailto notifications githubcom sent thursday august pm angularangular angular noreplygithubcom cc joe kahl joekahl raymondjamescom author author noreplygithubcom subject angularangular request additional validatorsemail documentation details welldefined html spec receiving authored thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "thanks toxicable think know since dismiss ref content remove projected content dom tree element", "d": "9/2017"}, {"body": "discussed offline upgrading noncomponent directives never possible cases one needs provide equivalent angular directive trivial even necessary since update elements attribute might complicated things hood mentioned uirouter angular hybrid project might sufficient depending usecase leaving open get feedback rkirov whether worked ran issues", "d": "9/2017"}, {"body": "trying avoid checking often hides errors although several people requested far nt found usecase necessary caused bug elsewhere could provide minimal reproduction eg plnkr public repo plnkr use template", "d": "9/2017"}, {"body": "record issue closed without explanation hope one resolved instead", "d": "9/2017"}, {"body": "ah perfect open issue problem great help devs info error message", "d": "9/2017"}, {"body": "expected behavior registers parent form using name attribute supplied sounds like need form currently available reactive forms see documentation either switch reactive forms track existing issue adding functionality templatedriven forms", "d": "9/2017"}, {"body": "jongunter glad able track problem regarding docs page probably best time api doc pages based exported symbols nt one input property value accessor ca nt create page without creating special guide think sufficient correct page comes searching ngvalue said think information could added page please feel free submit pr closing working intended", "d": "9/2017"}, {"body": "ok understandable least add upgrade cheat sheet something", "d": "9/2017"}, {"body": "mhevery alexeagle could opinion would development feature pull request", "d": "9/2017"}, {"body": "path like would statically analyzable therefore aot compliant toxicable said would go lot aot work planned sorry going support", "d": "9/2017"}, {"body": "toxicable mhevery thanks time done using form aot variable resolved duringbefore aot kind like simple macros c would allow static analysis still provide needed variability buildtime", "d": "9/2017"}, {"body": "share link doc version refering", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "landonwaldner code snippet posted tutorial function defined routing tutorial", "d": "9/2017"}, {"body": "brandonroberts referring heroes tutorial services section routing section talking routing navigation milestones section reuses refactors code used heroes tutorial including heroes service however instructions refactor service return observable instead promise calling code requires since time posted days ago documentation commit went days ago sept subscribe operator removed snippet things changed even heading activatedroute onestopshop route information nt lol point nt know tell", "d": "9/2017"}, {"body": "yes guide reworked activatedroute information still example wanted use function add service operator handle regardless whether observable promise ts import injectable angularcore import hero hero import heroes mockheroes injectable export class heroservice getheroes promise gethero id number promise return thisgetheroes heroes gt heroesfind hero gt heroid id see take slow appendix getheroesslowly promise", "d": "9/2017"}, {"body": "understand correctly looking way tell reactive form submitted already achieve using property see docs closing already exists", "d": "9/2017"}, {"body": "would also nice specify get changed thing mock call test wo nt get changes made useful acceptance integration tests", "d": "9/2017"}, {"body": "nt actually issue anymore change components loading needed dynamic routes longer use route animations something working previously though assume bug", "d": "9/2017"}, {"body": "error showing load page route component animation start another route move specified route think temporary solution create wrapper component route must solved", "d": "9/2017"}, {"body": "seeing issue well amp ok issue csutorasr reports routing another page animation", "d": "9/2017"}, {"body": "experiencing also problem back route router animations let say pages nt add trigger inside entering leaving animations ok add trigger works correctly landing transition works correctly also hit back browser seems stays inline display none page shown", "d": "9/2017"}, {"body": "believe something commit familiar internals seem like entered elements remained cloaked", "d": "9/2017"}, {"body": "seeing exact issue pageload routes work fine using routerlink new components loaded routeroutlet hold style removing animations components fixes like reenable soon edit issue appears resolved later", "d": "9/2017"}, {"body": "issue lazy loaded route route transition happening ok getting nested animation stick issue resolved edit issue seems resolved updated plunker", "d": "9/2017"}, {"body": "matsko comment implement animations support vendor prefixes", "d": "9/2017"}, {"body": "work safari", "d": "9/2017"}, {"body": "nativescript currently recommended solution want build native app angular", "d": "9/2017"}, {"body": "problem", "d": "9/2017"}, {"body": "vovikdrg checking unsubscribe observables checked looks like default observables unsubscribed correct need manually unsubscribe rxjs observables", "d": "9/2017"}, {"body": "tools capture unsubscribe events", "d": "9/2017"}, {"body": "depend mean default talking http yes needs unsubscribe", "d": "9/2017"}, {"body": "custom observables angular http checked unsubscribed automatically done completion sure whether need explicit unsubscribe u advice pls", "d": "9/2017"}, {"body": "personally ended using small extension", "d": "9/2017"}, {"body": "ngupgradelite plunker template see issue ngupgradelite", "d": "9/2017"}, {"body": "rkirov ngupgradelite plnkr template", "d": "9/2017"}, {"body": "oh look another ngupgradelite template stackblitz", "d": "9/2017"}, {"body": "neat thanks templates repro console shows", "d": "9/2017"}, {"body": "happens manually attach compone nt apparently causes changedetected soon angularjs watcher updates properties calls initial easy fix", "d": "9/2017"}, {"body": "calebdwilliams important understand angular treat custom elements special way custom handling fact one early design principles angular treat like every dom element thus custom elements act like dom element require custom handling keep mind lifecycle may differ even angular application handle different fashion latter needs integrated angular change detection cycle whereas former static far behavior differs root elsewhere look spoken compiler team going guarantee specific ordering behavior would lock angular pattern support indefinitely potentially preventing us underthehood optimizations future", "d": "9/2017"}, {"body": "robwormald understand intending feels like fairly proscriptive take rendering elements could legitimate reason wanting allow element reactive belief going let users author code html format need sure emulate behavior browser would parsing html ultimately agree assertions custom actually changed structure components give developers headaches future custom elements become widely used", "d": "9/2017"}, {"body": "another data point ran well hoping use attrs wcs initialization thus check keep things date via props angular algorithm breaks unexpected especially given authored html template", "d": "9/2017"}, {"body": "issue extraproviders platform bootstrap overloaded module would nice drop things like httpinterceptors exported various environment", "d": "9/2017"}, {"body": "timeline functionality going implemented matt", "d": "9/2017"}, {"body": "similar problem trying use following router data configuration aot compilation function company missing dataapiresolver object", "d": "9/2017"}, {"body": "changes coming tutorial way setup stay tuned", "d": "9/2017"}, {"body": "specifically code stating read follows component selector myapp change previous instructions component selector approot breaks", "d": "9/2017"}, {"body": "change need change indexhtml well looking selector", "d": "9/2017"}, {"body": "thanks found errors second page tutorial frustrating sep pm jes\u00fas rodr\u00edguez notifications githubcom wrote change need change indexhtml well looking selector receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "actually error need follow tutorial using quickstart project cli change month going revamp tutorial use cli", "d": "9/2017"}, {"body": "changes tutorial underway list", "d": "9/2017"}, {"body": "petebacondarwin seems right alley", "d": "9/2017"}, {"body": "oh bother going pain would probably easier fix thing needed done", "d": "9/2017"}, {"body": "see", "d": "9/2017"}, {"body": "typing find abstractcontrol still nt catch", "d": "9/2017"}, {"body": "anyone actually anything reports issues angulario pages waste time wo nt bother document problems", "d": "9/2017"}, {"body": "confirmed issue issue seen issue blocks ability build libraries per spec", "d": "9/2017"}, {"body": "error sticking currently", "d": "9/2017"}, {"body": "hoping issue escalated", "d": "9/2017"}, {"body": "error persists", "d": "9/2017"}, {"body": "roger move later week close", "d": "9/2017"}, {"body": "michahell need move already answered service used service provider dependencies fulfilled angular question first post author chooses create new instance validator service manually author must provide dependencies manually", "d": "9/2017"}, {"body": "ok issue deleted wo nt move future reference thanks", "d": "9/2017"}, {"body": "michahell think misunderstand want future reference please create snippet code provide link close issue able fulfill answer stack overflow want", "d": "9/2017"}, {"body": "exactly meant asap", "d": "9/2017"}, {"body": "long debug found cause using collectionjson links api links absolute trying migrate httpclient http prevents", "d": "9/2017"}, {"body": "netdeamon suggest add title connected httpclient", "d": "9/2017"}, {"body": "josephliccini updated current work longer new code", "d": "9/2017"}, {"body": "ran issue using router hybrid app way provides url router navigating nt work correctly hashbased routing tweak source pass url hash navigate way handle navigating scenarios correctly see fix", "d": "9/2017"}, {"body": "brandonroberts would nt break using angularjs", "d": "9/2017"}, {"body": "gkalpak maybe example specifically using hash routing apps possible check mode using angularjs handle accordingly correct would stick one mode across apps", "d": "9/2017"}, {"body": "well straight forward keep reference check eg", "d": "9/2017"}, {"body": "clarification nt work jit compilation aot works correct", "d": "9/2017"}, {"body": "marked feature request never intended identical instances", "d": "9/2017"}, {"body": "chuckjaz ahh alrighty nt aware thanks pointing", "d": "9/2017"}, {"body": "larrssn afraid constructor workaround leads bigger problems suggest downgrading last working angular version also change detection related problems versions gt currently staying way busy get applications released investigate problem hopefully someday time construct working plunker demo problem vicb investigate anyway seems least companies problem larssn happen use asyncawait promises code use observables instead", "d": "9/2017"}, {"body": "rvalimaki particular project asyncawait believe gets transpiled anyway mostly observables instead tried downgrading could nt figure correct mix dependencies avoid weird compiler specific errors workaround sufficient", "d": "9/2017"}, {"body": "also faced behavior following workaround works similar tytskyi suggestion know putting zone inside timeout may look weird result trial error process looks like task put queue first wrapped inside zone caveats manually rushing change detection component might problems assign default values inputs order make work changed also move observable definitions reason constructor public ononinit void thisselectedinstance thisselectedinstancesubject distinctuntilchanged constructor thisselectedinstance thisselectedinstancesubject distinctuntilchanged public ononinit void looking forward get sorted", "d": "9/2017"}, {"body": "looking forward get sorted well without working plunker sample bug affecting companies far going get solved also reason issue closed assignees issue well sticking working version enough time investigate issue distant future maybe", "d": "9/2017"}, {"body": "problem case behaviour happens logged google auth logged firebase emailpwd delay first project angular nt know something stupid cited workaround works fine thanks", "d": "9/2017"}, {"body": "l et params reqparams let headers reqheaders", "d": "9/2017"}, {"body": "also happening us seems issue supply multiple values key eg url amp comma syntax url", "d": "9/2017"}, {"body": "vicb jasonaden could confirm expected behaviour", "d": "9/2017"}, {"body": "issue navigatebyurl nt apply", "d": "9/2017"}, {"body": "got", "d": "9/2017"}, {"body": "think docs issue rather underlying aio application wardbell foxandxss et al", "d": "9/2017"}, {"body": "docs issue yes angular changed behavior doc nt updated", "d": "9/2017"}, {"body": "jasonaden please revisit reopen issue sure bug go narrow problem without help unfortunately nt response stackoverflow either saw end building debug paths give getting map found source called thus tries find correct path map gets undefined throws error resave module paths defined everything works fine paths appearing map well provide full error message pictures console helps anything", "d": "9/2017"}, {"body": "nt get useful ca nt make transitioned state stick", "d": "9/2017"}, {"body": "also better solution nt seem work properly used along staggers delays matsko guess could controlled animatechild somehow hover first second", "d": "9/2017"}, {"body": "matsko could elaborate second better solution keep bumping", "d": "9/2017"}, {"body": "maybe missing something feels like simply use query set default state queried elements", "d": "9/2017"}, {"body": "jasonaden thanks comment ultimately managed resolve problem checking fresh copy project new location company svn repository probably intermediate files left automatic build process caused issue", "d": "9/2017"}, {"body": "debugging found issue angular issue spring security", "d": "9/2017"}, {"body": "heathkit mhevery pr following code provide work handler run zone trigger call javascript ngoninit thisscrolllistener thisngzonerunoutsideangular gt return thisrendererlisten thisgetelementref nativeelement scroll event event gt thiselementscrollednext event first walk around javascript const customzone zonecurrentfork name event blacklist onscheduletask delegate zonedelegate current zone target zone task task task gt blacklist scroll mouse request animation frame events tasktype eventtask tasktype macrotask amp amp isblacklistedevent tasksource taskcancelschedulerequest work triggered events added way check eventname run updated pr add kind run events handlers usage use", "d": "9/2017"}, {"body": "see closed pr ever fixed", "d": "9/2017"}, {"body": "pr merged fixed", "d": "9/2017"}, {"body": "sorry kinda new github please tell could got information thank much", "d": "9/2017"}, {"body": "want know pr merge information find also get information commit history", "d": "9/2017"}, {"body": "closing since", "d": "9/2017"}, {"body": "ocombe running angular material latest build setup package structure", "d": "9/2017"}, {"body": "followup seems like problem fact tried putting exexport aliases root entrypoint called individually component something like compiler resolving origin alias different package ca nt find package attempt work around moving reexports hard fix", "d": "9/2017"}, {"body": "module deduplication unique per bundle file working reexported module one specific file multiple packages might work check setup tomorrow see case fix either angular material", "d": "9/2017"}, {"body": "ocombe figured case worked around", "d": "9/2017"}, {"body": "oh nice close issue", "d": "9/2017"}, {"body": "sure want ever support feature case issue could track", "d": "9/2017"}, {"body": "please nt comment closed issues instead create new ones referring one matsko", "d": "9/2017"}, {"body": "use blog post reference", "d": "9/2017"}, {"body": "yes standard thats examples official page work", "d": "9/2017"}, {"body": "hmm problem line instead explanation plunker using latest version angular problem appeared changes previous version angular affected indirectly plunker code case", "d": "9/2017"}, {"body": "ok thanky much", "d": "9/2017"}, {"body": "code snippet trying tell angular use authenticatedhttpservice ask http app read angular providing http instead use class authenticatedhttpservice way register interceptors register interceptors need use httpclientmodule instead older httpmodule registering interceptors need following note multi property tells angular one interceptor also note interceptors loaded order provide hope helps", "d": "9/2017"}, {"body": "dear angular team today friday september unfortunately feedback hope better luck next week cheers", "d": "9/2017"}, {"body": "really appreciate feedback could good nt want someone else already working another rewrite", "d": "9/2017"}, {"body": "womancook cookie", "d": "9/2017"}, {"body": "wrapper implementation around current ts import type angularcore import inject nginject angularcoretesting function inject type fn gt function inject type type fn gt add remaining declarations export function inject params let types params instanceof array types params else types paramsslice paramslength const fn params paramslength fn instanceof function throw new typeerror expected last argument function return nginject types fn usage", "d": "9/2017"}, {"body": "sissue", "d": "9/2017"}, {"body": "thought bug well appears intended behavior look update parent group value child control status changes test formcontrolspects update parent group value child control status changes gt const c new formcontrol one const new formcontrol two const g new formgroup one c two expect gvalue toequal one one two two valuevalue calculation ignores disabled controls corollary form group one child control control disabled calculation parent form group include child control tests verify behavior describe form group form array child controls disabled gt include value child control form group child control disabled gt const c new formcontrol one const g new formgroup one c expect gvalue toequal one one add think peculiar behavior think behavior guess means change bug report feature request", "d": "9/2017"}, {"body": "interesting caveat looks like ignoring disabled definitely depends whether parent group disabled careful vs include values child control form group child controls disabled gt const c new formcontrol one const new formcontrol two const g new formgroup one c two expect gvalue toequal one one two two", "d": "9/2017"}, {"body": "workaround function valuewithoutdisabledchildcontrols control abstractcontrol control disabled throw error happen consider replacing desired behavior controldisabled throw new error attemting get value disabled control value enabled formcontrol value property control instanceof formcontrol return controlvalue control instanceof formgroup const valuetoreturn iterate keys form group looking child controls disabled const childcontrolkey controlcontrols controlcontrolshasownproperty childcontrolkey const childcontrol controlcontrols childcontrolkey childcontroldisabled recursively calculate values child controls disabled valuetoreturn childcontrolkey valuewithoutdisabledchildcontrols childcontrol return valuetoreturn control instanceof formarray const valuetoreturn iterate array child control looking child controls disabled controlcontrolsforeach childcontrol gt childcontroldisabled recursively calculate values child controls disabled valuetoreturnpush indexformutilsvaluewithoutdisabledchildcontrols childcontrol return valuetoreturn describe valuewithoutdisabledchildcontrols tests gt include value child control form group child control disabled gt const c new formcontrol one const g new formgroup one c expect valuewithoutdisabledchildcontrols g toequal one one include values child control form group child controls disabled gt const c new formcontrol one const new formcontrol two const g new formgroup one c two expect valuewithoutdisabledchildcontrols g toequal one one two two include value child control form array child control disabled gt const c new formcontrol one const g new formarray c expect valuewithoutdisabledchildcontrols g toequal one include values child control form group child controls disabled gt const c new formcontrol one const new formcontrol two const g new formarray c expect valuewithoutdisabledchildcontrols g toequal one two", "d": "9/2017"}, {"body": "another test showing works nested groups work nested form group gt const new formcontrol control one const new formcontrol control two const new formcontrol control three const new formgroup ctwo cthree const g new formgroup cone gtwo expect valuewithoutdisabledchildcontrols g toequal cone control one gtwo ctwo control two cthree control three onlyself true expect valuewithoutdisabledchildcontrols g toequal gtwo ctwo control two cthree control three onlyself true onlyself true expect valuewithoutdisabledchildcontrols g toequal cone control one onlyself true onlyself true expect valuewithoutdisabledchildcontrols g toequal cone control one gtwo cthree control three onlyself true expect valuewithoutdisabledchildcontrols g toequal cone control one gtwo", "d": "9/2017"}, {"body": "elliotaplant thanks finding unit test recreates behavior agree bizarre intention form controls seems counterintuitive compared default behavior form groups", "d": "9/2017"}, {"body": "error response body parsing implemented altogether user code ts export class appcomponent constructor private httpclient ngoninit subscribe bad request version google chrome offizieller build canary syzyasan \u00fcberarbeitung", "d": "9/2017"}, {"body": "looking httpxhrbackend handle packagescommon response body parsing implemented nonok responses since default xhrresponsetype text intended change issue header httpclient nt parse error response body", "d": "9/2017"}, {"body": "get exact error chrome desktop", "d": "9/2017"}, {"body": "hi getting error chrome edge recently upgraded angular dont remember seeing angular http failure parsing httperrorresponse jsonparse error unexpected input syntaxerror brent", "d": "9/2017"}, {"body": "error able fix problem setting responsetype text options stopped httpclient trying parse empty response json object realised mentioned initial bug submission appears work chrome edge", "d": "9/2017"}, {"body": "problem used work reading empty responses causes parsing error using responsetype text workaround really ideal response needs parsed json everywhere imo better workaround send empty json response wo nt fail parsed", "d": "9/2017"}, {"body": "issue indeed caused angular", "d": "9/2017"}, {"body": "yeah problem upgrading unexpected end json input empty response chrome official build plans fix", "d": "9/2017"}, {"body": "snakenstein see comment add", "d": "9/2017"}, {"body": "thetric saw workaround suitable net api lot methods returns empty response use swagger nswagstudio generates typescript client api ca nt change way nswagstudio generates code calling course manually change particular method calls practical solution thats wondering plans solving issue workaround", "d": "9/2017"}, {"body": "workaround replace responses requests seems strange breaking change introduced minor version though guess intentional angular team", "d": "9/2017"}, {"body": "came workaround jonathanp return instead empty backend side works", "d": "9/2017"}, {"body": "hi hansl", "d": "9/2017"}, {"body": "thanks taking time describe use case commenters mentioned expected name property would updated input removed view unless add logic suggested adding special config make happen automatically sure would worth given adding option input would amount work clearing property class try keep core api lean possible avoid adding code size things easily implementable developer reasons nt think add feature worth noting though camps use case could consider using serialized form value instead domain object eg passing submit form value templatedriven forms include form controls removed dom", "d": "9/2017"}, {"body": "facing issue vicb updates", "d": "9/2017"}, {"body": "vilic able somehow fix issue workaround", "d": "9/2017"}, {"body": "jurstv tried something like using computed property quoted property actually make output look relatively correct least would method output instead nothing nt actually work", "d": "9/2017"}, {"body": "sad ca nt fixed somehow anyways vilic thanks effort wait till vicb minute look", "d": "9/2017"}, {"body": "seeing behaviour try run via universal server nt happen access site served via", "d": "9/2017"}, {"body": "vs code editor everything working", "d": "9/2017"}, {"body": "want existence input element template affect parent form validity sounds like want templatedriven approach templatedriven forms formsmodule view source truth remove form control element dom value removed parent form validity longer counts toward parent validity see example looks like form invalid input exists valid nt reactive forms reactiveformsmodule source truth form model eg instance component class practically speaking means view necessarily represent entirety form example change view expected model would remove form control validation want happen must remove form control programmatically expression could bound existence control using attribute instead using templatedriven validation approach reactive form means required validator wo nt applied onto form model form control element added dom ngif form initially looks valid form model nt know validator ngif toggled generally nt recommend mixing approaches like confusing results using idiomatic reactive forms would result second recommendation always honoring bound value see updated example closing works expected fix problem recommend either switching templatedriven forms adding existing reactive form", "d": "9/2017"}, {"body": "please file issue instead", "d": "9/2017"}, {"body": "instead workarounds get desired effect ca nt way go screaming computer quite got service wraps trying set nt work way get error go away none workarounds works", "d": "9/2017"}, {"body": "chrillewoodz default json however casting approach works confirm run production", "d": "9/2017"}, {"body": "zaiddabaeen casting anything json far aware public get url string params key string headers httpheaders observable return url thisgetrequestoptions params headers private getrequestoptions params customheaders httpheaders attempting add throws error", "d": "9/2017"}, {"body": "use", "d": "9/2017"}, {"body": "none workarounds works already tried", "d": "9/2017"}, {"body": "also problem removing get call able get work using eg work returns error work", "d": "9/2017"}, {"body": "way got work without error using roddy example inlined options work neither angular", "d": "9/2017"}, {"body": "generic must used responsetype specified something inferred automatically take look defined method makes perfect sense since type something angular know statically responsetype cases need generic", "d": "9/2017"}, {"body": "see coming tytskyi brought would difficult implement well framework level nonprimitive values solution calling conditionally based check seems reasonable", "d": "9/2017"}, {"body": "think dgeni config way knowing comment block module rather subsequent code item", "d": "9/2017"}, {"body": "facing exact issue nt like nested route refresh", "d": "9/2017"}, {"body": "vikerman updates workaround issue", "d": "9/2017"}, {"body": "switched using domino provide dom api server someone verify whether still issue", "d": "9/2017"}, {"body": "funkizer thanks solution works btw ide inside projectfile", "d": "9/2017"}, {"body": "problem using angular material error nt appear related getting error conditionally hiding div ngif like", "d": "9/2017"}, {"body": "getting error seems even declaring import statement component import trigger style transition animate angularanimations get error remove import statement application runs fine", "d": "9/2017"}, {"body": "vikerman still issue solution funkizer going upcoming release also could clarify whether fact cloakelement function called server means somehow browser animations module still imported server side bundle", "d": "9/2017"}, {"body": "update", "d": "9/2017"}, {"body": "nt issue removed amp reinstalled nodemodules hack gone using similar removed needed anymore even though lot tutorials still use maybe", "d": "9/2017"}, {"body": "time look next week get next patch release", "d": "9/2017"}, {"body": "hi dgroh able find root cause issue", "d": "9/2017"}, {"body": "wanted send pr nt know properly write test especially solution provided skreborn work think could remove empty props directly proposal ts createurltree commands navigationextras navigationextras urltree const relativeto queryparams fragment preservequeryparams queryparamshandling preservefragment navigationextras isdevmode amp amp preservequeryparams amp amp console amp amp consolewarn consolewarn preservequeryparams deprecated use queryparamshandling instead const relativeto thisrouterstateroot const f preservefragment thiscurrenturltreefragment fragment let q paramsnull null queryparamshandling switch queryparamshandling case merge q thiscurrenturltreequeryparams queryparams break case preserve q thiscurrenturltreequeryparams break default q queryparams null else q preservequeryparams thiscurrenturltreequeryparams queryparams null introduced change q null q thisremoveemptyprops q return createurltree thiscurrenturltree commands q f ts navigate commands extras navigationextras skiplocationchange false promise validatecommands commands return thisnavigatebyurl thiscreateurltree commands extras extras", "d": "9/2017"}, {"body": "updates", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "yet number improvements prs landed yet merged branch", "d": "9/2017"}, {"body": "chuckjaz planned features newer versions angular really want idea angular work newest typescript currently", "d": "9/2017"}, {"body": "httpclient support manual request overriding observe option", "d": "9/2017"}, {"body": "pain point well", "d": "9/2017"}, {"body": "using attrhidden attributes get serialized platform server certain properties automatically reflected attributes html specs something like may work others need use attrsomeattribute", "d": "9/2017"}, {"body": "value null attr removed remain boolean attr", "d": "9/2017"}, {"body": "believe bug chrome extension invisiblehand look inside file see reference everywhere", "d": "9/2017"}, {"body": "kara may review assign reviewer issue part ibm globalization team need contribute adding numeric shaping support arabic done asap thanks advance", "d": "9/2017"}, {"body": "hello something could support since use data cldr contains kind information would require work include also numeric systems indie ask team", "d": "9/2017"}, {"body": "pr fixes issue merged next week", "d": "9/2017"}, {"body": "thanks matsko awesome work always", "d": "9/2017"}, {"body": "update pr reverted matsko issue need reopened simple fix way", "d": "9/2017"}, {"body": "get later today", "d": "9/2017"}, {"body": "sorry keep pestering matsko update reverted pr", "d": "9/2017"}, {"body": "nazarkryp trying create http interceptor getting errors error c module c angular exported member httpinterceptors error c module c angular exported member httpevent error c module c angular exported member httpinterceptor error c module c angular exported member httphandler error c module c angular exported member httprequest error c find name observable error c module c angular exported member httpinterceptors someone please help", "d": "9/2017"}, {"body": "thoughts foxandxss", "d": "9/2017"}, {"body": "revamp testing chapter cli soon double check happens case test actually runs popups lot warnings errors", "d": "9/2017"}, {"body": "issue", "d": "9/2017"}, {"body": "course would warn content different", "d": "9/2017"}, {"body": "bug currently makes impossible use httpclient encode latitudelongitude param format uses separator values", "d": "9/2017"}, {"body": "bug also makes impossible put email addresses query string example search demonstrated google valid symbol email address example angular removes encoding symbol apparently ietf rfc lists one characters valid query string parameter true valid intended space happens email reaches server server interprets predictably ca nt find corresponding email address", "d": "9/2017"}, {"body": "also experiencing problem angular replacing navigation via routerlink thisngzonerun gt solves problem also loading data subscribing googlefacebook authentication result using similar caztial mentioned", "d": "9/2017"}, {"body": "jasonaden update one suggestion would currently broken aot compilation", "d": "9/2017"}, {"body": "bunch issues router guards resolvers jasonaden plan improve later releases", "d": "9/2017"}, {"body": "getting instance work error authhttp class", "d": "9/2017"}, {"body": "willcopperleaf example tried able example typescript import injectable injector angularcore import httpinterceptor httpevent httprequest httphandler angularcommon import observable rxjsobservable import authservice sharedauthservice injectable export class authinterceptor implements httpinterceptor private authservice authservice constructor private injector injector intercept request httprequest next httphandler observable", "d": "9/2017"}, {"body": "basically authservice needs http request retrieve token refresh token store localstorage would propose implement see examples people inside intercept method add headers authservice directly add token localstorage means already token getheaders method asynchronous understand way exclude specific requests interceptors nt get intercepted way load interceptors specific component module defined app module", "d": "9/2017"}, {"body": "process bug problem cause issues productive env", "d": "9/2017"}, {"body": "issue", "d": "9/2017"}, {"body": "case error happens plain enum sure workaround explained applicable even would go implementing workaround particular case export enum role admin organizer secretariat club user export interface iuser id number name string email string password string role role compiled using flag angularcli dependency angularcompiler compiles fine gt much", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "want workaround till angular rolls around gets fixed created repo janousek fix automated builds set workaround allows things stay automated till fix usage packagejson use src compiler angularcompiler git still trying understand reason behind change anyone knows pls share update code accordingly thanks guys leading workaround", "d": "9/2017"}, {"body": "hi vaguely aware angular going get lts maintenance however answer issue seems wait plans fix issue many people using standard typescript language features seem like unable access lts patches past apologies completely misunderstood advice workarounds thanks advance", "d": "9/2017"}, {"body": "updated release according changelog included fix issue still present using route", "d": "9/2017"}, {"body": "updated angular error still error illegal state symbol without members expected got", "d": "9/2017"}, {"body": "works environment windows ubuntu docker enums happy", "d": "9/2017"}, {"body": "natewarner turns fix incomplete fixed cases replace line compilerumdjs looks like fix case running", "d": "9/2017"}, {"body": "natewarner verify fix resolves issue try get", "d": "9/2017"}, {"body": "chuckjaz confirm making change fix routes thanks quick response", "d": "9/2017"}, {"body": "alxhub issue solved maybe inlining type specify observe attribute request options using angular thanks advance", "d": "9/2017"}, {"body": "counterargument issue mostly thinking loud may explain situation bug basically problem mostly appears using async pipe people seeing also often use pipe observable coming ngrx way ngrx used happen even something changes store select query would produce identical result usually people exploits avoid new value emitted unfortunately store starts get complex values produced involve nested structures arrays objects becomes impossible produce new value even though semantically identical method deep comparison expect complain case forgot async pipe uses wrapped values explicitly specify value changed async pipe generic point view observable new value emitted important event even value semantically hence normal angular complain something changed already checked something change event emitted observable said meaningful event uses observables solution would thus refactor store order emit new values nothing change rewrite selectors goal mind unfortunately easy sometimes cumbersome problem thus bug question design use ngrx async pipe etc justified andor practicable tbosch alxhub robwormald would great could least provide feedbacks reasoning justified close issue starts complaining inability angular ngrx combined together complex scenario p", "d": "9/2017"}, {"body": "way said maybe wrong async pipe mark change detection ref check new values emitted complex sure", "d": "9/2017"}, {"body": "could use one resolver promise chain", "d": "9/2017"}, {"body": "thanks answer noamichael end choose specific problem answer ngoninit guards requested feature would useful separate requests order better organised code", "d": "9/2017"}, {"body": "please provide repro", "d": "9/2017"}, {"body": "similar usecase like able read dom style properties demand created directive allows add css class element mouse using animatecss wo nt apply animations inline items want detect display attribute property set inline set inlineblock import directive elementref hostlistener input renderer hostbinding afterviewinit angularcore directive selector animateonmouseover export class animateonmouseoverdirective implements afterviewinit hostbinding classanimated animated boolean true hostbinding styledisplay display string input animateonmouseover animationclass string hostlistener mouseenter onmouseenter thisgetclasslist add thisanimationclass hostlistener webkitanimationend hostlistener mozanimationend hostlistener msanimationend hostlistener oanimationend hostlistener animationend onanimationend thisgetclasslist remove thisanimationclass constructor private renderer renderer private el elementref ngafterviewinit void const e thiselnativeelementstyledisplay e inline thisrenderersetelementstyle thiselnativeelement display inlineblock private getclasslist domtokenlist return thiselnativeelementclasslist domtokenlist even possible moment ca nt seem find way read style properties played around hostbinding input luck reply issue may help set context", "d": "9/2017"}, {"body": "also", "d": "9/2017"}, {"body": "fixed released", "d": "9/2017"}, {"body": "anyone enlighten one parse parameters new httpparams instance convert back string post body seems logical convert parameters single string initially rather creating cumbersome immutable object multiple times value httpparams add seems order use throughout application would need extend", "d": "9/2017"}, {"body": "experiencing related issue expressionchangedafterithasbeencheckederror always thrown simple reactive form input lower template hierarchy level defined etc code accessing form validity name required working plunkr reason error thrown change detection evaluates error div first evaluates input validity input one level lower terms template hierarchy workaround bring error div onto level input adding another around mentioned", "d": "9/2017"}, {"body": "understood correctly difference youdz blog post suggests user supply rather hide shadow dom component", "d": "9/2017"}, {"body": "shairez implemented rejected youdz blog post correctly describes current behavior users wrap projected content add essentially wraps content client side allow content instantiated multiple times instantiated dynamically projection", "d": "9/2017"}, {"body": "confirm case using lazy loading refactored module use lazy loading one broke refactored workarounds except using absolute path quite annoying", "d": "9/2017"}, {"body": "samverschueren unfortunately removed lazy loading app local network critical", "d": "9/2017"}, {"body": "probably related", "d": "9/2017"}, {"body": "nt help", "d": "9/2017"}, {"body": "face issue manage fix sutineeangs", "d": "9/2017"}, {"body": "problem temporary solution one script load indexhtml another script dynamically add indexhtml call function first routing component nginit assets folder", "d": "9/2017"}, {"body": "problem", "d": "9/2017"}, {"body": "sutineeangs id nt exist exists login refresh", "d": "9/2017"}, {"body": "foxandxss one closed resolved", "d": "9/2017"}, {"body": "wizarrc solve build issue followed similar steps solve build issues stuck following warning message ckumaranopensourceangularangulardistpackagesdistcorebundlescoreumdjs warn dropping unreachable code c warn declarations unreachable code c warn dropping unreachable code c warn declarations unreachable code c warn dropping unreachable code c warn declarations unreachable code c warn dropping unreachable code c warn declarations unreachable code c warn dropping unreachable code c warn declarations unreachable code c warn side effects initialization unused variable c ckumaranopensourceangularangulardistpackagesdistcorebundlescoreumdjsmap ckumaranopensourceangularangulardistpackagesdistcorebundlescoretestingumdjs warn side effects initialization unused variable pendingtimers c", "d": "9/2017"}, {"body": "kumvem never got work gave hoping others could startup failed", "d": "9/2017"}, {"body": "followed steps provided wizarrc thanks similar results additional step tried suggestion remove call search line buildsh file near line truncate line remove call reads launch version administrator navigate project root folder takes build completes know negative effect caused removal call", "d": "9/2017"}, {"body": "ddid work older ng version", "d": "9/2017"}, {"body": "anything done", "d": "9/2017"}, {"body": "roddy using change longer able apply custom styles cryingcatface", "d": "9/2017"}, {"body": "believe thread wrongly closed online official documentation except comment vicb claim possibilities put shadow piercing css rules deprecated solid confirmation long term solution need replacementrefactoring current code future stay indeed", "d": "9/2017"}, {"body": "think css custom properties going ones replace behavior eventually cross shadow boundaries impediment perspective happen browser support css custom properties polyfillable without concerning caveats one consider performance agree deprecation concerning hopefully last emulated encapsulation long enough css custom properties widely available", "d": "9/2017"}, {"body": "chuckjaz released", "d": "9/2017"}, {"body": "preventing us updating ts using awesome features like string enums would greatly benefit project timeline angular going support latest versions ts enabled", "d": "9/2017"}, {"body": "nathanmarks seems latest beta fix", "d": "9/2017"}, {"body": "one working pick", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "dependencies tsconfigjson happening", "d": "9/2017"}, {"body": "reverted typescript works", "d": "9/2017"}, {"body": "let actually collapse issue existing one since earlier also includes touched etc closing dupe continue discussion one", "d": "9/2017"}, {"body": "reworked almost examples using cli issue longer relevant", "d": "9/2017"}, {"body": "btw also happens declare variable instead function call might useful change error message explain anything inside forroot function nt exported could cause error", "d": "9/2017"}, {"body": "hi hansl wondering thoughts", "d": "9/2017"}, {"body": "hi ladyleet thanks pinging unfortunately responsible triaging issue core issue knowledge sorry", "d": "9/2017"}, {"body": "thx hansl stephenfluin idea whether matters priority welcome contribution help fix issue", "d": "9/2017"}, {"body": "sounds like ie problem tbh mean whatever webapp nt able prevent allocated ram reload fwiw similar issue reported angularjs time ago angularangularjs boiled work around ie memory leaks spas nt seem exact issue may common roots ie manages underlying processes", "d": "9/2017"}, {"body": "quote article gkalpak references looks like solution work around ie bug allow ie apply hack simply need get app reload key points ie detects getting close memory limit transparently recycles process nt seem bug specific angular even one anything chrome referenced plnkr uses according chrome tooling compared memory given angular site comparison home page", "d": "9/2017"}, {"body": "stephenfluin thanks taking time respond thank hansl", "d": "9/2017"}, {"body": "gkalpak clear get app reload means mean refresh page would nt action causes leak", "d": "9/2017"}, {"body": "maxkisung nt say anything reloading grin mentioned nt seem exact issue may common roots ie manages underlying processes also tried op plnkr ie observation refreshing several times total memory increases considerably heap snapshots show un gced objects nt show increase retained memory took quick look might missed something take conclusions grain salt ca nt give definitive answer suspect ie issue something angular ca nt much", "d": "9/2017"}, {"body": "hope helps", "d": "9/2017"}, {"body": "susanhanson robertteisanu", "d": "9/2017"}, {"body": "gkalpak thanks amazing responding thread greatly appreciate", "d": "9/2017"}, {"body": "news fix proper behavior", "d": "9/2017"}, {"body": "possible fix sorry time right go whole contributing process project setup etc seems could fix problem changed following functions createurltreets nodemodules problems far could anyone working angular project setup check please function getpath command typeof command object amp amp command null amp amp commandoutlets return commandoutlets primaryoutlet else typeof command object amp amp command null amp amp commandoutlets matrix parameter return command else return command function prefixedwith segmentgroup urlsegmentgroup startindex number commands let currentcommandindex let currentpathindex startindex const nomatch match false pathindex commandindex currentpathindex lt segmentgroupsegmentslength currentcommandindex gt commandslength return nomatch const path segmentgroupsegments currentpathindex const curr getpath commands currentcommandindex const next currentcommandindex lt commandslength commands currentcommandindex null return match true pathindex currentpathindex commandindex currentcommandindex", "d": "9/2017"}, {"body": "settimeout actually worked thanks jingglang subscribe data gt settimeout gt thisrequesting data", "d": "9/2017"}, {"body": "robwormald correct issue difficult detect using ngrx observables issue component containers different levels route hierarchy subscribing store state soon moved container components level feature module issue went away know sort convoluted answer happen using ngrx containercomponent pattern hopefully points investigation right direction", "d": "9/2017"}, {"body": "settimeout works thanks jingglang ngafterviewinit thisinnerheight windowinnerheight settimeout gt thisprintposition", "d": "9/2017"}, {"body": "alexzuza happening ngif happening least also ngclass", "d": "9/2017"}, {"body": "ninjacodinggit described specific case know happen code", "d": "9/2017"}, {"body": "calling changedetectorref changing element solved problem import component changedetectorref angularcore component selector myapp template export class app message string loading constructor private cdr changedetectorref ngafterviewinit thismessage done loading thiscdrdetectchanges solution found", "d": "9/2017"}, {"body": "hello thetylerb could elaborate using ngrx dont know compensate think using promises top observables pretty awkward", "d": "9/2017"}, {"body": "also take look comment made interaction change detection ngrx helpful suppose", "d": "9/2017"}, {"body": "victornoel thanks pretty much describes situation got nested immutable data structures immutablejs using async pipes everywhere initial thoughts store would change component tree store hydrated component tree would compensate change another changedetection", "d": "9/2017"}, {"body": "got nested immutable data structures immutablejs using async pipes everywhere initial thoughts store would change component tree store hydrated component tree would compensate change another changedetection project kind normalized datastructure instead nested data structures mitigates bit kind problems hope either changing store datastructures changes one part trigger updates parts careful trigger events childs components listen store via async pipe triggering manually change detection trigger aforementioned events trigger event another time settimeout", "d": "9/2017"}, {"body": "using ngrx got situation like appcomponenthtml appcomponentts course situation get error add boolean flag component like appcomponenthtml appcomponentts error gone course understandable want know opinions good solution pros cons", "d": "9/2017"}, {"body": "using ngrx issue simple check queryselectorall bogdancar solution suppresses error would nice import changedetectorref fixing whatever causing error first place", "d": "9/2017"}, {"body": "looks like encompassed closing dupe", "d": "9/2017"}, {"body": "petebacondarwin update issue implemented suggested aaronfrost rgullhaug mentioned previous reply change works us nt wanted go forward confirm available official angular implementation", "d": "9/2017"}, {"body": "still looking definitely want support use case new api alternative way bootstrapping upgrade apps called angular side app bootstrapped first downgraded component instantiated angularjs template since approach nt control downgraded module bootstrapped ca nt tell downgraded component injector need think would work apps using bootstrap approach work even requires boilerplate would nice remove since share use api need make sure things nt get crazy already", "d": "9/2017"}, {"body": "idea workaround possible right without changes ngupgrade create directive route resolve handler attach newly loaded angular module injector dom item current implementation always use looking root injector", "d": "9/2017"}, {"body": "poc workaround", "d": "9/2017"}, {"body": "thanks lot petebacondarwin got working per workaround attach newly loaded angular module injector dom data item injectorkey", "d": "9/2017"}, {"body": "interested discuss approaches attaching different scenarios samudrak attaching done router resolve somewhere another approach", "d": "9/2017"}, {"body": "petebacondarwin tested two different scenarios scenario first scenario attached injector router resolver appconfig routeprovider controllerprovider compileprovider filterprovider provide qprovider locationprovider function routeprovider controllerprovider compileprovider filterprovider provide qprovider locationprovider appregister controller controllerproviderregister directive compileproviderdirective filter filterproviderregister factory providefactory service provideservice component compileprovidercomponent routeproviderwhen templateurl resolveviewhtml controller resolvectrl otherwise template controller resolvectrl resolve resolvedval q timeout rootelement compile rootscope function q timeout rootelement compile rootscope var deferred qdefer apploaderload appcustommodule modfac gt consolelog module loaded appmodfactory appcompilercompilemoduleandallcomponentssync modfacmoduletype var ngmodfactory appmodfactoryngmodulefactory appchildmod ngmodfactorycreate appmodinjector consolelog appmodfactorycomponentfactories appfactoryresolver appchildmodinjectorget componentfactoryresolver componentfactoryresolver scenario second scenario attaching injector dom ready first fully load dom empty div placeholder div component following dom ready attach placeholder placeholderelementappend newelementchield attach injector placeholder div placeholderelementdata angularinjectorcontroller moduleinject recompile placeholder rootscope compile placeholderelement rootscope", "d": "9/2017"}, {"body": "cool key thing thinking need attach injector different situations poc attaching newly loaded component root element via container holds new injector practice guess happen loading new code route expect new components appear route template might enough attach injector element", "d": "9/2017"}, {"body": "absolutely spot petebacondarwin wise downgrademodule unnecessarily traverse dom tree reach root element find new injector case container place holder hold components application attaching injector place holder general practice say container holds correct place attach new injector may compile instead using rootscope use scope associated container holds new injector", "d": "9/2017"}, {"body": "goodwine seems plunker reproduce issue could update plunker thank", "d": "9/2017"}, {"body": "updated plunkr ca nt reproduce issue anymore remember reading improvements tests components macro tasks maybe nt problem anymore", "d": "9/2017"}, {"body": "added pr fixing also went ahead updated reactive directives present forms", "d": "9/2017"}, {"body": "looks like app affected issue well scenario use ngoninit subscription router events dynamically create secondary navigation depending component consequence route active basically feature component bound particular route respective resolver resolver puts secondary navigation configuration think array anchors route feature components nested main container component main container subscribe route navigation events filter navigationend events look active route secondary navigation configuration configuration found emit event navigation configuration stream another component nested main container secondary navigation component also subscribes previously mentioned configuration stream event caught updates set anchors dom complex scenarios eg components respective resolvers instead setting navigation configuration based async response received server etc order events happening like taken directly app consolelog update angular get console moving router events configuration changes subscriptions respective constructors workarounds issue perspective breaking changes take place line especially nt announced anywhere clearly plus handle subscribeunsubscribe elegantly ngoninit ngondestroy code constructor ngondestroy weird", "d": "9/2017"}, {"body": "update cherrypick", "d": "9/2017"}, {"body": "issue downgraded working", "d": "9/2017"}, {"body": "ugh thanks", "d": "9/2017"}, {"body": "showing map showing markers map need help solve problem old version showing statement deprecated", "d": "9/2017"}, {"body": "works", "d": "9/2017"}, {"body": "downgraded resolved issue thk", "d": "9/2017"}, {"body": "links", "d": "9/2017"}, {"body": "gkalpak shall close one", "d": "9/2017"}, {"body": "would nice something similar vuejs docs", "d": "9/2017"}, {"body": "met issue reading sample code router found issue due importing lazy loaded module directly lol", "d": "9/2017"}, {"body": "hmm also thanks replying sep zhoucheng li notifications githubcom wrote met issue reading sample code router found issue due importing lazy loaded module directly appmodule lol receiving authored thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hi news brilliant feature", "d": "9/2017"}, {"body": "given repro case closing", "d": "9/2017"}, {"body": "present cli", "d": "9/2017"}, {"body": "still present angular angular cli", "d": "9/2017"}, {"body": "foxandxss work case updating content", "d": "9/2017"}, {"body": "created super long ago probably need tweak two", "d": "9/2017"}, {"body": "possibility would let angular router handle initial page loaded words right issue routing route guard redirecting route router tries clean looks see last successful navigation deep linking nt one default used default route first routed maybe nt default nt cleanup step default needs tested noting track possible solutions", "d": "9/2017"}, {"body": "review seems indicate redirecting route another route nt work router falls condition mentioned redirect tries renavigate state seems get messed case redirect fails user lands root page note another difference version redirect redirecting previously successfully rendering route redirect work redirecting route previously successfully rendering route redirect fail go back last successfully rendered route instances redirect root deep link", "d": "9/2017"}, {"body": "part fix add ability current navigation rollback defaultlike state start new navigation redirecting", "d": "9/2017"}, {"body": "seeing similar issues run test btw function error nt show related conversation stackoverflow checked unsubscribes fixturedetectchanges place nt seem cause happening way get cleaner output destroy component properly", "d": "9/2017"}, {"body": "adrienboulle confirm good user experience see website example first loaded page blinks content reloaded redisplayed xhr request would interesting process xhrreload content content already present dom thanks serverside rendering better xhrload content compare xhrloaded content newer already displayed content ssr hashid placed dom example potentially older serverrendered versions would updated xhr", "d": "9/2017"}, {"body": "need check still problem think change might fixed", "d": "9/2017"}, {"body": "still bit broken markdown gets rendered line line line", "d": "9/2017"}, {"body": "trouble rendering following commonmark spec think live", "d": "9/2017"}, {"body": "ristaaf issue realise using guard wrong place instead placing guard place main route start module lazyload module definition setting alias load module components basiclly component place componentsroutes want protect point placing inside route property", "d": "9/2017"}, {"body": "since nt able reproduce months closing", "d": "9/2017"}, {"body": "tbosch input providing pr", "d": "9/2017"}, {"body": "see outstanding item link directive docs selector code", "d": "9/2017"}, {"body": "lunr seems good enough job", "d": "9/2017"}, {"body": "sure issue angular please reopen fix angular", "d": "9/2017"}, {"body": "someone tell pull request approved tried get angular running hours windows shows error", "d": "9/2017"}, {"body": "hi vikerman think bug angular google still nt render application works major browsersphones", "d": "9/2017"}, {"body": "hi living problem problem related need include manually morever extra info situation got error try prerender website idea problem related googlebot support syntax phantomjs used prerender please help least showing way add project", "d": "9/2017"}, {"body": "desire share solution worked created angular project angularcli imports srcpolyfillsts commented removing comment tags made trick", "d": "9/2017"}, {"body": "problem angular using aot browser iphone cpu iphone os like mac os x khtml like gecko error error uncaught promise typeerror thisrouterserializeurl function thisrouterserializeurl thisurltree thisrouterserializeurl updatetargeturlandhref", "d": "9/2017"}, {"body": "hit issue using angular looked bit maybe way found think error deterministic always error line triggering appears random error js method routerserializeurl seems overridden small floating point value seen error message thisrouterserializeurl value changes time error triggered always small actually subnormal floating point value actually makes think value method overridden obscure bug safari javascript interpreter reinterprets function bits address bits floating point value would actually match architecture devices triggering error ipad case devices seem use arm cpus floating point registers although since javascript managed would actually implies deeper corruption safari interpreter memory state bug might triggered code generated typescript build maybe uglifyjs step generates several variable names shadowing quite complex ways change angular like update set packages bundled along might change code generated uglifyjs way safari bug nt trigger anymore advice anyone hitting bug would try update angular package", "d": "9/2017"}, {"body": "ps investigation reproduced dev mode therefore without name mangling", "d": "9/2017"}, {"body": "still problem gkalpak", "d": "9/2017"}, {"body": "yes", "d": "9/2017"}, {"body": "would also need agree process people managing events", "d": "9/2017"}, {"body": "petebacondarwin sure issue rather engineer page page listing events angular team one us usually makes pr add new one fine historical events still listed lets people plan future years events typically go think pr closed unless issue unaware", "d": "9/2017"}, {"body": "works", "d": "9/2017"}, {"body": "also broken common danish characters \u00e6\u00f8\u00e5 eg f\u00f8deration gt f\u00f8deration jordb\u00e6r gt jordb\u00e6r implementation found seems working correctly nt know nt actual implementation instead", "d": "9/2017"}, {"body": "closing ca nt reproduce", "d": "9/2017"}, {"body": "release fixed", "d": "9/2017"}, {"body": "got hit today nt know much angular internals though ask major change meaning done something eventually someone could pick", "d": "9/2017"}, {"body": "saying big thank trotyl saved life getter pulling hair half hour thank", "d": "9/2017"}, {"body": "also get error declare service declarations array declare services providers array", "d": "9/2017"}, {"body": "hello ocombe follow concerning point raised dynamic bindings thus one app per language thanks lot work", "d": "9/2017"}, {"body": "vicb working right likely", "d": "9/2017"}, {"body": "ocombe checklist updated see already merged newer versions better reflect hard works", "d": "9/2017"}, {"body": "yes good idea update edit updated", "d": "9/2017"}, {"body": "matsko vicb could someone kindly provide least initial indication questions raised would appreciated believe someone else chime please hesitate loop thx", "d": "9/2017"}, {"body": "titusfx short yes ngif directive structural directive asterisk character syntatic sugar expects pass else condition ngif directive code grab referenced markup correctly write really becomes write test else template info read sections", "d": "9/2017"}, {"body": "issue component nt get added outlet nonempty paths ie work work nonempty paths using stated hack achieve since seems working path empty sure design able find anything regarding documentation would love word core team vicb ps one feature modules lazy loaded nt tried parent module sure behavior parent module", "d": "9/2017"}, {"body": "problem angular", "d": "9/2017"}, {"body": "update also better workaround put empty html comment template", "d": "9/2017"}, {"body": "still present angular updated angular version reproduction", "d": "9/2017"}, {"body": "problem trying dig bit see find", "d": "9/2017"}, {"body": "mentioned expected behavior dirty property form control designed indicate whether user interacted form programmatic changes also make control dirty would defeat purpose property longer able tell value change came ui application code case button click calls form method forms api way knowing whether ultimately comes user action whether simply setting data form always call cases closing works expected", "d": "9/2017"}, {"body": "mentioned earlier problem extends recognizing user interaction example dynamically creating forms array input fields populating input fields browser nt affect pristine status would hope would considered valid bug fwiw agree decision close expected programmatic changes", "d": "9/2017"}, {"body": "hey kara came conclusion nt realize api mark form dirty declared reactive forms unusable reopened documentation problem markasdirty api deserves attention reactive forms tutorial code samples", "d": "9/2017"}, {"body": "deal validation attribute ngversion allowed element div point exist way disable", "d": "9/2017"}, {"body": "created pr hope someone apply", "d": "9/2017"}, {"body": "jasonaden update", "d": "9/2017"}, {"body": "sod netanelbasal looking plnkr looks like one message logged switching xcomponent ycomponent either confirm using plnkr problem", "d": "9/2017"}, {"body": "yes problem unsubscribe observable handler run", "d": "9/2017"}, {"body": "amazing works", "d": "9/2017"}, {"body": "anyone want take fairly straightforward", "d": "9/2017"}, {"body": "issue seems related", "d": "9/2017"}, {"body": "scottseeker get work somehow scratching head testbed config wont load initalizing tests", "d": "9/2017"}, {"body": "manually initialized config class calling load method tests says closed ticket nt recall closing", "d": "9/2017"}, {"body": "noticed well found issue confirm one", "d": "9/2017"}, {"body": "rehbeindieter nice workaround thank much", "d": "9/2017"}, {"body": "rehbeindieter anyone else similar workaround using reactive forms eg", "d": "9/2017"}, {"body": "jloosli workaround types forms simply wrap custom validator check special case feed control", "d": "9/2017"}, {"body": "worth workaround add remove email validator based whether value empty", "d": "9/2017"}, {"body": "dherges second link dead could provide working link", "d": "9/2017"}, {"body": "one", "d": "9/2017"}, {"body": "tbosch alexeagle understand correctly alex comment set one place set true compilercli tscwrapped sets false nt set false", "d": "9/2017"}, {"body": "ever actually going seems unlikely shall close foxandxss wardbell", "d": "9/2017"}, {"body": "retested angular issue still present update issue", "d": "9/2017"}, {"body": "setup better plunker issue plunker runs first time last page provide button allowing go back page click watch console router tracing output guard check ends routing cancelled reason given", "d": "9/2017"}, {"body": "code getting triggered undefined edit something causing navigation id incremented resulting code firing edit even chrome location class causing two events fired imperative event followed hashchange event however rawurls match edit believe issue calling", "d": "9/2017"}, {"body": "using router navigate resolves issue enclosing call however still concerning bug using browser back button effectively reproduces scenario", "d": "9/2017"}, {"body": "wow ca nt believe nt priority yet", "d": "9/2017"}, {"body": "behavior allow using prerendering user navigates url without trailing slash eg server redirect return fully rendered page angular updates url back overview rerender page browser preserve trailing slash", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "anyone needs overwrite striptrailingslash edge case typescript import location angularcommon const striptrailingslash location striptrailingslash location striptrailingslash function striptrailingslash url string string return test url url striptrailingslash url import main ng module bootstrap document ready", "d": "9/2017"}, {"body": "lyokojeremie could updated plunker reproduce bugs latest thanks", "d": "9/2017"}, {"body": "jialipassion oh seems like work reproduce plunker plunker load zonejs without version code follow think plunker always load latest version need time upgrade zonejs product verify issue make sure fixed production env", "d": "9/2017"}, {"body": "davidtyle share workaround", "d": "9/2017"}, {"body": "obligatory xkcd geocine nt post workaround little gross essentially boils hope helps found better workaround let know", "d": "9/2017"}, {"body": "things going form group form array enabled omits disabled children serialized value mimic native form behavior however form groupsarrays act slightly differently disabled expected disabled form groupsarray value property ie thisformget arr value contain values children originally designed way form controls levels act way disabled makes sense consider individual form control like native html forms disabling form control element simply disables changing value ui still get set individual value programmatically like set value eg controlsetvalue nancy always get thing back get value eg controlvalue nancy model form groups form arrays work disabled set get values retained disable request disabled array value directly eg thisformget arr value get full value otherwise get confusing scenario seems like setting value nt work matter set value get empty array back said disabled group array value never included parent form aggregate value parent form enabled plunker repro github issue parent form actually enabled form controls inside disabled also becomes disabled disabled group value contains values children including disabled ones add another control form form stays enabled see array value disappears expected little documentation disabling controls work given nuances really better job try add information docs next weeks meantime hopefully original proposal doc bit info", "d": "9/2017"}, {"body": "redirected error page error occurs whole app fubar note called check plunkr would nt expect changed zoechi exisiting behavior problem upgrading seems impact", "d": "9/2017"}, {"body": "problem upgrading aware changes nt mean nt happen nt run guess need invoke change detection get app going nt assume sane state unhandled exception showing error page riskfree therefore safe workaround", "d": "9/2017"}, {"body": "say impact mean work", "d": "9/2017"}, {"body": "want", "d": "9/2017"}, {"body": "yes thank nt think use zone silly future readers inside error handler service think inject", "d": "9/2017"}, {"body": "also get similar error declare service declarations array declare services providers array", "d": "9/2017"}, {"body": "added croneditormodule provides instead ngmodule still getting croneditormodule ngmodule", "d": "9/2017"}, {"body": "maybe reopen issue matsko", "d": "9/2017"}, {"body": "fixed staeke see", "d": "9/2017"}, {"body": "hmmm mergefix reverted wait little longer make master build see pr", "d": "9/2017"}, {"body": "started documentservice realized nt want special case every single meta tag like went route provding good subset dom api server using domino answer use dom api", "d": "9/2017"}, {"body": "label underlying application docsgeneration changes data display including navigation items label", "d": "9/2017"}, {"body": "also facing problem modules little workaround add manually component input annotations dts files annotations go missing dts files generated ts source files ai nt suitable solution better approach solve", "d": "9/2017"}, {"body": "got error import reflectmetadata clear metadata cache angular able find ngmodule decorator appropriately removed used script", "d": "9/2017"}, {"body": "kind error also occur tests imports declaration declare somethingcomponent instead somethingmodule", "d": "9/2017"}, {"body": "thank working tool please consider following optional parameter passed extraction tool still produce empty nodes messagesxlf file change generating node produced xlf file structural change considered carefully opinion implemented option default behavior available behavior keep backward compatibility previous versions file structure produced previous versions text extraction tool since upgraded latest version angular locale aot builds broken figured angular extraction tool generate empty tag messagesxlf file anymore custom script add customized localized strings messagesxlf file based existence file custom script would take text add localized prefix text populate nodes fake translations could create localized bundles allowed use fake translations localized builds waiting real translated xlf files translators since latest unnecessary change extraction tool workflow aot builds broken", "d": "9/2017"}, {"body": "edit please note inherently dangerous pass cookies user browser httpclient requests domain following example also shows set cookies serverside rendering general server maints typescript import zonejsdistzonenode import platformserver rendermodulefactory angularplatformserver import enableprodmode angularcore import appservermodule appmodule import appservermodulengfactory aotsrcserverappmodulengfactory import express express import bodyparser bodyparser import cookieparser cookieparser import path path import router routes import enableprodmode let port processenvport const app express appuse expressstatic pathresolve dirname dirname client appuse expressstatic pathresolve dirname assets appuse bodyparserjson appuse cookieparser appuse api router appget req res gt rendermodulefactory appservermodulengfactory document require browserindexhtml url requrl extraproviders provide request usefactory gt req data gt ressend data applisten port gt consolelog listening port typescript import injectable angularcore import platformid inject injector angularcore import isplatformbrowser angularcommon import httpevent httpinterceptor httphandler httprequest angularcommon import observable rxjsobservable import rxjsaddoperatordo import rxjsaddoperatormergemap import rxjsaddobservablefrompromise import express express injectable export class defaultinterceptor implements httpinterceptor constructor inject platformid private platformid string private injector injector typescript import injectable ngmodule angularcore import httpclient httpclientmodule httpinterceptors angularcommon import rxjsaddoperatortopromise import defaultinterceptor interceptordefaultinterceptor injectable export class whateverservice constructor private httpclient ngmodule imports httpclientmodule providers provide httpinterceptors useclass defaultinterceptor multi true whateverservice export class whatevermodule hope helps successfully setting cookies serverside rendering angular", "d": "9/2017"}, {"body": "vikerman sorry away past month finished updating dependencies yesterday keep getting behavior described lazy road works well flicker styles angular hydrate prerendered page request lazyloaded module loads flicker suspecting custom could issue however change commenting try reproduce days small github investigate easily", "d": "9/2017"}, {"body": "ca nt get make repro yet investigating comparing universalstartercustomwebpack one flicker fresh start deed nt flicker adding routermodule however nt see much difference config yet use shared module declare shared component use could keep investigating share repo soon one", "d": "9/2017"}, {"body": "solution works using lazy loading using lazy loading prevents flickering root url whereas lazy loaded pages still flicker", "d": "9/2017"}, {"body": "angular beta appears fix somehow flicker free example universal flicker", "d": "9/2017"}, {"body": "well issue closed anyway key buildform let fb thisformbuilder get animals formgroup return thisformget animals formgroup animal angular upd omit work development throw errors run throw topic error message stops build", "d": "9/2017"}, {"body": "gkalpak", "d": "9/2017"}, {"body": "nt done anything specifically current scores still room improvement nothing critical", "d": "9/2017"}, {"body": "mlaval see working idea expect solution", "d": "9/2017"}, {"body": "settimeout trick nt work subscribing reactive form either", "d": "9/2017"}, {"body": "longer relies upon", "d": "9/2017"}, {"body": "thanks chrisnicola breakdown issue workarounds spending hours searching workaround post really helped", "d": "9/2017"}, {"body": "honestly ridiculous even problem switched vue", "d": "9/2017"}, {"body": "chrisnicola vue treating ya moved angular react back still trying find easiest fastest way best support create spa", "d": "9/2017"}, {"body": "probably place discussion pretty great somewhat familiar experience angular sadly vue feels like angular instead designed attempt make javascript framework look like java enterprise project", "d": "9/2017"}, {"body": "problem really nt understand say sure recompile ngc end tsconfigaotjson could ngc read ngfactoryjs files", "d": "9/2017"}, {"body": "fixed angularmaterial issue outside material happens n cli using material thanks", "d": "9/2017"}, {"body": "news please", "d": "9/2017"}, {"body": "zmkn question plunker example actually helped solve issue routing path like memberorder getting error match routes url segment putting path component canactivate attributes submodule submoduleroutests instead approutests thanks wish luck getting solution question", "d": "9/2017"}, {"body": "problem", "d": "9/2017"}, {"body": "news mean would like know implemented rejected think crucial feature compared easy work dynamic component react", "d": "9/2017"}, {"body": "also bit pain well agree would great valuechanges supplemented values would observable emits values initial changes duplicates etc valuechanges still useful shortcut many instances values would give developer full control values coming form example filtered search component initializes setup filter form want execute search form changes including initial search initial values set", "d": "9/2017"}, {"body": "alirezamirian inject place regular http service use get cyclic dependency error create new token di instead http", "d": "9/2017"}, {"body": "asgerjensen created new token use case nt want custom extended http service served di token wanted service extends", "d": "9/2017"}, {"body": "hi somewhat different usecase advised feature request duplicate issue company application allows consumers search property data available public national registers user selects property display report available data report generated third party pure html big table elements report contains protolinks pieces information user purchase proto links clearly markedeasialy selectable contains information required generate link attributes basically unique identifiers various documents application currently supports languages jitcompilation would take forever current solution bind sanitized html innerhtml component afterviewinitphase component traveses html replaces protolinks anchorelements things working ok suppose bit hacky fairly ok would however feel better wee bit autistic things could use routerlinks navigation occurs within singlepage app pagerefresh makes sad panda ideally suppose would way somehow declare whitelist components directives like routerlink could compile bit trusted html would possible aot compilation feels like possible weadviseyounottodothisinproductionkinda way nt found way yet critical application atm probably person would register difference super happy glorious framework turned", "d": "9/2017"}, {"body": "eliasre use principle actually site pure html also parsed somehow process dictionary known components lookuped places angular native components dynamically instantiated use inner functionality", "d": "9/2017"}, {"body": "mlcmlapis seems exactly looking know nt stack overflow could point direction documentation use feel like learning something brand new angular every day usually learn seems documented first pages tourofheroes guide though p", "d": "9/2017"}, {"body": "eliasre demo", "d": "9/2017"}, {"body": "toxicable wow looks cool works content projection markup like backeend dynamically added currently forced use jit aot code compile runtime", "d": "9/2017"}, {"body": "artaommahe possible directly use wrapper template like never tried yet", "d": "9/2017"}, {"body": "use wrapper template like makup unknown came backend hundreds variations", "d": "9/2017"}, {"body": "artaommahe ah see still parsing dynamic components instantiation possible manage even case make indirect content projection another way via code think", "d": "9/2017"}, {"body": "also wanted clean code like funkizer creating separate ts files pages components etc concat within appmodule jit compiler fine aot compiler throwing lots exceptions recommendation keep things clean thanks advance", "d": "9/2017"}, {"body": "much said angular problem code production months handled exact scenario however upgrading new httpclient seems breaking change even consulted source httpclient nothing would suggest response would swallowed clear nt expect handle redirect existing code fine issue longer see response status code except browser network tab previously error handling watched redirected manually nt behavior angular team plans implement fine definitely needs included breaking change", "d": "9/2017"}, {"body": "issue firefox safari chrome working fine", "d": "9/2017"}, {"body": "malkiatsingh angular problem normal behavior browser adammedford still think angular problem worked nt want intercept nt status code philosophy big word common way performing url redirection says", "d": "9/2017"}, {"body": "stefdelec different behavior chrome safarifirefox think known issue angular", "d": "9/2017"}, {"body": "guys planning something bug opened since march get update thanks", "d": "9/2017"}, {"body": "also wondering pr dzmitryshylovich still open", "d": "9/2017"}, {"body": "jit compiler ca nt job nodejs env far know angular supports server side rendering nt understand jit ca nt produce code build step", "d": "9/2017"}, {"body": "stalniy jit node env aot compiler", "d": "9/2017"}, {"body": "result going supported choosing angular vs vue next project angular support bad news", "d": "9/2017"}, {"body": "jimmykane think might misread issue slightly angular support source code even anything upto latest draft right polyfills issue disucusing running angular targetting runtime target development makes much difference either way believe goal nt timeline", "d": "9/2017"}, {"body": "toxicable right though referring targeting especially uglify issues", "d": "9/2017"}, {"body": "jimmykane makes targetting requirement framework using", "d": "9/2017"}, {"body": "going become larger issue angular cli beta shipped target support jit mode causes aot seems work fine however", "d": "9/2017"}, {"body": "jinder nt see problem aot likely going default would nt ever using jit anymore anyway", "d": "9/2017"}, {"body": "toxicable see even incremental dev builds ng serve", "d": "9/2017"}, {"body": "jinder plan cli already initial support new compiler", "d": "9/2017"}, {"body": "toxicable great", "d": "9/2017"}, {"body": "still experiencing issue really sure ultimate resolution thread angular", "d": "9/2017"}, {"body": "hi would like know important feature included version think find way trigger external update pure pipe big positive impact whole framework", "d": "9/2017"}, {"body": "meriturva using pure pipe forces cd", "d": "9/2017"}, {"body": "api suggestion address theses issue", "d": "9/2017"}, {"body": "appheader known element appheader angular component verify part module appheader web component add customelementsschema ngmoduleschemas component suppress message error users context created component appheader includes routing part include home dashboard component working fine include user error user module implemented lazyload one help resolve also tried added header component user module landed error error type headercomponent part declarations modules appmodule usermodule please consider moving headercomponent higher module imports appmodule usermodule also create new ngmodule exports includes headercomponent import ngmodule appmodule usermodule error type headercomponent part declarations modules appmodule usermodule please consider moving headercomponent higher module imports appmodule usermodule also create new ngmodule exports includes headercomponent import ngmodule appmodule usermodule created shared module included header component succeeded thanks ganga", "d": "9/2017"}, {"body": "hi problem created shared module docs indicates still use de template component asociated de shared module code import ngmodule angularcore import authguard securityauthguard import browsermodule angularplatformbrowser import reactiveformsmodule formsmodule angularforms import httpmodule angular modulos import accesomodule accesoaccesomodule import egresomodule egresoegresomodule import ingresomodule ingresoingresomodule import usuariosmodule usuariosusuariosmodule modulo de rutas import approutingmodule approutingmodule import hashlocationstrategy locationstrategy angularcommon import appcomponent appcomponent import navbarcomponent accesonavbarnavbarcomponent import sharedmodule sharedsharedmodule ngmodule declarations appcomponent navbarcomponent imports browsermodule httpmodule accesomodule egresomodule ingresomodule usuariosmodule approutingmodule formsmodule reactiveformsmodule sharedmodule providers provide locationstrategy useclass hashlocationstrategy authguard bootstrap appcomponent export class appmodule thas de appmodule shademodule import ngmodule angularcore import commonmodule angularcommon import showerrorscomponent showerrorscomponent ngmodule imports commonmodule declarations showerrorscomponent exports commonmodule showerrorscomponent export class sharedmodule de showerrorscomponent code import component input angularcore import abstractcontroldirective abstractcontrol angularforms component tslint disablenextline componentselector selector showerrors template export class showerrorscomponent private static readonly errormessages required gt este campo es requerido minlength params gt el minimo numero de caracteres es paramsrequiredlength maxlength params gt el maximo numero de caracteres es paramsrequiredlength pattern params gt el siguiente patr\u00f3n es requerido paramsrequiredpattern numero params gt paramsmessage input private control abstractcontroldirective abstractcontrol shouldshowerrors boolean return thiscontrol amp amp thiscontrolerrors amp amp thiscontroldirty thiscontroltouched listoferrors string return objectkeys thiscontrolerrors map field gt thisgetmessage field thiscontrolerrors field private getmessage type string params return showerrorscomponenterrormessagestype got error uncaught error template parse errors ca nt bind control since nt known property showerrors showerrors angular component control input verify part module showerrors web component add customelementsschema ngmoduleschemas component suppress message allow property add noerrorsschema ngmoduleschemas component v help thanks", "d": "9/2017"}, {"body": "hi understand correctly mentioned importing sharedmodule appmodule work use component directly declared appmodule want used components declared child module module import respective modules well components inherited parent module", "d": "9/2017"}, {"body": "thanks try", "d": "9/2017"}, {"body": "works thanks", "d": "9/2017"}, {"body": "wardbell aim", "d": "9/2017"}, {"body": "covered lighthouse tests gkalpak", "d": "9/2017"}, {"body": "sure scope issue lighthouse tests check latency home page performance tests like time first meaningful render time interactive etc ignore results atm", "d": "9/2017"}, {"body": "issue using typescript angular output tab notice punch output seem like crash bug happened restart vscode back normal happen edit code hours nt know reproduce issue sorry", "d": "9/2017"}, {"body": "chuckjaz working fine", "d": "9/2017"}, {"body": "bhagatparwinder version angular typescript", "d": "9/2017"}, {"body": "cyrilletuzi nt update either still typescript angular language service vscode using global install instead packagejson ts separate issue added bugging", "d": "9/2017"}, {"body": "gkalpak unticked items issue still relevant", "d": "9/2017"}, {"body": "nicetohaves necessary feel free close", "d": "9/2017"}, {"body": "dzmitryshylovich consistently reproduce", "d": "9/2017"}, {"body": "viewchildren middle private middle querylist ngafterviewinit thismiddlechanges thismiddlechanges subscribe changes querylist gt debugger thismiddleobserverelement consolelog thismiddleobserverunobserve thismiddleobserverelement thismiddleobserverdisconnect thismiddleobserverelement null changeslength let index mathfloor changeslength thismiddleobserverelement thismiddletoarray index nativeelementnextelementsibling consolelog thismiddleobserverobserve thismiddleobserverelement gt thismiddleobserverelement thismiddletoarray index nativeelementnextelementsibling case thismiddleobserverelement listitem would prefer query virtualscrollitem directive contentchildren tolemac saying still possible using createembeddedview", "d": "9/2017"}, {"body": "stephenfluin going anything close outside boundary ability", "d": "9/2017"}, {"body": "continue monitor issue things definitely seem getting better anecdotally seeing searches returning right thing around action right aside continuing help community use names consistently ensure right seo things website going close concrete action", "d": "9/2017"}, {"body": "tried new httpclient still work expected", "d": "9/2017"}, {"body": "apparently supposed fixed webanimationjs still get error angular idea animation throws error ff still", "d": "9/2017"}, {"body": "vikerman performance wise improvement rendering large ssr", "d": "9/2017"}, {"body": "sometimes need rerender current components subcomponents without recheck hole virtualdom maybe possible include new change detection strategy like mickl introduced excluding components separate zone try include feature accepted created example simple clockcounter check second hole tree changes would nice good way use angular rendering view without rechecking hole tree example", "d": "9/2017"}, {"body": "basically workaround use onpush much possible always possible nt want use bunch dare forgetting somwhere btw projects already containing simple timer slowed performance much exclude component vom ngzone use vanilla javascript instead", "d": "9/2017"}, {"body": "thinking well thiniking rewriting component vanilla js vue include later decoupled component angular app someone knows good solution please let know hope feature request approved implemented soon", "d": "9/2017"}, {"body": "solved", "d": "9/2017"}, {"body": "worked around async validator calling parent control updatevalueandvalidity next tick asynchronous call completes causes parent control formgroup emit valid status nt cause control emit anything call control updatevalueandvalidity makes async validator run nt ideal already worse creates infinite loop need control emit parent nt help much export function myasyncvalidator c abstractcontrol key string consolelog myasyncvalidator called return new promise resolve gt settimeout gt consolelog myasyncvalidator finished settimeout gt cparentupdatevalueandvalidity workaround cvalue resolve true else resolve null fork plunker", "d": "9/2017"}, {"body": "project angular solution works dynamic form also remove disabled attribute mentioned previous comment work ie", "d": "9/2017"}, {"body": "question removing whole formcontrol formarray help formgroup json format name surname formcontrol languages formarray inside languages array name code formcontrol question want remove delete field language word field second element field", "d": "9/2017"}, {"body": "worth pointing else keyword python forelse construct regarded bad naming unlike comment suggests else block run whenever loop completes without interrupted using break return exception thrown independently whether loop iterations usually gets confused feature requested ie runs iteratee empty python mistake adds enough confusion else name might worth avoiding", "d": "9/2017"}, {"body": "ran error trying use anonymous arrow function", "d": "9/2017"}, {"body": "ca nt use arrow function place use exported factory function like something like", "d": "9/2017"}, {"body": "yes exported function switched arrow function broke switched back fix", "d": "9/2017"}, {"body": "updates edit best solution could find would nt pollute application code useless checks official solution within forms package javascript import afterviewinit angularcore import formgroupdirective formgroupdirectivebase angularforms due fact ie marks controls dirty placeholders present official fix angularforms override fg directive export class formgroupdirective extends formgroupdirectivebase implements afterviewinit ngafterviewinit settimeout gt const key thisformcontrols thisformcontrols key thisformcontrols key markaspristine", "d": "9/2017"}, {"body": "waterlooblue actually helped added touched check also validation seemed trick awesome thanks", "d": "9/2017"}, {"body": "eta real fix issue know really fault awful browser ie would nice fixed angular make easier consistent experience across browsers", "d": "9/2017"}, {"body": "dzmitryshylovich progress", "d": "9/2017"}, {"body": "work similar issues slower initial application load dev tools open speeds page load quite bit support call started microsoft hopefully give insight difference behavior without dev tools open initial load speed fine browsers bare bones component nt pull many angular libraries seems slow badly initial load need research see complexity slow significantly increases feels like ie issue since dev tools open nt change behavior web page especially using dev tools trouble shoot performance issues", "d": "9/2017"}, {"body": "polyfill included includes zonejs polyfill still get error several browsers mobile mostly user agent", "d": "9/2017"}, {"body": "good trick nightwnvol even find something could work anyway opened new question stackoverflow seeing patch welcome add solution vote", "d": "9/2017"}, {"body": "news fix ca nt seem get workarounds work", "d": "9/2017"}, {"body": "really like proposal plans implement feature near future", "d": "9/2017"}, {"body": "router also issue", "d": "9/2017"}, {"body": "get req object component ssr get cookies sent user browser nodejs expressjs ssr way passthrough cookiesheaders making http requests ssr feel like browser requests page ssr load cookiesheaders passed pass httpclient whatnot edit nevermind figured", "d": "9/2017"}, {"body": "systemdisc using ngexpress engine simply inject request like", "d": "9/2017"}, {"body": "toxicable thanks using ngexpress engine figured using extraproviders comment linked also relevant kukjevov users trying pass cookiesauth ssr", "d": "9/2017"}, {"body": "metoo", "d": "9/2017"}, {"body": "problem dynamically adding custom controls formarray fly workarounds horrible", "d": "9/2017"}, {"body": "creating new formarray replacing old one better workaround", "d": "9/2017"}, {"body": "fix works pr nobody wants merge", "d": "9/2017"}, {"body": "would angular team able let us know whenif part one releases", "d": "9/2017"}, {"body": "would super helpful work", "d": "9/2017"}, {"body": "update", "d": "9/2017"}, {"body": "workaround nt seem work works directly use href attribute navigate element declared within template ever work anyone", "d": "9/2017"}, {"body": "ran issue using answers came case also give little time element show could scroll hence little settimeout hack scroll anchor param string location element id param string wait wait time milliseconds public scrolltoanchor location string wait number void const element documentqueryselector location element settimeout gt elementscrollintoview behavior smooth block start inline nearest wait thisscrolltoanchor someanchor", "d": "9/2017"}, {"body": "louisl hack good liked working fine issue assigned anyone open since long wish get official solution soon possible waiting since long please guys something", "d": "9/2017"}, {"body": "started running issue recently changing error warning seems like easy fix delay", "d": "9/2017"}, {"body": "basic requirement leave unreferenced files restriction problem larger projects please change warning", "d": "9/2017"}, {"body": "cases publish package supports different versions angular user expected choose one example package provides files angular gt users angular lt users currently ngc either compiles files inside source directory matter use build fails", "d": "9/2017"}, {"body": "saved stub mock components mockts extension updated tsconfigappjson exclude array like aot skips compilation files", "d": "9/2017"}, {"body": "npm library common components supposed used pissed issue aot compilation damn solution atm create kind unusedcomponentsmodule host project ridiculous also need swear components used inside unused components declare hit another issue ca nt declare component two modules related current module import ngmodule noerrorsschema angularcore import commonmodule angularcommon import receiverpagecomponent cbwebplatform ngmodule imports commonmodule declarations receiverpagecomponent schemas noerrorsschema important need aot compilation export class unusedcomponentsmodule", "d": "9/2017"}, {"body": "hey guys facing issue someone update fixed using angular router", "d": "9/2017"}, {"body": "idea fixed", "d": "9/2017"}, {"body": "getting exactly issue angular application suggestions appreciated thanks", "d": "9/2017"}, {"body": "agree readonly list validators could obtained method current control would helpful", "d": "9/2017"}, {"body": "feature", "d": "9/2017"}, {"body": "readonly list", "d": "9/2017"}, {"body": "couples componentref obj dom string cmprefchangedetectorrefrootnodes amp cmprefhostviewrootnodes ect explicit reference ie dom string selector binding live memory possibility calling createcomponent existing dom node argument", "d": "9/2017"}, {"body": "issue webstorm", "d": "9/2017"}, {"body": "vicb guard redirects instead feel fully supported code fail error invalid configuration route one following must provided component redirectto children loadchildren error used adding works workaround using guard routing feels bit weird clunky sometimes bit advanced use case app working parameters routes lie route would like dynamic redirect uses figure params use", "d": "9/2017"}, {"body": "would also great project well simplest case would happy redirectto function take activatedroutesnapshot routerstatesnapshot arguments using support structure like used structure like angularjs app uirouter worked well would love able mimic angular", "d": "9/2017"}, {"body": "going investigating something like angularuniversal soon", "d": "9/2017"}, {"body": "bug resurfaced", "d": "9/2017"}, {"body": "workaround ignoring would create condition check current url without query params equal", "d": "9/2017"}, {"body": "wonder bug coz im curious serious issue created since dec fix lost time find happen thanks", "d": "9/2017"}, {"body": "ran async validator switchmap debounce take thoughts working around seems like common use case", "d": "9/2017"}, {"body": "note figured workaround debouncetime use debounce instead typescript export function createasyncdescriptionvalidator taskservice taskservice asyncvalidatorfn note take debouncetime currently wreak havoc pending state form great academic exercise remove debouncetime order get work properly see return control formcontrol observable lt invalidpattern string null gt gt initial load forms sometimes valuechanges available initial edits assumes incoming data valid controlvaluechanges return observableof null else return controlvaluechanges debounce gt observableinterval take switchmap value gt taskservicevalidatedescription value map value gt valuevalid null invalidpattern task contain word poison one class exercises using debounce debouncetime seems work fine nt unnecessarily make form pending clears soon done guarded button", "d": "9/2017"}, {"body": "based krimple sample code implemented mine like mine extras like hack end wanted show error message changes directly first time focus input anyways using instead nt work added first statement since assuming data previously saved valid need check freshly loaded wo nt work loading invalid data somewhere else", "d": "9/2017"}, {"body": "nice touch markastouched great idea wonder use debounce instead debouncetime try something like see red herring", "d": "9/2017"}, {"body": "noticed working case idea investigate later", "d": "9/2017"}, {"body": "obssubscribe assign result observable thisstatus causing result always pending minuz seeing thing control stuck pending status forever able find line code changes curious made progress side", "d": "9/2017"}, {"body": "pkozlowskiopensource think could make work changes whitespaces removal", "d": "9/2017"}, {"body": "vikerman news nt know since upgraded bug", "d": "9/2017"}, {"body": "facing issue thanks providing workarounds last one trick", "d": "9/2017"}, {"body": "still dealing hybrid port app plan move suggest consider moving app directly full router solution hybrid code base even views remain based example repo done week side wish best note location injection causing problem make sure gt remove router service injection code even used way cents say hello karma see", "d": "9/2017"}, {"body": "issue ghetolay showcontentandstarthislifecycle declared false lifecycle called nt dom", "d": "9/2017"}, {"body": "obsolete angular", "d": "9/2017"}, {"body": "still issue tested think issue reopened unless fixed build", "d": "9/2017"}, {"body": "still experiencing issue fixed watch sideeffects route configuration may make seem like new service instance injected different routes example desktop chrome mobile safari different outcomes following template save save stuff thisrouternavigate users id userid mobile safari hard reload happens save routernavigate button type defaults submit desktop chrome operates refreshless hash change hard reload obviously creates new service instance", "d": "9/2017"}, {"body": "facing issue solved updating webpack related packages latest", "d": "9/2017"}, {"body": "tbosch progress", "d": "9/2017"}, {"body": "update", "d": "9/2017"}, {"body": "update", "d": "9/2017"}, {"body": "update", "d": "9/2017"}, {"body": "spent couple hours trying figure seem like could made less problematic either framework removing controls least b helpful error message", "d": "9/2017"}, {"body": "api docuemnt emptypath route inherits parent params data angular website prefer use child data without inherits parent parent componentless route vsavkin", "d": "9/2017"}, {"body": "way disable inheritance building breadcrumb component lots componentless emptypath routes configuration causes data replicated children routes even explicitly set data children get overwritten set parent parent uses resolve children use plain data object like disable inheritance entirely way", "d": "9/2017"}, {"body": "angular nt objects lazyloaded child approutingts import ngmodule angularcore import routermodule angularrouter import routes angularrouter const routes routes path terms data title terms use loadchildren termstermsmodule termsmodule ngmodule imports routermoduleforroot routes exports routermodule export class approuting termsroutingts import ngmodule angularcore import routermodule angularrouter import routes angularrouter import termscomponent termscomponent const routes routes path data title terms use component termscomponent ngmodule imports routermoduleforchild routes exports routermodule export class termsrouting component inside import component angularcore import oninit angularcore import activatedroute angularrouter component selector toppanel templateurl toppanelcomponenthtml styleurls toppanelcomponentscss export class toppanelcomponent make subscription work see put object routings make sure subscription work well work", "d": "9/2017"}, {"body": "artuska closes issues monitored least officially think actually bug probably new bug even symptoms get new issue", "d": "9/2017"}, {"body": "zoechi thank hope notification sent thread participants someone take look", "d": "9/2017"}, {"body": "artuska would nt expect happen worth create issue probably worth investigating therefore unlikely get prioritized fixed", "d": "9/2017"}, {"body": "workaround bug", "d": "9/2017"}, {"body": "need duplicate select element inside dynamic form builder yuk eta", "d": "9/2017"}, {"body": "webmutation theres slight mistake solution test like html display ngcontent empty", "d": "9/2017"}, {"body": "acaua actually code agree nodechildren used nodechildnodes mistake falsely assumes child nodes type element even though would reasonable assume whatever projected ngcontent would type element create issues therefore proper api used since nodechildren supported cross browser support also issue nodechildren readonly property returns live htmlcollection child elements node nodechildnodes readonly property returns live collection child nodes given element first child node assigned index get collection elements use parentnodechildren instead look polyfill nodechildren see use childnodes filtered nodenodetype nodetype represents element node lt p gt lt div gt nodechildren always work even needs polyfilled mbeckenbach correct way works therefore would nice keep consistent unless good reason make different still hopping behavior suggested op gets added since straightforward use", "d": "9/2017"}, {"body": "tried see change proposed garyb makes difference build completes windows thanks garyb", "d": "9/2017"}, {"body": "plan add", "d": "9/2017"}, {"body": "matanshukry gist pass aot compilation using jit first fail triggering watch functionality compilation works complexurlmatcher function taken mentioned gist import route urlmatchresult urlsegment urlsegmentgroup angularrouter export function complexurlmatcher paramname string regex regexp return function segments array segmentgroup urlsegmentgroup route route urlmatchresult routing module export const entryroutes routes matcher complexurlmatcher unp new regexp opq anrz az component thecomponent loadchildren resolve entry resolvedata children path component componenta path b component componentb path c component componentc path component componentd ngmodule imports routermoduleforchild entryroutes exports routermodule export class entryroutingmodule finally reopened", "d": "9/2017"}, {"body": "darwinfailure aot compiler analize inplace call says error message try typescript export function mymatcher return complexurlmatcher unp new regexp opq anrz az config replace matcher mymatcher", "d": "9/2017"}, {"body": "realized seconds posting thanks support got working providing matcher handle function whose signature matched angular requested one export function complexurlmatcher segments array segmentgroup urlsegmentgroup route route urlmatchresult const paramname unp const regex new regexp opq anrz az config matcher complexurlmatcher tytskyi solution much elegant mine triggers error function signature", "d": "9/2017"}, {"body": "tested vvasabi work around really worked test suit almost faster official response core team subject plans make faster without kind work around edit found pr would solve issue months without answer", "d": "9/2017"}, {"body": "also similar issue tracker regarding fact test dependencies recompiled every test method think testbed would compile reuse compiled output subsequent test methods would speed everything lot", "d": "9/2017"}, {"body": "yup good fix", "d": "9/2017"}, {"body": "please fix", "d": "9/2017"}, {"body": "fix appreciated", "d": "9/2017"}, {"body": "got answerworkaround", "d": "9/2017"}, {"body": "please let testbed function handle change detection onpush components tests without workarounds", "d": "9/2017"}, {"body": "angular docs mention using valuable testing component method however find success created test component taking queue recommended juliemr since assigned open almost year would mind offering recommended workaround path would addressed simply working expected", "d": "9/2017"}, {"body": "also experiencing issue application sure loading fails errors like loading chunk x coming", "d": "9/2017"}, {"body": "bencameron exact use case solve feature planned guards return truefalse maybe something similar could return component", "d": "9/2017"}, {"body": "misiu ended handling dynamic selection component within another component route example instead routing foocomponent barcomponent based condition determine route params routing component use container components let call containercomponent within template containercomponent using div ngswitch directive choose foocomponent barcomponent based condition", "d": "9/2017"}, {"body": "bencameron reply stick solution dzmitryshylovich chances could added near future", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "upgradeadapter method internally delegates preparation work nt really make difference violation caused angular jit compiler angularjs ngupgrade known issue reported eg using aot compiler avoid issues sidenote aot soon default mode hybrid apps need use angularupgradestatic package instead old angularupgrade aotcompatible upgrade guide info build aotcompatible hybrid apps", "d": "9/2017"}, {"body": "vsavkin also run surprising problem think current design violiates principle least surprise changed", "d": "9/2017"}, {"body": "observe issue angular data always providing empty object", "d": "9/2017"}, {"body": "searched place thanks info manklu made understand going within angular route tree", "d": "9/2017"}, {"body": "localeid use injectiontoken aot compilation injectiontoken work bug added", "d": "9/2017"}, {"body": "lifecycle methods superclasses still called aot compiled code tested found closed redirected sure need another bug issue", "d": "9/2017"}, {"body": "hheexx confirm spair said correct needed aot compilation moved aot builds work like charm", "d": "9/2017"}, {"body": "hello seems issue kind back angular using yesterday issue upgraded despite fact following line webpack configuration file following warnings warning c nodemodules critical dependency request dependency expression warning c nodemodules critical dependency request dependency expression however check nodemodules folder content angular folder called angular angular replaced line problem seems gone maybe could help someone note nt even understand issue solution could correct", "d": "9/2017"}, {"body": "ok work versions angular build module systems webpack issue webpack default trying resolve dynamic imports angular including dynamic import routes way angular handling dynamic routes requires systemjs work seamlessly using webpack build tool read files try resolve route easy code splitting webpack order create map paths lazy loaded files generates nt need systemjs lazyroutes angular included make easier simply use syntax function router problem jitaot paths going contextreplacementplugin docs regexp paths", "d": "9/2017"}, {"body": "want track whether inputs form changed ux form save button get enabled user actually changes values else stays disabled trying implement solution rely inspecting field form manually hoping something like form first rendered store current value form group component member variable using register subscriber form value changes compare changed form backed form detect user changed fields unfortunately two disabled fields form values fields appear support make read would received values readonly fields looks like valid reason support similar lines call fields become read currently allowed use", "d": "9/2017"}, {"body": "another usecase would disabled textarea scrolled contains much lines readonly scrolled full text read needed", "d": "9/2017"}, {"body": "ocombe mean features ngxtranslate available angular", "d": "9/2017"}, {"body": "none parts ngxtranslate implemented angular lib naive approach works mostly want lot efficient framework said angular provide similar features even final implementation different", "d": "9/2017"}, {"body": "approach flux working ui notification system based problem notification content defined service call instead template managed angular system like working solution extract idea following code fragments hope helps anywhere notificationcomponentts component selector notificationcmp templateurl publichtmlnotificationcomponenthtml export class notificationcomponent implements oninit ondestroy afterviewinit notificationcomponenthtml", "d": "9/2017"}, {"body": "pavelagarkov place exports aot compiles get following error production", "d": "9/2017"}, {"body": "think depends module target bundle tooling use webpack produce commonjs modules case could instead write something like manugarciac try play idea", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "found description note order ngmodel ngmodelchange documentation one year fixed yet strange strange", "d": "9/2017"}, {"body": "willshowell maximusk observations service gets ngondestroy called provided component service never get destroyed provided module ask matter destroy ng app means closed page effectively garbage collector clean eventually", "d": "9/2017"}, {"body": "willshowell thanks interesting approach wrapper maybe share details gparlakov thanks confirmation", "d": "9/2017"}, {"body": "maximusk works like important note using empty routes like may introduce confusing behavior relative routes since empty route still considered urlsegment see", "d": "9/2017"}, {"body": "willshowell thanks sharing", "d": "9/2017"}, {"body": "gparlakov nt think assume destroying app happens close window navigate away let say app loaded portal potentially apps imho removing dom node app bootstrapped destroy everything including services provided via modules", "d": "9/2017"}, {"body": "done externs testability published", "d": "9/2017"}, {"body": "hi facing issue provided control value accessor implemented directive applied input form control reset form model value changes null however view still shows old value tried reset control writevalue method also tried setvalue within writevalue method work suggestions please", "d": "9/2017"}, {"body": "still hitting issue angular", "d": "9/2017"}, {"body": "still problem version angular dependencies angular animations angular common angular compiler angular core angular forms angular angular platformbrowser angular platformbrowserdynamic angular router url changed error thrown", "d": "9/2017"}, {"body": "also hit issue angular took quite find root cause issue also experienced issue double encoding whenever tried manipulate encoding urlsearchparams solution ayrad bolza worked though thanks assume addressed anyway upcoming angular releases", "d": "9/2017"}, {"body": "also affects flask back ends flask follows standard converts characters space character could create pr removing line first would like ask reason overrode standard seems like code clearly written override default encoding override encoding escaping reserved characters like alxhub could explain us idea motivation code section see better approach solving git blame says person ask would acceptable create pr removing custom overriding decoding reserved characters edit noticed although code mostly problem talking module one used angular create independent issue leave comment given problem", "d": "9/2017"}, {"body": "tiangolo follow standard well standard amp encodeuricomponent amp nothing wrong rewrite result problem rewrite", "d": "9/2017"}, {"body": "thanks clarification trotyl guess end rendering valid compatible url least parseable back ends without creating side effects current encoder actually reversing taking encoded version results would effect using encoding converting back literal instead leaving compatible versions imagine could generate problems characters parsed back end literally unencoded parameter keys values least confirmed creates issues php python back ends comments imagine could back end languages frameworks would expect encoded params way compatible least one know project huge prs open including months old one nt know submitting pr actually appreciated especially knowing changes would acceptable alxhub could give us hint reason overwriting native would pr removing one lines acceptable desired", "d": "9/2017"}, {"body": "issue nt believe related server backend sending post angular find displayed chrome debug tools know angular team working", "d": "9/2017"}, {"body": "nt think issue server side using node angular version issue", "d": "9/2017"}, {"body": "adding code reload url working fine found someone explain", "d": "9/2017"}, {"body": "jasonaden think nt classified bug fix assumes nothing using attributes might true project custom dynamic translations solution relaying attributes runtime available ca nt work without stupid workarounds think provide compiler flag default set true attributes deleted set false remain produced build", "d": "9/2017"}, {"body": "would awesome fixed years celebration", "d": "9/2017"}, {"body": "forked plnkr made bit obvious working working repro given html lazy loaded module default template given child routes defined within lazy loaded module navigated route using nonauxcomponent renders successfully primary outlet auxcomponent renders successfully aux outlet navigated route using nonaux aux components remain rendered url nt change console error thrown expected behavior url change auxcomponent replaced", "d": "9/2017"}, {"body": "hi one question loadchildren work browser address bar click link app click link works perfectly access browser address bar goes page ideas missed configuration const routes routes path redirectto workspace pathmatch full path detail id loadchildren componentsdetailmodule detailmodule canactivate authguard ngmodule imports routermoduleforroot routes exports routermodule export class approutingmodule ngmodule imports commonmodule formsmodule accordionmoduleforroot popovermoduleforroot routermoduleforchild path component detailcomponent children path content id component contentcomponent path data id component datacomponent exports detailcomponent export class detailmodule", "d": "9/2017"}, {"body": "although ca nt speak angular code handle vue feature simple providing truefalse router seems route hold onto value scroll position importantly top apply position route reactivates ca nt speak hood would personally like configure something routes client perspective simple optin really hoping see comes", "d": "9/2017"}, {"body": "feels really awkward work forms right trying follow pure streambased approach still access properties like dirty synchronous manner observables would greatly appreciated", "d": "9/2017"}, {"body": "issue really big flaw angular imo onpush strategy helps us build fully controllable predictable unidirectional applications great performance various third parties using twoway data binding forcing us workaround child components manually detecting changes", "d": "9/2017"}, {"body": "still issue makes nearly impossible provide service inside component tests fail due provided mock overwritten service", "d": "9/2017"}, {"body": "update one year latter since issue opened still find answer", "d": "9/2017"}, {"body": "duannx component included declaration section one module design", "d": "9/2017"}, {"body": "mlcmlapis yeah khow design problem main question share component modules answer use sharemodulets way cause many annoying", "d": "9/2017"}, {"body": "duannx know annoying usually app build hirarchycal group modules mind put shared component top need way component wil avialable sub modules childrens module put shared component", "d": "9/2017"}, {"body": "jcmordan yeah think project thanks", "d": "9/2017"}, {"body": "got best results following hammergestureconfig injectable export class hammergestureconfig events string overrides key string object buildhammer element htmlelement hammerinstance return new hammer element cssprops hammerdefaultscssprops recognizers hammerswipe hammertap build hammer instance manually class better control recognizers needs registered global configuration manager instances want use events desktop well seems work better touchemulator also imported", "d": "9/2017"}, {"body": "giancarloa usecase knowaccess parent component directivecomponent ended using injector also accessible viewcontainerref injectorparentinjector sure similar usecase ended injectorview also provides parent viewcontainerparent used traverse ancestor empty component", "d": "9/2017"}, {"body": "pbriones looks promising give shot thanks sharing", "d": "9/2017"}, {"body": "using polyfill still nt seem work firefox something wrong animation something polyfill ca nt seems like simple common requirement", "d": "9/2017"}, {"body": "thing happening well works file using angular angularcli edit probably right case", "d": "9/2017"}, {"body": "problem working angular", "d": "9/2017"}, {"body": "issue error framework please use support channel still seeing issue", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "mere presence method lets angular call upon component destruction mere presence angular upon destruction", "d": "9/2017"}, {"body": "share findings tried set inside constructor work seems check whether method created using reflection metadata", "d": "9/2017"}, {"body": "ohjames nt considered aot first wrote issue year later using aoted builds production work never hit issue describing tested scenario logging emitted values without calling appears working meaning base class compiled", "d": "9/2017"}, {"body": "ran issue recently found best solution use momentjs library", "d": "9/2017"}, {"body": "decided use datefns moment adds like bundle generally use formats ie issues far", "d": "9/2017"}, {"body": "could also update angular date pipe completely rewritten nt use intl anymore", "d": "9/2017"}, {"body": "solution", "d": "9/2017"}, {"body": "oficial answer angular team place logic component", "d": "9/2017"}, {"body": "know closed ability multiple redirects single level fairly simple app would like without dealing child routes dont need child routes multiple redirects level looks like look working child routes would make life easier cents", "d": "9/2017"}, {"body": "probles still exists reactiveforms edge safari first item select shows selected form value select actually empty chrome everythink ok please reopen issue", "d": "9/2017"}, {"body": "confirm problem edge using mixrich plunker angular", "d": "9/2017"}, {"body": "hey cvharris could please share code component uses animation directive", "d": "9/2017"}, {"body": "keyiis rhyeen reason cursor resets input event event telling angular update model triggering another change innerhtml get around use temporary revised model changes get saved example needed original model updated blur event time nt matter overwrites innerhtml div", "d": "9/2017"}, {"body": "update", "d": "9/2017"}, {"body": "common usecase route authguard click logout header like rerun guards know user current page need rerun guard currently requires repeating code find guards inject run saying need renavigate api exposed perhaps guard running api exposed tell rerun enough inject authguard run user may allowed current page workaround ts route path account canactivate authguard runguardsandresolvers always routeservice refresh const queryparams reload thisrouternavigate thisroutesnapshoturl queryparams settimeout gt thisrouternavigate thisroutesnapshoturl workaround ts export class routeservice constructor private route activatedroute private router router private injector injector recursivelygetguardedroutes route activatedroute activatedroute const config routerouteconfig const returned config amp amp configcanactivate amp amp configcanactivatelength gt route return routechildren returnedconcat routechildrenreduce acc r gt accconcat thisrecursivelygetguardedroutes r returned getguardchain observable const routes thisrecursivelygetguardedroutes thisroute const obs routesreduce acc observable promise route gt return accconcat routerouteconfigcanactivatemap token injectiontoken gt const guard thisinjectorget token const value guardcanactivate routesnapshot thisrouterrouterstatesnapshot return typeof value boolean observableof value value loop guard whilst return truthy return observablefrom obs mergemap gt takewhile v gt v usage userservicelogout switchmap gt routeservicegetguardchain subscribe", "d": "9/2017"}, {"body": "use case components resolved data sometimes want resolved data reloaded response user action example component lists users includes ability delete user user deleted want component receive updated set users without deleted one using something similar workaround intellix comment though requires incrementing reload parameter exists handle multiple refreshes", "d": "9/2017"}, {"body": "cwalcott already supported resolvers resolver data available field observable already aware nt take first item keep subscription time reload make resolver another item course takes work nt need workaround designed", "d": "9/2017"}, {"body": "awerlang nt observables resolvers complete component gets created tried making resolver reloads items based mapping subject component never loads think resolver observable never completes typescript injectable export class usersresolver implements resolve constructor private backendservice backendservice reload void thisreloadsubjectnext true resolve route activatedroutesnapshot state routerstatesnapshot observable", "d": "9/2017"}, {"body": "cwalcott right sorry misleading canactivate thing sent pr fix described earlier pictured mind think needs work way fail understand consume data observable current approach could value probably missing something nt much prior art observablebased routers must slip design found pr although nt think good solution resolve ie take first value", "d": "9/2017"}, {"body": "andreevartem penleychan could please provide working sample thanks", "d": "9/2017"}, {"body": "martinobordin made plunker shows andreevartem solution works perfectly", "d": "9/2017"}, {"body": "penleychan please made example plunker try given error error provider controlcontainer use last angular version", "d": "9/2017"}, {"body": "made changes order addremove dynamically child components however delete example first item apple add another child second binding wrong joerter know ifhow solved thanks", "d": "9/2017"}, {"body": "pontiley go", "d": "9/2017"}, {"body": "penleychan thanks", "d": "9/2017"}, {"body": "still issue even wrapping whole expression parenthesis seems workaround", "d": "9/2017"}, {"body": "hostbinding preset boolean types like invalid valid etc would love also able pass arbitrary modifiers without creating separate hostbinging", "d": "9/2017"}, {"body": "get error like failed load angularcommonbundlescommonumdjshttp resource server responded status found using http functionality angular wrong following tutorials using code base type script understand fixed making change systemjsconfigjs file please tell needs changed angularcommon angularcompiler angularcore angularforms angular typescript", "d": "9/2017"}, {"body": "mahpah taste telling engine wont manipulated therefore free enable optimisations included", "d": "9/2017"}, {"body": "bentaly template context variables properties variables nothing javascript semantics design choice", "d": "9/2017"}, {"body": "seems confusing choice use micro syntax close implementation one gotchas people seem push people react", "d": "9/2017"}, {"body": "dusted resubmitted pr merge conflicts due reorganization jsonpconnection class", "d": "9/2017"}, {"body": "zoechi thanks suggestion fixed problem", "d": "9/2017"}, {"body": "ericmartinezr pkozlowskiopensource created new plunker example demonstrate nt trigger directives used directive removed dom use directive component works expected plunker example think told exactly case", "d": "9/2017"}, {"body": "georgesokolovsky selector match however nt know reported error", "d": "9/2017"}, {"body": "tytskyi seems like u r right however directive working project thanks invistigate case", "d": "9/2017"}, {"body": "find problem using structural directive problem related issue however ca nt find docs find disturbing", "d": "9/2017"}, {"body": "time made little module use add event listeners templates ngeventoptions limitations without hooks compiler easiest way", "d": "9/2017"}, {"body": "could use globalerrorhandler extends implement handleerror method shouldnt throw browser", "d": "9/2017"}, {"body": "issue need specify context ngcontent hope come soon", "d": "9/2017"}, {"body": "issue would nice able check passed content entirety since also elements like hello need know text given", "d": "9/2017"}, {"body": "reinhardsual said using corejs enableprodmode bootstrapmodule works specify exactly two things using angular core files change exact statements thanks colleen", "d": "9/2017"}, {"body": "packageson include corejs image inline image mainaotjs enableprodmode image inline image fri sep cbcolleenb notifications githubcom wrote reinhardsual said using corejs enableprodmode bootstrapmodule works specify exactly two things using angular core files change exact statements thanks colleen receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "thank nt see images reference exact syntax", "d": "9/2017"}, {"body": "also mainaotjs", "d": "9/2017"}, {"body": "declare var system import platformbrowser angularplatformbrowser import enableprodmode angularcore import appmodulengfactory aotangularappappappmodulengfactory enableprodmode platformbrowser bootstrapmodulefactory appmodulengfactory fri sep pm cbcolleenb notifications githubcom wrote thank nt see images reference exact syntax receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "put corejs packagejson file put code enableprodmode etc nt see platformbrowser bootstrapmodulefactory appmodulengfactory code anywhere thanks colleen", "d": "9/2017"}, {"body": "depends project structure loader used eg webpack js systemjs maints mainaotts name file anything like file bootstrap angular app use webpack js file use entry point example webpackprodjs moduleexport entry app angularappmainaotts thanks reinhard sual fri sep pm cbcolleenb notifications githubcom wrote put corejs packagejson file put code enableprodmode etc nt see platformbrowser bootstrapmodulefactory appmodulengfactory code anywhere thanks colleen receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "used worked", "d": "9/2017"}, {"body": "nt supposed go regular old website hit back button goes back keeps exact position page clicked brought back exactly left angular needs built needs work hacking providing bad estimation functionality real deal working exactly user would expect automatically", "d": "9/2017"}, {"body": "simply add main component", "d": "9/2017"}, {"body": "works", "d": "9/2017"}, {"body": "problem find solution orodan", "d": "9/2017"}, {"body": "thanks stevenrobijns still part core", "d": "9/2017"}, {"body": "workaround constructor private el elementref private renderer renderer ngoninit thisrenderersetelementclass thiselnativeelement myitem thisitemtype true", "d": "9/2017"}, {"body": "tfleury http repository nt exist anymore know way use reviver json method", "d": "9/2017"}, {"body": "fvilers aware way use reviver json method probably transform json data default parsing use reviver param result", "d": "9/2017"}, {"body": "right tried extend response object method without success", "d": "9/2017"}, {"body": "news", "d": "9/2017"}, {"body": "vicb would nt close issue templatedriven forms supported well", "d": "9/2017"}, {"body": "jagomf templatedriven forms already supported see", "d": "9/2017"}, {"body": "anyone able get work trying without success form far type username control throws typeerror v function", "d": "9/2017"}, {"body": "mlangwell formbuilder nt yet support updateon see switch creating formgroup work worth noting control options passed second arg third though", "d": "9/2017"}, {"body": "kara thank clearing regarding third arg nt third arg asyncvalidators third arg username async check api user name already exists way could get async validator work sync validator control better way open suggestions also tried testing formcontrol keep simple kept close example possible throwing error well error", "d": "9/2017"}, {"body": "version using available beta versions see example async validators set separate option see docs", "d": "9/2017"}, {"body": "kara team using would work permitted use beta versions unfortunately way could get work add blur event input control call seterrors control appropriate worked anyone else needs work around looks like user name required usernameerrorsuserexists checkuserexists thisusernamevalue thisregservusernameexists thisusernamevalue subscribe exists gt exists thisusernameseterrors userexists", "d": "9/2017"}, {"body": "omg hate screamcat returns cold observable unsubscribed new value sent checking timeout cleared http call never made", "d": "9/2017"}, {"body": "least wrote example nt unsubscribe using timer work debounce looking debounce basically stuck awkward timer construct", "d": "9/2017"}, {"body": "escardin talking latest comments release use stuff thing nt see might expect outside debounce sounds like veeeery specific case mind debouncing common need yeah right might need real observable chain form validation btw say timer construction awkward", "d": "9/2017"}, {"body": "setting timeout nt actually need timeout ie push something back event queue always seems like dirty hack issue floating around essentially setup interceptors validator chain use observables like normal never got anywhere", "d": "9/2017"}, {"body": "setting timeout nt actually need timeout think debounce actually joy", "d": "9/2017"}, {"body": "using timer work debounce looking debounce basically stuck awkward timer construct trying debounce fine awkward", "d": "9/2017"}, {"body": "indeed certain things injected directive controller come providers specific controller instance referred top head work latest version work supported ngupgrade components rely features directly upgreable always wrap components extra container upgrade need extra work pass values container actual component understand inconvenient want upgrade components especially come libraries technical limitations ofr things ngupgrade things like closly tied internals angularjs compiler easy ngupgrade access emulate", "d": "9/2017"}, {"body": "component used many routes depending route filled different values always predefined sections content navigation sections link route route leaving routelink empty making activate link none workarounds suitable basic section navigation route unless missing something", "d": "9/2017"}, {"body": "hiedwincp thank", "d": "9/2017"}, {"body": "evanplaice thanks worked", "d": "9/2017"}, {"body": "got error going different however believe related essentially send text string looked like object rather sending object", "d": "9/2017"}, {"body": "reading thread looking solutions online ended using passing element child working sure something way passing data parent customcomponent title childtitle gt jsonparse val works sure easy way missing key concept somewhere avoid horrendous hack", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "like dzmitryshylovich suggested limitation worked around using beware nt recursively update values validity descendants ancestors", "d": "9/2017"}, {"body": "error still big issue fixed please reopen issue robwormald marked issue closed issue moved angular however provided link available", "d": "9/2017"}, {"body": "indeed fixed reopened two problems see right using angular network errors showing status code instead something sensible eg error says network cors preflight error responses show statustext ok even eg response status code bad request", "d": "9/2017"}, {"body": "worth help anybody instead using using nt work ended using execute code subscribing typescript constructor private zone ngzone ngafterviewinit thiszoneonstablefirst subscribe gt code fully aware consequences worst using anybody comment matter would really welcome", "d": "9/2017"}, {"body": "solution work constructor private changedetectionref changedetectorref ngafterviewchecked void code thischangedetectionrefdetectchanges", "d": "9/2017"}, {"body": "vs totally nt see point case tbh", "d": "9/2017"}, {"body": "finally got best solution works without repetition aot compilation secret combine second decorator decorator typescript import replaysubject rxjsreplaysubject const subjects new weakmap export function observableinput return target propertykey gt delete target propertykey usage edit made library happy receive ideas improve adding new method compliments existing next see", "d": "9/2017"}, {"body": "something like would rather go single subject analog ngonchanges could still filter amp map one specific input want subject per input seems lot without talking deleting class prop create getter amp setter type input wrong fact emit value observable completing subject find implementation example idea decorator approach experimental think pretty safe use inheritance approach keep mind show used", "d": "9/2017"}, {"body": "ghetolay nt matter subject completed view closed subscriptions stream disposed gc emitting value observable basically point angular compiler currently nt check input property types hopefully time something official available leaks interface component ideally typed seems reasonable little verbose issue many subjects whether using subjects still subscriptions subject end adding one map operator one filter operator subscription performance overhead would nt much less using subjects could even worse ignoring typing input parameters decorator based version provides typesafe api consumers observables types based", "d": "9/2017"}, {"body": "ohjames view closed subscriptions stream disposed gc assuming subscriptions tied view get life cycle view making assumption observable consumed emitting value observable basically point angular compiler currently nt check input property types hopefully time something official available meant user user still access set property set property number except typed observable never set property make emit highly confusing issue many subjects whether using n subjects still n subscriptions subject end adding one map operator one filter operator subscription performance overhead would nt much less using n subjects could even worse wo nt go kind debate soon lose focus main purpose updated expose built something add typing changes using plain seeing observable value holder changes time need access input value property still exist refers synchronously found flaw using async pipe first value nt emit async pipe subscribe first emit update code later properly handle case link", "d": "9/2017"}, {"body": "assuming subscriptions tied view get life cycle view making assumption observable consumed okay see point completing observables force close subscriptions something really worries app subscriptions happen async pipe nt closed manually anyway often source external observables sourced reduxetc combinelatestswitchmap wo nt go kind debate soon lose focus main purpose well raised invalid criticism necessary counter one also using class inheritance wo nt work code generated aot compiler call lifecycle methods parent classes see need add another consumers class lt seems fixed angular certain limitations", "d": "9/2017"}, {"body": "review concern using async pipe since still access input nt think usage making sense want bind input value template directly bind input need use observable async want compose new observable able get exactly want easily probably using somewhere think previous statement ok using behaviorsubject plain subject seeing observable value holder changes time need access input value property still exist refers synchronously code highly experimental kind poc played stackblitz nt said pretty safe sorry may nt work aot stated tried approach currently works aot angular cli main point going observable containing inputs changes gives possibility anything need using operators react input changed input changed arbitrary number input changed changed specific value another etc compose observable want also subject manage implementation property use user vs per input thing could change would emits new values object user probably use get kind structure currently got would silly decompose recompose something similar later ps well raised invalid criticism necessary counter one invalid", "d": "9/2017"}, {"body": "nt personal view point referring performance objective measurable facts feel subjects equals overhead additional operators sure maybe right rational basis believing make measurements reacting many inputs sure use switchmap combinelatest operators designed fo working multiple observables making bold sweeping statements really want continue conversation let take issue tracker", "d": "9/2017"}, {"body": "version different drawbacks advantages requires base class typescript import onchanges ondestroy simplechanges angularcore import behaviorsubject rxjsbehaviorsubject import observable rxjsobservable import rxjsaddoperatormap import rxjsaddoperatordistinctuntilchanged export class changeobserver implements onchanges ondestroy protected ngchanges new behaviorsubject ngonchanges changes simplechanges const props thisngchangesvalue const propname changes props propname changes propname currentvalue thisngchangesnext props ngondestroy thisngchangescomplete changes key k observable key string observable changes key string return thisngchangesmap props gt thisngchangesvalue key distinctuntilchanged use typescript class mycomponent extends changeobserver input public field string typescript knows observable field thischanges field input private privfield number typescript ca nt access private stuff outside class need help privfield thischanges privfield", "d": "9/2017"}, {"body": "yeah worked thanks saving life", "d": "9/2017"}, {"body": "hope fixed soon", "d": "9/2017"}, {"body": "though could fixed days described tag", "d": "9/2017"}, {"body": "mhevery excuse could find anything related documents could please provide link use thanks", "d": "9/2017"}, {"body": "later changed interceptors creating cache system", "d": "9/2017"}, {"body": "could use http interceptors share variables server client side think issue related caching serving data browser server problem seems pull request going solve problem", "d": "9/2017"}, {"body": "transferstore api nt exactly backing api interceptor provided follow pr transferstore handle however", "d": "9/2017"}, {"body": "still transferstore functionality platformserver right maybe something developers handle things case need store data serverside receive data clientside make flicker smother making another http request assigning new values variables takes times", "d": "9/2017"}, {"body": "transferstore core api allows sharing data server client part transferstore implementation also interceptor built use automate caching http request server client live", "d": "9/2017"}, {"body": "thought meant already transferstore angular core think meant implement searched angular docs source code could find anything mean think confused", "d": "9/2017"}, {"body": "api introduced pr linked", "d": "9/2017"}, {"body": "design doc", "d": "9/2017"}, {"body": "hitting error redirect back button issue conditionallyrendered may dom time backbutton hit see existing ticket specific issue somewhere", "d": "9/2017"}, {"body": "hitting error even though defined router router module example main route users shows want go children ie usersstats throws error reading error looks vague description related many things makes really tough debug error error uncaught promise typeerror read property component null typeerror read property component null preactivationwebpackjsonp router arrayforeach preactivationwebpackjsonp router preactivationwebpackjsonp router arrayforeach preactivationwebpackjsonp router preactivationwebpackjsonp router mapsubscriberproject preactivationwebpackjsonp router arrayforeach preactivationwebpackjsonp router preactivationwebpackjsonp router arrayforeach preactivationwebpackjsonp router preactivationwebpackjsonp router mapsubscriberproject resolvepromise resolvepromise zonedelegatewebpackjsonp zonejsdistzonejszonedelegateinvoketask objectoninvoketask zonedelegatewebpackjsonp zonejsdistzonejszonedelegateinvoketask zonewebpackjsonp zonejsdistzonejszoneruntask drainmicrotaskqueue zonetaskwebpackjsonp zonejsdistzonejszonetaskinvoketask invoke invoketask", "d": "9/2017"}, {"body": "able run fresh angularcli project safari clients still use unfortunately need solution", "d": "9/2017"}, {"body": "tysonhummel polyfillsts uncomment plugins import import import import import import import import import import import import import", "d": "9/2017"}, {"body": "would really handy dealing async expressions without needing example angular release blog post gives following example html user count loading need reference multiple places nt need ngif wrapper possible solutions currently available mhevery mentions change detectors coalesce around expressions however according stack overflow case official documentation nt mention case multiple handled imho anyone care clarify suggested solution add observable however seems rather errorprone assume developers know assuming developer nt aware trick want avoid multiple observable probably tempted use subscriptions component inelegant errorprone due increased boilerplate onus unsubscribing ondestroy put developer probably wo nt bother thus open memory leaks top saving returned value internal property nt work conjunction onpush change detection current project started using lots subscriptions resulting code become pretty unmanageable need refactoring imho considered worstpractice always option breaking things two components one takes input plain object acts wrapper feeds first component single async pipe seems needlessly complex creates extra components dom nt necessary summary obvious option subscriptions also worst number reasons componentwrapper option pain implement option nonobvious welldocumented seems like would still useful general way assigning asyc expressions variables within template obvious easytouse nonerrorprone way reuse observable data within template imagine syntax like following would sufficient call directive nglet rather assignlocal seems keeping angular template terminology html user count", "d": "9/2017"}, {"body": "yeah aside using assignments async data structures fine time ran pretty simple situation makes workaround annoying though trying observe boolean represents state toggle ca nt actually since want display even item false working around using ngelse directives ionicon fully expanded instead ternary operator mean ultimately could throw ton asyncs page feels bit like nglet whatever would nice addition", "d": "9/2017"}, {"body": "could nt", "d": "9/2017"}, {"body": "works inline stuff something like toggling value would either ngif like effectively hardcoding current state html element works okay kind brittle need conditions say button renders certain screen sizes ifelse thing help actually combining view logic state information bound brittle instead write stuff controller fact end extra cruft last bit usually use takeuntil inclass subscriptions ngondestroy emit subject set way add inclass subscriptions make sure get torn component moves scope still fair bit boilerplate nice thing async pipe handles boilerplate subscribes unsubscribes appropriate seem generallyuseful workaround maybe dig really far directives could write local binding directive somehow feels like lot parallels ngmodel stuff always felt rather overused abused time primarily qualityoflife thing scenarios ngif works okay change incoming data say value something like would truthy even favorited false use even often sometimes inline template expansion asyncs misaizdaleka pointed sometimes end manually subscribe value controller keep eye source value possibly unsubscribing resubscribing new source component gets recycled eg part normal ngrouter behavior expose value nonasync value controller get handle view alternative something like would sure rad saving ton boilerplate alternatively putting pipe template expansion parameter list event handler functions would help feel like even harder microsyntax edit add something simple like directive selector tlet export class let hostbinding attrdatalet input tlet tlet handle event mouseevent amp path htmlelement const val eventpathreduce acc cur gt acc acc curdataset let null consolelog val start complete solution got manually look path seems outofspec thing someone adding mouseevent find value set multiple values set inner one overrides outer pass strings around since gets stringified feel like pushing hey designed ngmodel frontier", "d": "9/2017"}, {"body": "update", "d": "9/2017"}, {"body": "mhevery already said original question map ordered specification describing unpredictable ordering object keys different case iterating supported maps generally objects implementing", "d": "9/2017"}, {"body": "updates issue", "d": "9/2017"}, {"title": "vif template element report nonexistant variables", "body": "version reproduction link steps reproduce judging whether show scopedslots template expected expected scopedslots template showhidden base condition actually happening template nt care vif know put vif parent tag redundancy", "num": "6725", "d": "9/2017"}, {"title": "vuejs use axios wrapped external function", "body": "code export default data function return tabledata tablecolumns show firstname label first name datatype show lastname label last name datatype showfilter true beforemount function thistabledata utilsgetuserlist components vuedatatable utilsjs function getuserlist export function getuserlist data axios method get url apiadminusers datatype json headers xrequestedwith xmlhttprequest response gt var status responsestatus status status consolelog responsedata data responsedata else alert return catch error gt consolelog error runtime could get returned responsedata data responsedata although consolelog responsedata print data returned", "num": "6724", "d": "9/2017"}, {"title": "typescript augmenting componentoptions", "body": "possible augment type definition using vueinject plugin allows specifying section component definition unfortunately ca nt get work right way looks like import vue vue declare module vue export type componentoptions dependencies string string key string string typescript throws error ps work expected hack original file provided vue solution unacceptable", "num": "6723", "d": "9/2017"}, {"title": "multiple spaces selectoption wo nt go vmodel correctly", "body": "version reproduction link steps reproduce select expected multiple spaces tag see jquery behavior actually happening one space html actually variable one space", "num": "6722", "d": "9/2017"}, {"title": "html select multiple tag get undefined", "body": "hello new vuejs student rest api returns categorylist categoryselected conflicting select multiple html categoryvue itemname export default data gt dataitem created getcategoria axiosget res gt thisdataitem resdatadata json api console error put html thisdataitem values right much select vfor option populated dateitemcategoryselected come undefined comes api array thank", "num": "6720", "d": "9/2017"}, {"title": "use directive give componentdomhtmlelement add class vue clear", "body": "version reproduction link steps reproduce vuedirective sf bind el bind vnode elclasslistadd myclass time myclass clear use user component class check myclass auto clear vue formwork expected fixed actually happening fixed fixed", "num": "6719", "d": "9/2017"}, {"title": "vmodel bind update input value", "body": "version reproduction link steps reproduce type custominput reset value onchange event input element value update expected rawvalue reset custominput watch change update input element actually happening rawvalue reset custominput watch value change click button reset rawvalue abcdef work", "num": "6717", "d": "9/2017"}, {"title": "exceptions thrown errorhandler halt app", "body": "version reproduction link steps reproduce add errorhandler throws exception notice app halts badly expected exceptions thrown errorhandlers use console print something fail silently actually happening whole app rendering halts using ravenjs plugin vue triggers behavior filed issue feedback thought might save future developers time fail quite catastrophically case", "num": "6714", "d": "9/2017"}, {"title": "sharing computed property cache across mixins", "body": "problem feature solve would improve performance many applications mixins shared computed property cache example create mixin includes complicated computed property injected mixin different components computed property currently evaluated times since computed property identical could potentially share cache could nice performance enhancement without api changes user perspective would also reduce memory footprint application proposed api look like could simple changing cache key mixin computed properties familiar codebase would interested knowing would possible", "num": "6712", "d": "9/2017"}, {"title": "add analog plain html", "body": "problem feature solve use vhtml computedproperty directive uncomfortable need add one computed property every user input value every component mixin method good understand manual mixin function executes every time input mixin function markdown slow app much proposed api look like would good analog plain html implement markdown filter inside mixin use userinputdatavariable markdownfilterfrommixin thanks", "num": "6711", "d": "9/2017"}, {"title": "feature add plain html analog", "body": "hello would good analog plain html use vhtml directive witch comfortable usecases one usecas requested thanks", "num": "6710", "d": "9/2017"}, {"title": "different model value click handler different browsers checkbox element", "body": "version reproduction link steps reproduce click checkbox see console output looks like chrome update model value click event handler called ff call event handler model get new value browsers latest versions expected expected get correct model value inside checkbox click event handler actually happening chrome getting correct model value ff getting reversed value seems change event handler nt issues like click", "num": "6709", "d": "9/2017"}, {"title": "use component", "body": "problem feature solve found attribute works component mentioned api document since quite convenient supported officially current example convenient way proposed api look like", "num": "6708", "d": "9/2017"}, {"title": "dist files updated", "body": "updated vuejs seems maybe receive changes except version number diff git alibvuejsvuejs blibvuejsvuejs index alibvuejsvuejs blibvuejsvuejs vuejs vuejs c evan released mit license vue vue dist folder", "num": "6707", "d": "9/2017"}, {"title": "idea comment block", "body": "problem feature solve hi situation working several persons project searching best way comment vue files file know use normal html comment tags components eg top section wondering best recommended solution would nt idea block available like type free meaning non html text course block completely skipped compile thanks advance reply suggestion kind regards johnny proposed api look like general information vue file text free ascii text", "num": "6706", "d": "9/2017"}, {"title": "idea comment block", "body": "hi situation working several persons project searching best way comment vue files file know use normal html comment tags components eg top section wondering best recommended solution would nt idea block available like type free meaning non html text course block completely skipped compile thanks advance reply suggestion kind regards johnny", "num": "6705", "d": "9/2017"}, {"title": "uncaught typeerror read property type undefined", "body": "version reproduction link steps reproduce bind component input field using inlinetemplate expected proper error message tells developer inlinetemplate components must exactly one child element actually happening uncaught typeerror read property type undefined hello already proper error message situation check number child elements implemented gt maybe method geninlinetemplate throws exception found", "num": "6703", "d": "9/2017"}, {"title": "keep children order sync slots order", "body": "problem feature solve array reflect order rendered components reordered using example order synced would like request advanced components would remove need tricky workarounds", "num": "6702", "d": "9/2017"}, {"title": "vue packages version mismatch", "body": "get error running webpack vue vuetemplatecompiler may cause things work incorrectly make sure use version using vueloader gt simply update vuetemplatecompiler using vueloader lt vueify reinstalling vueloadervueify bump vuetemplatecompiler latest however try install says npm install vuetemplatecompiler npm err code etarget npm err notarget matching version found vuetemplatecompiler npm err notarget cases one dependencies requesting npm err notarget package version nt exist solve mismatch", "num": "6700", "d": "9/2017"}, {"title": "fonts fail load fontface url sass", "body": "version reproduction link steps reproduce simply pull repository expected expect urlloader handle fonts actually happening font found dependency found cssloader minimize false sourcemap false vueloaderlibstylecompiler vue true id scoped false hasinlineconfig false sassloaderlibloaderjs includepaths srcassetsscss data import basescss sourcemap false vueloaderlibselectorjs typestyles amp srccomponentshellovue install run npm install save", "num": "6699", "d": "9/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u901a\u8fc7vmodel\u7ed1\u5b9a\u4e00\u4e2a\u81ea\u5b9a\u4e49checkbox\u7ec4\u5efa \u76f4\u63a5\u5728root\u5143\u7d20\u4f7f\u7528\u8be5\u7ec4\u5efa\u4f1a\u51fa\u73b0 vue warn attrs readonly vue warn listeners readonly\u8b66\u544a \u5177\u4f53\u4ee3\u7801\u5982 \u6f14\u793a\u6240\u793a expected \u4e0d\u8981\u62a5\u8b66\u544a\u9519\u8bef actually happening vue warn attrs readonly found e githubvuewebpacktestsrccomponentscheckboxvue warn anonymous reactivesetter updatechildcomponent prepatch patchvnode updatechildren patchvnode patch vueupdate updatecomponent get run flushschedulerqueue anonymous nexttickhandler promise resolved async timerfunc queuenexttick queuewatcher update notify reactivesetter proxysetter callback invoker vue emit change boundfn invoker vue warn listeners readonly found e githubvuewebpacktestsrccomponentscheckboxvue warn anonymous reactivesetter updatechildcomponent prepatch patchvnode updatechildren patchvnode patch vueupdate updatecomponent get run flushschedulerqueue anonymous nexttickhandler promise resolved async timerfunc queuenexttick queuewatcher update notify reactivesetter proxysetter callback invoker vue emit change boundfn invoker vue warn avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated value found e githubvuewebpacktestsrccomponentscheckboxvue", "num": "6698", "d": "9/2017"}, {"title": "function geninlinetemplate throws uncaught typeerror read property type undefined", "body": "function geninlinetemplate throws uncaught typeerror read property type undefined el children", "num": "6697", "d": "9/2017"}, {"title": "want konw fine put vueserverrendererbuildjs webpack produce", "body": "problem feature solve wana know use vuessr use react include serverjs webpack entryserver proposed api look like thanks answer", "num": "6696", "d": "9/2017"}, {"title": "transition enter hook unexpectedly triggered vshow false", "body": "version reproduction link steps reproduce open jsfiddle example expected alert actually happening alerted occurred wrap component use control display child component", "num": "6695", "d": "9/2017"}, {"title": "slot use components", "body": "version reproduction link steps reproduce addvue addlayoutvue expected hope show content actually happening p shows page", "num": "6694", "d": "9/2017"}, {"title": "mount work properly plugin", "body": "version reproduction link steps reproduce run project click vue logo click method call message plugin expected page show text vue plugin actually happening plugin message nt show properly show empty div node code works fine", "num": "6693", "d": "9/2017"}, {"title": "smoochio web messenger wo nt load", "body": "elifecycle problem put following lines adding npm package var smooch require smooch smoochinit appid referenceerror window defined", "num": "6692", "d": "9/2017"}, {"title": "anyone considering make vue optional webassembly core", "body": "seems inevitable major frameworks eventually heavy algorithms operating separate threadprocess webassembly see like frameworks currently provide two files one template compiler one without allow done build time one things brought vue great official integration webpack vue files recently webpack received lot extra funding allow webassembly work seamlessly likely huge development lot work seems would require rock star programmer making fortune figure one example although nt know optimally done mozilla pdfjs however seems going path making necessary download rendering code twice want use webworker main bundle webworker", "num": "6691", "d": "9/2017"}, {"title": "select value updated correctly input handler triggers class change", "body": "version current chrome safari reproduction link steps reproduce open provided jsfiddle change select box value alpha expected value changed green class applied actually happening green class applied value stays unchanged provided fiddle runs version tested locally behaves exactly report linked", "num": "6690", "d": "9/2017"}, {"title": "two way binding inputs nt update input value directly", "body": "version reproduction link steps reproduce write bbc add end input add character end input expected step expect input value value dom node one see change actually happening step everything works fine step correct value dom value wong step disappears dom value everything back normal nt know design strange behavior think would better value dom node always equal attribute", "num": "6689", "d": "9/2017"}, {"title": "allow multiple definition", "body": "problem feature solve reuse component logic visual framework bootstrap semanticui materialdesign etc may thinking ca nt achieved using themes always visual frameworks csss also manipulates dom theming nt solve proposal allow multiple definition global api set default template user interface proposed api look like example js iname iname export default props items mounted vueconfigdefaulttemplate semanticui semanticui javascript boilerplate js main module set default ui framework semanticui vueconfigdefaulttemplate semanticui", "num": "6688", "d": "9/2017"}, {"title": "transitioning components fails component root node vif false", "body": "version reproduction link steps reproduce click radio b expected switch component b actually happening nt switch b real scenario user navigates new view want load remote data created hook set root node vif true switch component data nt load reason dynamic component stuck ca nt go anywhere", "num": "6687", "d": "9/2017"}, {"title": "low performance adding new element list", "body": "version reproduction link steps reproduce open link start recording performance chrome developer tools performance click button stop recording expected expected adding message require heavy calculations less actually happening practice turns list completely rendered virtual dom calculations take core think point obviously optimized", "num": "6686", "d": "9/2017"}, {"title": "\u63d2\u4ef6\u6302\u8f7d\u6709\u70b9\u95ee\u9898", "body": "version reproduction link steps reproduce javascript srccomponentsmessagemessagevue message export default data return message plugin visible true srccomponentsmessagemessagejs import vue vue let alertconstructor vueextend require messagevue let instance let msg function options instance new alertconstructor instance instance mount documentcreateelement div documentbodyappendchild instance el return instance export default msg \u5728appvue\u91cc import message componentsmessagemessagejs expected \u671f\u671b\u80fd\u50cf\u65e7\u7248\u672c\u4e00\u6837\u6b63\u5e38\u663e\u793a actually happening \u70b9\u51fbvue logo\u8c03\u7528message", "num": "6685", "d": "9/2017"}, {"title": "click events doubleclick events conflicts resolve", "body": "", "num": "6684", "d": "9/2017"}, {"title": "test", "body": "", "num": "6683", "d": "9/2017"}, {"title": "\u5f02\u6b65\u6ce8\u518c\u7ec4\u4ef6\u7684require\u662f\u5426\u53ef\u4ee5\u4fee\u6539\u4e3aimport\u66f4\u5408\u9002", "body": "version reproduction link steps reproduce \u5f02\u6b65\u6ce8\u518c\u7ec4\u4ef6\u7684require\u662f\u5426\u53ef\u4ee5\u4fee\u6539\u4e3aimport\u66f4\u5408\u9002 \u56e0\u4e3a\u53ef\u80fd\u6211\u7684vue\u6587\u4ef6\u662f\u7528ts\u5199\u7684 \u901a\u8fc7require\u4f1a\u62a5\u9519 \u9700\u8981\u624b\u52a8\u6dfb\u52a0require\u5230dts expected actually happening", "num": "6682", "d": "9/2017"}, {"title": "please enhance custom directives", "body": "problem feature solve let start saying love vue awesome framework guys created enjoy using top frameworks choice day one one small area found vue lacking custom directives department nt around vue gather decision made underpower custom directives favor components agree developing applications components likely need problem starts want create plugins especially ui plugins created ui plugins frameworks specifically bootstrap native implementation several features implemented custom directives like clean way tried achieve thing vue well got frustrated quickly problem number nt vue instance wish could create custom directives way create custom components actual vue instance use right manually extract directive bindings store element clean since pass el object around access properties doable clean problem number update hook function called consistently instance vmydirective foo bar bar changes update method called something dom changes update called super frustrating many times want control state directive based property value consistent way know value changed real problem things done without consistent way know binded property changed wish could vue instance watch methods react changes accordingly love vue awesome framework continue enjoy using recommend improved would absolutely reason ever use framework thanks hard work love goes vue proposed api look like api basically one custom components example silly would love able something like", "num": "6680", "d": "9/2017"}, {"title": "please enhance custom directives", "body": "let start saying love vue awesome framework guys created enjoy using top frameworks choice day one one small area found vue lacking custom directives department nt around vue gather decision made underpower custom directives favor components agree developing applications components likely need problem starts want create plugins especially ui plugins created ui plugins frameworks specifically bootstrap native implementation several features implemented custom directives like clean way tried achieve thing vue well got frustrated quickly problem number nt vue instance wish could create custom directives way create custom components actual vue instance use right manually extract directive bindings store element clean since pass object around access properties doable clean problem number update hook function called consistently instance changes method called something dom changes called super frustrating many times want control state directive based property value consistent way know value changed real problem things done without consistent way know binded property changed wish could vue instance methods react changes accordingly love vue awesome framework continue enjoy using recommend improved would absolutely reason ever use framework thanks hard work love goes vue", "num": "6679", "d": "9/2017"}, {"title": "ssr render function recognize slotsdefault child component dynamic", "body": "version reproduction link steps reproduce server side render function recognize slotsdefault child component dynamic work fine client side expected render dynamic component actually happening empty content", "num": "6678", "d": "9/2017"}, {"title": "vbind something else object warn", "body": "version reproduction link steps reproduce create component slot bind reference string slot via utilize said component define template defined slot giving local scope parameter output bound string output scoped string template passed component created step expected string bound slot passed template passed slot string actually happening string exploded object properties string indexes character string sure intended behavior default value defined slot outputs string expected soon passed consumer defined template string altered object temporary workaround simply pass actual object vbind slot expect object scoped value defined template seems intended behavior least vue warning value mangled vbind expects object string", "num": "6677", "d": "9/2017"}, {"title": "easily keep component status vfor key array splice", "body": "version reproduction link steps reproduce click first component remove expected remain second component show second component status actually happening remain component show first component status known happen use keyindex component reused current version key required ca nt add unique key array element easily found suggestions forum use object array element use object key directly ex vue expect value catch warning avoid using nonprimitive value key use stringnumber value instead think right way must create unique id manually like official todomvc example graceful solution think restriction post issue thank", "num": "6676", "d": "9/2017"}, {"title": "working node", "body": "version reproduction link something could put github repo jsfiddle link another people runs problem steps reproduce install node install vue start new project run generated file appjs served properly look network panel browser gives errcontentlengthmismatch error expected show default project page actually happening appjs file served properly works node", "num": "6675", "d": "9/2017"}, {"title": "\u5728webpack", "body": "", "num": "6674", "d": "9/2017"}, {"title": "loss jquery event listening", "body": "version reproduction link steps reproduce attached jsfiddle example see using plugin modify date trigger change dateval however comment line imports vue uncomment line imports vue see plugin trigger change dateval expected change value triggered jquery trigger change event vue object actually happening vue data update change value jquery dug best could vue vue listen events tell vue block code would listen jquery events well vue listens native events block code lines vue code base", "num": "6673", "d": "9/2017"}, {"title": "loss jquery event listening", "body": "version reproduction link steps reproduce attached jsfiddle example see using plugin modify date trigger change dateval however comment line imports vue uncomment line imports vue see plugin trigger change dateval expected change value triggered jquery trigger change event vue object actually happening vue data update change value jquery dug best could vue vue listen events tell vue block code would listen jquery events well vue listens native events block code lines vue code base", "num": "6672", "d": "9/2017"}, {"title": "eventprevent nt work properly", "body": "version reproduction link steps reproduce open fiddle chrome try scroll updown green block child scroll occur prevented try scroll updown red block parent scroll occur prevented chrome works expected open fiddle firefox try scroll updown green block child try scroll updown red block parent scroll occur cases bug versions browsers used chromium firefox os linux ubuntu gnome desktop environment expected eventprevent preventdefault firefox actually happening eventprevent preventing maybe add", "num": "6671", "d": "9/2017"}, {"title": "deep props change vmodel vs set vs objectassign", "body": "version reproduction link steps reproduce consider three examples vmodel set methods update slug userid set thisvalue slug userid eventtargetchecked objectassign methods update slug userid let obj thisvalue obj slug userid eventtargetchecked thisvalue objectassign thisvalue obj expected expect three ways work expected ie look structure vue dev tools see leaves toggle true false checkuncheck checkboxes actually happening fact third way works expected moreover way also working sometimes unacceptable maybe getting whole reactivity thing however documentation especially promoted matter", "num": "6670", "d": "9/2017"}, {"title": "host vuejs shared hosting", "body": "ran root directory vuejs project created using webpacksimple copied web hosting root try access site get blank page", "num": "6669", "d": "9/2017"}, {"title": "ca nt copy list props model data render", "body": "version reproduction link steps reproduce load hotreload expected data props copied model html list rendered model actually happening list empty created question stackoverflow basically list component receives array iterates render html list change list add remove items ca nt directly props trying copy model parameter change mutate array comes http request made parent component use props iteration works list correctly rendered ca nt change use model works hotreloading maybe takes time receive data network works props otherwise list empty hotreloading depends lifecycle event use make copy anyone knows problem something else name model property number correct never called use props iteration use model instead always come printing props result depends variable used iterate directive nt bug tl dr reporting two things ca nt make copy data come http request props model render list properly trying find came across behavior props changes whether use directive please could anybody help", "num": "6668", "d": "9/2017"}, {"title": "ca nt copy list props model data render", "body": "created question stackoverflow basically list component receives array iterates render html list change list add remove items ca nt directly props trying copy model parameter change mutate array comes http request made parent component use props iteration works list correctly rendered ca nt change use model works hotreloading maybe takes time receive data network works props otherwise list empty hotreloading depends lifecycle event use make copy anyone knows problem something else name model property number correct never called use props iteration use model instead always come printing props result depends variable used iterate directive nt bug tl dr reporting two things ca nt make copy data come http request props model render list properly trying find came across behavior props changes whether use directive please could anybody help", "num": "6667", "d": "9/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u671f\u671bprogress\u6807\u7b7e\u7684value\u5c5e\u6027\u80fd\u591f\u6b63\u786e\u6e32\u67d3 actually happening \u5fc5\u73b0", "num": "6666", "d": "9/2017"}, {"title": "vhtml strips tags", "body": "hey guys right developing cms get html server load via vhtml everything dom rendered pretty fine", "num": "6664", "d": "9/2017"}, {"title": "click pb", "body": "version reproduction link steps reproduce msg essential links export default name hello data return msg welcome vuejs app methodes say message alert message fontweight normal ul liststyletype none padding li display inlineblock margin color expected hello help please hi version webpack actually happening vueesmjs vue warn property method say defined instance referenced render make sure declare reactive data properties data option uncaught typeerror vmsay function click hellovue htmlbuttonelementinvoker vueesmjs", "num": "6663", "d": "9/2017"}, {"title": "click button error", "body": "hello help please hi version webpack msg essential links export default name hello data return msg welcome vuejs app methodes say message alert message fontweight normal ul liststyletype none padding li display inlineblock margin color vueesmjs vue warn property method say defined instance referenced render make sure declare reactive data properties data option uncaught typeerror vmsay function click hellovue htmlbuttonelementinvoker vueesmjs", "num": "6662", "d": "9/2017"}, {"title": "\u5f53\u524d\u9875\u5237\u65b0", "body": "vueuse router const router new router routes path illegal name illegal component illegal path name index component index path index name index component index path todoform name todoform component todoform children \u903e\u671f\u5ba1\u6279 path repaymentoverdueapprove name repaymentoverdueapprove component repaymentoverdueapprove export default router", "num": "6661", "d": "9/2017"}, {"title": "poorly performance computed property computed property accesses nested array", "body": "version reproduction link steps reproduce first computed property accesses nested array second computed property accesses first computed property expected computed property cached repeated calls returns result immediately actually happening compute function called access computed property slow looks like computed property accesses nested array cached properly", "num": "6660", "d": "9/2017"}, {"title": "improve diff intuition components nested plain elements", "body": "version reproduction link steps reproduce expected \u5176\u4ed6vif\u7684\u5143\u7d20\u4e0d\u5e94\u8be5\u5f71\u54cd\u4e92\u4e0d\u76f8\u5e72\u7684\u7ec4\u4ef6 actually happening", "num": "6659", "d": "9/2017"}, {"title": "vif affect custom component", "body": "problem description block use vif custom component custom component create twice first one destroyed cause wrong quote beyong contemplation test cases title title error title error title", "num": "6658", "d": "9/2017"}, {"title": "improve error message nonreactive properties", "body": "problem feature solve current error message non helpful vueclasscomponent js ts forget initialize property get error course class based components data option nt helpful proposal change error message proposed api look like changes", "num": "6657", "d": "9/2017"}, {"title": "production setup memory loss", "body": "version reproduction link steps reproduce run nuxtjs production production expected continues run actually happening memory loss crash production nuxtjs build posting issue since stack seems point either lines couple dumps crash pretty consistent almost even long runs first one couple days ago lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context initwatch aka initwatch init fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done today yarn start nuxt start open lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context watch createwatcher aka createwatcher fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done", "num": "6656", "d": "9/2017"}, {"title": "production setup memory loss", "body": "version reproduction link steps reproduce run nuxtjs production production expected continues run actually happening memory loss crash production nuxtjs build posting issue since stack seems point either lines couple dumps crash pretty consistent almost even long runs first one couple days ago lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context initwatch aka initwatch init fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done today yarn start nuxt start open controlsettings controlsettings controlimages lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context watch createwatcher aka createwatcher fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done", "num": "6655", "d": "9/2017"}, {"title": "production setup memory loss", "body": "production nuxtjs build posting issue since stack seems point either lines couple dumps crash pretty consistent almost even long runs first one couple days ago lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context initwatch aka initwatch init fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done today yarn start nuxt start open controlsettings controlsettings controlimages lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context watch createwatcher aka createwatcher fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done", "num": "6654", "d": "9/2017"}, {"title": "vue event directives angular js", "body": "worked angular js found many directives many event directive well eg ngclick ngdblclick etc many vuejs directives like angular bring nice exciting addition guess list directives angular", "num": "6653", "d": "9/2017"}, {"title": "sync modifier nt work expected", "body": "version reproduction link steps reproduce make component renders list elements one active class use click handle clicks rendered elements element clicked method called method get index clickd element remove active class current active element add clicked element expected class would add active clicked element matter order actually happening class nt react changing first element last element", "num": "6652", "d": "9/2017"}, {"title": "\u5982\u4f55\u914d\u7f6e", "body": "version reproduction link steps reproduce \u5728webpack\u65b0\u7248\u672c\u4e2d\u65e0\u6cd5\u914d\u7f6e expected \u5728vue\u4e2d\u7684template\u4e2d\u80fd\u591finclude\u5916\u90e8html\u6216vue\u7684template\u7247\u6bb5 actually happening \u5728webpack\u65b0\u7248\u672c\u4e2d\u65e0\u6cd5\u914d\u7f6e", "num": "6650", "d": "9/2017"}, {"title": "problem testing vueprograssbar", "body": "problem testing avoriaz generic component wraps plugin called vueprograssbar trying test generic component loading indeed calling vueprograssbar plugin loading component export default name loading created routerbeforeeach next gt progressstart next routeraftereach gt progressfinish test mocha chai avoriaz import shallow avoriaz import vue vue import router router import loading componentsloading import vueprogressbar vueprogressbar describe loadingvue gt let wrapper beforeeach gt vueuse vueprogressbar wrapper shallow loading router describeonly rendering gt render loading component gt expect wrappercontains toequal true getting error", "num": "6649", "d": "9/2017"}, {"title": "support reactive properties array function", "body": "problem feature solve enables simpler syntax consistent behaviour would nice could add reactive properties function array currently object works see fiddle example notice update child value toggled however update avalue toggled toggled first html avalue avalue toggle bvalue bvalue toggle cvalue cvalue toggle js new vue el app data function var var b var c function use case plugin functions arrays treated objects child reactive properties even though fact limitation place method child property instead especially clunky calling method code separates async methods normal methods called proposed api look like see technical challenges treating functions arrays objects reactive properties suspect change code also small one changes quick change lines makes fiddle work expected function least", "num": "6648", "d": "9/2017"}, {"title": "specifying emits automatic documentation validation", "body": "problem feature solve specify props name type validator jazz documenting tools take advantage order create documentation component make documentation useful think adding optional emits specification would help better specify ins outs component suppose validation could added specification ensure emit events nt emit payloads unspecified format would protect parent getting screwy data proposed api look like", "num": "6647", "d": "9/2017"}, {"title": "facilitate extend logic vue files", "body": "problem feature solve component extension vue files makes components logic encapsulated clear component subcomponent another looking subcomponent file otherwise coders decipher comments inspecting registration file manually right registration looks like ideally sub components would name populated sub components name right defaults vuecomponent therefore name pulled extendoptions property proposed api look like ideally registration would look like", "num": "6646", "d": "9/2017"}, {"title": "question", "body": "version reproduction link async components instantiated programmatically manually mounted dom steps reproduce try manually create instance async component must provide resolve function constructor component work however find method exposed vuejs expected return constructor function component registration correct resolver inside supplied vue actually happening vuecomponent returns function supplied component registration", "num": "6645", "d": "9/2017"}, {"title": "question iterate maps sets vfor", "body": "problem feature solve iterate map set want use keyindex field mapset proposed api look like na", "num": "6644", "d": "9/2017"}, {"title": "", "body": "problem feature solve proposed api look like \u65e0", "num": "6643", "d": "9/2017"}, {"title": "embed html svg fragment got wrong namespace template", "body": "version reproduction link steps reproduce embed svg element expected rendered htmlelment show actually happening show seems related", "num": "6642", "d": "9/2017"}, {"title": "using component containing top level vif parent refs", "body": "version reproduction link steps reproduce define component top level element vif declare component parent template ref expected ref available even component toplevel vif false actually happening even vif false component still accessible via refs first load toggle component vif false true false parent ref becomes undefined component beforedestroy destroyed event also fire", "num": "6641", "d": "9/2017"}, {"title": "pass path changed property deep watch", "body": "problem feature solve passing path changed property deep watch would allow us determine exactly data changed deep watch programmatically especially data nested arrays currently large nested object want know property changed need create watch every single property furthermore watched properties arrays impossible register watch deeper respective array keys requested indirectly see example proposed api look like currently vue provides arguments watch handler path changed attribute information could passed third argument sure argument typed one possibility providing path string example would indicate change occurred", "num": "6640", "d": "9/2017"}, {"title": "bug seems like template mine nt calling computed property", "body": "got component something like template something like parts omitted renamed clarity renders scene using infamous absolutesize attribute nt animated computed property method never called expression perhaps complex vue nt detect property call", "num": "6639", "d": "9/2017"}, {"title": "determine fields bind", "body": "problem feature solve sorry english poor vmodel field associated vmodel dynamic output server proposed api look like whether direct indirect", "num": "6638", "d": "9/2017"}, {"title": "use vuejs server side rendering done next", "body": "looking next demo created snipcart see possible create valid page vuejs reacting data attributes unfortunately find documentation vuejs achieve server side rending done party", "num": "6637", "d": "9/2017"}, {"title": "use vuejs server side rendering done next", "body": "looking next demo created snipcart see possible create valid page vuejs reacting data attributes unfortunately find documentation vuejs achieve server side rending done party", "num": "6636", "d": "9/2017"}, {"title": "use vuejs webextensions", "body": "problem feature solve tried build webextensions vuejs got know webextensions lot restrictions security vuejs try bypass security restrictions proposed api look like run webextensions context", "num": "6635", "d": "9/2017"}, {"title": "npm intall vueloader gives enoent issue", "body": "version details node npm getting enoent error console error user app app npm install vueloader app consolidate bluebird lrucache pseudomap yallist postcss chalk ansistyles colorconvert colorname escapestringregexp sourcemap supportscolor hasflag postcssloadconfig cosmiconfig isdirectory jsyaml argparse sprintfjs esprima minimist oshomedir parsejson errorex isarrayish requirefromstring objectassign postcssloadoptions postcssloadplugins postcssselectorparser flatten indexesof uniq resolve pathparse vuehotreloadapi vuestyleloader hashsum loaderutils bigjs emojislist npm warn enoent enoent file directory open apppackagejson npm warn vueloader requires peer cssloader none installed npm warn vueloader requires peer vuetemplatecompiler none installed npm warn app description npm warn app repository field npm warn app readme data npm warn app license field npm err linux npm err argv install vueloader npm err node npm err npm npm err path appnodemodulesjsbeautifyjsbincssbeautifyjs npm err code enoent npm err errno npm err syscall chmod npm err enoent enoent file directory chmod appnodemodulesjsbeautifyjsbincssbeautifyjs npm err enoent enoent file directory chmod appnodemodulesjsbeautifyjsbincssbeautifyjs npm err enoent likely problem npm npm err enoent related npm able find file npm err enoent npm err please include following file support request npm err appnpmdebuglog", "num": "6634", "d": "9/2017"}, {"title": "vbind key behavior", "body": "version reproduction link steps reproduce make vfor loop bind key add input model key start typing initial type cursor move field expected normal typing without cursor moving actually happening first letter typed cursor move onkeyup return false set", "num": "6633", "d": "9/2017"}, {"title": "vue remove unused node set refs undefined", "body": "version reproduction link steps reproduce click button twice refs components undefined expected topprogress component show actually happening refs component undefined behaviour normal vue", "num": "6632", "d": "9/2017"}, {"title": "row typings like dt", "body": "nice could store row typings without modules typings separate directory useful someone build frontend without webpack use module system case could include typing file tsconfig work need install typings definitelytyped", "num": "6630", "d": "9/2017"}, {"title": "vuessr bug nodejs async promise entrance", "body": "version reproduction link steps reproduce \u5173\u4e8e\u5728nodejs expected \u5728\u4e0d\u4f7f\u7528babel\u7f16\u8bd1async\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528async \u8fd4\u56de\u7684\u5bf9\u8c61\u80fd\u591f\u4fee\u6b63\u5904\u7406 actually happening normalizerender\u51fd\u6570\u62a5\u9519 sorry english poor \u63cf\u8ff0 \u4fee\u6b63", "num": "6629", "d": "9/2017"}, {"title": "vuessr bug nodejs async promise entrance", "body": "sorry english poor \u63cf\u8ff0 \u4fee\u6b63", "num": "6628", "d": "9/2017"}, {"title": "dynamic component watcher", "body": "problem feature solve provide nested dynamic watchers dynamic data models proposed api look like idea take param variables structure vuerouter apply watchers component javascript export default data return movies name movie actors name first name name movie watch movies id val old watches changes movies returns affected movie consolelog val params id idea could cool watch nested data models", "num": "6626", "d": "9/2017"}, {"title": "routerreplace nt replases historyreplacestate", "body": "version reproduction link steps reproduce component router const router new vuerouter path requestedit id name requestedit component request component trying run expected mount component second mount url change new actually happening happen previos url remains ulr bar suspect function historyreplacestate execute case url nt change using request component url also change execute historyreplacestate hands", "num": "6625", "d": "9/2017"}, {"title": "seems value binding poster attribute leads template compiling error", "body": "", "num": "6623", "d": "9/2017"}, {"title": "keepalive include parameter worked routerview", "body": "version reproduction link steps reproduce keepalive include parameter worked routerview expected home keep alived actually happening home keep alived", "num": "6619", "d": "9/2017"}, {"title": "ca nt use component called", "body": "version reproduction link steps reproduce create component called add vm error console html expected able use reasonable name component one render actually happening component rendered", "num": "6617", "d": "9/2017"}, {"title": "watcher object misfires property addition parent", "body": "version reproduction link steps reproduce declare watcher property containing object add new property parent object vueset parent newprop x expected watcher fire watched property changed actually happening watcher also fires new properties added parent object although watched value change misfire happens watched value js object primitive types", "num": "6616", "d": "9/2017"}, {"title": "slots nt show correct slots using slot scope", "body": "version reproduction link steps reproduce create child component two slots use named slot scope feature child components slots variable default expected removed template gives expected result actually happening", "num": "6615", "d": "9/2017"}, {"title": "allow providing custom json stringify functions ssr state serialization", "body": "version reproduction link steps reproduce ssr use method stringify initial state initial state circular quote throw error like way avoid thing remove circular state expected use something like circular avoid throwing error actually happening typeerror converting circular structure json convenient make minimal reproduction jsfiddle webpack step", "num": "6614", "d": "9/2017"}, {"title": "using gulp convert vue files", "body": "problem feature solve company recenlty decided use vuejs recommend good idea use vue files rails app dont use much js atm course jquery various plugins webpack read order use webpack go js modules philosophy encounter many bumps organizing old new codebase complicated use learning vue enough slow development need add features stuff adding webpack seems like slow us much experts node js tooling would gulp option transform vue files simpler alternative thanks proposed api look like api", "num": "6613", "d": "9/2017"}, {"title": "tables ssr causing warning clientside rendered virtual dom tree matching serverrendered content", "body": "version reproduction link table component steps reproduce git repo linked nuxt starter repo additional table component data rendering table static data run yarn run yarn dev open browser open console check warnings errors expected serverside rendered markup match clientside markup warning shown table rendered browser actually happening get following warnings errors console parent table mismatching childnodes vs vnodes nodelist tbody vue warn clientside rendered virtual dom tree matching serverrendered content likely caused incorrect html markup table gets rendered loading page server inside table component componentstablevue also added list comparison remove table list rendering without warning adding table get warning", "num": "6612", "d": "9/2017"}, {"title": "hoistingup vnode infinite loop warning", "body": "version reproduction link steps reproduce precise layout components jsfiddle assembly components reason fragile makes think bug example remove topmost component nt affect code warning disappears expected slot child hoisted parent rendered child without problem actually happening child gets rendered infinite update loop warning", "num": "6610", "d": "9/2017"}, {"title": "dev mode mixin sfc merged vuerouter plugin install", "body": "version reproduction link steps reproduce run project open console navigate foobar refresh page see logs console put breakpoint vueesmjs mergeoptions function see vue merges mixin build start page try works expected expected mixin get called refresh console actually happening mixin called console vuerouter version dev mode router mixins merged vuerouter strategies get isntalled", "num": "6609", "d": "9/2017"}, {"title": "\u5bf9\u6570\u7ec4\u7684 watch \u5728\u4f7f\u7528 push \u589e\u52a0\u540e\u65e0\u6cd5\u5f97\u5230\u7b26\u5408\u9884\u671f\u7684 \u5f53\u524d\u503c \u53ca \u66f4\u65b0\u524d\u503c", "body": "version reproduction link steps reproduce \u5b9e\u4f8b\u4e2d\u5bf9\u6570\u7ec4\u8fdb\u884c push \u7684\u4e24\u4e2a\u53c2\u6570 \u5f53\u524d\u503c \u66f4\u65b0\u524d\u503c \u66f2\u7ebf concat \u7684\u95ee\u9898\u5e94\u8be5\u662f\u5b58\u5728 bug expected ids watch ids idspush actually happening ids watch ids idspush ids idsidsconcat \u8fd9\u662f\u4e00\u79cd\u89e3\u51b3\u65b9\u6848", "num": "6608", "d": "9/2017"}, {"title": "deep watch syntax could simplified", "body": "problem feature solve currently order watch object properties need deep watch using problem notation hard decipher add visual noise proposed api look like given want watch properties data would nt need declare attributes clean directly adding object like way watch functions would exactly like directly accessible bonus point refactoring imagine could detect function attribute functions user point view find notation clearer understand parse always feel free discuss idea", "num": "6607", "d": "9/2017"}, {"title": "scoped slot name prop render", "body": "version reproduction link steps reproduce run jsfiddle choose dragndrop file file input expected file name listed input actually happening nothing listed input issue happens use prop scoped slot rendered also instead binding individual props using works fine", "num": "6606", "d": "9/2017"}, {"title": "vmodel doese nt work logic simple inputs checkbox etc", "body": "version reproduction link steps reproduce data return test expected value test must change edit input actually happening value doese nt change input doese nt emit event", "num": "6605", "d": "9/2017"}, {"title": "vmodel doese nt work conponent simple inputs checkbox etc", "body": "version reproduction link steps reproduce vmodel doese nt work conponent simple inputs example update", "num": "6604", "d": "9/2017"}, {"title": "vue ssr critical css injected regression", "body": "version reproduction link steps reproduce npm install \u6700\u65b0\u7684vuevueserverrenderervuetemplatecompiler \u6837\u5f0f expected ssr \u8fd4\u56de\u7684html\u6b63\u5e38\u5305\u542bcss actually happening \u4e0d\u5305\u542b \u5f53\u6211\u628apackagejson \u4e2d vuevueserverrenderervuetemplatecompiler", "num": "6603", "d": "9/2017"}, {"title": "vue ssr auto inject critical css nt work version work", "body": "ssr html ssr html", "num": "6602", "d": "9/2017"}, {"title": "textnode removed unexpectedly due chrome bug", "body": "version reproduction link steps reproduce else toggleedit new vue el app data status false methods toggleedit function thisstatus thisstatus expected could display correctly actually happening status wo nt display equal useragent unless replace span tag", "num": "6601", "d": "9/2017"}, {"title": "append vnode segments current vue instance", "body": "problem feature solve normal vue instance click button invoke function create vnode calling function insert proposed api look like", "num": "6599", "d": "9/2017"}, {"title": "update vue version text pictures displayed weex project", "body": "version reproduction link steps reproduce npm install npm run dev expected see text picture actually happening dom display properly use vue ok", "num": "6598", "d": "9/2017"}, {"title": "vuerouter deactivate hooks ca nt triggered", "body": "\u95ee\u9898\u63cf\u8ff0 categoryindexvue deactivate \u4ee3\u7801\u5982\u4e0b js \u4ee3\u7801 routerjs javascript routermap name home component function reslove return require viewshomeindexvue reslove meta keepalive true name component function reslove return require viewscategoryindexvue reslove meta keepalive true name component function reslove return require viewscategoryindexvue reslove meta keepalive true \u6ce8\u518c\u8def\u7531\u5207\u6362\u524d routerbeforeeach function transition transitionnext \u6ce8\u518c\u8def\u7531\u5207\u6362\u540e routeraftereach function transition consolelog transitionfromname categoryindexvue \u90e8\u5206\u4ee3\u7801 javascript route", "num": "6597", "d": "9/2017"}, {"title": "transition nested subtransitions", "body": "nest transition components within outer transition component inner transition given type transition rough example", "num": "6596", "d": "9/2017"}, {"title": "transition hooks inside componentvue file instead parent", "body": "problem feature solve currently devs need define transition hooks parent components leading dirty dom checks conditions could solved hooks declared inside child transitioned component proposed api look like using element come realize javascript transition hooks scoped component parent object parent component html export default methods onenter el done issue kinda breaks single file component model methods decribing behavior component outside also method generic child components render inside tag two points encourage dirty dom checks transition hook would inside child component instead refs could used want two different animations elements inside transition tag example animating routes entering dirty conditional check inside transition method could missing possible configuration skipped docs case nt miss anything escape would suggest moving transition hooks inside property child component similar nuxt aprent child components inside transition tag would look something like parent component html export default methods onenter el done child ccomponent html export default name child transition beforeenter el done onenter el done beforeleave el done onleave el done alternatively could use name transition identify hooks would allow developers different animations case element reused wrapped parts app need different sequence common transition hooks like current vue version well could easily accomplished user creates generic function imports component reference repeat possible define transition hooks children components missed sorry advance noise", "num": "6595", "d": "9/2017"}, {"title": "transition hooks inside componentvue file instead parent", "body": "using element come realize javascript transition hooks scoped component parent object parent component html export default methods onenter el done issue kinda breaks single file component model methods decribing behavior component outside also method generic child components render inside tag two points encourage dirty dom checks transition hook would inside child component instead refs could used want two different animations elements inside transition tag example animating routes entering dirty conditional check inside transition method could missing possible configuration skipped docs case nt miss anything escape would suggest moving transition hooks inside property child component similar nuxt aprent child components inside transition tag would look something like parent component html export default methods onenter el done child ccomponent html export default name child transition beforeenter el done onenter el done beforeleave el done onleave el done alternatively could use name transition identify hooks would allow developers different animations case element reused wrapped parts app need different sequence common transition hooks like current vue version well could easily accomplished user creates generic function imports component reference repeat possible define transition hooks children components missed sorry advance noise", "num": "6594", "d": "9/2017"}, {"title": "directive association incorrect using vif", "body": "version reproduction link steps reproduce drag amp drop red square works element vdrag directive click toggle button display blue square note nt vdrag directive drag blue square expected nt able drag blue square vdrag directive actually happening squares dragged understand directive binded element dom using index dom updated vif index updated directive binds element easily solved using vshow instead vif", "num": "6593", "d": "9/2017"}, {"title": "add boolean modifier vmodel", "body": "problem feature solve modifier vmodel automatically parses value integer would useful similar modifier boolean values way checkbox work value contains strings instead javascripts truefalse currently checkbox checked modifier code work would handle boolean strings real booleans proposed api look like", "num": "6592", "d": "9/2017"}, {"title": "vueprototype event handler \u5982\u679c\u4f20\u5165\u7684handler\u4e3aundefined \u4f1a\u5220\u6389events\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2ahandler", "body": "version reproduction link steps reproduce vueprototype eventname handler vmevents eventname \u4f1aoff\u6389vmevents eventname \u6700\u540e\u4e00\u4e2ahandler \u5728eventsjs expected x actually happening x", "num": "6591", "d": "9/2017"}, {"title": "\u91cd\u5927\u6539\u9769\u65b9\u5411", "body": "problem feature solve module", "num": "6590", "d": "9/2017"}, {"title": "allow valueless prop assignments", "body": "problem feature solve sure common use case using vue pretty frequently create wrapper components kinds happens regularly several individual props need passed child components example component accepts props passes underlying template might look like adds quite lot visual noise proposed api look like like propose possibility omit value prop assignments assigned prop without value use component property value much clearer example basic example suggested equals current modifiers ignored suggested equals current introducing example could reduced consider much elegant concise however possibly little less obvious syntax think", "num": "6589", "d": "9/2017"}, {"title": "locally registering component using recursively working expected unknown custom element warning", "body": "version reproduction link steps reproduce run app click caret list item expected component able reused actually happening error thrown vueesmjs vue warn unknown custom element register component correctly recursive components make sure provide name option found gt srccomponentsnodelistnodevue asked help needhelp second set eyes decided strange behavior", "num": "6588", "d": "9/2017"}, {"title": "watch nested object properties inside component", "body": "version reproduction link steps reproduce set vmodel inputname binput component vmodel inputnamev input html finish render html input value binput native input html click set input empty expected binput component must update value text field like input html updated actually happening binput component update value text field normal input html updated binput change value use forceupdate set object input empty nt understand emit new value vmodel input assign model", "num": "6586", "d": "9/2017"}, {"title": "one way data binding updating parent child", "body": "version reproduction link steps reproduce create simple app component empty array called datatest create simple test component prop called datatest import call test component app component passing datatest datatest prop oneway databinding create mounted hook test settimeout pushing value prop array expected app component datatest could updated actually happening app component datatest updated", "num": "6585", "d": "9/2017"}, {"title": "sharepoint spuimodaldialogshowmodaldialog error", "body": "version reproduction link steps reproduce using vue sharepoint everything right except try open modal window sharepoint code spuimodaldialogshowmodaldialog options expected popup window appears actually happening receive message error typeerror windowselfdlgwndtop function ps sorry work jsfiddle executed vue method works ex", "num": "6584", "d": "9/2017"}, {"title": "sharepoint spuimodaldialogshowmodaldialog error", "body": "hello using vue sharepoint everything right except try open modal window sharepoint code executed method following message error typeerror windowselfdlgwndtop function executed outside works ex could give hint stuck thanks advance gio", "num": "6583", "d": "9/2017"}, {"title": "\u52a8\u6001\u521b\u5efa\u7684 activated \u4e8b\u4ef6\u4e22\u5931", "body": "version reproduction link steps reproduce keepalive component activated \u7559\u610f\u4f8b\u5b50\u7684 activated expected activated \u4e8b\u4ef6 actually happening \u6ca1\u6709\u89e6\u53d1 activated", "num": "6582", "d": "9/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u5728ios expected actually happening", "num": "6581", "d": "9/2017"}, {"title": "input tag use vmodel value input special values monitored watcher", "body": "ca nt listen input string stopedvalue function watch object work stopedvalue field value change empty input vmodelnumber stopedvalue min type number data return stopedvalue watch stopedvalue val oldval consolelog val oldval", "num": "6580", "d": "9/2017"}, {"title": "vif velse uncooperative dom operate", "body": "version reproduction link steps reproduce run jsfiddle example read description click change show area button twice expected first click showarea shows hahahahaha green background color second click showarea shows yellow background color actually happening first click showarea correct second click showarea shows hahahahaha wrong yellow background color right guess vif template velse template stored browser memory vue nodeswhen changed children operating dom directly vue nodes got unexpected changes project using echarts need operate dom directly", "num": "6579", "d": "9/2017"}, {"title": "td template vif working ie amp ie ok", "body": "version reproduction link steps reproduce expected ie version ok actually happening ok ng different permissions show different ui", "num": "6578", "d": "9/2017"}, {"title": "injection ob found reflectownkeys objectkeys", "body": "version steps reproduce actually sure causing object observed added try create minimal repro later update repro link expected considered injection actually happening shown first screenshot seems happening usage apparently objectgetownpropertynames target concat objectgetownpropertysymbols target returning nonenumerable keys", "num": "6574", "d": "9/2017"}, {"title": "null values directive handled ssr", "body": "version reproduction link steps reproduce try render expected may gracefully handled like directive see notes client side version actually happening throwing internal seems simple fix would defining default value parameter utiljs better type check value related nuxtnuxtjs notes behaviour also differs ssr client ssr renders changes client side seems optimized change handle inconsistency ssr render", "num": "6572", "d": "9/2017"}, {"title": "extending bundled typescript definitions vuerx extending general", "body": "like use vuerx typescript project vuerx extends vue prototype several methods since vuerx ship ts declarations would like roll unfortunately unable come way extend vue declarations bundled vuejs due way declaration written classes rather interfaces suggestions", "num": "6569", "d": "9/2017"}, {"title": "create iife build vuetemplatecompiler add cdnjs", "body": "problem feature solve currently browser runtime available cdn users vuetestutils requires vue vue template compiler globals run browser without easily available browser friendly vuetemplatecompiler users able use full features vuetestutils added users able run vuetestutils browser note features require template compiler alternative making available cdn would warn browser users certain features nt available browser build proposed api look like create browser runtime adds vuetemplatecompiler global variable", "num": "6568", "d": "9/2017"}, {"title": "support android", "body": "problem feature solve hi company wants switch vuejs really concened regarding support android site lowest support android means android supported someone please confirm thanks proposed api look like would api regular support android", "num": "6567", "d": "9/2017"}, {"title": "click would trigger event vnode click event", "body": "version reproduction link steps reproduce see reproduction link expected click become changed actually happening click nothing happened changed guess click changed immediate click event triggered executes another vnode click event expand changed rename second div another tag name errors occur move click event tag parent tag first div errors occur", "num": "6566", "d": "9/2017"}, {"title": "\u4f7f\u7528vmodel \u65f6\u51fa\u73b0\u7684\u4e00\u4e9b\u95ee\u9898", "body": "vmodel \u7ed1\u5b9a\u7684\u53d8\u91cf\u5728 \u7684\u6700\u540e\u4e2a\u7248\u672c\u6ca1\u6709\u95ee\u9898", "num": "6565", "d": "9/2017"}, {"title": "vue form requires button submit", "body": "version reproduction link steps reproduce create regular vue form submit handler add input interestingly submits input field press enter focused either input expected form submit actually happening form nt submit input element submit guessing vue attempting trigger click button within form enter pressed input field", "num": "6564", "d": "9/2017"}, {"title": "introduction page demo happend error click times output html", "body": "", "num": "6563", "d": "9/2017"}, {"title": "bug vuecli project name", "body": "vuecli ubuntu myproject set name command line testvue set name specified parameter see screenshot", "num": "6562", "d": "9/2017"}, {"title": "value attribute fails vue document internet explorer", "body": "version reproduction link steps reproduce yarn npm run dev open link internet explorer compare chrome expected assigns value inside vue document actually happening assigns value inside vue document thanks sorry something silly assigns value works correctly outside app", "num": "6561", "d": "9/2017"}, {"title": "ssr partial prerendering", "body": "feature request problem feature solve creating ssr vuejs app pages nt change much like page therefore probably useful come natural way setting ssr prerenderspaplugin proposed api look like routes require ssr prerendered advance", "num": "6560", "d": "9/2017"}, {"title": "add ability reference component methods without needing ref", "body": "problem feature solve right order call method custom component assign ref assigned reference method calling proposed change would allow easiest access internal methods proposed api look like custom method may", "num": "6559", "d": "9/2017"}, {"title": "vue causes browser become unresponsive createelement called promisereturning function", "body": "version reproduction link steps reproduce calling pass function returns promise resolves vue options bag example html message ts var options template hello new vue el app render h return h gt new promise r gt r options expected either something useful error message actually happening entire page stops responding part dts test suite wanted see test case legitimate ended finding triggers sort bad behavior", "num": "6558", "d": "9/2017"}, {"title": "prop type plain object wonderful merge default object prop object exist", "body": "problem feature solve parent component passes prop child component prop type object value given time child component default value build function also returns merge default object prop object conducive customize default value also greatly enhance feel writing vue components simple example js parent component data return editoroptions line true autoclosetags true child component props options type object default return line false mode textjavascript required true correct version child component rendered ideal result performance reasons need greatly enhance writing feeling flexible largely configurable component proposed api look like need new api handle logic", "num": "6556", "d": "9/2017"}, {"title": "option", "body": "version reproduction link steps reproduce expected actually happening", "num": "6554", "d": "9/2017"}, {"title": "slot implementation interferes web components", "body": "version reproduction link steps reproduce use custom element uses slot element inside vue component elements meant fill slots custom element rendered html slot attribute expected slots custom elements behave expected custom element question example referenced left navigation drawer remain identical behavior using either html vuejs drawer left open wide browsers hide small browsers demonstrated resizing browser window horizontally computer custom element uses slots actually happening slot attribute picked vuejs rendered html causes custom element behave expected example referenced drawer open wide browser windows using vuejs manually editing rendered html vuejs adding attribute element custom element behaves expected since web components still drafted nt know whether submit bug feature request nt looked deep source code vue yet ideas solve issue include ensuring vue component absorbs slot attribute rendering html absorbed add directive slot attribute signal vue ignore slot render html instead absorbing something along lines look source code get better understanding happening wanted submit issue get sort review whether fix issue would welcomed integration vue like data binding nature vue also custom elements like use time issues using vue custom elements except issue", "num": "6553", "d": "9/2017"}, {"title": "inputonce preventing update input used vmodel", "body": "version reproduction link steps reproduce type one character input expected character added input property updated reflect change method called setting true actually happening method called nothing added input update first character entry input model binding works expected seems using preventing expected behavior found via stackoverflow question", "num": "6552", "d": "9/2017"}, {"title": "vue errorhandler working inside axios request methods", "body": "version reproduction link steps reproduce error inside axios request method simply ignore vue errorhandler expected error catch vue errorhandler actually happening error caught vue errorhandler", "num": "6551", "d": "9/2017"}, {"title": "directly modify vnode directives", "body": "problem feature solve directives receive parameter vue produced current element element content modified call slot inside directive get vnode slot transform vnode manually html see use case side note tried using vue sources rendering vnodes could nt get work proposed api look like", "num": "6550", "d": "9/2017"}, {"title": "skip empty text nodes hydration", "body": "problem feature solve allow ssr output human readable without causing hydration bailout make easier fake ssr template engine simple vue app want embed htmlpage want app come prerendered server access simple templating language words ca nt install ssr tools instead plan fake ssr template render initial state vue app without actually using vue render problem ca nt format template without causing hydration fail domnodes contain textnodes whitespace virtual dom codepen simple app fails hydration empty text nodes edit hydration done development production instead fail rendering dom saying failed execute appendchild node node type support method caused trying add child textnode codepen example testet changing vuejs vueminjs proposed api look like change api unless want make skipping empty text nodes optional case propose dataattribute root element similar dataserverrendered", "num": "6548", "d": "9/2017"}, {"title": "tried bind action div bind div child element bind two element", "body": "version reproduction link steps reproduce reality described title code hereand use elementui itemname hidepopup event consolelog eventtarget result \u8bd5\u5377 expected want bind action div actually happening binding action div children element", "num": "6546", "d": "9/2017"}, {"title": "computed propertyfactory function props", "body": "problem feature solve nt think ever worked vue app nt needed pass complex object prop needed define default values optional properties object example table component lets define configuration like entirely optional nt want define every instance table component used sometimes want pass however every place references view model template needs null checked first get quite messy use contrived computed property like default merging create complete default config structure would nice props provided syntactic sugar either allowed factory function run every time even prop supplied merge logic done prop function could define complex behavior proposed api look like either", "num": "6545", "d": "9/2017"}, {"title": "vpre working slots", "body": "version reproduction link steps reproduce see codepen link expected content displayed actually happening shows fallback", "num": "6543", "d": "9/2017"}, {"title": "explicit name default transition mode", "body": "problem feature solve currently transition modes default unnamed documented method programmatically specify default transition mode current code warns transition mode set value perhaps give explicit name like proposed api look like", "num": "6542", "d": "9/2017"}, {"title": "special vmodel fields cleared inputblur", "body": "version reproduction link steps reproduce create vue application adding jqueryui though work library adds extra functionality top input jqueryui easy use reproduce create fields matter type load jqueryui datepicker field uses vmodel enter value using datepicker field add value second field expected fields update properly reflected vue component data actually happening first field input cleared remove fields data object vue instead clear blur seems trying fix left pushing away considered best practice vue well ran form select fields populated vuex data managed add hacks get rest fields working least standard form nt really need much populate initial value however vuex field adjusted like although feel understand vue well figure way around", "num": "6541", "d": "9/2017"}, {"title": "wrong docsdefault export typescript", "body": "version reproduction link steps reproduce webpack typescript javascript visit site included javascript expected anything indicate vue loaded ready use actually happening following error stated website following vue introduced dist files exposed es modules used default webpack unfortunately introduced unintentional breaking change typescript webpack import vue require vue return synthetic es module object instead vue however even though setting set true full settings could nt get working import statement tried using works error regarding docs actual error default export missing", "num": "6540", "d": "9/2017"}, {"title": "individual componenets could click", "body": "problem feature solve making individual componenets click event whole component tought reasons must wrapped one tag work example testvue import anothertest testanothertest export default components component name test methods function consolelog clicked testanothertestvue test test test export default name anothercomponent could make workflow certain places reasonable proposed api look like even vue components event handlers handlers could passed main wrapping element component template see example", "num": "6539", "d": "9/2017"}, {"title": "computed\u7684\u4e00\u4e2a\u8be1\u5f02\u73b0\u8c61", "body": "\u5148\u4e0a\u4ee3\u7801 \u9996\u6b21\u8ba1\u7b97\u65f6 top \u7684\u7ed3\u679c\u662f \u5982\u679c\u6211\u53bb\u6389\u6ce8\u91ca\u4f7f\u7528\u76f4\u63a5 return leftsectiontop \u5982\u679c\u6211\u6539\u4e3a return mathrandom px \u795e\u5947\u7684\u751f\u6548\u4e86", "num": "6538", "d": "9/2017"}, {"title": "vhtml directive ca nt compile execute html correctly", "body": "vue section reponsed html form ca nt executed using directive vhtml correct situation execute form submit action redirect new url", "num": "6537", "d": "9/2017"}, {"title": "extensible vue components", "body": "problem feature solve idea create components able extend another components templates ofcourse original components needs breakpoints however called extending component join example original components define blocks content block name start end somehow simple html tag extending component able overwrite prepend append block identified name would useful want build extensible website give developers ability extend components without editing components code keep updatesafe proposed api look like originalcomponentvue extendingcomponentvue rendered result look like html vue awesome ofcourse extendingcomponentvue imported somewhere outside originalcomponentvue thats basic idea ofcourse could extended extend vue components script", "num": "6536", "d": "9/2017"}, {"title": "\u5f02\u6b65\u7ec4\u4ef6\u5bfc\u81f4\u65e0\u6cd5\u5b9e\u73b0\u5144\u5f1f\u7ec4\u4ef6\u901a\u4fe1", "body": "version reproduction link steps reproduce \u6267\u884c\u8fd0\u884c\u4ee3\u7801\u770b\u5f39\u51fa\u4fe1\u606f expected \u6b63\u5e38\u5f39\u51fa\u5e94\u8be5 object object actually happening \u5b9e\u9645\u5f39\u51fa\u4e3aundefined", "num": "6534", "d": "9/2017"}, {"title": "\u5f02\u6b65\u7ec4\u4ef6\u5bfc\u81f4\u751f\u547d\u5468\u671f\u94a9\u5b50\u51fd\u6570\u6267\u884c\u987a\u5e8f\u4e0d\u6b63\u786e", "body": "version reproduction link steps reproduce \u8bf7\u5148\u7406\u89e3\u5b98\u65b9mounted\u94a9\u5b50\u7684\u6ce8\u91ca \u6ce8\u610f mounted vm nexttick \u66ff\u6362\u6389 mounted expected actually happening", "num": "6533", "d": "9/2017"}, {"title": "uncertain behavior slots", "body": "version reproduction link steps reproduce click button example expected elements must hide new value actually happening hide first child slot throws error case emit event thing happens", "num": "6531", "d": "9/2017"}, {"title": "vue equivalent gatsbyjs react", "body": "problem feature solve static site generator using vuejs like gatsby react proposed api look like sure right place ask point right place nt", "num": "6529", "d": "9/2017"}, {"title": "disable productiontip vue imported multiple entry points", "body": "version reproduction link steps reproduce clone official vuepwa template add one entry point line includes vue run check console see although option disabled warning still appears console expected working properly actually happening vue imported multiple entry points impossible disable productiontip", "num": "6528", "d": "9/2017"}, {"title": "disable productiontip vue imported multiple entry points", "body": "version reproduction link steps reproduce clone official vuepwa template add one entry point line includes vue run check console see although option disabled warning still appears console expected working properly actually happening vue imported multiple entry points impossible disable productiontip", "num": "6527", "d": "9/2017"}, {"title": "\u5e0c\u671b\u5728\u7ed1\u5b9a class dom", "body": "problem feature solve \u6211\u8fd9\u6837\u7684\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u7528\u6237\u9009\u62e9\u65f6\u95f4\u95f4\u9694\u7684\u9700\u6c42 \u73b0\u5728\u662f\u5728 isactive datainterval \u7684\u503c\u548c\u51fd\u6570\u7684\u53c2\u6570\u5c31\u91cd\u590d\u4e86 \u5e0c\u671b isactive \u51fd\u6570\u80fd\u591f\u4f20\u5165\u5f53\u524d dom datainterval \u7684\u503c\u4e86 proposed api look like", "num": "6526", "d": "9/2017"}, {"title": "vuecli project spend lot time finish unittest npm run unit", "body": "title said use npm run unit test vue files would spent lot time finish maybe spent finish figuring problems use karma start unit path surprising found generate different testing result solve problem", "num": "6525", "d": "9/2017"}, {"title": "vuecli project spend lot time finish unittest npm run unit", "body": "title said use npm run unit test vue files would spent lot time finish maybe spent finish figuring problems use karma start unit path surprising found generate different testing result solve problem", "num": "6524", "d": "9/2017"}, {"title": "add passive event decorator", "body": "problem feature solve eventcapture add eventpassive means low level elementaddeventlistener event fn passive true proposed api look like", "num": "6523", "d": "9/2017"}, {"title": "parent component closes child component capture removeeventlistener null typeerror", "body": "problem feature solve hello every senior thank watch issue issue typeerror read property removeeventlistener null vuecomponent beforedestory description optioned parent component button close childcomponent dialog capture warning removeeventlistener null parent component close children component proposed api look like opinion think issue maybe threw vue frame opinion parentcomponent remove monitor subcomponent closed therefore want get reason warning", "num": "6521", "d": "9/2017"}, {"title": "parent component closes child component capture type error", "body": "important please use following link create new issue hello every senior thank watch issue issue typeerror read property removeeventlistener null vuecomponent beforedestory description optioned parent component button close childcomponent dialog capture warning parent component close children component opinion think issue maybe threw vue frame opinion parentcomponent remove monitor subcomponent closed therefore want get reason warning", "num": "6520", "d": "9/2017"}, {"title": "vue ssr fails innerhtml", "body": "version reproduction link steps reproduce use jsx vue template clone repo open expected warning console actually happening dom mismatching error works fine children fails one option completely ignore vuessr basically commenting line solves problem another option evaluating comparing dom snapshots get value static ssrrendered website without dom mismatch third option ignoring children domprop think one best", "num": "6519", "d": "9/2017"}, {"title": "created hooks fired destroyed hot reload", "body": "version reproduction link steps reproduce create minimal project template add logs inside hooks obtain console expected previous instance destroyed new one created actually happening next one created several init old one destroyed init hooks useless nt know issue related template framework created also gt unfortunately response", "num": "6518", "d": "9/2017"}, {"title": "invalid prop type check failed prop seller expected array got object", "body": "\u5546\u54c1 \u8bc4\u4ef7 \u5546\u5bb6 const err import header componentsheadervheadervue export default data return seller created gt response responsebody responseerrno err thisseller responsedata components vheader header sellername", "num": "6516", "d": "9/2017"}, {"title": "small typo contributingmd", "body": "version reproduction link typo steps reproduce small typo contributingmd commiting actually committing extra expected typo fix committing actually happening typo right", "num": "6515", "d": "9/2017"}, {"title": "expose api manually create cachable computed properties", "body": "problem feature solve trying create state management library look similar mobx use vue builtin reactivity engine problem vue nt expose enough api implement need least constructors proposed api look like example trying achieve data objects update automatically changes class user observable firstname observable lastname current implementation decorators js function observable target name descriptor descriptorconfigurable true function computed target name descriptor const getter descriptorget see simply borrowed vue implementation need order work", "num": "6514", "d": "9/2017"}, {"title": "directive updated component changes root element", "body": "version reproduction link steps reproduce add custom directive child component child component changes root element due data change ie expected directive notified component changed new element passed actually happening directive updated still refers old dom node", "num": "6513", "d": "9/2017"}, {"title": "vue \u538b\u7f29\u56fe\u7247\u95ee\u9898", "body": "vue build", "num": "6510", "d": "9/2017"}, {"title": "\u5e0c\u671bkeepalive\u80fd\u589e\u52a0\u53ef\u4ee5\u52a8\u6001\u5220\u9664\u5df2\u7f13\u5b58\u7ec4\u4ef6\u7684\u529f\u80fd", "body": "problem feature solve proposed api look like clearkeepalived routername", "num": "6509", "d": "9/2017"}, {"title": "set template scope", "body": "version reproduction link steps reproduce open reproduction expected want set template common template used distributed content maybe control vif condition scope name null actually happening donnot know set set scope prop dynamic", "num": "6508", "d": "9/2017"}, {"title": "passing object prop changes parent component changed child without sync", "body": "version reproduction link steps reproduce jsfiddle simplest code expected expceting parent component wount change data werent passed sync actually happening parent component changed value prop treated reference value understand", "num": "6507", "d": "9/2017"}, {"title": "tag wrongly assumed html namespace instead svg", "body": "version reproduction link steps reproduce create template using root element try use expected either expected vue understand supposed svg tag xhtml tag way override vue decision give proper namespace eg making work actually happening vue creating tag xhtml tag browser nt render make render wrapping undesirable however many reasons way explicitly tell vue namespace create element would nice svg tag", "num": "6506", "d": "9/2017"}, {"title": "able use props styling without writing inline", "body": "problem feature solve main problem inline styles getting code pretty messy intend use components custom scoped styles example include sass mixin becoming struggle using components main issue faced sending props like image url color etc end stucked inside js html usable inside style section well aware style tag wo nt let us using variables inside something like computed styles compiling webpack would awesome proposed api look like idea behind use kind computed styles section using vue component variables would possible wo nt inside default tag", "num": "6505", "d": "9/2017"}, {"title": "optimization scheme ssr", "body": "problem feature solve found ui library named marko ssr render fast looked source create ast firstly compile tpl engine ssr env virtual dom browser env practical application ssr performance bottlenecks limited virtual dom also causing memory leaks vue tpl grammar dsl learn ast compile tpl engine virtual data create vue object without letting generate virtual dom ssr env think approach logically feasible know difficulty current vue version thanks proposed api look like none", "num": "6504", "d": "9/2017"}, {"title": "optimization scheme ssr", "body": "found ui library named marko ssr render fast looked source create ast firstly compile tpl engine ssr env virtual dom browser env practical application ssr performance bottlenecks limited virtual dom also causing memory leaks vue tpl grammar dsl learn ast compile tpl engine virtual data create vue object without letting generate virtual dom ssr env think approach logically feasible know difficulty current vue version thanks", "num": "6503", "d": "9/2017"}, {"title": "\u7ec4\u4ef6\u5728\u524d\u540edom\u8282\u70b9\u7684vif\u6307\u4ee4\u66f4\u65b0\u65f6\u5bfc\u81f4\u7ec4\u4ef6\u4e5f\u66f4\u65b0", "body": "version reproduction link steps reproduce js tips sorry expected demo\u7ec4\u4ef6\u548cvif\u6307\u4ee4\u65e0\u5173\u65f6\u4e0d\u80fd\u5237\u65b0 actually happening show\u66f4\u65b0\u65f6\u4f1a\u5bfc\u81f4demo\u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3", "num": "6502", "d": "9/2017"}, {"title": "ability destructuring template", "body": "problem feature solve local variables template write little bit less code want use propa template shall write deconstruction template would less code like find directive already abitlity deconstruction exapmle proposed api look like", "num": "6501", "d": "9/2017"}, {"title": "add license settings packagejson executing", "body": "problem feature solve choose license packagejson executing nt settings executing vuejs official templates know vuejs issue directly official templates nt settings license packagejson want pullrequests metajsonmetajspackagejson official templates proposed api look like none", "num": "6500", "d": "9/2017"}, {"title": "\u7ec4\u4ef6\u5728\u524d\u540edom\u8282\u70b9\u7684vif\u6307\u4ee4\u66f4\u65b0\u65f6\u5bfc\u81f4\u7ec4\u4ef6\u4e5f\u66f4\u65b0", "body": "version reproduction link steps reproduce expected demo\u7ec4\u4ef6\u548cvif\u6307\u4ee4\u65e0\u5173\u65f6\u4e0d\u80fd\u5237\u65b0 actually happening show\u66f4\u65b0\u65f6\u4f1a\u5bfc\u81f4demo\u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3", "num": "6499", "d": "9/2017"}, {"title": "often thah vue nt shot nothing nt message nothing aobut error warnings etc", "body": "yes component mounted see thah consolelog nt render waht wrong happening allow error template say please", "num": "6498", "d": "9/2017"}, {"title": "class removes classes added programmatically", "body": "version reproduction link steps reproduce click change color inspect dom expected component test redbg bluetxt classes actually happening component test redbg class found bug using custom directive adds flex layout related classes element classes added directive removed element class defined template intentional workarounds addremove classes via native dom methods", "num": "6497", "d": "9/2017"}, {"title": "custom validation message props", "body": "problem feature solve let developer specially using third party componentsplugins understand error happen detailed customizable friendly way error came already known thanks code line dump example validating component property return true false order fulfill validation fails console error looks like bash vue warn invalid prop custom validator check failed prop example found srccomponentswordcountwordcountvue srcappvue think generic warning also line dump error came useful custom error message could useful opinion obviously since validation function custom may vary every prop difficult predict deduct warning message display based code let developer possible mine proposal add message whatever field prop object properties used validator function called prop input fails message property provided generic warning show instead documentation component props validation requirements object another usecase example component property must digit string validation function message property case would must enter digit number developer use component like custom warning message shows developer knows immediately issue obviously work custom component developer used message property set custom validation error message proposed api look like custom validation function used fails custom property validation message shows warning show developer wrong think hope nt make mess explaining clear doubt provide details use case example many thanks advance many thanks building vue simply awesome", "num": "6496", "d": "9/2017"}, {"title": "ca nt restart data component", "body": "version reproduction link steps reproduce problem force restart new route route also simple component form empty inputs component filled inputs db want able open component empty inputs component used function route changed data restarted inputs empty expected data updatedrestarted actually happening expect new route params data restarted able provide code complicate sorry", "num": "6495", "d": "9/2017"}, {"title": "array update", "body": "version reproduction link steps reproduce wait mounted aplication change array even clicking changes reflected dom expected reflect changes dom actually happening changes reflected dom sure correct way reflect changes would like know ideal way thank much", "num": "6493", "d": "9/2017"}, {"title": "vnodechild vnodechildren undefined", "body": "version reproduction link steps reproduce could reproduce issue nested children components components deeper dom root gt children words root gt children gt children observed problematic expected either vnodechild vnodechildren give access vuecomponents something permits access vuecomponents actually happening though component children undefined returned vnode see issue vnode appear accurately represent dom regards vue components creates difficulty development project makes use slots therefore permitting replaceable parts project also depends need listen events emitted replaceable parts able make calls methods vnodes returned slots mechanism permitting access vuecomponents may listen events components make method calls way fulfill project goals unaware", "num": "6492", "d": "9/2017"}, {"title": "", "body": "", "num": "6491", "d": "9/2017"}, {"title": "ssr vhtml svg default content gt serverclient mismatch", "body": "version reproduction link steps reproduce svglogo equals svg image expected server client equal actually happening get mismatch error mentioning text node text removed works fine using ssr text needed simple fix remove however little bit strange nt work turn mismatch unfortunately nt time create proper repro forth want close issue immediately fine purpose inform others issue happen ssr", "num": "6490", "d": "9/2017"}, {"body": "example ignored nt exist context used exist component however show error saying defined", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "probably kind outofsync issue sure solve anybody knows examples wrapping axios function shared manyk vue components could find good one online", "d": "9/2017"}, {"body": "taozhaolib nt return anything function function asynchronous ca nt assign variable like correct usage component", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "storing options vue instance know nt fix issue might temporary workaround", "d": "9/2017"}, {"body": "html works removes spaces text vue gets text one space specify value spaces directly element yield result expect", "d": "9/2017"}, {"body": "fyi general never rely multiple whitespaces html text use explicit bindings", "d": "9/2017"}, {"body": "thank replys solved problem", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow use user component class check myclass auto clear vue formwork expected behaviour probably handle class addition hook directive well always keep", "d": "9/2017"}, {"body": "working expected bad practice modify input user typing however force value input nexttick also listen blur set back value fyi value equal even though input nt reflect", "d": "9/2017"}, {"body": "thanks explain work nexttick", "d": "9/2017"}, {"body": "changes value browser actually displays", "d": "9/2017"}, {"body": "nt consoleerror error instead throwing inside errorhandler point error handler throw error", "d": "9/2017"}, {"body": "patch submitted raven lot logic errorhandler increase value reported error good stuff actually without careful trycatches mention things made suspect nt run vue plugin production much said failure mode silent catastrophic hard debug figured quick trycatch around errorhandler might save people future headache", "d": "9/2017"}, {"body": "think nt throw errors errorhandler treat generate new one ignore throwing", "d": "9/2017"}, {"body": "agree however nt think app nt crash especially since easy prevent error becoming catastrophic", "d": "9/2017"}, {"body": "throwing errors js make apps crash", "d": "9/2017"}, {"body": "almost anywhere vue app throwing error", "d": "9/2017"}, {"body": "ca nt computed properties different components may rely different source state bound different instances", "d": "9/2017"}, {"body": "use method", "d": "9/2017"}, {"body": "markdown content execute hundreds times per second sliw app computed property executed isnt", "d": "9/2017"}, {"body": "use would execute multiple times well want caching need use computed anyway", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "simply watch value", "d": "9/2017"}, {"body": "firefox amp chrome handle clicks checkboxes differently way sure either checked value kkszymanowski pointed listen event vue internal logic ensure model uptodate userland event handlers fire handlers attached correct events case edit interesting reading around issue eventsjs", "d": "9/2017"}, {"body": "listens event different browsers fire different orders unfixable vue different browser behaviors suggested instead using click listener use watcher instead care state click event", "d": "9/2017"}, {"body": "easily userland creating higherorder transition component", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "well way", "d": "9/2017"}, {"body": "know use normal html comment tags components eg top section wondering best recommended solution yes js use", "d": "9/2017"}, {"body": "hi nt want comment code per line html js question fact describe components general way grtz johnny", "d": "9/2017"}, {"body": "many ways using comments top script tag would go generally comment component would comment code", "d": "9/2017"}, {"body": "think question new block singlefile templates custom blocks already possible vueloader documentation regarding already use block ignored vueloader", "d": "9/2017"}, {"body": "thanks everybody time reply pandemm indeed custom block trick nt know existence possibilities thank link pointing right direction kind regards", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "take one", "d": "9/2017"}, {"body": "imo requires much internal refactoring potential complexity cater niche use cases personally yet run case even need use reaching child component instances really meant workarounds recommended practice", "d": "9/2017"}, {"body": "thanks evan case facing fed column holds rendering header default component render well cellrender special function special function retrieved table slots rendered part table template works great simple functional data rendering advanced features cellrendering requires access column instance render select column trigger events example smart way missing", "d": "9/2017"}, {"body": "went finally using slots directly provide enough information render cell directly although advanced features still access column instance necessary slot object attribute moment rendering results undefined technical limitation thank time looking", "d": "9/2017"}, {"body": "checking moment table rendering childs nt yet inited cells rendered meaning instance associate opted simple workaround assigning children table local data forcing rerender time instances available try find right instance say try easy way know associate slot instance far using node tag props", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "ehm didnt help", "d": "9/2017"}, {"body": "need use vueloader vue", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow related vue put font folder refer", "d": "9/2017"}, {"body": "posva thanks reply felt bit like grey zone try forum instead cheers", "d": "9/2017"}, {"body": "\u662f\u7531\u4e8e\u5728\u5f00\u53d1\u6a21\u5f0f\u4e0bvueloader hrm\u63d2\u5165\u4e86require vue \u5bfc\u81f4vue\u6a21\u5757\u4f7f\u7528\u7684vue\u4e0e\u5168\u5c40vue\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "9/2017"}, {"body": "expected think renders controlled content hides initial render modal rendered accordingly defined transition triggered hook called understand expect transition run since defined value parent component child component ca nt know circumstance transition still runnning solution use instead", "d": "9/2017"}, {"body": "reason ca nt use transition transition design outer container use control display inner transition wo nt trigger show set false modalvue component uses modal vue title content cancel confirmtext ok import card srccomponentscard import fadetransition srccomponentsfadetransition import modal srccomponentsmodal import vbutton srccomponentsbutton export default name confirmpopup components card fadetransition modal vbutton props title content confirmtext resolve data gt show true created documentbodyappendchild mount el methods confirm bool thisshow false thisresolve bool settimeout gt destroy documentbodyremovechild el way remove prop simulate feature vue export default props show data show false mounted nexttick gt thisshow thisshow simulate appear feature", "d": "9/2017"}, {"body": "reproduction meet requirements", "d": "9/2017"}, {"body": "exports es module need", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "printed document see changed correctly changed correctly switches class correctly applied missing", "d": "9/2017"}, {"body": "linusborg changes dom print tag however using event instead makes work", "d": "9/2017"}, {"body": "value nt change vue nt update dom", "d": "9/2017"}, {"body": "works feels like cracking nut sledgehammer guess force update input via ref maybe vue shoud update elvalue every time input event triggered way even binded value nt change node value date", "d": "9/2017"}, {"body": "actually described previous message would nt work value filter nt done directly parent component case even forceupdate nt work nt force children rerender following tree one filtering value passing component tree force rerender", "d": "9/2017"}, {"body": "since turned questiondiscussion please move forum chat room instead", "d": "9/2017"}, {"body": "would still consider small bug attribute node actual value unsynched actually changes currently quick workaround rerenders current component children post find workaround others use", "d": "9/2017"}, {"body": "would suggest use", "d": "9/2017"}, {"body": "thanks suggestion problem would bind cleave would nt able parent components using input dirty solution found following following component tree adds attribute way input event triggered force node value update sanitized value hacky works case element component nt need support browsers nt support", "d": "9/2017"}, {"body": "instead api like simply define two components override js const baselogic const bootstrapversion extends baselogic template bootstrap const semanticuiversion extends baselogic template semanticui want single point entry external users define functional component renders internal component based config value", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "nt think currently defined act element provided begin would nt classify bug certainly room improvement least transition skipped componentb rendered work around adding wrapper div", "d": "9/2017"}, {"body": "wrap div transition wo nt take effect data loaded", "d": "9/2017"}, {"body": "pretty sure error past tried use without root node using multiple root nodes", "d": "9/2017"}, {"body": "found ugly solution add empty every router view component needs wait data", "d": "9/2017"}, {"body": "expected behavior vdom definition needs generate virtual elements iterate find diffs obvious way optimize please submit pr", "d": "9/2017"}, {"body": "add wrapper example arraypush arrayfilter make possible computed properties basis vue understood elements array changed", "d": "9/2017"}, {"body": "calculations take think pretty decent score large array curiosity checked react case takes around ms render size array pc vue said ms", "d": "9/2017"}, {"body": "native js action takes ms exception layout update layer tree vue ms huge difference sure make possible tell vue particular part array changed", "d": "9/2017"}, {"body": "modifying dom manually always faster skip data update virtual dom diffing parts thing ca nt realistically write dom manipulations directly building medium big app become complex eventually end buggyunmaintenable code vue abstracts dom away nt need think definition abstractions cost", "d": "9/2017"}, {"body": "understand still think possible prompt vue changes data need pay attention ones propose get rid vdom want possible flexibly organize rendering could tell vuejs added element array change vue could take previous version vdom add one element rerendering rest synchronizing vdom dom case vue would know elements changed would added one new think quite feasible would greatly enhance rendering performance", "d": "9/2017"}, {"body": "sure could applied case dividing multiple components way cache parts vdom", "d": "9/2017"}, {"body": "adding one item array always means adding one element domlist may complicated template looks like html add message message", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "vue\u6587\u4ef6\u4e2d\u7684script\u6807\u7b7e\u80fd\u5426\u76f4\u63a5import\u4e00\u4e2ajs\u7684\u7c7b\u800c\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61 \u76f8\u5f53\u4e8e\u5df2\u7ecf\u4f7f\u7528vueextend \u5bf9\u8c61 \u540e\u7684\u7c7b", "d": "9/2017"}, {"body": "already use async components please read docs", "d": "9/2017"}, {"body": "using directives components api suggesting close already exists components", "d": "9/2017"}, {"body": "wish could create custom directives way create custom components think sentence says", "d": "9/2017"}, {"body": "api usage different", "d": "9/2017"}, {"body": "appreciate support vue proposed api something would consider vue used similar functionalities directives end duplicating everything directives components concept becomes convoluted similar angular directives essentially god concept anything intentional decision vue limit directives one dedicated purpose low level dom manipulation nothing else also due rendering mechanism vdom directives instances thus componentlike api feasible first place point time want achieve directives achieved components functionalities simulated leveraging directive hooks expand directive api unless strong use case solved", "d": "9/2017"}, {"body": "understand reasoning behind cool able everything need custom attribute one thing binding like let say click button value changes hook function called nt found way react changes suggestions", "d": "9/2017"}, {"body": "tochoromero sounds like bug please open separate issue reproduction", "d": "9/2017"}, {"body": "actually bad bug trying reproduce bare minimum showed bug thank taking time answer rock", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "9/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "9/2017"}, {"body": "meant receive nt argument perhaps warning development would help alleviate confusion already documentation", "d": "9/2017"}, {"body": "actually get similar made think could directly bind string adding warning could helpful want see something making users understand use something else object", "d": "9/2017"}, {"body": "posva sure exactly picked probably reading code open source projects replicating behavior could certainly ignorance part putting together wrt syntax pretty positive never read nt think reference api docs directly picked general usage looking examples reading different parts docs", "d": "9/2017"}, {"body": "ok thanks changed title", "d": "9/2017"}, {"body": "known happen use keyindex component reused current version key required ca nt add unique key array element easily yeah also local state todo component note use prop value input see expected behaviour manually add key said fairly easy opinion unfortunately keys necessary removing elements array used", "d": "9/2017"}, {"body": "tested make sure everything working correctly problem case nt belong vue core may related template recommend ask forum discord server case someone error", "d": "9/2017"}, {"body": "thanks would post forum instead happen machine node node may someone encountered issue forum suspect would issue webpack vue anyone encountered issue maybe trying switching node work", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "vue replaces dom element mounted make sure instantiate jquery plugin mounting vue instance preferably hook", "d": "9/2017"}, {"body": "still nt work jsfiddle initialize clicking button initializes still nt update data field good measure one initialize mounted also nt work work vue change mounted ready", "d": "9/2017"}, {"body": "right vue also dropped support jquery events need proxy jquery events real native dom event", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "problem related vue happens plain js", "d": "9/2017"}, {"body": "creates reactivity specific property object inner structure created hook without reactivity move code hook function whole properly reactive", "d": "9/2017"}, {"body": "think find way construct hook today passed via props tomorrow may requested server question use build reactive cool even use redesign using building inside", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "found works set first later first fail case always set first nt work expect demo nt work", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "using reproduced", "d": "9/2017"}, {"body": "current useragent guess line nt run works edge changed sqal said sure much thanks", "d": "9/2017"}, {"body": "well little study seems demo ieedge correct html spec safarichrome wrong says parsed value greater equal maximum value current value progress bar maximum value progress bar demo set first setting current value greater maximum value current value set set end position element anyway nt mean syntax vue template wrong correct browser implementations seems using directly without browser detection matches spec thanks", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi rename methodes methods", "d": "9/2017"}, {"body": "sorry thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "related explained avoid iteration cost freezing array nt expect mutated longer necessary though", "d": "9/2017"}, {"body": "wait cause cause access already computed property slow put watcher two computed properties working great see even faster also project changes still reflected properly million times faster", "d": "9/2017"}, {"body": "seregpie test wrong watcher called also added tests second one access cached values performant expected third one adds new object base property see value correct final value test watcher nt fired yet reality still accessing cached value get super fast access value results test incorrect make think watcher called instantly also using make watcher detecting potential changes nested arrays unlike computed property default comparison wrong performance issue comes vue building dependencies evaluating computed properties accessing computed properties multiple times adds even dependencies slows component one thing kind performance heavy computed properties access computed property assign local variable example proposed solution may find fact performant using watcher see corrected version watcher test watcher manually added first evaluation computed property times right added next tests also little overhead compared previous withoutwatcher code watcher timer includes call promise constructor notice time taken watcher fire update new element added array tl dr inside computed properties use local variables store computed properties avoid accessing directly multiple times", "d": "9/2017"}, {"body": "\u4e3b\u8981\u662f\u4f60\u90a3\u4e2a\u53d1\u751f\u6539\u53d8\u7684\u7ec4\u4ef6\u548c translate english temporarily easily change html html avoid rerender custom component middle component element tag without propsattrs hard detect update details exactly add special attribute solve thanks", "d": "9/2017"}, {"body": "use div mark however improved sure", "d": "9/2017"}, {"body": "\u8c22\u8c22", "d": "9/2017"}, {"body": "\u770b\u4e0d\u61c2\u54df", "d": "9/2017"}, {"body": "key importatnt", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "reproduce", "d": "9/2017"}, {"body": "like idea linking docs error messages", "d": "9/2017"}, {"body": "better reported nuxtjs instead vue core gc log far enough determine cause leak need provide actual code leads leak", "d": "9/2017"}, {"body": "would even start provide code stack solely shows every crash different line general significant clue initwatch createwatch like seems build collect memory watcher dies doubt nuxtjs wraps around watch functionality vue nt see framework could involved", "d": "9/2017"}, {"body": "think first discussed nuxt repo opening issue bug actually ssr engine reference small guide memory leakage reports nuxtnuxtjs", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "vue supports standard dom events", "d": "9/2017"}, {"body": "forgot add every element array", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "expect wrappercontains css selector toequal true", "d": "9/2017"}, {"body": "mmh nt understand point use case lib component gather errors adding properties arrays functions rarely data locally adding functionality adding reactivity", "d": "9/2017"}, {"body": "posva op lib allow users declare asyncmethods vm instance say transform async method add corresponding data property eg also special properties like indicate async method completed op try notify rerendering vuerx also alternative imho vue skip watching non plain objects intention supporting watching functionarray needs handle many edge cases", "d": "9/2017"}, {"body": "thanks explanation herringtondarkholme limitation place method child fetchdataexecute property instead fetchdata especially clunky calling method code thisfetchdataexecute separates async methods normal methods called thisfetchdata understand may feel clunky usecase using different variable name make things better personally prefer serializable data move kind state store methods component root instance", "d": "9/2017"}, {"body": "code illustrates changes needed support functions well couple added tests npm test runs ok existing tests fail would expected failures seems behaviour functions undefined", "d": "9/2017"}, {"body": "less dup closing comment payload checks something handled typings like typescript", "d": "9/2017"}, {"body": "sure understand issue aware extends option", "d": "9/2017"}, {"body": "reread issue", "d": "9/2017"}, {"body": "expected behavior instantiate something nt even resolved yet", "d": "9/2017"}, {"body": "also issue policy explicitly states nt take questions issues please respect rules", "d": "9/2017"}, {"body": "yes want instantiate component resolved yet think feature suggestion would nice async components used way normal ones currently find way vue exposes manually resolve component also spend hours searching solution via channels stakoverflow forums etc", "d": "9/2017"}, {"body": "maps sets currently supported vfor heard possible vue", "d": "9/2017"}, {"body": "currently supported core reactivity detection data structures use simulate", "d": "9/2017"}, {"body": "sqal ok got thanks reply", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "please read licence mit", "d": "9/2017"}, {"body": "mit", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "thanks rrandom issue related svg namespace attached element within gets unexpected behavior trying fix ps seems also broken previous vue version check checks lowercased something", "d": "9/2017"}, {"body": "seems parameter method casesensitive", "d": "9/2017"}, {"body": "related bug unintended feature ref available first render behavior seems come recent release", "d": "9/2017"}, {"body": "workaround using top level buffer div seems super hacky solve problem", "d": "9/2017"}, {"body": "working expected also need root element putting vif root element component probably giving warning error console however use vshow instead always root element component", "d": "9/2017"}, {"body": "seems little quirky though ref first render viffalse", "d": "9/2017"}, {"body": "unfortunately vue reactivity system designed provide information put another way entails nontrivial changes additions provide api marginal benefits object may used multiple components different relative path information keeping track path information would prohibitively complicated expensive deep watcher recursively registers every property dependency inside reactive objectarray used caution performance implications cases heavy reliance watchers indicate design rethought improved remove reliance deep watchers particularly would probably better discuss actual use cases forum discord chat opening feature request", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "assume", "d": "9/2017"}, {"body": "trusktr called vue caches afterwards please use official chat forum ask questions", "d": "9/2017"}, {"body": "interesting wondering indeed good feature however even foo never logged let see going also indeed saw bot message made forum post instead thanks", "d": "9/2017"}, {"body": "sorry wrong misread output indeed logged thanks tip", "d": "9/2017"}, {"body": "trusktr change values instead check known caveats", "d": "9/2017"}, {"body": "think know work fine", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow lookup vuehackernews github", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "okey found csp version vue looks like version csp version worked webextensions use doc thx", "d": "9/2017"}, {"body": "note also work csp need precompile templates build step", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "normal behavior change permissionkey fire vfor input recreated key uniq case nt", "d": "9/2017"}, {"body": "oh wow bad thought key bound index thanks wszerad input changing value used attribute input rerendered therefore gets focus solution would manually focus key changes using watcher", "d": "9/2017"}, {"body": "use modifier", "d": "9/2017"}, {"body": "actually related lib think using gets stripped nt exist abstract component nt render tag tried using work another solution would wrap component div span", "d": "9/2017"}, {"body": "yeah vshow work vshow vif works well", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "resolve promise vue instance rather promise function returning vue instance proposed solution implies returning promise function wrong usage call function promise current implementation unwrap promise returned server entry code", "d": "9/2017"}, {"body": "sorry find another way resolve problem thanks", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "thanks proposal already deep watching detect nested property changes", "d": "9/2017"}, {"body": "already opened issue vuerouter", "d": "9/2017"}, {"body": "nt need vbind", "d": "9/2017"}, {"body": "keepalive include works component names route names foo component nt name", "d": "9/2017"}, {"body": "happens given home component name", "d": "9/2017"}, {"body": "sqal thank woks", "d": "9/2017"}, {"body": "warning message said valid svg element reserved use another name instead", "d": "9/2017"}, {"body": "doh like filter html element svg nt even occur sorry", "d": "9/2017"}, {"body": "bit surprised namespaces ignored hey ho", "d": "9/2017"}, {"body": "limitation watching mechanism watched value object watcher may fired result new property added object fire safe tradeoff correctness vs overfiring cases overfiring would harmless unless extremely expensive callbacks alternatively perform custom check eg shallow compare properties callback avoid real work unlikely change fixed upgrade reactivity system using proxies", "d": "9/2017"}, {"body": "hi problem adding property watched object firing could expected rather adding property parent object", "d": "9/2017"}, {"body": "know explaining possible scenario cater safety measure leads behavior seeing something changed trivially", "d": "9/2017"}, {"body": "thanks insight looking forward proxybased system others running written small pluginmixin use watchexact custom option saves original value fires function new value differs", "d": "9/2017"}, {"body": "scoped slots stored different property", "d": "9/2017"}, {"body": "currently way around suggest normalizing data structure something like another solution would provide api customize stringifying function use something like note also need use parse stringified state client", "d": "9/2017"}, {"body": "thanks reply like use second solution lot work normalizing existing data structure api use custom stringify function serialize initial state found uses eager suggestion using solution", "d": "9/2017"}, {"body": "maybe try gulprolluprolluppluginvue", "d": "9/2017"}, {"body": "try help send email", "d": "9/2017"}, {"body": "gulp task runner vue files module source format must combined sort module bundler work rollup might simplest one moment chrisvfritz repo different strategies integrating vue rails also rails already supports scaffolding webpack vue box flag", "d": "9/2017"}, {"body": "yes true rails going check one question lets say upgrade start using webpack happily continue use old pipeline start using webpack vue new stuff add slowly migrate whatever js stuff need thanks", "d": "9/2017"}, {"body": "giorgiomartini yes check strategies repo evan linked using rails webpacker one reasons prefer managing webpack integrate asset pipeline however want slowly migrate assets like mentioned", "d": "9/2017"}, {"body": "thanks gwildu please refer need write template", "d": "9/2017"}, {"body": "code working seems like introduced", "d": "9/2017"}, {"body": "returning api makes object reactive set vnodes api makes vue attempt convert vnode slot nodes deepcloned rerender fix bugs makes render function register entire vnode reactive dependency mutating vnode triggers rerender workaround could either vnode make api injection reactive", "d": "9/2017"}, {"body": "fix works great thanks", "d": "9/2017"}, {"body": "checkout vuerouter code use strategy hook", "d": "9/2017"}, {"body": "astraygit believe related es module component trying run reproduction first run sfc find several workarounds use commonjs require component use async component like use export object directly maybe move issue vueloader also maybe issue related different ways module resolve es module commonjs always run first enable strategy loading router", "d": "9/2017"}, {"body": "looking built assets confirm issue related difference es module commonjs js es module input import vue vue import vuerouter vuerouter vueuse vuerouter import foo foovue es module output const vue require vue const vuerouter require vuerouter const foo require foovue vueuse vuerouter means es module resolve module first run codes commonjs follow codes order time wrapps sfc vue component already exporting object directly resolve problem believe fix issue", "d": "9/2017"}, {"body": "issue connected hot reloading temporary workaround might js import vue vue import app appvue import home homevue import foo foovue import vuerouter vuerouter vueuse vuerouter processenvnodeenv production fooctor null", "d": "9/2017"}, {"body": "push \u548c curr", "d": "9/2017"}, {"body": "\u4e0d\u662f\u66ff\u6362", "d": "9/2017"}, {"body": "use like following", "d": "9/2017"}, {"body": "think proposed syntax nt solve problem deep watching want specific paths instead whole objectarray changed way already done jounqin pointed", "d": "9/2017"}, {"body": "said need use want prop scoped values slot tag already consumes name attribute internal purposes personally adopted convention wherein use scoped slots loop put item prop well like using component becomes something like course objectdestructuring attribute need babel", "d": "9/2017"}, {"body": "right get around curious reason would works object attribute directly prop check prop bound bind uses attribute inside named slot", "d": "9/2017"}, {"body": "completely valid bind dynamic slot name done first example essentially written two attributes tag one dynamic static compiles something completely different hardcoding attributes use livecompiler see vue compile template", "d": "9/2017"}, {"body": "bind dynamic slot name thank explaining forgot use", "d": "9/2017"}, {"body": "relies static information tag used generate appropriate code compilation used generates componentspecific code instead native form element code simply something nt support due compilationbased nature use branches instead", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "ssr html ssr html", "d": "9/2017"}, {"body": "vueloader options", "d": "9/2017"}, {"body": "\u6211\u5728createbundlerenderer \u4f20\u5165 inject false \u540e \u8fd9\u6837\u5199 vue \u91cc\u7684style\u6807\u7b7e\u662f\u8fd9\u6837\u5199\u7684", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "\u4f60\u53ef\u4ee5\u628a\u4f60\u7684\u4ee3\u7801 push \u5230 github", "d": "9/2017"}, {"body": "defcc", "d": "9/2017"}, {"body": "experiencing regression reverting give info available", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "locked packagejson vue version work", "d": "9/2017"}, {"body": "perhaps reason question chrome bug documentbodyinnerhtml old value var documentgetelementbyid test cache old textnode var cachetextnode achildnodes update innerhtml ainnerhtml new value output old textnodeparentnode consolelog cachetextnodeparentnode chrome gt null chrome amp chrome gt", "d": "9/2017"}, {"body": "old chrome version point textnode last chrome version point textnode", "d": "9/2017"}, {"body": "textnode dom tree seems get buggy behavior maybe could attach extra info parent node patching dom props workaround eg check oldvnode children mark parent element contains text node", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "weex components recognized svg elements set svg namespace hacked ignore weex components works fine afterwards released fix problem pls check", "d": "9/2017"}, {"body": "ok solved problem", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "reporting vuerouter repo better", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "one final note proposal would also need standarize names transition hooks though nt see huge drawback", "d": "9/2017"}, {"body": "actually move every hook already creating reusable transitions almost solution actually wrap child component inside transition allow pass transition name prop although discourage use approach magic thanks suggestion transition hooks like events want handle way events without introducing different api", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "problem correlates solution", "d": "9/2017"}, {"body": "greabock said", "d": "9/2017"}, {"body": "modifiers mapping dom values back javascript values way around convert strings real booleans initializing app", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "moonou \u8fd9\u91cc\u6a21\u5757\u662f\u6307es", "d": "9/2017"}, {"body": "see", "d": "9/2017"}, {"body": "thanks clarification nt find original issue", "d": "9/2017"}, {"body": "sorry skipped part docs", "d": "9/2017"}, {"body": "define properties initialization work correctly reproduction neither see also", "d": "9/2017"}, {"body": "jounqin thank reply solutions sometimes ca nt define properties initialization example define customer bind properties customer object ajax server get customer informations lot properties need defined", "d": "9/2017"}, {"body": "first binding property template means already know field exists beforehand declare beforehand default create reactive properties however trick force add reactive properties using bracket syntax see still strongly recommend declaring properties beforehand easier time debugging maintaining code long run", "d": "9/2017"}, {"body": "nt know happen component update value ouside without emit", "d": "9/2017"}, {"body": "think jsfiddle implementation pattern tl dr object array must updated child component see value reassigned seen warning props must updated props mutation caught pushing element array deeplevel mutation cause address change javascript world make parent props change reflected child components think vue must keep address variable might wrong vue extend variable vue also watch change parent value ideal would fantastic find way avoid deeplevel object manipulation nt think possible language without another performance cost", "d": "9/2017"}, {"body": "allenhwkim said also explicitly raised warning docs", "d": "9/2017"}, {"body": "error nt seem relate vue calling inside vue method nt make difference work outside vue method unfortunately without repro really help", "d": "9/2017"}, {"body": "thanks evan yes works outside vue method try create repro kr gio", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "\u8fd9\u662f expected behavior \u4f5c\u7528\u4e8e toggle \u7684\u65f6\u5019 loading \u5e76\u6ca1\u6709\u88ab activated", "d": "9/2017"}, {"body": "vuerouter loading loading loading \u7ec4\u4ef6\u7684 component", "d": "9/2017"}, {"body": "\u5c31\u662f\u56e0\u4e3a\u8fd9\u5c42\u591a\u51fa\u6765\u7684 loading \u4f7f\u5f97 keepalive", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "met thing today workaround", "d": "9/2017"}, {"body": "ios system issue ca nt much vue core workarounds add hidden optgroup options make sure initialize select default value matching option", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "please instence input number value empty vue watch work title number new vue el body data return number watch number val oldval consolelog val oldval", "d": "9/2017"}, {"body": "hi nt think watch supposed work type wait type number soon type number watch function properly executed", "d": "9/2017"}, {"body": "expected behavior set span replaces inner textnode vue updating original textnode removed due operation give force recreated", "d": "9/2017"}, {"body": "another feature found domoperate affects deep children first child template work fine without key", "d": "9/2017"}, {"body": "one limitations dom templates due browsers see", "d": "9/2017"}, {"body": "reproduction link gets added added", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "cc ktsn herringtondarkholme", "d": "9/2017"}, {"body": "sure add", "d": "9/2017"}, {"body": "far know vuejs support android android uses separate web engine android version nt matter see quote caniuse android browserwebview version numbers refer version android os support listed android core noted many hardware vendors samsung htc etc use altered version default browser may include morelessbuggy support starting android web engine updated separately latest chromium version number used instead", "d": "9/2017"}, {"body": "site lowest support android written could nt find information however found compatibility note stating compliant browsers supported valid support table", "d": "9/2017"}, {"body": "saucelabs dropped support android tests longer shows support way", "d": "9/2017"}, {"body": "awesome think greenlight switch vue", "d": "9/2017"}, {"body": "seems normal", "d": "9/2017"}, {"body": "repro working intended", "d": "9/2017"}, {"body": "kingwl sorry test others case forgot change back important code html block expand true element block expand false element four case click event listen works well click event listen works well click event listen change true ok change back click event listen change false change true", "d": "9/2017"}, {"body": "happens inner click event fires triggering update nexttick microtask microtask processed event bubbles outer div update click listener added outer div dom structure outer div inner element reused event finally reaches outer div triggers listener added update turn triggering update quite tricky fix libs leverages microtask update queueing also problem eg preact react nt seem problem use synthetic event system probably due edge cases like work around simply give two outer divs different keys force replaced updates would prevent bubbled event picked html block expand true element block expand false element", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "guess standard behavior", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "works nicely copied code fiddle project overkill may want ask help forum discord server", "d": "9/2017"}, {"body": "works jsfiddle well meant mention late try discord progess bars nt work within vue document put outside template work fine guess github nt place get help", "d": "9/2017"}, {"body": "edited original post realized assigning number rather variable thing", "d": "9/2017"}, {"body": "see tired happens webpack quite strange may something webpack config vueloader maybe transpiled drop support ie", "d": "9/2017"}, {"body": "appreciate looking trying look vueloader familiar enough going go back hand rolled progress bars thanks", "d": "9/2017"}, {"body": "posva actually still think bug remove dynamic value binding example stops working looks like value needs added using domprops attrs working example using custom component guess progress element check needs added btw edge problem", "d": "9/2017"}, {"body": "sqal right dom prop since find culprit let pr unsure test necessary maybe compiler test thanks lot btw", "d": "9/2017"}, {"body": "posva hmm played bit turns issue related dompropsattrs adding tag map nt change thing still works value string add line check ieedge browser like issue gone sure throwing correct fix though wo nt affect things think leave issue someone core team fix", "d": "9/2017"}, {"body": "thank much looking sqal always comforting know nt something wonky", "d": "9/2017"}, {"body": "mmh really weird work using test right though", "d": "9/2017"}, {"body": "fails using stringbased templates change fiddle use string template instead indom template would fail adding map fix sqal probably nt build import correct file test project", "d": "9/2017"}, {"body": "working", "d": "9/2017"}, {"body": "vue gives power setting ssr setup project feels natural want prerender pages instead ssring setup tooling tooling part vue core", "d": "9/2017"}, {"body": "think discussion regarding nuxt", "d": "9/2017"}, {"body": "think order better differentiate vuejs project purpose post comparing reactjs example even amazing boilerplates like vuehackernews combining ssr prerendering imho one thank however using nuxtjs remember looking every message gitter issue github nt remember examplestalks also tried searching logical keywords google repo result", "d": "9/2017"}, {"body": "actually useful usually listening events component may want trigger method another component one", "d": "9/2017"}, {"body": "would emit event triggers method component call method", "d": "9/2017"}, {"body": "usecase find atm reopen thank", "d": "9/2017"}, {"body": "thanks valid bug freezes browsers node", "d": "9/2017"}, {"body": "nt think bug nt meant work promises right", "d": "9/2017"}, {"body": "nt matter need accept promise api freeze browser node server users give vue wrong input", "d": "9/2017"}, {"body": "oh yeah agree fixed possible unreasonable freeze platform reason saying bug perspective bug situation working edit misread code got tricked syntax thought promise using call way around", "d": "9/2017"}, {"body": "preliminary investigation shows vue relies function context resolve async component case render function always return new function instance handle vue attaches async component function lost vue think component nt properly resolved fix simple move inline arrow function outside stable identifier fix vue find context previously attaches function guess really one using api also solution fix nt clear", "d": "9/2017"}, {"body": "exactly herringtondarkholme said promise resolves cause current component rerender resulting new async factory function thus entering infinite update loop also nt see simple fix supported usage anyway guess documenting behavior async component section", "d": "9/2017"}, {"body": "tried realized feature forked branch also write ut condition several another uts failed think change comprehensive reliable", "d": "9/2017"}, {"body": "unfortunately breaking change unlikely happen", "d": "9/2017"}, {"body": "fyi set default value option empty string case selecting first option selecting similar value nt normal fix application", "d": "9/2017"}, {"body": "\u4f60\u7684\u7a7a\u9009\u9879 value \u662f \u6708\u7684 value \u4e5f\u662f \u6708\u7684\u65f6\u5019 sync", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "passive amp capture modifier problem", "d": "9/2017"}, {"body": "seems fst callback inputonce event handler modified data push microtask update queue update task execute callback input event handler refresh dom props sync callback input event handler get dom props value updated idea fix", "d": "9/2017"}, {"body": "vue capture errors thrown asynchronously similar try catch wo nt catch async errors responsibility handle async errors properly eg using promisecatch", "d": "9/2017"}, {"body": "ok thanks", "d": "9/2017"}, {"body": "everything read apart modifying vnode wo nt anything intentional reduce scope directives want play around vnode modify content html use component instead", "d": "9/2017"}, {"body": "decided probably implemented vue instead run script cleaning dom vue initializes", "d": "9/2017"}, {"body": "bug fyi use modifier make event handler triggered eventtarget element", "d": "9/2017"}, {"body": "list objective benefit computed props computed methods computed property like computedconfig neat solution nt also computed props might add api surface get users confused computed props computed methods also see info", "d": "9/2017"}, {"body": "default value runs every time needed exactly already computed property let avoid adding api surface something already doable way", "d": "9/2017"}, {"body": "unfortunately solution inelegant polluting api component component public api almost like forced create contrived name really want use directly moreover initially pass prop later need make computed update everything component references property computed property name ca nt change prop name every place references component change well cleaner elegant deal one property component", "d": "9/2017"}, {"body": "hmmm would rather argue design vpre ignore directives eg slot need tag slot wrap template fix", "d": "9/2017"}, {"body": "doc also says example doc illustrates main idea exact implementation details see updated example", "d": "9/2017"}, {"body": "dup use empty string undefined", "d": "9/2017"}, {"body": "expected datepicker changing therefore value changes whole template renders used input value used fill therefore clean case used since using jquery date picker need react event sent datepicker change remove input augmented datepicker since used", "d": "9/2017"}, {"body": "see makes sense unfortunate seeing comments see heated debate jquery community changes value inputs triggering events normally nt use jqueryui masking plugins never noticed spoiled guess got ta add overrides jquery sigh thank though clear answer problem could wrap head around", "d": "9/2017"}, {"body": "glad find useful personally try find plugin wraps create mine component", "d": "9/2017"}, {"body": "could provide minimalwhole project reproduces error find problems code tsconfig", "d": "9/2017"}, {"body": "seems rather issue laravelmix vue", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "dup", "d": "9/2017"}, {"body": "fak", "d": "9/2017"}, {"body": "mounted hook", "d": "9/2017"}, {"body": "\u6211\u7684\u5efa\u8bae\u662f\u8d77\u7801\u7236\u7ec4\u4ef6\u5e94\u8be5\u8981\u6709\u4e00\u4e2a\u7c7b\u4f3c\u975e\u5f02\u6b65\u7ec4\u4ef6\u7684 nexttick\u7684\u4e1c\u897f\u6216\u8005\u4e8b\u4ef6 \u77e5\u9053\u5b50\u7ec4\u4ef6\u5df2\u7ecf\u6e32\u67d3\u5b8c\u6210", "d": "9/2017"}, {"body": "\u7236\u7ec4\u4ef6\u4e3ap \u6211\u5df2\u7ecf\u6e32\u67d3\u597d\u4e86 \u7136\u540e\u904d\u5386\u51fa\u961f\u5f02\u6b65\u4e8b\u4ef6\u961f\u5217ds\u6267\u884c\u89e6\u53d1 \u800c\u4e8b\u4ef6\u961f\u5217ds\u4e2d\u7684\u6bcf\u4e00\u9879\u81ea\u5df1\u53bb\u68c0\u6d4b\u9700\u8981\u7684\u5b50\u7ec4\u4ef6\u662f\u5426\u52a0\u8f7d\u5b8c\u6210 \u5982\u679c\u52a0\u8f7d\u5b8c\u6210\u6267\u884c\u5373\u53ef \u751f\u547d\u5468\u671f\u6dfb\u52a0\u6240\u6709\u5f02\u6b65\u5b50\u7ec4\u4ef6\u6e32\u67d3\u5b8c\u6210\u4e8b\u4ef6", "d": "9/2017"}, {"body": "\u5f02\u6b65\u4e4b\u95f4\u7684\u4e8b\u4ef6\u6d41\u7a0b\u7ba1\u7406\u4e0d\u5c5e\u4e8e vue eventproxy", "d": "9/2017"}, {"body": "\u597d\u5427 \u8c22\u8c22\u4e86 \u6211\u5728\u63d0\u95ee\u4e4b\u524d\u5df2\u7ecf\u6309\u7167\u4e0a\u9762\u7684\u6b65\u9aa4\u4f7f\u7528vue\u7684 on\u548c emit\u901a\u8fc7\u4e00\u4e2avue\u5b9e\u4f8b\u505a\u4e8b\u4ef6\u603b\u7ebf\u5b9e\u73b0\u4e86", "d": "9/2017"}, {"body": "\u8bf7\u5148\u7406\u89e3\u5f02\u6b65\u7ec4\u4ef6\u662f\u5e72\u561b\u7684", "d": "9/2017"}, {"body": "\u6211\u7684\u5efa\u8bae\u662f\u8d77\u7801\u7236\u7ec4\u4ef6\u5e94\u8be5\u8981\u6709\u4e00\u4e2a\u7c7b\u4f3c\u975e\u5f02\u6b65\u7ec4\u4ef6\u7684 nexttick\u7684\u4e1c\u897f\u6216\u8005\u4e8b\u4ef6 \u77e5\u9053\u5b50\u7ec4\u4ef6\u5df2\u7ecf\u6e32\u67d3\u5b8c\u6210", "d": "9/2017"}, {"body": "\u5b50\u7ec4\u4ef6\u4f20\u4e2a\u4e8b\u4ef6\u5c31\u884c\u4e86", "d": "9/2017"}, {"body": "\u597d\u7684 \u8c22\u8c22 \u8bf7\u5173\u6ce8\u53e6\u5916\u4e00\u4e2a\u7531\u8fd9\u4e2a\u5f15\u8d77\u7684\u5144\u5f1f\u7ec4\u4ef6\u901a\u4fe1\u95ee\u9898", "d": "9/2017"}, {"body": "point right place nt would forum", "d": "9/2017"}, {"body": "right place ask kind things nt know would right place twitter discord forum sure people created tools like probably nuxt plugin recommend look", "d": "9/2017"}, {"body": "use nuxt generate wed sep eduardo san martin morote lt notifications githubcom wrote right place ask kind things nt know would right place twitter discord forum sure people created tools like probably nuxt plugin recommend look receiving subscribed thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "sure missing thanks reopening", "d": "9/2017"}, {"body": "mistaken config creates separate bundle includes duplicated copy vue bundles included loading two copies vue page disabling warning copy main entry bundle see webpack docs proper vendor chunk splitting", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "use element access function look dos examples", "d": "9/2017"}, {"body": "put data dom anyway", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "quite understand posva method used add refs like write isactive method even solved duplicate code still happens", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "modifier supported since", "d": "9/2017"}, {"body": "please update tutorial document nt contains passive modifier", "d": "9/2017"}, {"body": "cc chrisvfritz seems event section guide missing modifiers added newer versions", "d": "9/2017"}, {"body": "add", "d": "9/2017"}, {"body": "feature request please use bug report format provide reproduction", "d": "9/2017"}, {"body": "pushtip days thank comment much", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "probably related", "d": "9/2017"}, {"body": "yes error", "d": "9/2017"}, {"body": "thank check jsx", "d": "9/2017"}, {"body": "nickmessing work jsx since basically alias feel free pr jsx test case", "d": "9/2017"}, {"body": "makes bug destroycreate order matter sounds like creating side effects affect component instance created hooks really recommended practice", "d": "9/2017"}, {"body": "thanks evan answer nt know makes bug behavior fresh template install works expected matters use hooks handle event listeners global bus fired twice registered created component removed beforedestroy also want register unregister module store fly got errors", "d": "9/2017"}, {"body": "vue bus specialist creating listeners fly seams like really bad idea sure destroycreate order least problems since appear development may suggest really want keep way check listener already exists add easily", "d": "9/2017"}, {"body": "yes today hook removes everything ca nt find solution try plugin approach thanks help", "d": "9/2017"}, {"body": "problem beforedestroy removes listeners create next time component mounted", "d": "9/2017"}, {"body": "current vdom behavior creates new nodes destroying old ones unfortunately changing would breaking change suggest try add checks ensure component instance remove listeners registered", "d": "9/2017"}, {"body": "think might valid reason bug using amp hooks register amp unregister vuex modules development hot reload component registers vuex module instead register module second time unregistering output log better way component register vuex module ticket reopened", "d": "9/2017"}, {"body": "two repos triying first repos external vue app main conponent main app embed component integration page wanted make tool self register store problems described registering component inside nuxt app solved problem things right way", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "\u4f20\u503c\u4e00\u76f4\u4e0d\u5bf9", "d": "9/2017"}, {"body": "thanks instead reporting bug please submit prs directly directly via github interface", "d": "9/2017"}, {"body": "sure", "d": "9/2017"}, {"body": "feel scope vue designed ie exposing primitives building alternative reactivity system especially different syntax requirements fact easily use unmounted vue instances reactive data sources similar mobx nt sound right reconstruct sake api similarity requiring vue expand api surface accommodate", "d": "9/2017"}, {"body": "fact easily use unmounted vue instances reactive data sources yes thought constructor lot unnecessary viewrelated stuff usage models optimal performance point view", "d": "9/2017"}, {"body": "never mount viewrelated stuff minimal small overhead creating instance", "d": "9/2017"}, {"body": "small overhead creating instance yes exactly talking want make model instantiation cheap possible may lot ca nt expose internals already course asking make part public api help people like trying develop lowlevel tools", "d": "9/2017"}, {"body": "problem exposing part public api either library depends apis break without notice may change internal implementations maintaining public api avoid breaking stuff time longer able make big internal changes suggest benchmark actual overhead asserting going expensive", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "nt dup", "d": "9/2017"}, {"body": "posva yes similar situation dynamically clear cache runtime", "d": "9/2017"}, {"body": "jkzing", "d": "9/2017"}, {"body": "okjesse", "d": "9/2017"}, {"body": "jkzing \u6309\u7167\u60a8\u7684\u65b9\u6cd5", "d": "9/2017"}, {"body": "jkzing", "d": "9/2017"}, {"body": "jkzing\u770b", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "destroy", "d": "9/2017"}, {"body": "fadexiii", "d": "9/2017"}, {"body": "okjesse \u6211\u7684keepalive \u91cc\u9762\u5305\u542b\u7684\u662f\u4e00\u4e2a\u7528includes\u7684\u65b9\u6cd5\u4e0d\u8d77\u4f5c\u7528", "d": "9/2017"}, {"body": "okjesse", "d": "9/2017"}, {"body": "work must switch condition eltablecolumn large number props want copy", "d": "9/2017"}, {"body": "nt make sense slot either scoped also question bug", "d": "9/2017"}, {"body": "yes work way read information", "d": "9/2017"}, {"body": "intended behavior please read linked docs details", "d": "9/2017"}, {"body": "oh thanks nt know best practice pass value understand cloned passing child component", "d": "9/2017"}, {"body": "please provide actual reproduction", "d": "9/2017"}, {"body": "woops looks like messed link copy pasting anyway trying put one back together", "d": "9/2017"}, {"body": "repro", "d": "9/2017"}, {"body": "sure quite understand trying want use js variables inside style tag could bit specific trying accomplish maybe share jsfiddle illustrates problem", "d": "9/2017"}, {"body": "okay sharing sample fiddle component focus described issue see struggle use props inside tags impossible dynamically change trigger image change case whatever", "d": "9/2017"}, {"body": "already bind computed objects styles", "d": "9/2017"}, {"body": "static design since may extracted plain css files instead injected managed dynamically hand props known runtime way modify already extracted css runtime convention dynamic toggling styles case write possible classes toggle class name dynamically prefer fully dynamic styling always use cssinjs option vue instead", "d": "9/2017"}, {"body": "see comment previous issue vue already implements similar optimizations", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "already includes similar optimizations please read release notes", "d": "9/2017"}, {"body": "thanks suggestion imo feature add significant benefits warrant addition essentially write little less code vs yet another api remember", "d": "9/2017"}, {"body": "difference projects created via may private intended public use license nt necessary cases copyrights implicit nt make sense require license every project intend make code public add license field", "d": "9/2017"}, {"body": "using old version happen latest version", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "yes issue also closed use framwork fortunatley thousands", "d": "9/2017"}, {"body": "dup", "d": "9/2017"}, {"body": "wrong using consolewarn consoleerror", "d": "9/2017"}, {"body": "mean like nt think guess could solution see two eventual problems first times vue comes eslinting like vue init console messages usually disabled second console message added existing one always output generic error cause confusion compared message like per example bash vue warn invalid prop must enter digit number prop example found srccomponentswordcountwordcountvue srcappvue pattern may something similar bash vue warn invalid prop prop found srccomponentswordcountwordcountvue srcappvue custom validator check failed displayed like always basically idea", "d": "9/2017"}, {"body": "note called synchronously call consoleerror validator immediately vue builtin warning warning good enough", "d": "9/2017"}, {"body": "herringtondarkholme good point", "d": "9/2017"}, {"body": "repository vue question vuerouter issues usage questions forumvuejsorg chatvuejsorg issue nt match requirements missing reproduction", "d": "9/2017"}, {"body": "hello working intended find better explanation smile", "d": "9/2017"}, {"body": "give slot", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "9/2017"}, {"body": "closing favor see three potential solutions need feedback core team figure one best", "d": "9/2017"}, {"body": "agree much better issue mine glad picking", "d": "9/2017"}, {"body": "diffed input update retrigger flip animation workaround splitting separate component update decoupled parent context", "d": "9/2017"}, {"body": "following suggestion wrapping transitiongroup component nt seem fix problem missing something tried wrap whole thing div issues still persists", "d": "9/2017"}, {"body": "misunderstood meant", "d": "9/2017"}, {"body": "please explicit kind directive would need please configuration could extracted one single js file import different directives mean nt think cumbersome redundant mean setting configuration using directives template well think much better explicitly give directive configuration making depend injected value somewhere else could lead hard debug bugs side note injectprovide meant advanced usage libs want make things easier use without user worry connecting explicitly many things together discouraged applications makes things implicit harder understanddebug", "d": "9/2017"}, {"body": "nt think really needed really want global configuration directives would vuex store object would even make easy update need", "d": "9/2017"}, {"body": "jsnanigans sure mean plugin access user vuex store global configuration contextaware configuration", "d": "9/2017"}, {"body": "thinking could define config store component get config pass directive think misunderstood trying accomplish provideinject directives want avoid passing config directive attribute write config provided components injected directive", "d": "9/2017"}, {"body": "posva understand provideinject advanced usage trying change saying provideinject work way directives already components reasons let give concrete example apologies done start plugin provides directive directive takes javascript function example executes passing object function returns string css styles directive generates css class name styles injects styles page appends css class name elements property object passed function directive value passed plugin beforehand way one way pass plugin installed ok works globally want use different themes app suggestion greetings features components config objects different themes directive inject config object instead getting install user pass directive value saying passing directive value cumbersome redundant would look like please get hung somewhatcomplex cssinjs example think use cases well immediate use case", "d": "9/2017"}, {"body": "really think directives probably want use css js example looks perfectly fine using config primarycolor yes looks cumbersome think adding provideinject directives would allow users easily mess things make really hard debug understand provideinject advanced usage trying change want reemphasize meant libs applications", "d": "9/2017"}, {"body": "would much easier even class", "d": "9/2017"}, {"body": "really think directives probably want use css js strongly disagree use case fits within guides description lowlevel dom access plain elements perfect example directives exist first place directive changing class value single element user wants litter app bunch higher order components deliver class name think adding provideinject directives would allow users easily mess things make really hard debug yes agree downside could say provideinject functionality components already vue could also say react context want reemphasize meant libs applications sorry nt really understand provideinject used components right components used applications", "d": "9/2017"}, {"body": "yes agree downside could say provideinject functionality components already vue could also say react context imagine dirty throw dump sorry nt really understand provideinject used components right components used applications components added libs", "d": "9/2017"}, {"body": "posva fair summation saying saying debating provideinject pros cons pretty much pointless already framework feature solves problem react context need contextaware data delivery issue components receive data way directives much harm components feature exists anyway maintainers maybe even decided pros outweigh cons con applies directives nt also apply components components added libs yes directives added libs", "d": "9/2017"}, {"body": "trying say adding pi directives could make harm help pointed link talks purpose provideinject last part comment provocative unnecessary found offensive trying help", "d": "9/2017"}, {"body": "posva sorry intention wanted clarify anyone reading directives components installed via libraries difference two considering whether one legitimate use pi", "d": "9/2017"}, {"body": "wanted clarify anyone reading directives components installed via libraries difference two considering whether one legitimate use pi like difference use case apart css one mentioned", "d": "9/2017"}, {"body": "like difference ok difference referring quoted incorrect legitimately trying figure mean another use case involving input validation much different use case already laid essentially convenient way set configuration nt specify long within certain context seems like whole point pi feature feel like dismissing use case without giving reason clear advocating feature library author end goal make using library easier event library api better suited use directives instead components", "d": "9/2017"}, {"body": "hi use instead option", "d": "9/2017"}, {"body": "javoski thank", "d": "9/2017"}, {"body": "want ask many functions monitored component affect performance javoski", "d": "9/2017"}, {"body": "note bug vue way registering plugins guaranteed cause leak way us fix important understand thus avoid certain patterns using simply understand probably use", "d": "9/2017"}, {"body": "pressing several buttons time fires several input events one button keyboard sends ok ok vmodel binding fact every event handler gets fired input value changed pattern like char added input value input handler fired input handler fired char added input value suspect may something nexttick behavior btw timerfunc called half time unlike example chrome ff", "d": "9/2017"}, {"body": "finally could test also weird keep keys pressed gets repeated vmodel fixes work around ie crazy behaviour definitely messing things sure mark improvement bug workaround use listener yield expected result want", "d": "9/2017"}, {"body": "thx jsnanigans workaround look application think need two way binding tested behaviour occurs examples test version version", "d": "9/2017"}, {"body": "really easy need define variable ie data instead check variable execute function alternatively could leave attribute check function javascript myfn thisdisablechange return would also give control gets disabled", "d": "9/2017"}, {"body": "sounds like usage question nt think provide dedicated api specific use cases", "d": "9/2017"}, {"body": "config setting define custom events bit like keycodes api idea", "d": "9/2017"}, {"body": "events one place template gives good idea component react sure putting logic elsewhere help achieve goal sorry shooting ideas x", "d": "9/2017"}, {"body": "thinking might need listen set events multiple places could help avoid repeating could cause lot problems putting global config would also make informant components want could also give declarative names like also goal easily pass multiple events function", "d": "9/2017"}, {"body": "goal indeed able use function multiple events without copypaste function name x times template need listen set events multiple places point moot since goal call function within component need js js hand thinking calling function multiple components think feature request scope would use order keep dry", "d": "9/2017"}, {"body": "general trying avoid adding alternative syntax templating system case benefit saving keystrokes really nt worth addition imo fact use spaces attribute name makes proposals impractical linusborg suggested might best solution however many modifiers actually compiled code compilation phase thus making costly add runtime support think best path forward would userland library exposes method implements runtime behavior modifier internally instead duplicating vue core", "d": "9/2017"}, {"body": "general trying avoid adding alternative syntax templating system case benefit saving keystrokes really nt worth addition imo thinking currently thing opinion much difference avoiding repetition fact use spaces attribute name makes proposals impractical yes way around solution bit dead water still think kind repetition makes components behavior harder comprehend perhaps creating complex components right way oh well", "d": "9/2017"}, {"body": "andreiglingeanu impression issues filed bug reporter nt accessible anyone apple team dev reported link apple bug tell view logging", "d": "9/2017"}, {"body": "coffeescript partially helpful partially appreciate syntactic sugar fewer braces indentationbased missing lot sugar provides", "d": "9/2017"}, {"body": "aminimalanimal nah getting bug exist access error amazed someone still uses coffee", "d": "9/2017"}, {"body": "say love enforced proper indentation nt like managing brackets p bad bug report sure safeguard horrible security issues nt easily discoverable", "d": "9/2017"}, {"body": "would interested helping convert typescript well needed", "d": "9/2017"}, {"body": "nt causes longer learning curve angularlike nature starting longer time waiting first update due vue team learning experimenting new technology yes coming ones may become faster makes ts must learnt technology diving vuejs loses vue one greatest points angular react shorter learning time idea migrating ts", "d": "9/2017"}, {"body": "khalednuur typescript would used vue source code similar flow nt mean need use still need learn types flow would typescript difference one support bigger community", "d": "9/2017"}, {"body": "khalednuur also understanding angular really tries enforce full typing use typescript pretty silly feel like ability choose type one strengths example nt tend type application code much break something module component type document way months make application change nt need go reread component makes sense understanding angular kinda forces nothing", "d": "9/2017"}, {"body": "article javascript libraries written typescript codebase typescript nt mean application developer needs use typescript angular less targeting enterprise developers largely benefit typescript codebase also doubled decorators looks better typescript compared code examples would always look better typescript also support nt really advertise much js angular syntax function app const appcomponent ngcore component selector myapp template first angular app class constructor function constructor windowapp windowapp typescript component selector myapp template first angular app class appcomponent ngmodule imports browsermodule declarations appcomponent bootstrap appcomponent class appmodule vue codebase nt really mention using typed language problems people mentioning typescript repo already flow even vue uses typescript nt need use decorators vue api would look example", "d": "9/2017"}, {"body": "going relicensing flow mit hope relieves concerns", "d": "9/2017"}, {"body": "mroch wow big news guess closed", "d": "9/2017"}, {"body": "plasmatium pointed essentially compiler optimization hint nt really make sense make dynamic syntax also makes feel bit confusing also meant optimizing large trees plain element nodes nested components inside component already serves update boundary props passed components change updates happen downstream", "d": "9/2017"}, {"body": "also wondering next release occur meantime way install version thanks", "d": "9/2017"}, {"body": "clone repo build files run use local version vue rough instructions", "d": "9/2017"}, {"body": "since users actually use inside templates prohibiting breaking change nickmessing suggested think would better make rule eslint plugin instead", "d": "9/2017"}, {"body": "defcc problem idea expression dynamic bindings nt really know compile time whether component original intention really meant dynamic component switching cases allowing upgrading normal element component primarily using indom template html element placement restrictions eg trying use component inside somehow feel current behavior sticks intention better unfortunately fix break cases users casting custom component specific cases like component libs probably better manually handle events instead using finergrained control looked latest bootstrapvue code seems split separate components think better direction", "d": "9/2017"}, {"body": "thanks good explanation directive", "d": "9/2017"}, {"body": "typo makes enumerable fixed pr merged", "d": "9/2017"}, {"body": "jounqin sure even enumerable still present nt got time properly investigate issue yet", "d": "9/2017"}, {"body": "ah sorry read wrong know issue try figure later used extract styles first chunk also another async chunk generate property correctly nt encountered problem however sounds good getter always", "d": "9/2017"}, {"body": "app containing component template syntax error broken app definition runtime exception something developer responsibility fixing deploying app", "d": "9/2017"}, {"body": "also closing issues quickly think premature course app broken entire app work broken template comes play make issues way harder debug necessary development prototyping especially since error applies compiler case anyway html template code case allow developers designer fully live edit templates live preview live data fact specific template nt yet render emits error fine entire application becomes useless annoying instantiate second vue instance test compiler pipeline using works course one reason html applications successful resilience many error scenarios alternative wpfxaml like experience slightest compilation runtime mistake renders nothing long term goal rendering layer try least somewhat resilient errors vue already aforementioned case rendering renderable html break everything especially might easy fix would hope might least open us propose pull request find time investigate pipeline best make fix affect performance maintainability regards ps case prototyping phase components turned server side rendered components automatically course valid", "d": "9/2017"}, {"body": "think api feels bit confusing took times grasp trying fact think easier externalize backend api bundle bundle server code require backend api directly", "d": "9/2017"}, {"body": "\u6211\u5728state\u91cc\u4f7f\u7528\u4e86require", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "transition", "d": "9/2017"}, {"body": "\u91cd\u73b0\u5e94\u5f53\u5c3d\u91cf\u7cbe\u7b80 vue \u7684 bug \u4e00\u4e2a\u6700\u5c0f\u5316\u7684\u91cd\u73b0\u610f\u5473\u7740\u5b83\u7cbe\u786e\u5730\u5b9a\u4f4d\u4e86 bug \u672c\u8eab \u5b83\u5e94\u5f53\u53ea\u5305\u542b\u80fd\u591f\u89e6\u53d1 bug bug", "d": "9/2017"}, {"body": "posva vueloader sourcemap correct real problem webpack mix ara sure give issue webpack", "d": "9/2017"}, {"body": "vueloader import vuescript babelloader nodemodulesvueloaderlibselector typescript amp find problem babelloader create sourcemap correct", "d": "9/2017"}, {"body": "hi ergenekonyigit first thanks lot logos appreciate contribution however sorry direct nt feel designs polished enough hope understand designer pretty picky details yet come logos vuexvuerouter happy also explained prefer vue ecosystem stick one logo consistency", "d": "9/2017"}, {"body": "fenduru sorry late response yes way get rid cost preventing array extensible however linusborg pointed lead potential scenario frozen array containing objects already made reactive elsewhere would cause changes nested objects ignored although cases extremely rare entirely sure safe sacrifice correctness use case mentioned ultimately somewhat bruteforce workaround deal incapability detecting array indice access object property addition case exist later added way guarantee detection sadly cases costly price pay ensure correctness luckily planned rewrite reactivity system using proxy longer need work around see great perf boost scenarios running", "d": "9/2017"}, {"body": "ca nt replicate behavior expecting case understand bruteforce workaround however seems like reason give people way opt behavior impacting every vue component references array imagine person relatively large array index opened think considered unless scenario shown differ objects arrays even seems kind unreasonable someone explicitly opt change detection array surprised change detection nt happen within array edit side note think proxy perfect kind use case supported ca nt polyfilled ie impacted browser things performance going away time soon nt think ignore issue favor proxies", "d": "9/2017"}, {"body": "fenduru one extra level nesting object registers dep see case", "d": "9/2017"}, {"body": "see however actually inconsistency objects arrays exactly point change array object frozen recognized arguing makes sense indicated object nt reactive", "d": "9/2017"}, {"body": "fenduru true guess actually better keep consistent", "d": "9/2017"}, {"body": "fyi instance destroyed cached components destroyed well unless misunderstood scenario actual code shown think original concern nt even problem first place", "d": "9/2017"}, {"body": "although see point proposal nt feel particularly needed way encourages passing multiple values object avoid specify multiple props easy abuse object props tucking properties making sort super prop however think explicit list props makes component interface easier understand", "d": "9/2017"}, {"body": "vvpvvp came similar situation using vue components inside list edited addremove items change order using vuedraggable items nt unique id generated data within form solution found use shadow list save unique ids rendering purpose edit lists user interaction example using code", "d": "9/2017"}, {"body": "nauzethc thank much must explain know solution solve question better nt need key ordinary way problem use met many inexplicable problems development", "d": "9/2017"}, {"body": "vvpvvp understand problem main problem key data realy unique ids create new items listtable add blank ids like goes server generates proper uids far edit mode adding new items nt realy want generate ids server needs em blank handle problem add another one ids realy something want adding option would generate keys inner vue use seems legit request", "d": "9/2017"}, {"body": "really used chunks template significantly large costly render otherwise benefit would negligible applications perform perfectly fine without need cost introducing additional directivesconcepts technical api surface increase really worth", "d": "9/2017"}, {"body": "fyi", "d": "9/2017"}, {"body": "personally think consistent across project global compiletimeonly option first place since solved css avoid adding yet another option runtime api", "d": "9/2017"}, {"body": "since solved css avoid adding yet another option runtime api respect decision esp performance implications full clarity white space always solved css give example html html glued word footnote browser width narrow enough forced go proceeding line word footnote travel however following html occur move word footnote appear preceding line html footnote far seen css get around without unintended side effects setting parent font size zero child font sizes reset using floating elements using flexbox things introduce complexities unintentional side effects project brought issue ultimately decided remove whitespace manually pretty gets job done anyway thought weigh mention thanks", "d": "9/2017"}, {"body": "problem themes suddenly got using vue material background valid item theme gives message default primary blue accent pink background rgb preferred option background valid theme error", "d": "9/2017"}, {"body": "likely support full dynamic type next minor release closing one", "d": "9/2017"}, {"body": "plain javascript object thus supported reactivity", "d": "9/2017"}, {"body": "unfortunately flip animations entirely css transition driven would difficult provide js driven api behavior would also likely bloat codebase future may split transition system standalone packages add optin features", "d": "9/2017"}, {"body": "case done refactoring backend keys renamed would prefer see warning well key nt exists", "d": "9/2017"}, {"body": "lazyhero", "d": "9/2017"}, {"body": "closing lack actionable items", "d": "9/2017"}, {"body": "hi condition scopedslots demo could append scopedslots abstract component thanks", "d": "9/2017"}, {"body": "hi evan solution problem instead windowdocumentbodyinnerhtml used thanks advance", "d": "9/2017"}, {"body": "kingwl able resolve", "d": "9/2017"}, {"body": "zuibunan success try something like", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "request stale meanwhile actually allows inject custom compiler modules via option module api defined theoretically enable standard use cases alternative codegens imo much control given userland", "d": "9/2017"}, {"body": "issues outer component delegates another component using cases outer component inner component linked property sometimes linked outer component sometimes inner component nt rely find correct component time", "d": "9/2017"}, {"body": "issue well one site least ipad model really hard debug since dev tools also crash reproduce problem codepen example provided bububo using latest vue version reckon problem lies vue hooks dom another website barely works vue takes almost seconds initialize ipad afraid couple components introduced page crash please reopen issue investigate posva", "d": "9/2017"}, {"body": "haies", "d": "9/2017"}, {"body": "import elcol", "d": "9/2017"}, {"body": "vue haies ie", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "\u8fd9\u91cc\u5e94\u8be5\u66f4\u591a\u662f babelrc babel", "d": "9/2017"}, {"body": "exactly problem reproduced ios wechat wkwebview safari ca nt reproduce uiwebview wechat workaround works us", "d": "9/2017"}, {"body": "fyi already shipped pure js build nt announced yet supports base renderer decoupled nodejs apis feel free try integrating contexts", "d": "9/2017"}, {"body": "given comment write something simple like run webpack nt getting messages like correct", "d": "9/2017"}, {"body": "sowhatdoido native node module ca nt webpack use instead", "d": "9/2017"}, {"body": "ah sorry thought said base renderer meant vs thanks help", "d": "9/2017"}, {"body": "think without mechanism component composition via inheritance inherently broken since allows affordances drying template fact people using pug template language workaround proof enough imo downside course introduces another dependency whole new templating language feature would urge reopen discussion", "d": "9/2017"}, {"body": "hi thanks answer running problem microsoft edge suggest need create svg realtime vuejs bind som html ex today escaped visible page since innerhtml nt part svg specs pointed forced use brackets insert value possible turn html escaping contexts solve issue way suggest", "d": "9/2017"}, {"body": "thank", "d": "9/2017"}, {"body": "oh nt added official doc", "d": "9/2017"}, {"body": "browsers support modules would great able import vue codepen seems work chrome safari test modules flags firefox edge defining global variable importing could something like beginning vue esm", "d": "9/2017"}, {"body": "time want notify component rendered callback useful cases else need implement events inited components want monitor fail case think caused plan get callback back give help", "d": "9/2017"}, {"body": "safari macos earlier versions try use custom component input like error caused", "d": "9/2017"}, {"body": "note vfor refs guarantee order source array well huge bummer", "d": "9/2017"}, {"body": "document says refs populated component rendered reactive really requirement dynamic ref vfor example kingwl found solution manually clear old ref array null works tries found vue push new added vue components ref array vfor loop solution array one item problem solved need wait new ref feature", "d": "9/2017"}, {"body": "problem refs reactive using nexttick function works get updated list refs problem vfor refs returning array match order source data code hack using custom uids resetting uids indexed trying access refs filtering array uid property", "d": "9/2017"}, {"body": "fail", "d": "9/2017"}, {"body": "see", "d": "9/2017"}, {"body": "closing since original suggestion involves platform sniffing quite tricky probably something better dealt userland", "d": "9/2017"}, {"body": "yateric thank much posting nonjavascript version really simplified vue application semanticui need js activate styling nt work smoothly vue templates conditional rendering watch property call semantic uis js calls ensure widgets working", "d": "9/2017"}, {"body": "yes emptied user opinion setting empty string throws lots type warnings component props expect maybe could modifier could used various scenarios set empty strings user emptied input", "d": "9/2017"}, {"body": "hi closed latest code encountered issue program running updating record condition read display datas checkbox truefalse condition remains even reading new records vue version thx", "d": "9/2017"}, {"body": "yeah obvious input work vmodel syntax sugar input update value think said docs vmodel also handles browsers compatibility better", "d": "9/2017"}, {"body": "saivarunk gives error vueloaderlibtemplatecompilerjs vueloaderlibselectorjs typetemplate amp index emitted value instead instance error template syntax error invalid expression vbind value modeltopics id", "d": "9/2017"}, {"body": "ruchern nt understand goal want reach", "d": "9/2017"}, {"body": "computed properties behaviour working", "d": "9/2017"}, {"body": "mikeevstropov computed nt convert returned value needs reactive returned", "d": "9/2017"}, {"body": "thank reply", "d": "9/2017"}, {"body": "different use case may need custom input component works try support polyfill need html following reason wo nt render thus element needed however much try ca nt find way render html comment directive seems way go ca nt use html element", "d": "9/2017"}, {"body": "looks like nearly calls settimeout using either defer function call immediately called next pass event loop ie transition effects would irrelevant server side rendering vue solution would implement stack push functions run next tick instead using settimeout stack nt hard write personally rather like pattern using push await things nt want blocking could solved outside vue using event loop implementation support function already really need create loop settimeout amp setinterval implemented work php ultimately code need resolve point ie resume synchronous execution events advanced could tricky may argue valuable javascript let timeouts windowsettimeout cb delay args gt timeouts timeoutsconcat cb args end datenow delay require actual code const endtimecompare end end b gt b timeouts timeoutssort endtimecompare timeoutslength gt sleep const runnow timeoutsfilter end gt end lt datenow const cb args runnow cb args timeouts timeoutsfilter timeout gt runnowincludes timeout sort endtimecompare writing bed midnight nt run sure need make lesspretty works older engines sleepy get general idea please let know idea solves everyone looking make repo put something includes setinterval", "d": "9/2017"}, {"body": "get example work properly add watchasobservable", "d": "9/2017"}, {"body": "fnlctrl well frankly doc far clear importing full version one using webpack browserify example currently toying scaffold uses gulp babel works fine npm modules importing gets runtimeonly version get full one requires importing documented well quite documented really sure know pretty much purpose umd modules work unimaginable scenarios still took several rereads installation page landing issue figure production uses use webpack cli tool great users pointed way using vue scenarios directly given structure installation page documentation easy say paragraph needs change section full runtime versions likely candidate one insert paragraph using gulp brunch import vue babel config using scaffold finally chrome actually full browser implementation also considered", "d": "9/2017"}, {"body": "fyi bundler alias possible always preferred instead directly importing file path dependencies may using alias risk multiple copies vue loaded time personally think build explanations provides enough information users determine correct build use depending scenarios honestly sure missing note scope vue docs explain es modules choice bundlers work cover every possible case vue potentially used focus recommended tooling suggest users without enough tooling experience follow recommended setups", "d": "9/2017"}, {"body": "might help", "d": "9/2017"}, {"body": "js const dumbcmp props gt propslabel export default dumbcmp actually guys done serval months ago", "d": "9/2017"}, {"body": "want render one node like case ca nt wrap need simple template feature like knockout apply tags", "d": "9/2017"}, {"body": "vuetemplatecompiler vue true shouldt check available vue js version install correct version work around simply single command explanation uninstall existing verion vuetemplatecompiler find version number installed vue js vue substr get version number create string vuetemplatecompiler package matching vue js verion vuetemplatecompiler vuetemplatecompiler npm list awk vue print substr install correct vuetemplatecompiler package npm install uetemplatecompiler", "d": "9/2017"}, {"body": "meeting", "d": "9/2017"}, {"body": "chrislandeza solved problem", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "custom vmodel modifiers case loop nested objects retrieved json use single html template rather template per object case believe computed properties nt work currently putting custom conversion methods server format vmodel format fetching sending data would love something builtin could pass functions", "d": "9/2017"}, {"body": "hello please repost one fiddles possible miljanaleksic linusborg seeing problem currently sounds much like described unfortunately fiddles gone ca nt see code workaround mentioned miljanaleksic make sense context also nt really understand render functions probably part weakness additionally nt see could event name wrong von click clicked event template component clicked method methods object event fires method component definition must work everything else expect occuring exact description problem vertical list tasks one task next etc task checkbox right user checks checkbox indicate task completion task disappear vuex implementation triggers change across entire application task disappear lists next task list moves otherwise appears spot old task checkbox accompanying next task appears checked even though certainly fact checkbox previous task never actually seems disappear instead seems hang around task text changes next problem need try show reproducible example please let know make effort make fiddle show problem time permitting application complex reproducing trivial may reasonably able reproduce questions thanks creating vue better alternative angular et al event name misusing miljanaleksic linusborg could share work around could reproduced without render functions note currently using eventpreventdefault checked checkbox hanging around less ideal considering checkbox never appears checked maybe resort buttons instead checkboxes even images swap manually thank advance", "d": "9/2017"}, {"body": "nt really sound like problem sounds like nt key list items start thread forumvuejsorg continue necessary closed issues place", "d": "9/2017"}, {"body": "nt unique id try case caching issue etc nt resolve issue added unique id checkbox previously hmmm maybe needs higher level multiple elements vue components template try keying needed elements thank thoughts apologize commenting closed issue nt resolve problem start thread forum create fiddle illustrates problem thanks", "d": "9/2017"}, {"body": "issue", "d": "9/2017"}, {"body": "tomkaltz please open separate issue thanks", "d": "9/2017"}, {"body": "maybe issue", "d": "9/2017"}, {"body": "appears fixed", "d": "9/2017"}, {"body": "issue branch", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "right freezing object longterm solution vuenonreactive vue dependency overkill comes something straight forward would nt simple check code enough allow libraries ensure things like caches wo nt observed mostly issue libraries used vue applications least", "d": "9/2017"}, {"body": "tell vue watch defineproperty depth data case want vue get notified changed etc used use case would cause error threejs tries assign values object actually another similar place plain curobj perspectivecamera uuid name perspectivecamera type perspectivecamera parent null children array lodashisplainobject curobj false vueisplainobject curobj true add another condition user disable observing improve vueisplainobject detection", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "recommended way reference global function fairly easy plain javascript", "d": "9/2017"}, {"body": "yup google search feature brought ticket annoying mixups vueset vfor documentation", "d": "9/2017"}, {"body": "truly vfor documentation", "d": "9/2017"}, {"body": "cc chrisvfritz let try add note support types docs api list rendering section also take look", "d": "9/2017"}, {"body": "wonder console warning would better since would tell people wrong immediately obviating need search solution also already explicit docs types support among definitely see argument one might hope iterables would work nt think currently give readers reason expect would", "d": "9/2017"}, {"body": "quite seeing argument adding support cleanly polyfilled unless missing something seems like vue approach adding reactivity arrays could easily extended sets need wrap", "d": "9/2017"}, {"body": "best guess please correctsorry wrong trickiest part wrap constructor accepts iterable nt see iterable made observable general form function ie referenceable state think generatorbased iterator example", "d": "9/2017"}, {"body": "need wrap constructor would nt passing preexisting sets vue according spec constructor immediately runs entire iterator effectively retaining shallow copy unique items returned iterator got instance nt matter whether created iterator regard created iterator different array created iterator via vue already supports", "d": "9/2017"}, {"body": "use immutable mapssets whatever data structures allow reactivity though simply whole chunk reference changes render render function computed generated array earlier better performance skips creation array mutable data structures unless find way notify vue specific changes manually would simply homebrewing yr solution", "d": "9/2017"}, {"body": "agree class nt offer advantage current js syntax vue competes react least us facebook embraced classes official syntax react devs working react becoming used writing code hence would easier transition vue although choose use plugin nt think introduction classes js mistake syntax cleaner makes dev productive makes tooling easier lures devs used oo syntax still important understand works covers also think using flow typescript highlights subtle point even languages untyped weakly typed could strongly typed compile type avoid unnecessary runtime checks problems", "d": "9/2017"}, {"body": "lures devs used oo syntax makes think working typical oop js nt actually offer ultimately unnecessarily leads call js frustration later class js putting proverbial lipstick pig embrace class keyword embrace something like stucco building instead proper building blocks language scott", "d": "9/2017"}, {"body": "claim nt behave expected specifically hatred js js frustration case familiarity mean sep pm scott notifications githubcom wrote lures devs used oo syntax makes think working typical oop js doesnt actually offer ultimately unnecessarily leads call js frustration later class js putting proverbial lipstick pig embrace class keyword embrace something like stucco building instead proper building blocks language scott receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "learn js understand nt hate js love scott", "d": "9/2017"}, {"body": "small sidenote confusing deal classes js trying find instance direct instance class sure way also many ways intuitively work js really class inheritance nt prototype delegation nt claim expert things camp people confused trying oo js found really oo", "d": "9/2017"}, {"body": "nt claim expert things camp people confused trying oo js found really oo exactly getting fortunate learn js ground someone told dump knew oop started enter world js object orientation absolutely prototypal delegation different world understand actually liberating scott", "d": "9/2017"}, {"body": "working js protypal world long time found class implementation liberating refactoring projects use classes issues inheritance extension identification really confused posts nt actually explain negatives classes seem classes work c used writing js sep scott notifications githubcom wrote nt claim expert things camp people confused trying oo js found really oo exactly getting fortunate learn js ground someone told dump knew oop started enter world js object orientation absolutely prototypal delegation different world understand actually liberating scott receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "people want classes probably never actually tried envision equivalent vue current api would look like using classes importantly would using class specced today class may may specced using stagex proposals well tried conclusion using specced features simply way provide something elegant enough end tedious constructor calls nt forget binding instance methods awkward workarounds like attaching static properties class declaration block etc etc polymer uses classes simply declare name element js export default class mynewview extends polymerelement static get return mynewview compare export default name mynewview frequently see react js export default class foo extends reactcomponent constructor props super props thisstate thisincrement thisincrementbind increment compare export default data gt foo methods increment using class class sake actually adds noise achieve amount work benefits maybe much beyond fuzzy warmness able use class represent everything fact terms ui components rarely perform direct oo inheritance time compose via mixins slots higherorder components ca nt even class react things get bit nicer class fields stage decorators stage proposals standards yet may change break even reverted defaulting requiring use vue means delegating risk every user vue nt think responsible choice optin already arguing whether oo js prototypal pretty offtopic pragmatic point view standard today good enough provide decent equivalent vue current api simple class fields decorators reach stage yes happy revisit issue think explained everything say topic locking happens", "d": "9/2017"}, {"body": "would like update little issue reason stateful filters useful id raw value need display real human readable data fetched ajax instance js bin wonder suggestion make work", "d": "9/2017"}, {"body": "filter correct abstraction trying accomplish apneadiving based description make component accepts id prop would display userpresentable value components already stateful allowing even show spinner inplace async data fetched feel free ask specifics discord forum", "d": "9/2017"}, {"body": "thanks quick answer sirlancelot", "d": "9/2017"}, {"body": "weex horrible documentation broken english", "d": "9/2017"}, {"body": "weex open source project help clean documentation", "d": "9/2017"}, {"body": "glidias simple example want create vuejs component cesium threejs etc need initialize inside component access instance later methods events nt want make viewer instance reactive lowlevel object library want smth like javascript import cesium cesium export default name cesiumviewer data return data created thiscesium new cesiumviewer el methods drawpath points actions thiscesium need way store internal variable cesium instance instance lowlevel need reactive", "d": "9/2017"}, {"body": "usecase identical deshadow lunrjs initialize lunr index object use throughout lifetime component however nt need reactive", "d": "9/2017"}, {"body": "nice", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hi slot attribute removing", "d": "9/2017"}, {"body": "oh see im sad", "d": "9/2017"}, {"body": "people might like remove vue dom render react component inside target element well vue destroys target element simple might think basically need make new element inside container want mount vue read thread", "d": "9/2017"}, {"body": "know vuejs must use factory function instance default props", "d": "9/2017"}, {"body": "var obj var copy objectassign obj consolelog copy", "d": "9/2017"}, {"body": "rikardocorp shallow copy objects within obj copied references", "d": "9/2017"}, {"body": "still work latest vuejs tried replacing remove delete getting parentmodelchildren delete function error jsfiddle tree view example changed dblclick call delitem method added delitem method follows methods delitem function parentmodelchildren delete thismodel", "d": "9/2017"}, {"body": "also encounter similar situation need watch multiple state change component", "d": "9/2017"}, {"body": "sirlancelot interesting solution small suggestion would use object return value since number give result things happens fast buggy example consistent example", "d": "9/2017"}, {"body": "seems stupidly obvious got anyone else gets google", "d": "9/2017"}, {"body": "want point old issue fixed long time ago working expected least since vue", "d": "9/2017"}, {"body": "using works well use case something like removing option selecting js option", "d": "9/2017"}, {"body": "think good idea computed property depends dom element attributes need manually update calculation attributes otherwise turn dependent dom attribute vue component data change computed property", "d": "9/2017"}, {"body": "meet problem vue solved add page option manifestjson", "d": "9/2017"}, {"title": "passing nonexistant selector backboneview", "body": "question really given fiddle copied also var myview backboneviewextend var view new myview el foobarbat consolelog viewel undefined wonder perhaps fallback creating element selector fails", "num": "4161", "d": "9/2017"}, {"title": "documentation model validate misleading", "body": "backbone docs mentioned section method run validate check model state however inspecting code clear calling method also trigger invalid event set state means internal call explanations also found annotated source following docs section method states validate returns error save continue model attributes modified server failed validations trigger invalid event set validationerror property model value returned method true never mentions invocation would cause invalid event triggered however location docs placed order linked lead confusion least happened colleagues trying explicitly test validity model proposal would reorder parts documentation two methods", "num": "4160", "d": "9/2017"}, {"title": "collection purge internal reference removed model", "body": "please find tersest reproduction could fathom sequence steps backbone application leads getting state internal confusion working copy found jsfiddle demonstrates keeping internal reference ed longer part however still retrieved former js var myview backboneviewextend foo new myview", "num": "4159", "d": "9/2017"}, {"title": "response without content", "body": "hello think must repeated could nt find solution search google stackoverflow want know face apis return status code example api server returns inserting db successful record exist db want save model put argument empty nt set js hanged searched found backbonejs waiting getting json sample function sending request function require usermodel function user get response code cases mean cases response body empty", "num": "4158", "d": "9/2017"}, {"title": "like suggest added example", "body": "think good example using backbone js please explain backbone js add thanks", "num": "4157", "d": "9/2017"}, {"body": "issue recent raised marionette well currently happens nothing view appears work adhere jquery rendering appending may error given end blank view expecting prefilled dom nt really think creating element ideal solution nt really follow imagine intention setting el selector honestly prefer nt take selector easy enough give view el since take selector think better error nt find", "d": "9/2017"}, {"body": "specific change docs like propose", "d": "9/2017"}, {"body": "jashkenas created pr including proposal", "d": "9/2017"}, {"body": "hmm interesting add model collection byid add two properties modelid modelcid reference model issue line id undefined byid contains modelid foo collection nt special logic change modelid value null check line also change unset set null undefined thismodelset id null ps think never need set model id null undefined anti pattern", "d": "9/2017"}, {"body": "yes never still bug fix making sure changing value first", "d": "9/2017"}, {"body": "write response switch need use xhr", "d": "9/2017"}, {"body": "tmolashyndmytro writing mistake code wrote word instead fix issue idea problem", "d": "9/2017"}, {"body": "data contains xhr consolelog xhr xhr null", "d": "9/2017"}, {"body": "empty nt need data want response http status code", "d": "9/2017"}, {"body": "strange write xhr empty maybe fail server userbaseurl also ceck request url networks tab", "d": "9/2017"}, {"body": "would bug think useful know whether change event fired attribute unset value changed nothing", "d": "9/2017"}, {"body": "think query changedattributes moreover knowing name method caused event unset case would exception backbone provide event", "d": "9/2017"}, {"body": "options backbone stashes information change etc options passed along think fine information nt need affect handler", "d": "9/2017"}, {"body": "hi news would love bb lodash help required please announce thanks", "d": "9/2017"}, {"title": "microsoft edge saucelabs", "body": "error", "num": "15686", "d": "9/2017"}, {"title": "component isdestroying flag false willdestroyelement event function", "body": "willdestroyelement isdestroying flag false twiddle sure loading twiddle new browser tab needed choose ember version dependencies properly render previously using issue nt present however select twiddle issue present may widespread issue checking isdestroying willdestroyelement function redundant many use cases able refactor code avoid issue may able", "num": "15684", "d": "9/2017"}, {"title": "route actions prevents errortemplate rendering", "body": "hi route error template render ever error thrown model hook however want catch error route action template never appears first assumption would take care may behindthescenes magic aware nt seem case plus could nt find anything documentation around error action anything providing error transition twiddle browse foo route notice error template appears comment action works expected let know missed something obvious behavior documented anywhere", "num": "15682", "d": "9/2017"}, {"title": "range input work negative values", "body": "reproduction", "num": "15681", "d": "9/2017"}, {"title": "binding actions component helper fails component changed dynamically", "body": "route lives slideout panel shows quick quote workflow initially shows default component user navigate back forth bunch steps component displayed determined qqcomponent property action navigatequickquotepanel changes value qqcomponent based passed parameters works fine initially value qqcomponent changes new component displayed however point appears onnavigate property pointing navigatequickquotepanel action actually null action seem rebound new displayed component binding properties manner works fine example displayed component modifies properties directly works fine please note quick quote done routes overlay appear route website fairly new emberjs sure missing something intended behaviour nt working intended", "num": "15680", "d": "9/2017"}, {"title": "observer triggered case observed property consumed callback", "body": "case observed computed consumed observer callback observing triggered reproducible least reproduction code docs slightly modified create firstname null lastname null fullname embercomputed firstname lastname function return fullnamechanged emberobserver fullname function deal change consolelog fullname changed fullname consumed let person personcreate firstname yehuda lastname katz observer wo nt fire consumed first personget fullname yehuda katz modify first name periodically trigger observer setinterval function personset firstname mathrandom fullname changed entry log one every second case modify code contain consumption observed property start work properly", "num": "15679", "d": "9/2017"}, {"title": "misleading backtracking rerender assert message", "body": "see twiddle javascript foobuttontext embercomputed x function consolelog thistoggleproperty issavingdisabled actions togglefoo thistoggleproperty issavingdisabled thisset x mathrandom puzzled modifying issavingdisabled twice single render", "num": "15678", "d": "9/2017"}, {"title": "fails correctly set initial value", "body": "problem actually cares order attributes set using dom apis see solution discussing rwjblue probably reorder list temporary workaround use tag though involves machinations twoway bindings work correctly", "num": "15675", "d": "9/2017"}, {"title": "ember classcallcheck function error running tests prod mode", "body": "probably similar ci task running tests dev prod mode started app started failing production ember upgrade everything green normal devtests mode ci task complaining locally reproduced either running tests command line like load chrome one would see following", "num": "15671", "d": "9/2017"}, {"title": "embertestregisterwaiter dev vs prod", "body": "destructuring like breaks prod due would move see let alone defined anywhere rfc would seem reasonable prod builds purposes maintaining code styling would suspect require exporting", "num": "15670", "d": "9/2017"}, {"title": "refreshing data model update bound computed properties", "body": "router refreshes data model demand component passed model used directly changes updated expected however use computed property updates data model refresh router carried computed property component realize contrived example helps illustrate point full reproduction latest commit using nonupdatable computed properties previous commit using data model directly updating fine digging deeper data structure get computed property work properly data model coming jsonapi backend something else imagine digging data structure might ugly potentially error prone structure changes future ember data updates", "num": "15669", "d": "9/2017"}, {"title": "numeric get working arrays", "body": "", "num": "15666", "d": "9/2017"}, {"title": "track", "body": "", "num": "15663", "d": "9/2017"}, {"title": "loading routes work fastboot", "body": "get following error app first thought liquidfire causing removing liquidfire got error", "num": "15662", "d": "9/2017"}, {"title": "route hook run transition ember", "body": "ember route nt run transitioning parent route example app currentnly displays student list selecting student transitions hook route run hooks run order gt gt nt happen directly load route via hard refresh previous ember hooks run gt gt gt cases", "num": "15661", "d": "9/2017"}, {"title": "one component used several times partial view component properties uses context", "body": "", "num": "15645", "d": "9/2017"}, {"title": "linkto triggers didrender leaving route", "body": "component linkto helper inside fires didrender current route changes route model containing promise delay assume due fact linkto wants update active class watcher current route template still displayed thus didrender happens obvious didrender may happen attributes change internal helper state feels like hidden binding example scrolling components lifecycle cause error nt exist anymore", "num": "15642", "d": "9/2017"}, {"title": "ember build memory errors using ci tools", "body": "parallel babel transpiling introduced ember default broccolibabeltranspiler uses system resources cpus determine amount jobs ran parallel modern ci tools use docker help isolate builds builds running given server allows use large vms run lots builds largely isolated example vms circle ci run usually cpu cores builds limited two issue comes attempting use traditional means determine resources available program example determine number cpus using node might however information actual reports instance resources limited resources available docker container resulting whatever running thinking got access cores really two created example repo see passed failed build history fixed travis build yet tested ci tools circle ci circle ci travis ci failing default provided travis ci parallel jobs docs errors come look something like like output however many situations travis ci simply times without information bash binbash eo pipefail ember test could start watchman visit info building instrument imported external module emberdatadebug never used usrlocalbinnode void node internalmodulereadfile const functioncallbackinfo amp assertion numchars gt failed var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object node abort usrlocalbinnode node assert char const const usrlocalbinnode usrlocalbinnode internal functioncallbackarguments call void functioncallbackinfo const amp usrlocalbinnode usrlocalbinnode internal builtinhandleapicall int internal object internal isolate usrlocalbinnode var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object cleaning cleaning build failed broccoli plugin broccolimergetrees addon treefor emberconcurrency addon failed error worker terminated unexpectedly childprocess emittwo childprocessemit processchildprocesshandleonexit broccoli plugin instantiated broccolimergetreesplugin new broccolimergetrees functionbroccolimergetrees upstreammergetrees mergetrees classtreefor addonsreduce arrayreduce native classeachaddoninvoke classtreefor projectaddonsreduce exited code workaround solution provided rwjblue specifically define number jobs wish use parallel transpiling taking advantage env var", "num": "15641", "d": "9/2017"}, {"title": "mutablecells nt", "body": "hi upgrading noticed calling code returning rather value directly downgraded way back found issue started occurring package updated possibly related nt believe passing attr component unfortunately unable provide simple testcase familiar enough code working ember please let know anything else provide", "num": "15640", "d": "9/2017"}, {"title": "feature suggestion percolate stack traces", "body": "ember stacktraces hard debug due asynchronous nature javascript run loop could something like track stack traces right loop even ember debug builds something would make tracking origin exceptions much easier large hurdle newcomers", "num": "15639", "d": "9/2017"}, {"title": "variable lost using partials handlebars template", "body": "using embermodelstable try display models ember data table work expected though table rows empty cells digged source code embermodelstable found code responsible rendering cell data modelstablehbs looks like rowtemplate partial displays record variable like problem variable set partial added debug code show issue console output may variable become partial thanks help", "num": "15637", "d": "9/2017"}, {"title": "bug number literals bigger digits break", "body": "good one pass numeric reference helpercomponent works numbers digits number digits break glimmer number digits nt throw exception value received side reference believe accessoutofbounds glimmer vm quick repo reproduce note happens number literals bound values matter big value inside", "num": "15635", "d": "9/2017"}, {"title": "ember get set engineparent exported", "body": "according documentation functions accessible global seems exported", "num": "15630", "d": "9/2017"}, {"title": "ca nt build word javascript", "body": "js file vendorfortestfortestjs content copy mdn add emberclibuildjs file run command get error global error syntaxerror expected identifier found instead line log type error text syntaxerror expected identifier found instead line ok phantomjs global error syntaxerror use reserved word let strict mode line log type error text syntaxerror use reserved word let strict mode line error appears remove appimport fortestjs file test passed make ember know javascript", "num": "15629", "d": "9/2017"}, {"title": "rfc emberstring deprecation emberstring", "body": "metaissue track implementation emberjs deprecate emberstring move htmlsafe ishtmlsafe emberstring x emberstringprototypeextensions emberclibabel x blacklist present x babelpluginembermodulesapipolyfill move website deprecation guide", "num": "15624", "d": "9/2017"}, {"title": "docs release args mount documented", "body": "docs mention arguments managed docs link must scrollsearch page describes behavior changed behavior implementation began blog post example usage", "num": "15622", "d": "9/2017"}, {"title": "linkto inside partial stopped working", "body": "upgrading tests started failing inside partial stopped working linkto question rendering immediate errors generated href attribute output testing clicking link outputs warning everything else inside partial still renders fine linkto fails changing partial component fixed problem", "num": "15621", "d": "9/2017"}, {"title": "clarify emberrunscheduleonce documentation", "body": "emberrunscheduleonce documentation states musing evening nit pick problem nt necessarily anonymous function function instantiated call could easily solve problem javascript function scheduleit function logit consolelog closure runscheduleonce actions mycontext logit function longer anonymous still problem scheduleonce ca nt dedup always new instance right contrarily could easily actually solve problem javascript const logit gt consolelog closure function scheduleit runscheduleonce actions mycontext logit function anonymous arrow function giggles scheduleonce dedup always instance right completely looney opportunity improve documentation", "num": "15620", "d": "9/2017"}, {"body": "might want refer", "d": "9/2017"}, {"body": "isdestroying object model teardown component removed dom", "d": "9/2017"}, {"body": "fair enough would seem like isdestroying simply coincidentally true willdestroyelement unless missing something", "d": "9/2017"}, {"body": "error action need let bubble want get default behaviour case get desired behaviour twiddle showing improve documentation explicitly explain", "d": "9/2017"}, {"body": "yes serabe totally correct serabe thanks working updating documentation going close since nt bug", "d": "9/2017"}, {"body": "already fixed serabe pr demo", "d": "9/2017"}, {"body": "derp derp nt finding mentions github search thanks", "d": "9/2017"}, {"body": "worked bit day today really reproduce working twiddle send reproduction either via repo via ember twiddle thank", "d": "9/2017"}, {"body": "janmisek tried wrapping like", "d": "9/2017"}, {"body": "guess assertion hit foobuttontext already rendered template computed property gets updated modifying foobuttontext makes sense nothing issavingdisabled threw error message took figure easy see going looking simplified example difficult narrow working real world application", "d": "9/2017"}, {"body": "also usage pattern situation seeing obvious design flaw sample code solution able come tricking ember updating values delayed render run loops course ideal javascript foobuttontext embercomputed x function consolelog var self emberrunschedule afterrender function selftoggleproperty issavingdisabled actions togglefoo thistoggleproperty issavingdisabled var self emberrunschedule afterrender function selfset x mathrandom see twiddle", "d": "9/2017"}, {"body": "recall anything wrapped stripped prod builds right guess could run eslint errors defined correct scope described", "d": "9/2017"}, {"body": "general sort destructuring nt needed imports used instead following works long using recentish emberclibabel version import registerwaiter embertest import debug glimmerenv snip debug registerwaiter register waiter import invocation removed dead code production builds wrote bit", "d": "9/2017"}, {"body": "rwjblue mentioned issue rfc nt provide guidance modules addon martndemus nt include afaik beta channel modules implemented prefer use beta builds production global ember import way destructure blow prod builds", "d": "9/2017"}, {"body": "fwiw temporary fix add following js embertesting embertest registerwaiter ok released better way happy well", "d": "9/2017"}, {"body": "rfc nt provide guidance embertest yep identified somewhat early implementation phase rfc rfc maintained time often times final implementation different due issues found implementation find current canonical public ember modules api data readme repo used tooling embermodulescodemod eslintpluginember emberclibabel share module mapping definitions modules addon martndemus nt include opened issue ensure get deprecation notice added package afaik beta channel modules implemented prefer use beta builds production mentioned comment requirement suggestion app addon new enough emberclibabel version support snippet completely unrelated embersource embercli embernewmodulesshim emberclishims etc", "d": "9/2017"}, {"body": "great thank", "d": "9/2017"}, {"body": "reopening implemented instructed emberclibabel installed prod getting", "d": "9/2017"}, {"body": "correction emberclibabel declared installed", "d": "9/2017"}, {"body": "ugh sorry try repro see going wrong", "d": "9/2017"}, {"body": "example repo stack trace", "d": "9/2017"}, {"body": "temporary workaround solve import issue previous work around destructuring put js eslintdisable embersuavenodirectpropertyaccess noundef typeof embertest undefined embertest registerwaiter eslintenable embersuavenodirectpropertyaccess noundef", "d": "9/2017"}, {"body": "answer right answer question", "d": "9/2017"}, {"body": "myartsev using dependent key computedmodel work", "d": "9/2017"}, {"body": "kumkanillam answer works scenario scenario nt want extended discussion right place lengthy usually place answer question given time happened get derailed pixelhandler using model indeed work length array returned changes case answer embertwiddle time model refreshed new item added however situation different model refresh alter length array contents inside array case contrived github repo bar property gets updated random value looking way accomplish", "d": "9/2017"}, {"body": "add reproduction twiddle repo would fine thank", "d": "9/2017"}, {"body": "okay caused binds value service service value gets updated route hook guess bad practice supported works fine without loading routes though also works without regular value maybe liquidfire issue", "d": "9/2017"}, {"body": "sadly able reproduce minimal app", "d": "9/2017"}, {"body": "nt think much without repro", "d": "9/2017"}, {"body": "could reproduce error mentioned liquidfire issue fastboot console output upon visit sure closely related specific case though unable reproduce crash got remove liquidfire actual app", "d": "9/2017"}, {"body": "number tests area showing regression suspect experiencing situational dependent factors create reproduction shows problem describing", "d": "9/2017"}, {"body": "rwjblue detailed debugging issue seeing result trying pass id param route partial comes close issue", "d": "9/2017"}, {"body": "thanks following trying prioritize get fix soonish sorry delays", "d": "9/2017"}, {"body": "gitsahib format issue description kind hard follow would mind creating example using would really help others investigate issue also nt think ember bug far sounds question reproducible example eg embertwiddle get help also feel free reach ember community embercommunityslackcom help channel get invite slack channel", "d": "9/2017"}, {"body": "gitsahib explained guides object model gt classes instances gt initializing instances behaviour classical prototypes closing nonbug thank", "d": "9/2017"}, {"body": "link gist commented line init method mycomponent uncomment issue go away otherwise one filter fires", "d": "9/2017"}, {"body": "gitsahib please read link comment go section guides explained", "d": "9/2017"}, {"body": "putting comment please look gist link related totally link provided link gist commented line init method mycomponent uncomment issue go away otherwise one filter fires", "d": "9/2017"}, {"body": "put object creation code provided link behavior still question ember duplicating component data try change filter one component changed well", "d": "9/2017"}, {"body": "arrays objects defined directly emberobject shared across instances class avoid behavior encouraged initialize arrays object properties init ensures instance unique gitsahib mentioned doc arrayobject initialized otherwise shared instances uncomment issue go away otherwise one filter fires yes bcoz initializing filtercriteria shared instances hope helps", "d": "9/2017"}, {"body": "thank karthiick got", "d": "9/2017"}, {"body": "thanks posting issue verify bug ember framework next step create working example create reproduction issue using example product using embercli also one guard often use condition app results component destroyed andor also recreated check state object either component one properties block attempt component use dom element component", "d": "9/2017"}, {"body": "tried reproduce twiddle looks like defined nt cause errs checked code turns using thus got err canceling debounce fixed end false alarm afterwards thanks attention", "d": "9/2017"}, {"body": "appear people karma tests working step", "d": "9/2017"}, {"body": "last hours nt able get work successfully yet pretty confident nt specifically emberjs closing", "d": "9/2017"}, {"body": "issue unable resolve", "d": "9/2017"}, {"body": "chatted mwisner kiwiupover bit weekend figured new parallelism added broccolibabeltranspiler defaults paralellizing number cpu currently present unfortunately circleci shows cpu job limited concurrent processes also limited available ram fix set jobs environment variable essentially disable parallelism ci", "d": "9/2017"}, {"body": "rwjblue thanks context even circle parallelism would think split containers would always need essentially disable parallelism ci assuming mean disable broccolibabeltranspiler parallelism circle containerized parallelism right erichu also seem like correct reading something expect fix circle cpus actually available job shown prevent sort parallelism circle side splitting tests something like example", "d": "9/2017"}, {"body": "sure expect fix form circleci super think docker problem circle problem specifically maybe node docker issue able accurately detect cpumem limitations imposed docker container created repo experimentation purposes includes circleci working w workaround provided rwjblue along public circle builds however also added repo travis ci also uses docker builds nt fixed travis config file yet see travis builds failing provided travis config", "d": "9/2017"}, {"body": "thanks mwisner correct thinking mean ca nt parallelize builds", "d": "9/2017"}, {"body": "joshsmith yeah understand correctly disable parallelism within broccolibabeltranspiler circle theory using circleci parallelism would fine personally nt experimented using circleci parallelism functionality sure configuration file would look like", "d": "9/2017"}, {"body": "makes sense wanted sure drawing clear line seemed like two distinct uses parallelism think finally page noticed setting manually config prior seems like could set env var level within circle perhaps without issue", "d": "9/2017"}, {"body": "also specific testing oom issue caused build phase ember test tested running well oom result joshsmith believe setting env var level would work well nt confirmed noticed pattern setting env vars ember cli commands addons going usage patterns", "d": "9/2017"}, {"body": "without knowing anything actually works hard say whether circle docker whomever could provide fix layman feeling thinking around would transpiler could take explicit instructions many cores available could perhaps avoid problem pure inference comes place deep ignorance", "d": "9/2017"}, {"body": "update run builds successfully set circle environmental settings thanks rwjblue mwisner erichu", "d": "9/2017"}, {"body": "ran issue circleci also fixed thanks v", "d": "9/2017"}, {"body": "erichu also seem like correct reading something expect fix circle cpus actually available job shown prevent sort parallelism circle side splitting tests something like emberexam example joshsmith two concepts parallelism keep mind circleci percommand parallelism limited number cores available container group default container group allocated cpu shares guarantees get cpu cores premium configurable resources feature lets choose largersmaller share top head b circleci parallelism think many machines want split across useful test isolation might want run tests time write database less useful say transpiling assets probably want tests run transpiled assets regarding since cores guaranteed available default may able run command want may speed execution nt checked works regarding b even still use circleci parallelism speed test suite regarding fix seen longrunning issue multiple containerization tools circleci containerization tools docker lxc respectively leak information host system many common linux commands like ones used check many cores available way number years think simple fix would solved complicating things circleci changed cpu core availability model got fixed number cores job get assigned cpu shares guarantee minimum number cores fully utilized host get least many cores running underutilized host cores available tools like tend assign number cores use though available resources may change life program execution best hardcode ci scripts use guaranteed resources available code may running n machines n parallelism think way effectively isolated one another", "d": "9/2017"}, {"body": "tried app build successful well canonical advice noticeable time difference values small sample fwiw", "d": "9/2017"}, {"body": "rwjblue know recommended issue embercli repo however opened issue first discovered issue looks like found could open another embercli repo would like open another issue reference conversation know anyway easily move", "d": "9/2017"}, {"body": "reopened issue additional testing provided travisciyml config ships ember also running issue understand ember nt support circle think would nice least issue fixed shipped travisciyml file also updated title description make little generic scoped specifically circleci", "d": "9/2017"}, {"body": "erichu many thanks detailed advice helpful community understand going detail would great see canonical example documentation perframework basis although understand appreciate time would take bgentry thanks reporting time difference hoping would speed build times going set well bit disappointed since build times far biggest hindrance speeding circle jobs", "d": "9/2017"}, {"body": "oh wow glad finally found conversation happening know look first timing travis feedback tried overriding timeouts normally write support got finally led changing caused builds pass least fail right reasons thanks maybe happening travis application heavy dependencies difficult debug ignored long seem worth considering handle ember cli blueprint otherwise address", "d": "9/2017"}, {"body": "testing default box ember project without changes pass fine introduction bunch dependencies end causing error sure considered lot dependencies ember project travis defacto way ci ember addons think people start upgrading making new addons people going see recently started working upgrading dependencies emberburgermenu project getting error example", "d": "9/2017"}, {"body": "oh thank mwisner posting issue rwjblue temporary solution spent hours trying understand builds failing setting jobs trick", "d": "9/2017"}, {"body": "artcommacode really hard trouble shoot without working example reproduction issue investicate perhaps reach ember community slack find help channel get invite join slack channel visit", "d": "9/2017"}, {"body": "artcommacode chance create reproduction yet", "d": "9/2017"}, {"body": "hi rwjblue thanks followup currently trying learn much possible ember reproduce", "d": "9/2017"}, {"body": "closing issue according triage policy reopen reproduction time thank", "d": "9/2017"}, {"body": "thanks suggestion moved rfc repository", "d": "9/2017"}, {"body": "duplicate thank", "d": "9/2017"}, {"body": "think related glimmer compiler encodes primitive literals javascript coerces numbers integers applying bitwise operations use store type information boolean string object etc literals lower bits practice means even though javascript allows represent values combination using bitwise operators b utilizing lower bits means ca nt represent values greater one way deal would lessefficient primitive type gt integers although maybe makes sense external number pool like strings maybe wycats chancancode chime since system came", "d": "9/2017"}, {"body": "fwiw rather unlikely someone hardcode number big real code numbers usually come somewhere binding unusual integration tests", "d": "9/2017"}, {"body": "made twiddle reproduction interested digging without cloning", "d": "9/2017"}, {"body": "think solution problem use constant large numbers floats could also use operand slots get bigger number tempted say optimization work limited relatively small bit integers", "d": "9/2017"}, {"body": "cibernox think need document current upper limit number least support bigger integer cc locks", "d": "9/2017"}, {"body": "ask first glimmervm expert estimation big change think fixed within weeks would nt document", "d": "9/2017"}, {"body": "think fix glimmervm arbitrary limitations helper arguments however since somewhat edge case likely wo nt address possibly even depends amount work fix backport", "d": "9/2017"}, {"body": "able update gettting digits number landing page really edge case cryingcatface", "d": "9/2017"}, {"body": "roschaefer temporary workaround put number componentcontroller bind", "d": "9/2017"}, {"body": "absolutely problem within project integration tests passed number bigger digits turns inside component", "d": "9/2017"}, {"body": "thank", "d": "9/2017"}, {"body": "ember build process uses babel transpiling code version phantomjs old browsers recognise unfortunately happens files folder wo nt transpile files folder seeing error", "d": "9/2017"}, {"body": "generally reserve issue tracker bugs ember seems like qa x type thing better served stack overflow slack manimishra mentioned also ed files transpiled going close please cross link post update thread answer find future searchers", "d": "9/2017"}, {"body": "locks ptal last part", "d": "9/2017"}, {"body": "come across similar problem seems partial rendered inside yielded block component nt receive yielded parameters component example hbs namehbs name js export default componentextend name ivan hbs yield name someroutetemplatehbs instance variable partial undefined", "d": "9/2017"}, {"body": "thing happens iteration value nt passed context partial record index undefined partial", "d": "9/2017"}, {"body": "reproduction twiddle working", "d": "9/2017"}, {"body": "interestingly enough still reference lost variable property name eg could sure help debugging issue", "d": "9/2017"}, {"body": "thank", "d": "9/2017"}, {"body": "serabe ah fantastic thank", "d": "9/2017"}, {"body": "closest provide reproduction embertwiddle bit behind ember versions one ca nt actually switch beta yet easy template reproduce locally test whatnot", "d": "9/2017"}, {"body": "make twiddlejson like use ember beta console tried twiddle seems work fine could nt reproduce issue", "d": "9/2017"}, {"body": "thanks urbany think twiddle borked attempting add emberdata work repro isolate wrong handful ideas broken beta test closing narrow problem", "d": "9/2017"}, {"body": "urbany found problem ember version", "d": "9/2017"}, {"body": "thank report", "d": "9/2017"}, {"body": "probably related", "d": "9/2017"}, {"body": "test production build show error either", "d": "9/2017"}, {"body": "recently project classnames set string instead array components respective based conversation assuming assert thats place causing failure correctly", "d": "9/2017"}, {"body": "believe actually coerces array based findings tried link document comment", "d": "9/2017"}, {"body": "anybody able reproduce", "d": "9/2017"}, {"body": "closing happy work messaging andor identification failure scenario end reproduction", "d": "9/2017"}, {"body": "impact api docs sitestool chain wip writeup get full stack running locally emberjs yuidocs emberjsonapidocs emberapidocs minimally viable example style modules module links nt work minimally viable example simply named modules ie repos run locally changed routing components controllers ember data expected work", "d": "9/2017"}, {"body": "summarize switch modules documentation without breaking website api docs toolchain run whole stack locally website links work slight changes front end make links work requires change tooling jsonapidocs nt think anything major means dictated want docs documentation blocks look technical barrier", "d": "9/2017"}, {"body": "samples documentation looks like module ember submodule emberrouting class used define individual routes refer routing guide documentation class route namespace ember extends emberobject uses emberactionhandler uses emberevented since public using nested module using simple module names one benefit using nested type module names developers already need know call packages code might well documented module name beginnerintermediate ember devs intuitive know import line look like given package one drawback links need redone bit work nt follow structure package reference need documented way", "d": "9/2017"}, {"body": "ping", "d": "9/2017"}, {"body": "testing successful unsuccessful outcomes rendering component handles promises common requirement surprised nobody else chimed", "d": "9/2017"}, {"body": "issue related", "d": "9/2017"}, {"body": "also seeing behavior eula acceptance route configured ember redirect works fine link active states incorrectly displaying user", "d": "9/2017"}, {"body": "closing issue according triage policy reopen reproduction time thank", "d": "9/2017"}, {"body": "serabe help first time diving ember internals", "d": "9/2017"}, {"body": "rwjblue serabe fixing changes app potential fix following assumption application route model hook finish individual route lifecycle except hook run example nt find documentation please correct assumption wrong", "d": "9/2017"}, {"body": "ping tsteuwer satisfied alexspeller answer", "d": "9/2017"}, {"body": "closing issue according triage policy reopen follow time thank", "d": "9/2017"}, {"body": "next steps addons add tests support namespaces presume called three arguments third new must remain things already supported resolver api ember change passed value looking example already added glimmerwrapper ember behind feature flag use pass referrer templates new argument must added behind ember feature flag exactly user typed ember pass argument time namespace specifier string resolve lookupstring referrer literalstring injectservice foobar glimmerwrapperresolverresolve service foobar gilmmerresolverresolve service foobar injectservice addonname servicename glimmerwrapperresolverresolve service null addonname servicename glimmerresolverresolve service addonnameservicesservicename foobar glimmerwrapperresolverresolve template componentsfoobar referrer glimmerresolverresolve template foobar referrer addonname componentname glimmerwrapperresolverresolve template component referrer addonname componentname glimmerresolverresolve template addonnamecomponentscomponentname referrer repo add tests support calling third argument namespaced services component probably means extending api js factoryfor lookupstring referrer literalstring lookup lookupstring referrer literalstring", "d": "9/2017"}, {"body": "paired fix kpfefferle last friday kpfefferle open pr push branch keep moving", "d": "9/2017"}, {"body": "serabe recently encountered issue really clear closed fixed somewhere else still nt seen anything logs", "d": "9/2017"}, {"body": "followed thread got similar example working requirements live list adding array nobody mentioned anything removing order remove items list computed property must defined similar", "d": "9/2017"}, {"body": "got bitten app today happened outside test environment workaround generating concrete controller worked feels like controller injection work autogenerated controllers", "d": "9/2017"}, {"body": "seems related", "d": "9/2017"}, {"body": "running issue", "d": "9/2017"}, {"body": "lbarsukov think defined relationships good chance one say two models question answer return answers question question serializer refers answer define relationship properly question model export default dsmodelextend answers dshasmany answers never reference questionanswers omit answer model export default dsmodelextend question dsbelongsto question data comes across defining multiple questionanswer pairs expecting relationship nt infers question modified middle render", "d": "9/2017"}, {"body": "use onmouseover action someaction similar problem", "d": "9/2017"}, {"body": "fwiw still seeing similar error ember two routes identical query params one route redirecting overriding query params transition options", "d": "9/2017"}, {"body": "chriskrycho locks issue seems stale close feel free reopen feel necessary", "d": "9/2017"}, {"body": "mdentremont seems promise resolution rendering timing contribute behavior demonstrated example provided forked example show access params parent template close feel free reopen necessary", "d": "9/2017"}, {"body": "ran today ember errors using errors leave leading slash", "d": "9/2017"}, {"body": "kybishop since issue work around nt verified bug ember close feel free reach help work around ember community slack channel tool get invite feel free reopen necessary", "d": "9/2017"}, {"body": "seems related nullnullnullemberkeyboard", "d": "9/2017"}, {"body": "dont think query params array support found otherwise since issue activity close feel necessary reopen please would like request feature feel free reopen rfc issue pr", "d": "9/2017"}, {"body": "fixes resolve issue", "d": "9/2017"}, {"body": "toddjordan know issue closed per fix", "d": "9/2017"}, {"body": "happy closing get confirmation issue indeed resolved emrvb verify lets close responses come", "d": "9/2017"}, {"body": "toddjordan pixelhandler stumbled upon report researching another problem partially recreated jsbin twiddle broken seems work fine ca nt tell whether particular pull fixed", "d": "9/2017"}, {"body": "nathanhammond issue seems stale close feel free reopen necessary", "d": "9/2017"}, {"body": "serabe rwjblue pr unmergable also specific question needs team response", "d": "9/2017"}, {"body": "quite likely need take point", "d": "9/2017"}, {"body": "left comment explanation thanks patience bryanaka", "d": "9/2017"}, {"body": "lolmaus issue inactive time still issue", "d": "9/2017"}, {"body": "nt think repoen run someone reports", "d": "9/2017"}, {"body": "toddjordan andrewjmc close able identify bug andrewjmc find work around also think necessary reopen issue later time feel free", "d": "9/2017"}, {"body": "gosh barely remember nt find workaround remember moved different things best wishes andrew", "d": "9/2017"}, {"body": "dmagunov curious still issue found work around issue inactive nt able identify bug close feel free reopen need", "d": "9/2017"}, {"body": "robbiepitts hate say really avoid helper one work arounds eg using binding attribute alltouch close issue stale feel necessary reopen feel free", "d": "9/2017"}, {"body": "nt wan na reopen wan na add since ran similar issue lot digging around wan na help anyone else issue problem input fields needed readonly bound specific variable basing property watching variable attribute binding like making readonly attribute added regardless boolean value set false thread discusses setting property html document false html decided make field solution problem started digging around found comment docs says nt want attribute render set return value monitored property removed readonly property nt want works ember well looks like added docs", "d": "9/2017"}, {"body": "aroberts able verify issue bug activity lulled close still issue feel free reopen also found work around please post comment", "d": "9/2017"}, {"body": "fiddle site still supports emberlatest happy port reproduction clear", "d": "9/2017"}, {"body": "aroberts twiddle", "d": "9/2017"}, {"body": "hah posted discussemberjscom guess try honbo hack see works still hopefully still works yrs later", "d": "9/2017"}, {"body": "uhhh trying reproduce success honbo snippet adding route right", "d": "9/2017"}, {"body": "ohhhh run snippet calling runtime right", "d": "9/2017"}, {"body": "ok got deprecation warnings works thanks honbo", "d": "9/2017"}, {"body": "dwickern thanks indeed lot simpler due multiple dynamic segments route yes updated code use solution seems work expected thanks", "d": "9/2017"}, {"body": "mmun wondering thoughts", "d": "9/2017"}, {"body": "zernyu long time ago still works ember array resolved list parameters matching function signature thanks", "d": "9/2017"}, {"title": "jquerydeferred passed jquerydeferredresolve value chained jquerydeferred object", "body": "given let promise gt new promise resolve gt resolve native promise new promise resolve reject gt settimeout gt reject seconds exceeded resolve promise data gt consolelog data catch err gt consoleerror err native promise logged chained constructor using pattern version jquery deferred object logged chained let promise gt new deferred dfd gt dfdresolve jquerydeferred promise new deferred dfd gt settimeout gt dfdreject seconds exceeded dfdresolve promise data gt consolelog data fail err gt consoleerror err jsfiddle expected result chained actual result object result chromium firefox", "num": "3802", "d": "9/2017"}, {"title": "function working properly arrow functions", "body": "description faced problem function using arrow function inside eg always referred last element array case simple array returns window calling however regular syntax working well behavior regular function checked chrome link test case", "num": "3801", "d": "9/2017"}, {"title": "condition working properly", "body": "used jquery check condition application code val lt thus purpose condition input field value nt allow zero values give value show alert zero allowed change input value show alert zero allowed pls give example condition code", "num": "3800", "d": "9/2017"}, {"title": "infinite loop mutationobserver select option checked", "body": "description set mutationobserver select element calls listener function within listener function call jquery check selected options listener function called immediately mutationobserver set jquery gets stuck infinite loop obviously happen tried replacing jquery zepto infinite loop occur tested windows chrome firefox link test case set reduced test case abort iterations avoid crashing browser see alert", "num": "3799", "d": "9/2017"}, {"title": "ajax converts requests jsonp request data includes", "body": "description calling data includes set turns request jsonp request causes additional headers sent additional added array latter turn causes converter used parse response server would throw error tell caused datatype used test request data would match string contains currently worked around issue explicitly setting could nt think case link test case ok ajax url type post datatype json data jsonstringify foo bar done function r consolelog r ok ajax url type post datatype json data jsonstringify foo bar done function r consolelog r", "num": "3798", "d": "9/2017"}, {"title": "password regex javascript", "body": "password regex javascript password must minimum length characters one uppercase one lowercase one special characters one alphanumeric values pls given password regex code", "num": "3797", "d": "9/2017"}, {"title": "uploaded documents issues viewing document", "body": "upload one document image click view uploaded document display document document preview popup right click click open image new tab throw error message click save image option file properly downloaded images file proper amp file proper need display image properly new tab need save file properly note save image open new tab working fine note right click image open throw error message", "num": "3796", "d": "9/2017"}, {"title": "new bug ajax", "body": "description jquery\u7248\u672c\u4fe1\u606f\u4ee3\u66ff link test case", "num": "3795", "d": "9/2017"}, {"title": "display records found html page", "body": "created ajax method bind data html page data found display message html page tell records found append jquery code", "num": "3794", "d": "9/2017"}, {"title": "jquery", "body": "hi jquery support support", "num": "3793", "d": "9/2017"}, {"title": "remove packagelockjson", "body": "description npm even version included latest nodejs regenerates install system nt support optional dependencies supported os lockfile generated removes optional deps lockfile effect everyone firing repo os macos immediately get dirty state repo dependency subtree gets removed really bad experience link test case", "num": "3792", "d": "9/2017"}, {"title": "password validation expression jquery", "body": "description used latest jquery version check password regular expression website password mandatory password must char must combination uppercase lowercase alphanumeric special characters give password validation check expressions link test case", "num": "3789", "d": "9/2017"}, {"title": "window height sent wrong value", "body": "description used window height found page height resize tables width height page smaller metod sent big confused wrong number problem happen chrome firefox happen ie finally used windowinnerheight problem solved link test case htmltxt", "num": "3788", "d": "9/2017"}, {"title": "jquery issue deferred method", "body": "description detected problem jquery function minute freeze web page chrome version build oficial bits firefox version file line case solved temporarily issue adding ms delay parameter exceptions stack chrome violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took sorry ugly english link test case", "num": "3787", "d": "9/2017"}, {"title": "", "body": "ca nt load js found jquerycom also ca nt load js codejquerycom", "num": "3785", "d": "9/2017"}, {"title": "latest version load windows", "body": "specifically line error line char error expected identifier code microsoft jscript compilation error registration catch function error jqueryreadyexception error apparently catch invalid method new jquery find manual", "num": "3784", "d": "9/2017"}, {"title": "flask app valid json jquery called win unexpected token", "body": "valid json checked jsonlint flask application end point def supportjsonp f wraps jsonified output jsonp supportjsonp apiroute releasedata def apidata return jsondumps data sortkeystrue defaultjsonutildefault mongo server settings mongodexe rest jsonp chrome browser columns data etc validated jsonlint inside ajax parsing jquery get called link test case", "num": "3783", "d": "9/2017"}, {"title": "empty variable get", "body": "hi sure wrong trying generate html code based get data js var content document ready function amaingroup click function var gid tdata id split var div li divcbphrsub divcbphrsubinner get null action getgroups groupid gid languageid lngid function var obj dactionobject obj function el get null action getgroups groupid elid languageid lngid function node var nodeactionobject function el content eltitle content get null action getgroups groupid elid languageid lngid function var function el content eltitle content content consolelog content html", "num": "3780", "d": "9/2017"}, {"title": "error syntax error unrecognized expression", "body": "jquery earlier version working alright till upgraded v error started showing dev console fyi using firefox ubuntu", "num": "3779", "d": "9/2017"}, {"title": "safari ios fail boundedstyle relative adjustment", "body": "description safari ios fail new test added link test case", "num": "3777", "d": "9/2017"}, {"title": "broken events jquery object stored referense removed appended", "body": "seems like unexpected behavior steps reproduce create jquery object attach event store jquery object inside object append dom object remove dom append expected event still working got event longer triggers example", "num": "3776", "d": "9/2017"}, {"title": "height element scroll bar different ie amp jquery later", "body": "height element scroll bar different sample code result follows chrome ie amp jquery ie amp jquery later reverting following code expected value returned", "num": "3775", "d": "9/2017"}, {"body": "backwards compatibility older versions jquery deferred resolve fulfills values exactly provided supplied registered callbacks unmodified however deferred fully promisesa compatible deferreds returned always unwrap fulfillment values providing callbacks short may receive thenable never", "d": "9/2017"}, {"body": "arrow functions nt binding inherit one outer closure nothing jquery change", "d": "9/2017"}, {"body": "js element parentsuntil untilelement body addback el gt let el", "d": "9/2017"}, {"body": "help forum please try stackoverflow", "d": "9/2017"}, {"body": "current dom apis provide way correctly rooted query arbitrary element nt always return expected results vs example ancestor root element expression always returns elements root jquery returns elements root work around problem jquery temporarily adds attribute root triggers mutation observer already root element jquery use either add select avoid using", "d": "9/2017"}, {"body": "yep ok would explain thanks worked around temporarily disconnecting observer calling find calling observe using id would nt really appropriate think probably best solution case short manually enumerating children select looking one checked status", "d": "9/2017"}, {"body": "passing data string default formurlencoded encoding appear string method like would changed need either encode string change content type plenty examples stackoverflow elsewhere example", "d": "9/2017"}, {"body": "open tickets jquery repos ask help stackoverflow", "d": "9/2017"}, {"body": "jquery bug report", "d": "9/2017"}, {"body": "oh solve bug idea", "d": "9/2017"}, {"body": "support forum please ask stackoverflow somewhere else", "d": "9/2017"}, {"body": "url submitted contain fields urlencoded via similar encoding url still seeing please submit test case requested issue template", "d": "9/2017"}, {"body": "jquery internet explorer see browser support", "d": "9/2017"}, {"body": "nebrot way support dependency", "d": "9/2017"}, {"body": "need support old browsers like ie use jquery", "d": "9/2017"}, {"body": "way make jquery amp newer work ie says need support older browsers like internet explorer opera safari use jquery", "d": "9/2017"}, {"body": "hmm nt regenerate lockfile otherwise point lockfile reported npm", "d": "9/2017"}, {"body": "seems open since august feedback npm team far", "d": "9/2017"}, {"body": "interesting install everything opposite problem", "d": "9/2017"}, {"body": "related jquery core perhaps could ask help stackoverflow", "d": "9/2017"}, {"body": "provide test case", "d": "9/2017"}, {"body": "test code pc resize browser", "d": "9/2017"}, {"body": "lot going example reduced test case seems work fine", "d": "9/2017"}, {"body": "ca nt anything nt test case millions reasons problem may occur many would cause code external jquery provide test case", "d": "9/2017"}, {"body": "right issue comes another component datatablenet still looking fix thanks", "d": "9/2017"}, {"body": "live tried poland works correctly", "d": "9/2017"}, {"body": "china mainland try clear browser cache", "d": "9/2017"}, {"body": "aulvi gnarf know done response reports like think dealt past", "d": "9/2017"}, {"body": "works fine regardless browser cache problem must isolated location config try another browser", "d": "9/2017"}, {"body": "cced maxcdn support one sure follow uptest", "d": "9/2017"}, {"body": "tested found issues multiple locationisp china exempt hangzhoutelecom got dns failure affect one tho get additional info like cityisp make requests linuxmac run dusan maxcdn", "d": "9/2017"}, {"body": "really common think would gotten lot reports isp country must blocking either intentionally misconfiguration workaround host jquery server", "d": "9/2017"}, {"body": "jquery works fine windows error message think trying run javascript file windows command line script using wscript via file association try asking help stackoverflow", "d": "9/2017"}, {"body": "ajax request jsonp json padding least think padding since ca nt reach localhost check server would need send json padding flask mailing list help forum could ask questions rather bug tracker", "d": "9/2017"}, {"body": "bug jquery closing", "d": "9/2017"}, {"body": "sounds like request programming help bug report much code logic multiple methods used etc clear exactly reported please look help stack overflow", "d": "9/2017"}, {"body": "read issue template links sounds like issue", "d": "9/2017"}, {"body": "addition elements bound events jquery data associated elements removed remove elements without removing data events use instead", "d": "9/2017"}, {"body": "appears duplicate", "d": "9/2017"}, {"body": "thanx understand height element scroll bar different older version sad", "d": "9/2017"}, {"body": "already fixed next release restore correct behavior", "d": "9/2017"}, {"body": "tried build master sample code follows appendto body height result chrome jquery current version height exclude scrollbar height clientheight jquery height equals clientheight jquery height sum padding content height", "d": "9/2017"}, {"body": "note always return content height regardless value css property content height height css content box scrollbars subtracted use include padding additionally include borders need anything please post live example jsfiddlejs binetc investigate", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "thanks git build looks correct", "d": "9/2017"}, {"body": "thanks lot result follows windows chrome correct spec good bug fix different", "d": "9/2017"}, {"body": "thanks opening issue proper fix users host test files ajax tests get revamp anyway nt think practical expect tests hostable recommended installation method way installation methods found jquerydist repo readme turn also jquery docs npm advanced method involves building jquery grunt require cloning repo would expect advanced users ones hosting tests", "d": "9/2017"}, {"body": "tomnomnom also note development repo lot things nt cloned production environment also contains release files timmywil says someone custom build ever need clone repo reason expose server want provide info found send security jquerycom take look", "d": "9/2017"}, {"body": "dmethvin sent email suggested thank aware users nt meant clone repo deployment imo would better fix issue rely users always right thing demonstrably", "d": "9/2017"}, {"body": "tomnomnom removing file would fix issue mask ca nt think possible xss every file commit repo whole repository designed secure publicly exposed rather pretend make secure especially changes repo like introduce xss issues people deploying whole repo anyway one way fix issue sites end stopping deployment whole repository", "d": "9/2017"}, {"body": "record think open addressing server vulnerabilities given run publicly ways well annoying someone could attack jenkins build server however client vulnerabilities nt apply build server issue detailed report vulnerability allows one echo plain text javascript file dynamically served build server intentional nt attack surface given web browsers nt grant crossorigin rights foreign script loading javascript domain page domain b runs way would run domain b think cdns nt provide crossorigin access domain unlike eg crossorigin html iframe someone host production server nt static uses secure cookies domain would pose threat would first require html page server actual xss vector eg something allows arbitrary html injection page turn enables attacker insert script tag jsonpphp somehow change url existing script tag", "d": "9/2017"}, {"body": "krinkle afraid true set header interpreted browsers xss vector required hosted example try going link firefox chrome xss auditor kicks despite lack header firefox", "d": "9/2017"}, {"body": "tomnomnom aye yeah fact php even outputs contenttype explicitly default think still test confirms able support jsonp response tag contenttype wrong quite common web unfortunately however make particular test case hardcoded callback nam supports whitelisted pattern callback name lands make pr sets proper contenttype also validate callback name reject invalid values mgol could reopen assign", "d": "9/2017"}, {"body": "krinkle ca nt assign reason keep mind nt want get bottomless pit possible vulnerabilities caused people using repo unusual ways another point even add guard guard would necessarily propagate everyone may hosting whole repo would pull changes folder hosted ca nt even guess crazy stuff could exposed", "d": "9/2017"}, {"body": "reopen info", "d": "9/2017"}, {"body": "thanks opening issue however moving away messing properties event objects unless absolutely necessary think best get way properties like words think remain consistent drop", "d": "9/2017"}, {"body": "happen actually throw exception", "d": "9/2017"}, {"body": "throw yes jquery nt catch right time currently see sample code original post trycatch would resolve issue nt time work pr personally", "d": "9/2017"}, {"body": "real question purpose setting option request data used final url option set string already serialized object class provides method serializes object properly conflating nt use seems wrong", "d": "9/2017"}, {"body": "documented prevent automatic processing converting query string get requests appending url argument made affect serialization url manipulation strikes confusing nt actually prevent manipulation matter useless dave points would someone want appended url hard time imagining plausible purpose ignoring exposing seems accord user intentions matter though clear needs update", "d": "9/2017"}, {"body": "hear simply ca nt agree change make following code work anymore many situations far simpler serialize url parameters beforehand rather construct data structure sole purpose accomodating jquery internal serialization hence example object custom pretty much covers scenario think clearly problem documentation implies supposed prevent addition data processed ie transformed still used nt want data added url nt put options first place data problem need additional option ignore btw predates ajax rewrite always behaved way aside called makes using antipattern pretty much situation hence introduction prefilters safe mess options someone wants handle data manually like suggest need create option together prefilter checks modifies url accordingly wo nt break ajax caching mechanism unlike", "d": "9/2017"}, {"body": "hi jaubourg always glad data processed ie transformed still used want data used one use cases precipitated ticket someone wanted serialize data json rather formencode someone wants handle data manually like suggest need create option together prefilter checks modifies url accordingly ok prefilter might take convert stringified object alternatively object prefilter decide whether convert based method specific endpoint url custom options whatever caller treating url endpoint black box nt want worry data format seems like prefilter good solution implemented scattered callers nt need worry caller implementing endpoint interface call wrapper nt use convert data string make call making code changes definitely think need make docs changes sure see lot utility applies requests entity bodies specific transports almost say nt use", "d": "9/2017"}, {"body": "hi dmethvin always glad argue tickets please note already potentially processed prefilters called custom option available route nt use recommandation spot time need provide properly serialized query object custom handles serialization indeed cases rare beside using option change way another option handled quite antipattern option would better ahem backward compatibility nt provide automagical serialization within ajax architecture following would definitely make obsolete", "d": "9/2017"}, {"body": "sure right place post sorry stumbled upon issue jquery reloading top linking anchor tag id mentioned understand closed thought could maybe help solution using core sorry could nt find thread hoping quickly help anyone issue", "d": "9/2017"}, {"body": "nt know answer offhand based code snippet could create new ticket jsfiddle jsbin per issue template would great", "d": "9/2017"}, {"body": "really helped drupal site submenus longer displayed add two backslash jquery function", "d": "9/2017"}]