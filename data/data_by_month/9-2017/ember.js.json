[{"title": "component isdestroying flag false willdestroyelement event function", "body": "willdestroyelement isdestroying flag false twiddle sure loading twiddle new browser tab needed choose ember version dependencies properly render previously using issue nt present however select twiddle issue present may widespread issue checking isdestroying willdestroyelement function redundant many use cases able refactor code avoid issue may able", "num": "15684", "d": "9/2017"}, {"title": "route actions prevents errortemplate rendering", "body": "hi route error template render ever error thrown model hook however want catch error route action template never appears first assumption would take care may behindthescenes magic aware nt seem case plus could nt find anything documentation around error action anything providing error transition twiddle browse foo route notice error template appears comment action works expected let know missed something obvious behavior documented anywhere", "num": "15682", "d": "9/2017"}, {"title": "range input work negative values", "body": "reproduction", "num": "15681", "d": "9/2017"}, {"title": "binding actions component helper fails component changed dynamically", "body": "route lives slideout panel shows quick quote workflow initially shows default component user navigate back forth bunch steps component displayed determined qqcomponent property action navigatequickquotepanel changes value qqcomponent based passed parameters works fine initially value qqcomponent changes new component displayed however point appears onnavigate property pointing navigatequickquotepanel action actually null action seem rebound new displayed component binding properties manner works fine example displayed component modifies properties directly works fine please note quick quote done routes overlay appear route website fairly new emberjs sure missing something intended behaviour nt working intended", "num": "15680", "d": "9/2017"}, {"title": "observer triggered case observed property consumed callback", "body": "case observed computed consumed observer callback observing triggered reproducible least reproduction code docs slightly modified create firstname null lastname null fullname embercomputed firstname lastname function return fullnamechanged emberobserver fullname function deal change consolelog fullname changed fullname consumed let person personcreate firstname yehuda lastname katz observer wo nt fire consumed first personget fullname yehuda katz modify first name periodically trigger observer setinterval function personset firstname mathrandom fullname changed entry log one every second case modify code contain consumption observed property start work properly", "num": "15679", "d": "9/2017"}, {"title": "misleading backtracking rerender assert message", "body": "see twiddle javascript foobuttontext embercomputed x function consolelog thistoggleproperty issavingdisabled actions togglefoo thistoggleproperty issavingdisabled thisset x mathrandom puzzled modifying issavingdisabled twice single render", "num": "15678", "d": "9/2017"}, {"title": "fails correctly set initial value", "body": "problem actually cares order attributes set using dom apis see solution discussing rwjblue probably reorder list temporary workaround use tag though involves machinations twoway bindings work correctly", "num": "15675", "d": "9/2017"}, {"title": "ember classcallcheck function error running tests prod mode", "body": "probably similar ci task running tests dev prod mode started app started failing production ember upgrade everything green normal devtests mode ci task complaining locally reproduced either running tests command line like load chrome one would see following", "num": "15671", "d": "9/2017"}, {"title": "embertestregisterwaiter dev vs prod", "body": "destructuring like breaks prod due would move see let alone defined anywhere rfc would seem reasonable prod builds purposes maintaining code styling would suspect require exporting", "num": "15670", "d": "9/2017"}, {"title": "refreshing data model update bound computed properties", "body": "router refreshes data model demand component passed model used directly changes updated expected however use computed property updates data model refresh router carried computed property component realize contrived example helps illustrate point full reproduction latest commit using nonupdatable computed properties previous commit using data model directly updating fine digging deeper data structure get computed property work properly data model coming jsonapi backend something else imagine digging data structure might ugly potentially error prone structure changes future ember data updates", "num": "15669", "d": "9/2017"}, {"title": "numeric get working arrays", "body": "", "num": "15666", "d": "9/2017"}, {"title": "track", "body": "", "num": "15663", "d": "9/2017"}, {"title": "loading routes work fastboot", "body": "get following error app first thought liquidfire causing removing liquidfire got error", "num": "15662", "d": "9/2017"}, {"title": "route hook run transition ember", "body": "ember route nt run transitioning parent route example app currentnly displays student list selecting student transitions hook route run hooks run order gt gt nt happen directly load route via hard refresh previous ember hooks run gt gt gt cases", "num": "15661", "d": "9/2017"}, {"title": "one component used several times partial view component properties uses context", "body": "", "num": "15645", "d": "9/2017"}, {"title": "linkto triggers didrender leaving route", "body": "component linkto helper inside fires didrender current route changes route model containing promise delay assume due fact linkto wants update active class watcher current route template still displayed thus didrender happens obvious didrender may happen attributes change internal helper state feels like hidden binding example scrolling components lifecycle cause error nt exist anymore", "num": "15642", "d": "9/2017"}, {"title": "ember build memory errors using ci tools", "body": "parallel babel transpiling introduced ember default broccolibabeltranspiler uses system resources cpus determine amount jobs ran parallel modern ci tools use docker help isolate builds builds running given server allows use large vms run lots builds largely isolated example vms circle ci run usually cpu cores builds limited two issue comes attempting use traditional means determine resources available program example determine number cpus using node might however information actual reports instance resources limited resources available docker container resulting whatever running thinking got access cores really two created example repo see passed failed build history fixed travis build yet tested ci tools circle ci circle ci travis ci failing default provided travis ci parallel jobs docs errors come look something like like output however many situations travis ci simply times without information bash binbash eo pipefail ember test could start watchman visit info building instrument imported external module emberdatadebug never used usrlocalbinnode void node internalmodulereadfile const functioncallbackinfo amp assertion numchars gt failed var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object node abort usrlocalbinnode node assert char const const usrlocalbinnode usrlocalbinnode internal functioncallbackarguments call void functioncallbackinfo const amp usrlocalbinnode usrlocalbinnode internal builtinhandleapicall int internal object internal isolate usrlocalbinnode var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object var r bindingread fd buffer offset length position error enomem enough memory read objectfsreadsync tryreadsync objectfsreadfilesync objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require object cleaning cleaning build failed broccoli plugin broccolimergetrees addon treefor emberconcurrency addon failed error worker terminated unexpectedly childprocess emittwo childprocessemit processchildprocesshandleonexit broccoli plugin instantiated broccolimergetreesplugin new broccolimergetrees functionbroccolimergetrees upstreammergetrees mergetrees classtreefor addonsreduce arrayreduce native classeachaddoninvoke classtreefor projectaddonsreduce exited code workaround solution provided rwjblue specifically define number jobs wish use parallel transpiling taking advantage env var", "num": "15641", "d": "9/2017"}, {"title": "mutablecells nt", "body": "hi upgrading noticed calling code returning rather value directly downgraded way back found issue started occurring package updated possibly related nt believe passing attr component unfortunately unable provide simple testcase familiar enough code working ember please let know anything else provide", "num": "15640", "d": "9/2017"}, {"title": "feature suggestion percolate stack traces", "body": "ember stacktraces hard debug due asynchronous nature javascript run loop could something like track stack traces right loop even ember debug builds something would make tracking origin exceptions much easier large hurdle newcomers", "num": "15639", "d": "9/2017"}, {"title": "variable lost using partials handlebars template", "body": "using embermodelstable try display models ember data table work expected though table rows empty cells digged source code embermodelstable found code responsible rendering cell data modelstablehbs looks like rowtemplate partial displays record variable like problem variable set partial added debug code show issue console output may variable become partial thanks help", "num": "15637", "d": "9/2017"}, {"title": "bug number literals bigger digits break", "body": "good one pass numeric reference helpercomponent works numbers digits number digits break glimmer number digits nt throw exception value received side reference believe accessoutofbounds glimmer vm quick repo reproduce note happens number literals bound values matter big value inside", "num": "15635", "d": "9/2017"}, {"title": "ember get set engineparent exported", "body": "according documentation functions accessible global seems exported", "num": "15630", "d": "9/2017"}, {"title": "ca nt build word javascript", "body": "js file vendorfortestfortestjs content copy mdn add emberclibuildjs file run command get error global error syntaxerror expected identifier found instead line log type error text syntaxerror expected identifier found instead line ok phantomjs global error syntaxerror use reserved word let strict mode line log type error text syntaxerror use reserved word let strict mode line error appears remove appimport fortestjs file test passed make ember know javascript", "num": "15629", "d": "9/2017"}, {"title": "rfc emberstring deprecation emberstring", "body": "metaissue track implementation emberjs deprecate emberstring move htmlsafe ishtmlsafe emberstring x emberstringprototypeextensions emberclibabel x blacklist present x babelpluginembermodulesapipolyfill move website deprecation guide", "num": "15624", "d": "9/2017"}, {"title": "docs release args mount documented", "body": "docs mention arguments managed docs link must scrollsearch page describes behavior changed behavior implementation began blog post example usage", "num": "15622", "d": "9/2017"}, {"title": "linkto inside partial stopped working", "body": "upgrading tests started failing inside partial stopped working linkto question rendering immediate errors generated href attribute output testing clicking link outputs warning everything else inside partial still renders fine linkto fails changing partial component fixed problem", "num": "15621", "d": "9/2017"}, {"title": "clarify emberrunscheduleonce documentation", "body": "emberrunscheduleonce documentation states musing evening nit pick problem nt necessarily anonymous function function instantiated call could easily solve problem javascript function scheduleit function logit consolelog closure runscheduleonce actions mycontext logit function longer anonymous still problem scheduleonce ca nt dedup always new instance right contrarily could easily actually solve problem javascript const logit gt consolelog closure function scheduleit runscheduleonce actions mycontext logit function anonymous arrow function giggles scheduleonce dedup always instance right completely looney opportunity improve documentation", "num": "15620", "d": "9/2017"}, {"body": "might want refer", "d": "9/2017"}, {"body": "isdestroying object model teardown component removed dom", "d": "9/2017"}, {"body": "fair enough would seem like isdestroying simply coincidentally true willdestroyelement unless missing something", "d": "9/2017"}, {"body": "error action need let bubble want get default behaviour case get desired behaviour twiddle showing improve documentation explicitly explain", "d": "9/2017"}, {"body": "yes serabe totally correct serabe thanks working updating documentation going close since nt bug", "d": "9/2017"}, {"body": "already fixed serabe pr demo", "d": "9/2017"}, {"body": "derp derp nt finding mentions github search thanks", "d": "9/2017"}, {"body": "worked bit day today really reproduce working twiddle send reproduction either via repo via ember twiddle thank", "d": "9/2017"}, {"body": "janmisek tried wrapping like", "d": "9/2017"}, {"body": "guess assertion hit foobuttontext already rendered template computed property gets updated modifying foobuttontext makes sense nothing issavingdisabled threw error message took figure easy see going looking simplified example difficult narrow working real world application", "d": "9/2017"}, {"body": "also usage pattern situation seeing obvious design flaw sample code solution able come tricking ember updating values delayed render run loops course ideal javascript foobuttontext embercomputed x function consolelog var self emberrunschedule afterrender function selftoggleproperty issavingdisabled actions togglefoo thistoggleproperty issavingdisabled var self emberrunschedule afterrender function selfset x mathrandom see twiddle", "d": "9/2017"}, {"body": "recall anything wrapped stripped prod builds right guess could run eslint errors defined correct scope described", "d": "9/2017"}, {"body": "general sort destructuring nt needed imports used instead following works long using recentish emberclibabel version import registerwaiter embertest import debug glimmerenv snip debug registerwaiter register waiter import invocation removed dead code production builds wrote bit", "d": "9/2017"}, {"body": "rwjblue mentioned issue rfc nt provide guidance modules addon martndemus nt include afaik beta channel modules implemented prefer use beta builds production global ember import way destructure blow prod builds", "d": "9/2017"}, {"body": "fwiw temporary fix add following js embertesting embertest registerwaiter ok released better way happy well", "d": "9/2017"}, {"body": "rfc nt provide guidance embertest yep identified somewhat early implementation phase rfc rfc maintained time often times final implementation different due issues found implementation find current canonical public ember modules api data readme repo used tooling embermodulescodemod eslintpluginember emberclibabel share module mapping definitions modules addon martndemus nt include opened issue ensure get deprecation notice added package afaik beta channel modules implemented prefer use beta builds production mentioned comment requirement suggestion app addon new enough emberclibabel version support snippet completely unrelated embersource embercli embernewmodulesshim emberclishims etc", "d": "9/2017"}, {"body": "great thank", "d": "9/2017"}, {"body": "reopening implemented instructed emberclibabel installed prod getting", "d": "9/2017"}, {"body": "correction emberclibabel declared installed", "d": "9/2017"}, {"body": "ugh sorry try repro see going wrong", "d": "9/2017"}, {"body": "example repo stack trace", "d": "9/2017"}, {"body": "temporary workaround solve import issue previous work around destructuring put js eslintdisable embersuavenodirectpropertyaccess noundef typeof embertest undefined embertest registerwaiter eslintenable embersuavenodirectpropertyaccess noundef", "d": "9/2017"}, {"body": "answer right answer question", "d": "9/2017"}, {"body": "myartsev using dependent key computedmodel work", "d": "9/2017"}, {"body": "kumkanillam answer works scenario scenario nt want extended discussion right place lengthy usually place answer question given time happened get derailed pixelhandler using model indeed work length array returned changes case answer embertwiddle time model refreshed new item added however situation different model refresh alter length array contents inside array case contrived github repo bar property gets updated random value looking way accomplish", "d": "9/2017"}, {"body": "add reproduction twiddle repo would fine thank", "d": "9/2017"}, {"body": "okay caused binds value service service value gets updated route hook guess bad practice supported works fine without loading routes though also works without regular value maybe liquidfire issue", "d": "9/2017"}, {"body": "sadly able reproduce minimal app", "d": "9/2017"}, {"body": "nt think much without repro", "d": "9/2017"}, {"body": "could reproduce error mentioned liquidfire issue fastboot console output upon visit sure closely related specific case though unable reproduce crash got remove liquidfire actual app", "d": "9/2017"}, {"body": "number tests area showing regression suspect experiencing situational dependent factors create reproduction shows problem describing", "d": "9/2017"}, {"body": "rwjblue detailed debugging issue seeing result trying pass id param route partial comes close issue", "d": "9/2017"}, {"body": "thanks following trying prioritize get fix soonish sorry delays", "d": "9/2017"}, {"body": "gitsahib format issue description kind hard follow would mind creating example using would really help others investigate issue also nt think ember bug far sounds question reproducible example eg embertwiddle get help also feel free reach ember community embercommunityslackcom help channel get invite slack channel", "d": "9/2017"}, {"body": "gitsahib explained guides object model gt classes instances gt initializing instances behaviour classical prototypes closing nonbug thank", "d": "9/2017"}, {"body": "link gist commented line init method mycomponent uncomment issue go away otherwise one filter fires", "d": "9/2017"}, {"body": "gitsahib please read link comment go section guides explained", "d": "9/2017"}, {"body": "putting comment please look gist link related totally link provided link gist commented line init method mycomponent uncomment issue go away otherwise one filter fires", "d": "9/2017"}, {"body": "put object creation code provided link behavior still question ember duplicating component data try change filter one component changed well", "d": "9/2017"}, {"body": "arrays objects defined directly emberobject shared across instances class avoid behavior encouraged initialize arrays object properties init ensures instance unique gitsahib mentioned doc arrayobject initialized otherwise shared instances uncomment issue go away otherwise one filter fires yes bcoz initializing filtercriteria shared instances hope helps", "d": "9/2017"}, {"body": "thank karthiick got", "d": "9/2017"}, {"body": "thanks posting issue verify bug ember framework next step create working example create reproduction issue using example product using embercli also one guard often use condition app results component destroyed andor also recreated check state object either component one properties block attempt component use dom element component", "d": "9/2017"}, {"body": "tried reproduce twiddle looks like defined nt cause errs checked code turns using thus got err canceling debounce fixed end false alarm afterwards thanks attention", "d": "9/2017"}, {"body": "appear people karma tests working step", "d": "9/2017"}, {"body": "last hours nt able get work successfully yet pretty confident nt specifically emberjs closing", "d": "9/2017"}, {"body": "issue unable resolve", "d": "9/2017"}, {"body": "chatted mwisner kiwiupover bit weekend figured new parallelism added broccolibabeltranspiler defaults paralellizing number cpu currently present unfortunately circleci shows cpu job limited concurrent processes also limited available ram fix set jobs environment variable essentially disable parallelism ci", "d": "9/2017"}, {"body": "rwjblue thanks context even circle parallelism would think split containers would always need essentially disable parallelism ci assuming mean disable broccolibabeltranspiler parallelism circle containerized parallelism right erichu also seem like correct reading something expect fix circle cpus actually available job shown prevent sort parallelism circle side splitting tests something like example", "d": "9/2017"}, {"body": "sure expect fix form circleci super think docker problem circle problem specifically maybe node docker issue able accurately detect cpumem limitations imposed docker container created repo experimentation purposes includes circleci working w workaround provided rwjblue along public circle builds however also added repo travis ci also uses docker builds nt fixed travis config file yet see travis builds failing provided travis config", "d": "9/2017"}, {"body": "thanks mwisner correct thinking mean ca nt parallelize builds", "d": "9/2017"}, {"body": "joshsmith yeah understand correctly disable parallelism within broccolibabeltranspiler circle theory using circleci parallelism would fine personally nt experimented using circleci parallelism functionality sure configuration file would look like", "d": "9/2017"}, {"body": "makes sense wanted sure drawing clear line seemed like two distinct uses parallelism think finally page noticed setting manually config prior seems like could set env var level within circle perhaps without issue", "d": "9/2017"}, {"body": "also specific testing oom issue caused build phase ember test tested running well oom result joshsmith believe setting env var level would work well nt confirmed noticed pattern setting env vars ember cli commands addons going usage patterns", "d": "9/2017"}, {"body": "without knowing anything actually works hard say whether circle docker whomever could provide fix layman feeling thinking around would transpiler could take explicit instructions many cores available could perhaps avoid problem pure inference comes place deep ignorance", "d": "9/2017"}, {"body": "update run builds successfully set circle environmental settings thanks rwjblue mwisner erichu", "d": "9/2017"}, {"body": "ran issue circleci also fixed thanks v", "d": "9/2017"}, {"body": "erichu also seem like correct reading something expect fix circle cpus actually available job shown prevent sort parallelism circle side splitting tests something like emberexam example joshsmith two concepts parallelism keep mind circleci percommand parallelism limited number cores available container group default container group allocated cpu shares guarantees get cpu cores premium configurable resources feature lets choose largersmaller share top head b circleci parallelism think many machines want split across useful test isolation might want run tests time write database less useful say transpiling assets probably want tests run transpiled assets regarding since cores guaranteed available default may able run command want may speed execution nt checked works regarding b even still use circleci parallelism speed test suite regarding fix seen longrunning issue multiple containerization tools circleci containerization tools docker lxc respectively leak information host system many common linux commands like ones used check many cores available way number years think simple fix would solved complicating things circleci changed cpu core availability model got fixed number cores job get assigned cpu shares guarantee minimum number cores fully utilized host get least many cores running underutilized host cores available tools like tend assign number cores use though available resources may change life program execution best hardcode ci scripts use guaranteed resources available code may running n machines n parallelism think way effectively isolated one another", "d": "9/2017"}, {"body": "tried app build successful well canonical advice noticeable time difference values small sample fwiw", "d": "9/2017"}, {"body": "rwjblue know recommended issue embercli repo however opened issue first discovered issue looks like found could open another embercli repo would like open another issue reference conversation know anyway easily move", "d": "9/2017"}, {"body": "reopened issue additional testing provided travisciyml config ships ember also running issue understand ember nt support circle think would nice least issue fixed shipped travisciyml file also updated title description make little generic scoped specifically circleci", "d": "9/2017"}, {"body": "erichu many thanks detailed advice helpful community understand going detail would great see canonical example documentation perframework basis although understand appreciate time would take bgentry thanks reporting time difference hoping would speed build times going set well bit disappointed since build times far biggest hindrance speeding circle jobs", "d": "9/2017"}, {"body": "oh wow glad finally found conversation happening know look first timing travis feedback tried overriding timeouts normally write support got finally led changing caused builds pass least fail right reasons thanks maybe happening travis application heavy dependencies difficult debug ignored long seem worth considering handle ember cli blueprint otherwise address", "d": "9/2017"}, {"body": "testing default box ember project without changes pass fine introduction bunch dependencies end causing error sure considered lot dependencies ember project travis defacto way ci ember addons think people start upgrading making new addons people going see recently started working upgrading dependencies emberburgermenu project getting error example", "d": "9/2017"}, {"body": "oh thank mwisner posting issue rwjblue temporary solution spent hours trying understand builds failing setting jobs trick", "d": "9/2017"}, {"body": "artcommacode really hard trouble shoot without working example reproduction issue investicate perhaps reach ember community slack find help channel get invite join slack channel visit", "d": "9/2017"}, {"body": "artcommacode chance create reproduction yet", "d": "9/2017"}, {"body": "hi rwjblue thanks followup currently trying learn much possible ember reproduce", "d": "9/2017"}, {"body": "closing issue according triage policy reopen reproduction time thank", "d": "9/2017"}, {"body": "thanks suggestion moved rfc repository", "d": "9/2017"}, {"body": "duplicate thank", "d": "9/2017"}, {"body": "think related glimmer compiler encodes primitive literals javascript coerces numbers integers applying bitwise operations use store type information boolean string object etc literals lower bits practice means even though javascript allows represent values combination using bitwise operators b utilizing lower bits means ca nt represent values greater one way deal would lessefficient primitive type gt integers although maybe makes sense external number pool like strings maybe wycats chancancode chime since system came", "d": "9/2017"}, {"body": "fwiw rather unlikely someone hardcode number big real code numbers usually come somewhere binding unusual integration tests", "d": "9/2017"}, {"body": "made twiddle reproduction interested digging without cloning", "d": "9/2017"}, {"body": "think solution problem use constant large numbers floats could also use operand slots get bigger number tempted say optimization work limited relatively small bit integers", "d": "9/2017"}, {"body": "cibernox think need document current upper limit number least support bigger integer cc locks", "d": "9/2017"}, {"body": "ask first glimmervm expert estimation big change think fixed within weeks would nt document", "d": "9/2017"}, {"body": "think fix glimmervm arbitrary limitations helper arguments however since somewhat edge case likely wo nt address possibly even depends amount work fix backport", "d": "9/2017"}, {"body": "able update gettting digits number landing page really edge case cryingcatface", "d": "9/2017"}, {"body": "roschaefer temporary workaround put number componentcontroller bind", "d": "9/2017"}, {"body": "absolutely problem within project integration tests passed number bigger digits turns inside component", "d": "9/2017"}, {"body": "thank", "d": "9/2017"}, {"body": "ember build process uses babel transpiling code version phantomjs old browsers recognise unfortunately happens files folder wo nt transpile files folder seeing error", "d": "9/2017"}, {"body": "generally reserve issue tracker bugs ember seems like qa x type thing better served stack overflow slack manimishra mentioned also ed files transpiled going close please cross link post update thread answer find future searchers", "d": "9/2017"}, {"body": "locks ptal last part", "d": "9/2017"}, {"body": "come across similar problem seems partial rendered inside yielded block component nt receive yielded parameters component example hbs namehbs name js export default componentextend name ivan hbs yield name someroutetemplatehbs instance variable partial undefined", "d": "9/2017"}, {"body": "thing happens iteration value nt passed context partial record index undefined partial", "d": "9/2017"}, {"body": "reproduction twiddle working", "d": "9/2017"}, {"body": "interestingly enough still reference lost variable property name eg could sure help debugging issue", "d": "9/2017"}, {"body": "thank", "d": "9/2017"}, {"body": "serabe ah fantastic thank", "d": "9/2017"}, {"body": "closest provide reproduction embertwiddle bit behind ember versions one ca nt actually switch beta yet easy template reproduce locally test whatnot", "d": "9/2017"}, {"body": "make twiddlejson like use ember beta console tried twiddle seems work fine could nt reproduce issue", "d": "9/2017"}, {"body": "thanks urbany think twiddle borked attempting add emberdata work repro isolate wrong handful ideas broken beta test closing narrow problem", "d": "9/2017"}, {"body": "urbany found problem ember version", "d": "9/2017"}, {"body": "thank report", "d": "9/2017"}, {"body": "probably related", "d": "9/2017"}, {"body": "test production build show error either", "d": "9/2017"}, {"body": "recently project classnames set string instead array components respective based conversation assuming assert thats place causing failure correctly", "d": "9/2017"}, {"body": "believe actually coerces array based findings tried link document comment", "d": "9/2017"}, {"body": "anybody able reproduce", "d": "9/2017"}, {"body": "closing happy work messaging andor identification failure scenario end reproduction", "d": "9/2017"}, {"body": "impact api docs sitestool chain wip writeup get full stack running locally emberjs yuidocs emberjsonapidocs emberapidocs minimally viable example style modules module links nt work minimally viable example simply named modules ie repos run locally changed routing components controllers ember data expected work", "d": "9/2017"}, {"body": "summarize switch modules documentation without breaking website api docs toolchain run whole stack locally website links work slight changes front end make links work requires change tooling jsonapidocs nt think anything major means dictated want docs documentation blocks look technical barrier", "d": "9/2017"}, {"body": "samples documentation looks like module ember submodule emberrouting class used define individual routes refer routing guide documentation class route namespace ember extends emberobject uses emberactionhandler uses emberevented since public using nested module using simple module names one benefit using nested type module names developers already need know call packages code might well documented module name beginnerintermediate ember devs intuitive know import line look like given package one drawback links need redone bit work nt follow structure package reference need documented way", "d": "9/2017"}, {"body": "ping", "d": "9/2017"}, {"body": "testing successful unsuccessful outcomes rendering component handles promises common requirement surprised nobody else chimed", "d": "9/2017"}, {"body": "issue related", "d": "9/2017"}, {"body": "also seeing behavior eula acceptance route configured ember redirect works fine link active states incorrectly displaying user", "d": "9/2017"}, {"body": "closing issue according triage policy reopen reproduction time thank", "d": "9/2017"}, {"body": "serabe help first time diving ember internals", "d": "9/2017"}, {"body": "rwjblue serabe fixing changes app potential fix following assumption application route model hook finish individual route lifecycle except hook run example nt find documentation please correct assumption wrong", "d": "9/2017"}, {"body": "ping tsteuwer satisfied alexspeller answer", "d": "9/2017"}, {"body": "closing issue according triage policy reopen follow time thank", "d": "9/2017"}, {"body": "next steps addons add tests support namespaces presume called three arguments third new must remain things already supported resolver api ember change passed value looking example already added glimmerwrapper ember behind feature flag use pass referrer templates new argument must added behind ember feature flag exactly user typed ember pass argument time namespace specifier string resolve lookupstring referrer literalstring injectservice foobar glimmerwrapperresolverresolve service foobar gilmmerresolverresolve service foobar injectservice addonname servicename glimmerwrapperresolverresolve service null addonname servicename glimmerresolverresolve service addonnameservicesservicename foobar glimmerwrapperresolverresolve template componentsfoobar referrer glimmerresolverresolve template foobar referrer addonname componentname glimmerwrapperresolverresolve template component referrer addonname componentname glimmerresolverresolve template addonnamecomponentscomponentname referrer repo add tests support calling third argument namespaced services component probably means extending api js factoryfor lookupstring referrer literalstring lookup lookupstring referrer literalstring", "d": "9/2017"}, {"body": "paired fix kpfefferle last friday kpfefferle open pr push branch keep moving", "d": "9/2017"}, {"body": "serabe recently encountered issue really clear closed fixed somewhere else still nt seen anything logs", "d": "9/2017"}, {"body": "followed thread got similar example working requirements live list adding array nobody mentioned anything removing order remove items list computed property must defined similar", "d": "9/2017"}, {"body": "got bitten app today happened outside test environment workaround generating concrete controller worked feels like controller injection work autogenerated controllers", "d": "9/2017"}, {"body": "seems related", "d": "9/2017"}, {"body": "running issue", "d": "9/2017"}, {"body": "lbarsukov think defined relationships good chance one say two models question answer return answers question question serializer refers answer define relationship properly question model export default dsmodelextend answers dshasmany answers never reference questionanswers omit answer model export default dsmodelextend question dsbelongsto question data comes across defining multiple questionanswer pairs expecting relationship nt infers question modified middle render", "d": "9/2017"}, {"body": "use onmouseover action someaction similar problem", "d": "9/2017"}, {"body": "fwiw still seeing similar error ember two routes identical query params one route redirecting overriding query params transition options", "d": "9/2017"}, {"body": "chriskrycho locks issue seems stale close feel free reopen feel necessary", "d": "9/2017"}, {"body": "mdentremont seems promise resolution rendering timing contribute behavior demonstrated example provided forked example show access params parent template close feel free reopen necessary", "d": "9/2017"}, {"body": "ran today ember errors using errors leave leading slash", "d": "9/2017"}, {"body": "kybishop since issue work around nt verified bug ember close feel free reach help work around ember community slack channel tool get invite feel free reopen necessary", "d": "9/2017"}, {"body": "seems related nullnullnullemberkeyboard", "d": "9/2017"}, {"body": "dont think query params array support found otherwise since issue activity close feel necessary reopen please would like request feature feel free reopen rfc issue pr", "d": "9/2017"}, {"body": "fixes resolve issue", "d": "9/2017"}, {"body": "toddjordan know issue closed per fix", "d": "9/2017"}, {"body": "happy closing get confirmation issue indeed resolved emrvb verify lets close responses come", "d": "9/2017"}, {"body": "toddjordan pixelhandler stumbled upon report researching another problem partially recreated jsbin twiddle broken seems work fine ca nt tell whether particular pull fixed", "d": "9/2017"}, {"body": "nathanhammond issue seems stale close feel free reopen necessary", "d": "9/2017"}, {"body": "serabe rwjblue pr unmergable also specific question needs team response", "d": "9/2017"}, {"body": "quite likely need take point", "d": "9/2017"}, {"body": "left comment explanation thanks patience bryanaka", "d": "9/2017"}, {"body": "lolmaus issue inactive time still issue", "d": "9/2017"}, {"body": "nt think repoen run someone reports", "d": "9/2017"}, {"body": "toddjordan andrewjmc close able identify bug andrewjmc find work around also think necessary reopen issue later time feel free", "d": "9/2017"}, {"body": "gosh barely remember nt find workaround remember moved different things best wishes andrew", "d": "9/2017"}, {"body": "dmagunov curious still issue found work around issue inactive nt able identify bug close feel free reopen need", "d": "9/2017"}, {"body": "robbiepitts hate say really avoid helper one work arounds eg using binding attribute alltouch close issue stale feel necessary reopen feel free", "d": "9/2017"}, {"body": "nt wan na reopen wan na add since ran similar issue lot digging around wan na help anyone else issue problem input fields needed readonly bound specific variable basing property watching variable attribute binding like making readonly attribute added regardless boolean value set false thread discusses setting property html document false html decided make field solution problem started digging around found comment docs says nt want attribute render set return value monitored property removed readonly property nt want works ember well looks like added docs", "d": "9/2017"}, {"body": "aroberts able verify issue bug activity lulled close still issue feel free reopen also found work around please post comment", "d": "9/2017"}, {"body": "fiddle site still supports emberlatest happy port reproduction clear", "d": "9/2017"}, {"body": "aroberts twiddle", "d": "9/2017"}, {"body": "hah posted discussemberjscom guess try honbo hack see works still hopefully still works yrs later", "d": "9/2017"}, {"body": "uhhh trying reproduce success honbo snippet adding route right", "d": "9/2017"}, {"body": "ohhhh run snippet calling runtime right", "d": "9/2017"}, {"body": "ok got deprecation warnings works thanks honbo", "d": "9/2017"}, {"body": "dwickern thanks indeed lot simpler due multiple dynamic segments route yes updated code use solution seems work expected thanks", "d": "9/2017"}, {"body": "mmun wondering thoughts", "d": "9/2017"}, {"body": "zernyu long time ago still works ember array resolved list parameters matching function signature thanks", "d": "9/2017"}]