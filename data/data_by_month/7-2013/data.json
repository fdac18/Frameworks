[{"title": "radio buttons working correctly", "body": "expected behavior would stay checked b clicked case jsfiddle similarly modified version works every subsequent click b first time helps setting timeout around works except gives flash click b less ideal", "num": "242", "d": "7/2013"}, {"title": "computed properties", "body": "one thing wanted couple times react computed properties something vaguely like ember computed properties fullname function var firstname thisget firstname var lastname thisget lastname property firstname lastname app one case would useful one prop string gets parsed elaborate object displayed currently parsing componentwillmount componentwillreceiveprops setting state works pretty well perhaps nicer way provide", "num": "240", "d": "7/2013"}, {"title": "snippet nt compile pretty jsx", "body": "currently jsx transforms indentation fails pass jshint indentation temporary solution put bad line gets worse prefer style putting new line becomes fails two additional tests comma style disabled bad line breaking sure disabled", "num": "239", "d": "7/2013"}, {"title": "attaching onclick handler causes unexpected highlighting mobile safari", "body": "yungsters recent commit makes onclick work mobile safari attaching empty handler touchstart however causes subtly different behavior dom events without react consider jsx html image tapped onclick handler attached image browser draws light gray touch highlight image highlighted compare html html entire div highlighted clicking", "num": "238", "d": "7/2013"}, {"title": "use esprimafb npm sync transforms", "body": "npm github dependency tends create installation failures nt seem happen github dependencies npm esprima", "num": "235", "d": "7/2013"}, {"title": "batching disturbs natural order execution", "body": "discovered upgrading todomvc code calls parent sets state triggering parent turn trickles child input field gets focused worked well without batching put last lines inside function pass call callback else render actually done makes useless appears new way stuff putting case solution without involving callbacks although think solution would enter contradiction nature batching prefer batching ok new way render writing apis slightly awkward", "num": "234", "d": "7/2013"}, {"title": "reactrails", "body": "guys starting holidays next week also need one projects discussing zpao one issue discussions basically idea take emberrails code use expose reactjs jsxtransformerjs assets second thing would register sprockets engine transform jsx could steal bit code using execjs run jsxtransformer already tested works ok good thing patch merged allow jsx transformation using nonnode nonbrowser js environment one hurry would start making gem restructure repo bit move gem files gems dir make necessary proper reactrails gem ready initial version time next week pr follow", "num": "231", "d": "7/2013"}, {"title": "docblock parsing fails rn", "body": "told", "num": "229", "d": "7/2013"}, {"title": "animating changes list components", "body": "useful able animate appearance disappearance elements list components add react make easy maybe something like type argument props see also may useful comparison", "num": "227", "d": "7/2013"}, {"title": "animating addingremoving single component", "body": "useful able animate appearance disappearance particular component possible animate entrances without much trouble hand using componentdidmount exits harder since elements disappear immediately componentwillunmount nt give animation time finish add react make easy see also", "num": "226", "d": "7/2013"}, {"title": "set siblings state", "body": "set state siblings suppose list item b c clicked setstate selected true wan na make siblings b c setstate selected false possible", "num": "222", "d": "7/2013"}, {"title": "tag name jsxtransformer namespaced", "body": "jsx version component field object fails error parse error line xjs tag name empty throwerror parsexjsidentifier parsexjsattribute parsexjsopeningelement parsexjselement parseprimaryexpression nvm node version manager like rvm node find github hope rtfm case even supported currently would nice feature imho familiar code come pr unfortunately", "num": "221", "d": "7/2013"}, {"title": "swap todo example one todomvc", "body": "currently example todomvc horribly broken already featurecomplete version todomvc suggest take", "num": "219", "d": "7/2013"}, {"title": "lifecycle methods broken", "body": "looks like batching broke couple lifecycle methods get passed access also however set calling methods comparison done apparently need tests", "num": "215", "d": "7/2013"}, {"title": "reactcompositecomponentmountcomponent needs tryfinally", "body": "probably always set compositelifecyclestate null else react gets confused exceptions thrown render mountcomponent etc", "num": "208", "d": "7/2013"}, {"title": "issues upcoming doc", "body": "seems busy day like drop notes seen next documentation like said would nice mention cssing key integration within existingnew examples dom differences include css camelcasing link toward form section new part dom differences currently reference section obvious enough imo selfclosing tags always ok react even elements would nt normally selfclose although might dom differences since applies every react component probably mentioned elsewhere eg obvious possible actually mentioned unless missed also valid inside goes", "num": "198", "d": "7/2013"}, {"title": "add invariant make sure pass node componentdidmount", "body": "", "num": "192", "d": "7/2013"}, {"title": "firefox div contenteditable triggers typeerror setting property getter", "body": "steps reproduce open open firefox console start typing yellow div see increasing number errors", "num": "191", "d": "7/2013"}, {"title": "oncontextmenu event", "body": "event nt exist yet", "num": "189", "d": "7/2013"}, {"title": "allow html attribute names reactdom jsx", "body": "ease starting existing mock html great feature jsx however cases html attribute exactly dom property name one caught raise error colspan attribute silently ignored property name must used instead somewhat related though jsx user happy name normalization happen transform time cutting pasting html use case important reactdom reverse mapping property name attribute name defaultdompropertyconfigjs", "num": "185", "d": "7/2013"}, {"title": "add support touchaction attribute polymer pointerevents", "body": "needs nonstandard touchaction attribute work btw nt know react nt render anything user needs custom attributes work oftb control freaks option reactdoesnotallowunknownattributtes true", "num": "184", "d": "7/2013"}, {"title": "parsing error html entity nested jsx", "body": "html entity following causes current master react jsfiddle", "num": "183", "d": "7/2013"}, {"title": "children array allow use numbers booleans", "body": "especially numbers usefull primitive types tostring ified", "num": "182", "d": "7/2013"}, {"title": "allow stringified aliases classname htmlfor", "body": "use properties quotes jsx rewrite", "num": "181", "d": "7/2013"}, {"title": "autoassigned keys conflict userspecified ones", "body": "render hello world react throws duplicatekey error second span world assigned key index div children presumably best simply avoid specifying keys would nice react could use separate namespaces different key types least provide slightly informative error message", "num": "180", "d": "7/2013"}, {"title": "maybe make sure work trigger events", "body": "came irc last night somebody working trouble testing react using test event handler amp state change use synthetic events claim best effort matching real dom events problem case code using checkbox either nt handling change event one cases jquery events nt good enough using worked might fixed nt chance test nt work works", "num": "179", "d": "7/2013"}, {"title": "setstate others parameters format", "body": "currently accidentally using throws unhelpful error would nice either throw better error accept format goes etc", "num": "175", "d": "7/2013"}, {"title": "pass rootnode componentwillunmount", "body": "like others", "num": "174", "d": "7/2013"}, {"title": "better event docs", "body": "coming would good talk events handled different patterns use pretty good job saying attach listeners top level use delegation obviously clear enough cleanup may also want mention use normal event listeners really wanted", "num": "171", "d": "7/2013"}, {"title": "foo instead verbose null foo", "body": "reactdom methods createdaliased react component instance could use beautiful concise coffeescript syntax", "num": "170", "d": "7/2013"}, {"title": "parent onclick squashed child onclick", "body": "child render parent render case apparently squash unless calls inside body way trigger parent click event kind sucks time child uses similar event needs conditional check parent also employing also somewhat related better attach event like done waiting best practices", "num": "169", "d": "7/2013"}, {"title": "fix tests using phantomjs", "body": "error phantomjs binary executable latest version phantomjs package", "num": "166", "d": "7/2013"}, {"title": "changelog repo", "body": "pretty standard open source project know github changelog support new releases feature information nt become artifact repo add somewhere also remove information downloads page valuable get noisy moving forward", "num": "165", "d": "7/2013"}, {"title": "add contributors", "body": "probably file maybe add everybody think supposed read file exists fine", "num": "164", "d": "7/2013"}, {"title": "document forms changes best practices", "body": "need", "num": "163", "d": "7/2013"}, {"title": "rename onchange onsomethingnotinthespecalready", "body": "talked breaking expectations event already exists think options best", "num": "162", "d": "7/2013"}, {"title": "animations unmounting general", "body": "context pull request fixing bootstrap modal example animation works nt obvious reason let say three divs side side middle one closes shrinking animation disappears one right moves left take place currently takes bit circumventing make work kills nice structure semantic react aiming end kind defeats purpose diff rendering technique wondering clean way maybe even new api make work well", "num": "161", "d": "7/2013"}, {"title": "bad npm package fatal error find module buildmodulesreact", "body": "installing reacttools via reactify coming directly still missing folder wrong failing build", "num": "159", "d": "7/2013"}, {"title": "support lt module key value gt", "body": "right jsx supports desugaring value interpolation would also really like support interpolation arbitrary props would allow us get rid thistransferpropsto really unfortunate api mind", "num": "158", "d": "7/2013"}, {"title": "enable mocking required modules tests", "body": "recurrent source disagreement test results within facebook given facebook consistent strategy mocking modules currently test implemented phantomjs test harness opensource repository sake experiment right way would hard decided play fire discarded assumption automocking entirely preference simply fixing tests failed lack mocking fortunately many test failures sort partly due another mitigating factor run test suite information somewhat isolated test unit nevertheless think much better job emulating mocking behavior fb codebase discussion plans cc zpao jeffmo jordwalke petehunt", "num": "155", "d": "7/2013"}, {"title": "fix failing test", "body": "name test bot would autogenerated task telling tests failing petehunt", "num": "154", "d": "7/2013"}, {"title": "figure make global available", "body": "using increasingly right used checking like nt think points actually work using browserified version react", "num": "152", "d": "7/2013"}, {"title": "missing autofocus dompropertyjs standard properties enumeration", "body": "sure bug feature", "num": "149", "d": "7/2013"}, {"title": "export createdomcomponentclass", "body": "irc today someone missing tag reactdom export createdomcomponent escape hatch", "num": "146", "d": "7/2013"}, {"title": "document mouseenter mouseleave event handling page", "body": "", "num": "142", "d": "7/2013"}, {"body": "happens change event never triggers b react nt get chance restore checked state", "d": "7/2013"}, {"body": "paging yungsters", "d": "7/2013"}, {"body": "use regular functions dependencies fullname function var firstname thispropsfirstname var lastname thispropslastname changes reevaluated called ui updated", "d": "7/2013"}, {"body": "andreypopp downside reevaluate function even amp nt change function something complex string concat could get expensive upside computed properties expire values know dependents change downside observing changes expiring caches generally would suggest sophiebits though fact single lifecycle method catch initial props update annoying", "d": "7/2013"}, {"body": "sound like addressing rendering layer reasonable approach whenever react instance handler render markup", "d": "7/2013"}, {"body": "yes think makes sense", "d": "7/2013"}, {"body": "work well batching suggested would defined", "d": "7/2013"}, {"body": "jordwalke also suggested similar node", "d": "7/2013"}, {"body": "freaking fantastic railsspecific work sprockets environment also working would love port insta internal django integration stuff reactrails including transparent server rendering makes sense", "d": "7/2013"}, {"body": "hey jakubmal actually working right going branch repo shortly sorry duplicating work let converge single solution post mine tell sucks use actually nt written proper gem reactsource nt count probably lot wrong", "d": "7/2013"}, {"body": "alright started watching repo zpao", "d": "7/2013"}, {"body": "little bit cleanup works", "d": "7/2013"}, {"body": "awesome really looking forward soon ready use apps said would happy start helping weekend anything still todo count", "d": "7/2013"}, {"body": "jakubmal pushed react important reactsource yesterday changes jsxtransformer gem dependency work without build install reactsource locally also synced branch going end separate repo wanted work feel free start prs list todos readme biggest thing tests though think part higher pri feel free hack whatever anything help make sure maintain authorship new repo get changes standalone repo opens", "d": "7/2013"}, {"body": "mentioned wontfix thanks forcing issue jakubmal fireworks", "d": "7/2013"}, {"body": "thought right props changed reconciler creates plan carry update plan consists new markup must inserted location new items must inserted location existing items location must deleted right default behavior simply carry plan efficient way could tell native components want handle insertionsremovalsmoves particular way may include animation something like might look like var childmanager addchildren function childrenmarkup location movechildren removechildren interesting child instances addedmovedremoved also updated need api allows controlling whenhow updates occur throughout process creatingdestroyingmoving may wish update move existing childrenadd new ones may wish update addingmovement complete seems like best strategy make sure lowest level hooks exposed one ever feels completely trapped able perform particular animation feature top build sugar common things", "d": "7/2013"}, {"body": "also really hyped animation old issue spicyj concerning nt agree adding specialcases two situations bit much lots unique dynamic situations inbetween would need formal attributes really limits framework coder creativity like jordwalke idea also allows graceful degradation best part totally unobstructive could used dropin mixin kind drooling possibilities lol one thing worried parentsiblings expectation shouldshould happen duringafter animation sure worked", "d": "7/2013"}, {"body": "oops forgot earlier issue agree flexibility always better brainstorming possible new apis want simple things easy", "d": "7/2013"}, {"body": "couple features heard requests think hits chenglou comment another completely different direction take nt really address animating child components focuses property values pete hunt work animatable state transitions would call setstate several times throttling hit animation frame window also talked able implement without actually call every could use snapshot points perform single reconciliation diff calculate diff tween individual values every may possible compute two parallel using method", "d": "7/2013"}, {"body": "dealt basically stored selected state container component var container reactcreateclass getinitialstate function selected index true item given index currently selected return selected onitemclick function idx copy current selected state mutate var newselected thisstateselectedslice newselected idx newselected idx thissetstate selected newselected render function get items somehow var items thisgetitems return itemsmap function item idx return var item reactcreateclass onclick function thispropsonclick thispropsidx render function return", "d": "7/2013"}, {"body": "like andreypopp solution siblings nt know eachother children generally nt know anything parents except parent supplies props child andreypopp solution maintains proper separation", "d": "7/2013"}, {"body": "ok try thanks guys could give example jsbin", "d": "7/2013"}, {"body": "", "d": "7/2013"}, {"body": "raitucarp sorry wrote example without testing also seems reactjsfiffleintegration still react version", "d": "7/2013"}, {"body": "ok thanks andreypopp", "d": "7/2013"}, {"body": "talked several times agreed support one actually wrote code support yet meantime var component namespacecomponent thanks report", "d": "7/2013"}, {"body": "see", "d": "7/2013"}, {"body": "start holidays next week try take stab still wo nt resolved", "d": "7/2013"}, {"body": "vjeux zpao think based commit facebookesprima lot new commits master either need make branch facebookesprima update version esprima used react vjeux said irc fix really oneliner maybe guys facebookesprima want tests apart really easy", "d": "7/2013"}, {"body": "jeffmo esprima side obviously want make sure change fine internally take jakubmal feel free open prs facebookesprima fbharmony branch use internally react npm git dependency issues point tarball rev packagejson think intentionally lag behind master since done considerable work branch though jeffmo knows better almost certainly want tests nt add tests react specific ones want add internally point react new rev", "d": "7/2013"}, {"body": "think mostly fine would like us continue using xml semantics want go road instead rather see us use la", "d": "7/2013"}, {"body": "jakubmal said nt hard pretty sure one liner", "d": "7/2013"}, {"body": "going opposed would allow us separate meaning syntax output compilation pipeline leave mean decision compiler nice would pretty reasonable parameterize compiler reasonable default terms deciding something like desugar ie compile maybe hell maybe even go making fairly hardtoreverse decision want jsx namespacing always tied memberexpression else would mean", "d": "7/2013"}, {"body": "late voice opinion sure implementing namespace good idea three reasons necessary maybe shortsighted nt see benefit fact latter shorter requires absolutely nothing extra learn get entirely optional feature get documented presents mental hurdle developers anything else jsx already getting weird eyes every time gets mentioned even though repeated throughout documentation optional jsx javascript ie lots opportunities shape dom fits js might good idea reminds typical templating engine trying hard emulate stuff plus say write translates would help making jsx optional learn backward way remember vanilla js nsdatepicker conforms jsx compiles much logic write", "d": "7/2013"}, {"body": "well necessary need document least tutorial might mentioned somewhere deeper suggest magic nt make sense jsx coupled dependency tool suggested something extremely simple like translate appviewscounter suggested simply include dot allowed char tag name whole tag name including dots copy amp pasted resulting js believe nt wider implications commit reserving dot case still left colon might help say situations hassle let leave", "d": "7/2013"}, {"body": "update porting todomvc example submitted actual project done use version instead unless guys find example heavy", "d": "7/2013"}, {"body": "sure understand code master says var nextprops thisprops thispendingprops null nextprops thispendingprops nextprops set thispendingprops mutated performcomponentupdate shouldcomponentupdate returns true directly performupdateifnecessary function shouldcomponentupdate returns false", "d": "7/2013"}, {"body": "may jumped gun trying get reduced test case fails far make passing test cases", "d": "7/2013"}, {"body": "experienced keep digging", "d": "7/2013"}, {"body": "ok nt related batching actually ageold objects passed byref problem case hitting object storing data coming server sometimes server say update number stored object set objecttest rerender object prop test case demonstrating problem pass shouldupdate correct values function var propsweredifferent var count best way work around probably pull much set property props component instead", "d": "7/2013"}, {"body": "fwiw nt bug react something aware js jsx makes little less obvious", "d": "7/2013"}, {"body": "fixed upcoming thanks improved synthetic events thanks reporting providing test case", "d": "7/2013"}, {"body": "awesome thanks", "d": "7/2013"}, {"body": "thumbsup sure want core necessarily least actually use fb ways mixing events seems like good potential candidate", "d": "7/2013"}, {"body": "something talking yesterday actually copypaste html one use cases came want careful making jsx transformer magical think fixing capitalization bit far direction good idea short term plan probably make sure warn see things probably meant camelcased completely sure end longer term though chances right around corner going make changes yet thanks filing keep updated figure", "d": "7/2013"}, {"body": "throw two cents think camelcase way go inconsistent part would remain uncapped stuff like stay capped would reasoning behind would js look like applies current style mapping eg also see css becoming important part react future way easier mention docs already every style name dom attribute camelcased list special cases sake respecting domcss naming convention longer applies work confusing explain maybe nt copy paste enough currently accepting alllowercase would look like mean accidentally pass instead kind hard spot", "d": "7/2013"}, {"body": "think copy paste existing html definitely nice feature silently ignoring unknown dom properties seems lead confusion perhaps reactdom could setattribute props nt know", "d": "7/2013"}, {"body": "discussed supporting gets really complicated custom components javascript case sensitive jsx actually javascript even though looks like html p", "d": "7/2013"}, {"body": "yea unfortunate feels like something able make work say jeffmo", "d": "7/2013"}, {"body": "zpao jsx unsupport id properties html tag thx", "d": "7/2013"}, {"body": "unsupported since react took attribute purposes able use", "d": "7/2013"}, {"body": "could give simple use case render numbers interesting reason may want booleans rendered strings", "d": "7/2013"}, {"body": "sorry fault add booleans nt know thank", "d": "7/2013"}, {"body": "include sample code would like work", "d": "7/2013"}, {"body": "nt use jsx prefer coffeescript projected reactdom methods react see write object properties stringified use closure compiler advanced mode nt use mapped properties class works also words property names supported even", "d": "7/2013"}, {"body": "thanks report dynamic array would still warning provide key guess happen provide explicit keys static set nt need case need better error message suggest would even better namespace autoassigned keys", "d": "7/2013"}, {"body": "zpao check nt react problem", "d": "7/2013"}, {"body": "jquery change nt event nt blame robert thinking work perfectly reasonable assumption probably end wontfixing wanted make sure something file", "d": "7/2013"}, {"body": "using minified react package unminified", "d": "7/2013"}, {"body": "minified error message unminified", "d": "7/2013"}, {"body": "try unminified get helpful error message bug", "d": "7/2013"}, {"body": "ok error message still sucks least getting messages correct build thanks report", "d": "7/2013"}, {"body": "jordwalke thoughts since proposed api nt support gcc key crushing whatever could go either way api convenient prevents object allocation simple case familiar also makes function bit flexible typically constraints liberating camp", "d": "7/2013"}, {"body": "clarify tomocchino brought habit backbone libraries also camp accepting format mere idea much prefer simple error message line get", "d": "7/2013"}, {"body": "seems pretty reasonable really trivial change sure would break expectations elsewhere", "d": "7/2013"}, {"body": "seems reasonable jordwalke", "d": "7/2013"}, {"body": "would nice convenient way import set variables scope", "d": "7/2013"}, {"body": "li div reactdom got enumerate tags going use christopher vjeux chedeau facebook engineer sat jul jordan w notifications githubcom wrote would nice convenient way import set variables scope reply email directly view github", "d": "7/2013"}, {"body": "something pretty similar bunch discussion may find interesting", "d": "7/2013"}, {"body": "react coffeescript flavoured looks dazzlingly", "d": "7/2013"}, {"body": "example usually want var bigbutton reactcreateclass childhandleclick function e alert big button clicked thispropsonbigbuttonclick render function return general current react api components nt anything nt tell said react automatically forward many good reasons reason nt want forward nt want expose part api get decide everything contract offer client code including whether want accept prop means reason wanted forward rather inner kind autoforwarding would result click handler getting placed two different nodes unintentionally reason control invoked may wish current api complete control regarding check null would first ask intend optional required required say invoke present required another api mind kind stuff", "d": "7/2013"}, {"body": "makes lots sense thanks nt api mind guess still thinking terms old html let get straight say biginput component wrapper around normal text input plus classes traditional dom manipulation mentality feel free register input event something else act upon react best practices need specify inside biginput whole set events accept eg change keypress click etc basically discard every dom event unless asking rather possible prompted ask question kind small paradigm change", "d": "7/2013"}, {"body": "want blindly forward properties return thistransferpropsto nt remember overriding ones set though christopher vjeux chedeau facebook engineer jul pm cheng lou notifications githubcom wrote makes lots sense thanks nt api mind guess still thinking terms old html let get straight say biginput component wrapper around normal text input plus classes traditional dom manipulation mentality feel free register input change event something else act upon react best practices need specify inside biginput whole set events accept eg change keypress click etc prompted ask question kind small paradigm change reply email directly view github", "d": "7/2013"}, {"body": "yeah know wondering best practice react wanted confirm jordwalke wrote overriding classes union child parent declarations every attribute come across prioritize child", "d": "7/2013"}, {"body": "regarding best practices usually use component dumb wrapper around dom node also applies classnames etc frameworks may decide automatically forward attributes downward initial appeal kind thing framework default could cause lot confusion unexpected attributes end low level dom nodes ten levels hierarchy would suggest use use conservatively low level ui components intend component building accept complete set dom attributes would words nt use easy way forward two attributes wanted component api consist use truly want component implement complete api dom component possibly fan building focused components expose smallest possible api like making sure component software nt bite chew disclaimer find works rules thumb", "d": "7/2013"}, {"body": "informative thanks", "d": "7/2013"}, {"body": "", "d": "7/2013"}, {"body": "anyone point migrate docs dex github petehunt yungsters", "d": "7/2013"}, {"body": "included well best practices", "d": "7/2013"}, {"body": "awesome", "d": "7/2013"}, {"body": "", "d": "7/2013"}, {"body": "paulshen many long discussions truly care spec preserving utility knowledge experience think web developers obtained tell people use would involve polyfilling browsers ie breaking apart imo api sucks spec browsers designed us tell people use want react opinionated", "d": "7/2013"}, {"body": "opinionated call something else", "d": "7/2013"}, {"body": "yungsters completely disagree version onchange definitely people want named different event people already know concerned staying within spec concerned staying backwardscompatible change onchange behave differently violated user expectations event behaves hard earn trust back", "d": "7/2013"}, {"body": "shipped onchange closing task", "d": "7/2013"}, {"body": "really great question discussed heard several interesting proposals new apsi allow us express animations definitely working going forward current belief would best form api layered top declarative api heart react currently animations functional well suited react current api many animations elegantly expressed using css rules react current api also well suited types animations difficult express functionally take effort may require implement love see api allows us express happens less functional animations functionaldeclarative way feel free send gists simplest cases ideas one proposal may worth considering imagine upon transitioning states dom mutations occur result may passed separate declarative animation configuration could instruct dom reconciler update different classes dom attributesstyles example could central place framework intercept dom mutations make work fairly easily one nice thing proposed api might give us power pierce encapsulation boundary subcomponents without ever leaking implementation details able animate implementation details subcomponents without ever assuming anything nature one tradeoff api anticipate able perform animations easily anticipate difficulty getting animations exactly want millisecond precision also types animation apis provide situations animated properties nt pierce encapsulation boundary would simply invoke state transitions within let reconciler rest work always may performance issues proper throttling may also useful", "d": "7/2013"}, {"body": "sounds like good news definitely think webapps isshould moving toward animated interactions individual components coherent unit worries situation dom reconciliated affect rest flow take todomvc example ignoring design react animation api would achieve followings task dragged around tasks move accordingly temporarily fill spot previously occupied dragged task task completed removed falls tasks move hell maybe even one another like people moving forward queue really buying idea react think natural progression express html potentially css animation javascript love smoothness css animation todomvc showed kind animated elements normal jscss frameworks still constrained minimal eye candies color transition applying checkmark x button growing bigger hover bland frankly feel like webgrade apps much love web reiterate worried given react albeit extremely clever diff rendering technique framework gets constrained aspect ui know would sick api somehow achieve two kind animated interactions directly top existing todomvc without altering structure app animations get ubiquitous nt interfere actual sketching app", "d": "7/2013"}, {"body": "totally agree", "d": "7/2013"}, {"body": "far animations unmounting goes usually toggle shown visible prop owner component instead unmounting directly since transition first finally unmount ymmv far animations general goes prepared example pretty performant way tween state interpret touch gestures animate performant way let know helpful", "d": "7/2013"}, {"body": "running issue one reacttools npm pushes build believe zpao fixed npm someone update reactify depend latest version reacttools believe fixed confirm", "d": "7/2013"}, {"body": "cool installing directly via reactify still reactify requires going anyway tilde rules maybe dumb question need clear npm cache something thanks quick response might well code waiting fireworks", "d": "7/2013"}, {"body": "still seeing issue like get fixed want try reactify well", "d": "7/2013"}, {"body": "interestingly reactify nt even rely build output need bin folder transformation another npm module reactjs getting build directory", "d": "7/2013"}, {"body": "oh really good point want immediate hacky fix change js use strict var react require buildmodulesreact var visitors require vendorfbtransformvisitors transformvisitors var transform require vendorfbtransformlibtransform transform moduleexports react react transform function code return transform visitorsreact code code viola", "d": "7/2013"}, {"body": "gruntreact could work reactify maybe find time pull one days reactify sent iphone jul pm peter conerly notifications githubcom wrote oh really good point want immediate hacky fix change nodemodulesreactifynodemodulesreacttoolsmainjs use strict var react require buildmodulesreact var visitors require vendorfbtransformvisitors transformvisitors var transform require vendorfbtransformlibtransform transform moduleexports react react transform function code return transform visitorsreact code code viola reply email directly view github", "d": "7/2013"}, {"body": "jordwalke pconerly also make work testing without clearing cache worked machine published must cleared cache process probably bump", "d": "7/2013"}, {"body": "zpao cool nt know confirmed fixed", "d": "7/2013"}, {"body": "interpolating module name seems hard since nt know whether reactdom local variables ca nt accessed string name anyway also related", "d": "7/2013"}, {"body": "could rewritten sure want way would work p", "d": "7/2013"}, {"body": "thinking module reference actual function would rewritten", "d": "7/2013"}, {"body": "thrown around couple ideas able forward several properties either way couple interesting questions come position props effect semantics order specified effect precedence would transformed like end result tradeoff consider transform becoming lightweight lineforline nonopinionated one might even depend runtime library merging seems little straightforward", "d": "7/2013"}, {"body": "get rid interpolation last example exactly transform nt see something hard coded list expects variable scope also say transform puts code could always something like", "d": "7/2013"}, {"body": "hides nt occur could christopher vjeux chedeau facebook engineer jul pm paul shannessy notifications githubcom wrote get rid interpolation last example exactly transform nt see something hard coded list expects variable scope also say transform puts code could always something like jul pm christopher chedeau notifications githubcom wrote thinking module reference actual function var module reactcreateclass lt module would rewritten var module reactcreateclass module reply email directly view github reply email directly view github", "d": "7/2013"}, {"body": "zpao may still value allowing interpolation tag name nt know would enforce closing tag matches", "d": "7/2013"}, {"body": "jordwalke definitely value comes cost making jsx harder understand think cost high case easily rewritten hardly seems worth complexity", "d": "7/2013"}, {"body": "concerned adding complexity jsx sake syntax need keep dead simple imo unless need add expressive power think forwarding multiple properties useful use case could desugared extra param reactdom", "d": "7/2013"}, {"body": "ok tests passed internally opensource dumpcache noop double dom property injection happening throwing", "d": "7/2013"}, {"body": "ideas take plunge forking browserify lot things become possible proper mocking system would relatively easy implement could redefine browserify implementation nt think fork browserify instead looks like transform source files testing manipulate swapping mocked version necessary either using browserify source transform prefer principle least mocking would work module packaging tool ie would depend browserify interface need investigate think really promising", "d": "7/2013"}, {"body": "perhaps return global object also ensure module required requiring longer strictly necessary proposed contents module question would call first time maybe maybe make entry point browserify", "d": "7/2013"}, {"body": "yea already entry point somewhere less worried getting rid uses thought synced already", "d": "7/2013"}, {"body": "purge uses global react codebase since already polyfill console mostly think one ref around somewhere", "d": "7/2013"}, {"body": "one reservation purging tricky get global object reliably way works browser server goto technique far obvious especially strict mode considerations", "d": "7/2013"}, {"body": "benjamn phunt last one couple tests though probably change already", "d": "7/2013"}, {"body": "adding couple known missing properties thanks heads fwiw see valuable serverside rendering browsers supposed look property page load adding clientside rendering nt anything", "d": "7/2013"}, {"body": "nt least chrome check", "d": "7/2013"}, {"body": "added others", "d": "7/2013"}, {"body": "ping", "d": "7/2013"}, {"body": "looking first clue seems compiling files travis locally", "d": "7/2013"}, {"body": "opened commoner issue address among problems", "d": "7/2013"}, {"body": "granted placeholder todo already mind exactly looking regarding documentation", "d": "7/2013"}, {"body": "adding page saying write following code reactcreateclass props somenumber reactprops christopher vjeux chedeau facebook engineer jun pm eric clemmons notifications githubcom wrote granted placeholder todo already mind exactly looking regarding documentation reply email directly view github", "d": "7/2013"}, {"body": "doc", "d": "7/2013"}, {"body": "working closing", "d": "7/2013"}, {"body": "would noise bad nt first specially structured besides using would assume anything explicitly passed transform script would nt check docblock", "d": "7/2013"}, {"body": "long docblock work right actually nt strict format long first docblock file nt tested nt work let know assumption anything passed works good one make nt actually work right", "d": "7/2013"}, {"body": "oh interesting dealt related problem emacs files back definitely thing commoner handle intelligently", "d": "7/2013"}, {"body": "tie broken according length filename shortest wins much hack", "d": "7/2013"}, {"body": "things like ca nt new problem", "d": "7/2013"}, {"body": "zpao good call turns coffeescript nt try super clever", "d": "7/2013"}, {"body": "fixed commoner", "d": "7/2013"}, {"body": "following right let close someone comes real proposal", "d": "7/2013"}, {"body": "fixed", "d": "7/2013"}, {"body": "actually going", "d": "7/2013"}, {"body": "fixed although mention still trouble getting file names show test output", "d": "7/2013"}, {"body": "would extremely useful several instances explicitly call helper function litter template references everything work correctly ca nt think function would expected run outside component scope", "d": "7/2013"}, {"body": "already committed comes", "d": "7/2013"}, {"body": "closed thanks", "d": "7/2013"}, {"body": "awesome", "d": "7/2013"}, {"body": "months release let close", "d": "7/2013"}, {"body": "shameless pretty relevant plug syntax ideas discussed actually close something working called reactivecoffee embedded dsl building reactive uis scalable manner", "d": "7/2013"}, {"body": "closed right zpao spicyj", "d": "7/2013"}, {"body": "yea talk polyfills needed browser suppport polyfills oh man clownshoes section", "d": "7/2013"}, {"body": "new docs mention", "d": "7/2013"}, {"body": "see", "d": "7/2013"}, {"title": "modelsave calls error callback function successful update", "body": "using backbone rails save method calling create function rails returns status code browser normally successful instead triggers error callback", "num": "2704", "d": "7/2013"}, {"title": "request event fired sync model fetching async false options", "body": "extend backbonemodelprototype initialize function thison request thisstart thison sync thisstop thison error thisstop start function consolelog show expected result show userfetch success hide userfetch complete real result userfetch success hide userfetch complete show best regards", "num": "2703", "d": "7/2013"}, {"title": "suddenly backbonejs collections nt work chrome code minified", "body": "suddenly backbonejs collections nt work chrome code minified searching bug code fix bugs application continue breaking use collections change collection array application works next collection execution cut execution say application really big model lots information nested collections models example model collection usually ones fails var mycollection backbonecollectionextend model vinculacionesgrafo works allways firefox internet explorer sometimes fails chrome code ready production mean code minified beggining thought syncronoussly problem change collections arrays continues fail collections depends loadding data allways line error something like thatget mycollec add model stack next additem method next related text error allways error related data null stack related error text code obfuscate detected first time error something like really strange thing change collections arrays code mycollec push instead add bug appear anymore execution go comes another similar collection instruction really afraid like backbone collections broken works well sometimes rest application never fail sames section load lot data add lot html breaks backbone maybe memory leak really lost sorry lack information first time wrote question thanks lot advance really need help", "num": "2701", "d": "7/2013"}, {"title": "manage multi dialogs", "body": "hi guys newbiei question howto manage multi dialogsfor example multi views every view contain button trigger dialog showshould create multi view hold dialog render multi veiws event thanks help", "num": "2699", "d": "7/2013"}, {"title": "validation wo nt stop set", "body": "backbone validate stop set setting attribute make isvalid shows correct result false var person backbonemodelextend defaults name john doe age occupation worker validate function attrs attrsage lt return age must positive work function return thisget name working", "num": "2698", "d": "7/2013"}, {"title": "know model exists attributes nt changed fetch merge", "body": "anyone suggestions around knowing model exists fetch happens attributes changed merge originally thought might fired matching nt", "num": "2697", "d": "7/2013"}, {"title": "catching json parse errors", "body": "due flakey web service requests json data sometimes return incompletemalformed json chrome throws following error pointers catchhandle exception backbone sync looked backbone source ca nt even work actual server response parsing happening help appreciated", "num": "2696", "d": "7/2013"}, {"title": "models added collection initialize called", "body": "reason backbonecollection initialize method called initial reset called could line read", "num": "2695", "d": "7/2013"}, {"title": "eventswhen events may may fired already", "body": "idea often times want execute task something happens happened already eg view loaded image assets example event handling jquery offloads burden figuring whether event fired already client code event emitter essentially semantics would event fired earlier schedule handler fire asynchronously eg would call arguments passed arguments passed event preserved think due high probability significant memory leaks caused", "num": "2694", "d": "7/2013"}, {"title": "sync events confusion", "body": "hello found way identify backbonesync finished request one centralized place request event applies request made response requestend event bind know request finished know sync error events maped success error callbacks duplication code needs done get desired effect think would much natural event mapped complete callback good example would wanted show loading indicator model starts request hide finishes need bind request event show indicator bind error sync events hide nt really care status request came back sort requestend would fit perfectly binding request event collection triggered collection model starts request know part events delegation mechanism way distinguish object collection model initialized request without instanceof check inside callback handler would nt also feel natural bind events correct objects nt mix really easy solve first issue would happy pull request accepted though second one needs discussed think edit also one event identifies crud operations sync way tell apart operation completed ie bind sync event fired times fetch save model would much better additional saved updated fetched events rather single one sync would accepted pull request add additional events", "num": "2693", "d": "7/2013"}, {"title": "model destroy persisted model trigger sync collection", "body": "piece code along lines js var model collectionget id modeldestroy note model persisted id following backbone code apparent trigger collection however trigger reaching following line line debug build returned nothing triggered collection relevant backbone", "num": "2692", "d": "7/2013"}, {"title": "views longer options property", "body": "annotated source shows views call constructor turn sets options property view version repository longer line instances views longer options property bit confused claim version sure someone knowledgeable shed light issue", "num": "2691", "d": "7/2013"}, {"title": "documentation add digg reader examples section", "body": "looks like digg reader using backbone", "num": "2690", "d": "7/2013"}, {"title": "missed line uncompressed backbonejs", "body": "hello guys found interesting bug uncompressed backbonejs missed one line see patch min version fine used documentation site version also looks good problem shows trying pass url parameter collection creation example var tabs new tabset var spaces new backbonecollection model space url spaces example documentation url collection never set way include bug maybe fix future versions annoying try figure best wishes", "num": "2689", "d": "7/2013"}, {"title": "undesired proxying events collection models", "body": "know backbonecollection listens models events onmodelevent updating internals however got undesired event propagation knowing proxying events collection good developers wants extend backbone functionalities", "num": "2688", "d": "7/2013"}, {"title": "discussion breaking backwards compatibility", "body": "reason upgrading version backbonejs requires one change code keep things working way arewere previous version add new feature new functionality makes sense would need change code get new benefit however almost always see reverse situation two instances breaking changes cases wanted fixes order upgrade maintain current functionality code updated account new options cases seems default settings set break existing users instead allow people optin new hotness intend continually break backwards compatibility even", "num": "2685", "d": "7/2013"}, {"title": "addition documentation", "body": "right shows examples maybe mentioned underscore methods return arrays collections way use proxies actual collection would colreset colfilter item thanks lasseee documentcloud would nice addition could made underscore proxy documentation unfortunately documentation nt seem wiki add", "num": "2680", "d": "7/2013"}, {"title": "attributes model constructor misleading", "body": "sure whether bug feature found really misleading var model backbonemodelextend initialize function attr opts consolelog unexpected attrname consolelog expected thisget name parse function res return name rescrazynamedname var collection backbonecollectionextend model model var new model name neo works expected var new model crazynamedname neo parse true entirely know used still feel like use attr already parsed fact assume reading docs case attributes wo nt set model", "num": "2679", "d": "7/2013"}, {"title": "deferred event triggering", "body": "reason eventstrigger calls handlers inline rather deferring ran performance issues wondering reasoning", "num": "2678", "d": "7/2013"}, {"title": "merging partial models collectionset attributes default value reseted back default value", "body": "default values model want update collection calling collectionset array partial model objects like existing models merged ok attributes default value reseted overwritten back default value may related", "num": "2677", "d": "7/2013"}, {"title": "inherit events setelement jqueryobj", "body": "mixing bootstrap backbone one things use bootstrap modal dialogue events wrap content modal backbone want able listen events emits following work javascript var myview backboneviewextend events show hidden clear initialize function thissetelement mymodal inherit events pass jquery object clear function input val", "num": "2675", "d": "7/2013"}, {"title": "version bump", "body": "desirability patch level version bump first mentioned months ago particular issue tripped apparently others couple times nt following issues prs religiously nt recall anything making master would necessitate minor version bump", "num": "2673", "d": "7/2013"}, {"title": "incorrect callback parameters listed route event docs", "body": "catalog builtin events route router route params fired history router route matched route route params fired history router route matched passed", "num": "2670", "d": "7/2013"}, {"title": "default model parameters enforced collectionfetch", "body": "upgrading fetching collection server enforces default properties response would expected first time model initialized second property set changed worked examples identical except different backbone versions working working also asked stackoverflow convinced bug", "num": "2667", "d": "7/2013"}, {"title": "route expression", "body": "greetings specified calling routerroute expression causes different behaviour browsers depending browser encodes current url passing backbonejs", "num": "2666", "d": "7/2013"}, {"title": "bind events conditionally back bone", "body": "one issue backbone events want add one event say change certain condition tried different ways tried like delegateevents unbinds already bound events check issue finally added one class dynamically based condition attaching events class better way handle situation", "num": "2664", "d": "7/2013"}, {"title": "work focus events", "body": "html controls like input etc would like update status based focus made control example would like find input id gets focus tries thing like keeps calling method events focus input updatecurrentcell wrong", "num": "2663", "d": "7/2013"}, {"title": "routerroute method update routes hash", "body": "reason routerinstanceroute method create update routes hash set passing routes object extend method parameter instantiation router object ie extendedrouter routes code explain question reason help route updated myrouterroutes object", "num": "2662", "d": "7/2013"}, {"title": "change event registration order honoured", "body": "backbone events triggered order registered events triggered first negative side affects example javascript var mymodel backbonemodelextend initialize function thissetup thison change thissetup setup function var attr thisget attr var myview backboneviewextend initialize function thislistento thismodel change attr thisrender render function var classname hide thismodelisfoo classname foo else thismodelisbar classname bar attribute changed view rerendered reevaluated model obviously could fixed ensuring events match eg model view listen either never simplified scenario problem currently working code using pattern deriving transient properties many different attributes model declaring attributes explicitly event type string within model nt seem right time views dependant properties derived subset attributes rerender matter attribute changed nt feel like good solution either ideally would want fire time ie attributes changed honouring order events registered", "num": "2661", "d": "7/2013"}, {"title": "make ajax local method modelscollections", "body": "currently looks like models use backboneajax syncing overridden global would great could manipulate ajax request modelbymodel basis example one model connects api requires csrf token another model requests different api chokes unnecessary parameters ca nt use ajaxoptions set csrf everywhere currently forced review request string beforesend would feel cleanermore oo able override ajax method models please let know making sense drum examples would nice overlooking better way currently thanks", "num": "2660", "d": "7/2013"}, {"title": "model fetch clean nonmodel attributes", "body": "model field exists database used flag gem carrierwave knows remove image rails added attraccessible removeimage model backbone want remove image call modelset call modelsave call modelfetch attibute removeimage cleared attributes hash server responding atrribute json response think would better backbone model fetch cleared attributes setting values returned server nt know good idea", "num": "2657", "d": "7/2013"}, {"title": "optional trailing slash", "body": "defining root route pushing history onto stack removing trailing slash left desirable would great optional flag starting history origin appears reside code example opening page pushing onto history stack works result examplecommyrootpagename desired result closing page passing blank value remove page url creates trailing slash result examplecommyroot desired result examplecommyroot trailing slash", "num": "2656", "d": "7/2013"}, {"title": "nt load underscore backbone libraries", "body": "sitesalllibrariesunderscoreunderscorejs sitesalllibrariesbackbonebackbonejs wrong", "num": "2654", "d": "7/2013"}, {"title": "backbonehistorystart find route", "body": "suppose web page called want capable handling routes like also written sth like visit nothing happens particular however triggers route", "num": "2653", "d": "7/2013"}, {"title": "shuffle pluck collection", "body": "hey guys running code like following consolelog somecollectionshuffle pluck description error typeerror somecollectionshuffle pluck function tring use chaning consolelog somecollectionchain shuffle pluck description weird result wrapped void void void void chain true ideas use shuffle pluck methods", "num": "2651", "d": "7/2013"}, {"title": "modelsave success called sync events", "body": "behavior described topic line desired suggest adding complete callback fired change sync etc particular model sub collections rebuilt sync success fired sync data state inconsistency problems arise", "num": "2649", "d": "7/2013"}, {"title": "ne layoutmanage", "body": "", "num": "2645", "d": "7/2013"}, {"body": "async false make ajax blocking hence request get triggered ajax completed sync event triggered within success callback expect otherwise", "d": "7/2013"}, {"body": "yep backbone assumes request asynchronous see information", "d": "7/2013"}, {"body": "great example inappropriate use backbone tickets please ask help debugging app mailing list irc room stackoverflow narrowed", "d": "7/2013"}, {"body": "sorry mistake written google group nt know thanks", "d": "7/2013"}, {"body": "\u5e9f\u8bdd\u521a\u53d1\u73b0\u4fee\u4ed9\u4f20 \u5e9f\u8bdd\u521a\u53d1\u73b0\u4fee\u4ed9\u4f20", "d": "7/2013"}, {"body": "typically would nt posted problem like either since ticket open experienced exact issue error message line code patrixd problem chrome backbone minified using appears bug chrome stable beta problem instantly goes away one things use unminified backbone source use chrome canary firefox safari etc apply noop nt commit source minifying could nt find related bug chromium bug trackers content figuring working patch well chromium fixes issue possibly worth noting error occurred pageloads could due loading order various ajax requests also tried various options uglifyjs since seems js engine problem chromeium much", "d": "7/2013"}, {"body": "fairly sure hit exact issue philfreo describes minified code causing scripts intermittently break crash tab chrome nt much time spend currently running app uncompressed assets looked tickets chrome could nt find anything seemed match glad nt one wonder paulirish ideas might happening", "d": "7/2013"}, {"body": "nt bug tho", "d": "7/2013"}, {"body": "nt bug tho nt think since minified code looked legit seems logically equivalent source runs fine browsersversions patch referenced nt logically affect behavior fixed issue", "d": "7/2013"}, {"body": "thanks lot philfreo try patch tomorrow let know fixed issue seen patch really weird right nt logically affect works happy hope next version chrome fix minified code issue", "d": "7/2013"}, {"body": "applied patch minifying works error horror nt notice last week nt imagine could current version thank much", "d": "7/2013"}, {"body": "tgriesser get crashed tab behavior super helpful get reference crash id going little tricky without smaller repro philfreo start ticket tracker demos hopefully start widdle issue meanwhile team might come across already", "d": "7/2013"}, {"body": "hi paulirish case chrome tab never crashed enabled crash reports able get crash id case crash happens got javascript error stack uncaught typeerror read property null hextendget hextendset hextendadd suggest see code fix problem anything help please let know", "d": "7/2013"}, {"body": "share difference two minified versions well repro canary chrome wed jul pm patricia notifications githubcom wrote hi paulirish tried get crash id posible javascript error stack error nt generate crash report uncaught typeerror read property null hextendget hextendset hextendadd suggest see code fix problem elasticsales anything else thanks reply email directly view github", "d": "7/2013"}, {"body": "used minified version backbone replaced next works apply google closure compilation level simpleoptimizations join code generated require rjs libraries compared two versions final code one use app main difference next code work arbitrary chrome differences name variables next function allways works hope helps nt installed chrome going install philfreo said works fine going try code anyway thanks", "d": "7/2013"}, {"body": "tried app chrome two versions worked correctly philfreo said maybe already fixed problem anything else help", "d": "7/2013"}, {"body": "try mailing list irc channel", "d": "7/2013"}, {"body": "mentioned validate section passing trick defaulted", "d": "7/2013"}, {"body": "nt default validate attr option option validate true", "d": "7/2013"}, {"body": "defaulted true otherwise need say changed", "d": "7/2013"}, {"body": "thanks fast response", "d": "7/2013"}, {"body": "model exists already clientside changes made state nt changed feature getting incorrect event care fetch finished listen request state change", "d": "7/2013"}, {"body": "happening inside jquery precise native used available handle error listening errors either jquery backbone level regardless better ask questions like mailing list irc channel instead opening ticket", "d": "7/2013"}, {"body": "yes reason tried searching opening new ticket learned", "d": "7/2013"}, {"body": "okay tried nothing broke thing happened models loaded collection instantiation already place initialize function called application desirable ticket raised way learn would desirable way seems difference", "d": "7/2013"}, {"body": "looking promise whereas backbone events useful event yet happen promises good code waiting task either already completed yet complete flawed adequate implementation baked jquery called might also look q jquery ajax object returns promise backbonesync bubbles call etc chain", "d": "7/2013"}, {"body": "yep mentions sounds like described pretty much fits definition promises sidenote neat plugin put together cases want trigger backbone events may may async triggerthen need initialize promise lib like whenjs qjs enables promise returned handler method error thrown handler specific event queued using promise lib use traditional promise typically would needed could use backbone events handle lifecycle events bookshelfjs server side orm using backbone patterns foundation allows evented style handle things like validations preinsertdeleteupdate prep etc event handlers may may async maybe someone else find useful", "d": "7/2013"}, {"body": "tgriesser oh cool nt know triggerthen use project bookshelf awesome btw", "d": "7/2013"}, {"body": "tgriesser cool pattern indeed", "d": "7/2013"}, {"body": "hi bytasv thanks bringing stuff let see answer questions complete event right nt explicit event however spell everything want using tactic quite awhile without issue instanceof checks run several times well understand frustration however think small price pay transparent event propagation benefits far outweigh think instead crud events cases want know model synced method generally important ui standpoint callback probably best bet backbone providing common case certainly trigger crud events custom want", "d": "7/2013"}, {"body": "hello braddunbar avoid instanceof check maybe would nice separate event emmiter models object ie believe would nice events separation difficult implement either simply models object could extend backboneevents object route events traffic object instead collection talking crud events recently jumped issues instead binding saved event use jquery ajax success callback passed modelsave method want navigate another application state successful model save could write right bind sync event triggered also fetch model server way distinguish kind operation finished events really help decouple application sometimes could really without sacrifice learn ability framework", "d": "7/2013"}, {"body": "hi gerev reason collection nt receive event time triggered model already removed since model longer member collection events longer propagated context also discussed generally listen cases since handler probably different anyway", "d": "7/2013"}, {"body": "makes sense worked around nt event triggered anyway proper cycle occur found somewhat unexpected surprising", "d": "7/2013"}, {"body": "still fired event triggered model since longer part collection conceivable could fake fairly certain would cause problems fixed", "d": "7/2013"}, {"body": "think brad money clientside code perspective calling model optimistically going want assume lose references model therefore events immediately course still listen potential error backbone pessimisticbydefault might different ai nt", "d": "7/2013"}, {"body": "agree strong point working backbone recently occur endofrequest event counter could lot help models well example server nt respond content call wo nt fired iirc case forced rely callbacks bit limiting hole nt cover makes less convenient centralize code like adding loading indicators necessary hopefully makes sense", "d": "7/2013"}, {"body": "example server nt respond content modelsave call sync wo nt fired iirc case forced rely success callbacks empty json response valid instead triggers see details bit limiting hole sync error nt cover makes less convenient centralize code like adding loading indicators necessary triggered model operations consistently also collections consistently proxy events models contain happens model destroyed nt member collection always listen model instead", "d": "7/2013"}, {"body": "version master wip options removed edge use found last official release", "d": "7/2013"}, {"body": "please remember search opening issue addressed several times", "d": "7/2013"}, {"body": "hi eggbeard options longer attached view backbone though like info please see", "d": "7/2013"}, {"body": "many thanks quick useful responses interesting reading yes part git education search better next time", "d": "7/2013"}, {"body": "sweet want email ask send description", "d": "7/2013"}, {"body": "sent message support desk", "d": "7/2013"}, {"body": "sure mean see line backbonejsorg official source change master since probably intentional disagree feel free send pull request wait next stable release", "d": "7/2013"}, {"body": "yes see post wrote line present backbonejsorg setting url collection creation works fine also find minimized version line backboneminjs repository line absent backbonejs really breaks feature described using uncompressed version also mentioned missing current master version already pointed previous post", "d": "7/2013"}, {"body": "afraid listening events collection level extremely core bit backbone functionality nt want listen events collection simply nt listen", "d": "7/2013"}, {"body": "gon na guess breaking changes probably going slow jashkenas speak iirc warning site said backbone alpha would breaking changes good thing usually read change log get good idea changed get around example change note passing old functionality", "d": "7/2013"}, {"body": "intend continually break backwards compatibility even necessary yes semantics important new defaults said backbone nt often maybe ever critical security fixes anything need jump immediately feel free use version like take time upgrading", "d": "7/2013"}, {"body": "hi neojski original arguments passed unchanged access current value whichever works best discussion interested rationale hope helps", "d": "7/2013"}, {"body": "nt cause performance problems code inside make defer instead breaking ideal simplistic nature backbone synchronous event execution", "d": "7/2013"}, {"body": "deferring solution wondering mechanism set way makes sense thanks tue jul tim branyen notifications githubcomwrote trigger nt cause performance problems code inside make defer instead breaking ideal simplistic nature backbone synchronous event execution reply email directly view github", "d": "7/2013"}, {"body": "ah fixed released yet sorry", "d": "7/2013"}, {"body": "hi naddiseo certain looks like using unsupported syntax keys hash single event name event name followed selector delegation using delegates events elements nt think intention check docs source information", "d": "7/2013"}, {"body": "plan another release backboneconf end month leave open til happens", "d": "7/2013"}, {"body": "addressed", "d": "7/2013"}, {"body": "recallfx recall correctly issues merging defaults caseywebdev addressed master try latest see fixes issues seeing", "d": "7/2013"}, {"body": "tgriesser verified current master issue fixed thanks", "d": "7/2013"}, {"body": "great", "d": "7/2013"}, {"body": "reading right bug potentially caused chrome following according rfc octets must encoded corresponding graphic character within usascii coded character set use corresponding character unsafe corresponding character reserved interpretation within particular url scheme therefore imo backbonejs router needs support usascii would suggest changing links code conform", "d": "7/2013"}, {"body": "hi ambeer generally best accomplished conditionals handler hope helps js var view backboneviewextend events", "d": "7/2013"}, {"body": "see change bind string try", "d": "7/2013"}, {"body": "hi codylindley used read initial routes actually store responsibility lies history route hope helps", "d": "7/2013"}, {"body": "sorry clear code example demonstrate myrouterroutes contains object routes manually add routes object updated console see log object myrouterroutes contains routes suppose private value", "d": "7/2013"}, {"body": "right try logging instead routes added calling", "d": "7/2013"}, {"body": "hi neocotic order change events case intentional unlikely change comes one event may many events would recommend make function event order important relying usually end debugging js var mymodel backbonemodelextend isfoo function return thisget attr foo isbar function return thisget attr bar var myview backboneviewextend initialize function thislistento thismodel change attr thisrender render function var classname hide thismodelisfoo classname foo else thismodelisbar classname bar", "d": "7/2013"}, {"body": "interesting nice use case still feels little bit edge overriding wrapping model question adding removing whichever rare case app csrf token ajax options", "d": "7/2013"}, {"body": "yep overriding works also override model model basis also handle calls", "d": "7/2013"}, {"body": "righto would even better way", "d": "7/2013"}, {"body": "sorry might misunderstanding possible override sync method without rewriting function able capture ajax request ie want create pool ajax requests modelcollection abort modelcollection disposed would", "d": "7/2013"}, {"body": "certainly might look something like", "d": "7/2013"}, {"body": "ah ton", "d": "7/2013"}, {"body": "hi fabioperrella setting attributes returned server intentional decision backbone server set many attributes likes several issues concerning longer explanations eg want make sure attribute removed fetching listen event clear", "d": "7/2013"}, {"body": "pinging braddunbar particular two lines definite opinion time change made root urls without additional components needing include trailing slash side effect assuming roots usually prefix additional url components", "d": "7/2013"}, {"body": "definitely latter nt strong opinion trailing slashes root though aware problems joshpangell problem trailing slash causing purely aesthetic cause technical issue", "d": "7/2013"}, {"body": "let assume pure root urls never trailing slash put us although perhaps allow one slash manually resourcewise best us assume oldschool apacheslashmeansindexhtml idiom", "d": "7/2013"}, {"body": "sounds good patch incoming", "d": "7/2013"}, {"body": "braddunbar trailing slash causing technical issue per say aesthetics important", "d": "7/2013"}, {"body": "addressed sure like solution one uncomfortable fiddling finicky portion code something currently causing problems two caveats described pull could possibly addressed seems like lot trouble trailing slash", "d": "7/2013"}, {"body": "potential caveat cache many people cache based url especially varnish slashes url looked different locations fact", "d": "7/2013"}, {"body": "sure like solution righto instead fiddling simply normalize never include slash directly root", "d": "7/2013"}, {"body": "sure thing updated", "d": "7/2013"}, {"body": "false alarm figured want libs pages add wildcard char textarea adminconfigdevelopmentbackbone probably default behaviour though opinion course cheers", "d": "7/2013"}, {"body": "hi neojski backbone routers ignore query string entirely favor using path name similar check want gory details", "d": "7/2013"}, {"body": "sad thanks reference", "d": "7/2013"}, {"body": "collection methods return array new collections need wrap result another call said generally get better response type question mailing list documentcloud irc channel freenode", "d": "7/2013"}, {"body": "unfortunately work returns also tried following returns seems like big bug", "d": "7/2013"}, {"body": "whoops gave bad information teach post without testing first reason returns array models objects try size instead", "d": "7/2013"}, {"body": "yes works thanks however according supported backbonejs assume could chained", "d": "7/2013"}, {"body": "sure", "d": "7/2013"}, {"body": "oo work return value seems like bug try", "d": "7/2013"}, {"body": "fear enter mode nt get shortcuts underscore methods proxied directly onto collection prototype provide work better slightly performant going nonchained version", "d": "7/2013"}, {"body": "bah strike two morning tested instead mirrors property model thanks assist caseywebdev", "d": "7/2013"}, {"body": "prob makes crave dot path resolving underscore", "d": "7/2013"}, {"body": "sure would resolve issue events fired asynchronously imo fire custom event rebuilt models listen one sure model state stable", "d": "7/2013"}, {"body": "hi cthielen current order definitely intended think agree sboudrias sounds like good spot custom event", "d": "7/2013"}, {"body": "wow idea happened sorry", "d": "7/2013"}, {"body": "hi adamterlson understand motivation comes actually gone path done tell nt pretty ending using new values leaving old objects alone desirable prevents driven crazy would suggest periodically syncing data via benefit handling caveat mentioned well hope helps", "d": "7/2013"}, {"body": "according docs collection comparator function allowed models arguments distinguishes respectively nt believe misinterpreted tell appear spot conclusion designed situations two argument comparators also looks like issue briefly come past additionally since ends referring passed option breaks run lastly final line test case crashes made small mistake passing model nonexistent comparator method think meant however would give call method get undefined error collection comparator passed default anyways line", "d": "7/2013"}, {"body": "looking bit appears either documentation issue would need written order allow two argument comparators think docs collection comparator could provide caveat better explains two scenarios v arguments one argument comparator delegate allows use whereas two argument comparator delegate native optimal larger collections removes preprocessing step work default happy submit pull request potentially even work fix methods account two argument comparators want make sure everyone board", "d": "7/2013"}, {"body": "jashkenas see commit potential fix could small documentation fix see would happy submit pull request either make sense", "d": "7/2013"}, {"body": "ok started adding test stuck evaluating check link contains correct href", "d": "7/2013"}, {"body": "think bug opera also angular edit think elaborate bit basically nothing historynavigate problem read href property link opera incorrectly resolve baseuri", "d": "7/2013"}, {"body": "ok guess backbone fault obsolete soon since opera migrating webkit close", "d": "7/2013"}, {"body": "two views view contenteditable element views observe model one contenteditable elements dom event focuses element related view know set state related view view know currently edited model fires change event view ignores event currently edited hand view currently edited updates contenteditable element current model data", "d": "7/2013"}, {"body": "sure right way use backbone probably appropriate open bug ticket try mailing list irc channel instead", "d": "7/2013"}, {"body": "nt make copy object like source also mutation options mutated model constructor collectionreset javascript defaults options options emulatehttp backboneemulatehttp emulatejson backboneemulatejson later optionsbeforesend function xhr xhrsetrequestheader xhttpmethodoverride type beforesend return beforesendapply arguments even later var xhr optionsxhr backboneajax extend params options", "d": "7/2013"}, {"body": "already fixed bug removing reference collection option object", "d": "7/2013"}, {"body": "hi molily chaplinjs team chaplinjs framework sits top backbone discussed query string support decided write viewpoint knuton published article talks general use urls amp javascriptbackbonejs apps particular also try join discussion respond comments several issues including one", "d": "7/2013"}, {"body": "heyo reading chaplinjschaplin article one bit like correct jeremy argues clientside apps encode query params paths like directionascsortcreatedstateopen point querystrings effectively opaque strings browser continue use opaque querystring choosing design putting actual querystring part url segment works fine use json serialization ordered path components whatever like importantly would fine entertain support query strings needs work transparently hashes well feel free send pull request although looks like nt gotten quite far chaplin yet finally bit shame write advocacy article instead making request via email understand gets results let hope nt cause many misconceptions", "d": "7/2013"}, {"body": "would agree molily bug resolved message clientside apps encode query params paths added support query strings works transparently hashes along failover url length constraints ie jashkenas perhaps advocacy article representative others historical experiences filing feature requestsbugs", "d": "7/2013"}, {"body": "jashkenas sorry misrepresented opinion issue mentioned urls alternative query strings said chaplin issue agree query strings avoided transformed cases finally bit shame write advocacy article instead making request via email goal article discuss topic general want web sites work difference apps traditional sites regard deduce backbone least allow assumed fundamental controversy point even google using hash urls lot backbone beginners wondering whether pick hash urls history choose aware implications get using pushstate least spending lot time explain basics chaplin users article tries explain background clearly recommend one practice raise question directly already several closed prs contributors explicitly spoke feature glad see discussion starting good starting point try restore changes make pr write tests makes sense ignore qs routing would match line routing frameworks moment one needs write spec support different query strings chaplin router puts pattern matches query string parameters hash like rails love see something similar bigger change deprecating chaplin chose override break core backbone logic know lot plugins monkeypatching weakens maintainability interoperability imho chaplin router totally relies backbonehistory query string extraction something top works fine since particular ignore query part handlers called switching problems mentioned comment assume tough case already query string apart switch lt quite easy moviepilotcom vizgedprojectde solved early redirect nonpushstate browsers appends backbone could add locationsearch interestingly already works way around redirecting hash pushstate locationsearch appended case", "d": "7/2013"}, {"body": "realized nonpushstate browsers latest backbone redirects guess reason query string processed server side client read using usual makes sense first glance order support qs backbone routing well could insert qs twice ugly indeed sites redirect posted early redirection code make sense pull apart remix process qs server handling qs meaningful context root assuming opposite qs processed serverside regardless path make sense send twice use case understand qs breaks scripts rely standard behavior scripts work hash urls anyway unrealiable example analytics scripts need feed something like manually otherwise nonpushstate browsers always track proposal mapping lt gt send qs server another context guaranteed qs even hit server imagine two users nonpushstate browsers sharing url qs sent using hash urls deceiving qs part use property disallow qs never worked anyway pushstate backbone would produce urls like", "d": "7/2013"}, {"body": "points latest proposal sound good except last one nt able support qs way support paths fact semantically unordered screw entirely", "d": "7/2013"}, {"body": "collectioncreate also use promises instead pass successerror callbacks", "d": "7/2013"}, {"body": "regardless underlying library used backboneajax response server means operation case destroy success nt server returns http status indicates http success however response data interpreted json server return json failure next logical level http transport words http status indicates success placed additional constraints type response expect actual data server returning header says response body empty string returning invalid json truly content appropriate http response would although cases may generally may blind delete request server care response code provides option caller add handlers via promises could make use information returned additional validation show status messages confirming server action code nt care value returned server returns unpredictably inconsistent responses eg html json plain text depending circumstances unable correct server code use interpretation response based string returned ignore completely", "d": "7/2013"}, {"body": "thank issue overwritten remove function", "d": "7/2013"}, {"body": "", "d": "7/2013"}, {"body": "urlroot gives free", "d": "7/2013"}, {"body": "caseywebdev really thanks", "d": "7/2013"}, {"title": "ca nt seem use handlebars helper inside block", "body": "code jsfiddle using ember handlebars try search fruit city typing single letter input get error press another key continue try search get another error note different working code jsfiddle two ways first inside block changed second following javascript added something wrong bug", "num": "3079", "d": "7/2013"}, {"title": "behaviour async router model hook returns promise", "body": "question regarding async router pause behaviour loading data via promises hook returns promise router pauses promise resolves resolution calls etc assuming expected behaviour using emberdata template still rendered empty data promise resolves promise resolves router appears resume calls lifecycle methods thus rendering template second time see differences without emberdata pauses resolution emberdata double render confused two correct behaviour specifically problem trying solve render message using template promise nt resolved emberdata appears seems work equivalent use without emberdata thanks", "num": "3076", "d": "7/2013"}, {"title": "adding layout index view changes context view parent", "body": "upgrading app found regression master reproduce go jsfiddle click foos index link expected behaviour see foos index controller lt foosindexcontrollerxxx actual behaviour foos index controller lt fooscontroller emberxxx note remove layoutname appfoosindexview correct behaviour happens", "num": "3075", "d": "7/2013"}, {"title": "ember run later fails silently wait parameter number", "body": "hi everybody works fine never called big deal could cast variable number using error message automatic cast would nice setting variable via template think mistake using string easily done", "num": "3072", "d": "7/2013"}, {"title": "url updated transition mobile safarichrome", "body": "older versions mobile chromesafari seems url updated transition makes hard nearly impossible navigate application browser backforward buttons", "num": "3071", "d": "7/2013"}, {"title": "observes calling callbacks correct arguments", "body": "docs says observes callback called nt seem occur fiddle showing problem observersbeforeobserves called may wrong nt object changed seems object fn observes trying watch run code name change change bug need run code objects array noted nt tests see value send callback", "num": "3065", "d": "7/2013"}, {"title": "fix embercomponent doc typo", "body": "line read", "num": "3064", "d": "7/2013"}, {"title": "error emberjs routing", "body": "sure error occuring change route transitioned mapemespera error objeto n\u00e3o d\u00e1 suporte para propriedade ou m\u00e9todo jqueryjs linha caractere n\u00e3o foi poss\u00edvel concluir opera\u00e7\u00e3o erro jqueryjs linha caractere error occurs function globaleval jquery windowexecscript error occurs ie versions lower use coffescript please see code coffeescript webappmapemesperaroute emberrouteextend redirect gt webappchamada transitionto mapemchamada activate gt controllerfor status settimer controllerfor mapemespera startgpswatch consolelog ativando route deactivate gt controllerfor mapemespera stopgpswatch", "num": "3061", "d": "7/2013"}, {"title": "latest update gem downgrades handlebars", "body": "hey folks running upgrade seems downgraded looks like someone pushed rubygems without pulling master example bundle update", "num": "3060", "d": "7/2013"}, {"title": "emberversion nt match release", "body": "hey guys since xss patch releases day nt match actual released version ie surely like website", "num": "3059", "d": "7/2013"}, {"title": "getting started tutorial broken ember emberdata", "body": "completing step marking model complete incomplete getting error clicking checkbox toggle todo item complete state emberjs throwing following exception uncaught typeerror must pass resolver function sole argument promise constructor detailed info chrome console promise dsmodelemberobjectextendsave apptodocontrolleremberobjectcontrollerextendiscompleted computedpropertyprototypeset set setpath set embertryset bindingsync tryable embertryfinally suspendlistener embersuspendobserver bindingsync deferredactionqueuesflush backburnerend backburnerrun emberrun embereventdispatcheremberobjectextendbubbleevent embereventdispatcheremberobjectextendsetuphandlerrootelementonemberhandleerrorsaction emberhandleerrors anonymous function xeventdispatch xeventaddyhandle", "num": "3058", "d": "7/2013"}, {"title": "tests embertesting intermittently failing tests versions firefox", "body": "click triggers appropriate events order fires focus events inputs expected mousedown focusin mouseup click result mousedown mouseup click diff mousedown focusin mouseup click source invokecallback promiseprototypethen lt eventtargettrigger fulfill lt deferredactionqueuesprototypeflush backburnerprototypeend backburnerprototyperun emberrun waitpromise fires focus events textareas expected mousedown focusin mouseup click result mousedown mouseup click diff mousedown focusin mouseup click source invokecallback promiseprototypethen lt eventtargettrigger fulfill lt deferredactionqueuesprototypeflush backburnerprototypeend backburnerprototyperun emberrun waitpromise", "num": "3057", "d": "7/2013"}, {"title": "router redirects abort transactions", "body": "means even redirect tree exit reenter parents", "num": "3056", "d": "7/2013"}, {"title": "valuebinding dynamic string nt work", "body": "using ember jquery handlebars ask questionproblem view like one textfield template trying pass custom valuebinding like ember nt set correct value binding ember setting value html attribute see viewing html source code value nt binded anyone idea thanks advance guys really apprecciate example see clarity", "num": "3055", "d": "7/2013"}, {"title": "dry way extend embertextfield", "body": "idea extend embertextfield onkeyup event code sendaction function textfield controller closure accessible outside extending add sendaction functionality something like javascript appmyfield embertextfieldextend keyup function event sendaction replica var action thisget action thisget onevent controller thisget controller value thisget value bubbles thisget bubbles sure proper emberlike solution let recommend one", "num": "3054", "d": "7/2013"}, {"title": "textfield keypress strange behaviour", "body": "see template controller two problems dosearch nt triggered press something like backspace variable search contains input value keypress event may normal event handler embertextfield like keyup available", "num": "3053", "d": "7/2013"}, {"title": "wrapping inside emberrun testing", "body": "wrapping inside run loop like still get error could nt work right forget wrap something else like emroutermap emapplicationcreate thanks help", "num": "3051", "d": "7/2013"}, {"title": "license missing gemspec", "body": "rubygemsorg nt report license gem specified gemspec last release via eg speclicense mit speclicenses mit including license gemspec easy way rubygemsorg tools check gem licensed image scanning repository license file parsing readme attempting identify license licenses much difficult error prone even projects already specify license including license gemspec good practice see example rubygemsorg uses gemspec display rails gem license even license finder gem help companiesindividuals ensure gems use meet licensing needs tool depends license information available gemspec important enough issue even bundler generates gems default mit license hope consider specifying license gemspec please close issue nice message either case follow thanks time appendix need help choosing license sorry nt checked readme looked license file github created license picker tool code without license specified defaults rights reserved denying others rights use code list license names found frequencies ps case wondering found made issue collecting stats gems originally looking download data decided collect license metadata make issues gemspecs specifying license public service see previous link blog post aobut project information", "num": "3050", "d": "7/2013"}, {"title": "uncaught notsupportederror svg element", "body": "jsbin uncaught notsupportederror implementation support requested type object operation getting error include svg element handlebars error remove svg element", "num": "3048", "d": "7/2013"}, {"title": "emberroute class consider removing hash placing event functions directly class prototype", "body": "problem containing event functions hash easy customize hash subclasses example javascript appadminonlyroute emberrouteextend events willtransition function transition appget currentuserisadmin transitionabort appadminindexroute appadminonlyrouteextend events someotherevent function overwrite parent class events hash lose willtransition event currently way inherit events parent class making copy events hash adding events easy plus ca nt", "num": "3047", "d": "7/2013"}, {"title": "emberinspect error fails", "body": "expected error oops got object error simple deal breaking error adds unneeded test failure noise cc tricknotes", "num": "3039", "d": "7/2013"}, {"title": "emberinspect data tests fail ie", "body": "small test breakage basically test likely slightly less strict cc tricknotes think done work inspect code stuff recently mind taking look", "num": "3038", "d": "7/2013"}, {"title": "aborting transition willtransition keeps loadingroute enter state", "body": "defined methods calling within another route event keeps state never calls method nt really know handlebars ember example jsbin", "num": "3034", "d": "7/2013"}, {"title": "inconsistent behavior setupcontroller model explicit autogenerated controllers", "body": "inconsistent behavior using hooks router introduced breaking change present setupcontroller fire unless explicit call made behavior inconsistent depending whether controller explicitly defined explicit controller called autogenerated controller called explicitly defined controller automaticly generated controller", "num": "3033", "d": "7/2013"}, {"title": "bound helpers nt work primitives block", "body": "jsbin applying bound helper primitive data type block generates error would expect implicitly use unbound helper behaviour work around prefix helper unbound helper proposed test javascript test able use bound helpers primitives block function emberhandlebarsregisterboundhelper stringify function value return valuetostring view emberviewcreate items embera true template emberhandlebarscompile viewitems stringify appendview equal view text equal view li children length markers", "num": "3031", "d": "7/2013"}, {"title": "make ember support components lazy loaded", "body": "happen possible create another namespace use components namespace application currently able something like namespace simply replacing one line could define components like another problem components registered currently done application initializes components could loaded long app async loading think responsible registering helper nt know yet ideas", "num": "3023", "d": "7/2013"}, {"title": "feature request support events object ember views", "body": "hey guys loving everything ember far missing able set event delegated handlers using object like backbone like thinking delegated events inside events object would relative view gist made discussing", "num": "3012", "d": "7/2013"}, {"title": "passes property name changed whereas", "body": "apps use second arg discover property changed therefore something changed example might following property would related group together use conditional function whilst works nt seem pass property name caused invocation originating instance consistency think would useful passed args", "num": "3011", "d": "7/2013"}, {"title": "view table breaks bindattr", "body": "intended behavior trash button clicked toggles class table row via bindattr working toggles fading element either following actions repair behavior removing view class declaration removing tags illustrated fiddle content bindings still working binding attributes breaks", "num": "3009", "d": "7/2013"}, {"title": "embertesting scheduled timers fails", "body": "wait method embertesting checking scheduledtimers returns active several scheduled timers running app via runlater test action eg click gets beyond login application timers start subsequent thennables blocked happy construct fix failing test case need understand motivation checking hastimers", "num": "3008", "d": "7/2013"}, {"title": "rename findproperty", "body": "similar eviltrout asked today use findproperty spot totally called main reason cause find reads pretty crazy findproperty actually finds element array property verbose name findelementbyproperty underscore names appropriate findwhere slightly different api really think reconsider renaming findbyproperty deprecation old one introduce findwhere replacement eg findwhere api parity underscore make findwhere b findwhere b c work", "num": "3007", "d": "7/2013"}, {"title": "feature request loading multiple models single route", "body": "use case need load multiple models single route want action eg redirect models finished loading think addition model hook also othermodels hook similar could used official way load multiple models model hook batch single promise object adding separate hook eg othermodels seems better opinion redirecting inside app main model called route may still require addional models loaded official way setting secondary models setupcontroller fine models loaded asyncronously mandatory route work case need trigger actions aftermodel hook required models loaded moment ca nt use sideloading api api external also ca nt use nested routes views nested cases views secondary models used calculations currently using setupcontroller observers watch models finished loading really workaround think common use case complex apps route requires multiple models one", "num": "3006", "d": "7/2013"}, {"title": "route isactive compare serialized segments opposed context model", "body": "route isactive one discourse examples identity map multiple models semantically identical diff objects floating around lead write horrendous hack think reasonable compare serialized versions model allow linkto mark elements active thoughts", "num": "3005", "d": "7/2013"}, {"title": "firefox locks large collections", "body": "setting arrayproxy content large collection case gt records causes firefox lock display unresponsive script error exact code data loads reasonably quickly chrome safari ie tested amp managed extract minimal amount code app reproduce issue jsbin load firefox see unresponsive script error pretty quickly pretty sure related notifying observers property changes get unresponsive script warning records add cps model nt know enough observers work able debug issue much launched product customers nt use firefox release notes willing pair core team member assist debugging necessary someone point us right direction able debug would great", "num": "3002", "d": "7/2013"}, {"title": "url encoding bug firefox transition route", "body": "please see jsbin example see matching paths clicking change location every browser except firefox context application working using search query url segment route dynamic model query location often contains comma query value serialized object generated jquery param method reason query string url segment user bookmark search later model find method simply takes query string uses ajax call back problem transitioning route firefox issue comma seems firefox returning decoded comma vs encoded one actual url causing conditional comparison last set url current url evaluate false hashlocation class onupdateurl method route transitioned demonstrate override entire hashlocation constructor initialize app makes jsbin created bit lengthy hope comments help would suggest fix sure best solution would simply replacing encoded comma actual comma call jquery param method wonder might good url decode hashes comparison onupdateurl method hashlocation class", "num": "3000", "d": "7/2013"}, {"title": "embertesting app boots causes visit trigger model hook", "body": "toranb noticed trouble mocking ajax requests embertesting upon inspection found trouble caused appreset booting app root route caused model hook called ajax mocking code calling visit nothing already state", "num": "2997", "d": "7/2013"}, {"title": "ca nt access properties controllers loop", "body": "isediting property applicationcontroller ca nt used within loop nt work one evaluates controllersapplicationisediting property shows right behaviour think little scope related flaw might documented somewhere error message shown look", "num": "2994", "d": "7/2013"}, {"title": "rubygems thinks latest version embersource", "body": "makes emberrails install wrong version embersource handlebarssource", "num": "2990", "d": "7/2013"}, {"title": "toggle checkbox inside element action helper", "body": "recently ran issue checkbox located inside element action helper would nt toggle clicked found one solution works fine usecase seems bit hacky longterm fix instance even worth propagating click manually causes event target change maybe implementing better solution possible deeper within ember thoughts", "num": "2989", "d": "7/2013"}, {"title": "uncaught error attempting inject unknown injection", "body": "hello getting following error using emberlatestjs uncaught error attempting inject unknown injection entire app aborts", "num": "2988", "d": "7/2013"}, {"title": "setpath null main null undefined uncaught error object path mai could found destroyed", "body": "version setpath called arguments resulted error", "num": "2984", "d": "7/2013"}, {"title": "router historyapi hitting server faviconico url change", "body": "hi using location history setting router working fine implemented support server noticed client contacting server url changed reload page keep requesting faviconico page running chrome windows firefox something expected prevented", "num": "2980", "d": "7/2013"}, {"title": "inherit dependent keys computed properties calling super", "body": "hi could use inherited dependent keys computedproperties way achieve see information see jsfiddle thanks", "num": "2976", "d": "7/2013"}, {"title": "textfield action keydown instead keyup", "body": "noticed todomvc example ember seems latency adding todos however examples triggers addtodo action keydown ember keyup nt know intended keydown gives user responsive feel", "num": "2972", "d": "7/2013"}, {"title": "embertesting helpers chained test fails every second run firefox", "body": "embertesting fails consistently every second run full embertesting test suite always passes run test case verified firefox firefox aurora edit test also occasionally failed chrome consistent firefox", "num": "2970", "d": "7/2013"}, {"title": "embertesting test checkbox event order fails firefox", "body": "order checkbox click events firefox differs standard behaviour browsers see firefox bug details actual result unfortunately makes checkbox event order test fail firefox one potential fix would use browser detection verify correct behaviour another would attempt workaround may complex", "num": "2969", "d": "7/2013"}, {"title": "handlebars input helper embertextfield view picking value entered chrome autofill", "body": "simple form using input helper controller call thisgetproperties submit works fine enter values form however google chrome autofill already entered values properties empty suspect result autofill triggering onblur event values bound particular usecase work around", "num": "2968", "d": "7/2013"}, {"title": "typeerror pushobjects thrown trying access childviews property view", "body": "idea since getting following exception trying access childviews property thing though throws error also trying access view property within template error see example open dev console see error trying log childviews property notice remove viewsomevar handlebars template works expected sure childviews view properties inside templates anything issue uncovered hopefully someone better understanding inner workings able troubleshoot", "num": "2967", "d": "7/2013"}, {"title": "ember data relationships accessible setupcontroller", "body": "see alert one actual value go applicationroute setupcontroller function see relevant code", "num": "2965", "d": "7/2013"}, {"title": "emberclick test fails firefox chromium", "body": "test jquery patch provided fails firefox version error clicked checkboxes checked jquery patch nt work error raised chromium version reproduce include ember dependencies", "num": "2964", "d": "7/2013"}, {"title": "ember logger conflicting phonegap logger", "body": "sarted using ember version phonegap project phonegap logger function breaks ember due phonegap logger function assuming error message typeerror undefined object evaluating importsconsole name apply emberjs line", "num": "2962", "d": "7/2013"}, {"title": "bug routesystem thisset", "body": "hi think found bug router line nt thisset controller controller get error code assertion failed must use emberset access property lt lobbyroute", "num": "2960", "d": "7/2013"}, {"title": "nested resource nt rendered inside parent template links parents template nt work", "body": "hard describe better put code routerjs see route nested market resource original idea make resource render action inside error got example need less code ilustrate problem lets see actors problem marketroutejs markethbs marketauctionsroutejs auctionroutejs key part detail page auction conceptually inside scope marketrelatedthings nt want render view inside stuff tabs nav nt make sense view want render inside direclty works problem occurs detail page click link go back route simple goes back fails silently nt render inside template see layout previous version ember got error call method connectoutlet undefined updated latest version nt see error versions behavior ember newby maybe basic misundestanding ember works", "num": "2956", "d": "7/2013"}, {"title": "tag messing bower", "body": "exists former considered bower later version tag probably removed cc wycats", "num": "2952", "d": "7/2013"}, {"title": "redirect replacewith changes url", "body": "indexroute conditional redirect nt want url change blog says replacewith function like change urlcreates history entry signed using latest build", "num": "2951", "d": "7/2013"}, {"title": "rendering non existent templates raise warning", "body": "jsbin demo nothing happens even part nt found even explicitly specify name", "num": "2949", "d": "7/2013"}, {"title": "helpers dependent keys inside nt work", "body": "created jsfiddle demonstrate issue open console see error basically register helper dependent keys try use helper inside block get error also found unanswered stackoverflow question seems deal issue", "num": "2948", "d": "7/2013"}, {"title": "add remove unregister method embercontainer", "body": "new async router async load extra code async code contains extra routes ember generated need ones async code ones generated registered ember came following solution javascript apparticlesroute emberrouteextend beforemodel function transition apparticle var self return getscript articlescodejs function return selfreregisterroutes transition app article register routes naming convention apparticleroute loaded modules dummies generated ember retry transaction reregisterroutes function transition namespacename namestartswith thiscontainerlookup route loading teardowntoplevelview teardown loading view var self var prop embernamespacebyname namespacename getownproperties getownproperties new regexp namestartswith route test prop thisreregisterroute propreplace route camelize thisrouterroutercurrentparams transitionparams set parameters transition currentparams router return transitionretry retry transaction reregisterroute function routename var route thiscontainercachedict route routename route undefined routedestroy destroy generated route delete thiscontainercachedict route routename gc route thiscontainerlookup route routename register async loaded route routeroutename routename set routename would preferable remove unregister method container something like instead", "num": "2947", "d": "7/2013"}, {"title": "urloriginated transitions", "body": "try outline steps reproduce issue make route dynamic models standard page instance save direct access route via url entry call saved transition gives something like instead expected url main model also absent routecontroller evidenced blank page ed transition call appears contain correct info cc machty", "num": "2946", "d": "7/2013"}, {"title": "ember render handlebars script tag", "body": "matter ca nt get anything render even following examples ember website bug missing something", "num": "2945", "d": "7/2013"}, {"title": "regression using promise context route", "body": "first apologies able pin accurately see spend time investigating later week said wanted file asap someone start looking rings bells seems broke navigation relevant code looks like javascript myappitemroute emberrouteextend events prevbuttonclicked function previd thistransitionto itemrouteindex myappitemfind previd nextbuttonclicked function nextid thistransitionto itemrouteindex myappitemfind nextid myappitemindexroute emberrouteextend setupcontroller function controller model controllerset model thismodelfor item myapploadingroute emberrouteextend hbs itemhbs view pageswitcherview idbingingid outlet hbs itemindexhbs isloading working else show item obvious change soon fired current content destroyed url changes given promise model working rendered promise resolves hbs template updated show model automatically current content stays url stays unchanged iirc loading appended bottom page current content promise resolves url changes hbs template render model sure intended current way works seems pretty odd also also seems leave router confused state especially user give promise resolves ie pressing prev next button rapid succession sometimes click next button twice work sometimes prevnext buttons jumps gt item", "num": "2944", "d": "7/2013"}, {"title": "indexroute events nt bubble applicationroute", "body": "seems regression working fine use case event open modal user logs without required permissions error modal shown simplified example shown jsbin appapplicationroute emberrouteextend events openmodal function alert hellooo appindexroute emberrouteextend redirect function thissend openmodal throws code working", "num": "2943", "d": "7/2013"}, {"title": "arraycontroller sort property itemcontroller", "body": "hello want sort content property defined work seems sort properties defined elements properties seem ignored jsfiddle demonstrate expect records sorted ids position property returns id instead listed appear model array", "num": "2940", "d": "7/2013"}, {"title": "uncaught ca nt call rerender view destroyed", "body": "navigate around app often get error destroy navigation app reload whole page figure happening totally deal breaker app three subclasses base views array controllers routes view pageview emberviewextend title identifier classnames page willdestroyelement function var elmclasses attr class elmheight height temporarycontainer array controller route use goto function array controller bind elements app navigation serializer setupcontroller route set able handle works perfectly error occurs guess thing breaks ideas going fix", "num": "2939", "d": "7/2013"}, {"title": "error hook always called", "body": "got following setup server throws error hook nt get called change model error gets caught expected", "num": "2935", "d": "7/2013"}, {"title": "setting nonarray value arraycontroller gives vague error", "body": "error complains able add array observers assert gives helpful error message", "num": "2934", "d": "7/2013"}, {"title": "allow bindings doms innertext attribute", "body": "hello believe would great bind controller property dom elements property would allow people using example attribute example", "num": "2929", "d": "7/2013"}, {"title": "weirdwrong behavior regarding deserialize amp serialize hooks", "body": "upgrading deserialize hook called anymore going bookmarked edit uri deserialize model id uri model instead serialize hook called nt really make sense changing dependency back brings back expected behavior deserialize getting called direct uri navigation serialize inapp navigation", "num": "2928", "d": "7/2013"}, {"body": "believe emberdata issue currently ed record arrays promises causing lot problems check discourse discussion", "d": "7/2013"}, {"body": "explained slightly succintly upgrading master finding view foosindexhandlebars used", "d": "7/2013"}, {"body": "closing favour", "d": "7/2013"}, {"body": "hi foxgit please provide usecase issue", "d": "7/2013"}, {"body": "view display message remove time period via emberrunlater time period set template use view various values accidentally set value string like template view result emberrunlater never called error thrown made hard debug though error using string wait parameter would make things easier", "d": "7/2013"}, {"body": "mimic settimeout least chrome casts", "d": "7/2013"}, {"body": "get specific chrome version also resolution class urlhistory related compatibility", "d": "7/2013"}, {"body": "docs old nt send value since value maybe lazily computed need objget keyname get value", "d": "7/2013"}, {"body": "get object inside array object inside array one observing", "d": "7/2013"}, {"body": "shadowbelmolve able something like kselden mentioned", "d": "7/2013"}, {"body": "observes property every element cp sort mapreduce array like nt fired per item unless synchronously consume via observer change items one one would perform horribly", "d": "7/2013"}, {"body": "able submit pr", "d": "7/2013"}, {"body": "version jquery using", "d": "7/2013"}, {"body": "debug debug emberversion debug handlebarsversion debug jqueryversion debug", "d": "7/2013"}, {"body": "tricknotes comment talesmgodois try make jsbin reproduces issue", "d": "7/2013"}, {"body": "jamesotron unfortunately embersource version snuck ahead release last week issue official security patch official point release resulted ruby gems version collision going forward keep rubygems versions sync ember released versions someone wishes use prerelease versions ember need follow instructions emberrails site merely placing appropriate version ember correctly vendorassets obviously several issues current method keeping embersourceemberrails emberjs sync", "d": "7/2013"}, {"body": "agree much desired way rails community handling asset packaging moment however issue browse see handlebarssource dependency whereas depends version short embersource version needs yanked republished new version correct handlebars dependency restored", "d": "7/2013"}, {"body": "also apparently ca nt reopen que surprised", "d": "7/2013"}, {"body": "depended official security patch bump hbs dep breaking technically nt reason hbs compiler revision bumped rubygems embersource never come existence interim solution machty pushed current master", "d": "7/2013"}, {"body": "okay thanks", "d": "7/2013"}, {"body": "come solid solution", "d": "7/2013"}, {"body": "keen help way", "d": "7/2013"}, {"body": "absolutely fixed", "d": "7/2013"}, {"body": "thanks speedy fix stefanpenner", "d": "7/2013"}, {"body": "found fix issue downloaded emberdatalatestjs worked obtaining emberjs dependencies step getting started fixed since telling new ember developers get emberdata compatible see excerpt latest development builds ember data downloaded build compatible sha", "d": "7/2013"}, {"body": "joncortez thanks pointing refile ticket pr guide lives", "d": "7/2013"}, {"body": "", "d": "7/2013"}, {"body": "seems good guess prefacelift stuff worked right", "d": "7/2013"}, {"body": "redirect likely fulfill something correctly conveys final resting point support something like abort unauthorized rejection case may valid decided may want explore throwing specific routing errors ala routerforbiddenerror routerunauthorizederror key overload rejections exceptional flow control must still able distinguish difference handleswallowreport accordingly machty edited comment hopefully slightly coherent", "d": "7/2013"}, {"body": "stefanpenner nt quite follow comment routerforbidden say", "d": "7/2013"}, {"body": "saying html getting updated bound value value going change dom values actually bound take look fiddle click view see default value console type something textfield click anywhere view see console values bound updated", "d": "7/2013"}, {"body": "nt bug binding updated markup nt changed edit input htmlinputelement changed give look information think nt exist advantage keep attribute property sync thoughts", "d": "7/2013"}, {"body": "honest problem much complicated chadhietala try example jsfiddle asap anyway try explain using containerview extended view default childviews extended view template added button action button click adding childview containerview one basically last view added dynamically embertextfield problem mean try bind custom string mean constructed view like test x x incremental value added runtime basically valuebinding nt work go submit form maybe two textfield two valuebinded title viewcustomstring custom string test x x added dynamically get output title one null testx maybe nt much clearly anyway try jsfiddle example", "d": "7/2013"}, {"body": "marcioj gives correct explanation original jsfiddle link sound like maybe nt real bug hit feel free reopen jsfiddle example isolates problem", "d": "7/2013"}, {"body": "sorry trek thought problem dom updated changes input explanation antparisi seems", "d": "7/2013"}, {"body": "marcioj trek chadhietala jsfiddle updated see view added dynamically able value binding custom string idea nt know bug", "d": "7/2013"}, {"body": "antparisi updated fiddle applicationcontroller nt bound current submitted childview ca nt inside easy way pass current submited childview submit action using access applicationcontroller changed property name", "d": "7/2013"}, {"body": "probably issue trying resuse sendaction method ends dry code placing sendaction method one class methods might favour resuse something like boogie could simply", "d": "7/2013"}, {"body": "believe plans something better", "d": "7/2013"}, {"body": "probably going want extend embertextfield react dom level events trigger application level events", "d": "7/2013"}, {"body": "thanks nt understand keypress behaviour implemented keyup right one also created different issue implementing keyup", "d": "7/2013"}, {"body": "version ember persistence solution using version custom adapter possible reproduce jsbin jsfiddle", "d": "7/2013"}, {"body": "using ember nt make difference indeed overwritten functions tried switch back default dsrestadapter fails", "d": "7/2013"}, {"body": "build jsfiddle hoping made obvious mistake something like", "d": "7/2013"}, {"body": "provide call stack information", "d": "7/2013"}, {"body": "guess would method async callback nt using however information would definitely useful", "d": "7/2013"}, {"body": "wagenet thoughts fiddlebin something would great custom data adapter", "d": "7/2013"}, {"body": "okay getting funny built js bin whole stack except using karma locally test works without even using everything right", "d": "7/2013"}, {"body": "think found issue gets local development server grunt server somehow causes ember assert wrapped runloop nt happen server especially set js bin though runs apachephp may header settings still would great know js bin looks correctly", "d": "7/2013"}, {"body": "autorun behaviour failure scenario", "d": "7/2013"}, {"body": "drogus may related seeing", "d": "7/2013"}, {"body": "reference happens reject callback null notice call arguments", "d": "7/2013"}, {"body": "seems related autoruns caused assimilating foreign promises enforce async eg rejects rejects object thenable wrap assimilate unfortunately thenable enforces another browser turn causes autorun interim solution nt really value drogus believe issue exists within null rejection handle well awkward listen failure becomes eaten async errors scenario noone thought much need flush case", "d": "7/2013"}, {"body": "closing particular issue reopen particular one comes back likely need good answer foreign thenables forcing nextturn subsequent autorun", "d": "7/2013"}, {"body": "stefanpenner thanks lot", "d": "7/2013"}, {"body": "confirm sorted specific issue", "d": "7/2013"}, {"body": "stefanpenner ca nt say server issues removed everything works fine", "d": "7/2013"}, {"body": "stefanpenner removed issues ie using code use custom ajax code", "d": "7/2013"}, {"body": "awesome thanks", "d": "7/2013"}, {"body": "know svg believe kselden mentioned issue likely good candidate provide advice", "d": "7/2013"}, {"body": "thank stefanpenner looking forward kselden answer", "d": "7/2013"}, {"body": "unfortunately far looked done nothing break ember used work app use custom emberview svg charts graphs highly recommend using custom emberview also use src image static svg methods work better regardless namespaced elements svg nt work well cross browser embed switched custom view going close duplicate", "d": "7/2013"}, {"body": "address better future lands ember", "d": "7/2013"}, {"body": "thanks response eventually use want write dom handlebars bind data elements using bindattr goal use benefit mvc framework using ember", "d": "7/2013"}, {"body": "active discussion", "d": "7/2013"}, {"body": "reason existence events hash limit search scope like lukemelia idea annotating functions something", "d": "7/2013"}, {"body": "closing favor discussion forums", "d": "7/2013"}, {"body": "see check tonight", "d": "7/2013"}, {"body": "oops lack check disappointed fix tonight", "d": "7/2013"}, {"body": "ok nt know understand correctly defined far know way enter described", "d": "7/2013"}, {"body": "take look gist describing recent router updates nt enter actual methods called app defines display loading spinner whatever want", "d": "7/2013"}, {"body": "machty clue going", "d": "7/2013"}, {"body": "wagenet certainly bug try fix tomorrow eod", "d": "7/2013"}, {"body": "issue comes simply removing might considered breaking especially public method look get chance", "d": "7/2013"}, {"body": "yeah bit odd general setting controller think expect setting model change anything think changing automatically set right default sets context well twice redundant", "d": "7/2013"}, {"body": "totally bug super simple troll", "d": "7/2013"}, {"body": "another test form jsbin javascript test able use bound helpers primitives block function emberhandlebarsregisterboundhelper stringify function value return valuetostring view emberviewcreate items embera true template emberhandlebarscompile item viewitems stringify item appendview equal view text equal view li children length markers", "d": "7/2013"}, {"body": "fail primitive values bind observe however error message asks improvement", "d": "7/2013"}, {"body": "disagree fail example bind helper implicit helper helper specified according wagenet post check place deal observable unobservable objects another workaround issue register regular helper currently undocumented emberhandlebarsregisterhelper slightly different name say stringifyunbounded really appeal though", "d": "7/2013"}, {"body": "think would probably ok add support side note inherited documented part handlebars free use though implied name bound", "d": "7/2013"}, {"body": "guilhermeaiolfi plan make components load via container would intern load resolver would make lazy lands flush", "d": "7/2013"}, {"body": "stefanpenner imagine would loaded container register component container", "d": "7/2013"}, {"body": "guilhermeaiolfi container via resolver ability lookup dynamically based arbitrary code could peek embertemplates module system want explicitly register", "d": "7/2013"}, {"body": "stefanpenner", "d": "7/2013"}, {"body": "endash thanks breaux", "d": "7/2013"}, {"body": "hey gfranko although gh issues currently also used feature requests increase noise current thinking use proposals keep gh issues purely bugsprs thoughts", "d": "7/2013"}, {"body": "would nt mind seeing start addon make way core adopted community", "d": "7/2013"}, {"body": "lukemelia good idea", "d": "7/2013"}, {"body": "need github bot let us type mega close issue reposts discourse", "d": "7/2013"}, {"body": "stefanpenner gotcha close issue repost post discussemberjscom", "d": "7/2013"}, {"body": "general nt think something need given would require api change think need strong proposed use case one mind please let us know reopen ticket", "d": "7/2013"}, {"body": "problem attempting add wrapping tag view causing problems wrapping tag default div nt valid within tag think browser trashing div tag screwing ember event handling tweaked bit make tbody valid tag context change things work expected", "d": "7/2013"}, {"body": "thanks really confusing updated fiddle posterity tagname classname binding controller property specified view definition rather template little cleaner semantically", "d": "7/2013"}, {"body": "makes sure async operations completed resolves fact async operation supposed block need figure tell skip waiting specific timers meantime replacing possible workaround", "d": "7/2013"}, {"body": "thx workaround propose indeed resolve agreed telling skip timers sure dig review", "d": "7/2013"}, {"body": "thing etc last consistent short", "d": "7/2013"}, {"body": "mapproperty returns properties array someproperty returns boolean findproperty returns object seeing consistency", "d": "7/2013"}, {"body": "samsaffron maybe biased long term scember dev used api feels completely natural", "d": "7/2013"}, {"body": "returns array returns boolean returns object", "d": "7/2013"}, {"body": "indicates callback use property make sense way", "d": "7/2013"}, {"body": "samsaffron think consistent cases suffix means action regards specific property nt agree get discussion going forums convince us otherwise", "d": "7/2013"}, {"body": "favor aliasing samsaffron want submit pr along lines", "d": "7/2013"}, {"body": "need work", "d": "7/2013"}, {"body": "tchk thnaks looks nice case also loaded redirecting route using existing model hook called", "d": "7/2013"}, {"body": "load", "d": "7/2013"}, {"body": "ok need fire action additional models aftermodel loaded", "d": "7/2013"}, {"body": "", "d": "7/2013"}, {"body": "agree perfect think case loading multiple models worth discussion", "d": "7/2013"}, {"body": "ok great need load multiple aftermodel assume following work try implement see problems official way loading multiple models would great somebody could put ember guides", "d": "7/2013"}, {"body": "official part fact may return promises hooks pretty sure guides think need better story multiple models", "d": "7/2013"}, {"body": "rather rsvpall fulfills array values would recommend rsvphash fulfills object fulfilled fulfilled object typically much digestable maintainable corresponding array", "d": "7/2013"}, {"body": "stefanpenner thanks wondering get models back resolved", "d": "7/2013"}, {"body": "think resolved feature addition like discuss please bring ember forums", "d": "7/2013"}, {"body": "samsaffron good question speaking discourse maybe bring point ember forums discussion decided solution file something thanks", "d": "7/2013"}, {"body": "unable reproduce sounds like issue due firebug open", "d": "7/2013"}, {"body": "issue also tracked bugzilla would seem characters cause trouble even comment concerning ember", "d": "7/2013"}, {"body": "answer may use external library helps normalize leave issue open decided consistent approach however", "d": "7/2013"}, {"body": "sounds good thank reply", "d": "7/2013"}, {"body": "core team discussion suggested might best write slimmed version library like historyjs could help handle sorts situations keep people updated", "d": "7/2013"}, {"body": "thanks update", "d": "7/2013"}, {"body": "closing favour", "d": "7/2013"}, {"body": "nt think bug way scopes work first one helper nt specify variable changes controller object loop pretty sure supposed work way btw think sure first work change", "d": "7/2013"}, {"body": "alexspeller correct scope works first example set item array second example changed remains controller", "d": "7/2013"}, {"body": "latest version specify version actually want", "d": "7/2013"}, {"body": "really expected behaviour bundle emberrails expect get old version everything", "d": "7/2013"}, {"body": "ember reaches gems currently prerelease", "d": "7/2013"}, {"body": "call means event continue checkbox", "d": "7/2013"}, {"body": "wagenet nt understand point top two checkboxes standard embercheckbox bottom one extended checkbox workaround uses resolve issue", "d": "7/2013"}, {"body": "whoops read code quickly sorry looks like intentionally preventing default behavior might ok provide option like bubbling something think worth adding send pr open thread forum discussion", "d": "7/2013"}, {"body": "thanks help wagenet posted forum got indepth reply regarding intended use helper better understand role helper realized ab using shortcut registering dom event listeners since refactored code include explicitly defined view method works like charm grinning helper might useful feel niche warrant pr ca nt think usecases could nt refactored use event methods view willing take second look someone thinks otherwise", "d": "7/2013"}, {"body": "may emberdata issue anymore information provide example issue", "d": "7/2013"}, {"body": "regression started could commit exposed already existing issue look tonight", "d": "7/2013"}, {"body": "ok figured happens include ember data nt define store fixed ed injecting store store defined", "d": "7/2013"}, {"body": "great create issue ed", "d": "7/2013"}, {"body": "yes thanks meanwhile avoid error", "d": "7/2013"}, {"body": "dup follow along instead", "d": "7/2013"}, {"body": "bug chrome closing issue", "d": "7/2013"}, {"body": "put together jsfiddle demonstrates want achieve", "d": "7/2013"}, {"body": "hi something like nt want redefine dependent keys computed property example simple course adds quite code duplication see text nt get changed work define text dependent key overriding computed property duplication canwill something done thanks", "d": "7/2013"}, {"body": "kselden something able look", "d": "7/2013"}, {"body": "imagine chose option reason nt recall offhand seems worth investigating", "d": "7/2013"}, {"body": "wycats thoughts", "d": "7/2013"}, {"body": "firefox works ubuntu linux", "d": "7/2013"}, {"body": "issue fixed", "d": "7/2013"}, {"body": "looks like autofill trigger event since seem like watching event sure going wrong provide jsfiddle see code looks like", "d": "7/2013"}, {"body": "hi problems reproducing change html form slightly chrome issue raised also vague closing issue reopen get clearer", "d": "7/2013"}, {"body": "looking little closer appears happening trying get childviews property simplehandlebarsview nt exist passing undefined pushobjects method taken", "d": "7/2013"}, {"body": "ran today well seems caused", "d": "7/2013"}, {"body": "used noop undefined probably better check childviews undefined pushing", "d": "7/2013"}, {"body": "note relationships accessible outside setupcontroller", "d": "7/2013"}, {"body": "closing moving data per discussion stefanpenner", "d": "7/2013"}, {"body": "moved", "d": "7/2013"}, {"body": "machty cleaning mess", "d": "7/2013"}, {"body": "immediately felt like jerk closing thing decided best course action full micromanage thanks taking well", "d": "7/2013"}, {"body": "managed isolate difference firefox chrome seems firefox checkbox must dom toggle property first thought append created checkboxes dom script may running without access element need wait checkbox added removed dom prefer avoid flickering suggestions avoiding going give style something like seem reasonable ebryn", "d": "7/2013"}, {"body": "unfortunately issue causing application tests use embertesting fail firefox pretty severe issue imo checkpatch strictly necessary far understand original issue resolved jquery would simple version check suffice", "d": "7/2013"}, {"body": "fixed", "d": "7/2013"}, {"body": "odd seems phonegap overwriting console fact made changes prevent error however may still need overwrite within app get full phonegap compatibility", "d": "7/2013"}, {"body": "ok thanks lot test asap", "d": "7/2013"}, {"body": "dimitrisuls believe explicit choice controller route would observable may trying observe controller supported describe encountering issue", "d": "7/2013"}, {"body": "stefanpenner hi thanks quick response indeed observing controller route computed property determine documenttitle based current model inside controller figure different way fixed code thanks", "d": "7/2013"}, {"body": "ok fixed instead observing model via controller route observe controller setupcontroller use controllerget title update documenttitle instead thisget title thanks", "d": "7/2013"}, {"body": "dimitrisuls glad found solution said seem like need firstclass way dealing document title", "d": "7/2013"}, {"body": "stefanpenner yes indeed would make ember bit userfriendly thanks swift help would never found reference saying observe controller inside route maybe mention somewhere apiguidestutorial", "d": "7/2013"}, {"body": "sort question best asked stack overflow thanks good luck", "d": "7/2013"}, {"body": "removed gh repo", "d": "7/2013"}, {"body": "comments", "d": "7/2013"}, {"body": "stated docs maintains behavior used conjunction location", "d": "7/2013"}, {"body": "oh sorry silly chance wagenet ever behavior defaulthash location api", "d": "7/2013"}, {"body": "unfortunately way prevent changes added browser history", "d": "7/2013"}, {"body": "set noted push pr soon adds assert problem many tests fail due pr perhaps someone add input tests badly set", "d": "7/2013"}, {"body": "cc ghempton thoughts", "d": "7/2013"}, {"body": "madadam believe fixes incorrect please let know", "d": "7/2013"}, {"body": "request seems entirely reasonable", "d": "7/2013"}, {"body": "verify still happening master sounds like one initial bugs might fixed", "d": "7/2013"}, {"body": "try thanks lightningfast reply machty", "d": "7/2013"}, {"body": "fixed indeed kudos machty sorry opening coz could nt find issues list", "d": "7/2013"}, {"body": "prob think reported internally honor line fixed light speed", "d": "7/2013"}, {"body": "", "d": "7/2013"}, {"body": "sorry trouble think may bug please update ticket steps reproduce issue ideally form jsbin jsfiddle", "d": "7/2013"}, {"body": "two things happening async router changes pause provide thennable context object property even though everyone agrees ember data models ember model models properties since bad mix entities promises represent discrete attempt loadretrieve one libraries yet made separation debate proper api eg return promise future alternative method called intermediate time solution since opting custom loading behavior via guards find remove property whatever pass whatever return hook sure ideal solution midterm ask around", "d": "7/2013"}, {"body": "thanks prompt response tested solved loading problem restored behaviour working instead loading way loading template supposed rendered inside itemindex template seem quite odd however router state still seem broken click prev next button first time views updated switching working content automatically loaded however url still displaying old ids click prev time url update catch currently displayed takes two clicks go previous next item seems pretty consistently reproducible", "d": "7/2013"}, {"body": "loading templates nt changed since soon reworked perroute basis maybe could boil jsbin might router facelift thing related recently added logic preserve views context changes route stayed", "d": "7/2013"}, {"body": "yeah try simplifying later week however could quite tricky jsbin cause pretty certain something model loaded async fixture adapter might produce result people usually work around jsbin tue jul pm alex matchneer notifications githubcomwrote loading templates nt changed since soon reworked perroute basis maybe could boil jsbin might router facelift thing related recently added logic preserve views context changes route stayed reply email directly view github", "d": "7/2013"}, {"body": "sure using ember data ember model property set sets time delay resolving fixtures need reproduce", "d": "7/2013"}, {"body": "closing still issue please provide jsbin isolates issue one else seems running particular bug seems like basic functionality facelift router", "d": "7/2013"}, {"body": "machty give look", "d": "7/2013"}, {"body": "due rearranged logic router facelift code fired within default hook mostly preserve backwards compatability technically happens entering new destination routes router fire pretransition routes case none since app load really sure ought done could move back hook routes fix problem inconsistency two places could redirect slightly different semantics latter would fire events newlyentered routes perhaps makes sense prefer hear people running issue making move", "d": "7/2013"}, {"body": "think intuitive expectation event would fire indexroute bubble understand nt way wo nt confusing nearly everyone learning ember", "d": "7/2013"}, {"body": "lukemelia wondering general solution come could purposes pr move means events fire within fire destination routes anyone fires events within pretransition active routes going confusing also strange place open modal would nt ideal", "d": "7/2013"}, {"body": "thanks background info code snippet gave contrived example actual codebase bit logic redirects depending permission user falls back opening modal nt required permissions edge case recent async facelift could possibly revisit part app improve however moving logic allows function expected luke mentioned initial expectation would also events available amp hooks see", "d": "7/2013"}, {"body": "thought forward ultimately fires event currently active routes changed would fire event starting route called bubbling route hierarchy regardless whether route active", "d": "7/2013"}, {"body": "machty seems make sense", "d": "7/2013"}, {"body": "ran problem today trying fire event machty suggested solution would address primary need making events available method able sidestep problem temporarily moving logic", "d": "7/2013"}, {"body": "sorry delay fixing actually somewhat tricky problem solve might digging deeper microlib since lot code geared around toward querying route hierarchy name leaf route need support ability query route hierarchy potentially nonleaf route perhaps better way go implement emberspecific feature talk making routes aware parent routes assigning purpose event bubbling maybe combine efforts make easier fire events nonleaf route without go somewhat neutered mechanics stefanpenner lukemelia thoughts", "d": "7/2013"}, {"body": "need apologise delay thanks looking workaround mentioned alleviates issue moment blocking us potentially confusing developers expecting work sent iphone jul alex matchneer notifications githubcom wrote sorry delay fixing actually somewhat tricky problem solve might digging deeper routerecognizermicrolib since lot code geared around toward querying route hierarchy name leaf route need support ability query route hierarchy potentially nonleaf route perhaps better way go implement emberspecific feature talk making routes aware parent routes assigning target purpose event bubbling maybe combine efforts make easier fire events nonleaf route without go somewhat neutered routerjs routerecognizer mechanics stefanpenner lukemelia reply email directly view github", "d": "7/2013"}, {"body": "dup", "d": "7/2013"}, {"body": "closing dup thanks bradleypriest", "d": "7/2013"}, {"body": "investigation seems breaks actions helpers like goto action use linkto helpers break", "d": "7/2013"}, {"body": "hard diagnose without specifics actually break sudden reproducible setup", "d": "7/2013"}, {"body": "yeah luckily couple boys irc channel figured causes problem group helper use whole app set use lots stuff breaks remove lot metamorph tags starts get created yet idea modify helper error goes away var get emberget set emberset emberhandlebars emberhandlebars emberhandlebarsregisterhelper group function options var data optionsdata fn optionsfn view dataview childview", "d": "7/2013"}, {"body": "solved removing group helper together rewritten css using firstchild lastchild firstoftype lastoftype including twitter bootstrap works really like way get ember bloat dom metamorph tags general", "d": "7/2013"}, {"body": "assuming using ember data issue file repo specifically error promise returned rejecting error encountered", "d": "7/2013"}, {"body": "recently improved error message smile", "d": "7/2013"}, {"body": "use", "d": "7/2013"}, {"body": "ryanto problem problem controller currently must access views dom element innertext property use value binding", "d": "7/2013"}, {"body": "pretty sure something set custom view class handle questions stackoverflow great place ask", "d": "7/2013"}, {"body": "sepph removed hook fully responsible deserialization", "d": "7/2013"}, {"body": "relevant commit sorry bit marked first release candidate nt considered part public api used hook libraries lukemelia mentions intended public api behavior", "d": "7/2013"}, {"body": "feels like hack get working use case js embercomponent emberviewextend init function thissuper saving original context reusing rendering template layout still rendered using component context see working dont really know emberview internals well pretty sure wont totally fix problem example manually set template component probably go back using components context rendering template might able work around patching wrap passed function way wrapping figured float try anything", "d": "7/2013"}, {"body": "nt decide fix could probably reopen emberrouter override handleurl support regex got pretty old ember app variety old urls app floating around emails bookmarks basically support hack city works", "d": "7/2013"}, {"body": "machty well really long day tired manually trying nested routes typing urlbar browser nt really pay attention slashes urls hence confusion first nothing ember created anything", "d": "7/2013"}, {"body": "kselden big non recursive walk would make diagnosing ember perf much simpler us", "d": "7/2013"}, {"body": "samsaffron likely lead improved perf imagine give gc marking phase good workout stack depth", "d": "7/2013"}, {"body": "also default value select menu left asis valuebinding nt update worked around supplying value forces user select option definitely bug", "d": "7/2013"}, {"body": "figured could use setupcontroller hook way model get fetched always", "d": "7/2013"}, {"body": "fixed commit", "d": "7/2013"}, {"body": "yeah nt jquery go endash solution", "d": "7/2013"}, {"body": "herom followed stackoverflow post got exactly issue set chrome pause uncaught exceptions tried inspect handlebars object defined seems timing issue sure hope someone get fixed", "d": "7/2013"}, {"body": "looks like issue addressed next version handlebars", "d": "7/2013"}, {"body": "updated fiddle compatible emberlatest handlebarscompilerrevision issue", "d": "7/2013"}, {"body": "zackangelo could make jsfiddle demonstrates failing case", "d": "7/2013"}, {"body": "nevermind saw", "d": "7/2013"}, {"body": "ryanhirsch still issue", "d": "7/2013"}, {"body": "wagenet looks like edit looks like fixed emberlatest though", "d": "7/2013"}, {"body": "problem outlet emberversion output console ryanhirsch issue happens latest version handlebars use outlet works without issue", "d": "7/2013"}, {"body": "ember depends handlebars ember master since commits released depends handlebars unless misunderstanding something incompatibilities expected almost certainly nt specific helper", "d": "7/2013"}, {"body": "please refile website repo nt already thanks", "d": "7/2013"}, {"body": "thomasboyt status", "d": "7/2013"}, {"body": "already forgot reference close issue", "d": "7/2013"}, {"body": "think fix issue amp fingers crossed amp nt get error add htmlfunc func methods gist see line problem container appended instead updated", "d": "7/2013"}, {"body": "alexspeller add htmlfunc func method emberjs test around", "d": "7/2013"}, {"body": "original jsbin seems gone least thought link fiddle similar issue initial creation svg works expected svg elements interacted bound attributes update expected failure mode webkitbased browsers tested safari osx attempting add new element throws first time subsequent attempts safari gives slightly information thought rather nice failure firefox webkit initial rendering takes place expected bound attributes effect change rendered svg expected clicking add circle raise exception adds circle controller collection however circle added display apart missing circle application continues behave normally hope helps diagnose problem cheers", "d": "7/2013"}, {"body": "chrmod create jsfiddle problem nt suffer issue pointed", "d": "7/2013"}, {"body": "goes steps reproduce go child go parent go child receive typeerror parentview missing forcing controller used enough reproduce problem suffer mentioned issue proposition remove store information somewhere inside handleinfos make finding parentview reliable opinion wagenet", "d": "7/2013"}, {"body": "run issue routes nested also levels deep get error trying reuse parent template via", "d": "7/2013"}, {"body": "also experiencing issue setup parentview outlet tools navigating childview parentview nt removeddestroyed stays view behind childview childview uses parent outlet tools render tools navigating back parentview childview destroyed including connected outlets navigate back childview tries render outlet view destroyed disconnect outlet childview route exitted suppress error reentering childviews route seems impossible rerender parent outlet ideas", "d": "7/2013"}, {"body": "also experiencing issue workaround fix works", "d": "7/2013"}, {"body": "chrmod go back parent going implicit index need move explicit render parent index route", "d": "7/2013"}, {"body": "found another way trigger error unfortunately nt looking one consider case exact template rendered variable may bit contrived nt real life example would nt typing inside conditional template another outlet content rendered switching one conditional template another route exited teardown function old template view stays place however old template view destroyed parent notices changed think happens observer therefore exit route destroyed view told disconnect outlets already destroyed properties longer exist finally results error tl dr jsfiddle demonstrating problem whenever go article book book article get error current workaround check whether view destroyed similar dsawardekar appears using one step earlier process", "d": "7/2013"}, {"body": "eltehupkes definitely seem like legitimate error kselden agree", "d": "7/2013"}, {"body": "got error eltehupkes got might wrong think happens render new view route registers view destroyed future app exit route look appendview routejs case rendered another template outlet without exiting route case remove view routeteardownoutletviews queue really exit route tries remove outlet destroyed view gives us error use disconnectoutlet manually disconnect outlet also error occurs", "d": "7/2013"}, {"body": "experiencing issue end goal simply render nested route page nt need parent info render happens whole app goes error page refresh done", "d": "7/2013"}, {"body": "sounds exactly like actually rendering different view outlet without exiting even without switching views seems extra entry added every time enter identical view objects wo nt lead problems call identical function several times though could probably improved somehow sorry nt anything constructive say", "d": "7/2013"}, {"body": "ebryn know played around stuff relating status", "d": "7/2013"}, {"body": "machty assigning since router expert feel free pawn someone else", "d": "7/2013"}, {"body": "wonder changing behavior going break people apps perhaps solution nt change value gets stored rather make accept make whatever internal adjustments needs perform transition people think", "d": "7/2013"}, {"body": "another option would add property gets full route path vs child path ca nt think good names right figure route seems like would work feels unexpected get truncated routes seeing full routes elsewhere", "d": "7/2013"}, {"body": "think transitionto accept full paths parent childresource ideal sure thought behind paths reset nested resources seems like shortcutsugar would make sense fully specified version information work least well", "d": "7/2013"}, {"body": "want css use need play fancy properties", "d": "7/2013"}, {"body": "wycats give input", "d": "7/2013"}, {"body": "known limitation bound helpers moment probably wo nt fixed fwiw api specifying dependent keys kind awkward moment implementationwise nt play nicely multiple bound properties bound hash values one ideas thrown around anyway time comes fix issue probably sit around time", "d": "7/2013"}, {"body": "chancancode nt getting much traction nt want shut discussion either start thread ember forums try get feedback vetted others see putting together pr", "d": "7/2013"}, {"body": "wycats think", "d": "7/2013"}, {"body": "machty status facelift", "d": "7/2013"}, {"body": "closing favor solve issue basically calling within route fire route bubble rather today behavior forwarding router firing presently active routes source confusion means middle transition seems like unsatisfactory solution reopen pretty sure referenced bugfix solve", "d": "7/2013"}, {"body": "closing favor", "d": "7/2013"}, {"body": "mind blown meant", "d": "7/2013"}, {"body": "cool thought implied events fired within route would always go directly application route careful reading ticket see bubble route heirarchy normal makes sense awesome thanks making router awesome", "d": "7/2013"}, {"body": "thank done curing postfacelift complications", "d": "7/2013"}, {"body": "wycats think idea", "d": "7/2013"}, {"body": "using prototype seems extremely oo definitely intentionally supported kselden", "d": "7/2013"}, {"body": "good point nt realized prototype definitely seem odd", "d": "7/2013"}, {"body": "edited nt realized prototype either case fix would retrieve itemviewclass collectionview created idea allow something like although probably bad practice wrap classes inside properties definitely supported across framework nt seen used often however remember correctly early ember documentation advertised order lazy load classes alleviates need keep track file order nt work coffeescript appconsumer emberobjectextend dependency appdependency appdependency emberobjectextend work lazy loading supported across framework coffeescript appconsumer emberobjectextend dependency embercomputed gt appdependency appdependency emberobjectextend", "d": "7/2013"}, {"body": "quiet primitives devise appspecific approach lazy loading making use async router particularly making use promises returned closing reopen still unsupported use cases ca nt handled async promise behavior provided facelift router", "d": "7/2013"}, {"body": "word possibly fixed master", "d": "7/2013"}, {"body": "closing unless behavior demonstrated fiddle jsbin", "d": "7/2013"}, {"body": "wagenet error handler mention would basically inform developer slashes ca nt used delimit namespaces use dots achieve right", "d": "7/2013"}, {"body": "seems neither see see looks namespaced controller thus neither versions work", "d": "7/2013"}, {"body": "way could get work template controller", "d": "7/2013"}, {"body": "put pr issue wagenet already existing error message try use slash notation namespace nt exist displays assertion failed looking index view blog namespace namespace could found", "d": "7/2013"}, {"body": "heads stefanpenner decided merge seanrucker pr indepth overhauling container normalization cover", "d": "7/2013"}, {"body": "want encapsulate normalization rules resolver becomes easy switch peoples moduleresolution needs change side effect able provide defaultresolver todays broken behaviour nt care allowing people opt modern resolver", "d": "7/2013"}, {"body": "marking improvement least update current documentation explicit nt look like bug", "d": "7/2013"}, {"body": "provide detailed description issue steps reproduce would useful", "d": "7/2013"}, {"body": "lukemelia way meta works order override descriptor key set undefined metadescs shadow prototype ca nt removed prototype shared object", "d": "7/2013"}, {"body": "stefanpenner ping", "d": "7/2013"}, {"body": "looks like test nt even close perhaps two new tests expose bug", "d": "7/2013"}, {"body": "kristianmandrup something still interested write proposal put forums thanks", "d": "7/2013"}, {"body": "wycats probably speak better nt intend support", "d": "7/2013"}, {"body": "want behavior definitely use component", "d": "7/2013"}, {"body": "merged machty new router work address", "d": "7/2013"}, {"body": "think largely addressed machty router facelift", "d": "7/2013"}, {"body": "apologize taken long get back drogus replied nt time come back got lost inbox sorry drogus thank much explanation time nt make ton sense months later bit experience ember makes perfect sense thanks taking time help smile want add explanation answer stackoverflow happy accept answer", "d": "7/2013"}, {"body": "kogi glad able help added answer well", "d": "7/2013"}, {"body": "new opera working fine", "d": "7/2013"}, {"body": "nsalehin refactored router issue still present", "d": "7/2013"}, {"body": "bump assistance tests please", "d": "7/2013"}, {"body": "awt imagine path initial rendering different path updating", "d": "7/2013"}, {"body": "updated jsfiddle", "d": "7/2013"}, {"body": "kayleg sherb either interested writing docs sending pr thanks", "d": "7/2013"}, {"body": "tried reproduce ca nt ilovett give steps reproduce", "d": "7/2013"}, {"body": "think big difference case use presence infer model expected entirely convinced something want support since nt additional cue provided url", "d": "7/2013"}, {"body": "sounds like wycats ideas improve sorts cases", "d": "7/2013"}, {"body": "nt define router things work normal without router also reason ca nt multiple ember apps page long one router different rootelements", "d": "7/2013"}, {"body": "pootsbook far see nt looking least thing get enable option app statements nt helpful newcomers", "d": "7/2013"}, {"body": "mjijackson would logging generated hits generated work", "d": "7/2013"}, {"body": "andrewfan valid way access parentcontroller block use property hand works singleton controllers goes jsfiddle realizing functionality creating two instances objcontroller wycats issue closed counterpart", "d": "7/2013"}, {"body": "movement bug currently developing website languagecentric would like rerender application topdown based selected language reason rerendering retranslate key tags thanks", "d": "7/2013"}, {"body": "closing favor discussion jayphelps pr", "d": "7/2013"}, {"body": "fixed", "d": "7/2013"}, {"body": "teddyzeenny check think typo stef message", "d": "7/2013"}, {"body": "thanks machty stefanpenner looking", "d": "7/2013"}, {"body": "appears works originally intended since ca nt think situation would want use actually receive instance think would nice method smart enough recognize situation automatically call return results would create consistency framework think", "d": "7/2013"}, {"body": "wellhandled new async router robust solutions developed basic premise", "d": "7/2013"}, {"body": "stefanpenner thumbs", "d": "7/2013"}, {"body": "would useful", "d": "7/2013"}, {"body": "bindings falling style favor lazier demonstrably sidesteps issue nt think work necessary one unless reproduce stack overflow", "d": "7/2013"}, {"body": "machty discussion seems pretty dead like pursue start forum thread discuss", "d": "7/2013"}, {"body": "lukemelia something still interested make proposal forums thanks", "d": "7/2013"}, {"body": "discussion moved", "d": "7/2013"}, {"body": "sounds good however hate leave open ended feature requests open realityendshere something could send pr alternatively someone else want tackle machty", "d": "7/2013"}, {"body": "sarted using ember version phonegap project phonegap logger function breaks ember due phonegap logger function assuming error message typeerror undefined object evaluating importsconsole name apply emberjs line", "d": "7/2013"}, {"body": "guizmo u open new issue", "d": "7/2013"}, {"body": "done", "d": "7/2013"}, {"body": "seems grab bag somewhat related issues seem fixed unnecessary outlet warnings unified transition promise semantics router facelift code reopen still seems like issue", "d": "7/2013"}, {"body": "another jsfiddle demonstrate", "d": "7/2013"}, {"body": "seem likely merged hjdivad points would deprecate", "d": "7/2013"}, {"body": "basically saying use seems approach would allow much better perfs granular completely wrong", "d": "7/2013"}, {"body": "tchak things oneatatime uses property descriptors api consistency nt iterate whole arrays time way would use today", "d": "7/2013"}, {"body": "hjdivad mainly referring fact mixins based friends operate ranges gives hint exactly changed missing something", "d": "7/2013"}, {"body": "tchak suggest read code referenced pr thought carefully issues", "d": "7/2013"}, {"body": "tchak absolutely right tell records changed trying say earlier nt actually rely determine records changed happen still use property descriptors conceptually right b nt require introducing new syntax", "d": "7/2013"}, {"body": "pretty sure closed reopen still issue", "d": "7/2013"}, {"body": "uses eventually resolve error kind side effecty going remove message altogether wait people report issues write better messaging close actual source error", "d": "7/2013"}, {"body": "thank warning confusing causing major grief would nice add documentation around meaning warning edge case thrown also would helpful provide better explanation idiomatic conventional way properly nest template files template folders within emberrails project context seeing error upgrading ember js rc removed warning hard tell going one handlebars templates compiled emberrails convention follow nt always obvious ember js newbies", "d": "7/2013"}, {"body": "honest nt exactly remember specific case trying prevent though know one also big problem since warned completely legitimate uses", "d": "7/2013"}, {"body": "think going revisiting areas ways closing", "d": "7/2013"}, {"body": "update works okay emberlatestjs built july disregard still getting handlebars removing emberselect makes go away downgrading handlebars seems give error suggests upgrading quite sad", "d": "7/2013"}, {"body": "security patch support handlebars shortly issue blocking support addressed", "d": "7/2013"}, {"body": "unfortunately work pretty well stagnated would like revisit though", "d": "7/2013"}, {"body": "address wagenet", "d": "7/2013"}, {"body": "stefanpenner looks like may oldfartdeveloper good enough", "d": "7/2013"}, {"body": "closing gladly reopen", "d": "7/2013"}, {"body": "wagenet mostly stefan code nt log normal calls said may enough let go done revisit later need thanks stefan", "d": "7/2013"}, {"body": "found issue html code problem tried narrow removed problem whole think might problem call might concept missunderstood remove line get another problem saying ca nt read property also wrong think might missing som nullundefined checks values set", "d": "7/2013"}, {"body": "mastoj would massive help u could assemble working jsbin jsfiddle gist", "d": "7/2013"}, {"body": "stefanpenner go think work jsfiddle sure got saved otherwise fix later weekend think might error code well handled clearer ember", "d": "7/2013"}, {"body": "rlivsey something still want say use case", "d": "7/2013"}, {"body": "closes think use instead", "d": "7/2013"}, {"body": "wooop sorry forgot close one pushed", "d": "7/2013"}, {"body": "people use public api things work case bug bug opened", "d": "7/2013"}, {"body": "tomdale know hidden behind flag sufficient cases someone might view without template case route intentionally nt view ie route whose child directly renders view grandparent would cause error", "d": "7/2013"}, {"body": "nt everything asking step direction basically provide stringnumber treated url param without create wrapper object nt yet allow specify automatically updates switch routes point route different parent context nt seem like difficult create subclass extra logic listen router changes instance applicationroute currentpath changes navigate around could bind href possible solution", "d": "7/2013"}, {"body": "nt need view since controller default context use anyway feel like current solutions handle case well enough think better solution please make proposal forums", "d": "7/2013"}, {"body": "fixed", "d": "7/2013"}, {"body": "seems good", "d": "7/2013"}, {"body": "seems like set child controller content parent controller content route", "d": "7/2013"}, {"body": "fixed", "d": "7/2013"}, {"body": "stefanpenner status nt like leaving longrunning tickets open", "d": "7/2013"}, {"body": "impossible issues arise due way events within router works needs rearchitecting", "d": "7/2013"}, {"body": "based state manager experiment would better making urlless routes built router", "d": "7/2013"}, {"body": "going close issue favor someone writing proposal", "d": "7/2013"}, {"body": "also use case item users workorders currently logged user able see workorders whatever permission see", "d": "7/2013"}, {"body": "joefiorini nt something able send pr write proposal post ember forum seems like better venue discussing new concepts gh getting much attention thanks", "d": "7/2013"}, {"body": "guys working another query parameter workaround lately one pretty excited found quick summary global query string preference less impossible implement works linkto url generation location independent minor route configuration personally best solution thusfar let know think", "d": "7/2013"}, {"body": "eltehupkes great contribution example app demonstrates usage benefits", "d": "7/2013"}, {"body": "cavneb cooked something real quick unfortunately jsfiddle typethings nt show urlbar really kind point showing query parameters copypaste liveweave code htmldocument work though questions please let know", "d": "7/2013"}, {"body": "eltehupkes worked great example app", "d": "7/2013"}, {"body": "cavneb nice added link readme", "d": "7/2013"}, {"body": "eltehupkes bit busy update libary moment seems libraries similar fact update library probably looking basing mainly work need however think one two things library nt binding params controller properties first one think one thing keen library nt like nt think necessary case like ask willing work together problem find way combine efforts", "d": "7/2013"}, {"body": "alexspeller definitely probably busy upcoming weeks serious meddling query params ok part vacation maybe unavailable better term think good idea put heads together start thinking combine efforts make things better everyone", "d": "7/2013"}, {"body": "great start working stuff file pull requests repo put note library look support enjoy holiday let talk get back", "d": "7/2013"}, {"body": "eltehupkes alexspeller god bless working together solve wanted try emberquery ready yet already app near production using emberqueryparams really like integrate combined efforts become available thanks", "d": "7/2013"}, {"body": "thanks taking alexspeller eltehupkes grabbed eltehupkesemberqueryparams added project working give spin wanted chime agree one alexspeller recent comments find object little unwieldy especially regarding helper like able specify query params right template much like rails apps experienced enough ember know howif would possible would feel natural", "d": "7/2013"}, {"body": "hi gh thread becoming tolstoy novel like get outside thoughts since doubt many people following thread beyond main contributors please check following discourse thread summarize various approaches taken lessons learned implementation status etc see ca nt nail best way go going forward", "d": "7/2013"}, {"body": "believe resolved", "d": "7/2013"}, {"body": "bradleypriest new embercomponent stuff way specify controller outside darthdeus workaround", "d": "7/2013"}, {"body": "johnkpaul et al probably never want calling directly controller class production ember app code controllers created vis container container reference set automatically get injections applied idea controller specific component view template combo get data intoout component specifying bindings template uses component want specify templateview controller would usually use", "d": "7/2013"}, {"body": "thanks lukemelia yeah makes sense wrt calling create nt want add container manually anything thought supposed completely encapsulated viewcontroller combination see think answer use component get completely clean room data work use inside keep track nonmodel state think appropriate move", "d": "7/2013"}, {"body": "yeah components self contained great component ca nt get router way access", "d": "7/2013"}, {"body": "pharcosyle would consider assigning template property component include handle action router", "d": "7/2013"}, {"body": "thanks essentially workaround using", "d": "7/2013"}, {"body": "emberhandlebarsregisterboundhelper paginator function nowno pageno item pagenolist uncaught typeerror objectdefineproperty called nonobject meta nt use works bug code", "d": "7/2013"}, {"body": "put de code handlebarshelp work nt use", "d": "7/2013"}, {"body": "since discussion dead going close need discussion around start thread forum set api someone need actually make change", "d": "7/2013"}, {"body": "lukemelia going", "d": "7/2013"}, {"body": "something people still interested please write formal proposal discuss ember forum thanks", "d": "7/2013"}, {"body": "languishing quite probably depth discussion move forum", "d": "7/2013"}, {"body": "since wo nt warning maybe mentioning lack support multiple actions guides would suffice", "d": "7/2013"}, {"body": "submit pr least file issue thanks", "d": "7/2013"}, {"body": "ended happening love render handlebars express ember take page loaded", "d": "7/2013"}, {"body": "production web app running backbone provides simple solution via property user assign existing dom element one line property assignment convenient since starting develop new app based ember expected simple backbone app built small independent pagelets fully rendered server side events expected handled js framework case ember would attach events existing dom elements via ember think issue quite important nt understand closed comments", "d": "7/2013"}, {"body": "hi guys thanks great work ember news feature would great think always convenient deal handlebars templates thank", "d": "7/2013"}, {"body": "running issue rsaccon container view supposed button adding items said container view since embutton deprecated would create view button seems like overkill suggestions", "d": "7/2013"}]