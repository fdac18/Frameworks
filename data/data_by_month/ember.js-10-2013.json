[{"title": "collectionview amp arraycontroller itemcontroller", "body": "noticed collection view checks content becomes problem want represent item collection controller since get plain model back nt calling something thoughts", "num": "3672", "d": "10/2013"}, {"title": "difficult get ember release", "body": "releases nt listed fact listing tags tried cloning repository checking nt seem later tags running left requires handlebars includes also puts handlebars near bottom file nt handlebars emberhandlebars seems like solution download handlebars put also include file page means sending handlebars twice top ember nt raise exception evaluation bottom nt overwrite one top version", "num": "3671", "d": "10/2013"}, {"title": "injecting nt seem work", "body": "demonstrated output appear console log coffeescript app emberrun emberapplication create appmyservice emberobjectextend appregister service myservice appmyservice appmymodel emberobjectextend appregister model mymodel appmymodel appinject model serviceconnection service myservice consolelog injected model appcontainerlookup model mymodel get serviceconnection gt injected model undefined appregister foo mymodel appmymodel appinject foo serviceconnection service myservice consolelog injected foo appcontainerlookup foo mymodel get serviceconnection gt injected foo class etc", "num": "3670", "d": "10/2013"}, {"title": "transitions tracked twice", "body": "reseting application route transitions logged twice nt know error logging alone transitions actually happens twice used testing eg logging people singlepage app reproduce visit open developer tools copypaste console switch routes clicking around active completed see transitions logged twice happen twice key reproduced ember application", "num": "3669", "d": "10/2013"}, {"title": "initial bindings calculation seems broken", "body": "appears way bindings calculated changed ca nt seem find documentation describes error jsbin demonstrating issue note line bug would expect based setup value reported would even call still undefined nota bene set value via binding correctly update property silently change could nt find mention changelogs", "num": "3667", "d": "10/2013"}, {"title": "build fails without global node module", "body": "pulled latest task fails logs", "num": "3665", "d": "10/2013"}, {"title": "uncaught typeerror call method unchain undefined", "body": "using emberjs handlebars ember data jquery router relevant fixture appjs getting error click manually added link within default application template link looks like hit relevant url error thrown possibly related stack chrome dev tools screnshot chrome debugger provide fiddle later needed", "num": "3664", "d": "10/2013"}, {"title": "unable bind properties namespaced controller templates", "body": "binding property like exists namespace controller nt resolve properly seems compiling template replaces binding path causing lookup errors example fails attempting find controller instead jsbin demo", "num": "3661", "d": "10/2013"}, {"title": "update getting started guide displaying button remove completed todos", "body": "hi found inconsistent code current version emberjs getting started guide page prior code examples correct deprecated filterproperty update code js actions clearcompleted function var completed thisfilterby iscompleted true completedinvoke deleterecord completedinvoke save hascompleted function return thisget completed gt property completed completed function return thisfilterby iscompleted true get length property eachiscompleted additional lines truncated brevity maybe also add comment page property true second parameter needed become thanks", "num": "3659", "d": "10/2013"}, {"title": "trouble transit nested resource newly created record", "body": "using ember emberdata localstorageadapterjs strange behaviour sure bug something wrong hard tell issue ember emberdata localstorageadapterjs came embertools happens create new record nested resources immediately transitionto nested resources happens newly created records manually type url created record transition generated ember url problem transition route hopefully someone shed light issue facing code fragments approutermap function thisresouce appointment appointments appointmentid function thisresource attendees thisroute newappointment appappointment dsmodelextend attendees dshasmany appattendee subject dsattr string appattendee dsmodelextend appointment dsbelongsto appappointment name dsattr string appnewappointmentroute emberrouteextend appattendees approuteextend model function return thismodelfor appointment get attendees logs see stopped resolving model manually enter url log attempting url transition generated gt route application object fullname route application transition beginning validation transition attendees transition application calling beforemodel hook transition application resolving model transition application calling aftermodel hook transition application validation succeeded proceeding transition appointment calling beforemodel hook transition appointment resolving model transition appointment calling aftermodel hook transition appointment validation succeeded proceeding transition attendees calling beforemodel hook transition attendees resolving model transition attendees calling aftermodel hook transition attendees validation succeeded proceeding transition validation succeeded finalizing transition transition transition complete", "num": "3657", "d": "10/2013"}, {"title": "var key helper nt properly reset context", "body": "seems template context keys set using parameter helper remain available template code even helpers end tag fiddle demonstrating based ember beta", "num": "3652", "d": "10/2013"}, {"title": "render use templatename specified view", "body": "cases view must render different template based language factors views used normal routing used function returning correct template using view helper function executed default template naming convention used regardless template returned", "num": "3651", "d": "10/2013"}, {"title": "moveswhitespace issue", "body": "problems moveswhitespace check amp fix seems might findchildbyid function returning anything find reproduction bug reproduce code try adding conditional like need spaces classname conditional simply working could someone maybe explain need add spaces got following code comment findchildbyid use find children id instead using jquery change code using jquery find seems working whan applying new code page get rendered active state applied whitespacefix removes trailing space get working get completely working need disable whitespace fix completely thoughts", "num": "3650", "d": "10/2013"}, {"title": "support multiple findquery metadata", "body": "docs seems one findquery posts metadata associated posts would one multiple findqueries want find posts given author find posts period need access sets metadata sounds like work around overwrite extrameta store metadata separately think elegant option", "num": "3647", "d": "10/2013"}, {"title": "features option cancel bubbling clicks linkto option specify non linkto element points tobelongs route", "body": "nested links happen sometimes building navigation menus want hover state quick option select also want user able click main button leads nested links currently best way found make work ember still utilizing ember awesome feature adds active class links pointing current route thus extend router action specifically ignoring click add click silencer one dom element nested link would really awesome two additional ways accomplish feature idea option feature idea often found situations need little logic transition one route next instead using use done needed stash updates current project route tracking downside otherwise user perspective link another route longer get make use ember active class links current route adding would way ember know element also given active class route matches", "num": "3646", "d": "10/2013"}, {"title": "componentsendaction documentation", "body": "docs found guide componentsendaction describe use send action incorrectly see documentation api documentation describes use componentsendaction demonstrate sample code see documentation code sample api updated look like something like guide updated accurate information regarding feature", "num": "3644", "d": "10/2013"}, {"title": "mention app window namespace", "body": "privately closure kept throwing simply forgot several hours debugging didnt app window listeddocumented requirement somewhere", "num": "3643", "d": "10/2013"}, {"title": "problems dotted property names", "body": "want create emberobjects custom jsonformat contains dotted keys aloha gt object aloha gt aloha emberobject deal correctly dotted properties emberobjectcreate aloha gt class aloha constructor function tostring function reopen function init gt aloha oget gt undefined oset aloha gt error object path could found destroyed considered bug emberobject emberobject incompatible jsonstructures containing dotted keys know quite crazy use dots jsonkeys", "num": "3638", "d": "10/2013"}, {"title": "component rendering fails upgrading", "body": "upgrading also tried get following type errors xxxxxxxx component name templates precompiled using latest emberhandlebarscompiler investigation seems templates attempt pass parameters components get exception without parameters nt get exception nothing rendered update think tracked issue seems extend create initializers called javascript initializers called var app emberapplicationextend stuff create initializers called var app emberapplicationcreate fixed changing could nt find anything change log intentional change maybe documented", "num": "3637", "d": "10/2013"}, {"title": "linkto helper needs send model route willtransition", "body": "implementing submenu needs track state per post concept examining transition object route willtransition action save state works simple use cases need save state occurs result transition caused linkto helper passes model using simple approach store name route needs transitioned back submenu comes back play transition object passed parent route willtransition action contain reference model linkto helper sends would worth pull request make sure transition object gets reference someone better idea", "num": "3632", "d": "10/2013"}, {"title": "query params bound properties controllermodel", "body": "thanks alexspeller query params sure issue question tomdale said things inspired look around minutes nt query params bound properties controller model something reflected url updated figured query params would almost like bound properties know nt work way right tell ember philosophy application state represent reflected url possible understand query params slippery may apply directly specific controller model also screw browser history still feels incomplete example make apps urls bookmarkable sharable forkable etc find hacky stuff like coffeescript route actions action changes params update url someaction gt replacewith queryparams someparam get controllersomeparam entering resource route properties url thing applies navigate away url previously enter queryparams put back entering coffeescript route aftermodel gt replacewith get routename queryparams get queryparams get queryparams surely better way cc alexspeller refs", "num": "3630", "d": "10/2013"}, {"title": "assertion failed call get error undefined object em", "body": "going index route link page refresh error assertion failed thrown related commit believe issue available whatever object attempting look remove path string longer throws fatal error would create test portion script looks", "num": "3629", "d": "10/2013"}, {"title": "rendering outlet created template render fails", "body": "expect jsbin howdy bottom html output instead error appears render outlet template created handlebars cc nikolas", "num": "3626", "d": "10/2013"}, {"title": "indexcontroller created opening route directly", "body": "intended behavior want declare controller controller possible unless start indexroute traverse way app", "num": "3623", "d": "10/2013"}, {"title": "reason emberhandlebars nt include helper emberselect", "body": "would accept pr one", "num": "3613", "d": "10/2013"}, {"title": "update component property update bound value right time", "body": "jsfiddle better lot explanations component code line component invoked action called changes something wrong", "num": "3611", "d": "10/2013"}, {"title": "index range error chained arraycomputed properties", "body": "property dependent key another property error occurs later reset jsbin illustrates issue", "num": "3607", "d": "10/2013"}, {"title": "emberlatest queryparams adds index final query parameter", "body": "using experimental query parameter support via seeing following discrepancy route without final returns query parameter value appended cc alexspeller refs", "num": "3602", "d": "10/2013"}, {"title": "setting model controller defined", "body": "trying set model property controller something like appsomeroute emberrouteextend actions someaction function modelitem thiscontrollerfor user set model modeltem anything controller defined rather letting ember take care creating controller however setting model property way throws error could find controller mycontroller fix issue simply need define controller like appusercontroller emberobjectcontrollerextend understand expected rather ember created controller since anything controller except specifying model property wrong even setting model property unique enough force define empty controller", "num": "3601", "d": "10/2013"}, {"title": "arraycomputedproperty nonarray dependent keys", "body": "use case app user select different filters see notifications filtering code based current filter problem ca nt listen filter change returns expects dependent keys arrays neither work appending key end via expanding keys via", "num": "3600", "d": "10/2013"}, {"title": "accepts one dependent key", "body": "awesome however use case involves app users selecting different filters modify display data source content array change filtering mechanism way setup additional dependent keys api modified correct way approach", "num": "3599", "d": "10/2013"}, {"title": "error popobject arraycontroller", "body": "get following error read property undefined chainnodeprototypeunchain function key path var chains thischains node chains key unchain rest path first path amp amp pathlength key firstkey path path pathslice nodeunchain key path delete node needed nodecount nodecount lt delete chains nodekey nodedestroy happens first line node chains key moment return thischains null nt bielieve normal behavior thought share hope helps", "num": "3598", "d": "10/2013"}, {"title": "emberobjectcreate longer accepts emberobject argument", "body": "final could call another one arguments would seemingly treat passed regular js code longer inherits passed object javascript var foo emberobjectcreate message hello world fooget message hello world var bar emberobjectcreate foo final barget message hello world barget message undefined stems addition new exclusion intentional may important note changelog comes beta broke many parts complex ember app previously preferring almost objects emberobjects consistently use getset tricknotes", "num": "3596", "d": "10/2013"}, {"title": "add ability auto init registered objects", "body": "providing couple services ember application event binding init function service never looked container init function wo nt get called solved calling explicitly initialization completed would nice standard way achieve example var errorhandler emberobjectextend init function emberonerror thisreporterrorbind reporterror function error emberapplicationinitializer name errorhandler initialize function container application containerregister service errorhandler errorhandler maybe better way approach", "num": "3589", "d": "10/2013"}, {"title": "emobserves take propertynames function", "body": "consistent eg emcomputed emon also allows nicer coffeescript order able cleanly detected backwards compatibility", "num": "3587", "d": "10/2013"}, {"title": "replace sorted reducecomputed throws error", "body": "trackedarray seems get confused code line", "num": "3586", "d": "10/2013"}, {"title": "id number update id string", "body": "cause inconsistensy db ids numbers insert requests belongsto nt pass validation process ref must number ember cast string understand need internally play strings keeping base type queries propably way like defining type belongsto maybe type primary key cast querying line implementors note variables file consistently named according following scheme id means identifier managed external source provided inside data provided source always coerced strings used internally clientid means transient numerical identifier generated runtime data store important primarily newly created objects may yet externally generated id reference means record reference object holds metadata record even yet fully materialized type means subclass dsmodel used store normalize ids entering store despite fact developers may provide ids numbers eg important internally use strings since ids may serialized lose type information example ember router may put records id url later try deserialize url find corresponding record know string number var coerceid function id return id null null id", "num": "3585", "d": "10/2013"}, {"title": "emset returns lhs instead rhs", "body": "may wrong expected behave like assignment would return rhs value instead lhs object whereas", "num": "3574", "d": "10/2013"}, {"title": "catchall route gets priority star route", "body": "route catches missing routes renders page would like create route matches url starts browse browseshoesred seems like correct way however ember routerecognizer always picks missing route browse route logic sortsolutions routerecognizerjs asked stack overflow jeremy green created jsbin demonstrate problem", "num": "3573", "d": "10/2013"}, {"title": "typeinjection work initializers", "body": "hey created component tried inject service components nt work initializers works appinject normal code cf code alexspeller sent version also tried replace application parameter global app nt work either trying wrong bug wrong confusing", "num": "3572", "d": "10/2013"}, {"title": "emberreducecomputed seems reuse instancemeta", "body": "instancemeta object seems reused across multiple runs reducecomputed property use instancemeta store state looks like addeditem called multiple times object instancemeta jsfiddle switching routes addeditem called object instancemeta reused sure actually bug initialized function actually get called initialize job reset instancemeta nt bug however expect initialize called brand new instancemeta reused one", "num": "3571", "d": "10/2013"}, {"title": "ember allow binding html attributes textarea input", "body": "ember allows attributes bind textarea input possible use html attribute helpers", "num": "3569", "d": "10/2013"}, {"title": "sendaction return handler returns", "body": "js appapplicationcontroller emcontrollerextend actions handleit function return true appxfoocomponent emcomponentextend click function var res thissendaction didsomething res dosomething else dosomethingelse like real element events", "num": "3561", "d": "10/2013"}, {"title": "callbacks expire time coalesce single run loop", "body": "see", "num": "3560", "d": "10/2013"}, {"title": "implement queue enforce ordering", "body": "see", "num": "3559", "d": "10/2013"}, {"title": "emberreducecomputed extra dependencies adds object twice", "body": "adding one dependency reducecomputed items array get added multiple times dependency wrote jsfiddle demonstrating also happens calling reducecomputed multiple dependentkeys chaining", "num": "3554", "d": "10/2013"}, {"title": "make sure use appropriate", "body": "define subclass thrown exceptions within ember places nt use probably", "num": "3552", "d": "10/2013"}, {"title": "global query params", "body": "query params support introduced requires devs declare query params perroute basis allowing devs mark elsewhere globallyacceptable params use cases language flags display togglers force display mobile version force display screen version urlauthenticatable module api idea one would probably preprocessing global route", "num": "3550", "d": "10/2013"}, {"title": "emreducecomputed make resetvalue useful", "body": "ping hjdivad conversation today make user provided property object replaces default function make binding instance property applied reasoning implementor needs define custom reset schematics say example caching intermediate values needs hook tell invalidate said cache", "num": "3549", "d": "10/2013"}, {"title": "viewcontentindex updated properly underlying array changed collectionview", "body": "new views created collectionview index set correctly embercollectionview embercontainerviewextend arraydidchange function content start removed added idx start idx lt startadded idx item contentobjectat idx however views removed rearranged contentindex property updated correctly existing child views demonstrated following fiddle remove kris selden index remaining two entries indices update edit fiddle overrides collectionview didarraychange method update contentindex values", "num": "3548", "d": "10/2013"}, {"title": "loadingroute exit error triggered", "body": "currently unable hide loading indictor model returns rejected promise eg error", "num": "3547", "d": "10/2013"}, {"title": "developer version playing well cordova", "body": "ember library developer version throwing errors ipad packaged phonegapcordova error goes thing like undefined importsconsole ever try use consolelog throwing error nt happen use emberminjs", "num": "3546", "d": "10/2013"}, {"title": "keydown action nt work", "body": "hi use helper textfield option action nt get triggered eg works fine created jsfiddle reproduce behavior", "num": "3544", "d": "10/2013"}, {"title": "garbled copyright symbol ember source header", "body": "likely charset mismatch vs plain ascii issue maybe mime type server copyright notice comes garbled would possible change plain ascii character else spell copyright fully looked jquery use copyright symbol character lot scenarios source file going read supported context sure actually ascii characters source also wondering create subtle issues else line specifically technical reason using non ascii character please elaborate close issue", "num": "3541", "d": "10/2013"}, {"title": "ember view freezes map finger gestures mobile browsers", "body": "issue viewed use html outside ember view everything works fine emberview gesture applied map control becomes unresponsive", "num": "3536", "d": "10/2013"}, {"title": "controller lookup problem", "body": "receive controller goes name looks like receive auto generated controller get undefined another thing note updates exactly expected longest time trying access controller value template needs adjusted accordingly getting initial value null used got correct value bug mistake part", "num": "3535", "d": "10/2013"}, {"title": "adding enumerable observer init arraycontroller work", "body": "minimal test case class indexcontroller derived emberarraycontroller overrides init like javascript testindexcontroller emberarraycontrollerextend init function thissuper thisaddenumerableobserver consolelog thisget hasenumerableobservers enumerablewillchange function controller removing addcount enumerabledidchange function controller removecount adding adding enumerable observer query property hasenumerableobservers results false true printed console", "num": "3532", "d": "10/2013"}, {"title": "beta build broken", "body": "adding causes", "num": "3529", "d": "10/2013"}, {"title": "outlet duplication reopening js bin", "body": "reopening issue made js bin instance troubleshooting indicated various members js bin found sorry posting earlier bellow reposting description gave built page emberjs everything fine declared four routes one maps rest accessible linkto calling first templates everything appears perfectly outlet call one switch back three first ones template appears alongside one currently view example load page default route access fourth route switch back first route outlet contains template using development version emberjs source code", "num": "3527", "d": "10/2013"}, {"title": "test failures w android", "body": "working integrated crossbrowser testing came across errors running android failure test emberrunlater callback order assertion callbacks called expected order expected actual screenshot", "num": "3526", "d": "10/2013"}, {"title": "test failures w internet explorer amp", "body": "working integrated crossbrowser testing came across errors running windows xp internet explorer versions failures emberselect select name updated setting name property view assertion message renders select name expected foo actual null templates redrawing bindings enter infinite loop binding attribute handlebars expected test actual screenshot json dump errors found", "num": "3525", "d": "10/2013"}, {"title": "breaks google maps", "body": "google maps seems use override arrayprototype get must disable extendprototypes arrays emberjs google maps work", "num": "3524", "d": "10/2013"}, {"title": "calling super within mixins causes infinite recursion", "body": "problem arises object contains two mixins overrides method calling super upon calling overridden method first mixin super appears refer proceeds call infinitely var embermixincreate doit function consolelog doin thissuper var embermixincreate doit function consolelog doin thissuper var myobject emberobjectextend illustrated also observed single mixin object extended implements method called super var embermixincreate doit function thissuper var myobject emberobjectextend doit function thissuper illustrated appears problem exhibited seen fix bug adding terminal implementation base class fixes infinite recursion nt always possible", "num": "3523", "d": "10/2013"}, {"title": "test failures w internet explorer", "body": "working integrated crossbrowser testing came across errors running windows internet explorer module name emberrunlater test name callbacks coalesce run loop expiring time failed assertion first two callbacks different run loops full json dump errors found saucelabs job including screenshots amp video found", "num": "3522", "d": "10/2013"}, {"title": "test failures w firefox", "body": "working integrated crossbrowser testing came across errors running windows firefox latest version available saucelabs errors triggers appropriate events order test embertesting helpers module fires focus events inputs actual mousedown mouseup click expected mousedown focusin mouseup click fires focus events textareas actual mousedown mouseup click expected mousedown focusin mouseup click full json dump errors found saucelabs job including screenshots amp video found", "num": "3521", "d": "10/2013"}, {"title": "context properties accessible inside component block", "body": "commented got told open new issue component template data isolated block content able access properties property one maybe one nt working workaround found access nt way jsbin showing everything", "num": "3520", "d": "10/2013"}, {"title": "params decoded using location history", "body": "hey switched using history mode parts page stopped working would needed decode params passed manually everywhere course makes sense browsers least chromium case allow open urls like userdominik schmidt enter userdominik schmidt automatically encodes query string userdominik show behavior created minimal demo code gist could make history feature work jsfiddlejsbin also noteworthy difference clicking links refreshing page thanks looking regards domme", "num": "3514", "d": "10/2013"}, {"title": "onetime binding feature", "body": "would usefull one time binding similar wpf add html forget use case different messages alerts etc", "num": "3512", "d": "10/2013"}, {"title": "suspendlisteners resetting suspended flag one event", "body": "created issue ask question whether suspendlisteners resets suspended flag callback passed called turns reproduce behaviour couple gists deals one event works expected example gist one event suspended first one get reset see gist first event gets left suspended state see first alert think reason code var suspendedactions eventname actions action l leventnameslength variable defined outside loop therefore applies last event loop means finalizer called ever resets actions whatever last index eventnames previously code like leventnameslength finalizer like", "num": "3510", "d": "10/2013"}, {"title": "suspendlisteners resetting suspended flag", "body": "raised issue emberdata wonder bug ember issue suspendlisteners resetting suspended flag callback passed suspendlisteners called", "num": "3509", "d": "10/2013"}, {"body": "unfortunately without details likely able track provide example issue maybe jsbin jsfiddle thoughts may issue prototype extension run ember prototype extensions see", "d": "10/2013"}, {"body": "going code noticed figured accidentally passed controller content instead controller collection view content lead new discovery though attributes get content passed controller fixed extending changing content key controller everything works think good practice recommendations actually go something add documentation", "d": "10/2013"}, {"body": "zeeraw quick jsbin fiddle isolated exact behavior would make much easier provide feedback longer issue going close said feel free continue bestpractices discussion", "d": "10/2013"}, {"body": "alright thanks pointers stefanpenner get resources", "d": "10/2013"}, {"body": "tagged releases since found releases line understanding handlebars included separately html believe running clean directory run first create handlebars module create module contain ember specific wrappers around plan handlebars", "d": "10/2013"}, {"body": "yes confused left earlier build", "d": "10/2013"}, {"body": "injections models currently disabled see done emberdata ready fully container aware ecosystem", "d": "10/2013"}, {"body": "need change tests stuff routing nt begin first occurs must also work prod must detect current url work correctly maybe waits first", "d": "10/2013"}, {"body": "aside nt stop twice additional called trigger additional transition", "d": "10/2013"}, {"body": "another aside used testing eg logging people", "d": "10/2013"}, {"body": "sgharms use instead workaround bindings timing issues syncing initialization exacerbated changes init planning bringing back initial schedule sync bindings connected resolve would avoid using bindings favor computed properties", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "use enabledisable different features build nodejs module", "d": "10/2013"}, {"body": "worked", "d": "10/2013"}, {"body": "kumavis could update title issue mention would great", "d": "10/2013"}, {"body": "kumavis damn forgot", "d": "10/2013"}, {"body": "kumavis", "d": "10/2013"}, {"body": "unfortunately currently expect installed globally hence option fixed merge", "d": "10/2013"}, {"body": "twokul node module dependencies nt toplevel buildlevel one anyway", "d": "10/2013"}, {"body": "kumavis happen soon need pr merged happens pr ready add repo", "d": "10/2013"}, {"body": "thumbsup", "d": "10/2013"}, {"body": "rjackson bro keep commenting things faster", "d": "10/2013"}, {"body": "twokul tag team", "d": "10/2013"}, {"body": "rjackson twokul thanks quick response leave issue open", "d": "10/2013"}, {"body": "thought solved guess solved issue interation fiddle would nice would help regression test fairly confident loop modified", "d": "10/2013"}, {"body": "needs gather dep keys actually triggering changes", "d": "10/2013"}, {"body": "kselden fiddle error reproduced", "d": "10/2013"}, {"body": "could using linkto helper create links", "d": "10/2013"}, {"body": "switched ember latest still get issue", "d": "10/2013"}, {"body": "jsbin", "d": "10/2013"}, {"body": "typically want minimize law demeter violations eg reaching graph object graphs specifically templates minimizing far reach applications graph lead maintainable code scenario would suggest utilizing controller template", "d": "10/2013"}, {"body": "makes sense thanks response", "d": "10/2013"}, {"body": "fixed", "d": "10/2013"}, {"body": "ah great thanks", "d": "10/2013"}, {"body": "seems like problem time still nt gotten id back server yet right", "d": "10/2013"}, {"body": "helper takes template name first parameter optional second param supply model controller generated template sure mean mention using view nt take view param abobwhite provide sample jsbin illustrating issue", "d": "10/2013"}, {"body": "abobwhite typically think render template helper rendering template happens part templateviewcontroller triple describe relationship direction view primary entity goal essentially tells system render template name grab associated controllerview available generate", "d": "10/2013"}, {"body": "reading source bit think see mean view exists name provided used see templatename function view ignored since also hard code template used view source definitely see point view nt resolve template way using vs stefanpenner mentioned think current behavior intentional", "d": "10/2013"}, {"body": "rjackson documentation says get instance appauthorview class exists otherwise uses default generated view like rest ember template specified uses corresponding view one exists otherwise autogenerates one seeing view invoked templatename used determine rendered stefanpenner seems like flaw view view specify template use template specified render helper prevents view corresponding template never used functionality used documented used", "d": "10/2013"}, {"body": "abobwhite flaw rather order precedence", "d": "10/2013"}, {"body": "think inconsistency whether view specifies template template name designates view confusing made consistent across ember sent mailbox iphone sat oct pm stefan penner notifications githubcom wrote abobwhite flaw reply email directly view github", "d": "10/2013"}, {"body": "agreed one things took longest begin unravel source much confusion started ember sent mailbox iphone sat oct pm luke melia notifications githubcom wrote think inconsistency whether view specifies template template name designates view confusing made consistent across ember sent mailbox iphone sat oct pm stefan penner notifications githubcom wrote abobwhite flaw reply email directly view github reply email directly view github", "d": "10/2013"}, {"body": "particular instance would need check view function lookup pass template provided words let looked normally work pr tonight discuss concretely", "d": "10/2013"}, {"body": "rjackson makes sense thanks help let know anything", "d": "10/2013"}, {"body": "correct course action good discussion proposal discourse", "d": "10/2013"}, {"body": "using bindattr statements attributes", "d": "10/2013"}, {"body": "hmm check solves case thanks nt removal trailing space still something might break siteslogic offtopic shame imho really intiutive frontenders using emberjs protoyping ifelse logic seperators prepending static classes get need bindattr though handlebars context aware prevent scripttag output see", "d": "10/2013"}, {"body": "basic reason use ifelse within tags originally handlebars uses metamorph tags surround dynamic segments know needs changedupdated uses attributes instead tags use within another tag definitely plan remove limitation timeline aware", "d": "10/2013"}, {"body": "gavro believe handlebars thing", "d": "10/2013"}, {"body": "seems like talking ember data maybe meant open emberjsdata", "d": "10/2013"}, {"body": "ah bad thanks", "d": "10/2013"}, {"body": "share proposal forums prefer initial discussion solidify around solution bringing github thanks", "d": "10/2013"}, {"body": "link forum topic", "d": "10/2013"}, {"body": "code example api docs show using trigger action controller see didorothy could elaborate specifically found lackingwrong guide andor api docs", "d": "10/2013"}, {"body": "updated jsfiddle spell concern comments see also built another fiddle demonstrates documentation errordifficulty guide api example code notice button longer presents clicked message may see api documentation describes correctly example leaves class propertymember would specify correct function call controller guide makes sound put string passed sendaction name function called controller figure needs done careful investigation figured reading embercomponent code stepping componentsendaction sorry lack clarity hopefully helpful", "d": "10/2013"}, {"body": "unsure specifically responsibility emberdocs adding closure language semantic ember respects likely documented potentially looked default window something else note likely largely missing docs correct path take also supports name eg uses resolver default grabs views base format enables framework heavy lifting added benefit working using pure module build application would examples taking global pure module based approach building ember apps", "d": "10/2013"}, {"body": "internally ember uses presence determine particular path lookup chained method calls simple key lookup using example ember likely trying perform something like following javascript emberobjectcreate aloha oget essentially interpreted oget get get ultimately doubt considered bug", "d": "10/2013"}, {"body": "rjackson stefanpenner doubt used work back current behaviour much nicer overwhelming majority cases might sometimes helpful escape valve nt control data given something like equivalent old", "d": "10/2013"}, {"body": "hjdivad escape valve sound interesting especially people normalize crazy json blobs", "d": "10/2013"}, {"body": "looks like stef forgot pull last beta current beta tl dr initializers currently inherit using viable alternative short term bring core decide need drop stefanpenner twokul paired comment cc wycats wagenet lukemelia etal", "d": "10/2013"}, {"body": "yeah commit nt properly tagged nt get pulled", "d": "10/2013"}, {"body": "discuss core team meeting tomorrow", "d": "10/2013"}, {"body": "fixed soon", "d": "10/2013"}, {"body": "object gets passed gives info transition inspect see example worth documenting sure put since definitely advanced side things might muddle existing documentation either way belong pr website closing", "d": "10/2013"}, {"body": "maybe good enough ember ecosystem update post information", "d": "10/2013"}, {"body": "updated post many thanks help", "d": "10/2013"}, {"body": "may better syntax future trivial achieve coffee appsomecontroller emcontrollerextend pagedidchange gt emrunonce updatepageparam observes page updatepageparam gt transitiontoroute queryparams page get page would generally want use replacewith would usually something want part browser history", "d": "10/2013"}, {"body": "cool looks pretty good feel like tried something similar think observers screwed replacewith app params get verbose soon getting back page daunting amount clicks assume applies stuff like mapping apps might drap pin around update xy thousand times", "d": "10/2013"}, {"body": "cool check new observers guide helped add load stuff explains observers often screwed great detail ember team may make sense leave open reminder improve story binding query params controller properties common pretty much every app using query params use observer pattern", "d": "10/2013"}, {"body": "populating url resource browsed without queryparams ember going unhappy think replacewith makes sense regardless use case coffeescript route enter gt assuming controller already content emrunonce gt replacewith queryparams someparam get controllersomeparam", "d": "10/2013"}, {"body": "prefer keep long running issues open start ignore something needs discussed forums ideal place", "d": "10/2013"}, {"body": "joelkallman could elaborate example put jsbin seems work fine could tweak reproduce error please thanks", "d": "10/2013"}, {"body": "tkellen correct unless defined indexcontroller", "d": "10/2013"}, {"body": "nt stepping indexroute prerequisite routes given contrived example nt instantiated available controllers need matter initial page request seems odd inconsistent sometimes available sometimes depending load application reasoning behind instantiating", "d": "10/2013"}, {"body": "nt stepping indexroute prerequisite routes indexroute subroute applicationroute root route", "d": "10/2013"}, {"body": "tkellen likely us happy current state put fine point buggy awkward work makes easy create slow menus someone wants rethink emberselect rewrite include handlebars helper would hero community", "d": "10/2013"}, {"body": "lukemelia exactly", "d": "10/2013"}, {"body": "lcoq sure bug happen setting value inside action binding nt flushed immediatelly use like workaround component instead", "d": "10/2013"}, {"body": "marcioj thank workaround sorry disturb bug thought users care run loop least less possible let ember team decide whether fixed", "d": "10/2013"}, {"body": "relying synchronous behavior bindings need force sync wrap set defer action like marcioj suggested know example bit contrived also seem like odd way things wonder better way set app completely avoid case", "d": "10/2013"}, {"body": "wow quick thanks", "d": "10/2013"}, {"body": "worries slindberg confirm fixes real problem illustrative jsbin", "d": "10/2013"}, {"body": "hjdivad confirmed", "d": "10/2013"}, {"body": "slindberg awesome glad hear", "d": "10/2013"}, {"body": "weird assume route recognizer hits query param processing definitely nt processing like inentionally query params parsing code", "d": "10/2013"}, {"body": "nt think result queryparams change around iirc requires slash hash meaning valid think change came result unifying transitions created see", "d": "10/2013"}, {"body": "assuming bug close", "d": "10/2013"}, {"body": "expected see longer auto generates controllers", "d": "10/2013"}, {"body": "relevant discussion", "d": "10/2013"}, {"body": "fiddle demonstrate", "d": "10/2013"}, {"body": "redundant closed issue", "d": "10/2013"}, {"body": "solved", "d": "10/2013"}, {"body": "likely related code app perhaps dependent key observer computed property nt valid nt resolve share jsbinjsfiddle demonstrating error", "d": "10/2013"}, {"body": "hi rjackson tried fiddle trying get close reality reproduce anyway getting background data jaydata might messing data background though would surprised works returning without unchain unsure side effects would would recommend approach", "d": "10/2013"}, {"body": "jmorvan ca nt reproduce jsfiddle assume bug like help architecture answerable question stackoverflow good place ask", "d": "10/2013"}, {"body": "pr fix", "d": "10/2013"}, {"body": "sexy", "d": "10/2013"}, {"body": "jayphelps say feel like bit misuse method pass emberobject emberobjectcreate create new object already object bit wasteful would better make ensureemberobject helper something along lines also overhead making emberobjects period find lot use embergetset instead avoid create many ember objects", "d": "10/2013"}, {"body": "reference original pr", "d": "10/2013"}, {"body": "wagenet definitely aware points pull example get time usually intentionally want different object", "d": "10/2013"}, {"body": "jayphelps even use iteration use properties nt part underlying class technically regression since used work even something recommend using", "d": "10/2013"}, {"body": "wagenet noted", "d": "10/2013"}, {"body": "would seem downstream consumer errorhandler injected downstream consumer instantiated errorhandler would also maybe nt fully understand usecase", "d": "10/2013"}, {"body": "example consumed anyone service provide error handling attaches events send report backend another service created check unsaved changes transition occur service also attaches event init catch external links window closed transition never occurs service never consumed anyone event handler never get attached", "d": "10/2013"}, {"body": "gunn consistency cp got time pr", "d": "10/2013"}, {"body": "stefanpenner yep soon", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "pr", "d": "10/2013"}, {"body": "pr merged", "d": "10/2013"}, {"body": "gavinwahl issue treat outofrange indexes pushes however keeping api", "d": "10/2013"}, {"body": "still getting error jsfiddle", "d": "10/2013"}, {"body": "still getting error line application working another test case", "d": "10/2013"}, {"body": "gavinwahl thanks working another test case really helps", "d": "10/2013"}, {"body": "lot trouble reproducing test case stack trace least code looks like line gist line trace", "d": "10/2013"}, {"body": "gavinwahl ping irc emberjsdev freenode either stack trace unfortunately helpful give patch produce useful debugging output tl dr actually useful getting log array changes paired corresponding state likely demonstrate current error", "d": "10/2013"}, {"body": "narf think meant open issue repo seems directly related ember data perspective anything uncommon guid permalink type slugs doubt would changed repo implement custom serializer override parts need changed also unsure original comment version ember data using", "d": "10/2013"}, {"body": "oh right sorry ember data related bit sleepy posted proplem appears ember data", "d": "10/2013"}, {"body": "believe returns object chainability", "d": "10/2013"}, {"body": "although move away getset future detail might annoying transition think breaking would favour object property behaviour", "d": "10/2013"}, {"body": "stefanpenner would suggest submit pr putting behind feature flag wait others chime", "d": "10/2013"}, {"body": "making behave like object properties hiding behind feature flag", "d": "10/2013"}, {"body": "generally discourage longrunning flags especially minor issues like drop future change behavior", "d": "10/2013"}, {"body": "wagenet good point", "d": "10/2013"}, {"body": "main reason discouraging long running flags essentially fork community people things one way things thought virtually certain nt want change way long time easy enough work around behavior nt like", "d": "10/2013"}, {"body": "closing favor xtian pr", "d": "10/2013"}, {"body": "cc stefanpenner", "d": "10/2013"}, {"body": "specifying domtemplates fixes issue clearly ideal likely something componentsinitializersbootstrap work see im weather wont able dig tonight assigning see improve situation", "d": "10/2013"}, {"body": "already helps thanks lot stefanpenner edit using application parameter works instead app", "d": "10/2013"}, {"body": "dschmidt within initializers prefer usage application parameter likely need reference global within initializers please report scenario must machty also fixes entirely flag components factories loaded lazily initializers", "d": "10/2013"}, {"body": "either dreaming edited post always wanted use application parameter okay cool good know", "d": "10/2013"}, {"body": "reused perinstance target objectcontaining property example since never recreated never recreated reducecomputed method called resets accumulator back using accumulator store result see see working advertised raised expose reducecomputed object consumers override provide whatever resetting behaviour need", "d": "10/2013"}, {"body": "seem little odd first thought needed add however nt get called cc hjdivad", "d": "10/2013"}, {"body": "indeed reused property instance pairs called reset use reset scratchpad wagenet nt get called reset semantics changed actual reset step rather individually removing item chat detail like tl dr sometimes want simple reset sometimes want removeall addall semantics", "d": "10/2013"}, {"body": "nt particularly good reason give user new internally wanted avoid recreating terminology bit rough afraid internally thing called scratchpad handed user bit recreating reset seems fine", "d": "10/2013"}, {"body": "oh nt know recalled makes things bunch easier", "d": "10/2013"}, {"body": "duplicate several older issues etc best discussion attributes bindable default short ca nt account possible effects contains docs extend views additional make sense application think support possible attributes default open proposal explain attribute behave ones require new behavior etc", "d": "10/2013"}, {"body": "trek sorry creating duplicate think add least paragraph section explaining attributes bindable default", "d": "10/2013"}, {"body": "worries api docs contain information extend guides purposefully intended succinct unlikely add bit information talk adding supplementary guides would involve indepth coverage like", "d": "10/2013"}, {"body": "current usecase creating sortable lists component using native drag drop determine whether drop target accept dropped validate mime type data valid want stop code example user drags desktop onto avatar image would trigger validate event dragenter avatar check mime type see valid drop alternatively drag validation handler return true go ahead update ui show valid user knows drop", "d": "10/2013"}, {"body": "submitted address currently return either true value false returned action false false returned action errorsnonexistent action handlers unfortunately returning value back would allow return false action", "d": "10/2013"}, {"body": "sweet thanks rjackson", "d": "10/2013"}, {"body": "entangled issue", "d": "10/2013"}, {"body": "meaning thanks issue seems like good thissaturday activity", "d": "10/2013"}, {"body": "cc hjdivad", "d": "10/2013"}, {"body": "wagenet provide example expected use", "d": "10/2013"}, {"body": "stefanpenner", "d": "10/2013"}, {"body": "micro libs matter", "d": "10/2013"}, {"body": "stefanpenner answer question ca nt really microlibs since nt unique ember", "d": "10/2013"}, {"body": "wagenet follow pattern would good microlibs implement error", "d": "10/2013"}, {"body": "fan embererror let alone rsvperror routererror nt think adds much value typebypackage nt really type error plus ca nt catch type js", "d": "10/2013"}, {"body": "believe original motivation made easier know programmatically errors app code ember", "d": "10/2013"}, {"body": "cc alexspeller", "d": "10/2013"}, {"body": "believe technically possible currently via would require prefixing previously toplevel routes producing like still repetitive code expected", "d": "10/2013"}, {"body": "possible currently suggested syntax applicationroute query params would make sense think", "d": "10/2013"}, {"body": "cc kselden wycats", "d": "10/2013"}, {"body": "loading routes getting facelift shortly make sure addressed thanks reporting", "d": "10/2013"}, {"body": "machty loading substates landed issue resolved", "d": "10/2013"}, {"body": "yup", "d": "10/2013"}, {"body": "likely todo development assertions using consoleassert", "d": "10/2013"}, {"body": "looks like cordova nt support default must installed plugin take look links stefanpenner mentioned developerdebug version ember uses consolelog amp consoleassert assist debugging", "d": "10/2013"}, {"body": "thanks rjackson", "d": "10/2013"}, {"body": "thanks", "d": "10/2013"}, {"body": "ember input helper default supports focusin focusout keypress events support events write helper var custominput embertextfieldextend keyup function event thissendaction keyup event emberhandlebarshelper custominput custominput reopen embertextsupport support input helper globally hope fiddle helps", "d": "10/2013"}, {"body": "thank sure could use input helper instead standard html tag case think issue remains helper working options according guides specify alternative event using option builtin supported native browser events", "d": "10/2013"}, {"body": "discussion going blacklistingwhitelisting events supported action helper refer thread", "d": "10/2013"}, {"body": "oh see thanks link rajmichaels", "d": "10/2013"}, {"body": "realized published ember js closing reposting ember data", "d": "10/2013"}, {"body": "also issue embers generated files submitted pr fix", "d": "10/2013"}, {"body": "avitalbn mobile browsers", "d": "10/2013"}, {"body": "android ones tried including chrome default browser ipad ios safari freeze map control pinch zoom still work", "d": "10/2013"}, {"body": "seems ember may work well multitouch gestures need investigate", "d": "10/2013"}, {"body": "always using normalized names working ember namespaces use camelcased names underscored hyphenated names", "d": "10/2013"}, {"body": "would strongly recommend use array observers arraycontroller enumerable observers old feature confident actually works predate lot array infrastructure stefanpenner yank enumerable observers api docs discussion either making work claiming work", "d": "10/2013"}, {"body": "wycats yank docs add discussion agenda", "d": "10/2013"}, {"body": "yup hit one well", "d": "10/2013"}, {"body": "seems bad surprised tests failed", "d": "10/2013"}, {"body": "canary version tonight works", "d": "10/2013"}, {"body": "looks like build got messed source rebuilding uploading", "d": "10/2013"}, {"body": "close tag linux kernel section html linux module loader already exists cinux want rewrite code following lines closing tag fixes application", "d": "10/2013"}, {"body": "gotcha pushed update might take couple minutes kick", "d": "10/2013"}, {"body": "reopen existing issue original poster access button", "d": "10/2013"}, {"body": "seems bad suspect nt something easily fix though love wrong", "d": "10/2013"}, {"body": "seen ie", "d": "10/2013"}, {"body": "yup schedular tests testing stuff browsers dont guarentee although would nice tl dr settimouts nt fire correct order likely enforce order task queue flush appropriately way nt get trolled crazy safari bugs resumepause etc order calls available resources low", "d": "10/2013"}, {"body": "remove test open ticket implementing queue", "d": "10/2013"}, {"body": "wagenet yes lets comment tests leave comment stating problem proposed solution time available flush otherwise fair game anyone else relatively straight forward", "d": "10/2013"}, {"body": "spoke machty irc suggested may related changes suggested testing see errors present prior changes kick job report back status", "d": "10/2013"}, {"body": "looks like errors also reported run ie updating issue title reflect", "d": "10/2013"}, {"body": "machty errors present least far back nt appear related see test video", "d": "10/2013"}, {"body": "sure going first error second one may need make test permissive", "d": "10/2013"}, {"body": "pretty sure first error actually iejquery bug ie chrome comes play works", "d": "10/2013"}, {"body": "hmm seems bad would prefer builds fail every time make possible disable certain tests specific browsers seems like bad choice sure else", "d": "10/2013"}, {"body": "fixed waiting feed back changes", "d": "10/2013"}, {"body": "version use", "d": "10/2013"}, {"body": "ember google maps", "d": "10/2013"}, {"body": "nt bug prototype extensions convenience clash libraries also extend prototypes solution disable case correct perhaps google lib allows way disable though doubt", "d": "10/2013"}, {"body": "would still consider bug might want find particular prototype causes issue see simple fix even possible less popular api clash easier adoption", "d": "10/2013"}, {"body": "concur davydotcom alexspeller balance ember would nt use prototype extensions broke jquery think google maps popular enough worth look mean pretty bad footgun newb install ember install google maps broke", "d": "10/2013"}, {"body": "ok reopening brainstormz", "d": "10/2013"}, {"body": "guys thinking selective prototype extensions performed case default ones except conflict detected disable prototype extensions default often people call array guess allow stuff like think often array wrapped would", "d": "10/2013"}, {"body": "want confirm sure get know remove observable mixin get works", "d": "10/2013"}, {"body": "collision purely think libraries fault one", "d": "10/2013"}, {"body": "looks like also may set", "d": "10/2013"}, {"body": "interesting wonder determine set get methods google maps adjust prototypes work", "d": "10/2013"}, {"body": "exactly breaks using googlemaps ember experiencing issue far using sophisticated google stuff get error startup", "d": "10/2013"}, {"body": "first tilesets load map controls wont get bunch dom errors move mouse around map view", "d": "10/2013"}, {"body": "davydotcom jsbin confirm would nice curious know narrowed source issue", "d": "10/2013"}, {"body": "interestingly nt appear getset collide directly array fiddle instructions replicate working well google maps important", "d": "10/2013"}, {"body": "works perfectly get rid get set", "d": "10/2013"}, {"body": "must relying duck typing likely detect getset treat object something expect", "d": "10/2013"}, {"body": "ill work fiddle", "d": "10/2013"}, {"body": "perhaps order emberjs google maps libs included factor ie googlemaps might perform check overriding getset wo nt ember already extended prototypes", "d": "10/2013"}, {"body": "could case google maps last thing gets loaded written issues far", "d": "10/2013"}, {"body": "let try first thing", "d": "10/2013"}, {"body": "ok guys digging actually google maps close appears mapstraction map wrapper gon na dig see figure close sorry", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "meh huge review found mapstraction passiny array object setoptions google maps rather causing setoptions blow emberjs involved", "d": "10/2013"}, {"body": "yeah sorry felt like posting gifs mapstractions checks property object gets passed something still open discussion prevent awkward stuff future case might indirect enough might good solution", "d": "10/2013"}, {"body": "issue mapstractions applyoptions method sets map options google maps looked like javascript applyoptions function var options thisdraggable optionsdraggable thisdraggable mapsetoptions options notice fix change guess google maps setoptions iterates key assigns main map object assigned set get probably overwrote methods within map object", "d": "10/2013"}, {"body": "interesting fiddle stops calls instead hanging browser", "d": "10/2013"}, {"body": "failing test javascript packagesembermetaltestsmixinmethodtestjs test super first mixin superclass function errors function super previously calling second assertion use remaining count calls ensure nt loop indefinitely var remaining var mixina embermixincreate foo function remaining gt thissuper var obj mixinaapply obj raises function objfoo null calling super mixin raises var mixinb embermixincreate foo function thissuper var obj mixinaapply obj mixinbapply obj raises function objfoo null calling super first mixin raises latter assertion fails", "d": "10/2013"}, {"body": "mixonic pr", "d": "10/2013"}, {"body": "wagenet unfortunately yet hung application ready issue api design question mentioned try bug folks chat week get hand", "d": "10/2013"}, {"body": "mixonic would like benchmark pr little concerned wrapping every mixin function known issue adding terminal method workaround", "d": "10/2013"}, {"body": "actually bug sort bug could fix issue could loosen tests strictness basically testing scheduler works specific way often practice times low system resource availability semantics remain truthy unsure exact resolution would interesting talking", "d": "10/2013"}, {"body": "makes sense concern failure might considered build failure depending final implementation automated crossbrowser testing", "d": "10/2013"}, {"body": "im train evening able chat tomorrow tomorrow evening", "d": "10/2013"}, {"body": "confirmed particular test flickering run times morning gotten failures twice quite possibly related system load factor running sauce labs vm", "d": "10/2013"}, {"body": "saw happen chrome even though many many times run tests chrome", "d": "10/2013"}, {"body": "error happens intermittently run locally sometimes happens sometimes likely timing issue makes incredibly hard hunt", "d": "10/2013"}, {"body": "great detective work rjackson shows issue one described", "d": "10/2013"}, {"body": "machty need detective photoshop rjackson", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "rofl", "d": "10/2013"}, {"body": "huafu store properties controller rather view works fine", "d": "10/2013"}, {"body": "intuitivepixel know working controller nt want put properties view controller else reason mvc case example jsbin view classes containing view", "d": "10/2013"}, {"body": "dup", "d": "10/2013"}, {"body": "use helper unbound somepropertythatdoesntchange", "d": "10/2013"}, {"body": "kirillsalykin think rlivsey suggestion good closing alternative feature proposal let start thread discussemberjscom tagged proposal explore", "d": "10/2013"}, {"body": "fixed", "d": "10/2013"}, {"body": "closed favour", "d": "10/2013"}, {"body": "looks like flipped read", "d": "10/2013"}, {"body": "closing please reopen jsbin jsfiddle", "d": "10/2013"}, {"body": "conmarap jsbin", "d": "10/2013"}, {"body": "conmarap provide steps reproduce seeing error jsbin", "d": "10/2013"}, {"body": "problem missing closing tag linux kernel section edited outlet right brought attention forgot revert click linux kernel link back link ig downloads scroll outlet linux kernel appears well problem following point linux module loader already exists cinux want rewrite original page works properly", "d": "10/2013"}, {"body": "chrome bug hard debug found workaround anyone stumbling add conditional breakpoint line wherever appears ember build expression seems errors happen previous line nt run correctly cases properties nt mixed adding conditional breakpoint guess watching everything works", "d": "10/2013"}, {"body": "wagenet certainly error nt happen browsers nixme thank information confirmed workaround works head worry canary bug may ported normal chrome near future", "d": "10/2013"}, {"body": "emadurandal actually takes little good code move canary actual release also lot experimental stuff wo nt make even longer ever however make sure bug filed maybe alert chrome team issue cc paulirish", "d": "10/2013"}, {"body": "nixme opened chrome bug report", "d": "10/2013"}, {"body": "wagenet see difficult problem afraid like leave others", "d": "10/2013"}, {"body": "closing browser bug let make sure chrome fixes", "d": "10/2013"}, {"body": "link chrome bug issue", "d": "10/2013"}, {"body": "sorry wedding last days never got chance file bug seems latest canary nt exhibit issue anymore update think set", "d": "10/2013"}, {"body": "issues seems made way chrome dev channel build get work either workaround mentioned initially refreshing decides work", "d": "10/2013"}, {"body": "appears resolved", "d": "10/2013"}, {"body": "fixed", "d": "10/2013"}, {"body": "sure underlying issue works using latest ember canary build", "d": "10/2013"}, {"body": "xenyou test latest beta xtian mentioned fixed issues firefox crossbrowser testing", "d": "10/2013"}, {"body": "rjackson still nt work latest beta", "d": "10/2013"}, {"body": "also experiencing problems firefox mocha testing embermochaadapter getting error reregister already looked every run integration specs chrome chrome canary safari work fine latest canary build", "d": "10/2013"}, {"body": "fixed master jsbin beta jsbin quite sure happening way trace would bisect wagenet since fixed master beta need track", "d": "10/2013"}, {"body": "still seeing error firefox error reregister already looked karma testrunner embermochaadapter", "d": "10/2013"}, {"body": "levelbossmike version ember", "d": "10/2013"}, {"body": "suspect initializers running multiple times", "d": "10/2013"}, {"body": "levelbossmike xenyou working jsbin app initializers run dom ready seems like mocha tests running figured rjackson", "d": "10/2013"}, {"body": "seeing issue emberjs using lookupitemcontroller create different itemcontrollers based array item object sure makes difference itemcontrollers observers reason even noticed sticking around debugging step observer code multiple times dawned multiple itemcontrollers item number zombie itemcontrollers seemed function many times navigated different route back seems happening transition route ember creates itemcontrollers transition new route ember destroy itemcontrollers transition back original route ember creates new itemcontrollers old ones still around big issue memory leak observers still firing specifically called removeobserver observers created manually addobserver observers defined classextend still observing zombie itemcontrollers quick dirty fix applied call controllerdestroy view willdestroyelement function seems work expected observers firing still need investigate see anything else strange going update tried confirm bugbehavior still present", "d": "10/2013"}, {"body": "related", "d": "10/2013"}, {"body": "majorbreakfast address first concern mind doc addition", "d": "10/2013"}, {"body": "wagenet stefanpenner majorbreakfast fixes parameter documentation replacing params would suggest closing issue opening new issue define dependency injection better think required would happy open issue get started stefan notes think way go", "d": "10/2013"}, {"body": "got behavior worked made example cases check embboot branch intermediate sha compare behavior read commit message switch", "d": "10/2013"}, {"body": "sorry inactive long working router params stuff right seem related problems noticed", "d": "10/2013"}, {"body": "sorry choice words wrong attach error handlers asynchronously assuming true failure scenarios lead false positives duplicate errors additionally quite nervous nerfing ability lazily build promise graph failure scenarios kselden mind sharing concise example said see benefit noticing unhandled rejections immediately typically run development", "d": "10/2013"}, {"body": "question api design ember going offer try comprehensive trapping exceptions happen anywhere inside ember right parts application code covered nt tell studying ember internals attach error handlers asynchronously assuming rsvpconfigure onerror true failure scenarios lead false positives duplicate errors debugging false positives far less bad false negatives know fact number false positives small already run rsvp onerror handler development production additionally quite nervous nerfing ability lazily build promise graph failure scenarios point earlier comments absolutely effect ability build promise graph failure scenarios purely advisory nt make unhandled promise become handled nt effect state promise see benefit noticing unhandled rejections immediately yes think immediately useful eventually beneficial wait runloop two case another code path actually going install handler nt gotten around yet personally nt need emberonerror automatically cover rsvp errors know install handler pitfall somebody learning need backburner error trap right absolutely way get stack traces browsers starting offer version preserves actual exception object stack trace awesome makes irrelevant widespread yet", "d": "10/2013"}, {"body": "sounds reasonable going ship default allow multiple listeners currently may propose solution simply use rsvp eventtarget make happen additionally places framework unfortunately use rejection scenario non exceptional cases could use check example route redirects propagate rejected transitions although sad likely change currently error rethrown onerror helper rsvp breaks many things needed fix believe perf consideration proposed rsvp ember onerror integration backburner stack speak correct", "d": "10/2013"}, {"body": "using rejection nonexceptional cases necessarily problem becomes problem nothing handling rejection keep mind stack speak correct nt enough context backburner yet say sure going comment backburner need equivalent right way get notified kind exception short lacks stack trace practically speaking quite lot user application code ends getting invoked inside backburner queue comprehensive cover backburner", "d": "10/2013"}, {"body": "using rejection nonexceptional cases necessarily problem rejection nonexceptional cases akin throwing error non exceptional cases sometimes fit sometimes causes grief comment backburner need equivalent backburneron error covered additionally backburner debug mode stitch stacks together provide useful traces although chrome insanely slow may utilized provide improved exceptions strategy faster solution may apply us lukemelia mentioned interesting improving debuggabilityusability thread interest", "d": "10/2013"}, {"body": "inconsistency seem bad though sure best fix kselden", "d": "10/2013"}, {"body": "record seeing application well exact problem", "d": "10/2013"}, {"body": "chrome regression bug ember related", "d": "10/2013"}, {"body": "ran helping someone stackoverflow believe bug unintended behavior related behavior action helper reopening assigning", "d": "10/2013"}, {"body": "noticed use case using separate view input form validation checks quickly become obnoxious", "d": "10/2013"}, {"body": "closing per kselden bug someone wants work providing support start new ticket", "d": "10/2013"}, {"body": "stefanpenner fixed", "d": "10/2013"}, {"body": "take someone needs spearhead getting much traction might good try forums also could good ask around twitter", "d": "10/2013"}, {"body": "closing due inactivity", "d": "10/2013"}, {"body": "awesome see work people translating ember guides excited seeing ember reach spread think best thing continue post translations sites share links forums twitter get enough translations maybe try make things bit official would help lot someone volunteer handle organizations", "d": "10/2013"}, {"body": "wagenet thank comments translations available let know", "d": "10/2013"}, {"body": "improve situation", "d": "10/2013"}, {"body": "trying take stab testing shows issue observed main route paths nt address example entering gives starting think whether actually belong lib related libs ember delegates instead us taking stab patching portion portion possibly whole one one wagenet thoughts alexspeller think proper fix expectation decode parts app could expect nonurlsafe character likely targeting audiences read characters first place instead wanting pass encoded characters around behindthescenes like search term ember exposes universally encoded term userland code would like decode display current search term decode pass backend api etc short userland code would decoding work everywhere ember could handled centrally one place use case ember app targets audience beyond purelyenglishspeaking fellows", "d": "10/2013"}, {"body": "thinking issue created wondering could something like could done already familiar ember yet sorry implement url generator matcher standard generator creates links percent encoded example create urlgenerator use encoding whitespaces eg matcher corresponding counterpart parses link handling centrally sanely could help issues past params encoded link generated imho otherwise bookmark breaks clicking link works", "d": "10/2013"}, {"body": "heartsentwined agree decoding encoding automatic", "d": "10/2013"}, {"body": "sidenote expected behavior space character could come respectively", "d": "10/2013"}, {"body": "feels default afaik real standard easy change want use", "d": "10/2013"}, {"body": "think use spits anything else would require crazy special casing weird", "d": "10/2013"}, {"body": "alexspeller abstraction talks serialize deserialize function removed exactly would even wrap encodeuricomponent decodeuricomponent leaves anyone exchange implementation", "d": "10/2013"}, {"body": "dschmidt nt deal raw urls deal params hash something overwrite probably location class", "d": "10/2013"}, {"body": "overriding root way emberlevel normalization browser difference first need collect browser behavior data created test page outputs different properties object would anyone applebased products mac iphone ipad please visit post output get hands soon would like post results different platforms welcome chromium linux ubuntu entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf chromium linux ubuntu entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf firefox linux ubuntu entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf firefox linux ubuntu entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf opera linux ubuntu entry windowlocationhref windowlocationpathname \u4fbf windowlocationsearch bf windowlocationhash \u4fbf opera linux ubuntu entry windowlocationhref windowlocationpathname \u4fbf windowlocationsearch bf windowlocationhash bf edited added encodedversion url entry", "d": "10/2013"}, {"body": "issue contrary kselden said even encodeddecoded status consistent look vs two", "d": "10/2013"}, {"body": "oh exact character nt important use unsafe character", "d": "10/2013"}, {"body": "native browser android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf native browser android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf chrome android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf chrome android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf firefox android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf firefox android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf opera mini android entry windowlocationhref windowlocationpathname \u4fbf windowlocationsearch bf windowlocationhash \u4fbf opera mini android entry windowlocationhref windowlocationpathname \u4fbf windowlocationsearch bf windowlocationhash bf maxthon android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf maxthon android entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf edited added encodedversion url entry", "d": "10/2013"}, {"body": "encode way consistent", "d": "10/2013"}, {"body": "kselden mean test code coffeescript windowlocationhref windowlocationhref windowlocationpathname windowlocationpathname windowlocationsearch windowlocationsearch windowlocationhash windowlocationhash", "d": "10/2013"}, {"body": "trying inspect properties object would give us first", "d": "10/2013"}, {"body": "oh wait get entry url first place order consistent unfortunately decoded form totally possible user could type decoded form address bar enter ember app imagine emberapp targeting nonenglish speakers trying localize urls route paths", "d": "10/2013"}, {"body": "chrome windows entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf chrome windows entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf firefox windows entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf firefox windows entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf opera windows entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash \u4fbf opera windows entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf maxthon windows entry failure url got interpreted problem maxthon windows entry failure url got interpreted problem ie windows entry failure reason given problem ie windows entry windowlocationhref windowlocationpathname bf windowlocationsearch bf windowlocationhash bf", "d": "10/2013"}, {"body": "heartsentwined looks like complicated hoped nt really want ton ember code manage browser inconsistencies definitely nt want browser sniffing though behavior sniffing ok ideas", "d": "10/2013"}, {"body": "heartsentwined user typing query params seems dubious concern even decoding issue regardless still consistent encoding serialization decoding deserialization", "d": "10/2013"}, {"body": "clarify kselden says work always extract setting event browser nt encode unicode default calling pass unaltered anyway", "d": "10/2013"}, {"body": "kselden agree nobody would type query strings imagining use case user types url paths internationalized target audience example englishbased app might make route reasonably expectallow user enter typing said spanishbased app making route let users typing note hope spanish example would familiar saw seattle instead chinese nonsense another example someone ambitious enough build facebook clone ember allow user called view profile wagenet make microlib particular issue exposing object something like actually surprised first one run issue googling nt give preexisting solution mean going need microlib either way extract need parse parts like lib purl url want rely individual properties object need lib unify none know yet", "d": "10/2013"}, {"body": "please reread peters comment nt double decode nt matter browser nt percent encode unicode chars", "d": "10/2013"}, {"body": "kselden yes nt doubledecode pointing allow reasonably imaginable use cases entry internationalized characters", "d": "10/2013"}, {"body": "decode thing locationhref browsers encode optionally encoded characters encode meaningful url characters still need encoded double decode issue issue passing encoded url", "d": "10/2013"}, {"body": "thing pointing locationhref issue locationhash difference", "d": "10/2013"}, {"body": "wait minute nt slap whatever property using edge case fails literal wo nt know means originally encoded originally decoded edge case present even use anyway due unreliably encoded decoded depending browser doubledecoding issue apologies unfamiliarity urlencoding issue slaps face", "d": "10/2013"}, {"body": "wagenet think nt setting state though two reasons browser might display encoded form address bar venture say devs would likely want pretty decoded url eg tested gives expected url gives hybrid facilitates internal state comparison since store entry url decoded also store subsequent state pushes decoded used example submit pr agree one", "d": "10/2013"}, {"body": "encode params may url meaningful characters", "d": "10/2013"}, {"body": "definitely think encoding default opposed method override want come rules app", "d": "10/2013"}, {"body": "still skeptical need urlsafe level far understand source stored url used pseudoidentifier storing state display address bar deserializing state browser reload page browser level presumably standard encodingdecoding states know pushing state url pushing one eg mdn article history api ember level simply need consistent order allow comparisons states whether consistently encoded decoded nt matter terms comparison still browser inconsistencies regarding whether would automatically encodedecode url url parts ca nt anything shown snippet encourage browser display decoded form passing decoded form first decoded form like said earlier venture say devs would prefer pretty decoded url instead encoded one long get away occurs likely user presses something like restore previous session also part things start break actually easy test try visit page known unsafe characters different browsers see interpret shown different encodeddecoded entry points two browsers ran problems always maxthon windows entry failure url got interpreted maxthon windows entry failure url got interpreted ie windows entry failure reason given ie windows entry success maxthon failed either way nt matter whether encode decode unsafe characters ie however succeeded loading deserializing url given encoded form failed encoded believe use case kselden mind nt applebased products test results platforms also conclude standard browser behavior allowing urls decodedunsafe characters decode onthefly needed displaying either encoded decoded form address bar although find spec relating issue ideally would like hear devs get consensus trade essentially humanfriendlydisplay vs ie support obviously lean former look ie implementing nonstandard behaviors respect community consensus ps also use case passing urls ajax requests case responsibility ensuring url encoded rest ajax call instead relying input url encoded first place reason think scope discussion", "d": "10/2013"}, {"body": "faced old ie vs browsers always supported ie default ability change default", "d": "10/2013"}, {"body": "also urls external chrome user pastes link email work sent ie user case able friendly urls chrome users different behaviour ie breaks shareability fundamentally important imho", "d": "10/2013"}, {"body": "wagenet alexspeller agreed compatibility shareability arguments pr", "d": "10/2013"}, {"body": "closing favor discussion pr", "d": "10/2013"}, {"body": "sounds like wo nt fix would love someone improve docs around prs accepted", "d": "10/2013"}, {"body": "hjdivad thoughts", "d": "10/2013"}, {"body": "wagenet probably support though encourage works regular computed properties nt really good reason fail array computeds workaround create local cp binding returns global obviously ugly", "d": "10/2013"}, {"body": "cc machty", "d": "10/2013"}, {"body": "possible component nt template think supported raised discussion component templates discussemberjscom anyone interested", "d": "10/2013"}, {"body": "aexmachina definitely possible need register handlebars helper manually example", "d": "10/2013"}, {"body": "eccegordo something still interested start discussion forums like api behavior get bit discussion", "d": "10/2013"}, {"body": "think probably feature seems like lot things touched implement correctly post forum see feedback looks like", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "reason would need requires breaking changes anyway glad see discussion started", "d": "10/2013"}, {"body": "rlivsey ever able investigate", "d": "10/2013"}, {"body": "someone send pr proposed fix", "d": "10/2013"}, {"body": "sent", "d": "10/2013"}, {"body": "could issue bug also caught", "d": "10/2013"}, {"body": "know merged stuff addresses similar issues though nt think addresses specific one nt work master nt expect ever work feel free convince us wrong send pr fix though", "d": "10/2013"}, {"body": "machty things changed area affect", "d": "10/2013"}, {"body": "hjdivad anything relevant new array cps", "d": "10/2013"}, {"body": "updates docs convey correct idea", "d": "10/2013"}, {"body": "wagenet really nt problem array computed bc assume dependent keys arrays add array observers stefanpenner depending nonarrays extra dependency wo nt anything arrays seems get right results thoughts", "d": "10/2013"}, {"body": "hjdivad interesting", "d": "10/2013"}, {"body": "charliecochran verify still issue master", "d": "10/2013"}, {"body": "checked still seems issue using latest canary build ember", "d": "10/2013"}, {"body": "charliecochran thanks checking", "d": "10/2013"}, {"body": "feel like merged something may resolved someone test master", "d": "10/2013"}, {"body": "jsbin emberlatest still shows incorrect behavior", "d": "10/2013"}, {"body": "machty status", "d": "10/2013"}, {"body": "stefanpenner updates", "d": "10/2013"}, {"body": "wagenet nope johnkpaul wan na pair upcoming weekend next week time", "d": "10/2013"}, {"body": "stefanpenner sure think free sunday afternoon works follow mediums", "d": "10/2013"}, {"body": "someone grab nt hard fix", "d": "10/2013"}, {"body": "closing due inactivity", "d": "10/2013"}, {"body": "fixed rjackson", "d": "10/2013"}, {"body": "machty recent thoughts", "d": "10/2013"}, {"body": "think addressed", "d": "10/2013"}, {"body": "cool thanks", "d": "10/2013"}, {"body": "cc wycats", "d": "10/2013"}, {"body": "hooray fixed canary", "d": "10/2013"}, {"body": "help", "d": "10/2013"}, {"body": "simply looking tests clear use defining components outside app used many apps container register get container", "d": "10/2013"}, {"body": "progress one problem testing function calls ember data nt looked yet creates scheduled timers test fails wait indefinitely ember data code use work around", "d": "10/2013"}, {"body": "hajee open ed specific issue example replicate link back one", "d": "10/2013"}, {"body": "kselden ping", "d": "10/2013"}, {"body": "rx reactivecocoa would calling signal", "d": "10/2013"}, {"body": "wycats ping", "d": "10/2013"}, {"body": "fivetanley updates", "d": "10/2013"}, {"body": "got progress sorry wagenet", "d": "10/2013"}, {"body": "fixed beta use fire events route hierarchy transition", "d": "10/2013"}, {"body": "thanks", "d": "10/2013"}, {"body": "still seeing error message like object method addarrayobserver assuming wycats talking helps nonarray passed super simple example", "d": "10/2013"}, {"body": "stefanpenner one ca nt access component block agree accessible component template block content", "d": "10/2013"}, {"body": "stefanpenner kselden thoughts", "d": "10/2013"}, {"body": "wagenet nope think rewriting stackless still really good option got ta find time doit", "d": "10/2013"}, {"body": "machty updates", "d": "10/2013"}, {"body": "think know needs done though missed particular issue last pass made helper stuff", "d": "10/2013"}, {"body": "sigh needs lot love ideally could get someone spearhead complete rewrite", "d": "10/2013"}, {"body": "sure status either kselden bug", "d": "10/2013"}, {"body": "checked issue initial simple jsbin updated use ember seems still nt work nt throw js error anymore little sad issue milestone anymore think months ago would really glad see fixed since project would make great use", "d": "10/2013"}, {"body": "trek got plans", "d": "10/2013"}, {"body": "machty add default error handler", "d": "10/2013"}, {"body": "still radar", "d": "10/2013"}, {"body": "ebryn ping", "d": "10/2013"}, {"body": "think stefanpenner opened pr addresses stefanpenner close", "d": "10/2013"}, {"body": "machty status unchanged", "d": "10/2013"}, {"body": "stefanpenner know lot work resolver good enough handle issues close ticket", "d": "10/2013"}, {"body": "wycats ping", "d": "10/2013"}, {"body": "joefiorini able testing also new array cps work well", "d": "10/2013"}, {"body": "joefiorini nothing instances sharing", "d": "10/2013"}, {"body": "hjdivad wow great catch thanks pointing", "d": "10/2013"}, {"body": "joefiorini super easy mistake least hope done many times", "d": "10/2013"}, {"body": "mbixby like see good use case one make fiddle", "d": "10/2013"}, {"body": "ability inside property important wo nt supported across framework second case made need keep track file order becomes irrelevant modules", "d": "10/2013"}, {"body": "status updated fiddle master still exists", "d": "10/2013"}, {"body": "inclination pretty unusual architecture sure hard want work support circular case certain design correct may make sense done workaround", "d": "10/2013"}, {"body": "personally think makes much sense set like also marking unverified sure actually bug", "d": "10/2013"}, {"body": "style ui implementing allows user create new item default creates blank one circular nature automating click add phone number action nt phone numbers", "d": "10/2013"}, {"body": "timevans nt set default data instead attempting automate ui actions", "d": "10/2013"}, {"body": "ticket inactive closing someone still wants pursue pr would welcome", "d": "10/2013"}, {"body": "wagenet believe hjdivad work willdoes fix well move sortable stuff use array computed", "d": "10/2013"}, {"body": "stefanpenner confirm explicit test however fixed use yet", "d": "10/2013"}, {"body": "bcardarella believe may help although subcontainer stuff nt officially supported yet one could play hope supported solution soon", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "bindings ember secret sauce little disconcerting end read oh ca nt use go back levels app refactor give use boundary transgressing ugliness", "d": "10/2013"}, {"body": "stefanpenner kselden need someone", "d": "10/2013"}, {"body": "document emberarraypolyfills breaking change", "d": "10/2013"}, {"body": "wycats really housecleaning perf testing array stuff would awesome coupled lodash faster well tested implementations would win", "d": "10/2013"}, {"body": "try get idea exactly would change determine acceptable", "d": "10/2013"}, {"body": "clarify nt want break something widely used even clearly documented", "d": "10/2013"}, {"body": "closing due inactivity", "d": "10/2013"}, {"body": "sorry resurect old issue stumble looking possible answer post recommends using historyjs polyfil", "d": "10/2013"}, {"body": "looks like inactive someone wants tackle would still appreciated awt partially done code submit wip", "d": "10/2013"}, {"body": "emberselect could use complete rewrite would love see someone tackle", "d": "10/2013"}, {"body": "order happen need sort direction core goals rewrite suggestions things concept rewrite general anyone invest time imo", "d": "10/2013"}, {"body": "agree direction would good try get direction", "d": "10/2013"}, {"body": "others running problems case render called event triggered entering different route one renders template containing outlet caused error try using emberrunnext worked pure cargocult nt know whyhow traced line returns null without adding asynchronicity nt dig deeper", "d": "10/2013"}, {"body": "lastobelus thank remark wanted render different outlets based page dashboard page main page looks like outlets inside application template based blocks messes things correct put outlets inside separate rendered views saved day gracias", "d": "10/2013"}, {"body": "closing due inactivity", "d": "10/2013"}, {"body": "wagenet mean never implemented needs non singleton controllers personnally nt encounter use case app bu see interest though", "d": "10/2013"}, {"body": "access immediate parent via docs seems sufficient immediate realworld cases imo bunch container work lately wonder could help later revive issue despite initial reaction think ok closed", "d": "10/2013"}, {"body": "mixonic thanks never took time make refactoring using itemcontroller thinking absolutely right resolve potential use cases", "d": "10/2013"}, {"body": "cc wycats", "d": "10/2013"}, {"body": "may hard since believe internals rely upon method", "d": "10/2013"}, {"body": "believe still want need someone legwork", "d": "10/2013"}, {"body": "teddyzeenny stefanpenner updates", "d": "10/2013"}, {"body": "closing due inactivity machty want pursue let move forums", "d": "10/2013"}, {"body": "ticket essentially dead still need docs would love get pr", "d": "10/2013"}, {"body": "closing due inactivity since clear wrong", "d": "10/2013"}, {"body": "ideally would new array cps", "d": "10/2013"}, {"body": "seem recall us supporting without parameter someone verify", "d": "10/2013"}, {"body": "machty thoughts", "d": "10/2013"}, {"body": "", "d": "10/2013"}, {"body": "anyone confirm still issue master wycats thoughts", "d": "10/2013"}, {"body": "machty status", "d": "10/2013"}, {"body": "think use case covered query params", "d": "10/2013"}, {"body": "closing reopen nt actually addressed query params", "d": "10/2013"}, {"body": "need review see still issue", "d": "10/2013"}, {"body": "still think would useful issue effectively dead someone still wants tackle please", "d": "10/2013"}, {"body": "ritchiea apologies never responding issue could definitely use reevaluated", "d": "10/2013"}, {"body": "wycats kselden seem like ever fix", "d": "10/2013"}, {"body": "kselden stefanpenner ping", "d": "10/2013"}, {"body": "wagenet kselden likely perf cost better book keeping higher want kselden idea throwing error likely good option would consider breaking change", "d": "10/2013"}, {"body": "nt think error message would breaking change sounds like already broken would making clear", "d": "10/2013"}, {"body": "someone confirm still present master", "d": "10/2013"}, {"body": "ebryn kselden ping", "d": "10/2013"}, {"body": "update", "d": "10/2013"}, {"body": "closing since nt really getting attention would still love trek anyone else wanted given shot", "d": "10/2013"}, {"body": "kselden something likely work time soon", "d": "10/2013"}, {"body": "way unboundif ember metamorph tags messing markup", "d": "10/2013"}]