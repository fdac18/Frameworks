[{"title": "bump bower minor version", "body": "backbone bower version nt bumped months missing rather important code contributions like one wasted two hours working creating work arounds realize old backbone code", "num": "3322", "d": "9/2014"}, {"title": "project still alive", "body": "many issues getting ignored nothing new seems getting done recently project still alive invested lot time learning framework seems receiving much attention developers lately maybe considering prs little less cynicism could bring life cheers", "num": "3321", "d": "9/2014"}, {"title": "collection sync", "body": "trouble understanding utility collection sync firstly give params else throws redherring errors like need specify url give params first method nt make sense want save collection method needs create update depending model new yet documentation states uses backbonesync persist state collection server also would nice model save documentation stated work unless server responds updated record response appear enough wo nt", "num": "3320", "d": "9/2014"}, {"title": "incorrect documentation collectionremove", "body": "documentation collection remove method says remove model array models collection returns implying removed models returned actual code returns reference collection removed models", "num": "3317", "d": "9/2014"}, {"title": "backbone prototype inheritance", "body": "correct way inheritance want single template method views nt defined way know default extend makes copy object would ancestor method even would add new method ancestor extend would method child right rewritting backboneview method extended yeah knew write lib inherit custom view method backbone doese nt suport prototype inheritance nt wastage memory every single copy actually nt got yet code example", "num": "3315", "d": "9/2014"}, {"title": "enable sourcegraph", "body": "want use sourcegraph code search code review backbone project maintainer needs enable set webhook code uptodate could please enable backbone sourcegraph going clicking settings take seconds thank", "num": "3314", "d": "9/2014"}, {"title": "parse collection reset", "body": "hello parse method model create collection model fetch server collection internaly invokes method works fine use reset pass bootstrapped collection models collection create parse called bug missed something", "num": "3313", "d": "9/2014"}, {"title": "suggestion collection adds event", "body": "near end sending events sending event allows listener receive single bulk event full array models added collection", "num": "3312", "d": "9/2014"}, {"title": "selendroid unable proceed login application", "body": "using selendroid mobile android automationi able login appafter click sign going application server status status value supportedapps appid mainactivity ioselendroidandroiddriverwebviewactivity basepackage ioselendroidandroiddriver appid mainactivity comcropexappslivealertsactivitiessigninactivity basepackage comcropexappslivealerts os arch name windows version build browsername selendroid version supporteddevices screensize platformversion model emulator false code test public void selendroidtest throws exception selendroidcapabilities capa new selendroidcapabilities capasetplatformversion capasetemulator false driver new selendroiddriver capa threadsleep wait new webdriverwait driver driverfindelement byid username sendkeys shivaram threadsleep new actions driver sendkeys selendroidkeysback perform driverfindelement byid password sendkeys threadsleep new actions driver sendkeys selendroidkeysback perform driverfindelement byid signin click threadsleep driverfindelement byid logout click driverquit", "num": "3311", "d": "9/2014"}, {"title": "pushstate working parameters", "body": "problem pushstate enabled go nothing works get load errors console use url hashtag ie url fine forgetting something console get errors saying uncaught syntaxerror unexpected token lt line one", "num": "3310", "d": "9/2014"}, {"title": "add version minified script", "body": "makes easier take inventory minified local scripts", "num": "3309", "d": "9/2014"}, {"title": "arguments view events", "body": "reason view events hash nt allow passing arguments recently working code found creating several callbacks events similar googling dry found others problem common response make one event callback large switch statement checking etarget handling response appropriately seems clumsy solution would much easier way pass arguments callbacks defining events hash would possible define one function different events call different arguments", "num": "3308", "d": "9/2014"}, {"title": "collectionreset modifiescorrupts input options", "body": "collection reset options options since going modify options object inspect options options clone options currently options object become corrupted handlers also responding reset event handlers also passing options another collectionreset call", "num": "3306", "d": "9/2014"}, {"title": "event parameters", "body": "hello trying write backbone react mixin bit eccentric want full control whole lifecycle order able implement shouldcomponentupdate proper way problem backbone sends reference collection add event triggered one example might events similar problems since references byref event synchronous get valid representation collection instead get collection items added given time add goes faster triggering events ie fetch list items get following back listener would breaking principles asking copy collection instead reference kind regards martin", "num": "3305", "d": "9/2014"}, {"title": "swift interface", "body": "hi everybody new meaning idea belongs please tell something wrong ok question program interface swift mean know drag buttons stuff interface connect button code wrote mean let say put one slidebuttons interface connect button boolean variable hope someone answer way way complicated post could post email chat explain least something like", "num": "3304", "d": "9/2014"}, {"title": "listento nt work includes fix", "body": "listento get undefined error jquery looking listento line line objimplementation however according jquery documentation overriden methods none matching call reference events selector data handler events selector data believe correct way calling method follows objimplementation listento began working", "num": "3303", "d": "9/2014"}, {"title": "backbone maintained", "body": "backbone really maintained core developers worked future backbone", "num": "3302", "d": "9/2014"}, {"title": "jquery deps", "body": "hey jquery hard deps bb", "num": "3300", "d": "9/2014"}, {"title": "uncaught typeerror read property match undefined", "body": "hey guys getting lot errors soon page loads uncaught typeerror read property match undefined line inside method backbone underscore marionette jquery google chrome mac also using browserify help ideas incompatible versions let know information provide thanks", "num": "3299", "d": "9/2014"}, {"title": "new help ask repository downloaded", "body": "hi please give bad english question bad shape new downloaded repository link question ask question repo fork nt form ask question leave comment help please great thanks best regards raha", "num": "3298", "d": "9/2014"}, {"title": "nested set change event triggers last event incorrect value listener", "body": "situation two listeners backbone model property first listener changes listened property triggered would expect final event triggered callbacks latest value model argument second listener final callback triggered original value though example fiddle look logs final callback second listener triggers value callback argument actual final value problem seems like may related issue options passed correctly nested change events", "num": "3296", "d": "9/2014"}, {"title": "collection fetch data query option passing actual request call", "body": "code pretty simple collection fetching collection date argument code works run backbonejs console result app wo nt allow pass date argument give warning error result query attached upgraded underscore backbone local environment result blocking fetch method collection pass query parameters tried ajax method working data options url different using couchdbbackbone connector", "num": "3295", "d": "9/2014"}, {"title": "adding option removing model collection", "body": "feature request add option possible remove model specified index think could looks like following basically first argument null options want remove model specified index thoughts", "num": "3294", "d": "9/2014"}, {"title": "backbone events synchronous asynchronous", "body": "realize browser javascript runs single thread nevertheless ask var new backbonemodel mon change function consolelog callback mon change function consolelog callback mon change function consolelog callback mset foo bar order callbacks garaunteed something rely looking triggerevents believe case like confirmation thank", "num": "3293", "d": "9/2014"}, {"title": "model parse needs know called collection", "body": "hi tried time find related issue without much luck relates bit specially said another good option passing flag testing existence property determine context collection model model parse method agree problem unless mistaken default reason documentation model parse says parse called whenever model data returned server fetch save function passed raw response object well correct server real content inside data key response body need override parse model set parse works model getting data server collection hands parsed data model need check something know whether reading data handed server model fetch handed collection collection fetch parsing different first glance thought got covered saw options reference collection problem second call fetch without reset reference fixed adding flag sync reimplementation peeking url tell apart think least documentation adjusted explain one expect options ideally flag would better avoid override yet another function thank", "num": "3292", "d": "9/2014"}, {"title": "tying backbone marionette jquery browserify", "body": "trying get backbone marionette jquery working browserify know really hot topic jquery dependency saw samccone shim example keep hitting code marionette even define tell go marionnette repo like issue however think issue backbone since undefined went back see backbone coming marionette side looks like grabing new instance backbone one added earlier defined knowing dive backbonejs find js function root backbone initial setup backbone purposes jquery zepto ender library kidding owns variable backbone defined undefined add like jquery prerequired backbone global scope work since defined second init backbone jquery defined projects stay similar getting something wrong sorry bring subject sure handle properly thanks bowtie", "num": "3291", "d": "9/2014"}, {"title": "feature request mergeoptions", "body": "removing move better think removing made evident really concise way specify additional properties merge directly class find pretty basic feature extending class almost certainly action whenever make new class let consider case make new view say accepts number additional options top backboneview accepts let look options getting additional options onto prototype verbose form manually attach additional option view js var editorview backboneviewextend constructor function options thisstyle optionsstyle thisstyle thiscolor optionscolor thiscolor thisreadonly optionsreadonly thisreadonly thismenu optionsmenu thismenu thispreview optionspreview thispreview backboneviewconstructorapply arguments set defaults thisstyle tall primary problem approach verbose nobody would ever want write new line code additional option pass let take look improve drawing inspiration backbone source js var editoroptions style color readonly menu preview var editorview backboneviewextend constructor function options extend pick options editoroptions backboneviewconstructorapply arguments big improvement think need add new values array merged things substantially dry still like something even dry app grows number classes extend grows eventually might find tens hundreds classes one must write within constructor far worst line code ever seems bit much need include every class consider additional properties fundamental part extending object common enough warrant additional convenience array prototype chain would automatically concatenated parent array within extend method would provide us following api js var editorview backboneviewextend mergeoptions style color readonly menu preview var supereditorview editorviewextend mergeoptions superproperty allows one declaratively specify additional properties merged directly instance would really clean code supporting would involve adding something effect extend method see pretty controversial change figured propose go overwrite extend projects ps yes understand nt actually classes javascript tough argue utility describing backbone objects word", "num": "3290", "d": "9/2014"}, {"title": "feature request return options passed back router", "body": "right calling nt allow one access later within router sent away backbonehistory never seen consequently like add options must modify router also backbonehistory seems like lot small backwardscompatible change users easily expand navigation options without touching backbonehistory object trying make powerful router one features ability developer declaratively specify data objects specific route basically matched url data fetched first time navigate route gets cached subsequent visits reset cache like support new option maybe something like might options add later modify behavior happens route matched like copy paste two methods backbonehistory addition internal regular expressions used one methods first modify pass options loadurl method need override loadurl roughly lines code total add two additional arguments callbacks addition changes backbonehistory need override router route method really want something options get back change look like passing second parameter aforementioned methods backbonehistory line line need modify process additional option makes things less fragile possible counterargument nt using options expand functionality routing callbacks case might go instead without getting history object", "num": "3288", "d": "9/2014"}, {"body": "already passing option model save model destroy collection create", "d": "9/2014"}, {"body": "backbonejs use validate method model validation think simple use plugin like backbnevalidation customize validation method even call server see example", "d": "9/2014"}, {"body": "indeed correct answer", "d": "9/2014"}, {"body": "unless mistaken version bower latest release comes bower get anywhere else", "d": "9/2014"}, {"body": "", "d": "9/2014"}, {"body": "project obviously alive follow give even life", "d": "9/2014"}, {"body": "alive also fairly stable specific example something new think needs get done propose open source right", "d": "9/2014"}, {"body": "really question stackoverflow irc channel mailing list try reading source though think little clearer purpose collection sync model save key line server response empty object still work makes sense pass back full representation want sync", "d": "9/2014"}, {"body": "nope since version commit collections return models passed see changelog", "d": "9/2014"}, {"body": "sure enough sorry false alarm", "d": "9/2014"}, {"body": "wery obvious broke prototype chain rewritten backboneview extend method correct way seems seen old wrong documentation saying extend actually supporting prototype ps add example prototype reference list access prototype edit methods object", "d": "9/2014"}, {"body": "done", "d": "9/2014"}, {"body": "pass creating collection", "d": "9/2014"}, {"body": "great works unfortunately documented", "d": "9/2014"}, {"body": "duplicate others", "d": "9/2014"}, {"body": "please try stackoverflow mailing list questions github issues maintaing framework", "d": "9/2014"}, {"body": "read documentation enable pushstate backbonejs router add backbonehistorystart pushstate true handle routes server find article web explain", "d": "9/2014"}, {"body": "available backboneversion kind thing using file names even better package manager anyway", "d": "9/2014"}, {"body": "let tag em close em", "d": "9/2014"}, {"body": "check underscore partial method might help sometimes simplify kind code", "d": "9/2014"}, {"body": "yes good suggestion aka currying", "d": "9/2014"}, {"body": "place event handlers could modify options object removereference call creates new object extending concerned addition optionspreviousmodels write pull request failing test case good see behavior breaks", "d": "9/2014"}, {"body": "sorry quite adept writing pull request use case breaks listening reset event collection reset hdlr handler receives event event including options object pass options object call another collection options reset function overwrite previousmodels property options object call options object corrupted corrupted listeners responding original event", "d": "9/2014"}, {"body": "aside throughout backbone code anytime incoming options object modified options object always cloned collectionreset inconsistent practice", "d": "9/2014"}, {"body": "nt follow removereference neither removereference addreference use input options argument answer question sorry ignored yes adding optionspreviousmodels corrupts incoming options object", "d": "9/2014"}, {"body": "pass options object call another collection options ca nt clone object passing reset seems like odd edge case", "d": "9/2014"}, {"body": "kidplug right consistent modifying object nt create", "d": "9/2014"}, {"body": "sure categorically agree find often useful take advantage objects passed reference needed later", "d": "9/2014"}, {"body": "cloning options event handler passing handler going pass options argument another function unmodified think presume next function might corrupt therefore function clone could make argument event handler reset event handler think always cloning options would lead way much unnecessary cloning object creation clone already consistently top profiler time spent", "d": "9/2014"}, {"body": "since references byref event synchronous event absolutely synchronous triggered model added collection try stackoverflow mailing list questions github issues maintaing framework", "d": "9/2014"}, {"body": "badly described issue syncasync issue actually experiencing collection already pushed models fires events added models wants event happen model added collection nt seem wrong instead models added", "d": "9/2014"}, {"body": "ah react code debounce event listener call component one nice things virtual dom performance still good matter often call update", "d": "9/2014"}, {"body": "also pretty sure requests past issuesearch foo failing moment however", "d": "9/2014"}, {"body": "thank jridgewell deciphering issue reason chose point synchronous issue believe best explains going items adding collection already added listeners actually callbacks executed getting copy exact representation list events would feel correct actually less confusing using foreceupdate debouncing mixins today although react really fast handle overhead cases need know exact state object time rendering also issues android javascript execution could benefit us able render absolutely needed reference collection fine likely needed least index item added could slice array using index order get state collection point triggering event would great alternatively second collection deep copy collection actual event triggered", "d": "9/2014"}, {"body": "could perhaps override add behavior need still clear need deep copy collection could try", "d": "9/2014"}, {"body": "reason want correct representation collection need inform react via different methods react usually needs either currentsought next state order figure force render also render also would nt mind knowing general make system lot predictable assume event receiving sync collection added validation debugging possibly things look see could help use case thank keeping dialog alive", "d": "9/2014"}, {"body": "wrong repo bub", "d": "9/2014"}, {"body": "backbone events nt use jquery error code", "d": "9/2014"}, {"body": "backbone absolutely actively maintained also quite stable good thing", "d": "9/2014"}, {"body": "backbone hard dependency underscorejs gt restful persistence history support via backbonerouter dom manipulation backboneview include jquery older internet explorer support mimics underscore jquery apis lodash zepto also tend work varying degrees compatibility", "d": "9/2014"}, {"body": "looks like device emulation settings forgotten chrome", "d": "9/2014"}, {"body": "try asking question stack overflow appropriate place", "d": "9/2014"}, {"body": "seen many day ago many people ask answer topic ca nt find ask question asked lot question stack overflow forum none answered found answer nt forum answer question sooner stack", "d": "9/2014"}, {"body": "congratulation design really nice beauty design", "d": "9/2014"}, {"body": "problem backbone backbonecouchdb connector overwrites request get query parameters added db object", "d": "9/2014"}, {"body": "wrong using", "d": "9/2014"}, {"body": "using twice looks ugly", "d": "9/2014"}, {"body": "\u53d1\u81ea\u6211\u7684 iphone \u5728 notifications githubcom using col twice looks ugly reply email directly view github", "d": "9/2014"}, {"body": "using col twice looks ugly argue uglier passing option much flexible useful app feel free mix base collection", "d": "9/2014"}, {"body": "synchronous result always assuming exists environment", "d": "9/2014"}, {"body": "could also duck type response", "d": "9/2014"}, {"body": "yes thought probably work reasonably well many applications general enough nt model supposed data attribute could improve happens object see pattern provide heuristics given already options parameter happens collection cases ensure happens first fetch next ones unless resetted first collection option set preparemodel called existing branch collection set would possible set earlier", "d": "9/2014"}, {"body": "one reasons good nt need generallyapplicable work specific context app course designed want go flaginoptions route keep mind passed cloned passed individual models could modify options argument reference like js collection backbonecollectionextend parse function resp options optionsparsecalled true return respdata model backbonemodelextend parse function resp options return optionsparsecalled respdata resp", "d": "9/2014"}, {"body": "ok flagging sync function simpler try submit patch docs think docs least incompletemisleading regard model parse called data response server", "d": "9/2014"}, {"body": "needed versions build js gulptask browserify function return browserify appscriptsapplicationjs external jquery external lodash external backbone external backbonemarionette bundle error function error consolelog error add pipe end pipe source applicationminjs pipe gulpdest tmpscripts pipe livereload lr pipe notify message browserify task complete gulptask vendor function return browserify require backbonemarionette require backbone require lodash require jquery bundle pipe source vendorjs pipe gulpdest tmpscripts", "d": "9/2014"}, {"body": "try something like", "d": "9/2014"}, {"body": "dannytranlx working example also come join us need help close", "d": "9/2014"}, {"body": "yup suy solution best one need externalize dependencies manually require build step include line marionette loaded fine", "d": "9/2014"}, {"body": "nt work somehow samccone check example thanks", "d": "9/2014"}, {"body": "update follow samccone example hit error however downgraded browserify version working line something going newer versions browserify issue marionnette thanks time guys smile", "d": "9/2014"}, {"body": "ah strange indeed perhaps open issue browserify see resolution please share find", "d": "9/2014"}, {"body": "comes time example think party line kind utility functionality responsibility backbone surprised attempt got others fwiw tried well tried different reasoning outcome", "d": "9/2014"}, {"body": "mmk makes sense tomhicks done research posting given outcome previous attempts going go ahead close issue anyone backbone team wants comment anything feel free future visitors might want check marionette likely create support feature cause seems pretty basic", "d": "9/2014"}, {"body": "check backboneviewoptions pretty much exact syntax described little sugar coat", "d": "9/2014"}, {"body": "try stackoverflow mailing list types questions github issues maintaining framework", "d": "9/2014"}, {"body": "though nt right place question safely use models collections without jquery javascript environment", "d": "9/2014"}, {"body": "nt think workaround general solution specific problem nt want tie closely jquery api folks using different ajax library plug bit easier", "d": "9/2014"}, {"body": "fortify detecting issue following hp thanks", "d": "9/2014"}, {"body": "calling work case way wo nt extend current attributes instead replaced also supports silent option nt want trigger two change events model", "d": "9/2014"}, {"body": "dts issue maintaining filtered subcollection based first collection adding models one time subcollection crushing performance subcollection sorted collection modified backbone collection send adds event add events pass array models added way subcollection receive new models one event bulk add one sort thing removes mostly consistency", "d": "9/2014"}, {"body": "way started tonight hopefully continuing throughout week minimal changes far proofofconcepts nothing working yet either still passes tests unfortunately tests starting show reliance things similar variablesmethods necessary make long process force conditionalities would like alias everything kind thing lol backwards compatible say already standard feel free critic see fit update fork something substantial enough pull keep mind still learning full codebase lowlevel job falling asleep probably deleted useful code accident always open input thanks", "d": "9/2014"}, {"body": "wondering behavior browser implementation dependent yep keys object hash implementationdependent practice typically stored order added hash safety treat objects unordered collection properties would making routes array safer potentially given reliance current system complaints received would great change make stage used catchall route last key routes hash without problems past", "d": "9/2014"}, {"body": "thanks response", "d": "9/2014"}, {"body": "think problem using mix cid id line cid added line id used instead use id", "d": "9/2014"}, {"body": "might cleanup bit otherwise ca nt really see realworld use would use practice", "d": "9/2014"}, {"body": "like match single model set conditions", "d": "9/2014"}, {"body": "give example", "d": "9/2014"}, {"body": "used past implement dynamic collection filters via similar example could used irl code coffee dynamically set collection view based object conditions la trigger sort param object conditions object properties match eg return void setfilter conditions collectionview getcollectionviews conditions collectionviewitemfilter model index every conditions value key val modelget key isarray val amp amp vallength value isarray value value else value isequal value intersection val value else val value else false else delete collectionviewitemfilter collectiontrigger sort", "d": "9/2014"}, {"body": "dig wan na open pull", "d": "9/2014"}, {"body": "thing", "d": "9/2014"}, {"body": "smileycat", "d": "9/2014"}, {"body": "one year reexamine position please", "d": "9/2014"}, {"body": "hello team sure loadurl works expected url like wwwexamplecom using backboneroutenotfound internally calls loadurl found glitch hit url like wwwexamplecom page page instead fragment loadurl surprisingly returns true hit returns false probably issue code line handlerroutetest fragment please let know something wrong thanks", "d": "9/2014"}, {"body": "logic router determines whether logged user allowed view requested route user logs like able reload current route runs router logic checks logged user still allowed view page", "d": "9/2014"}, {"body": "user logs like able reload current route runs router logic checks logged user still allowed view page user logs call function checks user still allowed view page really opinions end day backbone opinions one nt stuff useful reusable logic onlyactivatedbyaurl callback ca nt easily call places use function", "d": "9/2014"}, {"body": "jashkenas agree ideally able call isolated function checks user still allowed view page instead recalling entire route logic unfortunately method intertwined logic makes suggestion infeasible unfortunately nt time refactor part app work suggested imo allowing backbone rerender current route fairly innocuous change would case reduce need significant refactor backbone opinions one nt stuff useful reusable logic onlyactivatedbyaurl callback ca nt easily call places use function familiar inner workings backbone completely agree methodology unfortunately dont rely routes execute logic opinion nt expressed clearly backbone docs perhaps add best practices section docs outlines ways backbone opinionated help developers avoid learning gotchas hard way", "d": "9/2014"}, {"body": "way documented backbone docs least defining route method router object truly unable refactor allowed view check function something find bit difficult believe ca nt least call method router directly", "d": "9/2014"}, {"body": "jashkenas nt good idea alternative using trigger url change associated route logic still confused antipattern code smell suggested would instead version", "d": "9/2014"}, {"body": "would", "d": "9/2014"}, {"body": "pattern scale would results extremely convoluted router file ton methods like onlogin oncheckout onpaymentreceived onviewsettingspage probably lot people prefer approach", "d": "9/2014"}, {"body": "question one solutions suggested using nt clear also clear making difficult use missing", "d": "9/2014"}, {"body": "using solution two problems attributes may used setup url function like fetch fail keep empty model loosing data implementing option fetch would keep current behavior backwards compatible add ability reset model server state valid use case backbone currently primitives handle", "d": "9/2014"}, {"body": "ericbdr said makes sense", "d": "9/2014"}, {"body": "problem ror app solution worked thanks omenking antonlitvinenko", "d": "9/2014"}, {"body": "even better always explicitly add extension urls let browser cache json page html nt mind ie instead overwriting cache entry url otherwise miss benefits browser caching nice right", "d": "9/2014"}, {"body": "sija right changed explicit json test received problem json overwrite page idea wrong hehe tks", "d": "9/2014"}]