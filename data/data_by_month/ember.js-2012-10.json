[{"title": "inner view class vs instance", "body": "hello trying create component holds parent main child nested views component related specific application seems like plugin ember interface component simple additem removeitem similar existing componentview want implement using original ember views keeping ember way implementation eg without explicit hacks overrides found lot examples ember documentation stackoverflow example based view documentation javascript var mainview emberviewextend template emberhandlebarscompile main view view innerview innerview emberviewextend template emberhandlebarscompile hello world mainviewcreate appendto body see innerview reference emberview class declaration run snippet everything works change line innerview emberviewextend innerview emberviewcreate code fails error error assertion failed must pass view class view helper innerview understand original flow parse handlebars template find references classes instantiate classes make binding contracts render want skip third step supply concrete view instance receive runtime config parameter component ca nt know class name reference component plugin agnostic environment big lack documentation operate objects runtime code samples documentation assumes application fully built handshakes design time thanks", "num": "1500", "d": "10/2012"}, {"title": "unsafe javascript attempt access frame url jsfiddle", "body": "using jsfiddle contributing guide error unsafe javascript attempt access frame url thrown multiple times emberjs irc channel said could safely ignored solution great errors running jsfiddle run chrome", "num": "1498", "d": "10/2012"}, {"title": "multiple emberapplication instances fail", "body": "hi built simple page two emberapplication instances results handlebar templates dom rendered incorrectly", "num": "1496", "d": "10/2012"}, {"title": "bindattr regular class attribute", "body": "mix match regular attribute given get expected", "num": "1495", "d": "10/2012"}, {"title": "exception removeobject clear array", "body": "sure bug something wrong trying remove object array calling removeobject get error line var chains thischains node chains key uncaught typeerror read property undefined also happens calling clear array populate collection like json data object looks like", "num": "1493", "d": "10/2012"}, {"title": "sorting property array objectcontroller update view", "body": "see problem like problem problem diferent check jsfiddle example alert first element array see array sorted view updated", "num": "1492", "d": "10/2012"}, {"title": "ember amp em available templates amd mode", "body": "using config options introduced remove dependency throughout ember amp accessed handlebars template following works property nt fails assertion probably check amp add exports question one takes president lookup amp exports name clash", "num": "1490", "d": "10/2012"}, {"title": "bug emberview context", "body": "lokking solution like solution wan na implement project ember pre dont work even lastest", "num": "1488", "d": "10/2012"}, {"title": "router url parameters", "body": "would helpful emberrouter supported url parameters primary use case make searching sorting filtering routable example wwwmyappcom users searchpointyhairedboss amp filtermanagers amp sortemail happy work like input approach little complex gobbled routes option available routes implicitly", "num": "1487", "d": "10/2012"}, {"title": "embersortablemixin nt remove reinsert items sort order nt change", "body": "", "num": "1486", "d": "10/2012"}, {"title": "childviews containerview connecting controller views", "body": "hey guys sure right place post containerview childviews childviews gets created applicationcontroller gets connected view respective controller fiddle problem design understanding containerview properly tnx", "num": "1485", "d": "10/2012"}, {"title": "handlebarsjs helpers nt work emberjs", "body": "creating handlebarsjs helper directly handlebarsjs helper works emberjs fails test helper simple helper creating links syntax demonstrated jsfiddle thanks time", "num": "1483", "d": "10/2012"}, {"title": "emview emobject hook like aftercreated instance created", "body": "want set created example want set property new instance called like said", "num": "1475", "d": "10/2012"}, {"title": "unable use volatile property property dependency", "body": "controller like two seconds load new element pushed contacts array proxy volatile call value remains one remove value even though volatile properties nt cached feel like still behave like regular properties ie propagate changes thoughts", "num": "1471", "d": "10/2012"}, {"title": "changed", "body": "upgrading app global find replace getpath setpath noticed app broken afterwards bit quick debugging revealed handlebars still getpath function renamed consistency figured would pose question", "num": "1469", "d": "10/2012"}, {"title": "default context action helper undefined", "body": "ca nt access context econtext event handle function default", "num": "1468", "d": "10/2012"}, {"title": "bindattr double colon syntax fails", "body": "syntax allows shorthand adding class property false bindattr class isenabled disabled work correctly", "num": "1461", "d": "10/2012"}, {"title": "event deferring needs capture listeners event names change events", "body": "example property foo changes add change listener changes new listener receive foo nt happen marked sent already based event name listeners notified", "num": "1458", "d": "10/2012"}, {"title": "ember package improvements", "body": "rakepipeline great tool select packages want build depending targetenvironment already commented nt use emberrouting could great emberapplication package would nt dependency emberrouting order package could skipped used also experienced similar situations emberhandlebars controls believe controls could separated different package", "num": "1455", "d": "10/2012"}, {"title": "would nice emberrouter support notfound page", "body": "would nice router supported page nt thought much mechanics implementation feels like common need doubt speak every case mine really need provide default stateroute entered specified route found edit removed term title description avoid confusion", "num": "1454", "d": "10/2012"}, {"title": "allow dynamic segment capture rest url", "body": "would great could capture rest url dynamic segment potentially capturing subsequent characters thinking route pattern like would yield context object like url", "num": "1451", "d": "10/2012"}, {"title": "emberselect ui displaying selected option", "body": "issue exists works expected ie issue select option emselect ui continues show prompt option case single space however bindings etc seem work expected select option ui shows expected looked diff two versions nothing immediately obvious new ember", "num": "1448", "d": "10/2012"}, {"title": "setting initial value emberselect", "body": "using emberselect view would like set initial selected value specific item looks like initial value set taken instead emberselect presents first item content list jsfiddle showing situation hacking found solution desired behaviour creating specific view using didinsertelement hook currently best available solution set initial selected value", "num": "1445", "d": "10/2012"}, {"title": "textsupport required attribute", "body": "would nice could use required attribute textfields fields matter example w embertextsupport", "num": "1444", "d": "10/2012"}, {"title": "collection view seems retain old observer elements even removed dom", "body": "collection view backed array controller initially populated three objects replace array new array containing object original array causes exception try change original object whose attribute observed collection view following jsfiddle demonstrates bug running click change click like get following exception happen emberjs", "num": "1441", "d": "10/2012"}, {"title": "unhelpful error message using array return objects", "body": "example see", "num": "1439", "d": "10/2012"}, {"title": "thissuper mixin willdestroy method calling resulting stack overflow", "body": "issue revealed bug welldemonstrated updated lukemelia original title mixins init destruction logic original issue initialize mixins individual methods corresponding destruction mechanism causes problems code readability maintainability often location mixing class directly deals mixins mixins require specific tear logic similar", "num": "1438", "d": "10/2012"}, {"title": "rename emberarrayproxy", "body": "hi everybody maybe wrong see right emberarrayproxy purpose arrays like emberobject objects totally confusing find emberarrayproxy emberarray embera emberarraycontroller embermutablearray nt would suggest rename emberarrayproxy emberarray emberarray something like emberarraymixin thanks", "num": "1437", "d": "10/2012"}, {"title": "handlebars blocks fail used outlet", "body": "hi guys set simple jsfiddle illustrating issue basically emberview rendered using routers outlet unless etc blocks handlebars template render value boolean provided rather toggling block see example seeing true see showme cheers w", "num": "1436", "d": "10/2012"}, {"title": "arrayproxy arrayproxy content forwards requests", "body": "arrayproxy content also arrayproxy requests forwarded javascript app emberapplicationcreate appparentproxy emberarrayproxyextend appchildproxy emberarrayproxyextend content null var onechildproxy appchildproxycreate var oneparentproxy appparentproxycreate content onechildproxy consolelog oneparentproxyget oneproperty gt undefined consolelog oneparentproxyget contentoneproperty gt oneproperty associated jsfiddle believe bug pretty important possible handle model relations arrayproxy use arraycontroller using emberdata also happens emberlatest also could wrong somewhere ca nt see", "num": "1435", "d": "10/2012"}, {"title": "nodenpm support", "body": "", "num": "1434", "d": "10/2012"}, {"title": "allow ember dev version work without handlebars compiler", "body": "requires us change works since currently requires present runtimeonly version handlebars emberprod embermin precompile template concern", "num": "1433", "d": "10/2012"}, {"title": "emberselect work complex types", "body": "according documentation value selected item set red property emberselect content populated objects see following jsfiddle expected behavior option nametom selected", "num": "1432", "d": "10/2012"}, {"title": "remove jsonstringify circular reference meta platforms nt support enumerable false", "body": "ca nt directly use get circular reference error ca nt meta object marked nonenumerable metasource links back object creating circular reference effect means safe generally use jsonstringify ember objects bad jsonstringify convenient debug marshalling etc even output nt perfect one relatively simple fix isdefinepropertysimulated snip results meta object appearing jsonstringify matches behavior chrome firefox etc", "num": "1431", "d": "10/2012"}, {"title": "initialization order affects observers", "body": "get run nt seems like unexpected behaviour windowapp emapplicationcreate applicationcontroller emcontrollerextend applicationview emviewextend router emrouterextend root emrouteextend barcontroller emcontrollerextend foodidchange function consolelog barcontroller gt foodidchange observes approuterfoocontroller foocontroller emcontrollerextend bazcontroller emcontrollerextend foodidchange function consolelog bazcontroller gt foodidchange observes approuterfoocontroller appinitialize", "num": "1430", "d": "10/2012"}, {"title": "nested computed values supported", "body": "example", "num": "1429", "d": "10/2012"}, {"title": "sorting content array arraycontroller update view", "body": "solution given issue nt work create view dynamically bind content controller could explain make work arrangement", "num": "1426", "d": "10/2012"}, {"body": "try", "d": "10/2012"}, {"body": "hello tchak thanks reply aware could access view way regardless nt work since content changes scope template think", "d": "10/2012"}, {"body": "hello tchak trying previews example nt work tried edit work regardless think articleview work well viewarticleview intuitive solution thanks", "d": "10/2012"}, {"body": "reneolivo well context different current view change context current view think accessing current view actually intuitive understand well relation context", "d": "10/2012"}, {"body": "predefined variable called view accesible handlebars script seems like patch intuitive solution keyword view also acts like sort predefined function include another view ie view someotherview scope using keyword view reference function also nt see reference view variable documentation see reference paths accesing parent scope using makes sense regardless available first example work sort bug tchak thanks kind help use quirky view reference mean time", "d": "10/2012"}, {"body": "reneolivo problem try go scope want variable keyword like keywords important depend scope affected property defined current view accessed via keyword scope usually case different quite sure docs looking", "d": "10/2012"}, {"body": "reneolivo", "d": "10/2012"}, {"body": "thanks tchak seems convenient use view variable though still think messy keyword different purposes regarding use want go scope right one uses somearray scope changes individual element array stuff like title title property element within array property view per se also someone point working startup jsfiddle ember could reproduce example must clearly bug", "d": "10/2012"}, {"body": "reneolivo possible bug behaviour describe clearly wrong refer witch parent context definitely defined current view", "d": "10/2012"}, {"body": "take look embercontainerview post question stackoverflow need additional help", "d": "10/2012"}, {"body": "big difference nested view created parent view nested view passed parent view need containerview could render regular view", "d": "10/2012"}, {"body": "great questions stackoverflow people future able better find whatever answer provided use github issues bugs feature requests", "d": "10/2012"}, {"body": "agreed posting nontricky solution exists containerview suffers issue accept instances view passed another view could acceptance view instance instead view class implemented feature thanks", "d": "10/2012"}, {"body": "demongloom array solution manage view instances runtime", "d": "10/2012"}, {"body": "suspect occurs attempting change url page router within iframe way around diagnose different root cause happy take look resolving unless adds unnecessary weight framework", "d": "10/2012"}, {"body": "yeah may unavoidable wanted record issue others encounter others add comments workarounds worth jsbin nt appear issue iframe", "d": "10/2012"}, {"body": "fiddle includes nt work latest ember github hours ago either", "d": "10/2012"}, {"body": "fail created fiddle router working fine", "d": "10/2012"}, {"body": "johncant nt allowed multiple anonymous inline templates longer see notes blog post", "d": "10/2012"}, {"body": "without router controller cheers wagenet solved", "d": "10/2012"}, {"body": "fao anyone else updating templates change update templates time none work", "d": "10/2012"}, {"body": "johncant seem little odd still anonymous templates", "d": "10/2012"}, {"body": "upgrading norm nt get round upgrading around months ago issue spent months particular project", "d": "10/2012"}, {"body": "johncant norm generally still one anonymous template nt hard give templates names handle way nt think something worried good luck", "d": "10/2012"}, {"body": "piece cake cheers", "d": "10/2012"}, {"body": "hello tipically question post stakoverflow minimal search would found solution", "d": "10/2012"}, {"body": "thanks nt googling problem reading ember documentation assumed complete enough", "d": "10/2012"}, {"body": "see additional information proposed syntax nt support", "d": "10/2012"}, {"body": "trek thanks understand situation better think describing behaviour documentation would valuable", "d": "10/2012"}, {"body": "already documenting", "d": "10/2012"}, {"body": "thank great trek glowacki notifications githubcom kirjoitti kello already documenting reply email directly view github", "d": "10/2012"}, {"body": "provide jsfiddle jsbin isolating issue", "d": "10/2012"}, {"body": "click delete item see error console", "d": "10/2012"}, {"body": "ok quite weird fixed code json objects coming c backend upper case properties converting lower case fixes problem deliberate", "d": "10/2012"}, {"body": "think using capitalize names handlebars makes search globals writing foobar think handlebars trying resolve namespace foo class property bar", "d": "10/2012"}, {"body": "sounds correct charlieridley sure simple fix short term might best sanitize data loading far ember concerned uppercase properties namespaces classes", "d": "10/2012"}, {"body": "wagenet yeah ok changed server output lower case properties thanks", "d": "10/2012"}, {"body": "charlieridley would consider issue sufficiently resolved feel free close always reopen think new insight", "d": "10/2012"}, {"body": "trek think fine require lower case perhaps validation throwing exception stating", "d": "10/2012"}, {"body": "probably using sortable mixin instead nt really work well observing system see let us know still problems", "d": "10/2012"}, {"body": "owilliams definitely nt seem good thanks catching", "d": "10/2012"}, {"body": "changing would solve template problem think may places check pr want", "d": "10/2012"}, {"body": "wycats nt namespaces lookup", "d": "10/2012"}, {"body": "kselden nt set seems like workaround owilliams would though admittedly pretty", "d": "10/2012"}, {"body": "said owilliams suggested patch probably good wycats thoughts since wrote", "d": "10/2012"}, {"body": "fan patch going lookup lookup exports think workaround intended sure complexity value", "d": "10/2012"}, {"body": "wagenet ca nt reference ember config like mentioned current workaround using var ember exports lookup app emberlookupem emberlookupember ember agree kselden though unless explicit reason complexity probably nt needed", "d": "10/2012"}, {"body": "workaround idea emberlookup", "d": "10/2012"}, {"body": "kselden concern always available manually specify seems redundant like boilerplate", "d": "10/2012"}, {"body": "idea break apart three concerns imports amd node modules modules future provided via explicit import mechanism imports object exports modules use explicit export mechanism cases exports object piggyback object necessarily lookup specifically modules may want extend lookup polluting original module export object bizarre errorprone way achieve goal lookup concept exist module systems naturally grates module systems trying particular lookup explicitly shared object across app modules ember project think right way achieve goals people amd wrapper explicitly add ember lookup javascript define ember exports app handlebars metamorph jquery function exports app handlebars metamorph jquery var imports handlebars handlebars metamorph metamorph jquery jquery define app function return define post app ember function app ember apppost emberobjectextend stuff", "d": "10/2012"}, {"body": "example app emberapplicationcreate would circular dependency ember maybe app module depend ember add emberlookupapp emberapplicationcreate", "d": "10/2012"}, {"body": "kselden yeah sorry mentioned currently app wycats ember could check set add would reduce boilerplate like wagenet mentioned", "d": "10/2012"}, {"body": "owilliams obvious every module wrapper ember would want behavior boilerplate real issue since provide canonical amd build ember correct semantics", "d": "10/2012"}, {"body": "clearlu bug see working fiddle", "d": "10/2012"}, {"body": "detailed blog post changed default view context", "d": "10/2012"}, {"body": "available history location hash one browser reload page", "d": "10/2012"}, {"body": "caligomentis seen used js router solutions past problem including additions ghempton routermanger old sproutcore statechartrouter port", "d": "10/2012"}, {"body": "maybe wrong playing around ember maybe trying place query string hash", "d": "10/2012"}, {"body": "confused nt pr fix", "d": "10/2012"}, {"body": "unfortunately nt solve issue performant way shouldnt copying array filter item sent iphone oct james croft notifications githubcom wrote confused nt pr reply email directly view github", "d": "10/2012"}, {"body": "way outlets work related", "d": "10/2012"}, {"body": "questions stack overflow tag good place ask", "d": "10/2012"}, {"body": "wagenet posted question seeing answer seems confirm answered", "d": "10/2012"}, {"body": "would nt expect work even issues since would bindings support see", "d": "10/2012"}, {"body": "zincli sort question belongs stackoverflow volunteers pretty good job getting answered said want perform something creating object overwrite method dealing views dom better ways however series lifecycle hooks likely want use specific example though sounds like logic belongs router nt much experience take look outlet guide", "d": "10/2012"}, {"body": "bradleypriest stackoverflow got thank much want init method could nt find read", "d": "10/2012"}, {"body": "mean setup chain property whose value new object every time get", "d": "10/2012"}, {"body": "means never cache value always recompute case means always get new array generated every time judging code exact opposite want suspect misunderstood method something want use", "d": "10/2012"}, {"body": "basically intent property got data remote service gets refreshed every time route displayed another property updates based value way trigger manual recalculation cached property", "d": "10/2012"}, {"body": "pharcosyle use tell property changed manually someproperty function fetching property connectoutlets function router routerget somecontroller notifypropertychange someproperty could set observer property set want refreshing someproperty function thisget needsrefresh fetching thisset needsrefresh false observes needsrefresh connectoutlets function router routerget somecontroller set needsrefresh true call refresh function controller router generally", "d": "10/2012"}, {"body": "cavalcade excellent solutions thank", "d": "10/2012"}, {"body": "offhand ca nt think reason changing", "d": "10/2012"}, {"body": "agreed", "d": "10/2012"}, {"body": "workmanw send pr", "d": "10/2012"}, {"body": "wagenet yeap got submit pr shortly", "d": "10/2012"}, {"body": "jsfiddle jsbin example", "d": "10/2012"}, {"body": "trek sorry newcomer ember jsfiddle thought jsfiddle provide emberjs version example jsfiddle", "d": "10/2012"}, {"body": "ah must coming earlier version ember default context removed could support multiple contextsthe relevant commit", "d": "10/2012"}, {"body": "trek great thanks", "d": "10/2012"}, {"body": "affects emberdata record materialization setproperties inverse associations", "d": "10/2012"}, {"body": "closing since failing spec rather track things one place", "d": "10/2012"}, {"body": "build ember locally get separate modules distmodules", "d": "10/2012"}, {"body": "perhaps nt explain correctly wanted point current dependencies force import unnecesary packagesmodules specific environments", "d": "10/2012"}, {"body": "ppcano true assume users want ember advanced make custom builds necessary probably document better", "d": "10/2012"}, {"body": "ppcano rereading see concern package dependency dependency nt trivial one look applicationjs lot code routing since strongly encourage every new ember application built router nt think big concern case could make custom build without make version nonrouter parts", "d": "10/2012"}, {"body": "something could method", "d": "10/2012"}, {"body": "yeap actually asked question stack overflow posting person answered suggested perfectly fine solution nt obvious would need extend router really seems like something users would want handle figured open issue generate discussion", "d": "10/2012"}, {"body": "trivial seems route exists associated record nt imagine route go posts nt exists expect see error router error needs handle asynchronous load objects", "d": "10/2012"}, {"body": "dmathieu would nt expect handle situations reasons stated entirely different worms would expect router handle cases user attempted navigate invalid route ie route path defined", "d": "10/2012"}, {"body": "support unfound routes also support failure state promises deserialized router rejected ie failure similar state promises resolved patches accepted", "d": "10/2012"}, {"body": "feature", "d": "10/2012"}, {"body": "also need badly", "d": "10/2012"}, {"body": "tell us bit use cases nt found single states multiple contexts come often usually patternsmell nt fully teased state machine", "d": "10/2012"}, {"body": "example file management app one url parameters path separated slashes", "d": "10/2012"}, {"body": "file management app path end url pretty much like github committree views urls", "d": "10/2012"}, {"body": "see unanswered question noirbizarre one", "d": "10/2012"}, {"body": "trek quite possible approaching problem wrong usecase suppose user allowed query products url want store things like color default price range default sort order default price sake example let say variables potentially could lot one option store standard dynamic segments default case would result url looked like allallbyprice find segments less userfriendly desired would prefer segment appear url value nondefault urls would handled route blue bymostpopular achieve url structure using character join url parts together however prefer use character", "d": "10/2012"}, {"body": "gavacho sure problem issue basically able embed slashes url parameter problem understand mixing url parameters order wrong beyond think achieve looking current brute force might quite scary using lot parameters thought", "d": "10/2012"}, {"body": "preferred implementation see simplest would require char contents dynamic segment think talking thing", "d": "10/2012"}, {"body": "really mandatory char dynamic segment gavacho something like search color color amp pricerange pricerange results something readable http standard", "d": "10/2012"}, {"body": "madchicken makes sense imho", "d": "10/2012"}, {"body": "madchicken ember router would nt amp characters need encoded could nt changing cause browser send new get request", "d": "10/2012"}, {"body": "gavacho think amp encoded since url query using resulting http uri telling router use hash storing path app resources parameters think able express parameters route trying dynamically handling pieces path instead represent state search state case", "d": "10/2012"}, {"body": "madchicken browser reload page whenever url changes except hash approach breaks singlepageapplication experience also results much less userfriendly urls still prefer ability character dynamic segments", "d": "10/2012"}, {"body": "gavacho using history ember location history old browsers always use hash", "d": "10/2012"}, {"body": "madchicken presumably one using one nt want rely pushstate say put query string hash entire query string would url encoded would result even less userfriendly url", "d": "10/2012"}, {"body": "gavacho right understand point view still think char used path separator parameters maybe using hash appropriate uri rfc states char pctencoded", "d": "10/2012"}, {"body": "madchicken character used reserved role case would still need encoded already suggesting dynamic segment wherein populate string encodes state right string looks like requesting ability use character string result", "d": "10/2012"}, {"body": "good use cases think wycats would entertain pr know retooling router api although internals remain nearly least put radar", "d": "10/2012"}, {"body": "closing since pr discussion happen", "d": "10/2012"}, {"body": "supply us two jsfiddles jsbins isolating issue issues test cases like tend get handled quickly", "d": "10/2012"}, {"body": "created fiddle demonstrate aberrant behavior rebuilt latest ember fiddle steps reproduce load fiddle select marketing dropdown see group label updated appropriately select box empty even showing original prompt expect select box display marketing select marketing displays correctly instead selecting marketing select research note time selected dropdown option select box group label updated expected ie correctly appears first time select dropdown option blank option appears using chrome version", "d": "10/2012"}, {"body": "fiddle behaving expected", "d": "10/2012"}, {"body": "confirm fixed master see", "d": "10/2012"}, {"body": "fiddle using version used fiddle demonstrating expected behavior issue referring seen look previous comment see steps reproduce", "d": "10/2012"}, {"body": "gasp sorry george", "d": "10/2012"}, {"body": "worries thanks jumping nonetheless", "d": "10/2012"}, {"body": "hum perhaps commit seems deal multiselect", "d": "10/2012"}, {"body": "ugh unable reproduce error test javascript test upon selection ui reflect selected option label function var view emberviewcreate collection embera name wes value w name gordon value g val null template emberhandlebarscompile view emberselect viewname select contentbinding collection optionlabelpath contentname optionvaluepath contentvalue prompt please wait valuebinding val emberrun function viewappendto qunitfixture var select viewget select selectel select equal selectelselectedindex precond dom reflects correct selection equal selectel find option selected text please wait precond ui reflects correct default option label emberrun function selectset value w equal selectget value w value properly set selection change equal selectelselectedindex dom reflects correct selection equal selectel find option selected text wes ui reflects correct option label selection expected equal add insult injury jshint complains quite green comes ember js testing nudges right direction would welcome short trying reproduce aberrant behavior demonstrated unit test thx", "d": "10/2012"}, {"body": "firefox mac also shows aberrant behavior except make first selection select box continues showing default prompt whereas chrome would change prompt blank safari behaves like chrome would expected changing prompt blank first selection made", "d": "10/2012"}, {"body": "george think jquery bug fiddle posted works expected change jquery version higher", "d": "10/2012"}, {"body": "confirmed nonissue jquery higher hjdivad thanks help ember vendors jquery see bumped given jquery current release considerations", "d": "10/2012"}, {"body": "george worries dependencies may question wagenet changing dependency working around jquery bug think painful without actually patching jquery", "d": "10/2012"}, {"body": "vendoring running tests benchmarks jquery contained distribution would ok bumping required jquery version however make change prs accepted", "d": "10/2012"}, {"body": "see kindly ignore bad commit", "d": "10/2012"}, {"body": "seen issue might duplicate sorry noise", "d": "10/2012"}, {"body": "hmm could check think bug fixed", "d": "10/2012"}, {"body": "indeed fixed master see swap ember resource", "d": "10/2012"}, {"body": "thanx sylvain", "d": "10/2012"}, {"body": "suggesting one default attributes provided ember personally nt think used enough warrant making default want globally app add javascript embertextsupportreopen attributebindings required", "d": "10/2012"}, {"body": "go back forth nt heard great reason html attributes form elements get included nt nt know want include since many valid attributes hardly anyone uses probably expand docs say attributebindings concatenated property see emberobject documentation information concatenated properties nt even documentation emberobject yet nicholaides want close issue open new one better documenting add element attributes", "d": "10/2012"}, {"body": "trek especially since view easily reopened part boot strap process probably better educate people ability rather continue adding attributes requested", "d": "10/2012"}, {"body": "agree worth discussion input ember come sane defaults maximize productivity trek serious cost simply adding docs expanded show add attributes attributes question autofocus readonly required pattern autocapitalize autocorrect multiple step missing attribute compatibility", "d": "10/2012"}, {"body": "stefanpenner one kind input yeah etc get used often nt add need test support moving future attributes might come unintended design side effects eg happens changed data backing text input make embertextfield need support reverting values prefer support minimum viable attributes likely used available browser support update docs include section adding additional attribute match use case nicholaides nt open new issue nt know important", "d": "10/2012"}, {"body": "trek moreover emberjs object model flexible enough include modification users bradleypriest suggest clean proper add custom html attributes must right way dealing", "d": "10/2012"}, {"body": "since want avoid proliferation possible properties going close doc changes bradleypriest help others", "d": "10/2012"}, {"body": "bug pre fixed master", "d": "10/2012"}, {"body": "try master", "d": "10/2012"}, {"body": "chaolam something relatively recent grab absolute latest clone github repo follow instructions readme build distribution versions emberjs closing please reopen find resolved master", "d": "10/2012"}, {"body": "issue noticed times since pity release fixing commit", "d": "10/2012"}, {"body": "teroparvinen check existence destruction time call clarify concern andor post jsfiddle", "d": "10/2012"}, {"body": "lukemelia sure", "d": "10/2012"}, {"body": "teroparvinen working fork address need", "d": "10/2012"}, {"body": "lukemelia mixing class mixins need able clean independently add method call get infinite loop see try omit one placing unnecessary hard track limitations order selection mixins use class", "d": "10/2012"}, {"body": "teroparvinen thanks example definitely bug ember result infinite loop", "d": "10/2012"}, {"body": "donaldpipowitch alogous check information", "d": "10/2012"}, {"body": "difference need emberobject get bindings observable properties javascript objects need need emberproxyarray get javascript arrays sorry nt think docs explain addition even emberarrayproxy right name emberarrayproxy functionality think emberarray properly name emberarray maybe naming convention would help distinguish classes created mixins eg use emberobjectcreate emberarraycreate think would helpful new emberjs developers see classnames", "d": "10/2012"}, {"body": "donaldpipowitch think look emberobject data structure still main data structures ember emberarrayproxy emberobjectproxy two proxy classes use manipulate data structures", "d": "10/2012"}, {"body": "donaldpipowitch arrays usually nt directly use emberarray simply creating emberarray instance emberjs extends javascript array prototype bindings observers", "d": "10/2012"}, {"body": "thanks explaining things nt knew emberobjectproxy better understanding emberarrayproxy understand classes names still little bit confusing clear every time need array object data structure additionally embersepecific logic would use emberproxyarray emberproxyobject emberobject nt used data structure adds additional logic every ember class seen little bit like native objectprototype adds tostring functions every javascript object nt take literealy illustrates understanding emberarray hand something completely different mixin comparable abstract class adds logic arraylike ember classes eg emberproxyarray think explanation right", "d": "10/2012"}, {"body": "willrjmarshall looked fiddle link provided nt see conditionals outlets mean provide another link", "d": "10/2012"}, {"body": "quote right got link wrong somehow try", "d": "10/2012"}, {"body": "interresting thing use connectoutlet convention works see seems bug edit bug relalize pass controller class instead instance see working think could assert though", "d": "10/2012"}, {"body": "true also assert pass resolves bitten usually fat fingered typo wagenet think close issue", "d": "10/2012"}, {"body": "trivial solution seems work make instead nt know good solution expect behaviour", "d": "10/2012"}, {"body": "lcoq change something call super inside childproxy init method", "d": "10/2012"}, {"body": "wrote test locally master fails solution described make test pass definitely right forgot call updated jsfiddle", "d": "10/2012"}, {"body": "reading code deeply nt think bug feature one code line could make work reason described default behaviour anyone agrees", "d": "10/2012"}, {"body": "proxies array methods since array method proxied want properties proxies use intended behavior far tell", "d": "10/2012"}, {"body": "think mainly solved make new tickets", "d": "10/2012"}, {"body": "emberselect uses maybe use render maybe compiled separately rake pipeline", "d": "10/2012"}, {"body": "rake pipeline compiles production looks really nasty inline precompiled template one thought maybe something like put something like", "d": "10/2012"}, {"body": "btw emberselect nt built collectionview subclass", "d": "10/2012"}, {"body": "caligomentis think", "d": "10/2012"}, {"body": "tchak think overriding array observer methods collectionview much complicated using template core want remove template", "d": "10/2012"}, {"body": "caligomentis definitely option like tackle pr consider changing", "d": "10/2012"}, {"body": "wagenet ok give couple days", "d": "10/2012"}, {"body": "also another solution besides extract controls separate package", "d": "10/2012"}, {"body": "caligomentis would nt necessarily help wanted use dev handlebars runtime", "d": "10/2012"}, {"body": "", "d": "10/2012"}, {"body": "thanks comment aware selection property used according documentation value property also work case", "d": "10/2012"}, {"body": "anybody else needs workaround nt require patching emberjs use", "d": "10/2012"}, {"body": "tried get even nonempty ember objects see", "d": "10/2012"}, {"body": "mrpelle hack nt work emberjs look source see prototype get access order modify meta objects hack work see", "d": "10/2012"}, {"body": "snickell oh ok thanks nt even notice version referring edit seems work version", "d": "10/2012"}, {"body": "snickell submit pr", "d": "10/2012"}, {"body": "trek gitindocrinated yeah yeah todo high list working tarball release anyway provide universal diff help", "d": "10/2012"}, {"body": "sounds good open pr", "d": "10/2012"}, {"body": "snickell status", "d": "10/2012"}, {"body": "wagenet hi guys sorry got completely underwater mustfixes headed vacation submitted following untested pr messed git commit message missing suppress start could nt figure take back git changed substantially pre nt time reread relevant code test somebody else wants take mantle would awesome fix essentially longer single prototype inherit tojson added meta object created platforms simulated properties etc etc ass dragging place sorry", "d": "10/2012"}, {"body": "hi snickell git maybe needed", "d": "10/2012"}, {"body": "took time recover github account never log say thank information patch resolved issue", "d": "10/2012"}, {"body": "version emberjs", "d": "10/2012"}, {"body": "version last commit edit tried latest thing version last commit", "d": "10/2012"}, {"body": "correct wrong think actually working intended discussion issue kselden proposed init helper make problem easy current solution problem follows javascript bazcontroller emcontrollerextend init function thissuper thisfoodidchange", "d": "10/2012"}, {"body": "workmanw nt want trigger init", "d": "10/2012"}, {"body": "time want triggered foocontroller change foocontroller controller pass undefinednull defined controller", "d": "10/2012"}, {"body": "icholy mistake thought implying nt run controller created bindings flushed first case expect called nt", "d": "10/2012"}, {"body": "yes exactly expect observers triggered everything initialized know example define foocontroller two start lots controllers bindings place become painful", "d": "10/2012"}, {"body": "though something like", "d": "10/2012"}, {"body": "question best asked stack overflow", "d": "10/2012"}, {"body": "ca nt give yes regards original question", "d": "10/2012"}, {"body": "maedi nt know answers question first code work alphabet object instance emberobject see play replacement", "d": "10/2012"}, {"body": "thanks", "d": "10/2012"}, {"body": "update recent release able use could work want keep raw strings array content", "d": "10/2012"}, {"body": "nice feature know still solve problem array sorted view updated fiddle latest ember release seems view binding done right", "d": "10/2012"}, {"body": "almost done right rely controller underlying content since arraycontroller change ordering typically kind question ask stackoverflow think question dealing sorting", "d": "10/2012"}, {"body": "well lengthy research pointed issue anyway seem found solution like said rely controller instead binding appcontrollercontent need bind appcontroller like also shows make reusable views problem rerendering flickers page original embercopy solution nt flicker", "d": "10/2012"}, {"body": "nt see flickering screen yes perhaps huge array see manual sort fyi usefull post describing sortable mixin works", "d": "10/2012"}, {"body": "okay solution content view binded arrangedcontent controller thank help think ember documentation needs examples guide going api nt always give trivial answers unless using", "d": "10/2012"}, {"body": "clarify someone comes along later nt ever need bind directly arrayproxy bound value", "d": "10/2012"}, {"body": "experienced say bug", "d": "10/2012"}, {"body": "ca nt tell qualify bug per se think caused namespace collision happens start sharing controller believe view attribute gets set connectoutleted controller outlet name specified start sharing controller among subroutes one template uses unnamed outlet overwriting view property causing sorts breakness ca nt tell considered bug maybe inspired rethink design", "d": "10/2012"}, {"body": "machty also provide working version named template also would ideal nt use coffeescript fiddle", "d": "10/2012"}, {"body": "wagenet trick like said adding name outlet makes problem go away getting rid outlet entirely course", "d": "10/2012"}, {"body": "looks like helloview nt controller would connect outlet default think assumes parent controller applicationcontroller wrote would connectoutlets applicationview nameless outlet helloview nameless outlet time outlets applicationcontroller hence infinite loop said suppose error thrown trying connect outlet specify hellocontroller controller view problem goes away edit rereading comments see rather extra useless controller still nt understand would connectoutlets helloview outlet nt controller unless applicationview outlet named", "d": "10/2012"}, {"body": "dmzza right bug ca nt bind multiple outlets view instance controller nt useless provides view property outlet bind setting outlet name another way creating separate view instance outlet bind shorthand", "d": "10/2012"}, {"body": "agree bug think something said brevity achieved specify allows pattern controller reuse described fall place minimal amount code agree controller nt useless according current router design think readily available pattern vanilla fillintheblanksaccordingtothecurrentroute without codebloating controllers tossing random outlet names avoid stack overflows would little part help giant ember pill go little easily particular something challenging seemingly counterintuitive router well everyone know tried learn maybe solution would anonymous controllers instantiated tie data parent route controller rather null controller ushering default parentview context resolution makes pattern work according article also dmzza nt think specifying appwelcomecontroller view class controller works way expect somewhat accidentally resolve stack overflows nt think controller actually gets instantiated point template context would welcomecontroller class rather instance", "d": "10/2012"}, {"body": "think misunderstood original post indeed kris says bug", "d": "10/2012"}, {"body": "ok ember assert could sanely", "d": "10/2012"}, {"body": "zomg amazing power open source", "d": "10/2012"}, {"body": "awesome guys thank", "d": "10/2012"}, {"body": "workmanw happens also maintain old api well", "d": "10/2012"}, {"body": "actually make performance difference", "d": "10/2012"}, {"body": "gavacho make working jsfiddle jsbin demonstrates problem", "d": "10/2012"}, {"body": "gavacho link section docs view context changed may missed mention", "d": "10/2012"}, {"body": "also subsection templates default context compiled template view instance", "d": "10/2012"}, {"body": "wagenet issues assigned tend review morning totally lose track planned work noon", "d": "10/2012"}, {"body": "think behavior issue duplicate may also docs issue trek verify", "d": "10/2012"}, {"body": "guess applicationview necessary also tried binding keyup inside ready works said pretty ember way works perfectly closing issue", "d": "10/2012"}, {"body": "dmhaiduchonak using handlebars runtime gist", "d": "10/2012"}, {"body": "initial errorcausing attempt precompiling using handlebars nodebased binary shown dmhaiduchonak gist precompiling must done within ember using precompiled templates works still requires full handlebars library runtime throws errors ember still tries initializesetup handlebars compiler", "d": "10/2012"}, {"body": "commit help however still need use minified prod ember comment looking fix still issues let know", "d": "10/2012"}, {"body": "pretty sure issue covered rsaccon let know mistaken", "d": "10/2012"}, {"body": "seems like question probably best stack overflow", "d": "10/2012"}, {"body": "today solved problem didinsertelement working perfectly though test morethanks", "d": "10/2012"}, {"body": "experiencing behavior undefined context index leaf route got connectoutlets call company route rather get things serializing deserializing properly expect run issue jumping leaf leaf without hitting parent edit null context issue actually problem calling connectoutlets parent route misinterpreting null context phenomenon described problem root issue setting connectoutlets data fetching leaf route rather parent route eg causing views inserted reloading page leaf state deserializing well parent view never inserted fix replaced storefronts emrouteextend route storefronts connectoutlets router context gt routerget applicationcontroller connectoutlet storefronts appstorefindall appstorefront index emrouteextend route connectoutlets router gt routerget applicationcontroller connectoutlet storefronts storefront emrouteextend etcetera index emrouteextend etcetera edit emrouteextend etcetera even though context leaf route content property set parent controller parent route thus absence context content view inherits navigating directly leaf states seems working link rootstorefrontsstorefrontedit directly rootstorefrontsstorefrontindex inheriting context parent maybe still nt understand purpose connectoutlets call rootstorefrontsindex serves", "d": "10/2012"}, {"body": "future reference sorts questions best stack overflow", "d": "10/2012"}, {"body": "problem still present master", "d": "10/2012"}, {"body": "worth generally better provide operation jsfiddlejsbin instead pasting code", "d": "10/2012"}, {"body": "new github etiquette next time", "d": "10/2012"}, {"body": "sirzach chance jsfiddlejsbin would still appreciated", "d": "10/2012"}, {"body": "", "d": "10/2012"}, {"body": "mattkime would certainly trick question whether would easy implement since think going close someone wants submit pr cases gladly review", "d": "10/2012"}, {"body": "odigity updates planning send docs pr", "d": "10/2012"}, {"body": "still exactly sure things actually work would nt feel comfortable updating docs perhaps months feel ready start contributing", "d": "10/2012"}, {"body": "odigity look tell missed", "d": "10/2012"}, {"body": "wagenet issue resolved closed", "d": "10/2012"}, {"body": "nt think high priority though prs accepted", "d": "10/2012"}, {"body": "would nt hurt documented also important prs still accepted", "d": "10/2012"}, {"body": "rodrigoalvesvieira reason changed probably leave aliases either indefinitely deprecation notices", "d": "10/2012"}, {"body": "see", "d": "10/2012"}, {"body": "closing since bug unverified inactive issue reproduced jsfiddlejsbin without use ember data please create new ticket", "d": "10/2012"}, {"body": "may", "d": "10/2012"}, {"body": "related found sometimes need access parent routes deserialized content deserialize nested route example post action need request server including project id post id nt access project within called ca nt access project nt setup yet app currently getting around setting content property parent child access feels rather wrong happening twice set", "d": "10/2012"}, {"body": "thought generally would expect parent route deserialized content available corresponding controller one form another access app necessarily expecting hold true apps guessing would", "d": "10/2012"}, {"body": "leepfrog kselden explain workmanw suggestion nt sufficient", "d": "10/2012"}, {"body": "also ran problem example two routes obtain model need know course something like instead quite right solution", "d": "10/2012"}, {"body": "trek shwoodard status", "d": "10/2012"}, {"body": "wagenet able get around issue pre baking content dom would select rendered view still work well target value binding loaded asynchronously", "d": "10/2012"}, {"body": "honestly nt understand issue initially set controller initially later simulate async array provided set logic determine newly added objects supposed html attribute neither marked selected remains null", "d": "10/2012"}, {"body": "trek think expectation would behave native regards adding options delay updated fiddle updated", "d": "10/2012"}, {"body": "gavacho nt really native behave default behavior experiencing behavior added jquery first looks like linked fiddle coerces return value element view source see although return value element nt actually one jquery central design patterns truthindom ember polar opposite design pattern truthinobjects behavior makes sense within context library patterns nt necessarily imposed library ember displayed html backed objects update objects changed way around nt update userpicked selected detects user interaction updates underlying object values update causes appropriate binding update lets us handle use cases changes single pattern userinteraction select programatic changes underlying object caused code executed elsewhere application", "d": "10/2012"}, {"body": "ps saying could nt support behavior someoned wanted submit pr nt think actually bug issue unlikely get attention existing contributors", "d": "10/2012"}, {"body": "shwoodard gavacho satisfied trek explanation", "d": "10/2012"}, {"body": "wagenet satisfying", "d": "10/2012"}, {"body": "shwoodard going go ahead close still concerns let know revisit", "d": "10/2012"}, {"body": "ebryn explain ember issue fix", "d": "10/2012"}, {"body": "definitely need work older versions ie", "d": "10/2012"}, {"body": "fordi able submit failing test pr", "d": "10/2012"}, {"body": "kselden status", "d": "10/2012"}, {"body": "wagenet kselden seeing fiddle think could closed", "d": "10/2012"}, {"body": "nt know need define adhoc routes breaking routes smaller components feels like right thing rails nt sucks sinatra took stab breaking router feels manageable sure ember way would tackle whatever would great", "d": "10/2012"}, {"body": "significant problem adding states state manager run time believe intent handle known states transition accordingly think find mutable state manager things get extremely complicated trying debug non concrete states believe rails nt choose implement routes way positive believe reopen router class saying also nothing says ca nt pass rails router implicit receiver another object handle routes way would weary something like hides common practice rails framework matter opinion though take leave p", "d": "10/2012"}, {"body": "working fairly large app routes broken separate classes wired together init along lines initjs approuter emrouterextend root appapplicationroutes applicationroutesjs appapplicationroutes emrouteextend home emrouteextend route blog appblogroutes members appmemberroutes accounts appaccountroutes membersroutesjs appmemberroutes emrouteextend blogroutesjs appblogroutes emrouteextend accountroutesjs appaccountroutes emrouteextend", "d": "10/2012"}, {"body": "rlivesey blamo like", "d": "10/2012"}, {"body": "since already working refactoring router api going close", "d": "10/2012"}, {"body": "", "d": "10/2012"}, {"body": "given kselden says bug follow closing", "d": "10/2012"}, {"body": "trek insofar docs issue look", "d": "10/2012"}, {"body": "wagenet good place beef docs emberspecific handlebars behavior like", "d": "10/2012"}, {"body": "kselden updates", "d": "10/2012"}, {"body": "since nt think something integrate going close someone would like submit pr make option happy accept", "d": "10/2012"}, {"body": "closing since think ember data provides needed functionality", "d": "10/2012"}, {"body": "fixed", "d": "10/2012"}, {"body": "workmanw currently ok saying nt support template names want submit pr support definitely consider", "d": "10/2012"}, {"body": "closing ticket since unverified inactive problem demonstrated please open new ticket", "d": "10/2012"}, {"body": "ebryn make pr", "d": "10/2012"}, {"body": "ebryn kselden still issue", "d": "10/2012"}, {"body": "addressed proposed helper", "d": "10/2012"}, {"body": "trek smile", "d": "10/2012"}, {"body": "happy put something together mergedclosed like", "d": "10/2012"}, {"body": "wagenet confirm wait resolved", "d": "10/2012"}, {"body": "bradleypriest trek perhaps begin document could complete accepted", "d": "10/2012"}, {"body": "since added feature seems like trek bradleypriest could definitely get started parts hopefully get finalized asap though", "d": "10/2012"}, {"body": "think finalized added piece doc since clearly english writter definitively checked eyes", "d": "10/2012"}, {"body": "wait stroke came back document see already docs damn good docs wrote think one origina request came never closed issue documentation want proof additions custom sorting pr", "d": "10/2012"}, {"body": "wagenet unless docs like issue closed", "d": "10/2012"}, {"body": "trek added description return value orderby pr one closed people confortable using sortable mixin doc improved later", "d": "10/2012"}, {"body": "looks like yuicompressor deprecated still need consider rhino", "d": "10/2012"}, {"body": "wagenet someone demonstrate problems browser reconsider supporting extremely old nonbrowser environments uptodate modern javascript good enough reason imho", "d": "10/2012"}, {"body": "wycats sounds good", "d": "10/2012"}, {"body": "wagenet work previously worked fix write tests catch future regressions", "d": "10/2012"}, {"body": "closing find another solution docs", "d": "10/2012"}, {"body": "seems useful low priority unfortunately nt think add standard property even sure possible us make work without breaking existing behavior muddying waters happy pr", "d": "10/2012"}, {"body": "kselden fixed", "d": "10/2012"}, {"body": "kselden status", "d": "10/2012"}, {"body": "jamesarosen interested pr", "d": "10/2012"}, {"body": "", "d": "10/2012"}, {"body": "tchak current thought", "d": "10/2012"}, {"body": "currently using sort triage router rerout events sub event managers write proposal enough interest", "d": "10/2012"}, {"body": "tchak feel like something definitely would useful though want think carefully without confusing users", "d": "10/2012"}, {"body": "kselden current thought", "d": "10/2012"}, {"body": "onkelborg use set view controller want use nothing singleton also take look source code", "d": "10/2012"}, {"body": "nt think going change anything onkelborg hopefully stas suggestion useful", "d": "10/2012"}, {"body": "oh one important thing order leverage existing routes nt forget initialize attribute current router instance", "d": "10/2012"}, {"body": "bradleypriest still issue", "d": "10/2012"}, {"body": "yes lot obvious new action context still places need use fix nt actually fix issue infinite loop thrown called warning issued two options fix warning actually check objectproxy content get content set", "d": "10/2012"}, {"body": "closing due inactivity", "d": "10/2012"}, {"body": "closing due inactivity", "d": "10/2012"}, {"body": "ebryn thoughts", "d": "10/2012"}, {"body": "changed way initialization works also give control desired set application call whenever want let know still able get desired result", "d": "10/2012"}, {"body": "upon consideration ca nt think ideas happy accept pr", "d": "10/2012"}, {"body": "also use", "d": "10/2012"}, {"body": "kselden status master", "d": "10/2012"}, {"body": "closing favor trek reopen solution really need support", "d": "10/2012"}, {"body": "closing tracking doc improvements elsewhere", "d": "10/2012"}, {"body": "going close get issues list bit focused however intend continue improving api docs already new api docs improve situation though nt include search yet", "d": "10/2012"}, {"body": "still bug master", "d": "10/2012"}, {"body": "tchak still think need right", "d": "10/2012"}, {"body": "really would induce much complexity would prefer go way objections close", "d": "10/2012"}, {"body": "sounds good", "d": "10/2012"}, {"body": "resolved well enough", "d": "10/2012"}, {"body": "prs gladly accepted also plan improve docs release", "d": "10/2012"}, {"body": "wagenet kingkoen right", "d": "10/2012"}, {"body": "yes", "d": "10/2012"}, {"body": "closing since solution nt much activity anyone wants submit pr either make behavior easier use improve docs happy accept", "d": "10/2012"}, {"body": "closing favor", "d": "10/2012"}, {"body": "closing since generally inactive really list priorities gladly accept prs plugin projects", "d": "10/2012"}, {"body": "would really love see", "d": "10/2012"}, {"body": "mspisars nt want block things difficult fix nonessential", "d": "10/2012"}, {"body": "seems relatively unimportant new router setup leave open", "d": "10/2012"}, {"body": "also bootstrap anything really need use data attributes maybe want makes sense fact make sense interoperate libraries depend data dom seamlessly", "d": "10/2012"}, {"body": "reopen", "d": "10/2012"}, {"body": "closing since pr", "d": "10/2012"}, {"body": "working performance stuff upcoming support make big difference", "d": "10/2012"}, {"body": "something review release anyway", "d": "10/2012"}]