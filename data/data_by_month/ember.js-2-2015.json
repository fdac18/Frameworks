[{"title": "foundationbootstrapskeleton grids none work expected", "body": "attempting use responsive grid seems ones tried recently embercli using ember missing columns malformed anyone run problem fix", "num": "10546", "d": "2/2015"}, {"title": "ember htmlbars template compiled undefined problem ember beta", "body": "hi precompilation application templates looks like embertemplates application emberhtmlbarstemplate function return ishtmlbars true blockparams cachedfragment null hasrendered false build function build dom var domcreatedocumentfragment var domcreatetextnode domappendchild var domcreatetextnode domappendchild return render function render context env contextualelement var dom envdom var hooks envhooks content hookscontent domdetectnamespace contextualelement var fragment envusefragmentcache amp amp domcanclone thiscachedfragment null fragment thisbuild dom thishasrendered thiscachedfragment fragment else thishasrendered true thiscachedfragment fragment domclonenode thiscachedfragment true else fragment thisbuild dom thiscachedfragment domrepairclonednode fragment var domcreatemorphat contextualelement content env context outlet return fragment get following uncaught error uncaught error assertion failed template rendered compiled match revision begin look problem could bug dont get error", "num": "10543", "d": "2/2015"}, {"title": "access failed transition error substate", "body": "trying display better error messages would like access failed transition led entering error substate goal display url user wanted enter make easier debug problem tried different hooks route could nt find way retrieve failed transitions way think one", "num": "10542", "d": "2/2015"}, {"title": "input helper valuebinding updated", "body": "code stopped working recently regression caused", "num": "10541", "d": "2/2015"}, {"title": "returning object computed property loose data binding", "body": "little bit weird basically app returning result ember data computed property use promiseproxy flag show loading spinner route first loads works fine subsequent returns computed property object returned correctly see ember id increasing jsbins ispending properties never updated stash promise inspect manually int console changing reflected rendered output app hope makes sense broken canary working", "num": "10539", "d": "2/2015"}, {"title": "ember build nt adding templatecompiler building ember", "body": "steps reproduce", "num": "10537", "d": "2/2015"}, {"title": "scheduleonce supposed create run loop one nt exist", "body": "according documentation automatically start runloop however finding unit tests embercli qunit chunk code return error turned testing mode disabled runloop autorun need wrap code asynchronous sideeffects run digging source code seems like error could intentional runloopjs something different test documentation wrong seems fix problem seems read right way", "num": "10536", "d": "2/2015"}, {"title": "initializer giving invalid router container lookup", "body": "hi problem trying create initialiser allows control embers router outside ember canarycli pojs problem seems occur mainly deployed versions using embercli mainly seems work local served local apache initializer roughly following problem gives router location property whereas source run locally local apache fully populated router instance router targetstate properties seem consistent either platform tried ways including much simpler unreliable results suspect may kind event runs failing instance initializes router properly maybe like looking solution bug blocking release way set initializer load last way access container router instances completely outside ember thanks", "num": "10535", "d": "2/2015"}, {"title": "fastboot changes seem break setting application customevents within initializer", "body": "longer set within initializer instance passed initializer different whatever line code", "num": "10534", "d": "2/2015"}, {"title": "emberjs emberjs", "body": "typing github repositories search nt return first results searching yields results rather lack actually resolves repository raising issue let guys know might worthwhile bringing consistency corresponds com domain instead", "num": "10532", "d": "2/2015"}, {"title": "application rendered twice defined router mapping", "body": "discovered strange behaviour worked previously router looks like javascript routermap function mustache welcome emberjs outlet rendered html html welcome emberjs welcome emberjs get feeling resource always implicit overriden defined router jsbin working double rendering", "num": "10531", "d": "2/2015"}, {"title": "view component tagname returns many nodes", "body": "see expected alert received alert returns entire dom parent nodes nt verify", "num": "10529", "d": "2/2015"}, {"title": "router class nt used", "body": "machty", "num": "10526", "d": "2/2015"}, {"title": "ember select binding value", "body": "example export default embercontrollerextend questiontext null questioncategory view select contentmodelcategories optionvaluepath contentid optionlabelpath contentname prompt valuequestioncategory textarea valuequestiontext name id cols rows select binding questioncategory binding textarea works fine debug ember debug ember data debug jquery", "num": "10522", "d": "2/2015"}, {"title": "bug paramsfor work nested routes cases", "body": "hi use case parent route force set default query params setupcontroller retrieve setupcontroller nested route using method however work params always null created jsbin replicates issue jsbin uses using beta experiencing issue note using default values controller emberjs consider default values hence user change query params goes back default value default value appear anymore query params highly problematic specific use case basically application either query params case use default values query params thanks", "num": "10521", "d": "2/2015"}, {"title": "throws unexpected call method property access component tag", "body": "append child notes element might tags append child component view work since renderbuffer appends text node every component renderbufferjs sure fixed wish understanding whats going renderer using different tagname like label wrapper adding actual element template works temporary fix example code", "num": "10520", "d": "2/2015"}, {"title": "preset attributes breaks bindattr", "body": "seems like automatically presets attributes available original html tag bind attributes using helper throw error manually setting attribute think changed warning since overwrite value everything work properly case developer mistakenly set attribute static value see warning console know fix luckily issue occur using production builds since asserts removed makes debugging issues impossible without removing assert sample code", "num": "10519", "d": "2/2015"}, {"title": "embercomputed documentation namespace", "body": "much like think namespace api documentation rather related sub properties belong think page using following notation moves property namespace", "num": "10516", "d": "2/2015"}, {"title": "route address bar", "body": "ember reproduction steps generate new route add linkto helper generated route apptemplatesapplicationhbs click link click go back click link", "num": "10515", "d": "2/2015"}, {"title": "keyboard shortcuts special characters like \u00ee working", "body": "keyboard shortcuts special characters like \u00ee option mac working htmlbars soon press option \u02c6 character added textbox wait additional key strokes issue seems browser specific could reproduce chrome safari firefox fine try jsbins stole another issue latest canary working working edit hmmn definitely working differently posted update asap", "num": "10512", "d": "2/2015"}, {"title": "resolver creates multiple instances controllers", "body": "following jsbin explains quick recap app controllers objects general long names eg ing one controllers whether use dasherized name underscored name returns different instances controllers behaviour visible except accepts dotted notation reading code implies standard way underscore notation nt resolver resolve object matter notation deprecate warn throw team would see fit depending notation", "num": "10511", "d": "2/2015"}, {"title": "observer triggers unchanged property", "body": "hello property like observer property observer gets called somevaluea somevalueb changes even someproperty never change documentation says observers ember currently synchronous means fire soon one properties observe changes observer called noticed properties property one property two change value x property two gets called even though propertyone change somehow feels like functions examples called nothing changes misunderstanding something", "num": "10510", "d": "2/2015"}, {"title": "text input behavior android browser upgrade", "body": "upgrading beta text inputs bound values become impossible use galaxy sure android issue specific phone type characters get repeated order gets jumbled cursor jumps around tried swype keyboard samsung one going back problem disappears", "num": "10508", "d": "2/2015"}, {"title": "routename undefined init", "body": "see routename assigned init run possible change routename available init method", "num": "10506", "d": "2/2015"}, {"title": "bug routing transition changed query params", "body": "trying transition updated query params state using route method within beforemodel hook transition promise seem get rejected due kind invalid state handlerinfo objects sure bug something happens intentionally jsbin", "num": "10504", "d": "2/2015"}, {"title": "attrnode method", "body": "using update controller child view code throws error controllerdidchange observer controller function thisisdestroying return trying call changed workaround sure best way actually fixing using ember", "num": "10502", "d": "2/2015"}, {"title": "adapter host nt apply store", "body": "using ember emberdata want change host adapter external one way javascript appapplicationadapter dsrestadapterextend host namespace kraken appstore dsstoreextend adapter appapplicationadapter appindexroute emberrouteextend model function return thisstorefind game fact adds namespace request still makes request nt know bug misunderstanding bet second option pretty new emberjs wrong ideas thanks", "num": "10500", "d": "2/2015"}, {"title": "locationtypenone respected tests url storeconfiginmetafalse", "body": "setup working behaviour navigate tests run expected url remains steps reproduce edit navigate url changed", "num": "10499", "d": "2/2015"}, {"title": "wrapping unless around yield pass controller properties", "body": "wrap around helper seem losing context since controller properties passed rendered template jsbin", "num": "10497", "d": "2/2015"}, {"title": "throw better error went passing namespaced path view helper", "body": "currently throw would helpful could detect presence namespace throw error cc stefanpenner send pr tonight feel free modify proposed error message guessing check amp throw nonproduction env", "num": "10496", "d": "2/2015"}, {"title": "click test helper nt fire click handlers", "body": "component trying write test js moduleforcomponent incrementbutton incrementbuttoncomponent setup function app startapp component thissubject component thisappend teardown function emberrun app destroy app null test clicking increments count function click button andthen function equal componentget count test fails added statement found never gets called", "num": "10495", "d": "2/2015"}, {"title": "emberselect nt select correct value default content array resolved promises", "body": "commit looks like emberselect attempting properly handle case content array promises nice unfortunately nt seem always behave properly specifically promises already resolved render time looks select unsetting value rendering bryanalves tried trace sequence events think happens value gets correctly set runs sees content method causes schedule called later html renders onto page triggers event ember listening actual selection yet deferred step instead emberselect thinks selection changed nothing finally method get called late underlying value already set undefined got two jsfiddles demonstrating problem one emberselect run value gets unset page load exact thing emberselect removed run value stays french fries simply emberselect page alters value property page render", "num": "10492", "d": "2/2015"}, {"title": "htmlbars subexpressions allowed first argument attribute bindings", "body": "think possible use helpers subexpressions binding attribute case instead throwing exception demonstration tested ember using inside old works", "num": "10491", "d": "2/2015"}, {"title": "ember generated objectcontroller missing controllers", "body": "getting following message emberobjectcontroller deprecated please use embercontroller use tracking found controller ember generated would think ember creating controllers missing controllers objectcontrollers", "num": "10488", "d": "2/2015"}, {"title": "incorrect deprecation message", "body": "think arraycontroller deprecated yet however received following message using ember beta deprecation attempted access object proxying deprecated please use instead nt believe modelarrangedcontent correct syntax use fact im sure deprecation actually fix would think needs fixed arraycontroller", "num": "10487", "d": "2/2015"}, {"title": "itemcontroller", "body": "use tell use insteadbut nt work problem", "num": "10485", "d": "2/2015"}, {"title": "promises consistentlyeagerly call asyncstartend testing", "body": "ember extends rsvp notify qunit async subtle issue config hook nt get called time invoke callbacks subscribed via friends resolve asynchronously within callback qunit test suite already left test called makes ember attempt pause test case rsvp promises settled flimsy seems solution would call within rsvp promise constructor least moment callback subscribed via et al sure easily hooked also doubts even entirely catchwait every rsvp promise would nt lead confusion someone uses non rsvp promise lib another lib uses non rsvp dependency either way like hear stefanpenner one might missing something", "num": "10484", "d": "2/2015"}, {"title": "cursors jump end input new value set", "body": "demonstrations repro canary repro beta stable fine", "num": "10481", "d": "2/2015"}, {"title": "object nt support property method addeventlistener", "body": "fairly anonymous error think regression caught generic handler unhelpful stack places vendorjs nt seem use alternatives like attachevent function completed readystate complete good enough us call dom ready oldie documentaddeventlistener eventtype load documentreadystate complete detach jqueryready supportfocusinbubbles jqueryeach focus focusin blur focusout function orig fix delete emberfeatures featuresstrippedtest warnifusingstrippedfeatureflags emberenvfeatures featureswerestripped thanks", "num": "10480", "d": "2/2015"}, {"title": "emberrunlater sometimes execute callback time", "body": "hi seeing something looks like race condition sometimes stops runlater working concretely looks like runs get stuck runloop nt executed specified time something else starts new runloop example click something dom changes even interesting even enough put another js console looks like runloop started scheduled runs processed minimal example could reproduce need run times trigger behaviour see nt printed console press start runloop button get printed console immediately next example closer app also slightly complicated nt need include someview triggered way often examples look bit artificial happens app setting properties observers afaict need promise also new function without ca nt reproduce app even reduces probability far remove hardly ever trigger fwiw chromium best regards domme", "num": "10479", "d": "2/2015"}, {"title": "rendertemplate behavior changed", "body": "prior latest canary could render common outlets parent routes rendertemplate would persist seems like first call render works behavior couple days ago sure exact day using behavior canary til behavior notice common template nt rendered latest", "num": "10478", "d": "2/2015"}, {"title": "text misinterpreted", "body": "emberjs embercli following template snippet arrow misinterpreted html element", "num": "10477", "d": "2/2015"}, {"title": "new optional index helper nt allow itemview", "body": "", "num": "10476", "d": "2/2015"}, {"title": "test uncaught error ca nt trigger action closemodal app nt finished transitioning first route", "body": "hi got modal dialog component applicationroute action coffee actions openmodal modaltpl args render modaltpl application outlet modal model args works fine real app test fails test test modal dialog open close expect visit foo andthen equal find modal length initiall modal dialog andthen equal find modal length modal dialog appear andthen equal find modal length modal dialog disappear first two assertions succeed route successfully renders modal throws error uncaught error ca nt trigger action closemodal app nt finished transitioning first route subsequently third assertion fails action executed modal removed question happening deal issue nt want heavily refactor app like error suggests problem testing app", "num": "10474", "d": "2/2015"}, {"title": "request support", "body": "", "num": "10473", "d": "2/2015"}, {"title": "need suggestion ember applications thought handlebar helpers still would great could give suggestion", "body": "", "num": "10472", "d": "2/2015"}, {"title": "template compilation error", "body": "using embersource gem rails get following error uncaught error assertion failed template rendered compiled match revision", "num": "10471", "d": "2/2015"}, {"title": "change latest release github releases page", "body": "change latest release recent one stable beta instead hiding two recent ones displaying latest release might confusing someone regulary check new releases", "num": "10460", "d": "2/2015"}, {"title": "aftereach failed exists", "body": "trying embercli unit tests models giving error aftereach failed exists convert undefined null object typeerror convert undefined null object objectkeys native ember data lib system recordarraymanager values emberobjectextendwilldestroy even test model defaultempty test libraries embercli embercliqunit ember emberdata emberqunit qunit reverting everything works everything else remaining equal", "num": "10459", "d": "2/2015"}, {"title": "internet explorer ember input type time error invalid argument", "body": "", "num": "10458", "d": "2/2015"}, {"title": "docs telling use foo bar nt work", "body": "example deprecations however using trick using htmlbars", "num": "10457", "d": "2/2015"}, {"title": "handling subdirectories emberhtmlbarscomponentgeneration", "body": "handlebars component express emberhtmlbarscomponentgeneration work edit error", "num": "10456", "d": "2/2015"}, {"title": "emberjs guide issues testing live examples broken", "body": "emberjs guide testing category quite live example test broken examples error setup failed root lists first page posts call without template compiler loaded please load prior calling error uncaught referenceerror emq defined", "num": "10455", "d": "2/2015"}, {"title": "htmlbars vs handlebars compiled output comparison", "body": "ran quick comparison maybe fair handlebars htmlbars production output ember cli looking default application template ember numbers represent packed minified size beautified lines code get rough idea size nt like using bytes measurement ember handlebars bytes loc beautified ember htmlbars bytes loc beautified comparison shows bytes two standards originally posted", "num": "10454", "d": "2/2015"}, {"title": "emberjs queryparams rfc compliant", "body": "rfc says appropriate format url query string anchors aka seems queryparams ember wants fragment querystring reason opposite approach taken", "num": "10453", "d": "2/2015"}, {"title": "please provide way test production mode", "body": "previously build server would compile app production mode run tests upon passing release staging server upgrading appears removed production builds ember production mode behave unfortunately nt past tests failing production mode passing development without option test production unable catch differences releasing also nt feel right releasing code effectively untested could add testing back production mode provide another solution thanks", "num": "10452", "d": "2/2015"}, {"title": "yield block context variables", "body": "following template inside context arraycontroller called page example corresponding template list view problem following block inside list view helper doesnt context despite controller content correct code well version bellow", "num": "10451", "d": "2/2015"}, {"title": "embertextfield cursor position lost setting new value", "body": "found bug using input helper htmlbars sadly ca nt get jsbin work reproduce creating new ember project using ember cli replace bowerjson edit brocfile add applicationhbs type text put cursor middle type text cursor automaticly jump last character instead staying middle", "num": "10449", "d": "2/2015"}, {"title": "assert templates mismatched ember templatecompiler", "body": "add sort flag template compiler used compare running assert different", "num": "10447", "d": "2/2015"}, {"title": "meta upgrade retrospective", "body": "ember upgrade retrospective hi writeup pain points upgrading app took around commits changes get everything back working state includes bunch refactors scheduled move app compatible background app work inventory management product art galleries called ember app located curious see ember inspector shows fairly large app complex cases around routes components moment use embercli tooling amazing quite time unable upgrade stable due ember data requiring old style emberset used rather nt want upgrade ember data needed resolved nt happen late december troubles upgrading emberdata htmlbars compiler providing unhelpful error messages bit html invalid sneaky caused compiler barf found fixed refactoring templates components trouble managing actions simple manner chose punch components controllers routes using api nt public change several times upon finishing upgrade get everything settle right way addition punching components needed helpers changed helpers use htmlbars style helpers oldstyle handlebars helpers missing meta data using punch controllers routes following internal helpers ember one instance used trying get existing helpers working found calls chain helpers ie view helpers changed api signature instead process wanted remove deprecated code codebase specifically wrote get features htmbars provides ease one bits code removed deprecating soon deleting repository get bad pattern public eye code base spent good deal time taking upgrade good time refactor parts application use components heavily encountered bugs around helper rendering template model caused unexpected side effects solved refactoring templates used pattern components acceptance tests involving css selectors suddenly broke reason vague selectors tests made tests pass broke tests consider bad thing tests accurate trouble working around helper needs observe properties model needed unwrap model promise observe keys used helper painful unexpected coming makeboundhelper working use case bug drag drop list animation code looking content childviews expecting able access change", "num": "10446", "d": "2/2015"}, {"title": "html filtered select views ember canary", "body": "component html options selection working fine html markup passed select element styled using semantics see jsbin see html displayed text real component would displayed markup canary html markup filtered see happened documented intended regression activated takes sooo much effort track sudden changes thought introduced bug app realized hours later ember silently swallowing html", "num": "10445", "d": "2/2015"}, {"title": "multiple outlets working canary", "body": "multiple outlets application template get uncaught typeerror read property insertbefore null", "num": "10438", "d": "2/2015"}, {"title": "embersubscribe breaks backwards compatibility", "body": "according docs part instrumentation api however appears part embermetalstreams believe emberinspector depends upon embersubscribe instrumentation method exposed different manner", "num": "10435", "d": "2/2015"}, {"title": "embercanary object proxy work", "body": "object proxy supposed deprecated still working working anymore least partials details", "num": "10434", "d": "2/2015"}, {"title": "cached computed properties seem invalidated often", "body": "consider code var usercontroller emberobjectcontrollerextend firstname john lastname doe largefirstletter function consolelog recomputing return thisget firstletter touppercase property firstletter firstletter function return thisget fullname substr property fullname fullname function return thisget fisrtname thisget lastname property firstname lastname var usercontroller new usercontroller consolelog usercontrollerget largefirstletter consolelog usercontrollerget largefirstletter usercontrollerset lastname smith consolelog usercontrollerget largefirstletter idea dependency tree largefirstletter lt firstletter lt fullname lt firstname lt lastname operations perform change output console ember spec seems promise recomputed dependencies longer valid experiment reveals actually means deeper dependencies also taken account even though direct dependency change gets recomputed example simple hit problem advanced scenario causing lot redraws situations nothing actually changed fixed making real computed property manually recomputing using observe fullname something wrong", "num": "10433", "d": "2/2015"}, {"title": "ember community actively repelling newbies", "body": "removing handelbars dependency builds could run without ember cli producing call compile without template compiler loaded error several threads dedicated issue amazingly nobody asked link compiler missing everybody considered recommended work around guessing correct download url ok ok policy actively repelling newbies wonder necessary", "num": "10432", "d": "2/2015"}, {"title": "ca nt get support deep properties", "body": "property dependency nt work need define get handle transparently least throw exception deep property used", "num": "10430", "d": "2/2015"}, {"title": "clarify difference binding embercomputedalias", "body": "noticed differences binding embercomputedalias ca nt seem find information clarify maybe add docs", "num": "10429", "d": "2/2015"}, {"title": "render named outlet application route broken uncaught typeerror read property routename undefined", "body": "broken version ember also broken latest beta release uncaught typeerror read property routename undefined code causing working bin ember working example seems code renderoptions returns application gets set undefined problem code reason missing something", "num": "10428", "d": "2/2015"}, {"title": "render outlet application template", "body": "regression stable currently broken beta canary see jsbin simple application templates handlebars application application template outlet outlet foo foo foo outlet route error occurs line since application route undefined causing error", "num": "10427", "d": "2/2015"}, {"title": "properties view render helpers resolve", "body": "appears system quite time saw similar behavior hash itemsproperties added render view helper resolved prior passed unless directly set helper following accessible sometemplate viewdirect following accessible sometemplate viewparsed full example using related", "num": "10426", "d": "2/2015"}, {"title": "template must function", "body": "getting following error console upgrading ember guess something new htmlbars engine using gulpembertemplates precompiling templates file issue perhaps easy way create gulp task", "num": "10423", "d": "2/2015"}, {"title": "ember precompile render function problems", "body": "updated ember htmlbars using ember handlebars everything worked fine compiling templates using gruntembertemplates index template different renders render templatename ember inspector transitioned index transition transition complete uncaught typeerror object function see error inside render function exactly line output template context options weird using htmlbars compiled index template changed html html readable", "num": "10422", "d": "2/2015"}, {"title": "beta active async route bug", "body": "seems like linkto active state async routes updates bit late weird try switch foo bar jsbin", "num": "10421", "d": "2/2015"}, {"title": "access controller view ember", "body": "currently facing problem controller property views undefined previous versions property automatically set corresponding controller behaviour changed ember could find anything changelog maybe something else going wrong app like know start debugging", "num": "10420", "d": "2/2015"}, {"title": "helper test regression call without template compiler loaded", "body": "helper tests started failing seems like failure occurring ember docs nt lot insight yet", "num": "10419", "d": "2/2015"}, {"title": "using modal dialogs undefined error canary", "body": "canary code work yields following error uncaught typeerror read property routename undefined points return thisrender modalname", "num": "10416", "d": "2/2015"}, {"title": "mergedproperties needs documentation", "body": "searching documentation little luck typing emberjscom search box gives api hits typing gives none sure made much difference", "num": "10415", "d": "2/2015"}, {"title": "properties nested objects ember nt fire object key pascalcase", "body": "update property inside object inside properties related wo nt update example update wo nt update included fiddle javascript appcustommodel emberobjectextend workprop function return thisget workval property workval wontworkprop function return thisget wontworkval property wontworkval appindexroute emberrouteextend model function return appcustommodelcreate work val bar wontwork val bar fiddle", "num": "10414", "d": "2/2015"}, {"title": "consider components name valid", "body": "pain point code organization app currently component definitions would like push components folder organizational purposes small sample components organized artwork vertical also willing hear organizational strategies like pods need guidance hesitant move pods unless major positives current info app upgrading canary running embercli working also refactoring application process upgrading canary since using workarounds patterns longer supported thanks", "num": "10407", "d": "2/2015"}, {"title": "typeerror thisbootresolver undefined ember", "body": "seeing error firefox comes ember application function js didbecomeready function thisautoboot environment default hasdom thisdeprecatedinstancesetupeventdispatcher", "num": "10406", "d": "2/2015"}, {"title": "rerender array sorted change properly notified", "body": "demo code js appapplicationcontroller embercontrollerextend anarray sleeping eating pizza programming looking lolcats trigger action array gets sorted created second property make sure first property change console output see computed property receives sorted value recalculate every button click sorting reflected page demo", "num": "10405", "d": "2/2015"}, {"title": "two model instances id", "body": "hi starting ember ember data repeatedly able end two models model store id standard ember data setup rest adapter backed django rest framework api works great however django changes model create update delete send event amqp json serialisation model bridge turns qpid events socketio events ember app listen model change events get push store create update unload delete event unfortunately instances ember app get event including original requestor django serial operations socketio event gets back originally requesting instance app http request finished guessing seems logical every time end model store twice introduce second delay amqp socketio bridge everything works fine presumably push function call store updates model orginally recieved via rest interface second previsouly using happy answer questions help al", "num": "10404", "d": "2/2015"}, {"title": "fresh embercli application nt work ember emberdata", "body": "steps reproduce set bowerjson remove handlebars dependency remove add fix bug handlebars required brocfilejs error get followed seems caused line emberdata updating emberdata help everything seems working fine ember canary", "num": "10403", "d": "2/2015"}, {"title": "broken yield combo inside view layout template", "body": "inside view layout seems yield template gets incorrect context called inside block working fiddle ember see context expected lead controller lead view instance code get code working change layoutname template without block", "num": "10402", "d": "2/2015"}, {"title": "wrong context rendering component instance view helper", "body": "passing view instance view helper context inside view template remains parent demo broken demo working", "num": "10401", "d": "2/2015"}, {"title": "uncaught error assertion failed fragment pushed buffer contains content", "body": "hey upgrading app ember get following error message", "num": "10400", "d": "2/2015"}, {"title": "error autolocation", "body": "code causes following error please note jsbin nt really support history location jsbin still demonstrates error", "num": "10396", "d": "2/2015"}, {"title": "bindattr inserting attributes falsy values", "body": "attribute falsy value attribute get inserted element tag stringified version value eg rendered jsbin reproduction rendered output would jsbin cc rwjblue", "num": "10395", "d": "2/2015"}, {"title": "register helpers ember", "body": "changelog ember cleanup htmlbars public api claims use create helper however function actually private preferred way registering helper", "num": "10394", "d": "2/2015"}, {"title": "html character entities escaped linkto helper", "body": "used work fine earlier nt using inline version html character entities escaped example go go rarr obviously get around using block form wanted share", "num": "10392", "d": "2/2015"}, {"title": "acceptance tests cause error destroying app teardown function", "body": "ember acceptance tests generates error calling method", "num": "10390", "d": "2/2015"}, {"title": "emberdata failing test teardown", "body": "migrating shell app beta beta passing test fails error emberdata note point app using emberdata models record arrays created emberdata beta working assumption needs null check record arrays process aftereach failed site navigation requested keys value object ms source keys native code ember data lib system recordarraymanager values willdestroy superwrapper invoke flush flush end run run willdestroy superwrapper invoke flush flush end run run teardown runhook process begin", "num": "10388", "d": "2/2015"}, {"title": "documentation request confusing behavior async realtionships", "body": "loading related async models using helper confusing documentation able return promise related model hook route related models resolved template rendered given router models entering url loading page fetches related models navigating route via helper fetch related models js routerjs routermap function thisresource index path function thisresource nodes function thisresource node path nodes nodeid routesnodejs export default emberrouteextend aftermodel function model var promise modelget relatedmodels return promise modelsnodejs import ds emberdata export default dsmodelextend type dsattr string name dsattr string relatedmodels dshasmany relatedmodel async true modelsrelatedmodeljs import ds emberdata export default dsmodelextend name dsattr string node dsbelongsto node async true expected behavior documentation updated figure fetch access related model click link related models called", "num": "10385", "d": "2/2015"}, {"title": "cps recomputeare accessible destroyed objects", "body": "removal meta destroying object would render cp still try cause cp recompute release canary notice canary version actually returning cp", "num": "10383", "d": "2/2015"}, {"title": "build failed file emberhtmlbarstestshelpersviewtestjscstestjs", "body": "trying build latest master get build error jscs stack trace rwjblue hunch related dependency update", "num": "10378", "d": "2/2015"}, {"title": "custom attributes added via attributebindings always lowercase", "body": "example generating following dom inspector html note property added cased beta jsbin canary jsbin", "num": "10376", "d": "2/2015"}, {"title": "ca nt access service another service documentation", "body": "done controllers initializer register time using embercli generate service blueprint also makes initializer another service services access even use like export function initialize container application applicationinject route first service first applicationinject controller first service first applicationinject view first service first export default name firstservice initialize initialize export function initialize container application applicationinject route geoservice service geo applicationinject component geoservice service geo export default name geoservice firstservice initialize initialize services accessible route firstservice accessible geoservice misspell firstservice ember breaks saying service know evaluated makes difference name accurate seems issue might logic depends register saw service generation blueprint missing register line like controllers says nt need services infer change logs embercli ember docs make reference using controllers service nothing find services embercli generates make depend services api docs entry service nt tell anything either feature finished using regular controller register bug filed embercli way generates services initializers", "num": "10374", "d": "2/2015"}, {"title": "issue nesting index route inside resource specified path", "body": "sure explain happening stumbled uppon issue trying make jsbin example afaik jsbin print templates fails nest inside seems break something", "num": "10371", "d": "2/2015"}, {"title": "noncontext switching switches context inside loop", "body": "following controllers javascript appfooscontroller emberarraycontrollerextend itemcontroller foo appfoocontroller embercontrollerextend following template template since using noncontextswitching versions helpers expect every namely instead first two statements print third prints bug completely misunderstanding something jsbin", "num": "10370", "d": "2/2015"}, {"title": "href attribute svg image element updated template", "body": "handlebar template href attribute image element inside svg bound property controller property set data uri ie complete image data encoded property string setup worked ember ember minimal example change version ember see expected image", "num": "10368", "d": "2/2015"}, {"title": "model unit tests different", "body": "see discussion stackoverflow model unit test objects returned encountered bug upgrading nonembercli project embercli sure whether bug lies emberjs embercli even emberqunit", "num": "10367", "d": "2/2015"}, {"title": "asynchronous routes cause wonky linkto behaviour nested", "body": "pattern previously used mark outer html tag eg tag rather link something like worked perfectly fine going back think even broken canary still works fine current beta route asynchronous clicking transitions page perfectly fine classes updated solution add inner like regression expected one sure changing nt exactly intended api know pattern used wild wanted bring attention noted synchronous transitions exhibit problem jsbin", "num": "10366", "d": "2/2015"}, {"title": "reopen nt apply previously created objects new object created", "body": "hi trouble getting reopen apply previously created objects jsbin demonstrates issue appears calling class new properties applied new object class created also appears manually invoking rather creating new object also apply new properties previously created objects", "num": "10364", "d": "2/2015"}, {"title": "feature debounce embercomputed property", "body": "idea implementing emberrundebounce bit cumbersome needed certain cases propose willing much legwork skills allow debounce becomes part embercomputed api example would allow filteredarray treated computed property templates etc would delayed seconds debounce would defining default context would open would could allow configurable open ideas feel improved please let know terrible idea great idea etc first time contributor wrong please let know", "num": "10361", "d": "2/2015"}, {"title": "issue linkto helper causing page freezes", "body": "ember version recently encountered issue rendering particular view causing browser slow eventually freeze bit digging culprit turned following line cases expected null turned root cause triggered browser freeze could nt find anything docs explain would handle ui would render empty string expected find strange would cause browser freeze give context lefthand side page navigation panel lists models collection clicking links show action resource issue nt occur first seems build clicking links lefthand nav container let know anymore info code post help", "num": "10360", "d": "2/2015"}, {"title": "ca nt use xml namespaces component attribute names", "body": "code applyattributebindings function buffer attributebindings var attributevalue var unspecifiedattributebindings thisunspecifiedattributebindings thisunspecifiedattributebindings trying create component uses xml namespace eg xlink href code splits attribute name improperly resulting output xlink instead xlink href looking ember jquery code ca nt find way escape colon make ember happy", "num": "10359", "d": "2/2015"}, {"title": "ca nt use xmlns component attributes", "body": "code applyattributebindings function buffer attributebindings var attributevalue var unspecifiedattributebindings thisunspecifiedattributebindings thisunspecifiedattributebindings trying create component uses xml namespace eg xlink href code splits attribute name improperly resulting output xlink instead xlink href looking ember jquery code ca nt find way escape colon make ember happy", "num": "10358", "d": "2/2015"}, {"title": "issue nested query params objectcontroller", "body": "app describe nested query params application controller query param used across entire app routescontrollers utilize query params noticed today app recently upgraded embercanary htmlbars nt proven yet issue new versions using helper queryparams specify queryparams current controller queryparams application controller actually cleared link clicked noticed happening know deprecated unsure yet could causing issues figured go ahead open ticket jsbin demonstrating issue notice selecting color try select shape clears previous query param", "num": "10357", "d": "2/2015"}, {"title": "accidental creation", "body": "edit accidentally created issue", "num": "10356", "d": "2/2015"}, {"title": "unknown helper error raised", "body": "block hook raise assertion throw error call helper exist see currently try use helper available get cryptic error calling undefined", "num": "10355", "d": "2/2015"}, {"title": "link arraycontroller fails context object", "body": "using linkto object context route extracts array object ember gives following error going directly url well jsfiddle", "num": "10354", "d": "2/2015"}, {"title": "emberprod contains asserts", "body": "example suspect provides us better cycle support modules confusing defeaturify believe remove assert statements", "num": "10347", "d": "2/2015"}, {"title": "index range error transitioning routes", "body": "common error ember application one presumably happens user transitions one routes happens often production much rarer development tells might due number elements array thought maybe bug still happens newest version ember nt reliable way triggering error switch back forth lot stack trace sure start looking one", "num": "10343", "d": "2/2015"}, {"title": "compatibility class syntax", "body": "would great feature usable people using embercli kind work would need go make possible x align decorators stability x loose mode proto nt support x constructor vs init vs suspect new form new behaviour would prefer fire", "num": "10341", "d": "2/2015"}, {"title": "new dependency injection syntax counterintuitive", "body": "watched great talk ember ebryn linked time mark starts talking new dependency injection system great apart little detail know probably little late individual opinion importance heavily disagree logic implementation example ebryn talking js export default embercontrollerextend anothercontroller emberinjectcontroller injects anothercontoller anothercontroller export default embercontrollerextend anothercontroller emberinjectcontroller foo injects anothercontroller foo take look version notice attribute name alias left hand side controller address right hand side new syntax exact opposite goes general idea javascript syntax always assign right hand value left hand variable attribute way around make obvious js plain old js way right hand side assigned left hand side var foo anothercontroller counter intuitive wrong injection way left hand side supposed assigned right hand side anothercontroller var foo", "num": "10339", "d": "2/2015"}, {"title": "ember helpers", "body": "using canary able use htmlbars bounds updated recent canary version everything stopped working caused helpersjs following thrown using embercli", "num": "10333", "d": "2/2015"}, {"body": "nt appear bug rather question request help stackoverflow discuss forum venues facilitate better recommend continuing discussion cross linking back", "d": "2/2015"}, {"body": "confirmed bug", "d": "2/2015"}, {"body": "provide jsbin demonstrates issue release canary reopen", "d": "2/2015"}, {"body": "fwiw use foundation problems w grid prior versions ember ran uses metamorph script tags foundation use lastchild sibling selector", "d": "2/2015"}, {"body": "would nice cc machty", "d": "2/2015"}, {"body": "seems like good idea work done router moment touches stuff keep mind dig private api something hacky like pretty sure errored transition looking probably stashing approach could try", "d": "2/2015"}, {"body": "checked possible use unlimited times clear user entered value", "d": "2/2015"}, {"body": "take look hours one broke", "d": "2/2015"}, {"body": "pretty sure know write test submit patch bit", "d": "2/2015"}, {"body": "nice thanks raytiley", "d": "2/2015"}, {"body": "seems like regression", "d": "2/2015"}, {"body": "playing around looks like commit broke previous commit works expected basing travis builds master since way know get builds throw jsbin willing put sometime figure anyone point right direction", "d": "2/2015"}, {"body": "caused changes wycats tomdale ring bell", "d": "2/2015"}, {"body": "tried master works fine", "d": "2/2015"}, {"body": "found related commits seem like main one way build ember changed lot ember might hack around manually add embertemplatecompiler right place", "d": "2/2015"}, {"body": "irc", "d": "2/2015"}, {"body": "post example unit test", "d": "2/2015"}, {"body": "digging source code seems like error could intentional intentional must wrap roots async runloop variantvalueselected function var emberrun function emberrunscheduleonce afterrender thatsetproductvariation observes childcontrollercollection eachvalue also incorrect suggest referring help make correct choice questions like arise please feel free open stackoverflow question cross link", "d": "2/2015"}, {"body": "thanks posted stackoverflow question since little confused incorrect statement read runloop docs nt sure pointing", "d": "2/2015"}, {"body": "initializers entities going break many things ideally want let app assemble lookups", "d": "2/2015"}, {"body": "zyllorion call transitionto application initialized last two cases lookup happens initialization right think similar code works app may try debug app pausing including caught exceptions maybe something fails apps silently also way control order initializers loaded using", "d": "2/2015"}, {"body": "well found solution setup within application router rather initialiser help others continue stefanpenner know another way access router instance container instance force transition outside ember please let know happily look router fully initialised find documentation guarantee happens orkon transitionto run manually well ember initialises transition internally ember fine linkto etc think may creating new instance router initialisation", "d": "2/2015"}, {"body": "zyllorion make lookup right transition created jsbin similar works app", "d": "2/2015"}, {"body": "looks like eagerly copying properties instance initializers run easy enough set initializers run everything continue work", "d": "2/2015"}, {"body": "seems like something make github aware", "d": "2/2015"}, {"body": "lol double outlet fun think make top level name reserved similar", "d": "2/2015"}, {"body": "agree fixed simply removing resource defined router fast reactions way", "d": "2/2015"}, {"body": "thought totally crazy components always need tag moment right however seems irc many people using behaviour great either add assertion tagname required document feature supported many people actually seem using supported would actually quite useful", "d": "2/2015"}, {"body": "duizendnegen using gives component element therefore return expect bug caveat using tagless viewscomponents alexspeller tagless viewscomponents used quite extensively internally anything extends using main reason documented illustrated exact issue get element means work properly also means dom events folks would normally expect get fired things like caughthandled element present listen events tldr support tagless viewscomponents whole slew caveats trivially explained batted around idea making something could extend would provide real documentation caveats", "d": "2/2015"}, {"body": "submitted add helpful assertion calling tagless viewcomponent", "d": "2/2015"}, {"body": "cc tomdale perhaps fastboot collateral", "d": "2/2015"}, {"body": "definitely regression likely caused one pr try dig bit later evening", "d": "2/2015"}, {"body": "almost certainly related work kept particular api mind easy fix likely dumb oversight part", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "likely needs", "d": "2/2015"}, {"body": "nt see router registered subsequently resolved code nm resolves default time go sleep guess", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "nice", "d": "2/2015"}, {"body": "isolate jsbin please", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "want questiontext updated whenever questioncategory selected select box think missing piece code example also ids model unique", "d": "2/2015"}, {"body": "sorry really works problem select customized", "d": "2/2015"}, {"body": "pretty sure nt bug according qp guides inside articles route changes category property articlescontroller cause url update query param default query param property change wo nt cause full router transition ie wo nt call model hooks setupcontroller etc update url returns initial params route transition since never actual transition returns initial value upon entering route updated one", "d": "2/2015"}, {"body": "sounds like bit unusual setup point suggest asking question stackoverflow see approaching issue correct way", "d": "2/2015"}, {"body": "mentioned confirmed mdn void element permitted content issue original jsbin component default contains layout amounts adds empty text nodes cause error gets around setting using built base class setting fix issue original jsbin", "d": "2/2015"}, {"body": "course many ways get around issue still exist ember probably add empty test nodes void elements guess complex fix minimum update docs throw warning component tag set void element currently using one addon sets input component base name sure many developers idea issue devtools issues enormously hard debug", "d": "2/2015"}, {"body": "course many ways get around issue still exist yes likely millions ways code write app could cause problem cost pay supporting old platform using normal mechanisms get bound ember extending works properly ember probably add empty test nodes void elements guess complex fix may possible think time think definitely avoid adding text nodes supplied template aka template block component", "d": "2/2015"}, {"body": "rwjblue added take look", "d": "2/2015"}, {"body": "works reproduce jsbin", "d": "2/2015"}, {"body": "ca nt use embercli instead ember starter kit check source code", "d": "2/2015"}, {"body": "repo helpful thx comrade see behavior described top post yet errors console looks like legit bug log", "d": "2/2015"}, {"body": "makdi gave pretty specific example trigger issue app general helpful put together simple app jsbin reproduces problem expectation put entire app jsbin", "d": "2/2015"}, {"body": "clear normally realistic us jump code track bugs simplified reproduction jsbin pretty essential prompt resolution issues", "d": "2/2015"}, {"body": "rdossantos seeing behavior jsbins latest chrome double check potentially update steps reproduce", "d": "2/2015"}, {"body": "latest canary build fixes issue", "d": "2/2015"}, {"body": "wooho", "d": "2/2015"}, {"body": "think resolver works fine resolves factory problem container knowledge rules specific resolver using container uses string comparison determine factory andor instance cached case resolver dashized underscore values resolve could imagine exotic resolver actually different files think ultimately consequence comes flexibility design would say best bet use constant camelcase naming across app", "d": "2/2015"}, {"body": "already use consistent naming suggested camel case issue faced setup using therefore automatically resolved ember provided first parameter another controller also needed provided controller instead ending instance every place different instances could build another jsbin thought former summed", "d": "2/2015"}, {"body": "hyphenated naming standard ember module approach standard ember defaultresolver method ideally address problem describing failing unit test would good way testdrive fix", "d": "2/2015"}, {"body": "sorry perhaps misunderstood reason nt using controller", "d": "2/2015"}, {"body": "workmanw reason maybe reason failing find guidelines syntax double worded controllers making things overly complicated unamused another jsbin precisely reproduces experienced behaviour hopefully code tell better lukemelia wanted know whether behaviour expected adding tests work relevant test", "d": "2/2015"}, {"body": "xcambar definitely bug", "d": "2/2015"}, {"body": "hope like", "d": "2/2015"}, {"body": "nitpick dasherized foobar camelcased foobar anyway dasherizing probably best default practice", "d": "2/2015"}, {"body": "correction say dasherizing best default embercli apps standard going forwards also suspect use going away nevertheless see improve", "d": "2/2015"}, {"body": "computed properties ember recompute values eagerly instead dependent key changes marked invalid consumed recompute ember nt know observer going every computed property dependent key computing eagerly compare values would often wasteful observers observe changes paths ember know observed path changed thus fires observer execution observer causes recomputation occur second example may inaccurate colored fact used template would need make jsbin discuss detail want something value really changed suggest store last value compare subsequent observer calls example beforeobserver deprecation guide", "d": "2/2015"}, {"body": "closing favor please keep eye progress", "d": "2/2015"}, {"body": "martinthogersen possible today without breaking dependency injections must appropriate hook case etc general always aim keep routes fairly stateless", "d": "2/2015"}, {"body": "mixonic perhaps creative creating listview want write little code possible order create sortable template queryparams built mixin takes care everything including template ember needs controller queryparams make work nt want add controller routes nt write import mixinlistroute mixinsmixinlistroute export default emberrouteextend mixinlistroute routename tourcategoriesindex needed available init model function return thisstorefind tourcategory figured need create controller init defined user order make queryparams work properly better way export default embermixincreate init function var fullname controller thisroutename var currentcontroller thiscontainerlookup fullname currentcontroller var f thiscontainerlookupfactory controller basic extend isgenerated true queryparams emberkeys thisget queryparams tostring function return generated thisroutename controller", "d": "2/2015"}, {"body": "martinthogersen maybe question better suited listview issues still pretty confused trying achieve immediate thought may missing call mixin method", "d": "2/2015"}, {"body": "mixonic question related auto generating controller nt use listviews project need autogenerate controller set queryparams controller way made work posted issue looks like queryparams initialized early doesnt allow updating controller created create controller queryparams setting route init method regarding missing super right added", "d": "2/2015"}, {"body": "jsbin nt accurately reproduce bug mention", "d": "2/2015"}, {"body": "locks checked chromefirefox transition promise always gets rejected additionally url params set window location", "d": "2/2015"}, {"body": "cc machty", "d": "2/2015"}, {"body": "gigafied cane push patch", "d": "2/2015"}, {"body": "gigafied template look like trouble understanding would happen wild", "d": "2/2015"}, {"body": "think might specific know official release listview supports ember maybe issue template pretty simple", "d": "2/2015"}, {"body": "gigafied trying recreate error test worried wo nt actually fix issue unless reproduction try jsbin today", "d": "2/2015"}, {"body": "tough time finding case fires makes testing fix pretty tough", "d": "2/2015"}, {"body": "yeah recycles views scroll applies new contextcontroller trying repro jsbin", "d": "2/2015"}, {"body": "ok able repro stefanpenner fixed listview ember", "d": "2/2015"}, {"body": "gigafied also open listview issue need find time dig see whats borked", "d": "2/2015"}, {"body": "heads seems ember data question bug ember ember data issues ember data sure use ember data issue tracker issues ember use issue tracker questions help recommend using stack overflow much better knowledge sharing venue additionally keep issue tracker focus run going close issue recommend open stackoverflow question please cross link answer questions stackoverflow", "d": "2/2015"}, {"body": "thanks sorry confusion", "d": "2/2015"}, {"body": "oops meant create embercli sorry", "d": "2/2015"}, {"body": "looks like duplicate fixed canary beta release fix", "d": "2/2015"}, {"body": "ebryn thanks work", "d": "2/2015"}, {"body": "would helpful could detect presence namespace throw error passed namespace view helper factory type likely meant view foo bar", "d": "2/2015"}, {"body": "stefanpenner thinking little would agree assertion better suited embercli emberresolver instead view helper", "d": "2/2015"}, {"body": "jasonmit convinced", "d": "2/2015"}, {"body": "also tried replacing change", "d": "2/2015"}, {"body": "test passes js var application moduleforcomponent incrementbutton beforeeach function application startapp aftereach function emberrun application destroy application null test works function assert assertexpect var component thissubject thisrender assertequal componentget count count clicking click button andthen function assertequal componentget count count clicking moving call previously works move previously test fails seems like bug ember ember test helpers aside feels bit strange start app like component test see people agree issue", "d": "2/2015"}, {"body": "kimroen great research feels bit strange start app like component test agree though nt know else test behavior event handlers suspect appstart required set ember global event dispatcher", "d": "2/2015"}, {"body": "jamesarosen booting app test component", "d": "2/2015"}, {"body": "nt care app booting care test helpers like former seemed way get latter", "d": "2/2015"}, {"body": "jamesarosen clarify nt work nt boot app", "d": "2/2015"}, {"body": "nt think booting app requirement testing components seems like bug", "d": "2/2015"}, {"body": "wagenet helpers needed specifically added window calling require app completely agree would nice able use unit testing component try dig bit see could support worlds", "d": "2/2015"}, {"body": "also issues emberselect version failing test would nice actually surprised passed tests", "d": "2/2015"}, {"body": "trying write test thinking problem might little subtler originally thought nt look emberselect supposed support array promises content support property set promise way ran trying upgrade old codebase still using deferredmixin places including case content select nt actually promises treated incorrectly property case one deferredmixin maybe better way emberselect determine something promise think post better idea", "d": "2/2015"}, {"body": "one nondeprecated way trigger issue appears use array objectproxies promiseproxymixin content select least nondeprecated clear supported use emberselect anyone know", "d": "2/2015"}, {"body": "certainly duplicate", "d": "2/2015"}, {"body": "stefanpenner agree clear actually means expect issues emberselect fixed rewritten scratch", "d": "2/2015"}, {"body": "nbudin patches fix bugs absolutely accepted glad help folks minefield pr keeping many issues open piece known issues intend replace drags ability triage issues", "d": "2/2015"}, {"body": "rwjblue thanks much thinking trying make emberselect support thenables content make fork let know anything worth looking", "d": "2/2015"}, {"body": "subexpressions syntax allowing calling helpers inside handlebars expressions like helper params means leave parens work fine subexpressions required cases like know example kinda silly correct wrong though", "d": "2/2015"}, {"body": "also even suggesting valid usecase issue likely belongs handlebars repo", "d": "2/2015"}, {"body": "right stupid calling without parentheses totally works", "d": "2/2015"}, {"body": "istefo maybe think getting convinced compiler ignore parens instead throwing error", "d": "2/2015"}, {"body": "cahbriangantzler applications built previously relying default proxying behavior would broken define controller must create instance due semver requirements generated controller warn attempt use proxying behavior", "d": "2/2015"}, {"body": "k makes sense mean time manually create controllers order get rid deprecations know good problem creating another file want remove deprecations know im ready means creating controllers nt might want add note somewhere others know well", "d": "2/2015"}, {"body": "create controllers prevent deprecations nt use properties defined controller trigger proxying behaviors deprecations", "d": "2/2015"}, {"body": "getting following warning deprecation emberobjectcontroller deprecated please use embercontroller use seems indicate objectcontroller created using proxy objectcontroller", "d": "2/2015"}, {"body": "sorry appears using objectcontroller still looking arrangedcontent even working", "d": "2/2015"}, {"body": "probably better ask kind question something like stack overflow emberjs issues framework bugs", "d": "2/2015"}, {"body": "reopen stackoverflowcom usually pretty active group contributors grateful try tackle kind debugging issues ahacking said try keep issue tracker bugs open stack overflow may want use emberjsjsbincom create reproduceable demo issue thanks", "d": "2/2015"}, {"body": "ok thanksi nt know weather framework bug declared template file depends itemcontroller arraycontrollerbut changed nt notificated update", "d": "2/2015"}, {"body": "surpmillet looks like asking multiple questions think one eachin syntax vs eachas seems something specific behavior another method added focus one would make easier us reply determine bug", "d": "2/2015"}, {"body": "humble addon kindly added test launches assertions run promise fulfilled expecting work js recordsave andthen function ok totally nt assertion run test failed teardown came clever solution refactored questions expectation valid wait complete issue ticket related", "d": "2/2015"}, {"body": "duplicate", "d": "2/2015"}, {"body": "ouch something seems funky suspect may issue", "d": "2/2015"}, {"body": "cc", "d": "2/2015"}, {"body": "thanks bug report looks like triggered nondefault renders main render variation example works using nonnamed outlet top investigate", "d": "2/2015"}, {"body": "thanks fix things easy enough change default outlet requirement structure app year may need make documentation change log beta somewhere maybe since nt see anyone else saying borked", "d": "2/2015"}, {"body": "think still bug get fixed instead documented", "d": "2/2015"}, {"body": "since nt see anyone else saying borked affects application well adding plain outlet fixes errors", "d": "2/2015"}, {"body": "another issue think may related templates name main render hooks like didinsertelement run output empty sure related showed time issue", "d": "2/2015"}, {"body": "since nt see anyone else saying borked happening application well", "d": "2/2015"}, {"body": "bndw html may work entered browser actually valid using validator service see error suggestion encoded agree better error message likely tracked", "d": "2/2015"}, {"body": "mixonic good point move htmlbars", "d": "2/2015"}, {"body": "works put options", "d": "2/2015"}, {"body": "omghax example correct block param always last parameter closing", "d": "2/2015"}, {"body": "yay got first error happened teardown test second assertion test failed due fact modal closed reason happened using bootstrap process closing modal click modal background bootstrap performs animations emits event meaning modal hidden component wrapper listen event trigger action problem seems click triggers event kinda asynchronously really sure going matter kind asynchrony detected result test finishes modal actually closes solution replace execution synchronous neither assertion teardown fail", "d": "2/2015"}, {"body": "hi baskarsugumar may implemented using wonderful lib please check please post details issue something else", "d": "2/2015"}, {"body": "sort question better suited stack overflow irc try keep issues actual bugs ember closing issue feel free post back post", "d": "2/2015"}, {"body": "sort question better suited stack overflow irc try keep issues actual bugs ember closing issue feel free post back post also need open two issues thing seems like duplicate", "d": "2/2015"}, {"body": "current version compiler ember emer expects either ember ember replace ember ember ember code", "d": "2/2015"}, {"body": "sorry issues fix asap", "d": "2/2015"}, {"body": "fix", "d": "2/2015"}, {"body": "ya good point get updated", "d": "2/2015"}, {"body": "updated thanks reminder", "d": "2/2015"}, {"body": "yeah think need new release ember data address canarybeta concerns releasing new version today igort bmac one issues requires new release", "d": "2/2015"}, {"body": "yes fixed pr already merged canary", "d": "2/2015"}, {"body": "closing favor emberjsdata look later today", "d": "2/2015"}, {"body": "awesome thanks", "d": "2/2015"}, {"body": "ie nt support ember issue references", "d": "2/2015"}, {"body": "rwjblue issue ember previously nt exist ie reverts text input", "d": "2/2015"}, {"body": "hmm creating dom directly dom created invalid given platform sure path fixing would reopen others chime might fixable without megahacks mixonic love thoughts", "d": "2/2015"}, {"body": "apologize wo nt able look detail tuesday coming week hard get context limited resources right quantumking inputs revert text box handle differing value formats coming input type text text input date time input strict final formatting sounds like regardless ember need testing support handling return values differently really want support think several places ember explode use unsupported api example use svg explode creating entire alternative rendering solution svg viable think creating browserdoesntsupportthis fallbacks make features appear work actually behave good practice across board tl dr make input formats fallback text cause crashes also actually supposed would bad merely illusion supporting imo supporting need really support handle cases sun feb robert jackson wrote reopened reply email directly view github links", "d": "2/2015"}, {"body": "mixonic using time input preview screens mobile app mobile app code reused website create preview particular case need process value input preview serves visual demonstration would suck maintain two separate codebases include conditional ie mobile end", "d": "2/2015"}, {"body": "inspecting dom tree ie nt change input text", "d": "2/2015"}, {"body": "ran input type email degradation text would totally acceptable would totally understand gets marked wo nt fix would nice get something cryptic error like meantime working around binding input type computed property jquery obviously wo nt work things like datetime input though", "d": "2/2015"}, {"body": "definitely works properly latest beta build closing demonstrated work latest beta builds happy reopen reproduction demonstrating issue", "d": "2/2015"}, {"body": "rwjblue make difference precompiling", "d": "2/2015"}, {"body": "quantumking yep ca nt good news wrote blog", "d": "2/2015"}, {"body": "rwjblue got working cheers", "d": "2/2015"}, {"body": "found reason none html code script tag links embertemplatecompilerjs emberqunitmainjs issues refused execute script mime type textplain executable strict mime type checking enabled gets changed work", "d": "2/2015"}, {"body": "atsjj thanks comparison discussion template output probably done htmlbars though say big changes compiled template output coming make templates much smaller even handlebars templates going close issue already consider work address well way please reopen missed something", "d": "2/2015"}, {"body": "watching hell issue going awesome lands thanks taking look issue", "d": "2/2015"}, {"body": "smaller completely minimal still include fragment building portion inline atsjj compare gzipped file sizes well local repetition createdocumentfragment createtextnode etc compress well", "d": "2/2015"}, {"body": "mmun great point ember handlebars bytes compressed gzip ember htmlbars bytes compressed gzip", "d": "2/2015"}, {"body": "router nt support urls fragments proper sense hash seeing used backwards compatibility older clients see", "d": "2/2015"}, {"body": "mean nt need support older clients create noncompliant urls tell ember handle compliant way", "d": "2/2015"}, {"body": "use historylocation described docs guides namely router include", "d": "2/2015"}, {"body": "yes sorry makes sense thanks", "d": "2/2015"}, {"body": "need include generated along rest build assets running tests precisely embercli running", "d": "2/2015"}, {"body": "awesome thanks bunch", "d": "2/2015"}, {"body": "duplicate", "d": "2/2015"}, {"body": "jsbins reproducing problem latest canary latest beta seems work properly", "d": "2/2015"}, {"body": "would love try fix push right direction", "d": "2/2015"}, {"body": "reproductions mixonic demonstrations repro canary repro beta stable fine", "d": "2/2015"}, {"body": "submitted add info templates", "d": "2/2015"}, {"body": "please reopen expected version hardcoded many places beta hardcoded versions differ rendering beta unusable", "d": "2/2015"}, {"body": "octagon working properly latest embersource", "d": "2/2015"}, {"body": "thanks writeup unsure goal issue need address something recap others pain points", "d": "2/2015"}, {"body": "recap request wycats stefanpenner", "d": "2/2015"}, {"body": "gotcha thanks definitely things could easier", "d": "2/2015"}, {"body": "ugh impossible manually register hyphenless helper component", "d": "2/2015"}, {"body": "endash read carefully still yes may still register hyphenless helpers", "d": "2/2015"}, {"body": "sorry bit hyperbolic making private api effectively thing intend circulate code beyond projects start discussion arguing merits think several use cases top head extend ember low level conceptually want short hyphenless names", "d": "2/2015"}, {"body": "oh long helpers rereading distinction still nt clear happy get clarification", "d": "2/2015"}, {"body": "endash timevans fill handlebars helpers include dashes possible afraid bump function bypassing linting helper component names longer public still works always issue maybe nt understand", "d": "2/2015"}, {"body": "mixonic", "d": "2/2015"}, {"body": "ah damn right back bummed regular helpers need dashes hopefully republicing api nt far", "d": "2/2015"}, {"body": "hey mixonic rwjblue could limit contributors discussion nt want big political mudslinging thing nt even copyedit issue", "d": "2/2015"}, {"body": "sorry barging first heard", "d": "2/2015"}, {"body": "endash fine nt want blow whole community putting cents", "d": "2/2015"}, {"body": "refers still register nondasherized helper via api supported strong commitment semver fwiw api removed reason locked limiting api decisions past making one internal time explore new options regret may miscommunication behalf wrote release blog posts continuing support apis want clear worked hard ensure apis still work accordance commitment api stability apis kept flux room iterate exciting ideas timevans closed issue wo nt pull back want disengage totally understand definitely thinking political issue want write great software see others keep thanks notes", "d": "2/2015"}, {"body": "mixonic much appreciated like nice set notes improve subsequent releases get notes fleshed fully fine engaging want careful reporting issues", "d": "2/2015"}, {"body": "look forward whole post mortem thanks timevans think use fully understand pain avoid going forward", "d": "2/2015"}, {"body": "ok think done enough cc wycats", "d": "2/2015"}, {"body": "gonvaled definitely intended behavior strings passed definitely considered safe default make strings instances render expected going close issue consider bugfix regression feel free reopen missed something", "d": "2/2015"}, {"body": "mixonic mmmm ok makes sense bit unfortunate working wrong along btw example linked correctly could add correct link help refactor code", "d": "2/2015"}, {"body": "gonvaled doublechecked link time", "d": "2/2015"}, {"body": "mixonic thanks seems ok escapemarkup filter component must return plain string know obtain html string safestring reverse operation safestring htmlstr", "d": "2/2015"}, {"body": "gonvaled familiar component referencing call object get back unescaped value", "d": "2/2015"}, {"body": "mixonic able get working added simple component two test cases good ember safestring see plain strings work safestrings dont bad embercanary safestring see neither plain strings safestrings produce html markup component restore ember canary old behaviour component able show html markup would say issue yet clarified kept open", "d": "2/2015"}, {"body": "using issue prevents us upgrading please reopen", "d": "2/2015"}, {"body": "lolmaus succeeded upgrading stopping use emberselect derived view moving addon refactoring straightforward though plusside getting probably thoroughtested featurecomplete component", "d": "2/2015"}, {"body": "gonvaled issue happen", "d": "2/2015"}, {"body": "know implemented issue", "d": "2/2015"}, {"body": "due morph refactor compiled template follows created morph triggering error mmun would mind reviewing", "d": "2/2015"}, {"body": "jsbin using incompatible versions ember embertemplatecompiler canary", "d": "2/2015"}, {"body": "mmun bingo", "d": "2/2015"}, {"body": "ugh likely due new transpiler sane good catch", "d": "2/2015"}, {"body": "closed", "d": "2/2015"}, {"body": "seems working properly provide reproduction showing seeing", "d": "2/2015"}, {"body": "seems happen controller manually defined added also partial initially thought related partials extending controller problem appears", "d": "2/2015"}, {"body": "following means specifically saying want want use object controller manually defined controller must extend different past versions", "d": "2/2015"}, {"body": "one refactorings performed moving canary deprecation warnings objectcontroller must changed controller clear least documentation deprecation warnings also losing property proxying", "d": "2/2015"}, {"body": "gonvaled reason use property proxying job deprecation warning received started honoring instructs use extend instead definitely need details deprecation guide open issue", "d": "2/2015"}, {"body": "rwjblue fair enough probably oversaw comment objeccontroller controller code get rid obvious warnings appear instantiating controllers probably related since tested templates refactoring anyway working transition canary unfortunately automatic testing realize losing properties guess could bite people clear warning transition guide would help", "d": "2/2015"}, {"body": "cp lazy invalidated something needs pull data imagine following dk chain becomes dirty values also known derived even ultimately computes original value current experience still recompute many scenarios actually works fine wont cause rerenders simple template bindings diff previous new value decide rerender needed basic code actually lives fall short currently dealing complex objects values aware tomdale wycats currently working template rendering side problem although goal server side rendering scooped client side potential help mitigate issue cp side currently paired changeevent contract followed although would breaking change may able reimagine downstream pulls previous newvalue compared didchange emitted newvalue different ultimately side change imagine work simple values arrays objects pathalogical cases may help much unfortunately although may seem simple change likely pretty dramatic without caveats believe template rendering side sufficient context handle complex object case much better although solutions could work together reactive template approach likely near term solution", "d": "2/2015"}, {"body": "scenario problem actually something somewhat difficult compute comparing message text search query thus reevaluating messages even though query nt change seemed bit slow probably attributed slowdown rerenders actually computation slow words consider scenario rerenders issue recomputation property costly bad pattern cp costly compute", "d": "2/2015"}, {"body": "hi octagon raise good point absolutely link new compiler builds page ember run entirely good people volunteering free time project chances team time add link builds page yet interested great opportunity contribute builds page ember app source sure everyone would greatly welcome pull request adding link like pair let know happy work smiley", "d": "2/2015"}, {"body": "going fold website octagon work hard building welcoming civil community framework reliable steady thanks raising website issue", "d": "2/2015"}, {"body": "aexmachina think exception assert would best deep chaining observers perform poorly building ember around idea wo nt need deep observation new codebases", "d": "2/2015"}, {"body": "goal flesh diffing story never need use let alone nested", "d": "2/2015"}, {"body": "awesome sounds great think right throw exception people know", "d": "2/2015"}, {"body": "agreed", "d": "2/2015"}, {"body": "yes please", "d": "2/2015"}, {"body": "remember trying get assertion long time ago huge pain butt gave sure gotten easier", "d": "2/2015"}, {"body": "difficult impossible get assert inline maybe grepbased warning build would suffice", "d": "2/2015"}, {"body": "aliases synchronously link two different properties single object example getsetswatchunwatchaddobserveretc applied redirected applied act key bindings asynchronously link two different properties single object moreover bindings actually change property sides binding contrast aliases proxy property declared binding object model know add two observers side binding one observer case one way bindings schedule synchronization values either side changes specifically either side changes synchronization binding scheduled run loop queue fact usage queue buy us well backburner run loop configured disable observer notifications sync queue coalesce one observer notification effect absorbing churn properties sides binding change many times queue reached another feature bindings deterministically break ties sides binding change consider template imagine component button clicked changes internal property imagine component immediately sends action caught controller causing controller change property assume happens queue reached sides binding changed wins bindings introduce determinism always wins case controller set wins please nt use bindings especially twoway bindings avoided really really like remove entirely ember also recommend using aliases favour writing full dependency key yes verbose makes code much able frankly current implementation bugs regarding observing alias nt use either prefer explicitly passing data via use services", "d": "2/2015"}, {"body": "great response thanks much going bookmarks next confused", "d": "2/2015"}, {"body": "please feel free follow questions ping irc", "d": "2/2015"}, {"body": "awesome thanks okay need funnily enough hit subtle new bug fixed changing binding alias must result something another part codebase changing binding alias", "d": "2/2015"}, {"body": "duplicate", "d": "2/2015"}, {"body": "closing favor issue", "d": "2/2015"}, {"body": "nt supported render deprecated want behavior please use component", "d": "2/2015"}, {"body": "possible cause one addons using nt updated", "d": "2/2015"}, {"body": "got error", "d": "2/2015"}, {"body": "package seems outdated try", "d": "2/2015"}, {"body": "going close based presumption joeruello pointed uptodate library please reopen missed something", "d": "2/2015"}, {"body": "using ember past two months nt problem today downloaded starter kit created new project everything worked fine till installed libraries precompile templates gruntfilejs moduleexports function grunt gruntinitconfig pkg gruntfilereadjson packagejson embertemplates compile options templatebasepath apptemplates files distjstemplatesjs apptemplateshbs watch embertemplates files apptemplateshbs tasks embertemplates examined output files templates compiled correctly get error idea resolve issue nt able find anything helpful internet far someone could clear would really appreciate thanks", "d": "2/2015"}, {"body": "inexuscore robert core team great writeup search gruntembertemplates page follow link pr find looking", "d": "2/2015"}, {"body": "fivetanley yes read post today still trouble compiling templates updated grunt task accordingly templates compiled fine start app get error posted pr clues thanks", "d": "2/2015"}, {"body": "templates htmlbars templates need configure gruntembertemplates path template compiler", "d": "2/2015"}, {"body": "mean adding embertemplatecompilerjs starter kit js folder", "d": "2/2015"}, {"body": "something like following", "d": "2/2015"}, {"body": "references", "d": "2/2015"}, {"body": "rwjblue thank following wrote found wrong important options must specified neither take effect used templatecompilerpath handlebarspath nt work", "d": "2/2015"}, {"body": "found problem view reference instead seems like internal moved", "d": "2/2015"}, {"body": "ember framework currently undergoing significant changes part really easy take care version transition point view really helps aware plans changes follow relevant people twitter read blog posts etc probably starting reading ember rfc would best mentioned many times controllers going away components taking actually deprecates objectcontroller also use views either", "d": "2/2015"}, {"body": "know plans transition components slowly transitioning way large app take time see mention controller property change version wrongly using close issue solved thanks response", "d": "2/2015"}, {"body": "specifically tests use method testing nested components", "d": "2/2015"}, {"body": "mentioned blog posts error message need compile runtime load assuming embercli needwant testing following would work javascript brocfilejs appenv production appimport bowercomponentsemberembertemplatecompilerjs posts", "d": "2/2015"}, {"body": "ah ticket probably still serves good documentation ticket since tests actively failing site example code tests", "d": "2/2015"}, {"body": "slexaxton great point looks like fivetanley opened track one", "d": "2/2015"}, {"body": "noticed problem selenium tests morning nt time debug went back fixed problem", "d": "2/2015"}, {"body": "thanks ilkkao guess team aware problem", "d": "2/2015"}, {"body": "may related recent outlet fixesrefactoring", "d": "2/2015"}, {"body": "bisected problem case use modals exactly instructed maybe example upgraded use canary version demonstrate problem", "d": "2/2015"}, {"body": "nt hard demo click change name see error", "d": "2/2015"}, {"body": "duplicate", "d": "2/2015"}, {"body": "error thrown emberroutinglibsystemroutejs basically rendering outlet route parent route calling guard better solution", "d": "2/2015"}, {"body": "adding guard sufficient work tonight nobody gets first also make sure add regression test case", "d": "2/2015"}, {"body": "fix works opening modals yields uncaught typeerror read property routename undefined", "d": "2/2015"}, {"body": "iamjstates submitted another pr takes care disconnection thanks beta tester added scenarios integration tests never break behaviors people", "d": "2/2015"}, {"body": "worries glad help anyway", "d": "2/2015"}, {"body": "sadly due pretty old way semantics assumes paths starting capital letter globals intend phase concept stuck supporting due semver concerns", "d": "2/2015"}, {"body": "rwjblue add milestone nt want forget one", "d": "2/2015"}, {"body": "issue", "d": "2/2015"}, {"body": "work ember", "d": "2/2015"}, {"body": "curious would resolver know look component sub folder thought pods otherwise functioned predictable structures edit would love feature components currently replace itemcontrollers components", "d": "2/2015"}, {"body": "also unable get work still need dasherized name component nested example moving component work maybe combination component pod structure slash ember ember cli edit seems combination component pod structure nested nature structure throws unfound helper error using template", "d": "2/2015"}, {"body": "working fine still need dasherized name", "d": "2/2015"}, {"body": "made demo repo see commit", "d": "2/2015"}, {"body": "workmanw curious would resolver know look component sub folder thought pods otherwise functioned predictable structures concern nathanpalmer kindly explained issue", "d": "2/2015"}, {"body": "lolmaus yea given subdirectory part name makes sense one thing still curious play htmlbars shed handlebars templates following keep working", "d": "2/2015"}, {"body": "yes also htmlbars stop allowing usage mustaches likely always use curlies things like etc", "d": "2/2015"}, {"body": "rwjblue hey thanks quick reply", "d": "2/2015"}, {"body": "rwjblue think misunderstood would like consider valid would like regex dash slash", "d": "2/2015"}, {"body": "timevans interesting idea flagging discussion next core team meeting", "d": "2/2015"}, {"body": "thanks", "d": "2/2015"}, {"body": "like", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "seems like might already partially supported emberjsemberjs document path based componenthelper names wycatshandlebarsjs helper names paths", "d": "2/2015"}, {"body": "nathanpalmer nope yet", "d": "2/2015"}, {"body": "found happens appadvancereadiness called without appdeferreadiness firefox", "d": "2/2015"}, {"body": "may previous issue posted", "d": "2/2015"}, {"body": "quantumking unlikely solve issue without jsbin reproduction", "d": "2/2015"}, {"body": "pushing array reflected page well", "d": "2/2015"}, {"body": "changed worked new demo note without template updated believe cache layer template checking new property since template updated", "d": "2/2015"}, {"body": "know setting whole property new object forces rerender point issue ticket able announce property change without clone object stored property without resetting whole property ps thank using bulkier", "d": "2/2015"}, {"body": "rerender observer nt fired cp value respect strict equality recomputes even though array changed mean time ember nt know marcioj suggestion array correct future use array diffing provide ergonomic solution problem", "d": "2/2015"}, {"body": "hey wrong using proper instead update view would nt redraw right please explain andor reopen", "d": "2/2015"}, {"body": "funny thing sort pushobject foo pushed object appears last rest array update still unsorted resulting view demonstrates state array never posessed example initial state sort get pushobject get view demonstrates mmun say problem due compares references objects unless primitives arrays nt primitives thus would expect update view magic behind", "d": "2/2015"}, {"body": "behaviour also correct two ways collection view update complete rerender partial rerender complete rerender happen content array reference changes detected using regular property observers returning array reference cp preventing kind rerender partial rerender happen whenever called content array detected using array observers desugars etc case call performing partial rerender last position diffing container views replace two behaviours single consolidated update strategy easier reason", "d": "2/2015"}, {"body": "mmun instead property observers detect change applied without", "d": "2/2015"}, {"body": "use depends want mutate original array", "d": "2/2015"}, {"body": "mmun mean impossible notify observers object changed without replacing different object somehow able announce change without replacing object right", "d": "2/2015"}, {"body": "lolmaus", "d": "2/2015"}, {"body": "could try replacing array nt know works nt see value", "d": "2/2015"}, {"body": "thank clarifications mmun last question close behavior counterintuitive contradicts computed properties behave problem recalculating ignores announcements looks like legit problem worth addressing", "d": "2/2015"}, {"body": "working expected nt ignoring announcements announcement made value nt change problem inflexibility observing changes array nothing", "d": "2/2015"}, {"body": "announcement announcement computed properties understand recalculate properly problem inflexibility observing changes array fires every time nt even need jsbin see computed property logs changed array every time click button nothing place far fails notice", "d": "2/2015"}, {"body": "lolmaus computed properties optimization prevent notifying changed return object", "d": "2/2015"}, {"body": "ebryn linked optimization within method think nothing", "d": "2/2015"}, {"body": "apologies misread situation looking seems counterintuitive cc krisselden", "d": "2/2015"}, {"body": "problem bound changes calls value content observers notified see generally time binding synchronizes value already observers receiving end called", "d": "2/2015"}, {"body": "issue nt unique happens across binding example binding value component", "d": "2/2015"}, {"body": "aha suspected related shortcircuiting nt reference right place p", "d": "2/2015"}, {"body": "behavior makes sense reason pushing object works even though reference array add arrayobserver check problem sort mutate array nt notify arrayobservers sort native true nonnative methods like sortby sure good solution", "d": "2/2015"}, {"body": "lolmaus really wanted force without creating new array could call arraywillchangearraydidchange instead property counterparts see", "d": "2/2015"}, {"body": "miguelmadero da real mvp", "d": "2/2015"}, {"body": "sorry put data repo moving", "d": "2/2015"}, {"body": "ran issue seems borked beta tag running works also think update emberdata", "d": "2/2015"}, {"body": "rwjblue setup johanobergman recently trying get ready ember updated beta days ago followed directions render htmlbars removing hbstemplatecompiler everything okay realized morning dropped beta went upgrade removed ran nt clean npm though error happened ended using suggested shortly looked like beta tag nt quite right nt sure nt come back investigate", "d": "2/2015"}, {"body": "ember cli ships ember ember data default errors boots fine going close happily reopen still issue", "d": "2/2015"}, {"body": "likely related", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "line causing context overwritten one think issue component passed nt controller context gets overwritten components context context nt get overwritten", "d": "2/2015"}, {"body": "believe underlying issue also", "d": "2/2015"}, {"body": "also noticed properties set view helper carry eg", "d": "2/2015"}, {"body": "make small reproduction jsbin repo try help track", "d": "2/2015"}, {"body": "try reproduce something small scale really hard reproduce idea comes really strange app works fine immediately breaks launching ember", "d": "2/2015"}, {"body": "meanwhile found error thrown code located emberdebugjs renderbuffer strange part instance override render method view template markdown also seems legit worked fine maybe helps bit", "d": "2/2015"}, {"body": "problem strange thing value thisbuffer supposed contain content generated handlebars removed handlebars updating", "d": "2/2015"}, {"body": "number ways come across issue mentioned earlier need reproduction jsbin repo able help", "d": "2/2015"}, {"body": "traced issue app depends heavily seems helper break app running app think also relates issue fyi using latest embercli", "d": "2/2015"}, {"body": "getting rid react used component renderfunc problem went away everything works fine hurray assume something wrong components thinking bit removing react application chromedevelopertools stopped crashing time inspecting svg rendered component maybe react somehow behaves strange nasty domtrickery confuses emberchromedevelopertools specific circumstances cc", "d": "2/2015"}, {"body": "sergetab maybe related using version see problems using current beta", "d": "2/2015"}, {"body": "fpauser traced case caused component overridden yield function switch context luckily new syntax yield nt need anymore problem solved", "d": "2/2015"}, {"body": "ok problems solved issue closed", "d": "2/2015"}, {"body": "sergetab thanks bumped well also overriding yield components expose keyword knew needed remove upgrade nt done yet nt traced source problem", "d": "2/2015"}, {"body": "caused changes", "d": "2/2015"}, {"body": "caused missing statement working fix", "d": "2/2015"}, {"body": "going consider regression include fix new attributes rules propfirst run browsers process internally set string going keep behavior new bindings however useless consistent attrs handled new world case nt want break semver work patch removes src value", "d": "2/2015"}, {"body": "awesome thanks quick response switch binding syntax account conditionals ensuring properties default works want clarify radar time comes upgrade smile", "d": "2/2015"}, {"body": "switch binding syntax attr prop account nullundefined conditionals ensuring properties default yes plan", "d": "2/2015"}, {"body": "specific scenario best pattern seems using interpolated version value value interpolation occurs join converts nothing attr value raw value blank string", "d": "2/2015"}, {"body": "excellent thank congrats shipping htmlbars", "d": "2/2015"}, {"body": "experiencing similar issue images setting value null see chrome try load resource interpreted image transferred mime type texthtml similar issue value initially null nt try load image update model delete image making value null bound false dom still makes call null url wrong", "d": "2/2015"}, {"body": "typeoneerror attempt reproduction jsbin fact url definitely related fixed fact url getting loaded seems suspect though unrelated anything ticket", "d": "2/2015"}, {"body": "mixonic real reliability jsbin seems forward null url request tough repro guessing chrome thing forwardproofed current code thanks", "d": "2/2015"}, {"body": "quantumking registering handlebars style helpers still supported via compatibility mode added performance implications want use htmlbars helpers without using private api would need allow resolved assuming name would following options globals define modules create module contains export default emberhtmlbarsmakeboundhelper function params hash options env helper code", "d": "2/2015"}, {"body": "also trying make work getting htmlbars solution making unbound helpers", "d": "2/2015"}, {"body": "rwjblue mean htmlbars helpers dasherized name registered via public apis previously helped pointed private makes dasherizing real option see renaming issue right info custom helpers htmlbars somewhat dated", "d": "2/2015"}, {"body": "much logic bindings raw values pass unified past releases looks like used consider raw string passed linkto htmlsafe crazy raw strings bound ones differing safeness seems predictable unified unsafe bring discussion may also point need nested helper would usable bound unbound values", "d": "2/2015"}, {"body": "think helper would really well received flagging good contribution fairly straight ahead would need go regular featureflag process", "d": "2/2015"}, {"body": "canary triple curlies version applied every inline helper produce htmlsafe output far see go", "d": "2/2015"}, {"body": "please provide simple reproduction possible try look", "d": "2/2015"}, {"body": "simplest steps reproduce scratch generate new project using embercli update ember version create simple acceptance test modified slightly output js import ember ember import startapp helpersstartapp var application module acceptance dummy setup function application startapp teardown function emberrun application destroy test visiting function visit andthen function equal currentpath index ember visit run tests", "d": "2/2015"}, {"body": "pgengler rwjblue problem ember coming emberdata try emberdata canary bower new version released info check", "d": "2/2015"}, {"body": "working ember data thanks", "d": "2/2015"}, {"body": "technomage could open issue ember data repo suspect changes ember map class", "d": "2/2015"}, {"body": "bmac mentioned belongs emberdata repo closing favor future issue", "d": "2/2015"}, {"body": "technomage ca nt find issue ember data repo work around", "d": "2/2015"}, {"body": "originally try without using template nothing loaded simply iterating like fetch loaded template update make jsbin reproduce", "d": "2/2015"}, {"body": "arg works jsbin using fixtures instead mock server works fixture data already loaded test repo issue", "d": "2/2015"}, {"body": "hey nichoth nt tried repo replaced fixtures backend mock jsbin still works", "d": "2/2015"}, {"body": "nichoth tried repo works without errors console tried opening link refreshing page e entering child route via direct link please elaborate", "d": "2/2015"}, {"body": "clarify nt show errors get data page whether click link enter url link thanks testing", "d": "2/2015"}, {"body": "nichoth think try", "d": "2/2015"}, {"body": "yes jsbin works like would expect interesting try environment soon", "d": "2/2015"}, {"body": "cc ebryn stefanpenner", "d": "2/2015"}, {"body": "consider prior behavior undefined especially since tests verifying behavior nt view computed properties differently simple properties methods neither behavior", "d": "2/2015"}, {"body": "removal descs meta destroying object would render cp undefined still try cause cp recompute alone nt seem like problem resulting issues maybe like change events fire post deletion", "d": "2/2015"}, {"body": "change events fire objects flagged isdestroying point isdestroying teardown without causing lot churn hoping nothing changed regard", "d": "2/2015"}, {"body": "actually whole reason isdestroying set willdestroy run async", "d": "2/2015"}, {"body": "also nt want recreate meta already destroyed", "d": "2/2015"}, {"body": "nt see change event related behavior would changed still get assert emberset ran isdestroying true", "d": "2/2015"}, {"body": "jscs enabled additional checks default caused new style checking errors caused bug crop broccolijscs regarding escaping error messages jscs fix upstream temp fix emberjsbuild", "d": "2/2015"}, {"body": "thanks filing one fixed", "d": "2/2015"}, {"body": "problem builds grinning", "d": "2/2015"}, {"body": "believe culprit", "d": "2/2015"}, {"body": "behavior", "d": "2/2015"}, {"body": "jsbin without ember exhibits behavior javascript var elem documentcreateelement div elemsetattribute somecamelthing foo log elemouterhtml gt", "d": "2/2015"}, {"body": "afaict injecting service routes controllers views injecting routes components nowhere injecting service nt access able something like following hook new services stuff able easily without injections currently behind feature flag canary beta looks coming soon eg access service controller iirc work services", "d": "2/2015"}, {"body": "tried injecting services like routes components gave error saying ca nt supposed inject every single service explicitly error inject service register different type perform typeinjection actually using canary try new style dependency injection thanks", "d": "2/2015"}, {"body": "hmm sure injecting services services currently going directly via container opposed application frowned upon deprecated think eg following app javascript import ember ember export default name current initialize function container var current emberobjectcreate new style stuff better though probably preferred option going forwards", "d": "2/2015"}, {"body": "error inject service register different type perform typeinjection error message terrible nt even solution", "d": "2/2015"}, {"body": "following work correctly please provide example jsinbembercli app based repo gladly take look", "d": "2/2015"}, {"body": "stefanpenner thanks forces every service needs right", "d": "2/2015"}, {"body": "mgenev yes inject something onto constructor injections syntax lazy thus supports cycles", "d": "2/2015"}, {"body": "updating error", "d": "2/2015"}, {"body": "stefanpenner explicitly work thanks opening ticket clean messaging save people time", "d": "2/2015"}, {"body": "mgenev ya suspect docs area needed especially comes best practices", "d": "2/2015"}, {"body": "resources nt match urls routes ember generates routes resources order access resource posts url ember would generate child route postsindex path something like post path applicable index piotrpalek providing index route preventing ember generate default index route route equivalent route index path index ember match like post path applicable index index couple experiments test saying navigate index see templates rendered define path index like route index path opinion ember log error warning attempt override path nested index route value different", "d": "2/2015"}, {"body": "ajadex makes sense thanks explanation", "d": "2/2015"}, {"body": "believe related", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "good news works properly latest beta builds", "d": "2/2015"}, {"body": "yoranbrondsema nearly positive bug please open issues burnt", "d": "2/2015"}, {"body": "thanks posted issue", "d": "2/2015"}, {"body": "aside ideally helper detecting route active could used subexpression would nt nest anymore something like might easier implement helper fix linkto regression amp make nested linkto thing past", "d": "2/2015"}, {"body": "use following technique usually", "d": "2/2015"}, {"body": "brettburley expected behavior additionally actually strongly considering removing ability reopen first instance created extremely dubious error prone functionality source many embers performance issues", "d": "2/2015"}, {"body": "lukemelia take direction chat last nyc meetup inline thoughts", "d": "2/2015"}, {"body": "disconnect description part vs function prototype extension shown example macro would look like think approach better adding additional method implement addon would suggest first others try realworld apps vet api usefulness proves helpful good number people consider addition ember core", "d": "2/2015"}, {"body": "agree lukemelia extending function prototype somewhat aggressive computed property macro might good idea seems convenient want make pr", "d": "2/2015"}, {"body": "excellent agreed thinking would defined computed macro called fnprototype see confusion good call exploring usefulness moving core guess jumping gun cibernox try get pr embercpm beforeduring emberconf thanks guys", "d": "2/2015"}, {"body": "provide demonstration issue maybe jsbin example app", "d": "2/2015"}, {"body": "nt way around eg", "d": "2/2015"}, {"body": "woodzu good point thought looking docs looks like following ways using supported stefanpenner get jsbin soon might days big backlog work go", "d": "2/2015"}, {"body": "sure related definitely kind weird regression related helper canary issue experiencing different op mine random completely arbitrary links cause classes updated upon transition like click link transitions successfully old link remains highlighted try either bisect create jsbin shows issue anyone experienced something similar", "d": "2/2015"}, {"body": "seeing well app recently upgraded specifically link whose text bound input field typing characters field causes browser freeze thrown together quick jsbin demonstrate issue edited updated jsbin url", "d": "2/2015"}, {"body": "downloaded latest starter kit looks like happens well seems problem inline form block form works fine", "d": "2/2015"}, {"body": "burned us bad deploy nt see pushed make jsbins show regression", "d": "2/2015"}, {"body": "fyi info app", "d": "2/2015"}, {"body": "burned us bad deploy nt see pushed make jsbins show regression thanks", "d": "2/2015"}, {"body": "stubled upon confirm omghax mentioned happens inline form quick jsbin edit fixed link press links times see happening looking timeline panel seen link clicked time spent jquery events increases heap size might step try update bin canary later investigate bit cc stefanpenner thanks usual", "d": "2/2015"}, {"body": "sounds related effectively duplicate believe sure current status mixonic", "d": "2/2015"}, {"body": "nt see evidence pr problem fixed questionable code still although discussion nt seem resolved also nt see tests covering scenario yes dupe", "d": "2/2015"}, {"body": "right sorry nt mean suggest fixed already point problem referenced", "d": "2/2015"}, {"body": "closing favor tracking", "d": "2/2015"}, {"body": "jdmarshall please provide background reopen done bunch work namespaced attrs recently", "d": "2/2015"}, {"body": "version code", "d": "2/2015"}, {"body": "opened pull request", "d": "2/2015"}, {"body": "closed", "d": "2/2015"}, {"body": "provided model object model hook called passed object used instead object passing nt match type object previously used model example model order collection lines pass collection lines order link", "d": "2/2015"}, {"body": "sure could sets dynamic part url undefined url becomes see besides scale great amount order lines", "d": "2/2015"}, {"body": "stackoverflow great place get help strategy tips problems like seeing intended behavior nt think consider bug", "d": "2/2015"}, {"body": "another flavor defeatureify recently fixed", "d": "2/2015"}, {"body": "rwjblue awesome lets close canary build updated", "d": "2/2015"}, {"body": "yep", "d": "2/2015"}, {"body": "canary still contains", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "confirm", "d": "2/2015"}, {"body": "updates fix issue travis build used cached package instead defeatureify contains fixes cleared cache retriggered last travis build", "d": "2/2015"}, {"body": "build updated contains debug statements", "d": "2/2015"}, {"body": "leave open stefanpenner ebryn confirm", "d": "2/2015"}, {"body": "lgtm thanks rwjblue", "d": "2/2015"}, {"body": "issue loaded objects sorted displayed using components changed route error sure solved case remember good", "d": "2/2015"}, {"body": "going redoing everywhere using certainly potential way forward particular case", "d": "2/2015"}, {"body": "arraycontroller deprecated anyway maybe better refactor application later", "d": "2/2015"}, {"body": "plan like make sure actually problem people sake superfamiliar functions mentioned stack trace looks pretty generic reduce computed", "d": "2/2015"}, {"body": "kuzirashi seeinghearing arraycontroller deprecated fought toothandnail past interesting find anything emberjscom otherwise", "d": "2/2015"}, {"body": "andrewbranch gathered resources created gist", "d": "2/2015"}, {"body": "kimroen get isolated example try canary", "d": "2/2015"}, {"body": "stefanpenner like said ca nt reliably reproduce bit tricky tell able isolate problem certainly try canary wo nt really able tell works", "d": "2/2015"}, {"body": "kimroen sure time zone try carve time screen share", "d": "2/2015"}, {"body": "stefanpenner move mountains make work ping irc something", "d": "2/2015"}, {"body": "kimroen stefanpenner gmailcom", "d": "2/2015"}, {"body": "kuzirashi thanks", "d": "2/2015"}, {"body": "stefanpenner fairly certain async property changes come setproperties array proxies reduce computed duplicate issues", "d": "2/2015"}, {"body": "using reduce computed functions using want careful change one item time", "d": "2/2015"}, {"body": "stefanpenner fairly certain async property changes come setproperties array proxies reduce computed duplicate issues ya also suspicion get diffing pluginize rc ar", "d": "2/2015"}, {"body": "coming across error well think situation pretty similar kimroen using ember stack trace", "d": "2/2015"}, {"body": "elidupuis smells like rcac sa im pairing kimroen weekend hopefully confirm situation", "d": "2/2015"}, {"body": "stefanpenner awesome thanks glad hitting error wink", "d": "2/2015"}, {"body": "reference bug referred might", "d": "2/2015"}, {"body": "kind related", "d": "2/2015"}, {"body": "wo nt possible js adds annotations also wo nt work said sure want", "d": "2/2015"}, {"body": "comment incorrect result available example notice", "d": "2/2015"}, {"body": "oh god ca nt imagine glad clarification case misunderstanding presentation error", "d": "2/2015"}, {"body": "watched presentation sure said", "d": "2/2015"}, {"body": "fault nt pay enough attention ebryn saying blinded fear stupid syntax sorry buzz", "d": "2/2015"}, {"body": "oops typo part sorry monday february jan buscht\u00f6ns notifications githubcom wrote fault nt pay enough attention ebryn saying blinded fear stupid syntax sorry buzz reply email directly view github", "d": "2/2015"}, {"body": "repro error jsbin base one usually use demoing new issues canary", "d": "2/2015"}, {"body": "downloaded canary error see reproduce", "d": "2/2015"}, {"body": "took another shot replication canary stupid simple helper seems work properly definitely need help reproducing stupid helper", "d": "2/2015"}, {"body": "error coming emberinflector relevant commit looks like btecu library using emberinflector needs updated", "d": "2/2015"}, {"body": "seems ember data set", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "worth changing latest canary yesterday fixed issue", "d": "2/2015"}, {"body": "yes think happens serialization using ember data specify canary version bower", "d": "2/2015"}, {"body": "dependencies gotcha make sure use sha canary branch actual ember repository", "d": "2/2015"}, {"body": "mitchlloyd think understand underlying problem yet able reproduce jsbin one using canary emberdata ember use fine", "d": "2/2015"}, {"body": "narrowed commit possible something going could result undefined", "d": "2/2015"}, {"body": "jsbin uses without issue latest canary builds emberinflector using emberhtmlbarshelper created", "d": "2/2015"}, {"body": "starting new embercli project upgrading latest canary ember latest ember data beta demonstrates problem load index page see errors seeing", "d": "2/2015"}, {"body": "mitchlloyd thanks repro thats exactly needed working", "d": "2/2015"}, {"body": "believe due root cause", "d": "2/2015"}, {"body": "thanks rwjblue mitchlloyd", "d": "2/2015"}, {"body": "fixed please update latest build mitchlloyd updated demo repo submitted pr", "d": "2/2015"}, {"body": "still getting error latest ember beta works canary though", "d": "2/2015"}, {"body": "also getting behavior johanobergman", "d": "2/2015"}, {"body": "johanobergman yall open new issue repro cause particular issue definitely fixed perhaps issues tracked", "d": "2/2015"}, {"body": "opened new issue", "d": "2/2015"}, {"body": "sure", "d": "2/2015"}, {"body": "closing believe solution issue caused older versions pretender sync", "d": "2/2015"}, {"body": "yes happen gets removed core", "d": "2/2015"}, {"body": "hey looking issue lately believe found cause throw error willtransition gets caught transition created error set along promisereject error point error thrown error expected problem transition taken transitions promise gets set javascript transitionthen null function error error errorname return assert recognize unrecognizedurlerrors unfortunately started looking ember know enough general architecture make call handled", "d": "2/2015"}, {"body": "blessenm behavior perfect input value updated ie moment key got released one work", "d": "2/2015"}, {"body": "matrixz like lolmaus mentioned using nt seem trigger action", "d": "2/2015"}, {"body": "seems working properly", "d": "2/2015"}, {"body": "rwjblue wont syntax work took example input helper guides replaced event name", "d": "2/2015"}, {"body": "would nt think would made work way specifying action want triggered along eventaction seems much straightforward line would write components consider versus later example disjointed fails allow using multiple actions trigger different events wanted something like confusing upon reading api docs nt read part time unsure state rewriterestructure make clearer", "d": "2/2015"}, {"body": "rwjblue makes sense guess guides may need updated fyi picked syntax mentioned", "d": "2/2015"}, {"body": "rwjblue bug parent view destroys views connected outlet rendering errors trying reattach destroyed views", "d": "2/2015"}, {"body": "hi updating app found issue maybe another one rerender application view works fine rerender throw error canary rerender works fine simple jsbin demonstrate reproduce issue play set script tags", "d": "2/2015"}, {"body": "closing works beta shortly canary become", "d": "2/2015"}, {"body": "alright running issue tangentially related one basically case sensitivity respected using view issue svg property snippet javascript export default emberviewextend tagname svg attributebindings myviewbox viewbox myviewbox rendered page property inserted thus respected browser note currently using htmlbars issue reopened brought new issue update confirmed issue also exists htmlbars although sure issue htmlbars", "d": "2/2015"}, {"body": "kellysutton tried emberjs beta", "d": "2/2015"}, {"body": "yet give try report back feb pm matthew beale notifications githubcom wrote kellysutton tried emberjs beta reply email directly view github", "d": "2/2015"}, {"body": "believe working properly canary soon", "d": "2/2015"}, {"body": "closing favor", "d": "2/2015"}, {"body": "one thing though leaks observers removed destroy really would think since observers object would get cleaned destroy could probably come something remove final observer destroy anybody give definite answer", "d": "2/2015"}, {"body": "ksnyde rwjblue said use compiler paired particular release ember identified pattern canary also work verified embertemplatecompilerjs url pattern embertemplatecompilerjs case", "d": "2/2015"}, {"body": "himansudesai believe unless thick compiler version comes version ember picked bower nt scenario compiler ember version become sync case tracked problem use plugin also including quite dusty components created emberclibootstrapsassy plugin removes unwanted dependency well", "d": "2/2015"}, {"body": "ksnyde right case using ember straight trouble locating correctly paired version embertemplatecompiler since getting identical error figured mismatched pair well glad tracked issue", "d": "2/2015"}, {"body": "could underlying cause keep mind arguments provided transitionto linkto correspond change query param values change route hierarchy considered full transition means hooks like model setupcontroller wo nt fire default rather controller properties updated new query param values url query params works full transition jesenko example theoretically controller properties updated controller exist yet", "d": "2/2015"}, {"body": "dremora interesting state things seeing recently well issue little similar happening ie log app reload app homepage browser session get error mentioned happening run happening built app wanted confirm seeing behavior well", "d": "2/2015"}, {"body": "issue though nt believe related firefox believe issue unknown motivated third line code pasted quantumking managed figure use jsbin reproducible example based mainly emberjs guide example note error arises setting resolved change sure actually bug maybe useful error message could displayed", "d": "2/2015"}, {"body": "ianhoolihan seeing error without routes", "d": "2/2015"}, {"body": "found reason bug appeared app due improperly upgraded indexhtml included page twice markup slightly broken removing dupes fixing markup mitigated issue", "d": "2/2015"}, {"body": "reiterate unlikely able fix issue without jsbin reproduction", "d": "2/2015"}, {"body": "given happened one particular project convinced bug longer case seemed trying run previously called removing adding resolved issue case oddly ca nt seem recreate set circumstances jsbin present leaning toward bug much user error", "d": "2/2015"}, {"body": "going go ahead close gladly reopen failing jsbin", "d": "2/2015"}, {"body": "since eager url way closing open new ticket issue urlhistory state change entering error state back button works", "d": "2/2015"}, {"body": "appears fixed ember closing", "d": "2/2015"}, {"body": "reference question stackoverflow related discussion protractor tracker", "d": "2/2015"}, {"body": "encountered issue well feel like observable resorted ca nt observe anything either", "d": "2/2015"}, {"body": "iterate current want observe size", "d": "2/2015"}, {"body": "mean iterate feb pm stefan penner notifications githubcom wrote iterate current want observe size reply email directly view github email message attachments may contain confidential legally privileged information intended recipient otherwise authorized receive message use copy distribute disclose take action based information contained email attachments received message material error please advise sender immediately reply email delete message thank behalf applied geographics inc appgeo", "d": "2/2015"}, {"body": "ca nt iterate today", "d": "2/2015"}, {"body": "ok nt solve problem know iterate keep another property set every time add remove map feb pm stefan penner notifications githubcom wrote ca nt iterate today reply email directly view github email message attachments may contain confidential legally privileged information intended recipient otherwise authorized receive message use copy distribute disclose take action based information contained email attachments received message material error please advise sender immediately reply email delete message thank behalf applied geographics inc appgeo", "d": "2/2015"}, {"body": "extend class create counter variable wil make easier upgrade bug fixed", "d": "2/2015"}, {"body": "fivetanley observe pojos call emberset obj foo value modifying", "d": "2/2015"}, {"body": "krisselden understand comment correctly suggestions pull request fix issue add tests", "d": "2/2015"}, {"body": "unsure want observable", "d": "2/2015"}, {"body": "opinion logical observe collection enables execute function composition collection changes maybe understand comment full extent would alternative", "d": "2/2015"}, {"body": "enables execute function composition collection changes observing insufficient mutation map set nt include also results change event map orderedset meant fast partial polyfills swap native implementations sufficient number vendors support additionally currently reevaluating current array change detection strategies approach extremely likely change interim observation plans remain hold", "d": "2/2015"}, {"body": "stefanpenner thank reply clear remove pull request leave bug report open", "d": "2/2015"}, {"body": "seems stll problem ember beta version workaround possible disable feature", "d": "2/2015"}, {"body": "dertoti fix coming shortly since feature apply css class name disable feature supplying css", "d": "2/2015"}, {"body": "thanks rwjblue", "d": "2/2015"}, {"body": "additionally besides deprecation guide please update guide page using controllers asap deprecated currently taught best practice guide guide also nt eschew proxying access rather repeatedly exactly bad practice please change guide", "d": "2/2015"}, {"body": "sphtkr thanks pointing would mind making pr fixing guide", "d": "2/2015"}, {"body": "willing little unsure exactly best practice especially case impending deprecation get instead simply replaced everything else remain generally appreciate spirit behind categorical response hey nt gripe contribute think may something core team address previously proxying behavior selling point eg linked guide advantage architecture easy get started accessing properties model via object controller however need transform model property template welldefined place without adding viewspecific concerns model tune new architecture direction guiding change sure could adequately rewrite message change technical change exactly sure new messagenarrative around use controller layer architecture think many us nt deprecation feels like came left field nt misunderstand thrilled changes see happening ember know every change breaks someone workflow particular one seems like pretty significant shift architecture direction hidden technical change point arguably whole guide one really longer even makes sense", "d": "2/2015"}, {"body": "concur sphtkr lost justification behind change would appreciate explanation better understand", "d": "2/2015"}, {"body": "message change technical change exactly sure new messagenarrative around use controller layer architecture think many us nt objectcontroller deprecation feels like came left field sphtkr correct lot messaging items touch object controller changes release yet need update docs add deprecation guide definitely make release effort revamp guides docs lead trek amongst others check sounds like documentation updates continues go website repo otherwise noted justification change proxies confusing new developers experience ember users us probably comfortable know template like means name probably comes model know needs referenced explicitly actually proxy new developers disaster tricky concept learn throws hurdle try anything complicated display data even experienced developers bit proxy nt expect one large app proxies use mean dynamic behavior optimized well static class shape reasons generally align ember component patterns solutions none use proxies removing object array proxies", "d": "2/2015"}, {"body": "think done via ast plugin basically would walk templates actually rewrite specified would work", "d": "2/2015"}, {"body": "seems working properly", "d": "2/2015"}, {"body": "right know way google undertand app", "d": "2/2015"}, {"body": "google crawler executes javascript google crawl ember apps search engines ca nt", "d": "2/2015"}, {"body": "taras practice little success google crawler ember app seems like may work simpler ones admit nt spent much time digging", "d": "2/2015"}, {"body": "prerenderio worked magic also available open source package sat feb nathan palmer notifications githubcom wrote taras practice little success google crawler ember app seems like may work simpler ones admit nt spent much time digging reply email directly view github", "d": "2/2015"}, {"body": "landed believe next chopping block", "d": "2/2015"}, {"body": "rwjblue listened podcast last week talked htmlbars readiness looked latest believed completed requirement rendering htmlbars mentioned podcast broccoli grunt support htmlbars migration want bring support write module gulphtmlbars could take look compatibility issue included changelog thanks", "d": "2/2015"}, {"body": "meantime issues documentation proper way adding child views", "d": "2/2015"}, {"body": "issue still exists released though particular case polygon element", "d": "2/2015"}, {"body": "superlou right support must regressed polished implementation attrnodes renderer landed refactor attributebindings beta needs work graduating release part porting classnamebindings new system expecting introduce classnamebindings svg elements", "d": "2/2015"}, {"body": "original jsbin updated apply class element update changed updated jsbin", "d": "2/2015"}, {"body": "hey extracted rpc addon changes fix various issues anyone interested", "d": "2/2015"}, {"body": "impression htmlbars supposed get rid dataattr requirement ps new emberjs forgive mislead lol", "d": "2/2015"}, {"body": "joshuairl feature dependent htmlbars nt introduced beta", "d": "2/2015"}, {"body": "finally fixed canary shortly thank patience mixonic hard work", "d": "2/2015"}, {"body": "mixonic rwjblue thanks hard work", "d": "2/2015"}, {"body": "upgrading application version time ran well got bizarre thing would sometimes work sometimes would nt example custom select element view required disabled readonly bound attributes would pass three true view dom element would get disabled required readonly attribute thanks hard work issue", "d": "2/2015"}, {"body": "rwjblue deprecating ember start using instead reasons find helper really useful real shame ca nt use first property dynamic property", "d": "2/2015"}, {"body": "petermumford suitable replacement", "d": "2/2015"}, {"body": "petermumford controllers going away naturally would go away guessing recently merged helper would replacement", "d": "2/2015"}, {"body": "jbrown jasonmit thanks pointing really like way swap components form dynamic property useful need revise currently got using controller data biggie", "d": "2/2015"}, {"body": "jbrown well components side effects use route inside template render also important controller isolated example access store", "d": "2/2015"}, {"body": "krutius sure mean components side effects also nt understand comment controllers isolated see also future direction", "d": "2/2015"}, {"body": "isenbeqiri problem please elaborate bit problem happens post solution unloadall type hasmany side feels like dirty solution", "d": "2/2015"}, {"body": "upstream issue addressed fix included chrome stable april", "d": "2/2015"}, {"body": "thanks lot mixonic got notifications chromium board", "d": "2/2015"}, {"body": "oneeman going implement plan described believe", "d": "2/2015"}, {"body": "also bug think closely related one stack trace sure even start debugging start new issue", "d": "2/2015"}, {"body": "kimroen using ember newer please file new issue otherwise try upgrading first", "d": "2/2015"}, {"body": "little confused one closed ran similar issue recently except mine still looking optimal solution mziwisky valid point everything reading", "d": "2/2015"}, {"body": "mixonic thanks information really useful makes sense moving direction examples helped still nt able solve problem two different use cases external libraries static elements generated emberhtmlbars external library needs consume eg displaying items autocomplete live elements external library adds parts dom need raise actions corresponding context bindings work working fine ember yes behind know trying catch example using worked great simple cases since nt care updates simply get html jsbin nt change library work markup instead strings however need use nested components ca nt find jsbin use instead calling directly jsbin seems render templates never calls didinsertelement jsbin looking deeper createelement calls rendererrendertree wo nt call didinsertelement essential nested components work second scenario seems working fine without nested components working able verify instances work also need tweakhack external libraries certainly doable go path anything changed since oct", "d": "2/2015"}, {"body": "seems hacky actually better makes sense render nt call didinsertelement simply call manually see jsbin element inserted dom included jsbin something equivalent events like willdestroy another jsbin tests bindings actions simple change use element instead string need look real world scenarios", "d": "2/2015"}, {"body": "oh found another problem approach even though boundviews work nt dig branch thread since went beyond original context already", "d": "2/2015"}, {"body": "also ran got around using", "d": "2/2015"}, {"body": "mixonic sure follow would deprecated use extensively addons especially ability modify class initializing hugely useful could understand throwing warning instance already created assume mixins applied via nt impact existing instances", "d": "2/2015"}, {"body": "personally wary using addon change ember base classes quickly open library conflicts libraries instead suggest exporting extended version ember class nt want nit pick specifics though class model maintains lot complexity allow reopening class already instantiated improve performance ember whole nt", "d": "2/2015"}, {"body": "mixonic something similar method extending ember addon base classes extending ember namespace path like app automatically use example instead reopening extending app view export new view called something like extend app views example js viewsbasejs import ember ember export default emberviewextend stuff would done reopen js viewsindexjs import ember ember import baseview appnameviewsbase export default baseviewextend", "d": "2/2015"}, {"body": "sirdunxalot exactly better yet functionality exported mixin instead base class way merge behaviors several mixins several addons", "d": "2/2015"}, {"body": "mixonic use feature monitor every time recommendation without", "d": "2/2015"}, {"body": "orisomething need componentsviews", "d": "2/2015"}, {"body": "asgaroth use inform parent needs resize every edge case use scrollable good case far search resizable create child class would mean use", "d": "2/2015"}, {"body": "mixonic whilst agree cases reopen equally maintainable mixins class extensions valid use case ab tests ab testing framework test mixin methodsproperties change class original functionality use reopen something like js export default embercontrollerextend checkfortest function thisget testid thisreopen thisget container lookup somemixinwithtestid init would fall category running original class initiated nt see emberish alternative nt allow dynamic module names though hackable thus one would argue exist form maybe another way nt mean get topic believe root issue method think discussion acceptable maybe wrong either way thanks following", "d": "2/2015"}, {"body": "trek looking public documentation feature nt see example hitting enter without additional blur even test cases show additional step making think requires keycodes reason like help clarify documentation tests better help grow communityetc example projectjsbinsomething shows simply hit enter key inside ember testing", "d": "2/2015"}, {"body": "basically point something like ember nt actually fire event expect", "d": "2/2015"}, {"body": "quick update looks like keydown missing sauce", "d": "2/2015"}, {"body": "clarify might confuse future namespace context refers global namespaces refer route namespaces case routes want support deprecate please someone correct wrong", "d": "2/2015"}, {"body": "case routes want support thisresource foobar deprecate thisresource foobar please someone correct wrong correct", "d": "2/2015"}, {"body": "many issues closed favor one issue lacks specificity says make emberselect better plan exactly done looks like nobody solves former emberselect issues tickets closed nobody works new emberselect details", "d": "2/2015"}, {"body": "rwjblue tell exactly wrong old one mainly performance like performance drains component", "d": "2/2015"}, {"body": "fwiw wrap elements elements components select objects instead strings embercli addon", "d": "2/2015"}, {"body": "knownasilya asking curiosity want see roadmap list closed issue forgotten", "d": "2/2015"}, {"body": "lolmaus specifically nt guaranteeing new version attempt much old one going start scratch likely fewer features less complexity", "d": "2/2015"}, {"body": "good day block params help case need component ref eg ref handles action thanks", "d": "2/2015"}, {"body": "make layout following", "d": "2/2015"}, {"body": "thinking taking crack issue link edit rsvp part documentation site broken", "d": "2/2015"}, {"body": "happycollision pretty sure rwjblue person coordinate sounds like specific plan mind", "d": "2/2015"}, {"body": "happycollision link documentation", "d": "2/2015"}, {"body": "machty services thoughts", "d": "2/2015"}, {"body": "rwjblue documentation see differences standard handlebars ember version getting error finding reason frustrating since according handlebars docs work sure anymore features use", "d": "2/2015"}, {"body": "reopening documentation issue instead bug definitely seems like confusion behavior try clear", "d": "2/2015"}, {"body": "object keys stable modern browsers diffing lands lbe able support fairly simply presently difficult nt observe insertiondeletion keys objects", "d": "2/2015"}, {"body": "changing value input cause blur element worked martinelvar", "d": "2/2015"}, {"body": "pointers nt seem work hashes used ember route location using seems stripping away hashes actually transitioning route", "d": "2/2015"}, {"body": "duizendnegen looks like prs merged supposed resolve issue open new issue failing jsbin", "d": "2/2015"}, {"body": "waiting prs merged stable ember cli feel free close open another issue needed", "d": "2/2015"}, {"body": "deprecated", "d": "2/2015"}, {"body": "status changed still manually enable injections onto models", "d": "2/2015"}, {"body": "status changed still manually enable injections onto models still manual unsure emberdata fixed yet p", "d": "2/2015"}, {"body": "came across issue thinking building component pass return value action promiseproxy case yield component template think done without feature described issue maybe something think idea component xform actionsave targetmymodel onsubmit promise result promiseispending promiseisrejected error errormessage etc xform", "d": "2/2015"}, {"body": "given idea thinking feel actions fundamentally fire forget return value action needs send return value action handler either send action back original sender original sender pass promise argument action resolve future point time prefer latter supports sync async uniformly allows original senders context preserved handling return value also allows aggregation action results even completion action sends multiple recipients need occur eg sending collapse action tabs accordion wrapped mechanism could wrapped sendpromiseaction api palatble name", "d": "2/2015"}, {"body": "stuff nt really line direction ember headed someone wants pr great going close since nt think likely spend time", "d": "2/2015"}, {"body": "think might want add information run loop ember inspector help see going think teddyzeenny", "d": "2/2015"}, {"body": "seem like trips lot people fwiw solution edit though instead using injection service might perfect config thought", "d": "2/2015"}, {"body": "ebryn think run loop tab embertesting tab inspector works tests would really helpful", "d": "2/2015"}, {"body": "issue rendering using render helper seemed thati could use controllerfor access controller instantiated render helper changed using extra route instead render helper could access instance guess would nt work eery situation though route kinda made sense app anyways", "d": "2/2015"}, {"body": "yeah still broken foundation foundation even switched using nthoftype messing nt fix grid layout problems anyone luck getting work ember", "d": "2/2015"}, {"body": "know old post thank wycats needed", "d": "2/2015"}, {"body": "htmlbars following convention reactjs capable hot swapping template perhaps good time consider reopening issue", "d": "2/2015"}, {"body": "hi property binding via suffix displayed deprecations tab ember inspector status deprecation", "d": "2/2015"}]