"","X","X0"
"1",0,"{'data': 'support file api feature request mapping input type file elements event emitter relevant package angularreactiveforms looks like currently hack around like', 'date': '2018-11-15T00:50:15Z'}"
"2",1,"{'data': 'ca nt resolve built library bug report description following guidelines get following error tried steps current project completely new project followed every step given article still get error ts config file setup point correct folder library built correctly minimal reproduction exception error error srcappappmodulets module found error ca nt resolve c failed compile error srcappappmodulets error find module environment angular version', 'date': '2018-11-14T23:37:11Z'}"
"3",2,"{'data': 'service worker returns different url value xhr fetch bug report affected package issue could caused package angularpwa angularcommonhttp regression tested previous versions description service worker request url returns response returns different url value request done via xhr fetch following piece code returns different url values application runs service worker registered visible chrome minimal reproduction example found exception error none simply inconsistent environment angular version anything else relevant issue visible chrome uses fetch', 'date': '2018-11-14T18:43:46Z'}"
"4",3,"{'data': 'angular cli ng build options nt work deleteoutputpath verbose bug report affected package issue caused package angularcli version description angular cli try use get error unknown option minimal reproduction open console type notice following error expectation cli options due documentation found page exception error environment angular version issue caused package angularcli could please report thnx', 'date': '2018-11-14T18:40:41Z'}"
"5",4,"{'data': 'build single project multiple projects bug report description want build two separate angular projects use third project features together tried converting projects angular elements use rendering created repository project files repo link sampleprojectforangularelement create angular element used shell project please help approach wrong better one environment angular cli node os angular package version angulardevkitarchitect angulardevkitcore angulardevkitschematics schematicsangular schematicsupdate rxjs typescript anything else relevant hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-14T15:57:09Z'}"
"6",5,"{'data': 'platform described documentation glossary docs angulario bug report description clear concise description problem minimal reproduction affected url expected vs actual behavior lurking angular source code found unfortunately found docs comments angular actually represents think glossary would best place description', 'date': '2018-11-14T15:24:06Z'}"
"7",6,"{'data': 'service worker caching issues using service worker cache api call config using http head request check username existed eg apiusersjohndoe check johndoe existed however service worker decided cache check username api throw following error request method head unsupported fix change api different name edit clarify nt want cache head request want cache list users apiusers hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-14T13:45:57Z'}"
"8",7,"{'data': 'manual updation angular validation min max number type modified manually bug report affected package issue caused package angular regression sure new angular yes previous version bug present description clear concise description problem set min angular directive expect minimum value set using increase decrease arrow true manually enter values constraint longer maintained minimal reproduction exception error environment angular version anything else relevant added demo problem difficult understand like clarification feel free contact gmailcom works html nothing angular thank quick reply know indication input invalid giving red border like material inputs maybe raised issue material gt know indication input invalid giving red border like material inputs angular forms set control state invalid validation status wo nt add visual indication application developer decide users notified invalid input closing since works expected', 'date': '2018-11-14T12:58:16Z'}"
"9",8,"{'data': 'angular error filereader type arraybuffer comparable type blob bug report affected package regression yes previous version bug present description getting error error conversion type string arraybuffer type blob may mistake neither type sufficiently overlaps intentional convert expression unknown first type arraybuffer comparable type blob property size missing type arraybuffer minimal reproduction exception error environment angular version anything else relevant looks like typescript compilation type checking error related angular classes must updated version part angular update new ts version different stricter checks', 'date': '2018-11-14T12:31:55Z'}"
"10",9,"{'data': 'input change event fired using native arrows bug report description given input type method using inside arrows input increase value change method fired first click second third move mouse fired minimal reproduction environment angular version anything else seems work ff however chrome try instead anyway ff stackblitz works fine seems fail chrome thanks lot works chrome idea method fails appears unrelated angular since binding raw handler input type number exhibits behavior yes related angular basically spec leaves room interpretation event fired different browsers behave differently', 'date': '2018-11-14T12:07:17Z'}"
"11",10,"{'data': 'template form default value select nt process string starting bug report description using template form options default null value option string starting counted null fix prepending blank strings front string minimal reproduction environment angular version stackblitz still happening firefox pattern colon preserved special purpose used change something like anything without colon would work unfortunately list options user generated guessing saying us remove colons looks like sets id input based whatever colon whole string', 'date': '2018-11-13T22:09:03Z'}"
"12",11,"{'data': 'percentpipe maxfractiondigits default values wrongmissleading docs angulario bug report description percentpipe maxfractiondigits default values wrongmissleading minimal reproduction output affected url reproduction steps documentation says maxfractiondigits maximum number digits decimal point default actual value seems expected vs actual behavior may either implementation documentation issue believe documentation issue probably copypaste issue decimaltype whose actual defaults exception error environment browser info anything else relevant', 'date': '2018-11-13T18:33:14Z'}"
"13",12,"{'data': 'preview files documnets images angular please help us process issues efficiently filing issue using one following templates thank using angular want preview file like images document one suggest thing link thanks advance hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-13T17:47:05Z'}"
"14",13,"{'data': 'redirects working urlupdatestrategy eager note bug reported internally within google reproduction set navigation similar following routermoduleforroot path engine loadchildren engineroutes ngmodule id engineroutes imports routermoduleforchild path redirectto jobs pathmatch full path jobs loadchildren enginejobslist path jobs jobid loadchildren enginejobsdetails pathmatch full ngmodule id enginejobslist imports routermoduleforchild path component list click link engine section get jobs page within engine url reflect location strategy used url cases navigation events identical see details', 'date': '2018-11-13T16:57:48Z'}"
"15",14,"{'data': 'service worker working offline base href problem bug report description stumbled weird error trying serve angular app iis cant seem solve trying access pwa offline chrome http error appears setup simple lt min cd app appmodulets add serviceworkermodule app find ngswworkerjs manifest change scope starturl build app prod add application iis unmanaged code pointing navigate chrome service worker downloaded manifest fine dandy make chrome go offline application service workers offline reload page error cant seem figure wrong trying firefox everything works even offline mode using host app without base href everything works chrome including offline anybody please help really stuck version minimal reproduction exception error environment angular version version angular cli mentioned question sounds like configuration issue iis ssl certificate etc let continue discussion closing since indication angular issue', 'date': '2018-11-13T16:34:37Z'}"
"16",15,"{'data': 'ngmodel ngreflect input type password bug report description know bug feature however inspect input type password see password ngreflect variablename better showing html inspector yes also change type password text inspector see password opinion better show reflected value html regression bug also presents previous version description clear concise description problem minimal reproduction debugging purpose go away production mode close issue present prod', 'date': '2018-11-13T13:52:39Z'}"
"17",16,"{'data': 'feature add type informations regarding structure formgroup formarray feature request releavant package feature request angularforms description reactive forms type informations structure form describe solution like change classes generic types following signatures methods addsremoves controls return changed template variable reflects changed example similar changes made describe alternatives considered could probably done creating custom classes derive useful backwards compatible change think go angularforms one problem see mutable add remove controls structure information different actual maybe introduce base class addremove controls duplicate fixed blocked microsofttypescript thanks sharing proposal looks like topic related discussion please subscribe thread future updates thank', 'date': '2018-11-13T11:15:46Z'}"
"18",17,"{'data': 'routing seems impossible bug report affected package issue caused package angular json angulardevkitbuildangular angularanimations angularcdk angularcli angularcommon angularcompiler angularcompilercli angularcore angularflexlayout angularforms angular angularlanguageservice angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter ngxtranslatecore ngxtranslate description defining empty routes array assigning later depending environment seems impossible approutes defined start works well ts let approutes routes environmentwebapptype ctrl approutes path landing component landingcomponent children path login component logincomponent path oss component osscomponent path logout redirectto landinglogin logouttrue pathmatch full path redirectto landinglogin pathmatch full path main component maincomponent canactivate authguard canactivatechild authguard children path mycomponentonboarding component mycomponent path redirectto mainmycomponentonboarding pathmatch full path redirectto landinglogin pathmatch full path redirectto landinglogin pathmatch full else approutes path landing component landingcomponent children path oss component osscomponent path main component maincomponent canactivate authguard canactivatechild authguard children path start component startcomponent path redirectto mainstart pathmatch full path redirectto mainstart pathmatch full ngmodule imports routermoduleforroot approutes usehash environmentusehash exports routermodule export class approutingmodule exception error page blank entering route match routes url segment environment angular version angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularflexlayout angularmaterial ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack anything else relevant try possible code statically analyzable try instead ifelse would suggest separate modules case currently components unused routes included bundle example try exporting route configuration sure work ericmartinezr thanks fixed problem basically define two routes add one ts export class approutingmodule public constructor private router router environmentwebapptype ctrl routerresetconfig appctrlroutes', 'date': '2018-11-12T16:18:15Z'}"
"19",18,"{'data': 'angular routing skip reloading component using angular router components component list information component b detailview item list component use devextreme widget datagrid load data ngoninit switch component b back component reloads wait server respond possible prevent component reload switching b like init component hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-12T15:19:38Z'}"
"20",19,"{'data': 'testing inconsistencies location spylocation bug report affected package issue caused package angularcommontesting regression think never worked description method class works correctly class always returns method class fired event class fired navigation exception error different behavior breaks tests environment angular version anything else relevant unresolved issues related inconsistencies thanks', 'date': '2018-11-12T14:08:52Z'}"
"21",20,"{'data': 'ctorparametersmap function hello folks getting error trying import mattablemodule appmodulets using latest angular packages debug see ctorparameters supposed array function case github appreciate help thank please open following issue template repository one issue already got opened hours ago thank', 'date': '2018-11-12T11:34:03Z'}"
"22",21,"{'data': 'get sign start url reboot app navigating absolute path problem multimodule application lazy loading navigate top module bottom child module everything fine try route bottom child lazy module another child lazy module get strange behavior ok gt gt gt gt gt gt gt gt bad gt gt try got sign start url like app full reload nt matter lazy module loaded found affect problem problem repeated unstable sometimes transition works expected tried many combinations problem solve tried thisrouternavigate thisrouternavigate thisrouternavigate opservicesmanagementedit id thisrouternavigatebyurl thisrouternavigatebyurl routerlink routerlink help understand route changes sounds like support question please use stackoverflow gitter try reloading app route page makes think bug sorry mistake button go desired route default type submit button form change typebutton work fine', 'date': '2018-11-11T22:04:44Z'}"
"23",22,"{'data': 'angular object extension method crashses ngmodel bug report affected package likely angularcore less likely typesangular regression nt try previous versions description creating extension method object type conflicts somehow ngmodel yields uncaught promise error output initialized ngmodel seems directive formed looks outputs expects observable since extension method extends object definition part parent directive directive thinks sort output field crashes minimal reproduction ca nt seem add npms blitz ill give short detailed explanation perquisites im sure must npm install save typesangular create globaldts file export declare global interface object isempty boolean create objextts file objectprototypeisempty function boolean return null undefined maints import objext create component using ngmodel inside html page run crash exception error environment angular version anything else relevant enter debug mode exception occurs tries handle output directives seems asks observable since extension methods observable throws error first time submitting bug gentle need information ill provide duplicate orirefael trotyl mentioned comment issue looks like duplicate please refer mentioned thread find additional information thank', 'date': '2018-11-11T15:56:26Z'}"
"24",23,"{'data': 'relative route navigation failure first use ionbackbutton ionic relative route bug report affected package issue caused package angularangular regression unknown description see readme repository summary angularpackagesroutersrccreateurltreets function replacesegment appears rely comparing object references navigating router outlet new url comparing actual urls ionic application repository reproduces failure minimal reproduction problem reproduced ionic based repository unsupported either plunkr stackblitz repository found see readme repo exception error environment see repo packagejson angularjson files angular version anything else relevant think related fixed thoughts', 'date': '2018-11-11T03:27:40Z'}"
"25",24,"{'data': 'decimal pipe working big numbers bug report affected package currently using angularcore regression na description decimal pipe working big numbers applied decimal pipe number precision formatting show output require output minimal reproduction exception error na environment angular version angular cli node os angular common compiler compilercli core forms http languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildngpackagr angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularanimations angularcdk angularcli angularmaterial ngtoolsjsonschema ngtoolswebpack schematicsangular schematicsupdate ngpackagr rxjs typescript webpack gt duplicate defect issue mostly describe currency pipe newly logged defect talking decimal pipe rather pipe clearly reproduce require solution work decimal pipe big numbers issue reproduction related parsefloat decimal pipe without parsefloat formatting correctly gt issue reproduction related parsefloat decimal pipe without parsefloat formatting correctly yes right clossing issue', 'date': '2018-11-11T03:10:52Z'}"
"26",25,"{'data': 'allow formgroupname distributed several tags hi would allow formgroupname value would helpful diferent divs would formgroupname x would allow create dinamyc configurables reactive forms thanks sharing proposal however nt provide sufficient information us continue reviewing please check submission guidelines understand ca nt act issues lacking important information please follow feature request template provide informationdetails proposal', 'date': '2018-11-10T21:07:19Z'}"
"27",26,"{'data': 'display uploaded images multer angular hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-10T20:28:16Z'}"
"28",27,"{'data': 'docviewer error preparing document guidepipes docs angulario bug report description trying find documentation pipes angular however clicking angular documentation document would never loadhere stack trace console minimal reproduction affected url reproduction steps expected vs actual behavior exception error error error docviewer error preparing document guidepipes environment browser info firefox anything else relevant tested page chromium works fine dup thanks reporting issue however issue duplicate existing issue ericmartinezr mentioned comment please refer mentioned thread find additional information issue', 'date': '2018-11-10T09:01:11Z'}"
"29",28,"{'data': 'documentation httpparams nt load go documentation angulario select httpparams search menu got message console page nt load use firefox using google chrome faced similar issue pipes docs firefox dup thanks reporting issue however issue duplicate existing issue ericmartinezr mentioned comment please refer mentioned thread find additional information issue', 'date': '2018-11-10T01:40:44Z'}"
"30",29,"{'data': 'angular supports typescript dart languages docs angulario bug report description told angular supports typescript dart languages used however documentation website show evidence shows stuff typescript personly would like use angular interested learning another ripoff langue created microsoft use standard get features natively supported browser without needing compile hidden button seeing switch docs dart typescript yep want torture use pure js sure gt yep want torture use pure js sure think would torturing self use compiler language designed compiled typed seriously sense fact use pure js angular coding nt know anybody whole world would use angular dart bit different product line already older versions angulario indeed api referencestutorials plain js removed line guess ppl interested combination angular typescript plain js feel free waste time writing angular vanilla js like though mentioned already angular dart different resides repo furthermore go docs using button bottom left sidenav list toggle different versions framework angular dart name one modern framework nt require compilationtranspilation angularjs nt count going deliver payloads minify lazy load want use expect browsers support directly mean also expect browser support observables browser support module loading going bundle code going concatenate files deliver browser build process like', 'date': '2018-11-09T16:50:11Z'}"
"31",30,"{'data': 'httpclient correctly propagate request url case network error bug report affected package issue caused package angularcommonhttp regression description http client encounters network error include attempted request url error message even though available eg interceptor minimal reproduction see repro reproduce install start app eg disable browser network connection eg network tab devtools click button note logged error message says environment angular version anything else relevant chrome version official build know', 'date': '2018-11-09T16:44:41Z'}"
"32",31,"{'data': 'angular upgrade version lazy loaded module found bug feature request proposal upgrading angular received error saying login module found loaded lazily expected behavior upgrade angular without changing anything codes scripts regarding module routing files current behavior error console clicking login module found despite working previous version angular steps reproduce anything else know update question added got following error error unknown compiler option baseurl think mean baseurl already added end update updated angular project angular using following commands resulting getting following error error error uncaught promise error find module appdashboarddashboardmodule error find module appdashboarddashboardmodule lazyrouteresource lazy namespace zonedelegatepushnodemoduleszonejsdistzonejszonedelegateinvoke objectoninvoke working using received upgrading tried solution mentioned github efectively three posible solutions using relative path loadchildren b using absolute path starting loadchildren srcapp c tsconfigappjson baseurl neither worked startup routing file missing upgrade angular implies us change routing urls specific new form quoting another solution github answer assume problem form filipesilva saw commit angulardevkit property moved tsconfigappjson srctsconfigjson file value therefore newly generated apps cli wont able find lazy load modules paths defined lazy load documentation suggest change preserves baseurl tsconfigjson project tsconfigappjson overwrites baseurl property hope aligned multiprojects approach tooling prefere use relative url loadchildren updated documentation tutorial casesensitive gt casesensitive okay fixed tsconfigappts still problem problem compiler generated chunk files lazy modules thanks issue however really hard follow please create new issue minimal steps reproduce linking stackblitz without giving steps actually nt tell us reproduce issue also please nt include paste commands instead reproduction reproduce issue directly still produces problem please create new issue including actual steps reproduce minimum required items closing issue nt comply template difficult take action issue try load child module like worked upd sorry actually lazy loading need find another solution gt issue try load child module like worked working aot getting following error issue try load child module like worked upd sorry actually lazy loading need find another solution managed fix issue deleting webpack devdependencies installing webpack globally gt gt issue try load child module like worked working aot getting following error solution worked', 'date': '2018-11-09T09:27:43Z'}"
"33",32,"{'data': 'assets name different path copied bug report description assets name different path copied build output hashing turned minimal reproduction scss file dark backgroundimage url assetsimagesdarkmslogopng light backgroundimage url assetsimageslightmslogopng images copied output directory name get dark light logo used cases turning output hashing fix get two logos different hashes environment angular version angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack note unable create demo github repo currently chromebook development pc locked ca nt access github please open issue cli repo instead', 'date': '2018-11-09T09:26:51Z'}"
"34",33,"{'data': 'circleci kick prs force push bug report affected package issue caused na regression description opened pr force push many times force push circleci fails kick ca nt see result build minimal reproduction na exception error na environment na anything else relevant screenshot sarunint circleci yes circleci sarunint ahh clone circleci normally works really new clone nope nt registered circleci fork thx headsup known issue circleci aware working fix meantime closing reopening forcepushing branch eventually triggers circleci sometimes takes attempts closing since actionable part omg thanks trick smiley btw beware closing reopening causes pullapprove dismiss approvals', 'date': '2018-11-09T08:53:24Z'}"
"35",34,"{'data': 'remove declarations providers modules feature request releavant package angularcore description really need declarations providers resolved components automatically moment angular needs declaration html ca nt converted component name need preregister component like jsx instead tag name use component name way need component component even discovered routes way component used also go tree shake process tag name resolved automatically component name convert pascal case snake case becomes even better let user override tag name selector option available inside component attribute component prefix becomes unnecessary component files solve components problem resolve providers automatically injected component import moment providers twice module component component get intellisense still need module already saying ca nt done refer stenciljs done frank read stencil belive simplify angular syntax ceremony jsa jsx angular instead jsx nt get wrong jsx ugly root ngfor ngif instead write ugly map function keep angular instead html make jsx alike words look like jsx angular feature sample code simple example created demonstrate believe backward compatible also easy change component implementation ts sampleroottsa import component angularcore import sampledashboard sampledashboard component selector myapp user want override tag gt export class sampleroot html output app prefix something define module maybe globaly angular config another possiblity app prefix extract module module appmodule prefix become app another possiblity add component postfix compoent tag name', 'date': '2018-11-09T07:48:04Z'}"
"36",35,"{'data': 'error switching different apps basehref language switching due service worker bug report facing issue switching another app basehref using angular languages build successfully hosted different basehref try switching language throws error due service worker issue affected package issue caused package angularserviceworker regression nt know whether worked previous version description facing issue switching another app basehref using angular languages build successfully hosted different basehref try switch language first time ok service worker cached app note error happens randomly cached try switch language clicking language button browser starts loading throws error currently en got prompt update available service worker found update update published thing noticed service worker language running maybe serivce worker depends domain instead basehref service workers cross checking update shows update minimal reproduction create angular app intergrate necessary followed project add pwa app build atleast two languages different basehref host domain try switch langauage times errors exception error environment angular version anything else relevant issue occurs frequently firefox randomly chrome gkalpak ocombe please help resolve issue issue bug list priority sheikalthaf many possible root causes need minimal reproduction eg standalone repo check run order investigate gkalpak ok create repo gkalpak created minimal repo git repo firebase link try switch app clicking buttons mostly error occurs firefox error nt occur pls close tab try open another tab without basehref error occurs randomly thx take look hm firebase link nt seem register sw try build locally sheikalthaf bug happen serving app locally gkalpak nt tried locally try fix firebase link gkalpak fixed firebase sw register issue also updated repo issue fixed commenting codes related sw please uncomment code service worker failed register another bug related service worker issue sw registering example app never stabilizes due interval checking updates discussed detail provide better way configure sw registration meantime avoid issue letting app stabilize start polling updates see handle angulario example swupdatesservicets problem sw nt currently support multiple apps domain different subpaths grin see discussion possible work arounds interested working pr happy provide helpguidancereviews wink closing duplicate resolved issue adding base href instead want create pr need get base element anyother way get basehref serviceworker worker nt depend angular packages gkalpak changes firebase link changes modified compiled file sheikalthaf glad got working even glad interested working pr serviceworker indeed execute different context nt access dom use get access serviceworker scope essentially range urls controls eg gkalpak thanks solution sir think better replace placeholder cli build time idea go cli file nt find type replace placeholder gkalpak type workercode shall like think filipesilva assist cli file actually nt think replacing build tiem better information sw scope depends several things available runtime eg path sw script passed call property registration options app element etc gkalpak thanks clarification sir create pr let know', 'date': '2018-11-09T06:42:51Z'}"
"37",36,"{'data': 'issue dynamically created ng element steps reproduce create simple ng element bundle include script empty page load page amp script add component like body issue change detection work title must update every ms current datetime see work demo case add component body script load components load dynamically work see guess tied', 'date': '2018-11-09T06:23:47Z'}"
"38",37,"{'data': 'proper documentation webworkers would nice angular docs implement web worker docs duplicate bharathmuppa trotyl mentioned comment request duplicate existing ones please subscribe mentioned threads future updates', 'date': '2018-11-09T04:40:32Z'}"
"39",38,"{'data': 'angular aot flexible configuration multiple projects question problem way restrict files aot compiler includes angularjson project options main tsconfig different sourceroot required scenario trying bolt app exisiting application two would share components code angular projects seemed like great way accomplish attempt specifying different main project manually added new project block angularjson gave main outputpath thought done main file specified bootstrap module works well jit servedbuild aot enabled build fails due multiple declarations modules error something like error type appcomponent xxxappcomponentts part declarations modules modulea xxxamodulets moduleb xxxbmodulets please consider moving appcomponent xxxappcomponentts higher module imports modulea xxxamodulets moduleb xxxbmodulets also create new ngmodule exports includes appcomponent xxxappcomponentts import ngmodule modulea xxxamodulets moduleb xxxbmodulets seemed aot enabled main setting ignored attempt specifying different tsconfig file custom exclude block next tried specifying seperate tsconfig two apps using exclude block restrict modules load however nothing got error attempt using filereplacements exclude clause bit whacky tried using filereplacements create overwrite main modules used resulted modules found also exclude valid option either build build options blocks presumed proper way overkill suppose proper way extract common modules case library share different projects move bolted app directory srcappprojectsboltonapp seems like lot work many disadvantages live reload lib changes forced refactoring module shared unshared really way restrict files aot compiler includes mess something dev environment angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack thank', 'date': '2018-11-08T21:57:04Z'}"
"40",39,"{'data': 'dynamic html load component hi team need create angular component dynamic html script id html string html file using dynamic url means need pass templatetemplate url argumentparameter component automatically load html events work click change blur etc achieve one please help inject angular jit compiler aot main app create component module dynamic html template ondemand runtime best way lazy loaded module get best performance dynamic flexibility hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-08T19:54:45Z'}"
"41",40,"{'data': 'angular routes without rerendering used ionic create component library lagging unfortunately took lot time features angular routing missing imagine tabs screen virtual scrolls inside want switch back forth without lagging ionic used display none value problem lagging using zindexes instead hide show nowadays thinking integrate cssgrid logic inside virtualscroll implementation figuring row height element width also whether positioned css grid one row features already exist cdk question related implementation details angular router related use hybrid apps simply pain want speed guide angular routes working case guess rerenders tab virtual scroll inside want hold position wherever scrolling left switch tabs smooth way orientation resistant also feature missing implementation nested routing url parameter attributes possible asking might jump back official routing way option zindex manipulation case specific configuration tell angular use zindex history already implemented approach unfortunately alone redevelop whole angular hide show elements display none ionic using simply option rerendering option solution pretty neat holding whole app without rerender rendered cost much least lagging responding right away problem angular simply browser able deal amount components redesigned several times honest complex page mobile devices painful even rxjs terribly slow implementation also although angular rapidly evolving simply needed features yesterday tomorrow developing app last years time angular cli messing around ask another two years follow new guides simply changing every month experienced mobile devices css transform works properly needs rigorous testing time means going native app would better css grid example hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation angular simply able achieve speed requested fact code whole angular stackoverflow question lazy thanks god simply step step removing angular code', 'date': '2018-11-08T19:37:01Z'}"
"42",41,"{'data': 'httpurlencodingcodec inconsistent url encoding params submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior following string encoded using chrome version official build mac os high sierra angular using result result result expected behavior url parameter match result environment angular version additional informations function used behind scene duplicate', 'date': '2018-11-08T17:54:27Z'}"
"43",42,"{'data': 'angularbazel package longer includes bzl files bug report affected package regression yes previous version bug present description npm package contained bzl files gone minimal reproduction packagejson workspace localrepository name angular path nodemodules angularbazel load angular indexbzl ngsetupworkspace ngsetupworkspace environment angular version anything else relevant incorrect way consuming lot demos fetch full angular git repo makes little awkward syncing version numbers across workspace packagejson etc maybe npm nt used everything build source still nice though fyi filipesilva discussing ac alexeagle add context change please', 'date': '2018-11-08T16:19:13Z'}"
"44",43,"{'data': 'url path empty routernavigatebyurl nt anything submitting current behavior url path empty nt anything even expected behavior reload route routes minimal reproduction problem instructions write single component single route mapping component log something component initialized inject router component later call example press button nothing happens motivation use case changing behavior uniform behavior router every possible route environment', 'date': '2018-11-08T16:07:11Z'}"
"45",44,"{'data': 'locale methods always returns reference lack immutability bug report affected package issue caused package description methods like maybe nt checked always returns reference let code speak ts const daynames getlocaledaynames enus formstyleformat translationwidthshort daynames su mo tu th fr sa daynamessplice daynames su mo const freshdaynames getlocaledaynames enus formstyleformat translationwidthshort freshdaynames su mo lead undesirable behaviour third party library modifies locale data minimal reproduction', 'date': '2018-11-08T13:41:59Z'}"
"46",45,"{'data': 'order loading bundle elements change detection issue made bundle custom ng elements bundle load ex head elements load dom case change detection work made demo bundlejs loaded element title updating try move bundle bottom line work fine guys wrong need clarify could use script tag attribute see gt could use script tag attribute see changed demo components load dynamically copy exist load cd working gt could use script tag attribute see hmm updated demo add components right work looks like issue resolved close ticket sorry saw issue demo fault describe new demo shows issue another view point issue resolved', 'date': '2018-11-08T12:47:49Z'}"
"47",46,"{'data': 'mmddyy hh mm tt formatting using date pipe please help us process issues efficiently filing issue using one following templates thank mmddyy hh mm tt formatting using date pipe angular export class dateformatpipe extends datepipe implements pipetransform transform value args return supertransform value mmddyy hh mm tt mean mmddyy hh mm zz closing issue follow issue template please file new issue follows template gives team information needed investigate', 'date': '2018-11-08T11:31:57Z'}"
"48",47,"{'data': 'oh hi expedite issue processing please search open closed issues submitting new one existing issues often contain information workarounds resolution progress updates feature request releavant package feature request angularrouter description would convenient components life hook thanks would possible use navigation events reinvent wheel ts component class appcomponent public ngrouterchange event routerevent would quite handy instead subscribing router hand would create directly dependency router thanks feature request something may look future said would create dependency router wo nt able add actual feature requires would ability create custom lifecycle hooks nt right nt roadmap currently might something look ivy released', 'date': '2018-11-08T11:19:11Z'}"
"49",48,"{'data': 'dynamically changing reactive forms throws registeronchange error submitting check one x current behavior changing reactive form template fails replacing form throws error expected behavior throw error change template minimal reproduction problem instructions click new template check console please tell us environment nodejs running windows angular version browser chrome language typescript', 'date': '2018-11-08T08:59:23Z'}"
"50",49,"{'data': 'urgent problem unexpected end json npm install bug report affected package error angulardevkitbuildangularbuilds situation lasted two days description run npminstall always prompt error resulting failure install minimal reproduction angulardevkitbuildangularbuilds pr exception error environment angular version silly fetchpackagemetadata error caniuselite unexpected end json input parsing near split lgtm', 'date': '2018-11-08T03:33:24Z'}"
"51",50,"{'data': 'npm install error ionic npm warn angularcdk requires peer angularcore gt lt none installed must install peer dependencies npm warn angularmaterial requires peer angularcore gt lt none installed must install peer dependencies npm warn angularanimations requires peer angularcore none installed must install peer dependencies npm warn angularforms requires peer rxjs none installed must install peer dependencies npm warn angularforms requires peer angularcore none installed must install peer dependencies npm warn angularcommon requires peer rxjs none installed must install peer dependencies npm warn angularcommon requires peer angularcore none installed must install peer dependencies npm warn angular requires peer rxjs none installed must install peer dependencies npm warn angular requires peer angularcore none installed must install peer dependencies npm warn angularplatformbrowserdynamic requires peer angularcore none installed must install peer dependencies npm warn angularplatformbrowser requires peer angularcore none installed must install peer dependencies npm warn requires peer none installed must install peer dependencies npm warn ajvkeywords requires peer ajv none installed must install peer dependencies npm warn package typescript included dev production dependency packagejson file name bokies version author titen homepage private true scripts clean ionicappscripts clean build ionicappscripts build lint ionicappscripts lint ionic build ionicappscripts build ionic serve ionicappscripts serve dependencies angularanimations angularcdk angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic ionicnativecamera ionicnativecore ionicnativefile ionicnativefilepicker ionicnativefiletransfer ionicnativeimagepicker ionicnativekeyboard ionicnativenativestorage ionicnativenetwork ionicnativeonesignal ionicnativesplashscreen ionicnativestatusbar ionicnativethreedeetouch ionicstorage ionicangular ionicparallax ionicons npminstallpeers rxjs rxjscompat swtoolbox typescript works zonejs devdependencies ionicappscripts typescript description great app book service communicate employee mixing different angular versions packagejson use one one version packages got release versioning ok different say', 'date': '2018-11-08T01:51:19Z'}"
"52",51,"{'data': 'domsanitizer gridarea nt want call domsanitizer valid gridarea contain slash inside thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template class kushnir andrew stylegridarea andrew unsafe', 'date': '2018-11-07T22:57:07Z'}"
"53",52,"{'data': 'router annoying redirect home error occurs lazy loaded modules bug report affected package issue caused angularrouter regression description always error occurs page angular redirects page root problem developing annoying always miss module try url angular fail consolelog reason redirect go code fix issue example missing module go back browser long route angular decided redirect back root need type long url minimal reproduction exception error none environment angular version anything else relevant thanks issue closing expected behavior currently therefore bug however think issue need better way recover errors navigation apis coming time soon', 'date': '2018-11-07T22:29:20Z'}"
"54",53,"{'data': 'request ngelseif feature request right people nesting templates nt really seem intuitive would possible achieve something like ngcontainer renders first direct child true value ngif statement releavant package feature request angular description clear concise description problem missing capability describe solution like solution mind please describe describe alternatives considered considered alternative solutions workarounds ngswitch gt ngswitch duplicate html senior citizen middle ages iam teenager still drink milk complexe html ts template string set age age number let template age gt template senior else age gt template middle else age gt amp amp age lt template teenager thistemplate template personbounty amp amp personwantsmeat luffy else personbounty amp amp alliesprimaryally revo dragon else alliesprimaryallynull zoro else alliesprimaryallyundefined amp amp alliesbounty sanji html senior citizen middle ages teenager still drink milk complexe html', 'date': '2018-11-07T21:05:00Z'}"
"55",54,"{'data': 'typeerror caller callee arguments properties may accessed strict mode functions arguments objects calls really really need understand causes happens moment get click mouse open ngbdropdownmenu happens ngbdropdownmenu items dynamically created loaded outside constructor ngoninit hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag might also try gitter community angularangular nice wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-07T21:00:27Z'}"
"56",55,"{'data': 'grpc grpcweb support feature request relevant package feature request angular angularcli maybe new one angulargrpc description clear concise description problem missing capability long native would super native support grpc already library implements grpc communication clients generation however two problems generated client classes angular services angular cli involved generating updating grpc services would super generating grpc clients done cli important cli would define location accessibility generated files according best practices describe solution like solution mind please describe love grpcweb nicely playing together angular magic describe alternatives considered considered alternative solutions workarounds well using asis also fine feature must wouldbegoodtohave feature requests angularcli filed issue tracker angularangularcli please reopen issue repo thanks hi kara really issue angular cli want raise global question whether angular implement grpc module clients use grpcweb thing want know one thing whether going happen one day grpcweb least would option scope closest angular releases', 'date': '2018-11-07T20:01:53Z'}"
"57",56,"{'data': 'multiple formgroups sticking web page hi issue create several formgroups form handles customer details time another customer selected table reset form selected customer details second select page sticking becomes responsive even browser debug tools opening cpu page high nothing happening never returns normal condition component code input selectedcustomer lockedcustomer customerdetails lockedcustomer customerdetailsform formgroup customeridentifiers formarray customeradditionalnames formarray customeraddresses formarray customeremails formarray customerphones formarray ngoninit thiscustomeridentifiers thisfbarray thiscustomeradditionalnames thisfbarray thiscustomeraddresses thisfbarray thiscustomeremails thisfbarray thiscustomerphones thisfbarray thiscustomerdetailsform thisfbgroup customerid fullname firstname middlename lastname addedon addedby lockingcomment suggestedreleasedon suggestedreleasedby releasecomment customeridentifiers thiscustomeridentifiers addresses thiscustomeraddresses additionalnames thiscustomeradditionalnames datesofbirth thiscustomerdatesofbirth emails thiscustomeremails phones thiscustomerphones ngonchanges changes simplechanges changes selectedcustomer amp amp changes selectedcustomer currentvalue thisrefreshcustomerdetails thisselectedcustomer refreshcustomerdetails selectedcustomer lockedcustomer void thiscustomerdetails selectedcustomer thisrefreshdetailsform refreshdetailsform void thiscustomerdetailsform thiscustomerdetailsformreset customerid thiscustomerdetailscustomerid fullname thiscustomerdetailscustomerfullname firstname thiscustomerdetailscustomerfirstname middlename thiscustomerdetailscustomermiddlename lastname thiscustomerdetailscustomerlastname addedon thiscustomerdetailsaddedon addedby thiscustomerdetailsaddedby lockingcomment thiscustomerdetailslockingcomment suggestedreleasedon thiscustomerdetailssuggestedreleasedon suggestedreleasedby thiscustomerdetailssuggestedreleasedby releasecomment thiscustomerdetailsreleasecomment clean old lists values thiscustomeridentifierslength gt thiscustomeridentifiersremoveat thiscustomeraddresseslength gt thiscustomeraddressesremoveat thiscustomeremailslength gt thiscustomeraddressesremoveat thiscustomeradditionalnameslength gt thiscustomeraddressesremoveat thiscustomerphoneslength gt thiscustomeraddressesremoveat removing part formgroups creating refreshdetailsform method works perfect number formgroups sticking form resets errors console things point root cause issue angular ninja several months want understand issue using angular issue always reproducing thanks lot aleksey hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-07T20:01:02Z'}"
"58",57,"{'data': 'router regression relativelinkresolution since bug report affected package issue caused package angularrouter regression yes previous version bug present description angular router introduced broken angular minimal reproduction click hyperlink click relative hyperlink error occurs error match routes url segment lazycompbcomp expected route changing works angular environment angular version looks like caused pr opened investigating seems things broken angular master corrected expected broken lazyloaded modules legacy broken normallyloaded modules broken normallyloaded modules compare', 'date': '2018-11-07T19:43:00Z'}"
"59",58,"{'data': 'multiple formgroups sticking web page hi issue create several formgroups form handles customer details time another customer selected table reset form selected customer details second select page sticking becomes responsive even browser debug tools opening cpu page high nothing happening never returns normal condition component code input selectedcustomer lockedcustomer customerdetails lockedcustomer customerdetailsform formgroup customeridentifiers formarray customeradditionalnames formarray customeraddresses formarray customeremails formarray customerphones formarray ngoninit thiscustomeridentifiers thisfbarray thiscustomeradditionalnames thisfbarray thiscustomeraddresses thisfbarray thiscustomeremails thisfbarray thiscustomerphones thisfbarray thiscustomerdetailsform thisfbgroup customerid fullname firstname middlename lastname addedon addedby lockingcomment suggestedreleasedon suggestedreleasedby releasecomment customeridentifiers thiscustomeridentifiers addresses thiscustomeraddresses additionalnames thiscustomeradditionalnames datesofbirth thiscustomerdatesofbirth emails thiscustomeremails phones thiscustomerphones ngonchanges changes simplechanges changes selectedcustomer amp amp changes selectedcustomer currentvalue thisrefreshcustomerdetails thisselectedcustomer refreshcustomerdetails selectedcustomer lockedcustomer void thiscustomerdetails selectedcustomer thisrefreshdetailsform refreshdetailsform void thiscustomerdetailsform thiscustomerdetailsformreset customerid thiscustomerdetailscustomerid fullname thiscustomerdetailscustomerfullname firstname thiscustomerdetailscustomerfirstname middlename thiscustomerdetailscustomermiddlename lastname thiscustomerdetailscustomerlastname addedon thiscustomerdetailsaddedon addedby thiscustomerdetailsaddedby lockingcomment thiscustomerdetailslockingcomment suggestedreleasedon thiscustomerdetailssuggestedreleasedon suggestedreleasedby thiscustomerdetailssuggestedreleasedby releasecomment thiscustomerdetailsreleasecomment clean old lists values thiscustomeridentifierslength gt thiscustomeridentifiersremoveat thiscustomeraddresseslength gt thiscustomeraddressesremoveat thiscustomeremailslength gt thiscustomeraddressesremoveat thiscustomeradditionalnameslength gt thiscustomeraddressesremoveat thiscustomerphoneslength gt thiscustomeraddressesremoveat removing part formgroups creating refreshdetailsform method works perfect number formgroups sticking form resets errors console things point root cause issue angular ninja several months want understand issue bug angular wrong implementation side using angular thanks lot aleksey reported issues require minimal reproduction issue suggest using stackblitz plunker github sure angular problem problem code might want try gitter stackoverflow community help minimal repro please feel free file new issue following issue template', 'date': '2018-11-07T17:29:09Z'}"
"60",59,"{'data': 'missings informations angular elements docs angulario bug report description think angularelements documentation well explained example stuck angular environment think usefull case angularelements people outside angular jquery app react vuejs plain htmljs nt understand would want use angularelements angular app need polyfills instead using directly angular happy find popup service example find angular nothing usefull demo expected vs actual behavior expected first need informations currently doable angularelements everything possible plz possible angularelements possible road map futur vision angularelements complete nothing going added example like popup service used plain htmljsjquery world add real usecase demo inside angular explain possible directive pipe service external user mean used enduser angularelements lib inside angularelements anything else relevant created big library angular main concern lot system migrate angular want build lib import everywhere without building scratch angular applications behave organisation angularelements way go actually seem missing lot informations trying find anything google mess cant find usefulll information collide angularjs angular nothing angularelements directly', 'date': '2018-11-07T15:31:16Z'}"
"61",60,"{'data': 'ngstyle directive behaves differently style directive bug report regression know description first one works second one nt also using hexadecimal value instead rgb value gets converted rgb minimal reproduction environment angular version angular cli node os darwin angular animations cdk common compiler compilercli core forms languageservice material platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli angularflexlayout ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack also getting issue use hexadecimal value styleboxshadow well also tried different way working perfect passed function takes values rgb color convert hexadecimal value gets bind style attribute function returnhex rgb let hex number rgb tostring hexlength lt hex hex return hex rgbtohex r g b let red thisreturnhex r let green thisreturnhex g let blue thisreturnhex b return red green blue', 'date': '2018-11-07T14:53:35Z'}"
"62",61,"{'data': 'new httpparams nt encode equal sign bug report affected package issue caused package angularcommonhttp regression assume description object created encodes properties including preencoded characters nt encode minimal reproduction stays becomes environment angular version', 'date': '2018-11-07T14:26:22Z'}"
"63",62,"{'data': 'invalid number input value null bug report affected package reactiveformsmodule angularforms regression description angular issue reactive forms using number input able type multiple wherever want chrome tricky part comes next value input longer valid number like example results value control null means validator control required form valid minimal reproduction exception error angular valid invalid environment angular cli node os linux angular animations cdk common compiler compilercli core forms languageservice material platformbrowser platformbrowserdynamic platformserver router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack workaround change type number text pattern instead workaround change type number text pattern instead longgt use solutions form still valid users able type nonnumeric characters input mobile users wo nt automatically get numeric keyboard wrong pattern trick able get numeric keyboard automatically mobile browser tested android chrome ios safari update nonnumber input type number design angular issue longgt design angular issue angular issue ignores error state input', 'date': '2018-11-07T08:15:32Z'}"
"64",63,"{'data': 'fulltemplatetypecheck nt work description created new project added shows error nt show errors angular version package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack works template typcheck feature aot compilation dawidgarus aot error occur even without way enable jit errors checked aot anyaway get free fulltemplatetypecheck throughout possible jit templates compiled browser code gets compiled ts js types check also would point jit compilation thing aot browser wait project compile every time reload page', 'date': '2018-11-07T07:36:01Z'}"
"65",64,"{'data': 'union types validated templates bug report affected package issue caused package angular description type component typed observable component get condition always return false since types actiontype overlap inside template dont get error would expect see error compilation environment angular version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack trotyl embarrassing made filled issue template likely respected first place trotyl bad accidentally saved', 'date': '2018-11-07T00:59:34Z'}"
"66",65,"{'data': 'location path returns empty bug report affected package angularplatformbrowser description want get current location using service instead problem returns empty tried angularioapicommonlocation example stackblitz returns empty minimal reproduction exception error errors environment angular version seems correct actually part url different compared href example empty location works expected search google something similar please close meriturva okay proper way get current url currect one see thanks', 'date': '2018-11-06T22:12:58Z'}"
"67",66,"{'data': 'packageshttp generate correct ngsummary bug report affected package packageshttp regression yes happen current angularuniversal description upon upgrading angularuniversal bazel fine grained deps running issue di information packageshttp inspecting ngsummary see di information produced minimal reproduction clone pr need add couple deps updated see error running exception error description environment angular version bazel gt anything else relevant', 'date': '2018-11-06T21:57:20Z'}"
"68",67,"{'data': 'generic class name optimized generic variable name bug report affected package sure guess core package regression first deployment description following method calling development mode ie code prints name whatever class called calling code method prints environment angular version package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdkmodules angularcdk angularcli angularmaterial angularmaterialmomentadapter ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack thats prod mode makes code smaller angular cli angular core behaviour intended toxicable ok sounds logical config looks like know option causes behaviour seems like fixes makes package super big yup bad practice read name functions much would nt advise toxicable read name class function thats common java world part unified api therfore kind needed still bug optimizer things since valid code classes downleveled functions common thing js world specifically due reason bug bundle sizes would massive rename variables konsultaner relates configuration angular cli project issue belongs angularangularcli repo closing toxicable know mean understand right bad practise sure noone going fix issue ever language optimizer work intuitively transparent technically bugclosing issue probably right decision anyway', 'date': '2018-11-06T21:28:27Z'}"
"69",68,"{'data': 'named outlets lazy loaded modules auxiliary routes work bug report affected package regression description named routes lazy loaded modules loaded part auxiliary route another lazy loaded module work empty routes work correctly minimal reproduction note named unamed outlets nonlazy loaded modules work correctly unnamed route named route accessed auxilliary route however example problem link second link list titled lazy content parameters exception error error error uncaught promise error match routes url segment environment searched issues found others similar setup exactly workaround issue also unsuitable use case need able reroute auxiliary outlet without changing primary route thank', 'date': '2018-11-06T21:11:10Z'}"
"70",69,"{'data': 'documentation error routing amp navigation milestone route guards docs angulario bug report description right start next part milestone paragraph register login route authauthroutingmodulets appmodulets import add authmodule appmodule imports however following route guards milestone start absolutely mention steps creatingtalking authroutingmodule authauthroutingmodulets minimal reproduction affected url expected vs actual behavior could module end accidentally missnamed one actually appearing throughout chapter maybe instead original register login route authauthroutingmodulets appmodulets import add authmodule appmodule imports register login route adminadminroutingmodulets appmodulets import add authmodule appmodule imports', 'date': '2018-11-06T19:12:25Z'}"
"71",70,"{'data': 'validate birthday form sign form angular trying validate birthday form html month january february march typescript using reactive form builder validate fields like username password also found question suggested use momentjs confused ca nt figure use moment js form validating mentioned birthday field moment challenging part months days february even overcome challenge hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-06T12:36:30Z'}"
"72",71,"{'data': 'generating managing translations files large scale applications like erp etc cumbersome feature request generating managing translations files large scale applications like erp etc cumbersome relevant package feature request angular description using angular builtin translation angular platform provides managing generating translation files multiple locale cumbersome error prone difficult manage application size scales generating translation files adding new tags generates default file messagesxlf becomes difficult dig default file size lines code parse new transunits move locale files manually paste target tag new transunits describe solution like either translation file provided module component level must version control system used check differenceschanges default messagesxlf file changes automatically added locale files means atleast new transunits must appended automatically locale files intended developer needs create describe alternatives considered gone ngxtranslate etc tools provides runtime translation using pipes angular builtin internalization module provides additional updates near future ease internationalization process developers far better third party packages gone past library uses xliffmerge generate translation files base translation file ref agreed need improve', 'date': '2018-11-06T12:27:48Z'}"
"73",72,"{'data': 'proposal metadata component feature request releavant package feature request angular angularcore angularcompiler description currently export angular components native custom elements needs steps add component array create element class api define element api import browsermodule angularplatformbrowser import ngmodule injector angularcore import createcustomelement angularelements import hellocomponent hellocomponent ngmodule declarations appcomponent imports browsermodule providers entrycomponents hellocomponent export class appmodule constructor injector injector const el createcustomelement hellocomponent injector customelementsdefine apphello el points think improved created element selector original component one case needs write twice boilerplate code case passing injector directly intuitive step create custom element automatically registered like components describe solution like proposal introduces new field metadata gives us following benefits angular compiler know component nt going custom elements steps generated custom element automatically enabled one selector component selector set defined automatically angular bootstrapping nt know custom elements matter angular components want change selector custom element accepted metadata type default', 'date': '2018-11-06T01:51:49Z'}"
"74",73,"{'data': 'memory leak issue due createelement method bug report affected package think variable responsible keeping traces removed dom objects regression nt believe description cases users need add remove dom elements using angular however dom elements created using createelement leaving traces dom elements js heap memory even removal dom elements dom tree using removeelement cause problem believe due fact angular assigns newly created elements variables reset elements removed dom tree minimal reproduction created stackblitz reproduce issue add remove element clicking toggle button automatically generate clicks see noticalbe spike js heap memory also created another stackblitz difference previous stackblitz replaced method please take look stackblitz live demo show memory leakage exception error initial preview demos see live js memory numbers multiple clicks start test button clicking start test multiple times see live js memory number spiked one stayed almost similar started initially environment angular version reproduced bug angular angular create node destroy longer needed try production mode suspect specific dev mode create debug elements could please try production mode pkozlowskiopensource case debug info general case depends renderer implementation pkozlowskiopensource thank suggested tried app production mode see memory leakages gone however still think could create issues people large number unit tests manklu thanks suggested solution bit apprehensive using included public api could create problems aot production mode actually someone already faced problem shijir thnx confirming debugonly issue definitively caused debug renderer thus sticking testing tag manklu totally right custom renderer creates private state connected node would run kind memory leak issues guess best workaround create utility function sth like ideal get going fix pkozlowskiopensource think culprit createelement method assigns newly created node element internal variable workaround could resorting native method gt workaround could resorting native documentcreateelement method shijir definitively another workaround yes provided work dom nt need renderer abstraction course shijir bit apprehensive using thisrendererdestroynode included public api documented part overlooked may undefined', 'date': '2018-11-05T23:58:36Z'}"
"75",74,"{'data': 'activatedroute data loaded route using component multiple lazy routes bug report affected package issue happens latest angularangular regression description use component multiple lazyloaded routes loaded wrong route definition please see stackblitz minimal reproduction environment angular version anything else relevant also happens define second route returned empty activatedroute docs says property description data observable observable static resolved data route understanding current route routes workaround trying figure solve problem found issue nt happens defining value provider workarounds problem imo bad workaround clogging code lot unnecessary providers problem samplemodule routermodule imports another module including routermodule well found solution putting othercomponent coremodule imported samplemodule othermodule removing othermodule import samplemodule yes geromegrignon right need break module many pieces solve buy still think weird issue thanks issue however see stackblitz nt describe exactly reproduce issue say wrong route nt describe right route going close issue information included please create new issue detailed minimal steps reproduce igetmaster apologies described stackblitz taking another look', 'date': '2018-11-05T23:30:41Z'}"
"76",75,"{'data': 'directives apply ngclass using ngfor bug report affected package issue caused package angularcore description case possible refer class inside directive ngclass executed directive initialized following code directive return false environment angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularflexlayout angularmaterial ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack please provide reproduction working fine ericmartinezr bad setting variable constructor afterviewinit', 'date': '2018-11-05T22:41:17Z'}"
"77",76,"{'data': 'third party use mutationobserver cause browser hang submitting current behavior akamai develop real user monitoring rum js library monitors performance web apps called boomerang boomerang uses mutationobservers order capture data user experience framework agnostic way cases boomerang loaded asynchronously run site angular javascript runs point ngzone replaced mo zone aware version depending timings page mutationobserver object instantiated zone occurs mo callback runs angularngzone marks zone unstable zone stability checks cause dom element updatesdeletesadditions refires mo causing infinite cycle hangs browser cases see occur far angular calls code wrapped zone wrapped history functions start mutationobserver could angular gate calls browser apis order work around try detect ngzonezonejs page get native object tested angular amp method saving native object finding new name expected available future versions one boomerang goals minimize observer effect also wary using zone aware etc trigger unneeded work base page listenerscallbacks never work modify dom elements trigger exceptions need reacted first party code depending browser run code yet instrumented zone expected behavior use mo cause infinite loop environment observed angular hey querymetrics would mind checking workaround works see also blacklisted events', 'date': '2018-11-05T18:20:32Z'}"
"78",77,"{'data': 'resizable side bar submitting add example side bar may resized users hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-05T12:17:47Z'}"
"79",78,"{'data': 'injectabledecorator specific return type submitting current behavior called function return type using decorator therefore causes violation tslint rule see expected behavior type generally something avoid typescript removes type safety operations involved minimal reproduction problem instructions typescript import injectable angularcore injectable export class mycomponent motivation use case changing behavior return type specific tslint users need disable otherwiseuseful tooling issues', 'date': '2018-11-05T11:34:36Z'}"
"80",79,"{'data': 'discussion subreddit added community list submitting current behavior nt know subreddit angular gain quite lot popularity unfortunately subreddit created year angular released name violates branding guideline mods solve problem putting angular banner subreddit though question think subreddit added list communities resourcesjson ps ask rangular quite popular one expected behavior na minimal reproduction problem instructions na motivation use case changing behavior na environment added old repo website probably lost change', 'date': '2018-11-05T09:22:45Z'}"
"81",80,"{'data': 'queryparammap working array like params submitting current behavior navigate url array like parameters items category meat amp category fish queue parsed correctly attached routerstate array would try get query parameter category return first one meat since method returning strings side return correct array expected behavior parammapget return actual parameter value motivation use case changing behavior consistency ability get query string params says queryparams deprecated ca nt get params parammap environment angular version browser x chrome desktop version xx tooling issues node version platform mac order get array parameters use getall closed', 'date': '2018-11-05T01:31:36Z'}"
"82",81,"{'data': 'nested routerlink nt work submitting current behavior nested routerlink inner one nt work even nt matter use expected behavior inner routerlink navigates correct route minimal reproduction problem instructions open click navigates shoudl navigated motivation use case changing behavior environment rezarahmati due event bubbling click links time first inner outer link much angular edit get working must stop event propagation inner link something like manklu thanks yes work', 'date': '2018-11-05T01:26:24Z'}"
"83",82,"{'data': 'lazy load modules working properly angular submitting current behavior come across weird routing issue app angular lazy load module working expected nt import lazy load module promotionsmodule appmodulets proud build fail routing working error message error error uncaught promise error loading chunk promotionsmodule failed however modules app uses logic broken modules works without importing module appmodulets according also lots research stackoverflow following found developer said angular lazy load module working complex largesized application works simple application true developers suggest use apparently solution dirty workaround additionally cause proud build fail according seems like bug using angular lazy load module upgrade latest angular fix problem know angular open source problem really slowing development speed anyone give guidance causes issue fix expected behavior work without importing lazy loaded modules appmodulets minimal reproduction problem instructions approutingts const approutes routes path redirectto home pathmatch full path home component homepagecomponent path myorder loadchildren myordersmyordermodule myordermodule myordermodulets appmodulets motivation use case changing behavior currently fix problem nt think right way works exactly expect still lazy loaded importing lazy load modules appmodulets lazy loaded module instead leaving parent path empty string change environment angular cli node os angular angularanimations angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview using environnement working forget routermoduleforrootforchild geromegrignon thanks help routermoduleforrootforchild included app tried app added new lazy load module exactly example run ng build watch shows waring message warning duplicated path loadchildren detected rebuild take latest version detected override save rebuild time perform full build validate routes nt overlap proud build chuckjs module successfully built chunk kb rendered however click menu still get error console error error uncaught promise error loading chunk failed take look issue solution would use absolute path rather relative ones loadchildren attribute geromegrignon try change path absolute path receive error error error uncaught promise error loading chunk cataloguesmodule failed weird thing every lazily loaded module working app old modules still working normal logic using relative path newly added module stop working sorry reported issues require reproduction issue suggest using stackblitz issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked additionally please update example current version angular provide security updates previous versions angular since upgrade new versions nt require extensive work due low number breaking changes versions', 'date': '2018-11-05T00:45:17Z'}"
"84",83,"{'data': 'document tsickle dependency setup extracted need document add tsickle dependency angular project uses closure compiler minification based info order ensure better compatibility various typescript releases often minor releases include breaking changes apis tsickle uses removed hard dependency compilercli tsickle compiler still use tsickle annotateforclosurecompiler flag turned angularcompileroptions applicationdeveloper provide tsickle tsickle version available typescript version compatible angularcompilercli npm install tsickle npm client determine right version project based typescript version peerdependencies declarations tsickle packagejson files need updated using tsickle closure compiler advanced usecase experienced developers expected need info docs brief factual', 'date': '2018-11-05T00:06:15Z'}"
"85",84,"{'data': 'fafamas submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment', 'date': '2018-11-04T00:48:00Z'}"
"86",85,"{'data': 'include ngxs state management library explore angular resources section ngxs modern state management library angular applications great open source project already received stars github time writing please add explore angular resources section following url documentation website submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment prs welcome smiley see resourcescontributingmd', 'date': '2018-11-03T03:29:12Z'}"
"87",86,"{'data': 'unable refresh view indide subscribe submitting current behavior keep running developed application angular c li version second third subscribe inside subscribe populate view data second third nested subscribed view never gets updated ngzone timeout inside cddetectchanges still working happening time please fix expected behavior view get populated data nested subscribe async sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked', 'date': '2018-11-02T22:42:38Z'}"
"88",87,"{'data': 'ca nt create app find module clonejs submitting current behavior trying create new app ca nt make message bash ng new someapp throw err error find module clonejs functionmoduleresolvefilename functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload expected behavior create app minimal reproduction problem instructions bash node v npm v npm install g angularcli npm warn optional skipping optional dependency fsevents nodemodules angularclinodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os linux arch angularcli updated package ng new someapp comes error mentionned environment coming trying create react native app issue must module shared two issue since hours half day ago issue yet seems gracefulfs module thing happened ran updated packages ng cli works seeing error try run edit creating app works fine ng serve gives error latest install angularcli difference nt add seeing error application created create react app heads fixed app getting error seems work fine though bitbucket pipeline simply crashes going sounds like recent update missing see post solved isaacsnodegracefulfs please report issue issue closed droidenator mentioned fixes issue looks like need wait last release available npmjscom issue fixed installed clone js package npm clone save dev npm install gracefulfs tried nt work also working node angular', 'date': '2018-11-02T21:01:43Z'}"
"89",88,"{'data': 'suggestions cli doc reference submitting current behavior great see angular cli content docs like see expanded even helpful expected behavior would like see thorough descriptions options brief examples minimal reproduction problem instructions let look one example second line show ng g options appropriate shortcut service description name provide information name include folder name identify service generated mention name include service automatically added would quite helpful show examples ng g herosherodata results appherosherodataservicets ng g logging results apploggingservicets etc common options missing dry run nt think flat works services directory created unless specified part name would great detail option descriptions motivation use case changing behavior especially beginners cli great tool sometimes seems like magic would great provide information get need environment like jump start working modifications described', 'date': '2018-11-02T16:08:17Z'}"
"90",89,"{'data': 'icu standard stand alone day week datepipe supported submitting current behavior possible format date stand alone day week datepipe icu standard c expected behavior example fits locale file contains definitions array position daysstandalone defined enum localedataindex getlocaledaynames function called directly formstylestandalone parameter everything works expected finnish would get maanantai instead maanantaina however formatdatets getdateformatter function case would pass formstylestandalone datestrgetter interesting months case format standalone icu standard l respectively would propose cases would added getdateformatter following cases per line icu standard day week standalone case c case cc case ccc formatter datestrgetter translationtypedays translationwidthabbreviated formstylestandalone break case cccc formatter datestrgetter translationtypedays translationwidthwide formstylestandalone break case ccccc formatter datestrgetter translationtypedays translationwidthnarrow formstylestandalone break case cccccc formatter datestrgetter translationtypedays translationwidthshort formstylestandalone break minimal reproduction problem instructions link stackblitz shows problem motivation use case changing behavior able use angular internationalization datepipe without resort hacks environment', 'date': '2018-11-02T15:17:55Z'}"
"91",90,"{'data': 'cdkdragdrop work wrapped lists submitting current behavior using cdkdroplist horizontal list elements wraps next line sort correctly expected behavior ability sort list minimal reproduction problem instructions html css lukebooroo please open issue material repo', 'date': '2018-11-02T14:37:31Z'}"
"92",91,"{'data': 'angular input question please help input stringnumberprimitive type child use parent pass value works set value input within child component passing value parent set click button child component cause life cycle events execute happening stringnumberboolean type use reference type name string everything works fine even set value object within component idea hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-02T14:30:31Z'}"
"93",92,"{'data': 'bug pwa url error ngswjson file basehref pointing file eg indexhtml submitting current behavior problem file build application configuration file see points file compile result file see generates urls file folder file used cache application cache work since right url expected behavior think file looked like minimal reproduction problem instructions create application uses pwa basehref points file eg compile application url generated file wrong motivation use case changing behavior think would take account basehref deal file take root file take file folder information use file use system route angular hash url point towards file project hosted google cloud storage update application url type end error url point file solve problem force angular keep url eg make corrections url file manually cache application works environment sounds reasonable imo handled level please open issue repo post', 'date': '2018-11-02T10:56:50Z'}"
"94",93,"{'data': 'bug ngmodule metadata found function magical optimization aot submitting current behavior runtime error expected behavior minimal reproduction problem instructions motivation use case changing behavior environment throws production mode works works throws bellow error ts const platform platformbrowserdynamic platformbootstrapmodule appmodule catch err gt consoleerror err log activated source maps dup compromise', 'date': '2018-11-02T02:34:33Z'}"
"95",94,"{'data': 'feat serviceworker provide options notification click actions currently clicking push notification emits value fine limited eg app instance currently open need way provide advanced configuration options wrt handle notificstion clicks possible options top head open clients open new window open new window url defined property agree another convention specify urls per action could look url open based action name clients open focus last focused client navigate last focused client specific url eg specified alternatively could specify operations per action according predefined convention eg originally posted gkalpak cc alxhub keep track current support notification actions', 'date': '2018-11-01T22:43:44Z'}"
"96",95,"{'data': 'bug router redirecting root path page refresh submitting current behavior app rendering component userdetailcomponent path refresh page starts loading component suddenly redirect app path redirect see logs userdetailcomponent showing data loaded backend approutingjs app routes admin module lazy loading another routes approutingts adminroutingts expected behavior excpected behavior keep id url redirect root path minimal reproduction problem instructions navigate path userdetailcomponent refresh page app start loading component suddenly redirects path userlistcomponent finishes fetching data component userdetailcomponent motivation use case changing behavior want refresh page fetch updated data backend environment suspect caused angularfireauthauthstate investigating', 'date': '2018-11-01T21:30:56Z'}"
"97",96,"{'data': 'error loading component using viewencapsulationnative firefox ipad chrome submitting current behavior log error console error hostelcreateshadowroot function expected behavior display component correctly minimal reproduction problem instructions open firefox see console based threads already added webcomponentsjs package imported polyfill app still working environment viewencapsulationnative shadow dom must activate firefox deprecated standard polyfill implements shadow dom right one use viewencapsulationshadowdom work firefox without polyfill gt viewencapsulationnative shadow dom must activate firefox deprecated standard polyfill implements shadow dom right one use viewencapsulationshadowdom work firefox without polyfill manklu thanks lot saved night even documented', 'date': '2018-11-01T20:54:35Z'}"
"98",97,"{'data': 'please provide simple way reset formgroup initial state null state submitting current behavior forms provide way reset initial statevalues calling nulls values even form group initialized certain values requires take snapshot state values upon initialization call reset state clear state also includes dynamic validators updated dynamic forms dynamic form also adequately mark children pristine untouched custom form controls implemented via value accessors methods called manually expected behavior expect formgroup provide simple method restoring state form initialized user done hard refresh page form reconstructed data validators initialized page load minimal reproduction problem instructions create new form group initial values editing entity initializing entity info api call form group values nulled instead going back state initialized correct must assign property call unclear also resets dynamically added validators motivation use case changing behavior extremely common initialize formgroup values formcontrols nonnull values eg pair radio buttons whose values thus simple turn formgroup back state including dynamically changed validators without manually track snapshots state environment duplicate', 'date': '2018-11-01T20:23:26Z'}"
"99",98,"{'data': 'ng lint incorrect error message directives link angular guide incorrect message comes submitting current behavior run gives us error directive selector propertygridrow expected behavior error since actual documentation nt suggestion prefixing minimal reproduction problem instructions create directive without app prefix run ng lint motivation use case changing behavior documentation guide corrected use app prefix message corrected environment angular cli node os angular animations common compiler compilercli core forms platformbrowser platformbrowserdynamic router upgrade angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema schematicsangular schematicspackageupdate typescript webpack pertains cli issue filed angularangularcli repo', 'date': '2018-11-01T20:11:08Z'}"
"100",99,"{'data': 'hybrid application ngjs w route angular app submitting current behavior unable route angular component angular module bootstrapped use ngdobootstrap upgrade bootstrap angularjs components application expected behavior able route angular component upgraded angularjs component bootstrapped module seems misuse perhaps need bootstrap manually somehow minimal reproduction problem instructions reproduced ngupgradestatic playground load page render correctly routed properly point angularjs upgraded component bootstrapped application modify bootstrap export class constructor private upgrade upgrademodule ngdobootstrap thisupgradebootstrap documentbody bootstrap export class constructor private upgrade upgrademodule ngdobootstrap thisupgradebootstrap documentbody point router module work intended router module correctly load motivation use case changing behavior required properly migrate project angular environment rxjs angular corejs zonejs angularcore typesangular angularcommon angularupgrade angularcompiler angularplatformbrowser angularplatformbrowserdynamic angularrouter problem calling run initial navigation see details case need initial navigation manually eg ts constructor private router router ngdobootstrap thisupgradebootstrap thisrouterinitialnavigation alternatively use different approach bootstrap toplevel angular component call component way since normal component fired expected eg ts component class appcomponent implements oninit constructor private upgrade upgrademodule ngoninit thisupgradebootstrap setuplocationsync thisupgrade lt imported ngmodule bootstrap appcomponent class appmodule closing duplicate since underlying issue gkalpak thank fast thorough response future visitors ticket used first approach initializing router manually second approach feels cleaner introduced circular dependency components way upgrade component eg export const angular module component directive appcomponentselector downgradecomponent component appcomponent upgradebootstrap appcomponentappcomponent also preparing demo realized one constrain might obvious first since angular bootstrap component angular process template usual means default use tags known angular ie either standard tags defined angular component tags since point outer plain angular hybrid stuff yet use upgraded angularjs components want want instead angular ignore template outer going processed angularjs called eg hook several ways achieve one use tag name outer angularjs component use attribute instead see action demos plain setup router setup router thanks george appreciate hard work putting', 'date': '2018-11-01T16:31:52Z'}"
"101",100,"{'data': 'angular serving serve command requires run angular project project definition could found please help hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-11-01T12:33:40Z'}"
"102",101,"{'data': 'multiple form controls bound input element use ngif directive submitting current behavior ngif directive input field inside multiple contols bind field changing current control results binding invisible controls calling setvalue invisible controls set value input field call clearchangefns function select tab everything work correctly expected behavior input value form control value minimal reproduction problem instructions environment browser x chrome desktop version guess similar right', 'date': '2018-11-01T11:19:27Z'}"
"103",102,"{'data': 'behave submitting current behavior setting tags router link angularspecific stuff nt result router link expected behavior setting innerhtml behave writing html inline right minimal reproduction problem instructions html hey inside link motivation use case changing behavior component data table used places application want able supply custom html use tables data need one place custom html link something another case custom html routerlink something hasahmed angular compiler runtime ca nt pass angular bindings nothing could compile bindings pass pure html code duplicate mlcmlapis right intended behavior case work around problem using href attribute directly example mlcmlapis perhaps optional angular runtime compiler could included seems like functionality available hasahmed jit compiler loaded injected runtime even inside aot app create dynamic component module html template extra feature configure use code nt count type auto optional feature automatically', 'date': '2018-11-01T07:34:49Z'}"
"104",103,"{'data': 'error staticinjectorerror appmodule matcell cdkcolumndef hi use fuse material template particular code get error code appcomponenthtml imported import matinputmodule matformfieldmodule angularmaterial also want know bring elements ie elements vertical layer layer display format nt pasted entire code div aligned horizontally vertically support request opened nt belong', 'date': '2018-11-01T06:55:59Z'}"
"105",104,"{'data': 'change script inclusion compatible csp hashes submitting current behavior page deployed compiled scripts included inline approot tags eg difficult impossible make function using csp without reverting allowing unsafeinline allows script page run expected behavior ideally inline script would simple static script could constant hash used csp would load scripts locally csp would scriptsrc self sha allow local files one static script startapp example code would appear minimal reproduction problem instructions difficult demonstrate requires csp header injection normal site layout appearent failure occurs add csp steps reproduce deploy site bucket set cloudfront force allow header injection lambdas set lambdas include scriptsrc self access site cloudfront observe console errors caused security tokens motivation use case changing behavior allow proper securing sites script injection inpage denying inline scripts except ones specifically allowed csp hash avoids need open site security using scriptsrc unsafeinline environment may seem like aws issue core issue content page control compliant modern security standards note examples removed tags referenced particular body tags key script files preloaded started single static call call static able hashed included authorised hashes csp files local also legal please report yep issue reported angular cli repo linked closing', 'date': '2018-11-01T02:42:55Z'}"
"106",105,"{'data': 'jit compiler errors submitting current behavior upgrading angular starting app app crashes browser error jiterrorlog appended starting app app runs well browser expected behavior ng serve jit compiling fail error minimal reproduction problem instructions environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform linux frozenbyte looks like something probably filed angularangularcli repo thank openend', 'date': '2018-10-31T21:55:23Z'}"
"107",106,"{'data': 'feature request execute appinitializers appmodule injected submitting current behavior appmodule constructed injected dependencies injected appmodule also constructed appinitializer factory injected invoked expected behavior appinitializer factory invoked appmodule constructed injected afterwards appmodule dependencies constructed promise returned appinitializer resolved minimal reproduction problem instructions motivation use case changing behavior appinitializer loads json config data server overwrites environmentts buildonce deployanywhere setup app using angularreduxstore combined reduxobservable epics per docs epic middleware constructed appmodule constructor appmodule constructed dependencies used epic middleware also constructed dependencies refer environmentts constructors currently middleware dependencies constructed appinitializer invocation causes default environment config used thought possible workarounds none seem ideal use complex appinitializer explicitly invokes angular injector set redux config loaded avoid using environmentts services use wrapper service provides config instead avoid using environmentts service constructors service implement lazy property getter hoping implementation nt require us change individual service implementations use environmentts suggestions welcome environment kara updated simple app reproduce issue stumbled thought bug case environment information needs set constructor service also logger uses thisconstructorname identifier logger depends environment loaded via appinitialzer would nt issue ngoninit would work services', 'date': '2018-10-31T21:37:44Z'}"
"108",107,"{'data': 'making merged symbols type amp injectiontoken behave seamlessly like class submitting current behavior currently party module exports class uses token di provide easily injected simply typing constructor parameter however library updated hide internal details replace class type interface aliased type along injectiontoken simply typing parameter fails nothing done application using party library add everywhere expected behavior although understand type expressed easily nonclass type automatically express di would great able similar behavior simply providing injectiontoken use along nonclass type informations available build time ie fact symbol used type parameter also value attached even value injectiontoken even value ascertained degree precision simply blindly using value attached symbol would work class types nonclass types along injectiontoken might even work advanced solutions box eg value would allow easily expose interfaces keep internal details hidden currently users sprinkle code repeatedly minimal reproduction problem instructions motivation use case changing behavior much better developper experience allow library developper much easily expose clean interface prevent breakage future use internal methods environment typescript requires exact type type parameter used see information nonstarter trotyl alright let ignore part would rest possible ie say module foots would possible barts ts import foo foo export class barservice constructor private foo foo work foo class without annotation lemoinem wo nt work typescript could distinguish identifier reference type annotation would nt mistakenly link identifier simply try rather guessing nt know modify angular make work know doesnt work right point new feature suggestion thu nov pm trotyl yu lemoinem wo nt work typescript could distinguish identifier reference type annotation wouldnt mistakenly link identifier simply try rather guessing receiving mentioned reply email directly view github mute thread emitdecoratormetadata pure typescript feature specified angular powers di via type annotation jit guess wait microsofttypescript', 'date': '2018-10-31T19:27:14Z'}"
"109",108,"{'data': 'angular upgrade karma timeouts slow test runner using watch flag submitting current behavior angular upgrade angular minimal changes karma tests run lot slower fail timeout errors much often running watch mode tests take average minutes kick next run often fail unexpectedly give perspective full list unit tests used run minutes running angular saving file rebuilt seconds expected behavior run used normal speed minimal reproduction problem instructions motivation use case changing behavior environment sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked', 'date': '2018-10-31T19:12:30Z'}"
"110",109,"{'data': 'unclear dynamic actually submitting current behavior use arrow functions inside decorators get error aot expected behavior documentation tells us strictmetadataemit cause errors going actually errors suppress need add dynamic component motivation use case changing behavior working decorator requires arrow function passed want know drawbacks adding dynamic component environment', 'date': '2018-10-31T15:26:45Z'}"
"111",110,"{'data': 'pathrewrite eventsource problem server side event submitting current behavior use proxyconfjson configuration access backoffice try implement server side event notify application new information display problem try use pathrewrite eventsource error acceptable give eventsource complete path backoffice works expected behavior eventsource work use pathrewrite configuration minimal reproduction problem instructions backoffice handle server side event angular app proxy conf configuration path rewrite trying create eventsource pathrewrite environment', 'date': '2018-10-31T15:17:43Z'}"
"112",111,"{'data': 'add previouspath api locationservice submitting current behavior ca nt know previous route user gets current expected behavior wanted know user passed page gatting current one motivation use case changing behavior back button application uses navigate previous route nt wan na show previous route nt wan na plug router application state get previous route recomended alternative solution welcome environment upgrading angular register fact anymore use case motivation able solve issue using property says navigation ever happened since app boot longer defend use case issue consider closeable thanks thanks update issue close', 'date': '2018-10-31T14:08:26Z'}"
"113",112,"{'data': 'getting ca nt resolve parameters upgrading angular submitting current behavior upgrading angular getting following errors loading application ca nt resolve parameters httpxsrfinterceptor object object ca nt resolve parameters upgrademodule expected behavior errors motivation use case changing behavior environment angular version browser lukebooroo sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked issue caused including new dependencies', 'date': '2018-10-31T12:50:53Z'}"
"114",113,"{'data': 'angular save file nodejs snipped nodejs try download server angular code componentts servicets html response get file correctly recording browser network inspection tool however angular trying parse response json object obviously nt work since response blob error get unexpected token json position jsonparse xmlhttprequestonload angular changed responsetype instead header give error error srcappservicesuploadservicets error argument type headers httpheaders responsetype string assignable parameter type headers httpheaders header string string string observe body params ht types property responsetype incompatible type string assignable type json anyone solution thanks advance hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-31T09:55:18Z'}"
"115",114,"{'data': 'angular ca nt bind limit since nt known property input directive import directive attribute angularcore import ngcontrol angularforms directive selector inputlimit host input oninput export class inputlimitdirective constructor private ngcontrol ngcontrol attribute inputlimit public inputlimit string public oninput let newval thisngcontrolvaluesubstr thisinputlimit thisngcontrolcontrolsetvalue newval html want get maxlength form constant file getting error like angular ca nt bind inputlimit since nt known property input problem problems help hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation binding directive nt seem hard say without reproduce scenario prepare minimal stackblitz ask question stackoverflow still face issues', 'date': '2018-10-31T08:28:18Z'}"
"116",115,"{'data': 'feat angular language service ts html awareness submitting current behavior mycomponenthtml mycomponentts vs code typescriptreferencescodelensenabled rightclick find refrences shift nt show html template expected behavior mycomponentts vs code typescriptreferencescodelensenabled rightclick find refrences shift show html template receiving male irritating tue oct william lohan notifications githubcom wrote submitting regression behavior used work stopped working new release bug report performance issue x feature request documentation issue request support request gt please submit support request instead see please describe current behavior mycomponenthtml button mycomponentts vs code typescriptreferencescodelensenabled rightclick find refrences shift nt show html template expected behavior mycomponentts vs code typescriptreferencescodelensenabled rightclick find refrences shift show html template receiving subscribed thread reply email directly view github mute thread abhiad must watched repository github watch repository sent email new issue andor pr best would probably unwatch repository subscribe individual issues interest go github repository angularangular top next repo name three buttons unwatch star fork click unwatch watching maybe reviewing github preferences make sure start watching automatically stuff nt want could help well', 'date': '2018-10-30T16:12:41Z'}"
"117",116,"{'data': 'angular migration angular submitting minimal reproduction problem instructions environment error code error staticinjectorerror appmodule appmodule upgrademodule staticinjectorerror platform core appmodule upgrademodule nullinjectorerror provider upgrademodule appears forgotten add upgrademodule array future please try getting question answered gitter opening issue thanks', 'date': '2018-10-30T15:36:05Z'}"
"118",117,"{'data': 'avoid anchorscrolling domexception error hash fragments valid selectors submitting current behavior enabled angular router app loads route hash follow appropriate format expected selector error thrown example return error since valid format element selector even present page scrolling fail silently case however return error since valid element selector nt know expected behavior feature request would expect way enable using hash fragments valid dom selectors without error possibly setting additional configuration option router used conjunction error still present default fine encourages good practices however major use case avoiding error currently possible enabled detailed motivation adding setting allow error thrown might good option possibly something like alternatively way exempt individual route set module level would also effective scenario minimal reproduction problem instructions github repo instructions sample link angular application routing enable routermodule attempt access route hash fragment valid dom selector could something simple somehashdata something realistic amp motivation use case changing behavior major use case data passed hash fragment done way accordance ietf standards conforming oidc implicit grant standards authentication single page applications data returned oidcconformant authorization server including limited okta gigya ping identity cognito etc hash fragment hash fragment follows format resembles following accesstoken amp common way handle spas set callback route route authorization server redirects back adds hash data application hash parsed removed user redirected within spa authorization server used throwing error may normally fine likely expected user passing data url use query parameters instead hash fragment however currently possible avoid error using implicit grant oidcconformant authorization servers using redirect mode enabled primary current workaround remove reimplement anchor scrolling functionality manually instead environment number related duplicate issues reported', 'date': '2018-10-30T14:48:59Z'}"
"119",118,"{'data': 'stylesheet added template angular element nt get applied submitting current behavior adding stylesheet link component template supported works however component turned angular element viewencapsulation set ot shadowdom css link gets loaded styles get applied template element works viewencapsulation none emulated expected behavior css get applied html angular element minimal reproduction problem instructions loading font awesome adding circle icon template hello component works viewencapsulation none nt work shadowdom viewencapsulation motivation use case changing behavior linking stylesheets custom elements supported believe angular provide functionality thanks jackolantern ghost environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform two separated issue angular attaches element setting attributes attribute element attached resulting respected shadowroot setting attribute attaching stylesheet would recognized would work inside shadowroot even recognized font still wo nt got honored got icon corresponding placeholder fixed angular hi trotyl thanks input sure understood first point completely rel attribute links nt removed inserted shadow dom saying attribute nt event added late fontface ignored according discussion check end used bug chrome fixed although ca nt get work even inside vanilla custom element hm pretty confusing also import font inside css angular component works even inside shadow dom loading stylesheet link nt even puzzling ca nt get font work matter trying load inside vanilla custom element trotyl right first one sure rel attribute links nt removed inserted shadow dom saying attribute nt event added late exactly order operations something like createelement appendchild setattribute web component specs designed everybody using html template elements lol bit mismatch turns fixed ivy issue directly ivy attributes set node inserted root cause issue workaround could temporarily imperatively injecting appending link tag shadow root jenpeleva template element constructed imperative operations dom operations web order matters chrome bug ticket closed due complicated nt think means fixed robwormald trotyl thanks clarification guys', 'date': '2018-10-30T12:24:59Z'}"
"120",119,"{'data': 'posting data httpclient new angular nt know go help supposed please move correct place thing tried posting data back end back end entire data posted actually set key stringified empty value code data explanation data someprop value back end get php array someprop value wrong hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-30T11:05:49Z'}"
"121",120,"{'data': 'calling share point rest api angular application scenario angular application using httpget order hit share point rest api url share point url public url accessed one result getting unauthorized error hit url web browser able get response problem observations hit rest api normal web browser getting type document hit rest api angular application request going type xhr anyone please help us issue regards kishore kumar k hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-30T10:42:44Z'}"
"122",121,"{'data': 'ngcc incorrect rendering thanks trotyl spotting see ngcc currently broken directive lifecycle hooks due wrong insertion place example following shape var ngforof class function function ngforof viewcontainer template differs ngcc inserts immediately constructor var ngforof class function function ngforof viewcontainer template differs ɵdefinedirective executed defined causing lifecycle hooks silently ignored', 'date': '2018-10-30T08:26:22Z'}"
"123",122,"{'data': 'scrollpositionrestoration nt restore routeroutlet route nt changed submitting current behavior use named routeroutlet display knowledge center type popup knowledge center opened page since angular use configuration routermodule however means pages also scroll top open knowledge center popup route change expected behavior restore scroll position routeroutlet route changed minimal reproduction problem instructions set scroll page open auxiliary route notice primary outlet scrolled top motivation use case changing behavior problem current behavior environment sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked', 'date': '2018-10-30T06:00:33Z'}"
"124",123,"{'data': 'httpinterceptor wait appinitiallizer submitting current behavior service method returns promise stores data property within method called using appinitializer use service component constructor try access property works fine service injected httpinterceptor try access property says property undefined implies constructor interceptor trying access property appinitializer resolved look stackblitz code mentioned expected behavior httpinterceptor constructor fired appinitializer resolved note used work fine angular minimal reproduction problem instructions run code see console error thrown comment httpinterceptor provide appmodule everything work well motivation use case changing behavior appinitiallizer may required bring configuration data may required httpinterceptor environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx problem expect work order', 'date': '2018-10-30T04:17:55Z'}"
"125",124,"{'data': 'language agnostic aot renderer submitting tl dr ca nt emit language agnostic ast output opinion ng build instead javascript compilation target language agnostic ast might allow us target platforms easier allow community easily add new platforms angular long winded version currently state native mobile development angular feels like getting least quality terms feeling native fully feature complete option nativescript better worse seems treated like black sheep app development world never want leave angular team never wants compromise quality see react native flutter start wondering could sexier app better plugins widgets animations chosen different framework thing choosing another framework question possible make flutter renderer react native renderer etc fully featured nt expertise time write renderer react native flutter bet given ast schema could make piece pipeline output jsx flutter dart language day ultimate goal would business logic running js one thread provided function talk view layer view layer output ast awaiting renderer choice selected maybe already done maybe need better docs duplicate angular already renderer api projects like nativescript superold experiment work specifically designed purpose ultimate goal would business logic running js one thread provided function talk view layer view layer output ast awaiting renderer choice selected pretty much works react native friends developers write javascript js execution environment javascript pretty much run asis talks native environment something like renderer api today reality limited resources focused making best web applications enabling thirdparties like nativescript extend needed also said abstraction nt come without cost lot work ivy simplifying cleaning old apis designed sort thing mind end adding lot indirection bulk codebase ast asking already exist generally internal private apis anything useful basically write compiler nontrivial thing opening apis publicly something ready yet flutter significantly different model authoring dart start really concept hood flutter using skia engine chrome layer likely interop looked definitely possible something currently planning pursuing closing dupe', 'date': '2018-10-30T03:46:29Z'}"
"126",125,"{'data': 'expansion panel fouc contained dialog submitting current behavior expansion panels currently render flash unstyled content fouc nested dialog always temporarily appear expanded regardless expanded attribute set moment expansion panels explicitly set closed collapse occurs angular expected behavior expansion panels appear collapsed dialog opens instead briefly appearing expanded collapsing delay minimal reproduction problem instructions click button note flash unstyled content dialog angular angular bugged angular correct motivation use case changing behavior flashes unstyled content jarring feel buggy environment browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx x safari desktop version xx safari ios version xx ie version xx edge version xx please remove material minimal repro believe angular issue otherwise please report repo trotyl apologies terribly embarrassed sure posted wrong repo moving', 'date': '2018-10-30T01:07:35Z'}"
"127",126,"{'data': 'wrap existing directive submitting guideline around wrapping directive basically directive composed another directive supported angular already provide amp inject directive service proxying lifecycle hooks guess making feature request yeh sounds like duplicate', 'date': '2018-10-29T22:16:37Z'}"
"128",127,"{'data': 'path srcappappmodulets already exist submitting current behavior try create new angular project using command ng new projectname gives error path srcappappmodulets already exist expected behavior minimal reproduction problem instructions motivation use case changing behavior environment please open angularcli issues repo sounds like might already created project anyway agree ericmartinezr go instead closing', 'date': '2018-10-29T19:16:41Z'}"
"129",128,"{'data': 'parammap routing documentation typo submitting current behavior following instruction using router documentaion says expected behavior statement convey user always advisable use even component reusing component need include convey expected motivationuse case changing behaviour possible typo documentation environment changing wording even chance router could reuse component nt make sense since would contradict previous two paragraphs documentation state acceptable use snapshot know certain component never never ever reused thanks clarification nt document suggests us use even component reused suggests use observable approach unless know certain herodetailcomponent instance never never ever reused time nt know certain thus use documentation says stick even chance router could reuse component cases know certain never reused make code lot simpler using snapshot perfectly acceptable snapshot exists used situations like', 'date': '2018-10-29T17:58:20Z'}"
"130",129,"{'data': 'ngoninit firing clicking browser back button submitting current behavior problems routes involve parameters try go back browser back button route parameter like ngoninit previous component nt fire happens deploying app production expected behavior ngoninit previous component called render component correctly minimal reproduction problem instructions steps reproduce error angular tutorial download tutorial angular tutorial run npm install build app command upload static files generated previous step nginx apache server respective configuration file recomended lines code angular docs angular deployment click one top heros dashboard click browser back button following steps see top heros loaded dashboard exactly problem app cause ngoninit called going back specifically back button environment browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version x safari desktop version safari ios version xx ie version xx edge version xx tooling issues node version platform mac linux windows others problem nt accurs using development mode ng serve trying app locally happens deploying subdomain like subdomaindomaincom works perfectly normal domain domaincom sure could considered normal behavior thanks issue sounds like support request sent stackoverflow feel specific error please make reproduction quickly easily run said sounds like might reusing components hitting back', 'date': '2018-10-29T17:25:49Z'}"
"131",130,"{'data': 'documentation routing chapter tour heroes outdated wrong submitting current behavior following instructions routing chapter tour heroes tutorial says supposed create single file called directly inside directory think however cli gives warnings flags unsupported creates folder file output cli please update documentation slightly confusing newcomers like thank expected behavior would create file explained surrounding documentation minimal reproduction problem instructions ng new angulartourofheroes ng generate module approuting flat moduleapp motivation use case changing behavior documentation reflect actual cli options environment thanks help', 'date': '2018-10-29T15:59:14Z'}"
"132",131,"{'data': 'feature request official parcel support submitting saw dev taking route really like angular soon possibly bearing official ivy support particularly keen ca nt help wonder parcel love parcel work angular build goal way things turned year fact parcel still reactpreactvue typsecript bundler angular one feel though parcel team compliant willing comply nt know exactly angular team want seems parcel team dark angular disallow switching parcel understanding something wrong parcel would fit angularcli stack technical reason tried switching project parcel ceaselessly year nothing done seems entirely incompatible seems much like official rxjs webpack support angular providing would fair turn dev attention parcel btw suggesting angularcli ng commands run parcel obviously parcel intrests lies perfectly fine stack utilizes webpack ng commands parcel compile serve strong suit result dev time needs added angularcli nt feel like would difficult make angular parcel compatible thanks reading tatsujb sure parcel support compilation pipeline production builds angular needs compile template plain javascript using decorators gone sources could elaborate point tatsujb possibly ask parcel add support angular official plugins maintained parcel webpack open plugin system plugin made angular side technically tool supporting typescript could support angular compiler using similar cli interface javascript api yeah also opened issue side know job wondering knocked heads could come reason nt exactly work yes paper looked spoken briefly parcel folks tldr certainly doable complicated ivy compiler significantly simpler model easier integrate something like parcel works lot like regular typescript compiler really opened repo tooling related nt think going officially support parcel short term happy support community effort', 'date': '2018-10-29T15:04:31Z'}"
"133",132,"{'data': 'angular 引入 标签无效 document function changemap var mychart echartsinit documentgetelementbyid map option tooltip trigger item formatter b series name 中国 type map maptype china selectedmode single label normal show true emphasis show true data var province mycharton click function params var mychart echartsinit documentgetelementbyid map province paramsname option tooltip trigger item formatter b series name 中国 type map maptype province selectedmode single label normal show true emphasis show true data mycharton click function params changemap mychartsetoption option windowaddeventlistener resize function mychartresize mychartsetoption option windowaddeventlistener resize function mychartresize changemap option thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template', 'date': '2018-10-29T14:30:28Z'}"
"134",133,"{'data': 'valid token try access dynamics onpremise api angular submitting support request current behavior building angular app consumes dynamics crm onpremise web api configured dynamics oauth support used adfs token provider registered application adfs able generate token postman able access web api whilst trying generate token angular app using adaljs try access web api getting unauthorized postman configured things token generation call back url auth url access token url client id client secret key grant type authentication code postman behavior trying generate tokens redirect adfs login page end user provide username password submit token generated expected behavior expecting behavior angular application end user trying sign page redirect adfs login page end user provide username password submit token generated behind scenes angular app use generated token access dynamics web api minimal reproduction problem instructions motivation use case changing behavior environment related angular specifically accept questions try asking gitter adal repo issue resolved able generate token angular access webapi', 'date': '2018-10-29T14:17:44Z'}"
"135",134,"{'data': 'handle bad request webapi angular aspnet core webapi returns bad request error details param let say duplicate user trying register response handled angular side follows userservicets method called registercomponentts tried postman get perfect result error description result despite trying multiple code snippet nt work log bad result response missing responses http status httpclient throws error add pipe catcherror operator handle response result notice though response lies network tab short idea process show ui hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation suggestion', 'date': '2018-10-29T13:59:20Z'}"
"136",135,"{'data': 'aria attributes stripped html sanitizer submitting x bug report current behavior aria attributes like stripped html sanitizer unsafe html expected behavior aria attributes treated safe html stripped used within list supported attributes see minimal reproduction problem instructions see motivation use case changing behavior loading translation strings json file using since builtin support missing important features pulled via keep html tags attributes intact sadly aria attributes stripped altogether purpose could find hints docs source relevant line code environment angular version browser', 'date': '2018-10-29T13:17:08Z'}"
"137",136,"{'data': 'webstorm error initialization error angular language service read property commandtypes undefined submitting current behavior error initialization error angular language service read property commandtypes undefined expected behavior minimal reproduction problem instructions motivation use case changing behavior environment hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-29T12:19:32Z'}"
"138",137,"{'data': 'problem path img production build hello everyone problem path images building run app local images work html build prod path images working folder dist indexhtml file assets folder root remove build html example path correct homecomponenthtml hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation src assetsimgbgjpg need set path server static resources assets src assetsimgbgjpg need set path server static resources assets hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-29T10:37:44Z'}"
"139",138,"{'data': 'error use ng build prod build app submitting current behavior expected behavior build success minimal reproduction problem instructions motivation use case changing behavior use ng build build app ok environment hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-29T08:03:15Z'}"
"140",139,"{'data': 'provide window object like document submitting current behavior currently implement window service every library publish results code duplication probably increase bundle size expected behavior inject use comes angular packages like minimal reproduction problem instructions ts import isplatformbrowser angularcommon import classprovider factoryprovider injectiontoken platformid angularcore export const window new injectiontoken windowtoken define abstract class obtaining reference global window object export abstract class windowref get nativewindow window object throw new error implemented define class implements abstract class returns native window object export class browserwindowref extends windowref constructor super get nativewindow window object return window create factory function returns native window object export function windowfactory browserwindowref browserwindowref platformid object window object isplatformbrowser platformid return browserwindowrefnativewindow return new object create injectable provider windowref token uses browserwindowref class export const browserwindowprovider classprovider provide windowref useclass browserwindowref create injectable provider uses windowfactory function returning native window object export const windowprovider factoryprovider provide window usefactory windowfactory deps windowref platformid create array providers export const windowproviders browserwindowprovider windowprovider motivation use case changing behavior often used every app providing provided would save code duplication party libraries implement version window service see trotyl nt knew thanks', 'date': '2018-10-29T03:57:56Z'}"
"141",140,"{'data': 'use class decorators aot compilation submitting current behavior seems class decorators processed angular aot compilation past read issues related issues barrel files static resolution done series tests without success polymerlitelement ca nt seem successfully compile expected behavior able aot compile project using class decorators provided angular minimal reproduction problem instructions created project stackblitz easily shows issue course stacblitz nt aot reproduced clicking download button installing depdendencies via npm yarn output get sh npm silent fsevents success already installed pass updatebinary reinstall buildfromsource recompile cached binary found binary found testing binary binary fine added packages contributors audited packages found vulnerabilities npx ng build prod date hash time chunk runtime kb entry rendered chunk main bytes initial rendered chunk polyfills bytes initial rendered chunk styles bytes initial rendered error applitcomponentts error template compile myelement initialized variables constants referenced decorators value variable needed template compiler customelement customelement references customelement customelement initialized polymerlitelementlibdecoratorsts modified project avoid barrel file ie difference nt get line motivation use case changing behavior example could setup separate build pipeline build web components include angular seems like waste time would likely force angular cli perhaps even worse case even built typescript exports entire definitions assumption would angular compiler needs statically resolve anything requires environment', 'date': '2018-10-28T23:30:57Z'}"
"142",141,"{'data': 'environment based routes build submitting current behavior possible static environment based configuration lazy loaded modules help prototyping ab testing eg tried using replace configuration angularjson really complex using environment variable import statement duplicate', 'date': '2018-10-28T21:25:58Z'}"
"143",142,"{'data': 'githubpages deployment instructions working submitting current behavior followed instructions deploying url contains duplicate project name built files throwing console errors changes made generating files using angular cli repo url github pages url check screenshot bugs expected behavior built files run without console errors url contain duplicate project name minimal reproduction problem instructions followed instructions angular documentation motivation use case changing behavior environment tried slightly different command note forward slash characters surrounding snerks worked thanks', 'date': '2018-10-28T00:34:49Z'}"
"144",143,"{'data': 'support stylesheet bindings submitting x feature request suggest able use syntax component stylesheets currently order get degree style bindings use style attribute template works styles work cases want style make use way accomplish currently use css custom properties issues angular see', 'date': '2018-10-27T18:09:26Z'}"
"145",144,"{'data': 'reactive forms inside virtual scroll list yield buggy behaviour submitting current behavior reactive forms inside virtual scroll list behave expected looks like virtual scroll takes manipulates index yields erratic behaviour check last item form array checked go back top come back bottom marked checked tried external index well nt help either expected behavior reactive forms especially checkboxes behave normally values belong appropriate ones marking one checked affect others minimal reproduction problem instructions motivation use case changing behavior heavy huge reactive forms virtual lists render form controls normally environment angular cdk yeap seeing issue forked stackblitz printed index well apparent two issues found checking checkboxes scrolling scrolling makes check disappear checking checkbox checks another checkbox well sometimes forked stackblitz reported material repo see also others mentioned problem related changes angular material please track repo', 'date': '2018-10-27T17:56:57Z'}"
"146",145,"{'data': 'empty css file import component syleurls file begins block comment submitting current behavior imported css style sheet empty begins block comment imported component styleurls attribute expected behavior original content css style sheet file imported minimal reproduction problem instructions import css style sheet file via stylesurl attribute component add block comment begining file first line eg observe browser dev tools imported style sheet empty motivation use case changing behavior environment new reporting sorry missed something ignored rules still hope might save people time figuring component styles nt applied anymore works tried reproduce stackblitz well cigar problem must related version update maybe caching issue cant think anything else guess close thanks time manklu may still bug since reproducible stackblitz provide github repository project reproduces problem', 'date': '2018-10-27T16:19:56Z'}"
"147",146,"{'data': 'use template reference variable ts file sign template refenrence variable html file third part component primefaces table want use table method export export csv file official demo want execute method ts file green hand angularso may ask code hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-27T15:30:11Z'}"
"148",147,"{'data': 'problem routing hosting hello everyone problem routing hosting run app local everything good like host working like error found requested url login found server solution nt like routingmodulets typescript import ngmodule angularcore import routes routermodule angularrouter import homecomponent homehomecomponent import logincomponent loginlogincomponent import registercomponent registerregistercomponent import profilecomponent profileprofilecomponent const routes routes path component homecomponent path login component logincomponent path register component registercomponent path profile component profilecomponent ngmodule imports routermoduleforroot routes exports routermodule export class approutingmodule appmodulets typescript import browsermodule angularplatformbrowser import ngmodule angularcore import approutingmodule approutingmodule import appcomponent appcomponent import homecomponent homehomecomponent import logincomponent loginlogincomponent import registercomponent registerregistercomponent import profilecomponent profileprofilecomponent ngmodule declarations appcomponent homecomponent logincomponent registercomponent profilecomponent imports browsermodule approutingmodule providers bootstrap appcomponent export class appmodule ng version angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack build ng build prod ng build prod basehref hi please go link see helps gt hi please go link see helps thanks solved htaccess', 'date': '2018-10-27T13:05:14Z'}"
"149",148,"{'data': 'angular reactive forms custom form controls inconsistency validations conditionally recreated angular submitting current behavior reactiveforms custom form control validations stick initial state recreating control conditionally angular expected behavior validations work every time control recreated minimal reproduction problem instructions load url screen loaded click toggle first see custom name field type text input error goes clear text see error back click toggle see first name field click toggle see custom name field error message type textinput still see error shows error message go per validations written motivation use case changing behavior consistent validations custom form controls recreating angular conditionally environment forgot update dom add update rule lloydst thanks replay action validations run execute validations blur control nt solved actual problem', 'date': '2018-10-26T23:07:17Z'}"
"150",149,"{'data': 'changededection issue upgrading angular want say hae hard time repreduce issue stackblitz scenario simple hopefully explanationcode enaugh using angularfireauth see state auth depending state show one element dom help ngif appcomponentts first change authsuccessful detected use changedetectorref detect change click button nummer change use detectchanges clickme methode work tryed start project scratch works begining stops done twice try find point stops working success may well add ngif condition taken dom clickme deduction works suposted ideas sitting day want chime noticing similar issue however mine occurs compiled aot code setup central service userservice injected variable header subscribe map class variable seem change class subscribe emits console log showing value changed yet dom reload page ismasqueraded variable loaded local storage setting true header rendered header appropriate class going try throw reproduction together weekend case missed something going stuff angular cli node os angular animations cdk common compiler compilercli core elements forms languageservice material platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack angular wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-26T19:48:19Z'}"
"151",150,"{'data': 'angular input validation sync htmlinputelement validity submitting current behavior angular formcontrolvalid true even though htmlinputelementcheckvalidity returns false expected behavior angular validity check equal restrictive native one eg htmlinputelement valid formcontrol always valid htmlinputelement valid formcontrol may valid additional validators minimal reproduction problem instructions native testcheckvalidity angular testmodelvalid enter asdf input expected native angular display false actual native displays false angular displays true motivation use case changing behavior consistent input validation currently entering numeric field renders null value ngmodel parsefloat binding user gets error feedback environment', 'date': '2018-10-26T18:17:09Z'}"
"152",151,"{'data': 'imported json file indexed type always giving undefined angular running production mode submitting current behavior imported json used indexed typeas map variable always giving undefined expected behavior return expected value instead undefined everything minimal reproduction problem instructions following stackblitz demo link run browser work properly console properly display change language however download run locally notice console display undefined instead run locally motivation use case changing behavior reason work production mode environment sounds like supported prod mode please open weird example gave working run prod mode run ng serve command without prod parameter nt work otherwise open issue angular cli though link enclosed original post nt visible', 'date': '2018-10-26T16:42:14Z'}"
"153",152,"{'data': 'nothing see appearently found keyboard combination open new issue appearently delete false issues', 'date': '2018-10-26T15:02:53Z'}"
"154",153,"{'data': 'error sanitizing resource url submitting current behavior error throwing trying sanitize unsafe resource url iframe src expected behavior unsafe resource url sanitized safe string minimal reproduction problem instructions thissanitizersanitize securitycontextresourceurl data texthtml alert throws error motivation use case changing behavior url provided user used src iframe environment', 'date': '2018-10-26T14:13:47Z'}"
"155",154,"{'data': 'reactive form inside virtual scroll list problem hi angular team checking virtual scroll list reactive forms scenario thousands rows show list checkboxes approve disprove inside virtual list generating form group formgroupname check one checkbox scrolling randomly selects checks checkboxes really weird advice tips would helpful thanks submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ok thanks', 'date': '2018-10-26T13:53:38Z'}"
"156",155,"{'data': 'internal error watch mode change template submitting current behavior get following internal error component move around nodes particular one catchall one selector change order template webpack watch mode error shown console expected behavior error minimal reproduction problem instructions motivation use case changing behavior error environment also consistently get error watch mode nodes comment throw statement everything seems work fine correct changed text within got error output error need fatal get working build suppress error maybe warning appropriate', 'date': '2018-10-26T11:37:21Z'}"
"157",156,"{'data': 'upgrade angular gulp build fails project looking node modules html files found copied copy source task upgrade angular gulp build fails project looking node modules html files found copied copy source task submitting x bug report x referring node module folder ignored gulp task inline resources creating dynamic ui html pages angular component get error ps c devlibsrc gulp build working directory changed c devlib using gulpfile c devlibgulpfilejs starting build starting clean starting clean dist finished clean dist ms starting clean tmp finished clean tmp starting clean build finished clean build ms finished clean starting compile starting clean dist finished clean dist μs starting copy source finished copy source min starting inlineresources error occured error enoent file directory open c devlibtmpnodemodules angularanimationssrcmycomponenttplhtml objectfsopensync objectfsreadfilesync c stringreplace inlinetemplate c reduce c arrayreduce inlineresourcesfromstring c readfilethencontent c errno code enoent syscall open path c devlibtmpnodemodules angularanimationssrcmycomponenttplhtml error occured error enoent file directory open c devlibtmpnodemodules angularcoresrcmetadataanimationcmphtml objectfsopensync objectfsreadfilesync c stringreplace inlinetemplate c reduce c arrayreduce inlineresourcesfromstring c readfilethencontent c errno code enoent syscall open path c devlibtmpnodemodules angularcoresrcmetadataanimationcmphtml error occured error enoent file directory open c devlibtmpnodemodules angularcoresrcmetadatamycomphtml objectfsopensync objectfsreadfilesync c stringreplace inlinetemplate c reduce c arrayreduce inlineresourcesfromstring c readfilethencontent c current behavior upgrading angular core packages angular unable build project looking nodemodules specific files nt build process inlineresources tried steps deleted node modules npm cache clean force npm update uninstalled reinstalled angular cli local global level updated rxjs typescript upgraded angular core packages node npm third party modules dependencies even downgraded animations package version doesnt solve problem expected behavior ignore node modules folder motivation use case changing behavior environment angular version browser x chrome desktop version xx tooling issues node version platform windows npm version others files packagejson dependencies outer file dependencies angularanimations angularcommon angularcore angularforms angular angularlanguageservice angularplatformbrowser angularplatformbrowserdynamic angularrouter ngxtranslatecore ngxtranslate timkendrickmonacoeditor typeslodash bootstrap fontawesome jquery jsonpath latest lodash momenttimezone primeng rxjs stacktracejs util zonejs devdependencies angulardevkitbuildangular angularcli angularcompiler angularcompilercli typesjasmine typeskarma typesmomenttimezone typesnode typeswebpack typeswebpackenv codelyzer corejs del gulp gulpbump gulpheader gulprename gulprollup jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter nodesass nodesasstildeimporter nodewatch protractor rollup runsequence tsnode tslint typescript engines node inner file peerdependencies angularanimations angularcommon angularcore angularforms angular angularlanguageservice angularplatformbrowser angularrouter rxjs dependencies angularanimations angularcommon angularcore angularforms angular angularlanguageservice angularplatformbrowser angularrouter ngxtranslatecore ngxtranslate timkendrickmonacoeditor typeslodash bootstrap fontawesome jquery jsonpath latest lodash momenttimezone primeng stacktracejs util zonejs dont think problem related angular probably makes sense ask question stackoverflow problem combining gulp tasks angular angular team made angular cli prevent need custom build tasks using custom build process less fix hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-26T10:11:58Z'}"
"158",157,"{'data': 'angular service worker work situation rendered express hapijs first angular service worker self problem related angular service worker write someone problem doubt angular version cli version node server express hapi server code const path require path const hoek require hoek const fs require fs const yaml require jsyaml let env processenvnodeenv dev var config require configjson env var ngswjson require distngswjson var crypto require crypto var proxy require express export nodeenvdev amp amp node siteinitjs const express require express const app express const port configport appuse expressstatic dirname dist index false appset views pathjoin dirname dist appengine html require ejs renderfile appset view engine html set proxy appuse uploads proxy parsereqbody false proxyreqpathresolver req gt consolelog requrl return uploads requrl appget req res gt let host reqhostname let param reqoriginalurl let project consolelog requrl ressetheader cachecontrol resrender configindex index projecttitle projectname favicon favicon desc desc keyword keyword cdn cdns env applisten port gt consolelog pay attention proxy config appmodule configs default cli generated example want serve application express nodejs server uploads request proxy api server port nginx proxypass config test found interesting problem add proxy express express hapi proxy code ngswworkerjs load install must add line angular app bootstrap maints rebuild app ngswworkerjs work fine tried ways start application setup proxy config problem occurred think issue last year may related share discovery thx sharing experience although tbh nt see server config affect sw registration going close since actionable afaict', 'date': '2018-10-26T02:13:22Z'}"
"159",158,"{'data': 'activatedroute queryparammap updated parammap navigating submitting x bug report current behavior using subscribe route parammap queryparammap use values api request however nt work expected navigating component different params instead observable emitting one new value new parammap queryparammap emits two values first old parammap new queryparammap second new parammap new queryparammap expected behavior navigating component different params observable emit single value new params query params minimal reproduction problem instructions stackblitz example click link component note multiple route param values unexpectedly emitted observable motivation use case changing behavior need way subscribe new route params query params sometimes fragment use values one observables single api request user navigates environment angular version rxjs version browser x chrome desktop version x firefox version x ie version x edge version think want use merge want one value combinelatest works expected michaeljota thanks reply unfortunately nt need still results callback invoked twice first queryparammap second parammap need get updated parammap queryparammap time order use data api request seems like issue angular updates query params route params instead time causes emit new query params old route params expected value agree michaeljota combinelatest works expected two separate though correlated sources events basically something either changes sure following perfect solution seems want nt forget import withlatestfrom rxjsoperators instead subscribing every change either stream events subscribe one peek latest value one downside though query parameter changes route change skip event sure situation possible also sure queryparammap parammap always emit events zip ie rxjszip would rely finally think problem mixing state saving reactive streams choice could combinelatest produce combined value name age filter distinctuntilchanged update properties component hope helps alexkunin thank detailed reply agree michaeljota combinelatest works expected two separate though correlated sources events basically something either changes correct problem angular updating observable edited title make clearer sure following perfect solution seems want nt forget import withlatestfrom rxjsoperators downside though query parameter changes route change skip event sure situation possible realworld app possible query params change independent route params solution nt work also prevents using rxjs function could combinelatest produce combined value name age filter distinctuntilchanged update properties component would nt filter anything since combined name age distinct values emitted first value age query param changed second name param changed seems wrong separate observables since three change simultaneously user navigates surely need get updated values one observables user navigates nt unique gt seems wrong parammap queryparammap fragment separate observables since three change simultaneously user navigates nt expectations nt see could problem three observables emitting expected pipe operators working expected maybe elaborate better expectations would fit feature request definitely bug gt need way subscribe new route params query params sometimes fragment get updated values together user navigates expecting single source observable emits one object contains route params query params fragments plenty ways using constructors pipes operators would nt expect considered neither bug report feature request looks like specific behavior gt expecting single source observable emits one object contains route params query params fragments plenty ways using constructors pipes operators yes exactly need constructorsoperators would use theodorejb first would need look strategy merge observables single source every option ups downs would need see fits combinelatest merge withlatestfrom switchmap got single source observable use map pipe operator create single object using get array values return single object using spread operator however issue would remain observables would emit independently think could use operators debouncetime control multiple emits want emit would need use decide single source true meaning observable would always change last appends observable change first first change desired value latter emits udate instance injected constructor sorry forgot mention also sorry huge reply realize big posted theodorejb right suggested solution would nt correctly work another one basically subscribe one source truth actual event marks url change navigationend events included via operator ie trigger code every separate subevent url change yet sure always delivered navigationend would natural thing expect though another method suitable interval parameter really looks hacky might introduce flickering ui oops noticed michaeljota already mentioned particular solution michaeljota agree bug still problem makes things pretty complex one source truth url address bar take step back single entity path query naturally bound one string somewhere inside angular url split parts path query yet mentioned fragment become separate events delivered independently developer needs properties innate properties single entity url needs assemble things back pretty complex combination rxjs operators surely looks like workaround assemble things back one might follow advice choosing single source truth making applying since events delivered separate entities moment combination invalid one previous url another current though reality one valid current url even choose source truth something general like still guaranteed receive events proper order mean expect get change events first finally event exact order events seem stated docs please correct wrong would really great know ie guaranteed order event delivery said solution proposed workaround guaranteed work due undefined delivery order ideal solution see would adding something like things really one undividable object space time need reassemble still nt think bug nuisance would less nuisance solution workaround would obvious see comments spent time trying different ways solve make right first second attempts also nt forget original poster also tried solve problem find obvious solution immediately maybe due little experience rxjs really requires us different thinking imperative thinking always way michaeljota alexkunin thank helpful responses indeed able work around issue piping observable however feels like ugly hack ignore first emitted value nt updated parammap fragment also worried longer interval might required slower browsers considered idiomatic angular way subscribe changes route params query params fragment think least documented official routing amp navigation guide developers wo nt tripped issue current api feels wrong though agree alexkunin would ideal observable built emits single object latest params query params fragment user navigates agree little big strange think powerful single source considered idiomatic angular way subscribe changes route params query params fragment part angular plain old yes want merge multiple sources anything way angular way angular gives power want case merging really happy see worked glad help', 'date': '2018-10-25T20:15:12Z'}"
"160",159,"{'data': 'async pipe able automatically handle change detection within ngif rendering child components submitting current behavior dev mode using async pipe observable used conditionally rendering child component throws considering async pipe recommended preferred method use async operations maybe issue automatically handled hood expected behavior async pipe able automatically handle change detection child components observable updated without manually call infamous workarounds resembling angular digest cycle minimal reproduction problem instructions original repro posted fork original user stackblitz motivation use case changing behavior conditionally rendering child components based value boolean observable environment angular version change value change detection even nt get exception chances good wo nt work expected change value change detection cycle alternatively could use ok shifting update code constructor different lifecycle hook like would also prevent makes sense wondering way handle common situation within async pipe like adding equivalent debouncetime think would go long way towards preventing confusing error appearing many developers also adding feature request label since might accurate case edit worth mentioning example stackblitz relatively simple complex applications parent child share state service like holds state hot observable subscribed observable changes triggered child potential affect parent would cause rerender child time parent observable changes boolean value observable instance back boolean value would also occur case much harder debug fire even boolean value nt changed selipso changes triggered child potential affect parent problem long nt dispatch actions change detection possible implement metareducer detect actions log error', 'date': '2018-10-25T18:38:59Z'}"
"161",160,"{'data': 'resolves hybrid previous version works submitting x regression behavior used work stopped working new release bug report performance issue feature request documentation issue request support request gt please submit support request instead see please describe current behavior resolves hybrid expected behavior navigate correctly minimal reproduction problem instructions function stops working upgrading unless wrapping function timeout delay motivation use case changing behavior regression environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac others', 'date': '2018-10-25T17:39:17Z'}"
"162",161,"{'data': 'unable edit description parameters methods interface submitting current behavior currently way edit description parameters interface method inside code comment render description expected behavior would nice option edit existing description parameters methods interface minimal reproduction problem instructions try edit parameter description inside interface option motivation use case changing behavior update api documentation environment', 'date': '2018-10-25T17:15:01Z'}"
"163",162,"{'data': 'angular build creating serviceworker files migrating submitting current behavior upgrading following angular update guide service worker files ngswjson ngswworkerjs etc generated building app expected behavior service worker files generated minimal reproduction problem instructions update project pwa activated tried move versionnedfiles files array result motivation use case changing behavior environment packagejson packagejson angularjson quick look everything seems fine impossible investigate without actual reproduction closing nonactionable happy take look provide minimal reproduction feel free post open new issue info issue resolved upgrading dev dependencies follow sure witch one causes behaviour hope could help updating trick got updating seems like version get updated', 'date': '2018-10-25T16:09:41Z'}"
"164",163,"{'data': 'document ngcoretokens ngprobe submitting current behavior documented contains items sort component debugging contains appref router etc classes instead instances work somehow used debugging purposes referenced augury docs environment angular version', 'date': '2018-10-25T15:24:42Z'}"
"165",164,"{'data': 'form validation docs used validators param formgroup formgroup api validator submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment dup closing duplicate', 'date': '2018-10-25T14:29:28Z'}"
"166",165,"{'data': 'formgroup validators extra params formbuildergroup validator submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior api consistency environment submitting regression behavior used work stopped working new release bug report performance issue feature request documentation issue request support request gt please submit support request instead see x please describe inconsistency api current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior api consistency environment angular version xyz browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version xx platform others', 'date': '2018-10-25T14:19:53Z'}"
"167",166,"{'data': 'routernavigate child route rerenders calling parent component submitting current behavior parent child route angular version app parent route called knowledgebase child route topic id routing looks like knowledgebase component routeroutlet knowledgebase component navigate topic route like rerenders knowledgebase parent component constructor ngoninit called renders topic child component afterwards also tried behavior happening expected behavior navigate child route render child component constructor ngoninit parent called minimal reproduction problem instructions motivation use case changing behavior environment news also look solution skip reload component routing gt news also look solution skip reload component routing find solution maybe bug wrote logic way reload parent cause problems small workarounds best solution', 'date': '2018-10-25T13:56:57Z'}"
"168",167,"{'data': 'simplify tables simplify stuff well submitting current behavior current example table docs contains mostly noise little useful code hidden garbage html user name rowusername age rowage title rowtitle expected behavior would like eliminate noise allow look like instead html user name rowusername age rowage title rowtitle much stuff angular done far verbose way huge problem things easy way choice defaults poor generates lot noise boilerplate code using angular material design loathe many stupid features like need specify every column within ca nt already use default mention bottom official docs assume encouraged even required marked performance issue impacting performance developers sense relevant feature request would eliminate necessity specify stuff enabledincludedinferred default allow customize advanced usage scenarios environment started adventure angular coming different technologies much easier use requiring much verbosity allowing lot flexibility please report okay nt aware another repo although angular issue general way also relevant agree trotyl opened first also fully recognise angular core responsible verbosity changes table driven material team work closely together sorting issues angular core', 'date': '2018-10-25T11:47:17Z'}"
"169",168,"{'data': 'support id referance svg element hash location strategy order facilitate development separation front end project uses hash location strategy project module following bubble diagram effect needs implemented label located center bubble label long clipped bubble ensure label extend beyond bubble like intend use svg clippath property implement thus need use form similar reference bubble defined earlier reference method working using hash location strategy reference clipping path like two characters browser ca nt parse normally current behavior clip path work hash location strategy expected behavior clip path work hash location strategy minimal reproduction problem instructions motivation use case changing behavior environment', 'date': '2018-10-25T10:55:54Z'}"
"170",169,"{'data': 'introduce submitting current behavior introduced great new feature router enabled always scroll top navigation change sometimes nt need example nested routeroutlets query change search feature introducing new param enable disable default behaviour navigation change', 'date': '2018-10-25T09:32:09Z'}"
"171",170,"{'data': 'export constructor imported found outputoutputast submitting current behavior consuming angular bundles webpacks configuration following warning displayed expected behavior missing export warning displayed minimal reproduction problem instructions export seen source code compiler also seen generated bundle oddly enough present bundle replaced looks like right variable petebacondarwin look figured error even though export object object constructors puzzling different generated bundles suddenly using different variables environment cc alexeagle gt object object constructors true nt let alone exotic objects right part added incorrect add strikethrough point module namespace exotic object indeed constructor although right error think missing error typescript bug typings module namespace objects think probably error ts compiler likely relates yeah makes sense question remains regarding repo transformed different bundles', 'date': '2018-10-25T09:15:31Z'}"
"172",171,"{'data': 'angular universal angular service worker submitting current behavior ssr sw together first load ssr renders html get result instantly service worker caches indexhtml file refresh page nt get ssr rendered html expected behavior expected behavior time service worker load ssr rendered page indexhtml minimal reproduction problem instructions motivation use case changing behavior environment design first load sped ssr subsequent loads sped sw able configure sw cache serve feature offline mode would work closing since works intended feel free continue discussion', 'date': '2018-10-25T07:46:39Z'}"
"173",172,"{'data': 'angular routing vs canactivate issue submitting current behavior angular router canactivate got main router config entry profileexistenceguard export class profileexistenceguard implements canactivate constructor private router router private profileservice profileservice canactivate route activatedroutesnapshot observable boolean const profilename routeparammapget profilename routeparentparammapget profilename tolowercase consolelog checking profile existence profilename thisprofileserviceviewprofilegetvalue thisprofileserviceviewprofilegetvalue profilename null consolelog profile already checked return true else consolelog profile checked yet retrieving db return thisprofileservicegetprofilebyname profilename result gt resultempty consolelog profile exists resultforeach item gt const profile new profile itemdata profileuid itemid thisprofileserviceviewprofilenext profile return true else consolelog profile exists thisrouternavigate return false profileroutes expected behavior render cardcomponent minimal reproduction problem instructions using google cloud functions either running via node app got stack try route profilename concrete card component init sec got timeout looking network log chrome debugger see waiting ttfb reason got response node routes including child routes profilenamesmth working fine problem happens even blank cardcomponent problem disappears removing canactivate profileexistenceguard main route config guess fault please say deal motivation use case changing behavior motivation use ssr properly angular environment believe seeing problem well canactivate canactivatechild guarding routes approutingmodule app tries load stops throwing error error staticinjectorerror staticinjectorerror platform core nullinjectorerror provider remove canactivate canactivatechild app loads error unfortunately ca nt point repo private let know provide anything else help issue resolved changing working rewrited canactivate functions profile service checkprofileexists profilename string return new observable observer gt thisgetprofilebyname profilename subscribe profile gt profile observernext true else observernext false getprofilebyname profilename string observable return new observable observer gt thisprofilesrefwhere profilename profilename onsnapshot qs gt qsdocsforeach qds gt qdsexists let profile new profile qdsdata profileuid qdsid thisviewprofilenext profile observernext profile else observernext null works dont know solved', 'date': '2018-10-25T03:34:15Z'}"
"174",173,"{'data': 'stuck debug written local storage ca nt turn ca nt turn debug module chrome save life deleting local storage debug work gets readded reload think caused socket library webpack idea disable hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template', 'date': '2018-10-25T02:04:03Z'}"
"175",174,"{'data': 'server side setup instructions find life instructions setup work service workers enabled ngswjson file download works locally using running https using apache ubuntu please help', 'date': '2018-10-24T19:51:45Z'}"
"176",175,"{'data': 'multiple methods hostlistener submitting current behavior attaching hostlisteners event multiple methods within component results latest one fired hostlistener methods higher file never fired expected behavior intuitively multiple hostlistener decorators would register multiple listeners event fire associated methods minimal reproduction problem instructions stackblitz problem demonstrated press key anywhere console show fired even two listener methods motivation use case changing behavior application multiple methods need listen event different reasons add another function delegates intuitive usecase nt work environment bet validation also typescript output public eventemitter output public eventemitter window event something would recommend', 'date': '2018-10-24T18:06:28Z'}"
"177",176,"{'data': 'support css shadow parts submitting current behavior constructs css shadow parts spec replacements shadow piercing selector deprecated angular going deprecate support constructs mode motivation use case changing behavior able styletheme elements inside virtual shadow dom way wo nt break require rework component changed consistency web components standards alternative docs say deprecated duplicate', 'date': '2018-10-24T17:44:38Z'}"
"178",177,"{'data': 'support node submitting current behavior angular supports node see blog feature announcement expected behavior angular updated support node others nt know angular explicitly support node versions always usingupdating node installation angular problems ever encountered changed angular make support official node node work angular possibility issues wait official support angular', 'date': '2018-10-24T16:25:33Z'}"
"179",178,"{'data': 'imported json provided static function submitting current behavior importing contents json file using function create provider gets well defined jit null aot expected behavior provider null minimal reproduction problem instructions using fresh project ng new enabling tsconfigjson using appmodulets typescript import browsermodule angularplatformbrowser import ngmodule component injectiontoken inject modulewithproviders angularcore export const translations new injectiontoken translations component selector approot template translations json export class appcomponent constructor inject translations public translations import apptranslations apptranslationsjson ngmodule export class somemodule public static forroot modulewithproviders return ngmodule somemodule providers provide translations usevalue apptranslations ngmodule declarations appcomponent imports browsermodule somemoduleforroot bootstrap appcomponent export class appmodule apptranslationsjson contain json testing results aot displayed jit json content well shown additionally put provide ngmodule works jitaot environment attempt use instead factory function toplevel exported function work around aot limitation static evaluator indeed works also found works', 'date': '2018-10-24T15:08:39Z'}"
"180",179,"{'data': 'ngform conflicts input display submitting semibug current behavior input text connected name attribute ngmodel change object component also input name however object changing matter input displays wrong value know best way work forms found old project consistent new versions expected behavior updating input independent input name attribute minimal reproduction problem instructions link reproduce bug environment', 'date': '2018-10-24T13:37:31Z'}"
"181",180,"{'data': 'router navigate works differently submitting current behavior works expected going goes expected behavior nt found way make got regardless seems inconsistent minimal reproduction problem instructions used navigate sites subview sites mainview motivation use case changing behavior consistency able move easily subpath mainpath environment browser x chrome desktop version xx tooling issues node version platform mac others love upgrade held back migration build webpack new plugins', 'date': '2018-10-24T12:37:33Z'}"
"182",181,"{'data': 'angulario missing section testing protractor submitting current behavior currently trying set protractor new angular application typescript vscode followed many many guides stack overflow questions issues github vscode angular went angulario website still get protractor set cleanly setup protractor comes new angular applications shocked see section angulario docs unit component tests covered also vscode default launch configuration protractor surprising seeing mocha yeoman gulp others default launch configuration think protractor section angulario docs would make testing angular much better widely used expected behavior add section protractor testing minimal reproduction problem instructions motivation use case changing behavior would help people use setup protractor tests environment', 'date': '2018-10-24T10:45:25Z'}"
"183",182,"{'data': 'short ambiguous error log build failure submitting current behavior updated angularcli failed executing one line error logged without information opened issue angularcli told might issue library defines angular dependencies incorrectly could locate problem singleline error message expected behavior solution locate error came nt better add full error stack gt full error stack printed message looks like duplicate one tried adding nt work error message stay', 'date': '2018-10-24T10:29:10Z'}"
"184",183,"{'data': 'typeerror reflectgetmetadata function submitting current behavior update removed polyfillsts run aot mode many projects use package expected behavior remove polyfill environment intended behaviour announced breaking change read reasons error message angular migration chaosmonster link saying polyfill removed also says needed production builds apparently may needed situations crash dev mode jit crash prod mode aot splincode seems crash using aot needed prod build explain prod mode crash readding polyfill correct solution somewhere documentation solve proper manner find info issue error appears prod jpduckwo fow restored polyfill far understood error related classtransformer library might angular needs polyfill dev mode classtransformer library needs prod could find documentations yet thanks reply came conclusion restore polyfill markmakes put back polyfillsts jpduckwo thank sir', 'date': '2018-10-24T09:42:40Z'}"
"185",184,"{'data': 'angular service worker work online environment deploy nginx current behavior service worker works local http server work nginx minimal reproduction problem instructions online location environment angular version tooling issues node version platform mac code repo nginx conf server servername ngatthunderjavacom listen location root rootngat autoindex proxysetheader xrealip remoteaddr proxysetheader xforwardedfor proxyaddxforwardedfor proxysetheader host proxyredirect errorpage indexhtml f requestfilenameindexhtml rewrite break f requestfilenamehtml rewrite break angular wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-24T08:31:03Z'}"
"186",185,"{'data': 'behaviour outputs change rewriting upgradecomponent pure angular component first thank much angular upgrademodule submitting current behavior using upgradecomponent output defined amp binding angularjs component angularjs component wraps output data event object making possible angularjs components use syntax trigger ctrlontrigger event pass data handler function however component used upgradecomponent output always wrapped extra event object means angular components must access data event event upgradecomponent eventually rewritten angular component uses eventemitteremit instead wrapping event manually angular components listen output must also modified since api changed outer event layer disappear bindings angularjs component bindings trigger amp emitting function angularjs component thisonclick gt thistrigger event world usage another angularjs component usage angular component workaround expected behavior case would best upgradecomponent could detect data already wrapped event object pass along could find examples upgrade guide best practices upgradecomponents outputs original component still used angularjs components everything working intended something incorrectly would like know minimal reproduction problem instructions motivation use case changing behavior want usage upgradecomponents seamless possible components modified upgradecomponent rewritten pure angular component environment browser x chrome desktop version specific angularjs bindings work unwrapping arguments object call callback things different angular outputs emit single value argument unwrapping afraid much need manually unwrap arguments ie angular land indeed extra weird grin maybe could better job explaining docs leaving open docs improvement request', 'date': '2018-10-24T07:17:25Z'}"
"187",186,"{'data': 'failed execute animate element partial keyframes supported loop hi catch error use directive inside component loop error failed execute animate element partial keyframes supported source problem thisupdate constructor solved fix demo looks operational please reopen still unsolved', 'date': '2018-10-24T05:35:01Z'}"
"188",187,"{'data': 'loadchildren working angle angular angular cli trying use loadchildren work lazy loading work find module module dashboard routing app routing tsconfig tried two ways already error console error accessing route use relative path sarunint already tried dashboarddashboardmodule dashboardmodule would way duplicate sarunint mentioned use relative routing approuting module following working perfectly fine provide working plunkr replicate issue', 'date': '2018-10-23T20:36:28Z'}"
"189",188,"{'data': 'docs code references may link incorrect symbol submitting current behavior angulario several fragments point incorrect location multiple symbols name exist example group function references page refer method animations function another example usage refers property expected behavior linked references point correct symbol documentation page others petebacondarwin generation links done dgeni somewhere else pipeline joostk yes done dgeni processing defined uses disambiguators try reduce ambiguous matching aliases kind heuristic approach probably needs fine tuning petebacondarwin ah thanks indeed looking see links provided general documentation pages kick link looks like nt actually code reference already place prefer toplevel exports thing case regarding module heuristics sort tagging mechanism general documentation pages would trick could heuristic prefer animations package forms suggesting associate guides modules interesting idea guides jsdoc tags like doc dgeni could add something like tag guide would need write processor actually wires property doc real module doc something like yes inspired eg small yaml document present metadata see jsdoc tags action file wanted set title empty rather computing title filename', 'date': '2018-10-23T19:16:40Z'}"
"190",189,"{'data': 'angular elements supporting shadow dom theming submitting current behavior shadow dom sd support recently added angular elements great works fine browsers native sd support obviously great browsers ie edge sd crucial feature angular elements particular ability use actually currently possible get work ie angular elements switching polyfill one great step forward two issues theming recommended way handle themingstyle override webcomponents sd use css variables knowledge solution forward deprecated ie unfortunately nt support css variables currently possible somewhat get around issue using ponyfill introduces custom code limitations use javascript override css variables element rather defining css variables value css class style encapsulation even polyfill loaded angular elements using sd non sd browsers styles encapsulated expected behavior would love angular element fully supporting browsers could done angular leveraging shady css support style encapsulation css variables people needing feature could manually load polyfill outside angular probably nt trivial angular side makes easier angular consumers alternatively maybe mechanism could somehow leveraged angular elements using provide encapsulation browsers without sd support would leave css variables problem consumer angular could still work probably puts less work angular team consumer side motivation use case changing behavior think current stance support browsers nt natively support sd however making part angular supporting different subset browsers seems bit odd opinion long way forward support angular ie probably ca nt polyfilled hoping ie could supported work nb know ie small market share market share also unfortunately often crucial one utility companies hospital etc dropping ie option lot people industrial settings environment benoitjchevalier ask also ms adding support ie simply asking something wrong place think normal something practically dead already thrown dustbin history kept alive forever mlcmlapis nt think asking wrong place since angular supports ie merely asking support one new feature tried bypass issues externally much possible hitting kind wall point like hear angular team position going nt think ie dead people would like included ps also going ie since one issue described concerns browsers supporting sd including ff soon edge sure status right gt edge sure status right currently development see many corporations nt upgraded windows use ie must use edge supported ie still market tommck right lot companies stuck using unrealistic assume ie anywhere near market share across devices like mobile huge even corporations case even companies stuck windows liberty using alternative browsers updated regularly following standards said agree official statement would still appreciated angular fact promote framework fully supporting reasons still using ie business nt transfer decision others otherwise simply saved cost paid someone else real money mainly loss time even expensive skreborn ie desktop browser market right guarantee much higher large corporations well bit misleading average last year right still desktop browsers add mobile suddenly drops argue percentages indeed use corporations fact question much actual overlap people forced use browser people consume angular elements induced applications support firefox edge ie less marketshare month september decision already made ms several years ago ie really dead thing absolute evolution nt matter anybody using numbers sense solving want solve ms solving lots users use ie nice feature love able use app site gets millions hits per day internal external users would prefer forced use suboptimal options must support though still plenty people yet may savvy enough install another browser tommck know first answer basic question long would support years years time wish block move new things angular side others ie nt know possible create reasonable polyfill due inapplicability performance thing look call ms side first persuade add key new specs allow using ie long period plans sure see time future support usage level goes probably quite gt question much actual overlap people forced use browser people consume angular elements induced applications good point think fairly common scenario big companies investing design systems perfect place use web components company invested past using angular elements makes lot sense big companies serve slower paced segment market power healthcare sometimes still locked ie going make special affordances ie world shadow dom custom elements realize probably want hear reality apis extremely expensive polyfill provide capabilities simply polyfilled edge team publicly stated supporting custom elements shadow dom edge development started supporting ie ever polyfills work extent able incompatibility work around happy look going add ton functionality angular core compiler emulate something even microsoft going support going forward see polyfills note angular emulated view encapsulation effectively shadycss compiler thanks statement robwormald thanks clarification good know stand given webcomponentsjs wo nt polyfill style encapsulation box ie thinking outside angular solution could tell see big blocker idea would library use elements getting style encapsulation angular implementation shadycss would use providerrenderer actually create components shadowroot essence similar hack proposed use waiting shadow dom implemented angular element benoitjchevalier shadow dom implemented viewencapsulationshadowdom shadycss provides library simulate shadowdom style encapsulation collinstevens yes making component using prevent angular emulating style encapsulation makes sense perfectly fine browsers supporting sd encapsulate mentioned issue mean ie wo nt style encapsulated hence suggestion mlcmlapis yes mentioned issue however including page wo nt provide style encapsulation whatever framework building components would leverage shadycss make work suggestion rob mentioned nt want build special affordance ie benoitjchevalier said waiting shadowdom implemented angularelements already also said would prefer use viewencapsulationemulated manually place elements shadowroot able put shadowroot since support confused trying accomplish looking solution sorry confusion nt saying waiting waiting mentioned workaround previously used based example nicked rob time nt available used manually create shadow root using possible use shadow root ie shadydom loading shadydom webcomponentsjs polyfill creating element allow work issue loading shadycss polyfill provide style encapsulation box robwormald incompatibility also strongly prefer angular advertise support support partial conditional sure angular elements relationship angular getting way polyfilling sd style encapsulation counts might maybe put mention supported angular supports angular elements way package angular component web component support angular elements support web components see details nt angular also use shadydom implementation style scoping slots internally dropped since last looked early angular morewry yep use angular elements nt need shadow dom sarunint using replace need idea understand others described create reusable web components embedded applications without worrying underlying technology used create example company distributing consumed teams using would worry styles bleeding component using solves issue placing styles inside collinstevens logic applied also mode using head tag difference also able also protect inside component outside access want right gt nt angular also use shadydom implementation style scoping slots internally dropped since last looked early angular morewry angular using selfmaintained emulation logic since first implementation heavily based webcomponentsjs time following shadow dom spec never directly used ponyfill library also shadycss project started sep shadow dom spec way angular could depend', 'date': '2018-10-23T19:02:08Z'}"
"191",190,"{'data': 'fetcheventrespondwith received error typeerror internal error webkitserviceworker submitting current behavior safari service worker registered empty cache refresh page get error expected behavior polyfill fixes error minimal reproduction problem instructions register service worker project open safari empty cache refresh page motivation use case changing behavior make service worker workable safari environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx x safari desktop version x safari ios version xx ie version xx edge version xx tooling issues node version platform mac others previously created issue angular still exists version issue issue get error even update process running background without purging cache serious problem', 'date': '2018-10-23T17:26:30Z'}"
"192",191,"{'data': 'issue converting existing app pwa submitting current behavior converted existing project pwa run production build code throws following error unable trace issue worked perfectly fine regular localhost prior implementing service worker worked build command environment', 'date': '2018-10-23T17:25:12Z'}"
"193",192,"{'data': 'validators updateon gt blurchange submitting feature request current behavior either set updateon change blur submit problem change happens soon type letter validation immediatly trigger shout errors submit kinda late big forms ie page need scroll need visit whole page searching errors blur best compromise pops needs issue nt track programatical changes nt trigger submit expected behavior blur also trigger submit blur new updateon value blurchange pick programatical changes motivation use case changing behavior let say validators name field saying field empty field left empty match mrms w also gender radio button wich automatically fill mr ms name field scenario click gender button submit form name started empty originally controlled valid never controlled ends value mr ms wich nt match regex rejected creating new user loginpassword app browser recognizes usual login suggests password password field filled programatically external source browser blur never triggered note change would triggered result password never validated even click submit focus blur password field validation properly executed environment angular version think according angularcore gt packagejson gt id property browser firefox', 'date': '2018-10-23T15:39:20Z'}"
"194",193,"{'data': 'component reuse lazy loaded module submitting current behavior lazy loaded modules moduleone moduletwo approutingmodulets const routes routes path children path one loadchildren pagesmoduleonemoduleonemodule moduleonemodule path two loadchildren pagesmoduletwomoduletwomodule moduletwomodule path redirectto moduleone paths moduleoneroutingmodulets const routes routes path one component testonecomponent path two component testtwocomponent path redirectto one moduletwo path const routes routes path component comcomponent path redirectto wanted apply component reuse strategy export class customreusestrategy implements routereusestrategy private handlers key string detachedroutehandle shoulddetach route activatedroutesnapshot boolean return true store route activatedroutesnapshot handle detachedroutehandle void thishandlers thiscalcpath route handle shouldattach route activatedroutesnapshot boolean return thishandlers thiscalcpath route retrieve route activatedroutesnapshot detachedroutehandle return thishandlers thiscalcpath route shouldreuseroute future activatedroutesnapshot curr activatedroutesnapshot boolean return futurerouteconfig currrouteconfig private calcpath route activatedroutesnapshot return route routerstateurl suppose step start two oneone ok step onetwo ok step two ok component used step oneone fail error uncaught promise error reattach activatedroutesnapshot created different route error reattach activatedroutesnapshot created different route successfully navigate onetwo oneone found step store route activatedroutesnapshot handle detachedroutehandle receives route children routeconfig component path one route change inside module one step store route activatedroutesnapshot handle detachedroutehandle receives route children activatedroutesnapshot routeconfig loadchildren path one guess correct one step takes place setfuturesnapshotsofactivatedroutes routerjs currvaluerouteconfig match resultvaluerouteconfig throws error expected behavior successful component reuse workaround minimal reproduction problem instructions', 'date': '2018-10-23T14:17:42Z'}"
"195",194,"{'data': 'multiplication error submitting current behavior expected behavior minimal reproduction problem instructions environment angular thing normal floating point behavior javascript want absolute accuracy need work exclusively integers gt normal floating point behavior javascript normal floating point behaviour language know others pointed js behaviour nothing specific angular', 'date': '2018-10-23T13:59:48Z'}"
"196",195,"{'data': 'input wrapper component reactive forms angular hi im simple rather complex issue inside reactive form want use component thats wraps reuse formcontrol generic way inside project render inputs error classes etc custominput component looks like import component input angularcore import abstractcontrol angularforms component selector custominput templateurl custominputcomponenthtml styleurls custominputcomponentcss export class custominputcomponent input control abstractcontrol input customclass input customplaceholder string input customid string see dont use reuse formcontrol saves tons code already native form element get tslint apparently allowed rewrote gave build error rewrote everything reactive forms patterns like use around input wrapper components project add extra lines code per component want native form element pass inside also want use instead writing nice development official stand point best practice example form pattern sign newsletter submitbtnlabel following personal opinion rule codelyzer disabled many rules feel like codelyzer introduced breaking changes way sees best practice maybe use pipe asked wrapping controlcomponents worked though throws error nt know see demo', 'date': '2018-10-23T13:41:11Z'}"
"197",196,"{'data': 'bug docsinfra duplicated line short description ng serve cli commands overview submitting current behavior line duplicated wrongly placed see workspace file structure one preceded short description commands expected behavior minimal reproduction problem instructions go visit motivation use case changing behavior clear documentation helps new angular developers understand beautiful framework works fixed', 'date': '2018-10-23T12:39:11Z'}"
"198",197,"{'data': 'ngtoolswebpack ngc slower aot compilation submitting x regression behavior used work stopped working new release x performance issue current behavior webpack incremental build angular takes seconds angular seconds packagejson angular webpack seems like typescript needs lot time something observe behavior running directly instead webpack use compile project watchrebuild takes expected behavior faster incremental build minimal reproduction problem instructions ca nt share repo ticket nt sufficient maybe strip project environment angular version tooling issues node version platform macos cpu profile previous angular release angular runs even slowdown computation inside typescript seems happen angular version duplicate indeed compiler also included aot build thread focusses bigger build incremental aot watcher takes long recompile observed slowdown behavior using directly excludes webpack issues optimizations configuration whatnot chain pure think root cause issue fix worked thanks thekiba heads latest typescript patch release contains fix compile time regression please test file new issue still problems thanks hi tested webpack watch typescript incremental compilation become faster several times code changes fall updated bundle watch mode confirm angular typescript regression gone watcher fast', 'date': '2018-10-23T10:01:15Z'}"
"199",198,"{'data': 'childrouting inside auxiliary outlet works specific cases submitting current behavior routing inside auxiliary routes broken expected behavior routing experience inside primary routers difference routing inside primary router auxiliary nested routes child route behave consistently whatever parent outlet minimal reproduction problem instructions angular angular click navigation links motivation use case changing behavior consistency behavior routing prevent unexpected outputs environment', 'date': '2018-10-23T08:53:42Z'}"
"200",199,"{'data': 'adding delay observable pipe returns always null submitting current behavior delay added observable pipetransform pipe returns always null expected behavior pipe returns value returned observable minimal reproduction problem instructions create pipe returning observable string delay see exemple motivation use case changing behavior pipe return observable string value instead null point avoid expressionchangedafterithasbeencheckederror specific case delay pipe environment duplicate causing infinite loop never completes scheduling new async task within template execution allowed change pipe pure work works pure pipe thank', 'date': '2018-10-23T07:53:46Z'}"
"201",200,"{'data': 'animation decrement executing inside ngfor submitting current behavior trying animate list using elements items moved one position one time animation executing transition executing rounds expected behavior finally correct transition executed expected behavior would expect transition fired beginning since variable transition attached decremented one element incremented one minimal reproduction problem instructions gist code typescript component selector myapp templateurl appcomponenthtml animations trigger move transition decrement style opacity animate ease style opacity transition increment style transform scale animate ease style transform scale styleurls appcomponentcss export class appcomponent moveup item string const index thisitemsindexof item index gt thisitemssplice index thisitemssplice index item movedown item string const index thisitemsindexof item index lt thisitemslength thisitemssplice index thisitemssplice index item html v index item motivation use case changing behavior unless something wrong code bug preventing animation simple list reordering environment', 'date': '2018-10-23T03:22:29Z'}"
"202",201,"{'data': 'binding private variables allowed upgrading aot build submitting current behavior upgrading aot build line longer works need change private public expected behavior expect work like angular minimal reproduction problem instructions aot build issue copy class constructor line see compilation issue motivation use case changing behavior environment angular typescript decorated component class members must public make input property private internal data bound properties must also public way always although compiler may strict actually check ok change access level public', 'date': '2018-10-22T23:54:07Z'}"
"203",202,"{'data': 'dynamically render component lazy loaded module aot cant find component factory submitting current behavior declared dynamic components entry components module also want render jit works fine following structure part app want render app home lazy contracts lazy search added components module use search componentroute im compiling aot everytime visit search route app tells component factory course searched google found results tried adding provider tried import appmodule also tried simply importing declaring dynamic dependant components root module appmodule everything resulting error declare dynamic components entry components like module gets imported also declared component want render components dynamically using inject routing component route child route route gets lazy loaded child route home route also lazy loaded belongs main route expected behavior render da compontenz maybe point right direction going wrong herewhat misunderstand minimal reproduction problem instructions think described problem project structure well enough reproduce issue environment sounds similar solutionworkaround described replies might work gt sounds similar solutionworkaround described replies might work another issue tries render dynamic component declared lazy module wants render outside lazy module want render module declare add entrycomponent work seems like cant dynamically render component lazy loaded module glappatoni call mean using want render first load lazily loaded module via routing trying get factory base taken constructor glappatoni call mean using want render first load lazily loaded module via routing trying get factory base taken constructor updated issue glappatoni still exactly clear want help prepare reproduction demo simple possible even jit environment simple take run locally aot mode create simple project repo using cli glappatoni one notice always related module want exactly control probably simplest way load lazily loaded module programmatically simply use module reference like using adding components correct enough', 'date': '2018-10-22T22:46:07Z'}"
"204",203,"{'data': 'component reflect reactive form control disability status submitting current behavior reference form group changes input reflect disability status form control expected behavior input reflect new disability status form control minimal reproduction problem instructions motivation use case changing behavior lets take various profiles left right side section gives details profile users formarray various formgroups click profile user details user rendered also reflect disability status name environment', 'date': '2018-10-22T21:01:44Z'}"
"205",204,"{'data': 'docscss use standard colors across api docs guides submitting current behavior api docs use colors different ways guides red hyperlinks versus blue guides blue versus blue hyperlinks guides see null blue nt hyperlinks blue instead red expected behavior blue hyperlinks throughout doc set need diff color whatever intended highlight making blue minimal reproduction problem instructions see link motivation use case changing behavior basic standardization colors preserve meaning throughout doc set environment reason current colors matches see code probably default palette prettify notes code blocks consistent api syntax well similar exact colors related related title area code example boxes', 'date': '2018-10-22T20:42:12Z'}"
"206",205,"{'data': 'hello created one attribute directive called taskdirectivets want use component submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment follow documentation sorry information nobody really help hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-22T19:41:40Z'}"
"207",206,"{'data': 'docs change cli command syntax green black console style submitting current behavior cli command reference command syntax shown black text code font white similar angular api reference expected behavior cli command reference command syntax shown green text code font black similar command line terminalconsole treatment guides would clearly indicate command line syntax api file contents etc minimal reproduction problem instructions motivation use case changing behavior discussions within team survey gdes overwhelmingly preferred console style environment nt duplicate', 'date': '2018-10-22T17:10:41Z'}"
"208",207,"{'data': 'ngmodel two way data binding production build submitting current behavior input property set sites need filter based user input sites filtered custom pipe try run production pipeline fails saying property searchsite exist type mycomponentname fix add searchsite property component typescript file although property needed think happening compiler strict production mode get error production ps know ways filter data like subscriptions using prototype pattern focus case error happening environment tooling issues node version platform mac works intended ngmodel filter argument bound component property declare property otherwise would cause compilation error production mode get type checking templates would nt wa nt use dawidgarus correct works intended dawidgarus case gives error production hence nt need instance ts file would nt include get compilation error environment adoi creates error production mode intended behavior reason works nonproduction build templates compiled browser typescript code compiled javascript type information lost bet simple way would cause error prevent lot errors could cause app break runtime sometimes late seemingly reason selling point angular helped early detect many errors nt fight embrace produce much higher quality code reason works nonproduction build templates compiled browser typescript code compiled javascript type information lost makes sense thanks', 'date': '2018-10-22T15:04:51Z'}"
"209",208,"{'data': 'could find module angularcommonlocale able import angularcommonlocale get could find module error see number issues raised able get right solution nodemodules folder angularcommonlocales folder lot locales files dts files metadata files try importing locale namespace locales found part angularcommon missing something using angular cli version angularcommon angularcompiler angularcore help appreciated', 'date': '2018-10-22T14:48:00Z'}"
"210",209,"{'data': 'ngmodel two way data binding production build submitting current behavior input property set sites need filter based user input sites filtered custom pipe try run production pipeline fails saying property searchsite exist type mycomponentname fix add searchsite property component typescript file although property needed think happening compiler strict production mode get error production ps know ways filter data like subscriptions using prototype pattern focus case error happening environment tooling issues node version platform mac', 'date': '2018-10-22T13:51:05Z'}"
"211",210,"{'data': 'angular formatdate input date localization hello pass locale argument formatdate function affects output function however function still accepts date english language nt work month czech language works month english language thanks gt hello pass locale argument formatdate function affects output function however function still accepts date english language nt work month czech language works month english language thanks tried use dateadapter cope language determined browser implementation invalid ecmascript format given undefined fallback behavior invalid formats browsers may support anyone depend instead use ecmascriptcompatible iso format date object also active proposal unify browser behavior english version may also forbidden standardized trotyl angular obviously able recognize localized date produce output basically question specify language output date possibility specify language input date possible feature request angular output localized date necessarily use input like trotyl explained use formats like iso mysql timestamp input nt see change anytime soon sorry', 'date': '2018-10-22T12:30:06Z'}"
"212",211,"{'data': 'unknown placeholder add id current message error submitting current behavior translatable string due translator human error one language mistake file build app throw error error unknown placeholder polation interpolation bis error tage instead message error help find string minified file hard gt string translate expected behavior improve message error add least current error message motivation use case changing behavior find faster error minified file searching big amount fo translations strings environment feature useful without doubt next release', 'date': '2018-10-22T12:21:44Z'}"
"213",212,"{'data': 'angular build prod success error occurred angular version angular cli node os darwin angular animations cdk common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router serviceworker package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics angularcli angularpwa ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack signup component signup module import component angularcore import user modeldzuser import userservice servicescontentusersservice import datahelper helperdatahelper import router angularrouter import formcontrol formgroup validators angularforms component selector signup templateurl signuphtml export class signup username string password string validateform formgroup registeruser new user confirmpassword ngoninit void thisvalidateform new formgroup username new formcontrol thisregisterusername validatorsrequired email new formcontrol thisregisteruseremail validatorsemail password new formcontrol thisregisteruserpassword validatorsrequired checkpassword new formcontrol thisconfirmpassword validatorsrequired thisconformationvalidator conformationvalidator control formcontrol string boolean gt controlvalue return require true else controlvalue thisvalidateformcontrols password value return conform true error true constructor public userservice userservice public datahelper datahelper public router router getvalidata name return thisvalidateformcontrols name register thisvalidateformvalid let createparams signup true create thisregisteruser thisuserservicecreate createparams subscribe data gt thisdatahelperisownempty data ngmodule imports commonmodule reactiveformsmodule mixinmodule atmodule httpclientmodule loginroutes shareelementmodule shareentrymodulewithproviders declarations logincomponent resetpasswordcomponent registercomponent signup checkcomponent providers userservice httphelper datahelper projectservice contentsservice counterservice export class loginmodule error uncaught typeerror e constructor io new objectns createngmoduleref ecreate tinvoke objectoninvoke ideas find reason thanks trotyl gt find reason thanks trotyl reason got error fclemonschool first check dependency angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router serviceworker package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularpwa ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack serve application production mode remember nt uglify finally found module missing import module missing module cdkoverlaymodule nt know server prod may help u find problem good luck gt fclemonschool first check dependency angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router serviceworker package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcdk angularcli angularpwa ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack serve application production mode remember nt uglify finally found module missing import module missing module cdkoverlaymodule nt know server prod may help u find problem good luck okay thanks try', 'date': '2018-10-22T10:20:54Z'}"
"214",213,"{'data': 'bug forms validation triggers changing first set inputs formarray submitting current behavior suppose formgroup within formgroup formarray containing nested formgroups validation trigger change first set inputs formgroup change nth set formgroup b controls nothing would happen expected behavior validation occur every input change inside formarray minimal reproduction problem instructions stackblitz project contains repro steps relevant code motivation use case changing behavior using complex forms validations would surely hassle developer expecting would work fine environment angular cli node os darwin angular undefined package version angulardevkitarchitect clionly angulardevkitcore clionly angulardevkitschematics clionly schematicsangular clionly schematicsupdate clionly rxjs clionly browser tooling issues node version platform mac', 'date': '2018-10-22T10:05:13Z'}"
"215",214,"{'data': 'hello want dynamically change templateurl support componentts submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment sounds like sorry yesterday page bit carded thought problem submitted successfully submitted', 'date': '2018-10-22T10:00:58Z'}"
"216",215,"{'data': 'bug forms validations triggering changing first set inputs formarray submitting current behavior suppose formgroup within formgroup formarray containing nested formgroups validation trigger change first set inputs formgroup change nth set formgroup b controls nothing would happen expected behavior validation occur every input change inside formarray minimal reproduction problem instructions stackblitz project contains repro steps relevant code motivation use case changing behavior using complex forms validations would surely hassle developer expecting would work fine environment angular cli node os darwin angular undefined package version angulardevkitarchitect clionly angulardevkitcore clionly angulardevkitschematics clionly schematicsangular clionly schematicsupdate clionly rxjs clionly browser tooling issues node version platform mac', 'date': '2018-10-22T10:00:06Z'}"
"217",216,"{'data': 'hello angular support dynamic change templateurl hello think code componentts change templateurl dynamically ok sorry yesterday page bit carded thought problem submitted successfully submitted bestbelief missed basic angular functionality html templates compiled js want replace feel question asked stack overflow possible jit compiler development however use property html elements least render plain hmtl string wo nt able utilize angular templating language capabilities inside html repo might give info exact possibilities closing support request see cmddavid answer thank reply need write website module site different layout layouts different templates wrote lot templates frontend html according data database specified templates displayed required', 'date': '2018-10-22T09:58:58Z'}"
"218",217,"{'data': 'angular elements jquery submitting case created angular element two buttons first button generates rows input fields reactive form one emits output data row inputs outside world current behavior add angular element dom via jquery method clicking add new row button within ae row nt immediately added click elsewhere page order make addition expected behavior dynamically adding ae dom nt effect instead behave like element minimal reproduction problem instructions created repo show cases issue environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac duplicate', 'date': '2018-10-22T07:48:07Z'}"
"219",218,"{'data': 'ng build prod go wrong submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment hey open new issue reproduction steps included thank', 'date': '2018-10-22T07:47:10Z'}"
"220",219,"{'data': 'ngstyle working resizing window submitting current behavior resize window ngstyle directive work updated project angular angular ngstyle directive project gets offsetwidth element set component width however width component contains ngstyle directive nt make update resize window however component makes update make wheel event method something like template file expected behavior ngstyle directive work resize width component resize window minimal reproduction problem instructions motivation use case changing behavior environment nt sort window resize listener default also recommended use methods inside template would encourage use event listener set variable containing width utilizing inside template cmddavid answer spoton cmddavid use ngstyle way since worked angular checked documentation right usage thanks reply', 'date': '2018-10-22T04:58:40Z'}"
"221",220,"{'data': 'unable get rid peerdependency warnings upgrading submitting current behavior following steps generates warnings ng update angularcli angularcore update packagejson bytes npm warn ngbootstrapngbootstrap requires peer angularcommon none installed must install peer dependencies npm warn ngbootstrapngbootstrap requires peer angularcore none installed must install peer dependencies npm warn ngbootstrapngbootstrap requires peer angularforms none installed must install peer dependencies npm warn ngtoolswebpack requires peer typescript none installed must install peer dependencies npm warn codelyzer requires peer angularcompiler gt lt gt lt none installed must install peer dependencies npm warn codelyzer requires peer angularcore gt lt gt lt none installed must install peer dependencies audited packages found vulnerabilities ng update angularmaterial update packagejson bytes npm warn ngbootstrapngbootstrap requires peer angularcommon none installed must install peer dependencies npm warn ngbootstrapngbootstrap requires peer angularcore none installed must install peer dependencies npm warn ngbootstrapngbootstrap requires peer angularforms none installed must install peer dependencies npm warn ngtoolswebpack requires peer typescript none installed must install peer dependencies npm warn codelyzer requires peer angularcompiler gt lt gt lt none installed must install peer dependencies npm warn codelyzer requires peer angularcore gt lt gt lt none installed must install peer dependencies audited packages found vulnerabilities attempting update peer dependencies fails ng update ngbootstrapngbootstrap package ngbootstrapngbootstrap incompatible peer dependency angularcommon requires would install incompatible peer dependencies found see expected behavior consistent set dependencies warnings minimal reproduction problem instructions see motivation use case changing behavior upgrade results inconsistent dependency closure environment ngbootstrapngbootstrap requires peer angularcommon ng update ngbootstrapngbootstrap package ngbootstrapngbootstrap incompatible peer dependency angularcommon requires would install angular solve fact ngbootstrap nt support yet ignore warnings projects catch', 'date': '2018-10-21T17:00:59Z'}"
"222",221,"{'data': 'missing ngswworkerjs ngswjson dist folder upon production build update angular submitting current behavior ngswworkerjs ngswjson dist folder running ng build prod expected behavior ngswworkerjs ngswjson running ng build prod minimal reproduction problem instructions angular cli version build new app ng new sw serviceworker run ng build prod environment current way creating pwa adding sw app also see flags currently supported spoiler among wink closing since everything works expected afaict feel free open new issue info case missed anything', 'date': '2018-10-21T11:47:22Z'}"
"223",222,"{'data': 'circleci fails fork submitting current behavior circleci tests fail fork branches notably pass repository tests fail random places example creating runfiles tree bazelouthostbinexternalbuildbazelrulesnodejsinternalrolluprolluprunfiles host actions running creating runfiles tree actions running creating runfiles tree actions running executing genrule packagescoretestbundlingutil metadataswitch remote actions running extracting orgchromiumchromiumfilechromelinuxzip remote actions running server terminated abruptly error code error message log file exited code difference warning output fork tests resource class xlarge docker available project default class medium used please contact csm person support team whitelist project expected behavior tests expected pass forks least contributors minimal reproduction problem instructions motivation use case changing behavior problem blocking angularangular pr circle checks unsuccessful ca nt run ci fork various auth tokens custom setup specific ci environment ca nt easily replicated forks nt currently plans support kind setup please send pr upstream repo ci infrastructure test pr ca nt run ci fork various auth tokens custom setup specific ci environment ca nt easily replicated forks nt currently plans support kind setup please send pr upstream repo ci infrastructure test pr', 'date': '2018-10-21T11:37:01Z'}"
"224",223,"{'data': 'reactive form inputs sync submitting current behavior inputs connected reactive form control values synchronized typing form control value updates setting value setvalue inputs update value typing second input know change expected behavior inputs stay sync minimal reproduction problem instructions motivation use case changing behavior input displayed twice maybe tabs inside tab control values stay sync environment duplicate', 'date': '2018-10-21T06:45:09Z'}"
"225",224,"{'data': 'animationplayer onstart ondone events emit submitting current behavior animationplayer events emit new player created get events work expected behavior animationplayer events work first play minimal reproduction problem instructions motivation use case changing behavior able reuse player environment could related', 'date': '2018-10-21T06:03:51Z'}"
"226",225,"{'data': 'docs ngswconfig tool submitting current behavior service worker configuration guide path mismatch first code block expected behavior either ca nt tell able find information ngswconfig tool version others would nice info ngswconfig tool much tool expected people using manually except rare usecases takes configuration file generates manifest ie served along rest app order sw thing right though command outofdate paths mentioned guide eg default basically supposed called like basically value would passed option example without ngswconfig distmyproject ngswconfigjson ngswconfig distmyproject ngswconfigjson myapp pliski anyone else prs docs fixesimprovements always welcome wink', 'date': '2018-10-20T21:32:32Z'}"
"227",226,"{'data': 'docs request update release schedule submitting current behavior release schedule expected behavior release schedule next planned version fixed', 'date': '2018-10-20T09:07:13Z'}"
"228",227,"{'data': 'docs update support policy angular releases account release submitting current behavior support policy lists support upto expected behavior support policy account release fixed thanks', 'date': '2018-10-20T09:00:40Z'}"
"229",228,"{'data': 'docs inconsistent syntax highlighting cli docs submitting current behavior note syntax highlighting compared links eg ng add ng build seems treated keywords extra formatting vs thanks textbook included related', 'date': '2018-10-20T08:38:41Z'}"
"230",229,"{'data': 'navigationcancel triggered queued navigations specified docs submitting current behavior router events states navigationcancel event triggered navigation canceled due route guard returning false navigation makes seem like route guards way navigations cancel true practice presumes queued navigations wont trigger run queued routes occured using library changing url remove hashed access token cause que navigations see details stackoverflow question expected behavior include docs queued navigations also cause minimal reproduction problem instructions stackblitz example project download serve go log oidc provider maxgeheim read console motivation use case changing behavior prevent hours frustration whenever occurs without specified environment browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx x safari desktop version xx safari ios version xx ie version xx edge version xx', 'date': '2018-10-20T07:49:04Z'}"
"231",230,"{'data': 'animationbuilder query returns zero elements enter leave used submitting current behavior using animationbuilder apply animations child elements transitions tried queries like ones query docs using throw following error error error unable create animation due following errors returned zero elements use wish allow expected behavior ability query child elements transitions minimal reproduction problem instructions motivation use case changing behavior environment', 'date': '2018-10-20T07:46:36Z'}"
"232",231,"{'data': 'install npm c gt npm install g error eisdir illegal operation directory read typeerror read property get undefined errorhandler c program c program cb c program c program c program arrayforeach c program f c program finalize c program confaftercaread c program c program npmconfigget json typeerror read property get undefined processerrorhandler c program processemit processfatalexception error eisdir illegal operation directory read typeerror read property get undefined errorhandler c program c program cb c program c program c program arrayforeach c program f c program finalize c program confaftercaread c program c program npmconfigget json typeerror read property get undefined processerrorhandler c program processemit processfatalexception c gt hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-20T07:34:00Z'}"
"233",232,"{'data': 'page rendered blank geneated component using cmd ng generate angularmaterial materialnav nameappnav submitting current behavior generated component using command ng generate angularmaterial materialnav nameappnav run app page rendered blank following default content appnavcomponenthtml using latest angular core material cdk expected behavior content sidenav displayed properly minimal reproduction problem instructions generate component using cmd ng generate angularmaterial materialnav nameappnav use selector appcomponenthtml start app motivation use case changing behavior environment browser chrome desktop version firefox version tooling issues node version platform windows others error reported console compilation successful another observation replace default content appnavcomponenthtml simple html paragraph code rendering content properly seems like issue code generated default nlsrikanth please add since thiere much done angularangular directly', 'date': '2018-10-20T04:57:27Z'}"
"234",233,"{'data': 'updated angular cli windows error occurred creating new project e gt ng new aaa would like add angular routing yes stylesheet format would like use css create aaaangularjson bytes create aaapackagejson bytes create aaareadmemd bytes create aaatsconfigjson bytes create aaatslintjson bytes create aaaeditorconfig bytes create aaagitignore bytes create aaasrcfaviconico bytes create aaasrcindexhtml bytes create aaasrcmaints bytes create aaasrcpolyfillsts bytes create aaasrctestts bytes create aaasrcstylescss bytes create aaasrcbrowserslist bytes create aaasrckarmaconfjs bytes create aaasrctsconfigappjson bytes create aaasrctsconfigspecjson bytes create aaasrctslintjson bytes create aaasrcassetsgitkeep bytes create aaasrcenvironmentsenvironmentprodts bytes create aaasrcenvironmentsenvironmentts bytes create aaasrcappapproutingmodulets bytes create aaasrcappappmodulets bytes create aaasrcappappcomponenthtml bytes create aaasrcappappcomponentspects bytes create aaasrcappappcomponentts bytes create aaasrcappappcomponentcss bytes create bytes create bytes create bytes create bytes throw er unhandled error event error spawn c enoent processchildprocesshandleonexit onerrornt combinedtickcallback processtickcallback reported cli repository please go link create new issue fill issue template jotatoledo mentioned please follow issue template produce new issue proper reproduction steps closing thank reported getting started local development installation get started locally follow instructions nt done already make fork repo clone local computer using git make sure node later installed see instructions angular cli requires node development requires node make sure yarn installed see instructions run yarn arguments root clone project run yarn link add custom scripts use global install line help error thanks', 'date': '2018-10-20T03:30:05Z'}"
"235",234,"{'data': 'build make easier keep npm dependencies sync packagejson files repo reminder issue find good way keep following packagejson files amp yarnlock files sync currently merged master shortly cc alexeagle igorminar', 'date': '2018-10-19T23:24:25Z'}"
"236",235,"{'data': 'angular router cancels navigation getting observable true canactivate submitting current behavior implemented canactivateguard returns either boolean observable returning boolean true works fine returning observable resolved true leads guardscheckend shouldactivate true jumps navigationcancel without reason expected behavior canactivateguard work way matter gets boolean true observable true minimal reproduction problem instructions returnimmediately return true navigation finished ok else return observabletimer map gt return true navigation cancelled router tracing guardscheckend id url requestedurl namedoutlet otherurl urlafterredirects requestedurl namedoutlet otherurl state route url path route url requestedurl path requestedurl route url otherurl path otherurl shouldactivate true navigationcancel id url requestedurl otherurl motivation use case changing behavior confirmable dialog routing user accept something navigation environment', 'date': '2018-10-19T14:59:10Z'}"
"237",236,"{'data': 'module build failed unit tests saving code submitting current behavior created fresh angular app tried execute unit tests works first run change something code save unit tests executed expected behavior unit tests always executed saving minimal reproduction problem instructions ensured current version angular cli globally installed create new app chose question add angular routing b selected scss styling language run unit tests expected chrome opens three unit tests generated default executed successful make change example change value property save expected recompile rerun tests two tests fail changed value property observed behaviour see short message compiling console disappears fraction second activity console chrome tab shows header karma karma connected etc shows go chrome console see following error message motivation use case changing behavior bug ca nt test quite good need rerun change environment able repro also moved issue please follow updates thanks', 'date': '2018-10-19T14:23:54Z'}"
"238",237,"{'data': 'publicapiguard suggested bazel command accept changed golden file wrong example correct command include', 'date': '2018-10-19T13:33:46Z'}"
"239",238,"{'data': 'extending abstract class submitting current behavior component extenting abstract class constructor params params resolved abstract class decorator mode component decorator abstract class angular complains expected behavior always work without decorator minimal reproduction problem instructions motivation use case changing behavior environment injectable injectable base class export abstract class abstractform abstract data constructor protected dialog dialogservice component component derived class export class abccomponent extends abstractform data', 'date': '2018-10-19T11:56:36Z'}"
"240",239,"{'data': 'app load version broswer tab using cpu edit think may know problem code using angular material breakpointobserver seems cause called appcomponent ie first bootstrapped component try submit sample app reproduce bug edit added way reproduce issue create issue angular material repo submitting current behavior app load see http calls pending completing browser tab using cpu faced beta rc even compiled app served production build issue angular works fine also removed dependencies appinitializer luck expected behavior app loads minimal reproduction problem instructions create new angular app ng add angularmaterial add following getter appcomponent ts constructor private breakpointobserver breakpointobserver get height observable return thisbreakpointobserverobserve breakpointshandset pipe map bp gt bpmatches styleminheightpx height async unfortunately nt know reproduce issue hoping someone might issue clue wrong environment browser x chrome desktop version xx chrome android version xx chrome ios version xx x firefox version xx safari desktop version xx safari ios version xx ie version xx x edge version xx tooling issues node version platform windows tried building newly generated cli project starting modify look like project eventually come point breaks project art creating minimal reproduction problem instructions experiencing problem try come repro code thing get devtools warning also using ngrx routerstore may cause nt tested yet hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-19T11:14:48Z'}"
"241",240,"{'data': 'docs list deprecated apis submitting current behavior many apis deprecated long ago removed yet example deprecated deprecated nt way know things deprecated going page expected behavior like page shows deprecated apis developers avoid using minimal reproduction problem instructions na motivation use case changing behavior environment mental image could look like current list create table like one suggested though started google doc summer intent move md submit aio doc set resume work complete thanks letting know useful immediate workaround go api list filter status deprecated', 'date': '2018-10-19T10:48:18Z'}"
"242",241,"{'data': 'router paste url params navigationbar working anymore submitting current behavior pasting url params navbar eg params working looks like angular nt interpret route correctly anymore angular seems treat connect base url error messages', 'date': '2018-10-19T10:06:32Z'}"
"243",242,"{'data': 'docs code example styles conforming docs style guide submitting current behavior terminal input output put content tags set css class set language attribute multiple code examples conform guide expected behavior used code examples', 'date': '2018-10-19T10:01:46Z'}"
"244",243,"{'data': 'angular compiler find module tsickle run npm bin ngc p tsconfigbuildjson outdir angualr verision angular cli node os darwin angular animations cdk common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router package version angulardevkitarchitect angulardevkitbuildangular angulardevkitbuildoptimizer angulardevkitbuildwebpack angulardevkitcore angulardevkitschematics angularcli ngtoolswebpack schematicsangular schematicsupdate rxjs typescript webpack online waiting install manually kemsky nt included dependencies duplicate', 'date': '2018-10-19T09:56:35Z'}"
"245",244,"{'data': 'docs propose use code shell style cli command submitting current behavior expected behavior propose cli commands displayed shell like code example box consistent shell commands documentation also visibility relatively simple open editor agrees interesting idea jbogarthyde petebacondarwin related google dev doc style guide calls including command prompt think makes sense guides show users enter command writes back using command prompts doc command line examples nt use command prompts prevents user copying command example pasting directly command shell nt apply syntax statement command example like style fence one syntax highlighting vary across blue black lose syntax coloring console view inconsistent maybe good thing wrt different color see', 'date': '2018-10-19T08:11:23Z'}"
"246",245,"{'data': 'second compile time long upgrade x bug report current behavior first compile ms compiling addding empty line ts file second compile time ms third compile time ms first compile second compile expected behavior second compile time must second takes times longer first compile problem compiling angular environment angular version browser x chrome desktop version xx tooling issues node version platform windows pro others failure second following builds take long time complete stuck building modules modules active js e qlasssrcappauselyuserexpts wait second get build completed duplicate thinks nt duplicate yesterday nt issue using angular upgrading angular met compile time problem ng serve verbose first compile second compile watch mode compile adding single empty line npm install angulardevkitbuildangular npm install angulardevkitbuildoptimizer everything okey', 'date': '2018-10-19T07:43:45Z'}"
"247",246,"{'data': 'scrolling clicking mouse wheel nt scroll top list virtual scrolling submitting bug report current behavior clicking mouse wheel virtual scroll example scrolling scrolls end supposed scrolling scrolls chunk stops instead rendering new chunk items expected behavior scrolling clicking mouse wheel dragging cursor top make list scroll top even chunks rendered minimal reproduction problem instructions scroll rotating mouse wheel inside virtual scroll component click mouse wheel drag top start scrolling direction scrolling items scroll stop event tho nt reached top list motivation use case changing behavior current behavior unexpected especially possible scroll clicking mouse wheel impossible scroll environment caught bug official example angular material website browser chrome desktop version official build please open mishotek move issue please mention also happens downwards direction takes significantly longer nt happen firefox whatsoever far tell', 'date': '2018-10-19T07:42:50Z'}"
"248",247,"{'data': 'docs cli command arguments automatically linked api docs submitting current behavior moment certain words cli commands overview example automatically linked api docs incorrect mentioned page linked expected behavior cli commands options nt linked api docs cc petebacondarwin', 'date': '2018-10-19T07:37:56Z'}"
"249",248,"{'data': 'docs ng build options relevant library submitting current behavior moment small subset options listed available used targeting library project command libraries application two different builders thus separate schemas descriptions library builder application builder expected behavior make clear users options used applications libraries projects avoid users opening issues certain options working effect targeting library', 'date': '2018-10-19T07:35:04Z'}"
"250",249,"{'data': 'sanitize removes inline style submitting current behavior sanitize removes inline style expected behavior sanitize remove style minimal reproduction problem instructions motivation use case changing behavior need show text rich text editor div environment', 'date': '2018-10-19T07:31:24Z'}"
"251",250,"{'data': 'update guide updateangulario shows info update instead submitting current behavior update guide updateangulario shows information updating selecting expected behavior update guide shows info updating minimal reproduction problem instructions go select version first dropdown second click show update see info outdated motivation use case changing behavior want know upgrade think instruction correct could elaborate issue cc stephenfluin looks like correct maybe mistaken think saw instructions changing http httpclient instructions would apply update currently line still bit confusing angular already uses rxjs wilgert line still supports rxjscompat package developers may updated yet make sure update moving', 'date': '2018-10-19T07:31:02Z'}"
"252",251,"{'data': 'npm latest advanced next submitting current behavior npm info angularcore yields latest next expected behavior next advanced latest minimal reproduction problem instructions motivation use case changing behavior environment updated tags thanks', 'date': '2018-10-19T06:40:48Z'}"
"253",252,"{'data': 'release announcement link submitting current behavior navigate link release announcement aricle nt expect todo message expected behavior overview release announcement minimal reproduction problem instructions navigate link motivation use case changing behavior environment fixed master indeed fixed master fix backporting oh right reference fixed', 'date': '2018-10-19T05:52:10Z'}"
"254",253,"{'data': 'docs cli command reference improve long description presented submitting current behavior long description appears end page right side toc entry one user described footnotes indeed looks bit lost long description usually important information usage footnote corner cases expected behavior options add usage notes heading long description add heading right toc move long description immediately syntax integrated area short description syntax tables options arguments others minimal reproduction problem instructions motivation use case changing behavior environment await decision preference would moving long descriptionusage notes directly syntax adding heading break bit', 'date': '2018-10-18T21:01:01Z'}"
"255",254,"{'data': 'ng build prod nt work npm prod submitting current behavior nt work prodonly dependencies expected behavior work prodonly dependencies minimal reproduction problem instructions fails could find module angulardevkitbuildangular potato error could find module angulardevkitbuildangular potato objectresolve usrlocallibnodemodules angularclinodemodules subscribe usrlocallibnodemodules angularclinodemodules observabletrysubscribe usrlocallibnodemodules observablesubscribe usrlocallibnodemodules dooperatorcall usrlocallibnodemodules observablesubscribe usrlocallibnodemodules usrlocallibnodemodules objectsubscribetoresult usrlocallibnodemodules mergemapsubscriberinnersub usrlocallibnodemodules mergemapsubscribertrynext usrlocallibnodemodules motivation use case changing behavior nt want install devdependencies building prod environment intended building production version app considered development phase also wrong repo', 'date': '2018-10-18T14:37:38Z'}"
"256",255,"{'data': 'docs fetching favicons every click chrome submitting current behavior click anywhere angulario website always fetches favicons total kb expected behavior site gets minimal reproduction problem instructions go open network tab devtools click page happens google chrome motivation use case changing behavior website downloads way content needs environment worth nt happen user specifically clicks inside presumably stops propagation set click listener every child issue goes away leading conclusion culprit idea yet click closes search box calls turn uses native history api triggers behavior perhaps something subscribed location change triggers behavior thx reporting onlyflix nice sleuthing skreborn method indeed called click anywhere outside search results search box could easily change like onlyflix skreborn feel free submit pr wink okay found reason issue like skreborn already said native history api replacestate chromium browser actually bug call loads favicons refer stackoverflow post chromium issue information stackoverflow post suggest change favicons tested makes problem disappear gkalpak solution favicons still get downloaded whenever click angular logo top left corner onlyflix true gkalpak solution still leaves room chromium bug supposedly fixed way produces much less erroneous requests case chrome loads favicons disk cache according network log nt think much harm happening every agree solution fixes downloads rest issue chromiums site bug actually nt fixed digging found chromium bug days old fetching favicons happens chromium support attribute link elements onlyflix good find would care open pr', 'date': '2018-10-18T14:19:27Z'}"
"257",256,"{'data': 'digest already progress check progress already submitting current behavior using ngupgrade upgrading communication module moved http connection login success statego page get digest already progress initiated upgradestaticumdjs expected behavior understanding calling rootscope digest check rootscope phase exists way wont throw already progress error minimal reproduction problem instructions complex ng upgrade use uirouter motivation use case changing behavior going upgrades impossible upgrade without suffering initialization exception environment similar issues raised deliberately checking errors never happen everything set correctly check might shadow programming errors provide minimal reproduction problem eg stackblitz would happy take look use one one templates starting point ngupgrade upgrademodule ngupgrade downgrademodule', 'date': '2018-10-18T13:45:29Z'}"
"258",257,"{'data': 'upgradestaticumdjs digest already progress submitting current behavior using ngupgrade upgrading communication module moved http connection login success statego page get digest already progress initiated upgradestaticumdjs expected behavior understanding calling rootscope digest check rootscope phase exists way wont throw already progress error minimal reproduction problem instructions complex ng upgrade use uirouter motivation use case changing behavior environment duplicate', 'date': '2018-10-18T13:44:59Z'}"
"259",258,"{'data': 'docs docviewer error preparing document loading chunk failed submitting current behavior go url angulario eg sometimes basic website loads site content load site reload content gets displayed normally following error displayed console expected behavior website loads displays content minimal reproduction problem instructions happens random cases difficult reproduce motivation use case changing behavior viewing docs without reload page environment onlyflix try clearing cache maybe even unregistering service worker trying looks like getting stale versions app correct toc url page worked correctly closed reopened browser happened time error except first two lines network request look like eg response shown devtools tab standard error response standard resource found page think might problem deployment firebase deploys multiple servers like cdn believe perhaps nodes failed deploy correctly still reproducible published several build angulario since reported invalidated older caches yes error still emptied cache full reload unregistered sw closed reopened browser first link clicked throws error time failed url latest version version app using shown bottom page version confirm issue seems gone version', 'date': '2018-10-18T13:23:59Z'}"
"260",259,"{'data': 'currency code locale files submitting current behavior locale files contain iso currency codes expected behavior good currency codes along currency symbol user show fallback motivation use case changing behavior scenarios characters supported eg jspdf generates pdf support characters', 'date': '2018-10-18T13:01:04Z'}"
"261",260,"{'data': 'feature allow routerlink change query params preserve current route submitting current behavior routerlink used change query parameters regardless current route argument navigates navigates parent page expected behavior routerlink could used update query params current route without changing current route minimal reproduction problem instructions click page click one edit links expected remain page edit query actual returned page seems way tell routerlink remain current route wherever may update query parameters motivation use case changing behavior parent component contains edit link displays popup current page using query parameter control visibility popup whatever subpage user currently viewing routeroutlet preserved environment okay works', 'date': '2018-10-18T12:54:47Z'}"
"262",261,"{'data': 'problems front website hello angular teams website colegue noticed angular logo well placed topbar little bit much left also noticed problem resolved pass margin element navlinkhome margin margin hope helps developper team regards baptiste valette thx reporting issue baptistekeetiz already fixed deployed stble version soon', 'date': '2018-10-18T12:50:51Z'}"
"263",262,"{'data': 'name database connect angular name database connect angular wan na database use angular mongodb instead firebase see types database support angular propose queries work mysql hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation ok sorry', 'date': '2018-10-18T12:01:00Z'}"
"264",263,"{'data': 'acceptlanguage header ignored chrome submitting current behavior chrome matter value put http request interceptor acceptlanguage header always value browser settings set firefox ie everything works intended value set interceptor passed server expected behavior value set interceptor passed server minimal reproduction problem instructions sample code angular future versions also affected open run plunker monitor http requests tool click fetch people observe acceptlanguage header request motivation use case changing behavior multilanguage application would nice adjust acceptlanguage header language selected application without need reconfigure browser settings environment ca nt control header programmatically browsers set adequate values header according user interface language default browser behaviour nothing js angular control', 'date': '2018-10-18T09:58:20Z'}"
"265",264,"{'data': 'feature ability inject component unknown type submitting current behavior inject component directive must specify type injected component either using class name injection token component must provide ex expected behavior cases might want inject component unknown type use duck typing determine want component ex minimal reproduction problem instructions na motivation use case changing behavior example let say inputcomponent components derive like inputnumbercomponent inputtelephonecomponent etc derived components must explicitly provide inputcomponent want inject inputcomponent generates lot boiler plate code something like could much simpler especially since directive intended behavior always used inputcomponent example injecting using class name creates dependency two js modules forces import angular module injected component event though optional dependency could avoided using injection tokens sometimes nt want ca nt add provider every component environment duplicate feel free add usecase inthere', 'date': '2018-10-18T08:40:34Z'}"
"266",265,"{'data': 'ngclass working optimization true angularjson ng build prod requirement apply class based navigation apply fixedfooter class homecomponent checked code git hub repository see code appcomponentts class ngoninit event setting flag fixedfooterflag true activated component home component developed abc development team version code ngclass work deployed code ng build configurationproduction turn optimization angularjson production works suggestions thanks nitin im issue v duplicate production completely unrelated depend runtime angular issue got thanks', 'date': '2018-10-17T21:27:58Z'}"
"267",266,"{'data': 'move devtime serving deployment guide submitting current behavior contains section called development servers expected behavior want use deployment mean well deployment content developmenttime serving deployment move buildmd content serving ng serve minimal reproduction problem instructions motivation use case changing behavior clarify devdeployment lifecycle content came docs review igorminar deployment probably needs rewrite content particular needs move buildserving guide original cli wiki source environment removal igor pr need add content back doc set jenniferfell rest issue actionable like handle putting content back appropriate place', 'date': '2018-10-17T20:42:56Z'}"
"268",267,"{'data': 'dynamical input inside table blur run mutiple times submitting current behavior code inside event function run multiple times expected behavior code run one time minimal reproduction problem instructions reproduce issue please use code bellow change value change input copple times access use code required import component angularcore import formgroup formbuilder formcontrol validators formarray angularforms component selector myapp templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent tableform formgroup finalselecteddata variantsku variantsku constructor private fb formbuilder ngoninit thistableform thisfbgroup arr thisfbarray let arr thistableformget arr formarray let lt thisfinalselecteddatalength arrpush thisfbgroup variantsku thisfinalselecteddata variantsku validatorsrequired teste event void alert eventtargetvalueasnumber motivation use case changing behavior environment anything works well repro except using got focus blur controls could explain problem using please provide simpler repro use example going close nt heard back valid reproduce scenario', 'date': '2018-10-17T20:21:56Z'}"
"269",268,"{'data': 'move autoprefixer browser compatibility info buildmd browsersupportmd submitting current behavior contains information using autoprefixer ensure compatibility different browser browser versions expected behavior content makes sense browser support minimal reproduction problem instructions motivation use case changing behavior request igorminar doc review easier find browserspecific information one location environment igorminar recall correctly want us move content thx', 'date': '2018-10-17T20:10:47Z'}"
"270",269,"{'data': 'update state bug using async generators submitting current behavior input field triggers function updates component property string typing slowly input field misses updates ui bound component property created minimal example readme expected behavior view update every keystroke minimal reproduction problem instructions minimal example readme steps reproduce type slowly input field motivation use case changing behavior environment duplicate zonejs nt work native function thank saw ticket guessed might related', 'date': '2018-10-17T19:13:48Z'}"
"271",270,"{'data': 'formcontrol classes fully reactive submitting form control classes nice often use onpush components thanks observables like fully implemented missing abstractcontrol formgroup formarray prevents onpush scenarios add ugly hacks duplicate', 'date': '2018-10-17T17:19:26Z'}"
"272",271,"{'data': 'ngclass working optimization true ngclass working deployed application optimization true sorry ca nt reproduce problem following instructions provided problem still exists please open new issue following submission guidelines thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template', 'date': '2018-10-17T16:46:37Z'}"
"273",272,"{'data': 'angular docs suggest polyfill hashbased routing submitting current behavior using hashbased routing strategy angular throws error solution add polyfill expected behavior please add polyfill table polyfills angular documentation minimal reproduction problem instructions motivation use case changing behavior environment', 'date': '2018-10-17T14:15:42Z'}"
"274",273,"{'data': 'stack space errors routing edge extension popup submitting current behavior trying use routing angular app loaded edge extension popup edge throws stack space errors app loads simple component without routing error problem start latest windows update edge would seem regression edge open issue reported edge issue tracker additional context history read reported issue opening issue hopes possibly workaround discovered developed deal problem angular still usable environment right completely broken edge extension users hopeful microsoft fix problem time soon ever familiar innerworkings angular sure would cause problem observed routing expected behavior routing works without errors minimal reproduction problem instructions reproduction using tour heroes tutorial app adapted build browser extension edgeextangularbugzip side load directory edge extension need configure machine windows development mode turn extension development edge open popup observe error dev tools could also observe official extension app pulled built repo motivation use case changing behavior one use angular develop web extensions edge environment much prefer could make life easier moving repro mhevery issue reproducible edge extension stackblitz wo nt work attached repro build sideload edge mentioned original issue', 'date': '2018-10-17T12:54:12Z'}"
"275",274,"{'data': 'boolean animation states converted strings animationevent submitting current behavior boolean animation states converted strings despite properties typed string expected behavior animationevent typing changed boolean states converted strings minimal reproduction problem instructions motivation use case changing behavior using boolean animation states one cast environment', 'date': '2018-10-17T12:13:04Z'}"
"276",275,"{'data': 'property reevaluated edge submitting x bug report performance issue feature request documentation issue request current behavior using reactive form show validation messages check input form states dirty invalid condition checks start iterating validation errors input current scenario regardless state input nt show anything expected behavior field message detected errors minimal reproduction problem instructions html template chunk html userinfoformget firstname haserror required name required userinfoformget firstname haserror minlength name valid component ts chunk typescript component selector ssregisteruser templateurl registerusercomponenthtml styleurls registerusercomponentscss export class registerusercomponent userinfo registerusermodel basic object firstname field userinfoform formgroup constructor thisuserinfo new registerusermodel thisuserinfoform thisfbgroup firstname new formcontrol thisuserinfofirstname validators validatorsrequired validatorsminlength updateon blur environment angular version browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version x edge version tooling issues node version platform windows pro seems tha edge nt like angular problem thing stays hidden changing value property nt stay hidden use visible instead unset get say trying say property never changes hidden unset seeying property value changing please make minimal reproduction remove anything irrelevant hello excuse delayed answer managed isolate stackblitz nt know tool came really handy see thing using hidden instead stylevisibility seems work nt know issue style property edge workaround use hidden property instead stylevisibility found behaviour kind weird', 'date': '2018-10-17T08:33:18Z'}"
"277",276,"{'data': 'fetcheventrespondwith received error typeerror internal error webkitserviceworker submitting current behavior safari service worker registered empty cache refresh page get error expected behavior polyfill fixes error minimal reproduction problem instructions register service worker project open safari empty cache refresh page motivation use case changing behavior make service worker workable safari environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx x safari desktop version x safari ios version xx ie version xx edge version xx tooling issues node version platform mac others sure exact problem hopefully fixed included yet sure going another release closing fixed feel free open new issue try latest version still problem error problem able access angulario safari entering responsive mode website works', 'date': '2018-10-17T07:50:55Z'}"
"278",277,"{'data': 'input tag ngmodel entering text facing extremely slow responsive ui current behavior input tag big applications sluggishextemely slow expected behavior responsive entering input minimal reproduction problem instructions motivation use case changing behavior likely many input fields ngmodel loaded time end issue keeping modals loaded constantly showing hiding changing display property rather dynamicaly creating hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-17T06:14:23Z'}"
"279",278,"{'data': 'local workspace file angularjson could found getting error adding angular material bug report windows thank please open initial investigations', 'date': '2018-10-17T06:03:04Z'}"
"280",279,"{'data': 'use typed get method testbed class submitting current behavior static method class return typed object expected behavior static method return typed object minimal reproduction problem instructions look examples motivation use case changing behavior would improve type safety environment others possible implementation using new helper types typescript would sure constructor instance typed fell free update actually needed tested signature actually returns typed object wanted relates u added service providers pr would great mhegazy try get promises', 'date': '2018-10-16T21:18:38Z'}"
"281",280,"{'data': 'directive class selector tslint error submitting current behavior using class selector directive tslint showing error according angular documentation using class selector allright definition working fine expected behavior tslint error nt shown minimal reproduction problem instructions use class directive selector motivation use case changing behavior commenting disable tslint rule nt way go environment use lower camel case naming selectors directives keeps names properties defined directives bound view consistent attribute names angular html parser case sensitive recognizes lower camel case nt angular issue codelyzer componentselector rule linting rules place consistency across team members enforcing certain standards typically signify something wo nt work compiler job quite personal set default rules corresponds best practices disagree certain rules meant changed gt use lower camel case naming selectors directives keeps names properties defined directives bound view consistent attribute names angular html parser case sensitive recognizes lower camel case manklu wished angular support class selectors directives feature used special circumstances makes hard understand parts template regular classes directives syntax tslint warning compilation error insist using selector style change tslint config prefix callsite code tslint ignore comment make life life easier stick attribute selectors instead igorminar link warning point correct explanation manklu feel free make request suggested message unrelated repo', 'date': '2018-10-16T20:53:47Z'}"
"282",281,"{'data': 'blank space link text period submitting current behavior link followed period seeing blank space period blank space nt see pr preview first table several instances igor thinks dgeni adding new line new line appears blank space would appear expected behavior blank space minimal reproduction problem instructions motivation use case changing behavior environment temporary workaround put punctuation inside link eg bug libraries use render markdown fixed specifically commit update dependencies grab latest fixed version', 'date': '2018-10-16T19:50:19Z'}"
"283",282,"{'data': 'found synthetic property somestate please include either browseranimationsmodule noopanimationsmodule application submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior expected behavior run without error minimal reproduction problem instructions imported browseranimationsmodule appmodulets added imports appmodulets menu component import trigger state style transition animate angularanimations component selector appmenu templateurl menucomponenthtml styleurls menucomponentscss animations trigger menustate state closed style height overflow hidden state opened style height overflow scroll transition closed lt gt opened animate easein ng serve prod motivation use case changing behavior behavior production one locally environment angular version browser x chrome desktop version versão oficial bits chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx x edge version xx tooling issues node version platform linux elementaryos others igorminar man help know urgent', 'date': '2018-10-16T19:04:51Z'}"
"284",283,"{'data': 'angular production build running javascript memory heap limit submitting current behavior run production build eventually javascript heap runs memory ng build configurationqa buildoptimizer building modules modules active lt last gcs ms marksweep mb ms average mu current mu allocation failure scavenge might succeed ms marksweep mb ms average mu current mu allocation failure scavenge might succeed lt js stacktrace js stack trace security context anonymous aka anonymous pathtoprojectnodemodulesenhancedresolvelibaliaspluginjs fatal error ineffective markcompacts near heap limit allocation failed javascript heap memory npm err code elifecycle npm err errno npm err btvadmin qa npm err exit status npm err npm err failed btvadmin qa script npm err probably problem npm likely additional logging output npm err complete log run found expected behavior run production build process start continue end without issues minimal reproduction problem instructions motivation use case changing behavior would like build work lease provide instruction resolve issue angular related environment angular version browser x chrome desktop version tooling issues node version version node since starting angular project platform windows pro others chance could create reproduction issue public repo aware memory related issues right unless provide info reproduction wo nt able take action also issue mentioned angular version sure one using temporary workaround try increasing heap used node command would look something like create reproduction please open new issue ideally cli repo thanks', 'date': '2018-10-16T16:49:07Z'}"
"285",284,"{'data': 'feature request encapsulated shared styles components submitting current behavior import css style several angular components use duplicated per usage like example expected behavior would great manually add namespace key share style within components would result hi feature implemented long time ago ca nt use statements pull stylesheets long import shared stylesheet via styleurls compiler avoid duplication feature nt work usecase please create reproduction stackblitz file new issue thanks', 'date': '2018-10-16T15:18:38Z'}"
"286",285,"{'data': 'event transitionend missing test without breakpoints submitting current behavior using third party library called tinglejs adds css animations elements browser supports css animations waits transition completed calling callback method current test environment seems miss event running active debugger expected behavior test environment propagate handle css transitions events third party library minimal reproduction problem instructions run tests result failing test modalcomponent run modalcomponent enable one breakpoint test succeeds run see modal behavior motivation use case changing behavior would helpful able write tests components using third party libraries without mocking stuff tinglejs one example think libraries containing pre defined animations environment much prefer could make life easier moving repro responsecontainerbbppid fontfamily initial fontsize initial color initial tests stackblitz supported expected supportedif move next days used another template shows issue explain caused angular property set imperatively callback related angular mechanism spec code plain assertions angular async helper mistake repro forgot css add breakpoint modal visibility changed based css transition trotyl mistake repro think timing issue test environment test succeeds set breakpoint open debugger perhaps directly related angular cschulz need another timeout click modal also showup animation problem completely unrelated angular oh gosh nt see whole time', 'date': '2018-10-16T15:12:20Z'}"
"287",286,"{'data': 'unable install dependencies showing error message mentioned angularmasterangularmasteraio yarn yarn term yarn recognized name cmdlet function script file operable program check spelling name path included verify path correct try yarn categoryinfo objectnotfound yarn string commandnotfoundexcep tion fullyqualifiederrorid commandnotfoundexception ps angularmasterangularmasteraio yarn yarn term yarn recognized name cmdlet function script file operable program check spelling name path included verify path correct try yarn categoryinfo objectnotfound yarn string commandnotfoundexcep tion fullyqualifiederrorid commandnotfoundexception hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation sounds like need install yarn case related angular', 'date': '2018-10-16T12:26:25Z'}"
"288",287,"{'data': 'combination webpack jit super classes breaks dependency injection submitting current behavior using target angular using jit inconsistent dependency injection behavior superclasses used component created extends another class like typescript injectable export class parent constructor readonly injected someservice injectable export class workingservice extends parent get injected two classes file imported another file service wo nt get injected two split separate files webpack rename import parent something like seems break regular expressions used decide superclass piece code expected behavior expect dependency injection super classes consistently work jit minimal reproduction problem instructions reproduced stackblitz created repo shows working broken case issue shown clone repository run created test case service one component sure fail created running setting tsconfig target adding test service extends class uses injected service work correctly superclass file fails superclass another file motivation use case changing behavior behavior inconsistent works aot extended service file using jit extending class another file fail environment tracked case iirc work around explicitly using decorator parent classes ts injectable export class parent decorator required parent class constructor inject someservice readonly injected someservice injectable export class workingservice extends parent decorator needed bottom level class public constructor parentdep someservice private readonly owndep anotherservice super parentdep', 'date': '2018-10-16T08:57:56Z'}"
"289",288,"{'data': 'header css main page work incorrect submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment fix add result smile background broken upgrading width changed align latest material design specs', 'date': '2018-10-16T05:18:12Z'}"
"290",289,"{'data': 'ng serve recognize accept header returns requests route fragments submitting current behavior requesting site using ie route causes server return expected behavior page load application work minimal reproduction problem instructions returns returns run try accessing site ie using short form url caveats use fqdn use route fragment investigation ie cases enforces compatibility mode intranet sites short form domain name makes ie think intranet site ie sends different accept header compatibility mode include fallback middleware content negotiation seems ignore prefering environment wrong repo please report', 'date': '2018-10-15T22:39:09Z'}"
"291",290,"{'data': 'support map playerfactory type checking currently ivy type checking support ivy styling syntax bindings bindings support following types current get around example files bazel settings', 'date': '2018-10-15T22:18:21Z'}"
"292",291,"{'data': 'remove setup local development dependency old quickstart repo submitting current behavior documents still depend old quickstart repo related setup local development doc docs affected related discussion pr expected behavior nothing depend old quickstart repo document removed url redirect docs updated reference getting started initial app created app end getting started architecture doc next steps contains link setupmd file depend old quickstart repo link replaced link getting started right away recommended stages get us setup stage leave setup file doc set leave setup hidden nav pr redirect setup url update architecture next steps link setupmd go quickstartmd allows users dependent docs seeread old setupmd removes nondependent cross references stops showing doc navigation setup stage rewrite typescript configuration use new getting started app config files pointofreference rewrite deployment use cligenerated getting started bundle sizes lite server rewrite upgrademd directly include main info setupmd upgrading users directed use old quickstart repo app remove setupmd redirects quickstartmd setup stage new pr engineering time ensure get right rewrite upgrademd use clibased app instead old quickstart repo app minimal reproduction problem instructions motivation use case changing behavior current best practices accuracy climanaged apps environment fix architecture doc partial fix', 'date': '2018-10-15T21:43:58Z'}"
"293",292,"{'data': 'ng build prod allows use private functions templates within structural directives submitting current behavior write template uses private function inside structural directive ng build prod successfully compiles eg foo private function corresponding component following template following code fails line expected behavior build fail line minimal reproduction problem instructions plunkr example downloadable zip reproduce downloadingextracting zip run npm install ng build prod motivation use case changing behavior encountered issue writing code within structural directives code called private functions removing structural directives build started failing would preferable known issue first occurred environment angular nt typecheck embedded views default since old view compiler used use type context embedded view think want enable option tell angular check bindings embedded view example angularcli srctsconfigappjson even typecheck embedded view issue way implemented', 'date': '2018-10-15T20:35:04Z'}"
"294",293,"{'data': 'bug binding variable inputs type property results model getting converted string submitting current behavior bind variable set variable model converted string user edits input value expected behavior input set convert model data string minimal reproduction problem instructions create input tag bind type variable set variable initial state editing motivation use case changing behavior would like set input type variable determined dynamically without converting everything string environment duplicate', 'date': '2018-10-15T18:37:50Z'}"
"295",294,"{'data': 'service worker configuration documentation datagroupscacheconfigtimeout submitting current behavior setting angular service worker section explain formatting unit used item expected behavior minimal reproduction problem instructions datagroups section invalid timeout string contains provided error message angular explain error json configuration file motivation use case changing behavior chek timeout unit code timeout formatting string expecting number environment angular version working closed', 'date': '2018-10-15T18:09:33Z'}"
"296",295,"{'data': 'httpclient response observable cleaned safari requests times submitting current behavior safari request made via httpclient times server connected network observable returned httpclient never emits error core problem safari sends timeout event situation instead error event written fixed angularjs written angular closed part feature got dropped expected behavior request timeouts emit error response observable minimal reproduction problem instructions motivation use case changing behavior properly handle request errors environment', 'date': '2018-10-15T17:37:55Z'}"
"297",296,"{'data': 'plans angular team end support ie curious know angular team going end support ie plans yets question favour blog posts end life internet explorer chrome used browser enterprise analyst king chrome microsoft browsers sidelined os still using internet explorer wo nt upgrade', 'date': '2018-10-15T11:57:38Z'}"
"298",297,"{'data': 'switch client app server side rendering want switch server side rendered page client app solution rendered page getting script tag pollyfill buildjs get rid script tag server side rendered page gt want switch server side rendered page client app use angular deployed client side version working great wanted use server side rendering serving dynamic page googlebot case need switching server side rendered page client app please provide solution new angular universal mon oct lazar ljubenović notifications githubcom wrote want switch server side rendered page client app use angular receiving authored thread reply email directly view github mute thread hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation', 'date': '2018-10-15T10:57:26Z'}"
"299",298,"{'data': 'create new project issue create frontendreadmemd bytes create frontendangularjson bytes create frontendpackagejson bytes create frontendtsconfigjson bytes create frontendtslintjson bytes create frontendeditorconfig bytes create frontendgitignore bytes create frontendsrcenvironmentsenvironmentprodts bytes create frontendsrcenvironmentsenvironmentts bytes create frontendsrcfaviconico bytes create frontendsrcindexhtml bytes create frontendsrcmaints bytes create frontendsrcpolyfillsts bytes create frontendsrctestts bytes create frontendsrcassetsgitkeep bytes create frontendsrcstylescss bytes create frontendsrcbrowserslist bytes create frontendsrckarmaconfjs bytes create frontendsrctsconfigappjson bytes create frontendsrctsconfigspecjson bytes create frontendsrctslintjson bytes create frontendsrcappappmodulets bytes create frontendsrcappappcomponentcss bytes create frontendsrcappappcomponenthtml bytes create frontendsrcappappcomponentspects bytes create frontendsrcappappcomponentts bytes create bytes create bytes create bytes create bytes npm err unexpected end json input parsing near va xo npm err complete log run found npm err package install failed see verbose stack syntaxerror unexpected end json input parsing near va xo verbose stack jsonparse verbose stack parsejson verbose stack consumebodycallthenbuffer verbose stack verbose stack processtickcallback verbose cwd verbose darwin verbose argv install verbose node verbose npm error unexpected end json input parsing near va xo verbose exit true frontend node v frontend npm v angular cli hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation please reopen', 'date': '2018-10-15T09:19:27Z'}"
"300",299,"{'data': 'problem custom extended service lazy loading submitting current behavior extending service typescript import liveannouncer import breakpointobserver angularcdklayout import overlay angularcdkoverlay import inject injectable injector angularcore import matsnackbar matsnackbarconfig matsnackbardefaultoptions angularmaterial import messagebarcomponent messagebarcomponent import messagebartype messagebarmodel injectable providedin root export class messagebar extends matsnackbar constructor private overlay overlay private injector injector private breakpointobserver breakpointobserver private liveannouncer liveannouncer private snackbar matsnackbar inject matsnackbardefaultoptions private config matsnackbarconfig super overlay liveannouncer injector breakpointobserver snackbar config private message text string type messagebartype const config new matsnackbarconfig configduration configpanelclass type configdata type text thisopenfromcomponent messagebarcomponent config info text string thismessage text messagebartypeinfo warning text string thismessage text messagebartypewarning error text string thismessage text messagebartypeerror using lazy loading mechanism loading modules problem use get error calling extended service method inside lazy loaded module error typeerror thismessagebarinfo function servicecomponentpushsrcappcontentserviceserviceservicecomponenttsservicecomponentdeleteservice objecteval handleevent handleevent callwithdebugcontext objectdebughandleevent handleevent dispatchevent htmlbuttonelement zonedelegatepushnodemoduleszonejsdistzonejszonedelegateinvoketask objectoninvoketask pushnodemodules pushnodemodules dispatchevent anonymous anonymous pushnodemoduleszonejsdistzonejszonedelegateinvoketask oninvoketask pushnodemoduleszonejsdistzonejszonedelegateinvoketask pushnodemoduleszonejsdistzonejszoneruntask pushnodemoduleszonejsdistzonejszonetaskinvoketask invoketask globalzoneawarecallback error context debugcontext view nodeindex nodedef eldef elview pushnodemodules pushnodemodules dispatchevent anonymous anonymous pushnodemoduleszonejsdistzonejszonedelegateinvoketask oninvoketask pushnodemoduleszonejsdistzonejszonedelegateinvoketask pushnodemoduleszonejsdistzonejszoneruntask pushnodemoduleszonejsdistzonejszonetaskinvoketask invoketask globalzoneawarecallback expected behavior extended service methods available lazy loaded module using attribute minimal reproduction problem instructions using throws error remove custom service add service lazy loaded module providers list everything works fine problem cca modules growing adding custom service kind painful motivation use case changing behavior using extended services lazy loaded modules expose extended methods properties ones belong class extended environment looks like duplicate fixed case please provide minimal reproduction via stackblitz thanks lot trotyl version works flawlessly', 'date': '2018-10-15T06:56:26Z'}"
"16530",16529,"{'data': 'initialize function backbonemodel documented looking instantiate backbonemodel docs constructor initialize says creating instance model pass initial values attributes set model define initialize function invoked model created nt say arguments initialize function takes remember correctly includes object passed instantiation documented called end constructor function passed arguments passed constructor default implementation nothing indeed documented slightly better oh good know also clarifies second question whether attributes passed constructor available function appears get inside function', 'date': '2018-10-31T18:49:34Z'}"
"16531",16530,"{'data': 'way add several models id collection default normal behavior model id defaults models added collection working fiddle maybe id field defaults applied model initialize', 'date': '2018-10-13T15:01:50Z'}"
"16532",16531,"{'data': 'error read property idattribute undefined collection description create new collection class extends backbonecollection define model property function returns instantiated model collection constructed error read property idattribute undefined thrown class methods property prototype used backbonecollectionprototypemodelid method expected behavior error thrown collection property model defined class method actual behavior error read property idattribute undefined thrown example environment backbone version additional build tools etc build tools important babel used works fine class properties well arrow functions hence fails workaround make plain old js const modelfactory function attrs options return new backbonemodel attrs options class somecollection extends backbonecollection somecollectionprototypemodel modelfactory new somecollection id somemodelid yes looks unpleasant especially situation application approach extending classes directly prototype used plus collection extended many methods need scroll several screens see model property kills benefits syntaxic sugar classes yeah ugly writing coffeescript nt look bad still hack patched solution pretty working nt using backbone stickit moved version literally code written issues', 'date': '2018-08-21T08:38:36Z'}"
"16533",16532,"{'data': 'use https website github pages support https text taken', 'date': '2018-06-29T20:29:03Z'}"
"16534",16533,"{'data': 'feature request using nondelegatable events events hash would nice could specify bindings nondelegatable events like hash way would remove burden developer bind unbind events manually differentiate events delegated ones could prefix event name character like example', 'date': '2018-06-29T07:04:23Z'}"
"16535",16534,"{'data': 'trailing fragment space fragments space end trying navigate fragment backbone stripping trailing space getfragment var g understand removing bits start fragment someone explain motivation removing space end causes app fail lookup requested data part space param router', 'date': '2018-06-15T20:37:19Z'}"
"16536",16535,"{'data': 'model set two change events triggered one change attributename change trying write unit test cases spying trigger method model sinonstub checked triggerspy called numbers showed call args change percentcomplete change events using backbonejs coffeescript unit test case set percentcomplete attribute gt videocomponentmixinmodelset islocked true setspy sinonspy videocomponentmixinmodel set triggerstub sinonstub videocomponentmixinmodel trigger shouldmakeprogresscallstub sinonstub videocomponentmixin shouldmakeprogresscall returns true videocomponentmixinupdatevideocomponentprogress expect videocomponentmixinmodelget percentcomplete toequal sinonassertcalledonce triggerstub updatevideocomponentprogress function testing updatevideocomponentprogress quiz gt modelget islocked shouldmakeprogresscall quiz modelget percentcomplete isnt modelset percentcomplete else modeltrigger change percentcomplete certain question seem describing backbone works docs events change model options model attributes changed change attribute model value options specific attribute updated events always triggered attribute changes', 'date': '2018-06-01T05:42:24Z'}"
"16537",16536,"{'data': 'history documentreferer', 'date': '2018-05-10T08:31:25Z'}"
"16538",16537,"{'data': 'backbone model attributes type hi backbone model attributes string objects backbone collection etc possible attribute array backbone model ex var model backbone model modelget charts simple array chart chart backbone model question ideally backbone model attribute array backbone collection simple array backbone model thanks mahaveer model attribute set value set variable recommend stack overflow questions like', 'date': '2018-05-09T10:50:20Z'}"
"16539",16538,"{'data': 'passive nonpassive event listeners would nice could set event handlers created passive nonpassive way also get rid warning chrome working events', 'date': '2018-05-01T07:41:18Z'}"
"16540",16539,"{'data': 'fetch execute id set otherwise gets whole collection consider case var appmybook new backbonemodel urlroot appmybookfetch forgot set book id fetching appmybook contains list books rest server fetch called without id suggest id set fetch return null nothing thanks models urls ids ok thanks ended extending model guess keep good work', 'date': '2018-04-12T15:31:21Z'}"
"16541",16540,"{'data': 'documentation collection addcreate missing mention options passed model creation backbone docs mentioned section property collection model defined pass raw attributes objects arrays add create reset attributes converted model proper type leaving undocumented fact also provided passed along creation model visible lack small comment makes appear first instance like limiting factor handling creation models directly collections created small pr proposed changes thanks', 'date': '2018-04-07T09:09:11Z'}"
"16542",16541,"{'data': 'bug backbone anything uri encoded characters spaces quotation marks fragment triggers loadurl twice navigate function pass uri encoded characters spaces quotation marks fragment navigate decode fragment store thisfragment checkurl later triggered detect fragment changed even though nt encoded decoded version fragment compared makes equal causes loadurl triggered load encoded version fragment tsangjustin browser using exabeam comment explains happening depth gwynjudd mentioned url encoding changed chrome released dec lines recent influx comments tickets issue also may existed firefox due comments mentioned tickets however tested time wrote workaround issue', 'date': '2018-03-21T17:25:59Z'}"
"16543",16542,"{'data': 'call aswell discovers actually clears child listeners view listens objects ie modelscollections would cleared custom controller listens view listener would cleaned intended behaviour js function foocontroller options thisinit options foocontrollerprototypeinit function options thislistento optionsview foo stuff objectassign foocontrollerprototype backboneevents var view new backboneview var ctrl new foocontroller view view viewremove point still references somehow call manually view get destroyed sure one advantages using automatic cleaning listeners object gets removed oo controller called automatically views lifecycle know stop listening view explicitly calls destroyed controller thing updated example make clear question removed object nt clean listeners parent object thought work way clean listeners objects listen removes event listeners view made event listeners objects made view want remove event listeners attached controller need call', 'date': '2018-02-26T10:17:10Z'}"
"16544",16543,"{'data': 'model change event triggered exception steps reproduce add change event handler backbone model instance make change model attribute change event handler called exception occurs handler make change model attribute change event handlers called code demonstrate javascript var model new backbonemodel var changehandler function consolelog name changed modelget name backboneeventslistento model change changehandler modelset name sachin prints name changed sachin console modelset name virat prints name changed virat console var new backbonemodel var changehandler function consolelog name changed name alog model changed throw exception defined backboneeventslistento change changehandler name sachin prints name changed sachin console also exception occurs inside change handler name virat nothing printed model change handler called name rohit nothing printed model change handler called analysis inside model set function thistrigger called exception thrown handlers thischanging never set false subsequent model changes change event triggered developer code never break behaviour framwork smilarly subsequent changes model trigger change event model solution wrap trigger logic around tryfinally block ensuring thischanging thispending set false', 'date': '2018-02-21T12:51:20Z'}"
"16545",16544,"{'data': 'find module jquery following discussion jquery require trycatch statement probably fine node fails bundle would suggest add dependencies backbone understand want sure', 'date': '2018-02-19T17:44:32Z'}"
"16546",16545,"{'data': 'unexpected behavior please doc fix thismodelset title elfind input val new value thismodelset text elfind textarea val value changed first case getting last call nt change anything second case getting call made changed words provides changes last call clearly documented right documentation russian language delayed moment incorrectly translated look original source created issue nice day', 'date': '2018-02-09T11:18:42Z'}"
"16547",16546,"{'data': 'trigger sticky events app small component filtering search results search triggered triggers event component listening sometimes listening component yet instantiated event occurs like post sticky events posted stay somewhere could read using simple getter pattern looking similar add new method triggersticky would deliver event like trigger one would need consume calling getstickyevent similar call would let developers worry instantiation order components caller could ensure event lost even would listeners time event gets posted sounds fine create object guaranteed instantiated search component store events hears listening component created later look stored events starting problem exactly already thinking could part backbonejs backbone would take care storing sticky events offer api triggering clearing backbone extendable wanted add standard functionality perhaps plugin could suffice', 'date': '2018-01-29T12:58:52Z'}"
"16548",16547,"{'data': 'disable backbone validation save method hello run validation method manually data encrypted encrypted data revalidating backbone method js throw error want know feature disableenable validating method option', 'date': '2017-12-23T07:33:43Z'}"
"16549",16548,"{'data': 'base backbone class chance model collection view derived one base backbone class next release help cases determine function known backbone constructor afraid nt chance', 'date': '2017-12-15T23:30:53Z'}"
"16550",16549,"{'data': 'specifying cid model creation hi currently working project using backbone run issue need synchronize models real time across multiple users using backend backbone used utility create models collections problem moment model gets created one users machine particular cid use identify later collections etc unfortunately model json representation sent network another user instantiated model instance machine new cid generated backbone causes two users enviroments desyncronized way tell backbone use particular cid creating model know manually change model creation breaks app flow terms event listeners able identify model properly thanks advance help ppisecky use idattribute define generated id sent network always please use stackoverflow gitter channel mailing list questions github issues maintaining framework', 'date': '2017-12-15T11:26:05Z'}"
"16551",16550,"{'data': 'wierd backboneview events behaviour please run codepen expected link behave like link ie setting disabled prop true effect clickability disabled nt supported elements reality setting disabled true makes link behave like events bound', 'date': '2017-12-07T21:59:34Z'}"
"16552",16551,"{'data': 'updating model collection collectioncreate merge true updates backend new attributes consider model id attributes collection c ccreate id b merge true supposed update model save resulting model indeed attributes b however restful put following definition put replace content resource new content b patch ok update need put merge attribute list one way solve save merged model returned add iso temporarily created model however complicated combination optionswait workaround use patch option issue ing docs create method accept either attributes hash existing unsaved model object unsaved meaning id id expecting returned server anything error finds see point completeness sake workaround get id add id save attrs', 'date': '2017-12-05T08:30:02Z'}"
"16553",16552,"{'data': 'model id removed byid model id available unparsed model following believe bug assume unparsed models id idattribute toplevel attribute model already collection added collectionset lookup unparsed model collectionget unparsedmodel find add model even already original model removed byid idattribute id also therefore model longer available collectionget modelid problem exists unparsed model contain id idattribute sounds like working correctly adding raw data id allowed add twice really think problem feel free provide test case misinterpret issue idea parsed version op nov schreef jeremy ashkenas notifications githubcom sounds like working correctly adding raw data id allowed add twice really think problem feel free provide test case receiving authored thread reply email directly view github mute thread misinterpret issue idea parsed version jsfiddle codepen demonstrating would help understand issue see van luiz américo notifications githubcom verzonden dinsdag november aan jashkenasbackbone cc rianwouters author onderwerp jashkenasbackbone model id removed byid model id available unparsed model misinterpret issue idea parsed version jsfiddle codepen demonstrating would help understand issue receiving authored thread reply email directly view github mute thread see id returned parse ignored removed seems legit bug passing works expected javascript var model backbonemodelextend parse function r return id rfoobar lorem rlorem var raw foo bar lorem ipsum var new model raw parse true consolelog thanks reason obviously collectionset parse models checking already existing collection op nov schreef luiz américo notifications githubcom see id returned parse ignored removed seems legit bug receiving authored thread reply email directly view github mute thread test works using collection collectionfetch calls collectionset parse true however collectionset parse model checking model already collection add model new cid however also remove old cid also removed id byid hash workaround add following collection workaround parse models modelsforeach gt midattributeid whatever needed get id return models nt nice course need add knowledge model parsing collection believe solution could move model models thispreparemodel model options add beginning loop side effect think simplify var attrs thisismodel model modelattributes model var attrs modelattributes van jeremy ashkenas notifications githubcom verzonden donderdag november aan jashkenasbackbone cc rianwouters author onderwerp jashkenasbackbone model id removed byid model id available unparsed model passing parse true works expected var model backbonemodelextend parse function r return id rfoobar lorem rlorem var raw foo bar lorem ipsum var new model raw parse true consolelog receiving authored thread reply email directly view github mute thread closed want parse data model instantiation use option docs parse called whenever model data returned server fetch save reason expect parse happen every instantiation would bad idea general translating server data workable data try use nonworkable data directly backbone available see miss point save latest jsfiddle update see collectionadd collectionfetch call modelparse checking model exists therefore idattribute direct property raw model check fail therefore model added removed id hash jsfiddle see tests one plain models one modelparse collections equal save tests fiddle latest version backbone nt expect parser model used use collection work clear feels really inconsistent anyhow workaround indeed however would easy solve would improve code', 'date': '2017-11-14T13:12:30Z'}"
"16554",16553,"{'data': 'magento security scan hi range magento security scan website scanner available magentocom account scan reported following site compromised injected javascript malicious code signature found resources jsmirasvitcorebackbonejs using magento module company called mirasvit uses backbone js reported issue said using official version backbone original version checked file site exactly matches know file nt modified either developer someone gaining access server thought make aware also seeking support means thank afraid nt know means get specific error scanner ideally line number snippet code triggering error otherwise much help', 'date': '2017-11-10T15:17:10Z'}"
"16555",16554,"{'data': 'broken link cdnjscom view page view point probably put comment cdnjscom though tutorial repo repo nt maintain control information thanks info made comment page instead', 'date': '2017-11-06T14:05:34Z'}"
"16556",16555,"{'data': 'backbone noconflict typescript working typescript file directly used backbone want change use version backbone export var ownbackbone typeof backbone backbonenoconflict export class usercontainerview extends ownbackbone view public currentview public haschanges collection ownbackbonecollection constructor options super thiscollection optionscollection el optionsel throwing error build cant find name ownbackbone probably going get responses asking questions like stackoverflow asked question regarding stackoverflow thought issue regarding backbone since used simple step use backbone conflict unable use really ca nt figure trying solves shared namespace loading script particular way assuming using module loader typescript like webpack browserify something nt problem solves module loader necessary var backbonenoconflict var backbone windowbackbonebackbonenoconflictwindowbackbonenoconflictnoconflictthisimport backbone backbone ownbackbonenoconflictnoconflictbackbone backbonenoconflict backbonenoconflict noconflict changes backbone version window return value function nt particularly useful function job well see correct behaviour using console window ie javascriptbut typescript showing errormy point support typescript perfectlyif yes could please give example noconflict usage backbone typescript seems work thanks working perfectly latest version typescript version using', 'date': '2017-11-01T07:05:48Z'}"
"16557",16556,"{'data': 'fetching local files developing nwjs app en existing slider built via backbone renders json file familiar backbone trying fetch file stored file system device servers involved reach file node modules nt know pass data fetch function fetch file file protocol security issues launch app security disabled package json nwjs code loadpages function thisactivebookfetch url url file success function collection response options selfrenderbook selfrendernav error function collection response options alert error return renderbook function myappbookview new myappbookview collection thisactivebook instanceurl url nt work error callback trigged see json response text status sure issue backbone chromium args nt working nwjs could following pass json backbone render nt know ok maybe good idea since patching jquery managed get around changing jquery done callback add status code success callback determine successful issuccess status status gt amp amp status lt status nt think really anything backbone good luck', 'date': '2017-10-27T16:17:18Z'}"
"16558",16557,"{'data': 'using backbone mobile go', 'date': '2017-10-13T03:36:54Z'}"
"16559",16558,"{'data': 'collections reset id issue found object contains id field use reset reset collection remove duplicates according id actually dont want remove duplication way thisreset resdatalist model within collection must unique id need nonunique would recommend setting different attribute name unique even undefined', 'date': '2017-10-01T12:59:54Z'}"
"16560",16559,"{'data': 'passing nonexistant selector backboneview question really given fiddle copied also var myview backboneviewextend var view new myview el foobarbat consolelog viewel undefined wonder perhaps fallback creating element selector fails issue recent raised marionette well currently happens nothing view appears work adhere jquery rendering appending may error given end blank view expecting prefilled dom nt really think creating element ideal solution nt really follow imagine intention setting el selector honestly prefer nt take selector easy enough give view el since take selector think better error nt find working intended pass selector needs exist otherwise pass', 'date': '2017-09-27T11:35:22Z'}"
"16561",16560,"{'data': 'documentation model validate misleading backbone docs mentioned section method run validate check model state however inspecting code clear calling method also trigger invalid event set state means internal call explanations also found annotated source following docs section method states validate returns error save continue model attributes modified server failed validations trigger invalid event set validationerror property model value returned method true never mentions invocation would cause invalid event triggered however location docs placed order linked lead confusion least happened colleagues trying explicitly test validity model proposal would reorder parts documentation two methods specific change docs like propose jashkenas created pr including proposal merged thanks', 'date': '2017-09-25T21:54:50Z'}"
"16562",16561,"{'data': 'collection purge internal reference removed model please find tersest reproduction could fathom sequence steps backbone application leads getting state internal confusion working copy found jsfiddle demonstrates keeping internal reference ed longer part however still retrieved former js var myview backboneviewextend foo new myview hmm interesting add model collection byid add two properties modelid modelcid reference model issue line id undefined byid contains modelid foo collection nt special logic change modelid value null check line also change unset set null undefined thismodelset id null ps think never need set model id null undefined anti pattern yes never still bug fix making sure changing value first', 'date': '2017-09-22T09:59:59Z'}"
"16563",16562,"{'data': 'response without content hello think must repeated could nt find solution search google stackoverflow want know face apis return status code example api server returns inserting db successful record exist db want save model put argument empty nt set js hanged searched found backbonejs waiting getting json sample function sending request function require usermodel function user consollog xhr nt need data want response http status code strange write xhr empty maybe fail server userbaseurl also ceck request url networks tab', 'date': '2017-09-15T14:58:06Z'}"
"16564",16563,"{'data': 'like suggest added example think good example using backbone js please explain backbone js add thanks', 'date': '2017-09-12T09:17:36Z'}"
"16565",16564,"{'data': 'mean mistake require throw error like solution maybe nt jquery', 'date': '2017-08-30T03:33:15Z'}"
"16566",16565,"{'data': 'collection parse string like suggest collection parse defined function string latter solves probably common use case apps boilerplate function every collection wish could hmm maybe change function prototype something like cheaper detecting string whatever everyone parse gt cheaper detecting string whatever everyone parse true could said properties support function string used convenience would nice parse well knowledge take function underscore related functions take string definitely useful interact known data structure manner handled cases generating predicate primarily string function allows dynamically set opposite primarily method taking multiple arguments see might similar pattern many usecases nt matter simply adding code seems certainly measure guessing part able override string increase complexity lower performance suitable alternative addressed fairly simplistic case parse nt think convenience justifies cost think got idattribute confused function idk bad anyway really admire way backbone avoided temptation become everything framework proposal stays true would hope see community thinks dismissing based unproven perf concerns able override string would add complexity consumers aligns nicely existing methods seems logical assuming use case common even given docs look nice vs whether adds code complexity andor lowers performance remains seen proposed code change doubts nt much use methods called much frequently collection parse designphilosophical decision rather implementation imo nt think going make change clearer function', 'date': '2017-08-29T22:17:15Z'}"
"16567",16566,"{'data': 'nt propagate internal unset option user code let new backbonemodel mon change model options gt consolelog options munset prints opinion unset option implementation detail passed handler would possible clear triggering change event model set method maybe could fix code overriding set method clearing think actually bug thanks marco would bug think useful know whether change event fired attribute unset value changed nothing think query changedattributes moreover knowing name method caused event unset case would exception backbone provide event options backbone stashes information change etc options passed along think fine information nt need affect handler', 'date': '2017-08-24T16:49:13Z'}"
"16568",16567,"{'data': 'hope generate api pages githubio easy browser api online official website ca nt access company thanks download use locally also backbone docs hosted github pages easy learn try use', 'date': '2017-08-10T01:14:55Z'}"
"16569",16568,"{'data': 'modelomit attr returns pojo think working solution entirely sure example proxied underscore method understand default behavior seems like context backbone model though somehow return model omitted fields default overriding method chain possibly supering calling another util method intended effect instantiating new model sure ideal solution would whether entity context accounted default intended return plain object copy attributes desired keys omitted want mutate model removing key firing related events looking', 'date': '2017-08-08T20:21:16Z'}"
"16570",16569,"{'data': 'jst defined use backbonejs templates without rails frameworks backend langs create indexhtml', 'date': '2017-08-01T08:16:34Z'}"
"16571",16570,"{'data': 'docs error event could improved hi guys according docs error event would callback function following signature instead signature looks like think sync event also jquery version', 'date': '2017-07-13T13:58:06Z'}"
"16572",16571,"{'data': 'lodash support since backbone supports lodash figure ask lodash supported points functions getting removed favor native approaches preemptive since roadmap gradually updates changes nt difficult make code base want submit pull request see required changes would look like changing would support deal breaker browser support nt mentioned backbone page believe unofficially dropped yes sounds fine deal breaker would say keep support browsers gt global market share currently cool change essentially primary goal backboneesnext remove dependence underscore possible previously commented issue good article peruse regarding native options vs underscore lodash assume mainline bb effort target native functions es effort backboneesnext targeting stage switching native functions suggestion ship bb already enough changes warrant release target include potential switch native functions perhaps changes glad help pr regard switch native options proof concept already removed underscore events functionality backboneesnextevents mainly switching though might changes ca nt recall offhand waiting least drop update tracks mainline bb continue work backboneesnext diverge bit updates found need changes pr make different pr ci start working rafde indeed good catch pretty straightforward mentioned changes lodash roadmap apply bb maintainers ship hi news would love bb lodash help required please announce thanks', 'date': '2017-06-21T15:30:47Z'}"
"16573",16572,"{'data': 'parameter builtin events means hi last parameter builtin events means value passed via method mean method like passed parameter options parameter passed las parameter event handler think specified well thanks far understand options passed function triggers event add model collection like triggered event collection parameter said think issue tracker issues probably better likely get replies post question stackoverflow ok thanks', 'date': '2017-06-06T13:19:43Z'}"
"16574",16573,"{'data': 'fast clicking two links freeze view render template app links menu profile invoice link render view template click fast links one moment link wo nt react clicking freeze render function refreshhard page fix problem good solution ui problem inside backbone structure bug app trofimenkoai might ask maybe try make jsfiddle least code sample', 'date': '2017-06-01T08:37:22Z'}"
"16575",16574,"{'data': 'canvas backbone wish integrate canvas tag backbonejs stuck position defining view would appreciate one direct associate view canvas familiar canvas creating native html element existing canvas element javascript var canvasview backboneviewextend tagname canvas render function modify canvas element element already exists page javascript var canvasview backboneviewextend el mycanvas selector render function modify canvas element', 'date': '2017-05-27T00:05:43Z'}"
"16576",16575,"{'data': 'update version npm npm old version backbone would cool update npm latest release master yet released', 'date': '2017-05-16T12:16:29Z'}"
"16577",16576,"{'data': 'let com variant domain expire hey sure consensus answer going ask anyway originally backbone registered correct backbonejsorg domain name point good samaritan registered backbonejscom prevent anyone squatting eventually transferred point sure really want keep variants open source projects sitting redirects sure bucks year still principle thing terrible idea would allow backbonejscom expire easy way see kind traffic com domains getting given permanent redirect hardly anything google searching links appears confirm think vast majority potential harm someone grab names something nasty along much smaller impact folks type browser bars think popularity framework almost guaranteed someone least going squat fill ads sure necessarily problem though might also happen someone getting domain copypaste backbonejsorg html inject malicious stuff downloads probably going pain people fall kind stuff also maintainers probably need keep explaining users backbonejscom fact actual backbone website dotorg seems interesting framework take account mariadb dotcom amp dotenv instance meant keep many purposes community international one look brazilian many people would like contribute establish branding improve network like gain hakuno backbone dot com like one directory dotcom bb chapter see example like put curriculum vitae special involvement et cetera mr jashkenas many ones love backbonejs opportunity make community stronger use power create one team manage free ps examples even capable generating jobs around world stuckouttongue nt think need com domain fyi paying market rate com registrations domain already expired make offer minimum issue closed link new owner oh well interesting see happen domain', 'date': '2017-04-13T17:38:13Z'}"
"16578",16577,"{'data': 'unexpected page router navigate mozilla german japanese etc symbols like url gethash method returns incorrect result wrong encoding symbols firefox browser see windowlocationhref method triggered navigate method triggered different urls function values example mozilla result wich returned function value example chrome result wich returned function value find solution using gethash method would safely way see previous tickets believe bug certain versions firefox made impossible work around backbone specific change like propose hello encountered issue developing company investigated thoroughly also seen previous tickets conclusion issue believe root problem located lines code within function point decoding fragment matching setting hash encoded match parity set encoded well however currently set decoded instead always trigger url special characters solution simply decode fragment solution chosen decoding fragment matching done using encoded format fragment matching done decoded format would compatible firefox let know guys think sounds good make pr', 'date': '2017-04-05T09:49:16Z'}"
"16579",16578,"{'data': 'error build apk duplicate entry comgoogleandroidgmsgcminetworktaskcallback stubclass hi trying build apk fetching problem android studio gradle file apply plugin comandroidapplication android compilesdkversion buildtoolsversion defaultconfig applicationid comexamplemouadfixmyphone minsdkversion targetsdkversion versioncode versionname testinstrumentationrunner androidsupporttestrunnerandroidjunitrunner enabling multidex support multidexenabled true dexoptions javamaxheapsize buildtypes release minifyenabled false proguardfiles getdefaultproguardfile proguardandroidtxt proguardrulespro uselibrary orgapache android packagingoptions exclude metainfdependenciestxt exclude metainflicensetxt exclude metainfnoticetxt exclude metainfnotice exclude metainflicense exclude metainfdependencies exclude metainfnoticetxt exclude metainflicensetxt exclude metainfdependenciestxt exclude dependencies compile filetree include jar dir libs androidtestcompile comandroidsupporttestespresso exclude group comandroidsupport module supportannotations compile comandroidsupport compile comandroidsupport compile comandroidsupport compile comandroidsupport compile commiguelcatalan compile comgooglefirebase compile comgooglefirebase compile comfirebase compile comfirebase compile comfirebase testcompile junit apply plugin comgooglegmsgoogleservices sorry question unrelated backbone inappropriate', 'date': '2017-03-25T13:00:16Z'}"
"16580",16579,"{'data': 'invalid pointer error running script batch os linux redhat software version open r error error running job batch mode using command r cmd batch testr one teradaya pull r script running fine rstudio giving error try run command like linux redhat missing configuration anything else glibc detected free invalid pointer thanks', 'date': '2017-03-20T18:12:45Z'}"
"16581",16580,"{'data': 'collection event documented im correct backbone collection also trigger change events one models changed documented details event see bind change events notified model collection modified listen add remove events fetch collection server use full suite underscorejs methods event triggered model collection also triggered collection directly convenience allows listen changes specific attributes model collection example documentson change selected answer question oh awesome wasnt directly clear since event related listed directly paragraph events', 'date': '2017-03-16T13:29:44Z'}"
"16582",16581,"{'data': 'modelfetch pass optionsheaders yes backbonejs jqeury kinda sure backbonespecific corsrelated simple example backbonemodel call want verify example error custom options passed think due codepen server iframe limitation project also similar issue lot places would like pass function backbone nt pass correctly designed bug sure yet current needs custom need headers model need header searched issues prs lot history missed could nt find proper answer question official documentation nt mention using function though options input parameter exists backbone code could someone clarify point upd spotted simple examples tried modelfetch passing options get request goes ok mean code like cc jashkenas braddunbar looks like found root cause issue project custom code cashed version old code wrong bad goog bad good rap js essentials', 'date': '2017-02-23T18:20:56Z'}"
"16583",16582,"{'data': 'dialogview set focus issue class extends dialog view class viewsaddentitydlg extends viewsdialogview initialize options gt onrender gt called dialog pop opened ui able press tab key tab though background well nt backbone thing going hard know issue dealing think also whoever wrote', 'date': '2017-02-22T19:27:47Z'}"
"16584",16583,"{'data': 'fullscreen video working bootstrap tour step created simple html page bootstrap tour second step used video tag video tag working minimised screen expand video fullscreen fullscreen automatically getting exited first hopscotch tour first hopscotch tour hi swap welcome hopscotch different services provided abc', 'date': '2017-02-02T09:31:10Z'}"
"16585",16584,"{'data': 'events trigger often events view hi events block using custom events fire often events defined view example adding jquery plugin tappyjs provides xdevice save click amp tap behavior bound element anchor tap callback using backbone event bindings like events tap elementone callbackone tap elementtwo callbacktwo tap elementthree callbackthree click bound elements would trigger callback times events setup sounds like problem tappy behind scenes use delegate threearg version binds delegator view element might start', 'date': '2017-01-20T12:34:01Z'}"
"16586",16585,"{'data': 'stoplistening null removes registered callbacks currently removes registered callbacks however think noop seems like would unintentional pass since simply call instead test logic expect current behavior causes fail passing situation arises unintentionally passing instance could expect cause stop listening however set dynamically listeners removed line executed intention line code behaving intended general javascript apis making distinction antipattern russplaysguitar isnt option thanks reviewing clarifying intended behavior elgubenis yes pattern need remember use thanks', 'date': '2017-01-17T21:25:23Z'}"
"16587",16586,"{'data': 'routes without hash working page refresh using backbonehistorystart pushstate true get rid url top created global event clicking href force router navigate routes issue refreshing page goes saying get use history anymore going back forth want know known solution fixed somehow backbone developer problem backbone server configuration pointing index file solution indexphp indexhtml apache server using nodejs solution depends framework use ect using nodejs indeed start local server grunt dropped indexhtml url ok using routes least point right direction configure local server work hashless routes jan mateuszwrobel notifications githubcom wrote problem backbone server configuration pointing index file solution indexphp indexhtml apache server using nodejs solution depends framework use ect receiving authored thread reply email directly view github mute thread google pushstate support nodejs', 'date': '2017-01-16T09:45:06Z'}"
"16588",16587,"{'data': 'model removed collection even delete command failed issue http delete request request fails model still removed collection pass wait true like wait server respond removing model collection hope helps well look reading documentation help sorry opening ticket creating needless noise', 'date': '2017-01-13T17:15:27Z'}"
"16589",16588,"{'data': 'protractor select heavily nested dropdown element get protractor click links like user accounts within dropdown menu inappropriate question nothing backbone oops sorry nt noticed', 'date': '2017-01-09T11:34:36Z'}"
"16590",16589,"{'data': 'cuckoo sandbox installing issue hi face issue installing cuckoo could u plz one tell suggestion issue already download sign communitypy wafb start cuckoopy still show error also try cuckoopy debug test show error msg plz help use tool python vmware winxp', 'date': '2017-01-07T14:34:45Z'}"
"16591",16590,"{'data': 'select drop menu administrative tools user accounts suppliers resources tried element bymodel element bycss lidropdown gt adropdowntoggle click element bylinttext user accounts click anyone help', 'date': '2017-01-04T14:10:39Z'}"
"16592",16591,"{'data': 'saving changed attributes model multiply think would good method without attrs first parameter save changed attributes example model expect send server yes call ca nt get attrs simple way ca nt use modeltojson unneeded fields modelchangedattributes last set obtain attrs think discussed multiple issues see probably returns last changed attributes via call object regardless last diff attributes hash passed parameter bug model saved managed left backbone provides tools accomplish easily question stack overflow one best place get answer yup yup thanks emileber', 'date': '2017-01-03T10:17:06Z'}"
"16593",16592,"{'data': 'docs update event confusing documentation current docs update event state update collection options single event triggered number models added removed collection interpreted events fired add remove ie merge however event also triggered merge sure docs incorrect implementation expected docs probably safer fix yeah remember bit confused first tried using update event doc clarification would appreciated', 'date': '2016-12-07T13:43:35Z'}"
"16594",16593,"{'data': 'idea collection modelid functionality valid running quite old version backbone production served well thank guys library requires newer version backbone small issue new version fix issue quite easily searched reason begun think functionality collection valid idea related commit found issue one use function backbonecollection property collection set models inside collection overridden eg following code logs although would expect log model object code works version define property collection works expect think collection need know models contains think functionality breaks quite fundamental behavior get id solve edge case issue functionality valid think api documentation mention collection must defined think thank work made world better broke backwards compatablity see', 'date': '2016-12-05T14:20:26Z'}"
"16595",16594,"{'data': 'call modelparse every page load first overrode modelparse sanitise escape html server displaying browser backbone call modelparse first time page loads looked code nothing else overriding parse method nothing caching data happening code javascript backbonemodelprototypeparse function resp options return escapestringsrecursively resp function escapestringsrecursively typeof undefined null return instanceof array var lt olength escapestringsrecursively else typeof object var ohasownproperty escapestringsrecursively else typeof string escape return see gif first load page parse method catches strings escapes screen nice html navigate another page return method never fires page broken script tags run consoleerrors logged question case someone help gt backbone call modelparse first time page loads nt calls parse time called something else funny going app', 'date': '2016-11-28T13:32:20Z'}"
"16596",16595,"{'data': 'seeking model key collection tried add objects like collection multiple times got many objects collection created models similar discovered happens bit inaccurate method seeks without checking model instance think check added noticed problem', 'date': '2016-11-24T10:33:41Z'}"
"16597",16596,"{'data': 'collection byid lookup used inconsistently typical behavior store model determined model implementation andor backbone convenience places fine except issue using access effectively bypassing access higher priority considering documented methodology precedent anyone inadvertently implements create collisions may interesting time determining suddenly missing merged models within collections tested willing concede scenario peculiar change small accurate documentation think pr tested type trying use key uncertain proceed referenced master pr nt changed anything yet even check would inappropriate use model advance', 'date': '2016-11-22T07:03:13Z'}"
"16598",16597,"{'data': 'issue question registratorconsul makes registrator skip mesosagent consul entry get following output docker ps consul marathon mesosmaster also nt entry weaveworksscope task running nt app listening port sorry wrong place', 'date': '2016-11-15T18:16:37Z'}"
"16599",16598,"{'data': 'broken links main page jasmine jquery templates', 'date': '2016-11-15T14:57:49Z'}"
"16600",16599,"{'data': 'modelfetch new thought would reraise needs way use modelfetch fetch server fact merges client already actually nt really true big problem fetch expect model returned model fetched anyone work around like hear thats pretty useful keep local state moving throughout app least apps thats useful already seen examples using way understand idea move models collections models forwards backwards views routers backboneradio window global directly instantiating using instance something could implement fetch method clears model fetching modelclear options keep mind idattribute default id removed also would like keep link preserve clear set right clear thats normally necessary fetch rest api endpoint single modelresource shawnemullen closed right cc jashkenas', 'date': '2016-11-15T10:51:52Z'}"
"16601",16600,"{'data': 'collection docs missing note parse option model docs note passed option attributes first converted parse set model appears true collections well documented created pr correct', 'date': '2016-11-09T22:58:58Z'}"
"16602",16601,"{'data': 'promise argument collection add remove reset set methods would say add ability pass collection methods plain objects arrays models also promise add code like method useful decided change methods sync async like javascript user modelextend getproducts function return productswhere userid thisget id become return get products userid thisget id code sync async bagadd usergetproducts usergetproducts products gt bagadd products think going add promises backbone holistically like fits starts', 'date': '2016-11-09T06:05:48Z'}"
"16603",16602,"{'data': 'webpack babel typeerror undefined appjs import marionette backbonemarionette export default marionetteapplicationextend region app initialize var applayoutview marionettelayoutviewextend template layoutviewtemplate el appmodals regions menu menu content content name yourapp description description author name version repository type git url scripts start webpackdevserver prebuild rm rf public build npm run amp amp webpack p lint eslint app test echo test dependencies backbone backbonemarionette bootstrap fileloader handlebars handlebarsloader jquery underscore urlloader devdependencies babelcore babelloader copywebpackplugin cssloader eslint extracttextwebpackplugin styleloader stylus underscoretemplateloader webpack webpackdevserver webpackmerge webpackconfigjs module loaders test js exclude nodemodules loader babel query presets tried possible settings babel conslole typeerror undefined initialize marionetteobject constructor extendchild appjs function module exports webpackrequire use view works appjs console onstart looks like issue also nt layoutview itemview anymore merged version using layout view sorry watched incorrect documentation arvara little offtopic also shave chars code instead keep style moving onwards code', 'date': '2016-11-08T17:22:36Z'}"
"16604",16603,"{'data': 'collection update issue hello come across issue fetching collection appears certain scenario described must say experienced js think managed track location issue scenario fetch objects server everything ok fetch objects server everything ok fetch objects server everything ok fetch objects server discovered bug point time list contains objects cid id cid id aa cid id ad new object added cid id byid object cache one entry cid added one id already exists collection attempts remove previous objects list remove objects keys aa ad last one sure newly added object id method removemodels calling models object cid result get function object cid newly added object object remains list newly added object removed visible sideeffect bug stumbled ghost entries remain fetch empty collection server ghost objects remain collection printscreen debug session think issue lies nt really know solve guess better mechanism get method would fix provide jsfiddlecodepenchoice code sharer issue difficult know exact issue without display exact scenario caused issue using backbone marionette enhance application creating everything still local machine provide data source setting page search input enter something search input fetches server users match search term displays table everything set working users fetched correctly beginning searching specific users created jsfilldle js code marionette returns view ok realized issue expect fetches clear collection looking collectionfetch reset true reset collection display got back next time try ask question channel others help issues mostly bugs support thank sorry issue really looked thinking bug backbone merging new result', 'date': '2016-10-28T21:29:58Z'}"
"16605",16604,"{'data': 'replacing routes using backbonejs eg routerjs page brower url wwwdomaincom first want get url wwwdomaincomfirst brower address bar replacing routes thanks want start pushstate true future please use stackoverflow questions like', 'date': '2016-10-24T11:08:22Z'}"
"16606",16605,"{'data': 'update event collection reset docs would expect event fired whenever collection reset addition specific event since event independent models addedremoved collection nope special function special event allows optimize large changes contents collection also fired code would careful make sure doublework', 'date': '2016-10-12T10:39:49Z'}"
"16607",16606,"{'data': 'someone adds arrayprototypeunset method things break spent time tracking bug site thirdparty javascript nt working properly specifically creating backbone model object passing attributes inherit attributes never ended object investigation found site owner extending function function takes options contain property code happen passing array objects parameter whether supported backbone unsure think wrapped something consume options downstream obviously immediate answer stop extending builtins since us thirdpartyjavascripters rarely say environment code runs figured worth open issue anyways jsbin see problem hopefully helps somebody typically never good idea modify objects nt create javascript said nt always control app running someone else environment lord knows employ pretty crazy defensive code counter horrific hacks javascript developers put site thanks reporting closing', 'date': '2016-10-06T19:45:34Z'}"
"16608",16607,"{'data': 'backbone navigate url encode different language diacritics search form redirects user exact value entered navigate function provided backbone fine use strings english masa de calcat add diacritics input masă de călcat get route function fired twice problem firefox safari later mac ios tried using use success html one alert two alerts js var r backbonerouterextend routes results query results results function query alert route triggered decodeuricomponent query var myr new r backbonehistorystart see fiddle thoughts ubuntu chrome whenever click either english string one diacritics still get single alerts maybe problem backbone local stack hello reports also seeing issue investigation could replicate using jsfiddle chromewindows safari mac see issue root problem seems webkit replicates issue location hash url encoded chrome replicate url hash encoded attach screenshots showing behaviour causes route fire twice firstly route function fires due jsfiddle code calling routenavigate calls loadurl expected behaviour happens platforms wo nt mention following handling event hash change event fires causes checkurl method fire note value locationhref return value thisgetfragment encoded value thisfragment encoded check line fails causes line thisnavigate causes route function fire second time chrome values different note time windowlocationhref thisgetfragment encoded check line succeeds line skipped second route happen actually confusing originally thought encoded version href safari nt url encoded version original url value decodes printable value information appears straight bug safari set locationhash containing diacriticals seems get corrupted latest webkit nightly corruption nt occur behaviour still going different chrome note url remains encoded unlike chrome decodes getting locationhref nt know one correct', 'date': '2016-10-06T08:17:06Z'}"
"16609",16608,"{'data': 'static site output question possible enable static output backbone app common example would github pages open dev console browser copypaste current state dom course comes manual work since download css amp image files nt think needs kind special support backbone tommy notifications githubcom possible enable static output backbone app common example would github pages receiving subscribed thread reply email directly view github mute thread bence erősme github thanks answers issue couple solutions tried years usually rely running dom implementation serverside node like jsdom phantomjs outputting html string try googling serverside rendering backbone suggestions use case simple like erosb mentioned copy manipulate needs awesome thanks', 'date': '2016-10-06T01:37:05Z'}"
"16610",16609,"{'data': 'jquery present dependency packagejson bowerjson installing backbone dependency trough npm nt raise warning fact requires peer dependency directly installing would nice jquery peerdependency dependency packagejson bowerjson files jquery optional dependency backbone nt need build backbone app app uses jquery need depend explicitly expose backbone script tag build tool backbone automatically pick thanks feedback', 'date': '2016-10-03T16:28:46Z'}"
"16611",16610,"{'data': 'modularize backbone modularize backbone pick model collection leaving views history etc example want use backbonejs base projects reactnative would make life much easier leave views history hence subsequent dependencies jquery nope use backbonejs use model use collection nt use view done', 'date': '2016-09-29T18:44:00Z'}"
"16612",16611,"{'data': 'country state city modelling building registration form website using need populate country state city field fields interlinked ie depending country state field set depending state city set trying figure best approach model using good luck', 'date': '2016-09-29T12:45:20Z'}"
"16613",16612,"{'data': 'using extend function child name appropriate definition var extend function protoprops staticprops return child function name set child thus new object created child function inspect chrome name constructor displayed child would better display name constructor using parent constructor name point view gives developers intuitive overview object essentially previous case backbonecollection displayed todos using todo list example willing provide solution would like know whether really valuable developers', 'date': '2016-09-27T08:37:59Z'}"
"16614",16613,"{'data': 'disable futuredate datepicker date field date field need select future date means user select current date past date', 'date': '2016-09-19T13:10:34Z'}"
"16615",16614,"{'data': 'var changing true could naive issue quite good javascript backbone changed play never throw exception variable changing wo nt true unless assign true one assignment set function line thischanging always false unless assign true see assigned true line assigned false one way skip asssignment return unforturnetly changing always set false beginning looks like evil loop went whole file found another place use variable changing function changedattributes read operation wo nt impact value thanks meant nested change operations future please use mailing list stackoverflow questions github issues maintaining framework', 'date': '2016-09-18T11:01:45Z'}"
"16616",16615,"{'data': 'could start selenium session failed start new browser session error launching browser javalangruntimeexception could start selenium session failed start new browser session error launching browser comthoughtworksseleniumdefaultseleniumstart comjavaabstopsetup native method sunreflectnativemethodaccessorimplinvoke unknown source sunreflectdelegatingmethodaccessorimplinvoke unknown source javalangreflectmethodinvoke unknown source orgjunitrunnersmodelframeworkmethod orgjunitinternalrunnersmodelreflectivecallablerun orgjunitrunnersmodelframeworkmethodinvokeexplosively orgjunitinternalrunnersstatementsrunbeforesevaluate orgjunitinternalrunnersstatementsrunaftersevaluate orgjunitrunnersparentrunner orgjunitrunnersparentrunner orgjunitrunnersparentrunnerrunchildren orgjunitrunnersparentrunneraccess orgjunitrunnersparentrunner orgjunitrunnersparentrunnerrun orgeclipsejdtinternaljunitrunnertestexecutionrun orgeclipsejdtinternaljunitrunnerremotetestrunnerruntests orgeclipsejdtinternaljunitrunnerremotetestrunnerruntests orgeclipsejdtinternaljunitrunnerremotetestrunnerrun orgeclipsejdtinternaljunitrunnerremotetestrunnermain caused comthoughtworksseleniumseleniumexception failed start new browser session error launching browser comthoughtworksseleniumhttpcommandprocessorthrowassertionfailureexceptionorerror comthoughtworksseleniumhttpcommandprocessordocommand comthoughtworksseleniumhttpcommandprocessorgetstring comthoughtworksseleniumhttpcommandprocessorstart comthoughtworksseleniumdefaultseleniumstart used ff gives error', 'date': '2016-09-13T10:55:41Z'}"
"16617",16616,"{'data': 'model id indexed byid collectionmodel constructor attribute either model class constructor function per collection obtains identifier model using function reference invalid effect defining function attribute longer works expected model identifiers retrieved stored including pleochism updates issue hm model attribute factory function used fine assuming polymorphic models use something must override tests examples thanks clarification hindsight see docs allude indeed models utilise perhaps doc entry collectionmodel include note pointing one modelid entry highlight possible situation note modelid docs would maintainers agree reference collectionmodel addresses using factory method would helpful sure open pull', 'date': '2016-09-09T12:40:22Z'}"
"16618",16617,"{'data': 'backbone attached global node environment could nt get work otherwise tried globalbackbone requiere backbone yet tue sep vesa nikkilä notifications githubcom wrote factory root exports var rootbackbone factory root exports could nt get work otherwise receiving subscribed thread reply email directly view github mute thread meant require edit mobile sorry yes backbonejs nt return anything function gets executed module require moduleexports anything case node guess quick fix would assign backbone global extensions assume backbone global variable backbone works fine commonjs node require path specifically commonjs please try stackoverflow help debugging', 'date': '2016-09-06T12:10:04Z'}"
"16619",16618,"{'data': 'splunk http search code stand next http thank backbone clientside javascript framework nt generate http responses therefore responsible content http response way better look wmws service provides error code johnnykhoueiry notifications githubcom code stand next http thank image untitled receiving subscribed thread reply email directly view github mute thread bence erősme github erosb mean backbone mean thank replying mean nothing backbone framework therefore github repository flatout wrong place look help problem johnnykhoueiry notifications githubcom erosb mean backbone mean thank replying receiving mentioned reply email directly view github mute thread bence erősme github erosb suggestion find help said error code sent service listening start looking anyway issue closed johnnykhoueiry notifications githubcom erosb suggestion find help receiving mentioned reply email directly view github mute thread bence erősme github', 'date': '2016-08-29T15:01:18Z'}"
"16620",16619,"{'data': 'use short backbone name using short bb name like used marionettejs thanks', 'date': '2016-08-29T10:38:49Z'}"
"16621",16620,"{'data': 'stop listening resuming listening event x using different objects tricky questions stuck app let get straight example js objectalistento submitbuttonfield click field function e code still gets executed nt want see two different objects app different controllersnamespaces reference button field listening click event object b stop listening want stop object listening click event well object still listens trick tell everyone stop listen also need capability resume listening objects also would cool something like stop propagating event objects unfortunately way selectively ignore events backbone try passing flag one arguments tell event listener selectively ignore event use proxy object bookkeeping listeners keep mind also event listeners called order bound objecta listener always called objectb listener ugh makes difficult plugin example run code submission within backbone framework right backbone events nt bubble way dom events less need stop propagation even binding order matters mind submission plugin think setting control flow submitting much easier manage reason opaquely trying manage events called right know think someone else helped came good solution see thanks anway assistance far', 'date': '2016-08-22T10:51:09Z'}"
"16622",16621,"{'data': 'adding responsive image react native installation responsive image react native npm install reactnativeresponsiveimage save try run file working wrong', 'date': '2016-08-22T08:10:39Z'}"
"16623",16622,"{'data': 'web application slowness duting access juniper web application slowness duting access juniper application mvcnet angular database level using sql server also using entity framework orm tool using database first approach two dashbaord showing lots data widgets count grid binding pie bar charts well changes like bundling minification gzip compression caching etc improve perfomance application dashboard pages facing issues dashboard page landing page well run application local well client intranet envriroment performance quite well try open application internet thorugh juniper vpn takes atleast minutes load dashboard intranet client server local server takes seconds also find juniper js resources comes cache local client intranet comes cache nt seem anything backbone shimabalam notifications githubcom web application slowness duting access juniper application mvcnet angular database level using sql server also using entity framework orm tool using database first approach two dashbaord showing lots data widgets count grid binding pie bar charts well changes like bundling minification gzip compression caching etc improve perfomance application dashboard pages facing issues dashboard page landing page well run application local well client intranet envriroment performance quite well try open application internet thorugh juniper vpn takes atleast minutes load dashboard intranet client server local server takes seconds also find juniper js resources comes cache local client intranet comes cache receiving subscribed thread reply email directly view github mute thread bence erősme github', 'date': '2016-08-18T09:51:16Z'}"
"16624",16623,"{'data': 'implement method sort collection according codebase sort collection using arrayprototypesort guaranteed use stable sort algorithm leads problems chrome sorting table column empty values codebase sort function options var comparator thiscomparator comparator throw new error sort set without comparator options options example test case dupe short rewriting browser sort algorithm really nt nt see much backbone handle really ca nt rely sort column ca nt secondorder sort might want drop sort implementation', 'date': '2016-08-16T07:31:59Z'}"
"16625",16624,"{'data': 'automatic commit message style validation look commit history projects like agnuarjs jquery notice use consistent commit message style would perhaps like one way support single commit message style git perform check via hook like process shown done via npm module npm github checks commit message tells poor one long lines bad first line commitplease used jquery core jquery ui jquery mobile globalize qunit others simple interested let know think disclaimer help develop commitplease seems like lot overhead little gain good chunk pull requests come developers new git github nt think want add yet another barrier entry', 'date': '2016-08-15T13:04:39Z'}"
"16626",16625,"{'data': 'longer bind change events notified model collection modified codepen demonstrating old behavior codepen demonstrating new behavior previous versions backbone alert would pop seen codepen however updating latest backbone causes alert pop based documentation appears bug codepen new behavior references nonexistent backbone source file backbone url updated underscore works updated codepen works thanks help', 'date': '2016-08-08T17:55:27Z'}"
"16627",16626,"{'data': 'keyword unintuitively limited backbone example following simply fails even following contains method details believe dynamic like would much better would appreciated anyone interested post replies thoughts may well case control', 'date': '2016-08-02T19:40:27Z'}"
"16628",16627,"{'data': 'collectionfetch abort collectionfetch call ajax return xhr object method abort ajax return promise object abort method object cancel request sure got impressing shows part list functions available jquery returns modified version promise nt issue closed agreed jquery issue apparently removed jqxhrdeferred version jquery returns function think still jfbrennan still sorry confusion jquery blog post makes sound like nonstandard promise methods removed jqxhr jquery stackoverflows one votes says removed thought consensus always equals truth', 'date': '2016-07-28T07:31:52Z'}"
"16629",16628,"{'data': 'turned space using routernavigate issue could nt find anything issues went ahead made test repo hoping could provide insight turned spaces thanks test case js var backbone require backbone var router new backbonerouter backbonehistorystart routernavigate space expected result url looks something like actual result url looks like problem breaks urls copy pasting etc general inconsistent behavior none urlencoded chars get decoded see sure using jquery hood might looks like plan releasing version containing fix maybe thanks', 'date': '2016-07-14T23:32:00Z'}"
"16630",16629,"{'data': 'feature suggestion ability transform model attributes saving would nice analogous method call used transforms model attributes form expected server case api response represents data differently would like represented model implement method translate api response reasonable model attributes however want persist data back server nt currently see reasonable way translate back schema server expects options currently see implement method would work already used marionette passing model attributes template object want send server object would like template involved solution would create method feels like overkill something seems like common need way achieving goal fact need transform attributes order persist unusual indicator antipattern exact use case remember correctly marionette stopped using rendering ping samccone looks like still using initial step goal drop direct use tojson since breaking change stopped working marionette project jridgewell correct intent captbaritone new implementation marionette closing sounds like right thing use wait new version marionette come', 'date': '2016-07-14T21:37:17Z'}"
"16631",16630,"{'data': 'object returned changedattributes missing object methods call object returned lacks typical object methods returns type inspector recognizes object parses correctly sure mean code changedattributes plain object object seems prototype might need close issue though checked way function works different exoskeletonjs looking ah yeah exoskeleton object created without prototype feel free open issue problems one maintainers', 'date': '2016-07-06T18:48:04Z'}"
"16632",16631,"{'data': 'amp safari backbone router normal work refresh page browser first request page router work refresh page router routes work ex routes sc simulationcomb function simulationcomb work normal work please use stackoverflow questions github issues maintaining framework', 'date': '2016-06-27T02:02:53Z'}"
"16633",16632,"{'data': 'know event triggered backbone events actually using backbone events reactjs want save something particular backbone event triggered otherwise want save something else please use stackoverflow mailing list gitter channel questions github issues maintaining framework', 'date': '2016-06-20T05:26:37Z'}"
"16634",16633,"{'data': 'upgrade qunit qunit looks like handful tweak get working backbone thanks reference', 'date': '2016-06-18T20:12:37Z'}"
"16635",16634,"{'data': 'collection create returns model created follow convention model save returns recently learning backbone marionette thankfully getting hang nice implementation anyways curious collection create returns model created model save returns jqxhr per docs something similar hoping convention would understand collection create docs state equivalent instantiating model hash attributes saving model server adding model set successfully created returns new model clientside validation failed model unsaved validation errors model successfully created added collection return model created jqxhr model successfully saved brought attention trying handle asynchronous responses collection model creation issues waiting model created fashion handle jqxhr model save upon success using call instead pass success fail options params collection create method order receieve proper callback sure two ways big deal however hoping understanding difference otherwise would possible return jqxhr model returned another fashion perhaps way use two scenarios would call create collection creating new instance transient model client side collection creating new instance persistent model collection saved server use first scenario frequently prototyping application result url must set error console returns useful model work jqxhr preserve also wish allow user create collection related models process creating parent model may require parent model saved url collection known create may still want called related model invoke validation final sync setting url persist entire collection successfully would ever call save model directly intend sent server jqxhr appropriate also call save model already local reference model saving jqxhr additional information calling create collection returned jqxhr would reference model collection see line dev version source passed regular attribute hash create reference hash passed model maybe best thing would collection create continue function add another function collection save requires initialized model returns jqxhr could also listentoonce collection model sync event callback get jqxhr second parameter see makes sense collection created added help couple workflows together wish however could perhaps consistency two want shortcut want jqxhr guess ca nt cake eat sure said namdets makes lot sense well case could use model new pass model collection modelsave whatever actually return jqxhr well adding model collection could also rewrite create method create new one return promise comes success option instead model faced similar milestone today case used success method options object create problem done', 'date': '2016-06-15T19:38:16Z'}"
"16636",16635,"{'data': 'setting root backbonehistorystart working cordova recently upgraded backbone noticed cordova app stopped working could nt start router tracked remove starts router fine upgrade adding root magically worked even though cordova app indexhtml changed work around familiar cordova specifically diff looks like changed behavior around trailing slashes root feel free look pull request interested looks like might something indexhtml help us track easier find issue thanks reply see changes around trailing slashes previous commits sure affecting issue might tried failed finding initial route returns still working truthfully nt know much cordova web views different normal browsers good guide webviews cordova track app see ios navigate different page cross platform app web version also located server myappcomapp web use start app setup nice deeplinks shared example cordova app link takes ignored current behavior backbone convenient help understand would love figure ca nt upgrade backbone sorry super familiar cordova might better luck stackoverflow cordovaspecific mailing list irc channel could wrong think root actually rather history object uses windowlocation several places determine canonical location probably want make sure app sync something change backbone make easier work cordovoa please let us know otherwise going close always override key methods return answers want particular take look thanks looking adam post stack overflow', 'date': '2016-06-14T03:58:07Z'}"
"16637",16636,"{'data': 'repository modified files immediately cloning looks like someone submitted something confusing repository clone repository clone modified files checkout tags anything repository breaking continuous integration using repository commit causing git modify files clone someone please fix people clone repository correctly suggest one might go getting work system yep tracking thanks reporting', 'date': '2016-06-13T17:21:25Z'}"
"16638",16637,"{'data': 'add destroydeconstructor backboneevents nt make sense objects automatically call arguments unregister handlers destroyed particularly useful objects objects though nt run use case listen mainly using marionette viewstrigger methods could done call refactor give deconstructor seems better solution using instead using managing call backboneview nt destroy clean nt think view destroy backbone concern however whenever backbone call marionette behave describing using marionette already backbone models also call work essentially think cleanup happening fiddle something expect listener get cleaned nt certainly take look feel free ask well backboneview nt destroy clean nt think view destroy backbone concern ah yes apologies playing w marionette bit much seems point implementation use similar look called handler setup w calls nt track handler therefor never cleaned simply calling w arguments clean everything evidenced fact maps handlers calls call clean registrations objects cleanup handlers point nt common destructor backbone modules matter probably puts nail add destructor destroyremovecleanup backboneevent idea imo right thing inheritance friend inheritance philosophy backbone biggest gripe leads us probably also call wo args marionette test probably test called wo args performance could improved case called w arguments instead iterating every listener calls batched perobject calls wout arguments sure typical usecase though terms ratio mean guess see saying nt know purpose removing listeners thing subsequently nt need cleaned reference view ready garbage collection listeners go need context using correct maybe specific example dig back bit discussed marionette controller thing thison subsequently thislistento nt need cleaned reference view ready garbage collection listeners go need context using listento correct see point really gc works though know object references objects alone references graph traversal nt also create references arguments thread samccone said take function ref named function might cause leak remove mean named function event pumping try resolve runtime case nt cause leaks yes case though handler solely referenced object registered nt break matter nt break general guess question simply gc work js okay read gc js guess issue moot long destroying references objects means need set something static call say examples seen nt think seen practiced cases marionette hopefully take care would reason would want use anything actually dynamic content area boiler plate childviews nt heavy dynamicview supporting would handy tracking instance ing unsetting think understanding jmeas jridgewell might able better answer guess onoff issue moot long destroying references objects backboneviews exactly destroying view remove references assume backbone takes stance one nt reuse via eg case propose renaming think point needing call still stands one intent two avoid memory leaks object maintain references thus preventing object trees cleaned even stance nt still make sense call cleanup nonmanaged handlers reference trees nt get blocked cleanup gc object cleaned assume backbone takes stance one nt reuse via eg reinitialize view remove nt think assumption right docs nt mention anything like happens remove nt anything would make particularly difficult reuse view removed using backbone frequently would often dig issues see could find opinions contributors heavy users backbonemarionette cool way see others agree assumptions see different perspectives things certain would nt surprised similar conversation reusing view removed anyway think name pretty good would nt change something like sounds bit heavy method backboneevents object maintain references callbacks backboneevents object nt global merged view think view instance backboneevents although terminology nt quite right means view holding onto callbacks leaving callbacks around wo nt prevent gc happening perhaps biggest difference related choice determines object relationship holds context callback references paulfalgout pointed though gcsafe create selfreferences long args passed nt reference object seems little obvious typed nt think assumption right docs nt mention anything like happens remove nt anything would make particularly difficult reuse view removed anyway think name remove pretty good would nt change something like destroy sounds bit heavy method agree someone take stance preferably devs anyone publish conglomorates code backbone toolkit nt preclude reuse reuse reason calling backboneevents object nt global know sderived closed joke right weekend open monday nt preclude reuse reuse reason calling provide specific example getting called causing problem know sderived ah okay gotcha made backboneevents could prevent gc meant explain would nt selfreferences joke right weekend open monday nt think joke make compelling argument functionality always chance issue reopened thought see two issues first w behavior evident first example constructedinitialized never rendered removedreused would expect multiple handlers setup callback var view backboneviewextend initialize function wo nt get cleaned thisonce render thissetupevents setupevents function thislistento thisoptionsmodelobject change property thisrender heavyweight update thislistento thisoptionsmodelobject change lightweight update render function backboneviewprototyperenderapply arguments el thistrigger render eg marionetteview var obj var el var view new view modelobject obj beginasyncstuff asyncsuccess asyncfailure function asyncsuccess elhtml viewrender el function asyncfailure var otherobj viewinitialize modelobject otherobj elhtml viewrender el eg function beginasyncstuff success failure async success failure eg issue regarding memory leaksgc follows handlers setup derived object callbacks solely referenced object eg object hold references handlers prevent gc hopefully assuming one nt funkiness higher logic removing references object sever last path callbacks assumption made imo backbone takes stance framework toolkit know easy find hammer', 'date': '2016-06-03T15:37:36Z'}"
"16639",16638,"{'data': 'question model parse stumble case understand called call method surprise discover must called manually whereas option enough collection collection automatically parse inside set option true whereas model parse outside set model fetchsaveconstructor call parse method optionsparse true really method weird behaviour good reason would addressed also though particular hidden reason see one bugged pr indeed harmonize set parse behaviour among collection amp model also favour add parse model set', 'date': '2016-05-31T13:48:53Z'}"
"16640",16639,"{'data': 'problem model collection parse methods subject problem model collection parse methods alexander danel collection underlying model parse method defined attempt collectionfetch causes problem retrieved data processed first collectionparse little bit later processed data passed modelparse second parse fails data cooked raw reason parse method model sometimes instantiate model singleton member collection words although model gets instantiated automatically collection parts program also want sometimes manually instantiate automatic bulk instantiations versus manual singleton instantiations workaround suppose define two different model classes otherwise identical except one would parse would elegant intention bulk singleton instantiations one class proposal understanding options instantiation include value parse truefalse therefore suggest option used collection instantiates model temporarily setting parse false mac os working chrome using following backbone version note attempting use insert code feature site switch preview results nt look like code perhaps mac using safari therefore also attempt drop text file message adanelbackbonedisfunctiontxt time problem manifests stacktrace stack trace surrounding code backbonemodel backbonejs var model backbonemodel function attributes options var attrs attributes options options thiscid uniqueid thiscidprefix thisattributes optionscollection thiscollection optionscollection gt optionsparse attrs thisparse attrs options lt attrs defaults attrs result defaults thisset attrs options thischanged thisinitializeapply arguments child backbonejs var extend function protoprops staticprops var parent var child gt child function return parentapply arguments lt preparemodel backbonejs preparemodel function attrs options thisismodel attrs attrscollection attrscollection return attrs options options clone options optionscollection gt var model new thismodel attrs options lt modelvalidationerror return model thistrigger invalid modelvalidationerror options return false set backbonejs new valid model push list else add gt model models thispreparemodel model options lt model toaddpush model thisaddreference model options modelmap modelcid true setpush model optionssuccess backbonejs fetch function options options extend parse true options var success optionssuccess var collection optionssuccess function resp var method optionsreset reset set gt collectionmethod lt success successcall optionscontext collection resp options collectiontrigger sync collection resp options wraperror options return thissync read options could create parse detects cookeduncooked nature data passed imho temporarily flipping values middle operation recipe bugs line firstly let congratulate jeremy ashkenazi team existence backbone quite achievement said let get business issue concerns fact problem occurs parse defined model collection levels conditions current behavior bug ever correct parse message twice current behavior rely upon one two extremes either accident programmer defining parse levels programmer extraordinary awareness writing special detection code order enable parse places understand parse always little different model level versus collection difference single value array values programmer way ever come conclusion suggest write custom code detect data already parsed running problem debugging problem message parsed twice simply expected behavior puzzled say flipping values middle operation recipe bugs line read backbone code replete snippets code look like way imho alexander could check current model instance part collection checking within method pmalouin could check current model instance part collection yes could yes cleverness idea without fault satisfactory solution checking whether instance assigned collection solve problem originally stated solve larger problem original statement class manually instantiate singleton also autoinstantiate collection members always case backbone application collection needs parse different singleton parse collection class model class parse method defined called current workaround create model class use collection derivative model class use singletons modelclasswithoutparse backbonemodelextend modelclassforsingletons modelclasswithoutparseextend parse function mycollectionclass backbonecollectionextend model modelclasswithoutparse first problem nt need second problem workaround found examining solution proposed pmalouin builds upon prior proposal responsibility modelparse method determine whether called take action determining called error suggests determination made checking modelcollection first blush suggestion seems make sense since model instance autoinstantiated collection always modelcollection set manually instantiated singleton doubt segregation effortlessly guaranteed inability guarantee segregation also works workaround technique examining modelcollection assumes static structure tells us dynamic usage maybe strongly typed language could case doubt backbone allows manually instantiate model add collection kills workaround yet pmalouin backbone also allows model already within collection used outside collection suppose take individual model send server update singleton nt server send back something would subject parse appropriate parse would singleton collection read backbone code clear model instance member one collection therefore follow model instance member collection also used different context considered singleton whole discussion seems silly view following two points clear parsing twice nobody intention bug simple solution exists solution breaks nothing simple solution requires follow pattern much backbone code create scoped therefore temporary version options object scoped options used turn downstream parse collectionparse completed big deal alexander could easily extend backbonecollection extend collections actually root view model collection objects classes javascript nt classes use start projects custom setters amp constructors handle parents kinds automagical things makes life much easier would nice backbone everyone needs need solutions like one propose could break people code people using parse implemented today suggest trying root collection find something really works well make branch rewrite code tests broken make pullrequest solution see everyone thinks javascript nt classes taking linguistic shortcut easier say class function name starts capital letter intended constructor members added prototype etc find difficult describe thinking without allowing luxury using word class way luckily makes word class official could break people code yes concede could limited imagination come one case would really really weird first common use cases nt get broken server sends singleton json object wrapper collection array objects case parse function needed either level server sends singleton wrapper one member named data json object server sends collection wrapper one member named data array json objects case need one parse function model extract object different parse function collection extract array objects array data longer wrapped fully cooked nothing raw perfectly ordinary case gets broken use case would get broken proposed fix server sends collection something holds array wrapped objects individual items array ie rows wrapper must removed modelparse function use case seems really weird unlikely anyone come scenario server would want go trouble wrapping row items rows nt get success codes queries mean returning collection server reason embellish individual items wrapper would programmer created system even get idea behavior work double parse behavior documented programmers like discover parse fails debug issue make pullrequest never done nt think look odd make pull requests get oneline change familiar culture thank feedback alexander nt think look odd make pull requests get oneline change say perfect reason make pull request alxdev divide parsing code collectionspecific part modelspecific part nothing like doubleparsing write task create array objects server response breaking response going lower massaging objects future models every single object array supposed parsed later task create object attributes model interface expose use principle support responses rest apis getting collection objects nodes id nodes single object nodes id using option collection model essential feature backbone parsing would break code idea modelparse called collectionfetch everywhere read called', 'date': '2016-05-27T18:01:18Z'}"
"16641",16640,"{'data': 'feature suggestion backbonemodelprototypeupdate fairly common pattern find typing working backbone models involves code like iterating modelset totalcount modelget totalcount modelset modelget updating max modelset maximum max modelget maximum newvalue updating according algorithm let cost modelget cost isfinite cost nt calculated cost yet cost calculatecost model modelset cost applycouponcode cost couponcode nothing wrong examples find writing getmodifyset chunks code lot think experience could pretty easily made nicer picturing method model would make examples look like iterating modelupdate totalcount count gt count updating max modelupdate maximum max gt max max newvalue updating according algorithm modelupdate cost function cost key model isfinite cost nt calculated cost yet cost calculatecost model return applycouponcode cost couponcode update function would likely take options attribute name array attribute names apply transform function defaults identity passed arguments return new value attribute run would options would passed underlying set call would result update opening issue basically gauge interest function like part backbone core receive feedback interest happy open pr explore like idea another approach could allow model set accept signature maybe overcomplicating api much probably better imlement separate method instead modifying set another approach could allow model set accept signature mind idea reminds immutablejs update mind add new signature set like afterthoughts agree erosb separate method better considered suggesting set modification nt workable api currently valid syntax also new method keeps individual method simple clear feel backboney think pretty small change heavy lifting eventing stuff still done set look something like update function attrs transform options attrs flatten attrs transform isfunction transform transform identity var attrstoset reduce attrs function setobj attribute var value thisget attribute setobj attribute transform value attribute bind thisset attrstoset options tested may work thats general idea interesting idea big fan proposed method couple reasons enter new function context nt need gain passed value something easily could accessed outside bit data given within function current value thing changing usually need information make update let take third example example could would clearer elaborate general provide fancy api drop function context work real gain api feels like obfuscating andor overclevering trying proposed updatemorethanonefield array api great example gets nasty hey jashkenas thanks taking time give feedback nt quite understand criticisms bit data given within function current value thing changing usually need information make update proposed change involved passing arguments function currentvalue attribute attribute key model sufficient context updates think could would clearer think simplicity example may hurt trying portray sometimes want encapsulated complex business logic update agree comparable cleaner modified examples slightly logic inlined one line really thinking cases logic updating looks something like javascript export const updatecost currentcost gt get starting cost let newcost isfinite cost cost calculatecost model apply coupons let coupon getcouponused newcost applycouponcode newcost coupon apply taxes let region getcustomersregion newcost addtaxes newcost region apply shipping costs let address getcustomersaddress newcost addshippingcost newcost address logic helper functions separate file import function cleaner basically benefit get makes easy provide transform function existing value possibly several existing values know logic implemented function suggesting replace us habitually put complex logic named functions nt think alone opportunity turn lines multiple places x lines applying transform multiple properties functional style backbone normally gets think certainly feels home next underscorelodash style functions backbone devs often use elaborate general provide fancy api drop function context work real gain could explain think would look like first reading nt see use case function whereas last comment read like think valid use case nt think api design best something completely open suggestions could simplified clarified meet need respond quickly nt better api design particular case think fine atomic operations combine see fit example external helper function exported little ugly updating cost concern model put model objectoriented version might look something like gah fair enough model point get making examples try find real world examples behind original inspiration think fall quick update case like incrementing perfectly honest working less backbone days nt push pr begin totally top real world examples originally drove going fight one see value also understand desire avoid api bloat', 'date': '2016-05-24T21:13:24Z'}"
"16642",16641,"{'data': 'backbone nt suppress duplicate events using backboneevent bind handler event context n times handler run n times trigger event one time company never really want fact cause many bugs universe behavior useful love understand codebase solve problem ugly pattern parts codebase sure remains unsolved duplicate events creep silently best nt notice worst cause strange slowness amp behavior hard debug dream world backboneeventon would detect try bind event already bound function context silently nothing perhaps bit complexity cornercase interleaving use thislistento gets destroyed automatically call remove method stoplistening el object listento bind event call remove event rewrite remove method like sometimes may thus got virgin target begin course many ways depends done really repeat constructor render views whatever call nt need complexity manage views subviews called asynchronously myklemykle happen register handler callback twice work fairly big project using backbone problem usually local object registers handler unregistering usually happens scope object could register twice unless clear bug easily detected module', 'date': '2016-05-20T18:52:38Z'}"
"16643",16642,"{'data': 'backbonerouter nomatch event event trigger matching route want something matching route add splat route final work cant find key word nomatch source splat like variable name whatever like js anyname myfunction myfunction function use arguments bc var inputs', 'date': '2016-05-20T10:48:04Z'}"
"16644",16643,"{'data': 'navigate silently wondering option without updating url history historical reason would pr considered call function history specifically manage history state', 'date': '2016-05-13T16:16:53Z'}"
"16645",16644,"{'data': 'dom exception navigate safari securityerror dom exception thrown safari ios osx moment called times fiddle var testrouter backbonerouterextend initialize function thisroute test id function id consolelog test id var router new testrouter backbonehistorystart pushstate true try var lt routernavigate test alert passed catch e var msg failed error e nstack estack consoleerror e msg alert msg fails apple developer forum link posted seems suggest issue safari want backbone backbone needs workaround browser bug workaround aware zowers bug occur navigate called times synchronously happen called times general workaround wrap navigate safari latest stable today times total safari developer preview times seconds wo nt fix say acceptable nonworking functionality placed reading safari bug see acceptable solution using trycatch changing route change acceptable imo using trycatch changing route change acceptable imo agreed silent failure worse current behavior probably navigate fallback hash case error today safari fix got released safari safari fails called times seconds closed hoping people get update soon bug safari without much given months think safe anything letting people update', 'date': '2016-05-13T16:09:43Z'}"
"16646",16645,"{'data': 'prepare backbone significant changes occurred master since like get sooner later list important activity highlights past couple months added support classes hook model creation one require good example create class extending bb iterator support fixed bug hash generation routernavigate cc jridgewell others prs merge probably get perhaps meh release date backbone thanks nice framework megawac separating several files thus view model collection etc files previously discussed feel free leave comment topics greets et al regarding separating several files done presently besides converting everything inline documentation angling fully modularize separate repos main components backbone already done events dependencies modules underscore inline documentation great codebases using esdoc actually tjsdoc releasing soon documentation generation current api docs held thought would bit sooner using jspm systemjs bundling distributed releases works great edit though keen getting things npm finished accomplish full modularization adding internal events instance communicate modules versus direct method calls points pertinent less eventbus npm module backboneesnexteventbus allows access several standard eventbus instances app dev also internal backboneesnext usage also added extra trigger methods events quite handy able return results synchronously trigger asynchronously receive promise results rather handy message passing modularization nice plugin system allows app autowire eventbus typhonjspluginmanager nice feature event registration transparently handled plugins manager events removed automatically plugins unloaded ie plugin lifecycle right though considering keeping sync backbone likely one repo except events make easier update mainline backbone releases creating comprehensive testing infrastructure however considering fully modularizing creating usage implementation primary goal remove underscore usage internally standard library functions exist already done backboneesnextevents dependencies goals include replacing jquery ajax support w fetch accessible via internal event bus making sure view jquery completely separated possible drop addition virtual dom solution maybe inferno undecided things fully modularized also gives opportunity play around ramda powered model collection components see enough improvement underscore point easy create custom builds via jspm systemjs bundler build tools requested though likely publish npm things solidified efforts attempting stay compatible backbone may diverge little glad interface backbone collaborators see may appropriate mainline backbone effort including basic documentationexample use backbone browserify webpack seems people moving especially webpack documentation use backbone lacking bboydflo using backbone browserify exactly like using package browserify would nt know document specifically backbone jaapz process switching app using browserify using webpack also use lodash utility library throughout project wanted replace underscore dependency lodash coreminjs think people using webpack days thought paragraphs would help nt officially support lodash zepto plenty google results describing make work backbone see example bboydflo use webpack going use modules something like rollupjs halfnibble switching browserify lot people talking webpack would easier figure heard rollup bboydflo makes sense wonder someday everyone stop using custom module bundlers altogether one thing certain backbonejs remain hey megawac far away landing would like know far hello anyone someone get clarification backbone heading developers left actually working maintaining backbone thanks advance also interested understanding future backbone core developers interested maintaining busy spend time evolving backbone think see community interest maintaining backbone anyone interested drafting changelog submitting pr think time publish chance making megawac work tamalsaha need update file see megawac take megawac problem please send needs done help want know backbone still alive lead devs still working backbone interest developing backbone maybe even roadmap future backbone releases shame let great framework unmaintained lead devs lost interest borming interested updating sections piecemeal would useful example documenting using classes backbone another good one document typhonrt recently read ideas want see virtual dom solution could probably drop underscorejs altogether would nice find virtual dom solution render existing underscorejs template syntax like participate effort anything like setup slack halfnibble updated comment details right backboneesnextevents published works alone course typhonjspluginmanager adds nice modularization functionality autowiring events plugins handling transparent event unregistration w plugin lifecycle using great effect tjsdoc soon typhonjsescomplex node cli apps documentation gen complexity analysis handy beyond web apps thread probably nt best continue discussion gitter channel makes sense halfnibble actually nt think virtual dom way go lot options virtual dom would rather go one advantages backbone pretty easy also set legacy projects server rendered projects lose virtual dom least easy way sendoushi think idea modularize backbone configuration virtual dom implementation view desired skeptical vdom per se least efforts bb fine though like abstract view much possible jquery zepto enabled version flavors point mix match modules one wants use want vdom great want bb everything view router history possible whole bb event driven gui library built original material design lite upgrading material components web challenge see things cleanly sit top jquery view implementation vdom version minimal fuss one replaces created incremental dom compiler handlebars seems pretty popular marionette community jridgewell helped get working backbone really easy call patch inside views render computer moment dig usage example sun apr michael leahy notifications githubcom wrote sendoushi think idea modularize backbone configuration virtual dom implementation view desired skeptical vdom per se least efforts bb fine though like abstract view much possible jquery zepto enabled version flavors point mix match modules one wants use want vdom great want bb everything view gui possible whole bb event driven gui library built original material design lite upgrading material components web challenge see things cleanly sit top jquery view implementation vdom version minimal fuss one replaces receiving commented reply email directly view github mute thread typhonrt matter agree one able select layer view wants would nt hard even use something like vue view layer things well structured sendoushi large production backbonejs apps nt want rewrite every view template either honest think jsx template syntax reactjs uses terrible fact matter virtualincremental dom concepts winning gaining popularity negate complex part ui templating partial inplace rendering template backbonejs nt incorporate make easy use favorite js framework quickly fall popularity means bad things javascriptland think definitely look solution personal experience using reactbackbone almost complaints prefer using models collections existing framework tried date prefer view hierarchy composition really enjoy using reactbackbone redux many types applications although admit find support things like lacking would tempted switch solutions halfnibble others nt need jsx react use vue example kind marvellous experience anyone looked using backbone glimmer vm poked around repo nt see integration tips tried glimmer seems really baked ember ecosystem though really easy use embercli could nt fathom use separately fri apr john boehr notifications githubcom wrote anyone looked using backbone glimmer vm poked around repo nt see integration tips receiving mentioned reply email directly view github mute thread instead vue uses fork snabbdom virtual dom library think safer use virtual dom library looking forward modularized backbone support virtual dom view layer maybe backbonejs official view plugins one virtual dom one incremental dom one good ole fashioned underscore templates year later thank goodness nt get shoved glad someone keeping cool head humble opinion nothing respect dissenting opinions personally would nt rush improve everyone hammer hotgluing stapleremover every one backbone underscore rare examples programming world equivalent elegant proofs modularize backbone alternate virtual doms comes preinitialize prepreinitialize preonpreinit existing plugins extensions give modest idea community patched thus actually consistently needed many people issues basic getters inside view functions compared want support classes yet library remained lean useful extensible quick example flufflobbying one two usecases given preinitialize merge actually closed jashkenas commenting one line call setelement initialize closing ticket hardly usecase let sure celebrate ability fork extend almost none us opportunity contribute web order backbone underscore easy pollute ecosystem reactive instead corrective functional certainly rushing jam personal backbone extensions see rare quality opensource repo easy extend almost anyone appreciate lack jumping things around hope lack continues made another noisy year without hotglue spinners favorite hammer thrilled mobs yet picked backbone carried oh look still use next projects best everyone valleyspirit nt know understand saying underscorejs less deprecated supports useful features natively think important upgrade framework backbone take advantage new features language implemented maybe work pull request think important upgrade framework backbone take advantage new features language implemented whole heatedly agree instead chasing shiny things frameworks chasing would like see backbone stay stable also evolve language get outdated kind see directions discussed continuing make bb lean mean better suited deploy web nonweb apps bent towards modern package managers nt expect mainline bb release change much larger surrounding ecosystem grow much point things currently stand good bad fork realizing ideas worth pursuing nonetheless even better way provide continuity new ideas flourish one questioning impact bb underscore future assume discussing things bb ideas behind still form preferred framework choice always exoskeleton disclaimer one contributors want go full route couple good ideas imo often better stick mainline bb something would like see improved currently gt something would like see improved currently hard say part culture thing suppose opinions differ newcomer side around things go tech angle instance bit bearish speak regard adding mixin collection amp model assumes moving forward bullish bb version one thing big boon modification done thus far would events update backboneesnextevents adding async sync trigger amp return results consider low hanging fruit merging back mainline bb however async kind assumes otherwise separate promise module would necessary undesirable modification opens tons modularization possibilities use events inprocess messaging corner stone future efforts really improvement like going venture bb reorganization modularization nice keep open line communication going mainline bb maintainers tech angle would nice regard figuring tests shared efforts something look point possible slight modifications necessary nice work mainline bb maintainers regard changelog added ping jashkenas jridgewell braddunbar bb works perfectly event mixed marionette would like see support life bb developers marionette great job promoting maintaining user base eco system would like see bb one user said good glue shit hammer already job agree would like add hammer needs improvments better job better one things hope someone jumps board makes bb fork full compatibility puts life back bb agree angular shit may start dev branch bb code transferred could split code parts add rollup effectively build distributable version respectfully ogonkov already done used jspm systemjs distribution versioning use rollup bundling well bb drops thinking making bb version fully embraces babel esnext stage perhaps extra modularity elements bb focus native functions versus library usage nicely done interesting breaking requires deeper inheritance events instead treating mixin like backbone currently would definitely support modular backbone like see smaller iterative nonbreaking steps paulfalgout gt breaking requires deeper inheritance events instead treating mixin like backbone currently mainly due documentation purposes esdoc time many documentation tools including tjsdoc finishing nt work mixins knowledge every frameworks mixin api library would necessary personally think deep inheritance mixins generally antipattern versus explicit composition static types available especially comes core framework code recall change effectively works bb mainline nt exactly breaking change though nt got mainline bb test suite hooked would nice thing proof compatibility sorry yes mixin meant ca nt extend events another object frankly showstopper many backbone plugins also mixin events already existing objects indeed breaking change one worthy potential ever adopted mainline say idiomatic guiding principle bb related refactor efforts move away mixins frameworks react well documented believe removing mixins public framework apis good thing minimizing usage internal implementation needed recent collection mixin addition things debatable gather minority considerable amount around components bb would explicit getter events instance via composition versus mixin inheritance ala adhoc objects something like const anobject event new backboneevents register function thiseventon test trigger thishandler testtrigger triggertest function thiseventtrigger test trigger handler function thistesttrigger hi news regarding release availability date regards whats hold year half jashkenas underscore new shiny bb sure left done moment merged changelog already would lovely megawac jridgewell would feel pushing megawac jridgewell ping megawac jridgewell jashkenas ping probably safe say version never released world moved frameworks well deployed cash register system fully build backbone marionette little bit nodejs use older version personally love simplicity vanilla approach backbone know vuejs close vanillajs still feel close backbone interested working modernising backbone nt think skilled enough yet buildwork framework compatibility quite important imo', 'date': '2016-05-06T17:23:57Z'}"
"16647",16646,"{'data': 'routernavigate generated locationhash regression change decodes fragment decoded value goes makes url effectively malformed quick test explain problem results', 'date': '2016-04-30T10:31:32Z'}"
"16648",16647,"{'data': 'access play download video dailymotion android want show list video daily motion android app also show download button download specific video', 'date': '2016-04-25T11:01:55Z'}"
"16649",16648,"{'data': 'latest progress backbone latest progress backbone check milestones nt really use milestones part take look open issues see questions particular directed gitter channel mailing list stackoverflow thank answer', 'date': '2016-04-25T09:50:19Z'}"
"16650",16649,"{'data': 'reception spi using processing language raspberrypi trying transmit receive data spi using processing language raspberrypi able transfer messages able find correct commands execute reception also able find documentation example code available site please help issue sure posted right project yes sure idea works come conclusion right project post see link nt anything raspberry pi receive surprisingly large number open issues new users people looking projects please tell us spam bot kind git profile joined apr maybe someone use aka github bots get answer asap randomly use github public api find projects huge amount stars co smile huh really interesting like spammy google results world yep people ca nt start spent time learn sometimes think write bots nt think spam bot original poster ended posting question repository seems ontopic', 'date': '2016-04-22T11:48:37Z'}"
"16651",16650,"{'data': 'eslint stuck version eslint still version would like upgrade also forgive selfpromotion written eslint plugin platinumazureeslintpluginqunit help detect potentially bad patterns qunit tests interested write pull request showing could work obviously minor things compared enduserfacing bugfixes enhancements features always useful able enforce code quality automatically less time needs invested quality per pull request happy write prs one needed let know go would great see pull separate pulls please thanks want pulls attached issue slash issues since closed issue used writing commits fixclose issues backbone operates differently totally fine making sure tend use open issues way saying issue resolution undecided welcome comment community otherwise even open issues stuck sort limbo state case next step known great open pull request concrete changes actually comment ref issue write pr issue ref apr pm adam krebs notifications githubcom wrote tend use open issues way saying issue resolution undecided welcome comment community otherwise wed even open issues stuck sort limbo state case next step known great open pull request concrete changes actually comment receiving authored thread reply email directly view github yup ref issue completeness sake got prs next days thanks help awesome thanks thanks platinumazure said days obviously lie get something weekend', 'date': '2016-04-18T21:27:21Z'}"
"16652",16651,"{'data': 'collectionprototypechain nt proxy requests modelattributes far tell looks like underscore methods attached collections proxied call act models object great lets us things like unfortunately seems like breaks call obviously example nt useful want one operation collection ca nt use shortcuts things like etc need use iterator functions much less clean special cased unfortunate side effect way chaining works underscore backbone better solution seems could specialcased chain object chained methods could detect next call longer returning backbone models basically become normal underscore chain context object point course could get ugly factoring methods take method refs eg invoke could honestly go either way one way could handled augment underscore chain object method something like basically goes back collectionaware chain mode method would regarded use risk example assume collection contains models address attribute another model honestly looking pretty ugly even wanted throw hopes inspire discussion ultimately workable solution suspect viable way without duplicating logic handles whether provide model attributes chain default nt able come clean solution really workaround far always follow either lets filtermanipulate objects like unfortunately lose instances process method benefit working backbonemutator properties method keeps references original objects maybe good bad thing since could modify perhaps one option would track methods called chain simply filtered collection eg etc case could cleanup operation happens output chain looking models whose attributes matched output swaping attribute objects model instances alternatively models id could match way would probably much faster since index would basically look like automatically calling gets trickier methods rearrange collection eg partition etc maybe methods cause cleanup happen immediately', 'date': '2016-04-17T05:56:00Z'}"
"16653",16652,"{'data': 'colletcionget cid undefined model class muppet item var muppetmodel backbonemodelextend defaults id null name null occupation null collection class muppets list endpoint var muppetcollection backbonecollectionextend model muppetmodel url muppets parse function data return datamuppets view class displaying muppet list item var muppetslistitemview backboneviewextend tagname li classname muppet template template muppetitemtmpl html initialize function thislistento thismodel destroy thisremove thislistento thismodel sync change thisrender render function var html thistemplate thismodeltojson elhtml html return events click remove onremove onremove function thismodeldestroy success function model response view class rendering list muppets var muppetslistview backboneviewextend el muppetsapp tempcid initialize function thislistento thiscollection sync thisrender render function var list ulmuppetslist empty thiscollectioneach function model var item new muppetslistitemview model model listappend itemrender el return events click create oncreate oncreate function var name muppetname var job muppetjob nameval var kermit new muppetmodel kermitset name nameval occupation jobval thistempcidkermitcid thiscollectioncreate kermit wait true consolelog get cid model thistempcid consolelog thiscollection thiscollectionmodels function consolelog ocid consolelog thiscollectionget thistempcid nameval jobval create new list collection list view fetch list data var muppetslist new muppetcollection var muppetsview new muppetslistview collection muppetslist muppetslistfetch chomre debbuger get cid model child models array byid object listenid events object modes array child id null cid proto backbonemodel child cid id null proto backbonemodel child cid id null proto backbonemodel code use print thiscollectionmodelsbut write nt print thiscollectionmodels function consolelog ocid beasuce probelm thiscollectionget undefinebut thiscollectionmodels alread find cid accepts bbrui provide jsfiddle think problem nt set model collection creation think help erosb accepts id cid model param thanks test bbrui say run rightcode follow still problem issue send var listnew muppetcollection var entitynew muppetmodel id name test occupation listadd entity consolelog consolelog listget entitycid id find thiscollectioncreate kermit wait false changethiscollectioncreate kermit wait false model add collection time nt wait server reponse server reponse add model collections bbrui kind questions please use stackoverflow gitter channel thanks', 'date': '2016-04-16T09:39:20Z'}"
"16654",16653,"{'data': 'revert change issue regarding options nested change events recently stumbled change introduced version caused issue version could nested changes options without regarding listeners change event could use options concrete change attribute callbacks nt get options callbacks change event causes issue since version options hash side effects options hash final change event depends last call set method done listenercallback model view never sure options hash change callback replaced one inner change notice problem sure cases problem really think second case causes much new problems solves really implemented side effect accidentally destroy options hash another listener may set different module application hurts principle encapsulation modularization example happens currently javascript file thislistento anymodel change function model options options options hash always empty optionsfooflag flag never exist dosomething file b thislistento anymodel change anattribute function model newval modelset anotherattribute passing options gt accidentally overwrites hash change event file c anymodelset anattribute fooflag true want file b setting another attribute regard listener file example break therefor must check listeners using options always pass around options hash inner changes even add overwrite flags final options hash change event use options change attribute event example may think kind disabling flag javascript file thislistento anymodel change function model options options options always contains disablesomething flag optionsdisablesomething never true expected true default options dosomething file b thislistento anymodel change anattribute function model newval modelset anotherattribute disablesomething true nt want call dosomething second time use silent flag file c anymodelset anattribute kind proposal opinion current behavior obvious default case firstold one version intentionally whatever reason want options hash inner change final change event two possibilities kind new flag set method force using inner hash options using reference nature options hash set additional flags options hash inside change callback simultaneously set original hash passed reference javascript file thislistento anymodel change function model options options options hash contains fooflag myownoption optionsfooflag dosomething file b thislistento anymodel change anattribute function model newval options options options hash contains fooflag optionsmyownoption modelset anotherattribute options file c anymodelset anattribute fooflag true side note finally really want stress explicitly mention changes changelog look changelog version point performance finetuning backbone events anything surely change causing different behavior backbone models team search hours find problem caused change till found backbone something different', 'date': '2016-04-11T12:01:14Z'}"
"16655",16654,"{'data': 'backbone old underscore dependency installing backbone using npm installs underscore dependency instead latest reason getting error trying define view example function nt possible likely problem local npm modules try full reinstall', 'date': '2016-04-11T07:25:57Z'}"
"16656",16655,"{'data': 'use new array model properties want use new array model properties different model get single array like per defaults hash function also nt forum try next time grin thanks rafde', 'date': '2016-04-08T01:23:41Z'}"
"16657",16656,"{'data': 'backbone security hi offering write new module security module based backbone framework separated beginning enough provide realization security main features module easy configure overwrite based class include routers models collection witch use provider provider created manage token session expired time token succeed authorization provider adding authorization header values witch got authorization course provider provide logout function think idea cool idea go ahead backbone plugins always welcome yup sounds like great plugin looking forward see', 'date': '2016-04-04T08:07:24Z'}"
"16658",16657,"{'data': 'hash change causes page refreshes special cases ie bug caused bug ie versions since backbone router supports ie versions affected feel like bug covered backbone library see fix turns simple however nt time test effects across browsers', 'date': '2016-04-02T00:43:49Z'}"
"16659",16658,"{'data': 'backbone models dto create new structure model consists models something like dto data transfer object sometimes situations need send operate model additional data hi kraytsman please use stackoverflow gitter channel mailing list questions github issues maintaining framework thanks', 'date': '2016-03-29T19:47:31Z'}"
"16660",16659,"{'data': 'ca nt name event constructor throws exception bug reproduce developer console backbonejsorg site fwiw bug somehow related closed wontfix fixed ensuring handler array thoughts jridgewell eh think short circuit pattern fairly common js advice around edge cases applies drop hell even prototypeless object black magic got mind objectcreate everywhere jridgewell god hell even prototypeless object black magic kidding pretty sure literally gate hell insane insane cliched genius madness quote wink', 'date': '2016-03-29T15:50:47Z'}"
"16661",16660,"{'data': 'self global may null selfself throw exception right circumstances would occur someone define hehe maybe think', 'date': '2016-03-28T10:25:46Z'}"
"16662",16661,"{'data': 'collections parse never called backbonejs hello everyone using latest backbonejs ca nt manage get parse called collectionfetch completes code reproduces problem var abc backbonemodelextend defaults avatarturl whateverjpg location xyz phone parse function data consolelog abc model parsed return data var myabc new abccollection myabcfetch reset true parse true neither collectionparse modelparse called apparently myabcfetch reset true prevents collectionparse called sure case closed mmm sorry reopen one consequence calling myabcfetch without parameters reset event nt fired backboneview nt react backbonecollection new data words view contains following code say initialize thisaddall never called view never drawn missing something create jsfiddle demonstrating issue help track mmm seems unlikely work help jsfiddle nt log js console added necessary html need save file run ca nt help without reproducible test case jsfiddle certainly log console example found seconds googling try codepen another one prefer better uh copy paste code html page run web inspector myabcfetch reset true b myabcfetch abcparse called b abcparse called jsfiddle nt log console message tried indirectly calls parsing nt override unless know', 'date': '2016-03-23T06:04:11Z'}"
"16663",16662,"{'data': 'backbonejs backboneminjs minified version appear include unminfied version unminified minified jridgewell megawac verified tests around fails replace backbonejs backboneminjs testindexhtml sigh megawac create pr since ca nt seem get right offered considered changing indexhtml file use minified version nt sure everyone would build testing marionette compatible minified backbone soon none existing yet afaik works marionette elgubenis actually mn composite views issue minified backbone found problem begin collectionviews bind via composite views extend collectionview initialevents start point context lost due need fix thiscollection falsey therefor start listening collection events appropriately careful using collectionviews compositeviews collection set prior rendering okay yeah republish version updated minified file file master work publish soon', 'date': '2016-03-22T15:02:51Z'}"
"16664",16663,"{'data': 'backbonehistorynavigate removes hash using backbone router like load urls without full page reload add handler calls links issue hash url stripped like pass url hash anchor section page like done backbone documentation nt work example see expected click link url getting related update also running routes containing example', 'date': '2016-03-22T13:19:27Z'}"
"16665",16664,"{'data': 'dead links mdn docs least external links inside file dead collectionslice array slice collectioncomparator sort line right link guess would array slice array sort fixed thanks collectioncomparator sort link line still points dead link mdn docs feel free open pull request merge thanks', 'date': '2016-03-16T20:34:55Z'}"
"16666",16665,"{'data': 'feature request make clones identifiable overriding clone function codebase order identify clones sure people would find useful able identify clones honestly might useful specific use case dealing ton legacy code uses data binding nt want update actual model user clicks save hence use dummy model clone user clicks save use extra information within cloneof drive happens next course ideally would rip data binding use actual model drive view wondering anyone else would find useful sure another use case might current use case feels specific situation words people want monkey patch well nt already possible models cloned model original model yep using old fine idea always go advanced need', 'date': '2016-03-15T23:07:08Z'}"
"16667",16666,"{'data': 'backbonemodelset support function parameter project working need modelset function support function parameter something like react would interesting implement would like make pr give far remember even react nt sold current batching strategy oh yeah right completely forgot usage almost always use method object another thing would useful set method supports dot notation found working nested objects get variable set inner properties want create another issue last question mar pm adam krebs notifications githubcom wrote give modelset modelget far remember even react nt sold current batching strategy reply email directly view github completely forgot usage almost always use method object also use object notation would useful set method supports dot notation found working nested objects get variable set inner properties common question fact whole entry faq quick googling give couple different options depending use case yeah solution gave works read faq suppose talking nested models collections complex suggested wanted way update nested object using set found people need understand saying specific include backbone source thanks mar pm adam krebs notifications githubcom wrote completely forgot usage almost always use method object also use object notation modelset modelget would useful set method supports dot notation found working nested objects get variable set inner properties common question fact whole entry faq quick googling give couple different options depending use case reply email directly view github search issues background general nt horrible pattern use talking set method nt know misread altrough change properties notation reference think could mislead anyone reads code maybe feels strange set property get even forwarded usable super intuitive usable javascript var model new backbonemodel address street backbonish street age name alexandre modelget address street improved backbone street two sides coin deep set deep get try plugin like use case right thank alexandre miguel portela dos santos email alexandresantozz gmailcom tel skype website adam krebs notifications githubcom two sides coin deep set deep get try plugin like use case reply email directly view github', 'date': '2016-03-10T19:26:23Z'}"
"16668",16667,"{'data': 'version number backbonejs version number js still please fix nt fix pull request', 'date': '2016-03-10T09:22:42Z'}"
"16669",16668,"{'data': 'upload image database display like avatar need getting database displaying nikolayteodor issue tracker intended reporting bugs feature requests help writing app would recommend rewriting questing lots detail including examples far stuck exactly errors getting asking help site like good luck', 'date': '2016-03-09T13:09:33Z'}"
"16670",16669,"{'data': 'php session error notice undefined index islogged xampphtdocssaitbgswitchloginindexphp line user logged problems logged error database included usersusernamepassword password num mysqlnumrows check num r mysqlfetcharray check session user r session islogged true header location indexphp pindex exit else echo грешна парола или потребителско име else header location puserpanel gt нямате профил регистрирайте се днес', 'date': '2016-03-09T13:07:24Z'}"
"16671",16670,"{'data': 'update backbone version number backbonejs comment match packagejson noticed trying download backbone head comment block file refers backbonejs obviously misleading hi merusso nice eye got open resolve issues releases', 'date': '2016-03-08T18:55:36Z'}"
"16672",16671,"{'data': 'eventonce callback context change backbone concerning change look line backbone relied void value fallout change bb callback context pointer callback defaulting callback function backbone pointer defaulted original pointer callback registered trying imply change wrong backbone appear document context third parameter eventsonce call left simply pointing default behavior changed one fallout change marionettebackbone collectionview longer works backbone following marionette collectionview registering callback leaving third context parameter backbone callback context defaulted pointer backbone callback context defaults callback function fix marionette simple problem solved however simply opening issue represents might considered breaking change caused major headaches team finding issue really helped thanks onehorsetown fixed', 'date': '2016-03-07T16:27:38Z'}"
"16673",16672,"{'data': 'file uplaod google drive using ios sdk objective c hi ios developer working project related importing exporting file google drive downloaded new sdk trying upload file google drive code gtlservicedrive driveservice selfservice nsstring title mycontactlistcsv nsstring mimetype nserror err nsdictionary fileattributes nsfilemanager defaultmanager attributesofitematpath fullfilepath error amp err nsnumber filesizenumber fileattributes objectforkey nsfilesize gtldrivefile metadata gtldrivefile object metadataname title metadatamimetype mimetype metadataoriginalfilename title metadatasize filesizenumber nsfilehandle file nsfilehandle filehandleforreadingatpath fullfilepath gtluploadparameters uploadparameters gtluploadparameters uploadparameterswithfilehandle file mimetype mimetype gtlquerydrive query gtlquerydrive queryforfilescreatewithobject metadata uploadparameters uploadparameters service executequery query completionhandler gtlserviceticket ticket gtldrivefile updatedfile nserror error error nil nslog file updatedfile else nslog error occurred error another method query queryforfilesinsertwithobject available new sdk also getting error using code error gtmhttpuploadfetcher uploadfetcherwithrequest uploadmimetype chunksize fetcherservice unrecognized selector sent class please help resolve issue', 'date': '2016-03-04T10:08:18Z'}"
"16674",16673,"{'data': 'backbone making mess release process checklist really update update version comment top bump create changelog entries telling everyone screwed versions really update branch push npm someone confirms idiot anyone know anything else missed paulfalgout megawac minify source map main backbonejs file rebuild docco docs also changelog release date date might wan na fix also comment top library containing version also changelog release date date might wan na fix yah going update changelog say instead update date also comment top library containing version added nice well done releases expert smiley stuckouttonguewinkingeye fyi hooks prepost version prepost publish could help lot fyi npm version npm scripts hooks prepost version prepost publish could help lot yup going work one feature release broke something development environment using marionette though might issue seems like backbone collections correctly triggering events collectionveiw fetching need investigate sure marionette fixed version dependency backbone since bb nt using semver requires manually update marionette every release updated bb dependency locally using package manager actually using different copy backbone marionette omitting fixed version marionette environment marionette always uses latest backbone version might issue also got ta update linked versions whenever create release see nt backbone follow semver lost much time debugging davis also got ta run rebuild docs pages davis nt backbone follow semver lost much time debugging nt aware breaking changes documenting changelog marionette relying undocumented edge behavior actually far aware breaking changes historically marionette locked dependency backbone marionette follow semver wanted surprises backbone underscore updated patch breaking change underscore instance however personally nt think working suggesting backboneunderscore set peer dependency related plugins essentially problems people running arisen upping project backboneunderscore dependency find marionette still using copy older version change backbone broke marionette may impact outside marionette ecosystem marionette makes call notice context third parameter specified bb context defaulted pointer call backbone context defaults callback seems like pretty major behavioral change might break lot marionette far trace eventsonce used call eventsapi void callback backbone callback passed directly well good look line backbone callback longer void context defaulting callback backbone context ctx value callback object would default pointer original call sorry explanation convoluted ca nt pretend understand internal machinations backbone event system simply know marionette working backbone answer continue using marionette backbone fine however simply wanted bring possibility underlying issue pervasive onehorsetown thank thats exactly problem facing guess test scope wait fix nt able reproduce issue locally elgubenis create failing test case ready tried backbone marionette works combinations tried work marionette yet support smoke test top plugins releases feel like one point sun mar paul falgout notifications githubcom wrote marionette yet support reply email directly view github adam k mobile', 'date': '2016-03-04T03:16:54Z'}"
"16675",16674,"{'data': 'listento function call triggering page load hi html contains scripts following order following code snippets file mainappjs var app app appmainview backboneviewextend el mainapp initialize function thislistento backbone list thisshowlists showlists function function get executed backbone successfully triggering list event var lists new applists var listsview new applistsview collection lists routerjs var app app var listrouter backbonerouterextend routes showlists showlists function consolelog accessing home getting printed console backbonetrigger list applistrouter new listrouter backbonehistorystart homeappjs seems issue listento page loaded page loaded everything works expected kedarmanure please use stackoverflow questions ps solution read try fiddle fires event sec singleton extended backboneevents thanks someone close yep stackoverflow gitter channel better places help debug app thanks looks like listener set route triggered one solution move call setting sorry posting extensive research googleso right backbonehistorystart called setting fixed issue', 'date': '2016-02-23T18:33:33Z'}"
"16676",16675,"{'data': 'properly contributing someone elses respository hello using github first time school project impression figured realized nt case problem partner created group repository made fork repository started adding commits pushed github getting repository branch commits ahead mypartnersname master read tutorial thought said fork repository maybe tutorial something else want use repository check repository sure enough missing commits made appears fork pretty simple guess hope simple fix someone help repository backbone js lib question scope issue tracker anyway find good resources github git aw jeez really sorry thanks redirecting wait go found backbone issue tracker website pointed hmm really sure exactly think combination googling github help well paying much attention exactly got backtrack history would nt believe often happens love figure happens got googled github questions second result without paying much attention seemed like found looking', 'date': '2016-02-19T17:05:33Z'}"
"16677",16676,"{'data': 'brackets support backbonecollection backbonecollection actually subset array however currently nt allow access value using brackets instead need use jashkenas let know opinion ok send pr sure would good idea first would approach defining property whenever user addsremoves item collection point easily mixed something like core inclusion js var indexedcollection backbonecollectionextend constructor function backbonecollectionapply arguments array fiddle works pretty well difference currently see settings property nt update internal object array nt remove items inside another technic relies js var collection extend backbonecollectionprototype properly arrayprototype objectsetprototypeof collection bacbonecollectionprototype foreachfor loop items though wo nt big deal implement actually subset subclassing issues weird side effects different javascript environments nt see happening backbone core also lead quite confusing scenarios user tried would way backbone intercept without defined properties mixed bag issues stalniy would suggest make rivets use iteration use collection mixin defines properties posted something like might cool backbone plugin make sense nt thought setting items reading', 'date': '2016-02-14T08:26:55Z'}"
"16678",16677,"{'data': 'docs collectionadd model project work recently involved following workflow hit web endpoint returns list stanzas comma separated string order displayed ui ex endpointstanzas gt split list hit endpoints stanzas get detail display ex endpointstanzasstanza gt data etc since getting asynchronously sent also wanted add collection order list step ordered ran map comma split list string stored index point insert ex collectionadd fetchedmodel storedindex however turns collection nt quite behave like javascript array insert nonexisting index since collection nt dynamically resize javascript thought backbone would intuitively lost lot time debugging error result suggestion would following add docs collectionadd backbonejsorg providing index option larger size collection dynamically resize collection happy implement branch create pull request actually provide functionality desired ashivkum pretty simple use want make clear make pr close please thanks yeah feel free make pull request review ashivkum', 'date': '2016-02-12T19:21:08Z'}"
"16679",16678,"{'data': 'collections modelid method passed model second argument right passed plainobject representation model attributes makes difficult application developers create ndegree polymorphic collection subclasses contrived example javascript collection mixed entity types maintains sort order based joindate property var entities collectionextend modelid attrs id attribute use determined runtime comparator joindate two entity types different idattributes assume may n different entity types different idattributes determined database backing example application var company modelextend idattribute companyid var customer modelextend idattribute customerid proceeding add remove customers companies etc entities collection mess cache entities collection aware different possibilities runtime method written satisfy needs app modelid callback took form second argument model question backbone retain backwards compatibility allow application developers something like id entitiesmodelid function modelid attrs model return attrs modelidattribute thismodelprototypeidattribute id may even make sense make function default implementation support polymorphic collections box still maintains backwards compatibility implementation already polymorphic collections still function normally models idattribute set added collection collection model constructor already polymorphic type nonstandard idattributes already modelid method overwritten happy throw pr think good idea please keep mind tried without much success pr used backbone upgrade broke scenarios id property exists model collection uncommon scenario imagine adding models temporary collection without need polymorfismus example javascript version backbonemodelextend idattribute versionnumber new version versionnumber id name first version new version versionnumber id name second version versions new backbonecollection first version set collection versionsreset referenced pr fixes problem always prefers model collection one set id default collection never used broke behaviour backbone breaks backbone caseywebdev chance support scenarios preferably without changing code base could think changing pr prefer collection model means creating collections know models added without default model javascript temporarycollection backbonecollectionextend model backbonemodelextend idattribute null versions new temporarycollection collection idattribute null fallback model one lets models set versionsreset better possibility scenario', 'date': '2016-02-09T20:05:58Z'}"
"16680",16679,"{'data': 'collection set add events sends optionsindex correspond wrong index pointed issue deprecated events however certain cases events generated call collection set passes stale assigned generation events collection removemodels since options argument event handlers well documented able rely anything passed including optionsindex intent would sent specified however unset unspecified set unset events get stale removemodels since object reused across events add remove needs cleanup events triggered bug preconditions optionsremove true optionsat null passed attrs elements add collection elements remove bug manifestation removemodels set optionsindex sending triggers optionsat null set method clear optionsindex set removemodels triggering add events case last optionsindex remove events reused add events var array map function val return property val', 'date': '2016-02-08T21:35:39Z'}"
"16681",16680,"{'data': 'backbonecollection set add events may send wrong optionsindex bug preconditions optionsremove true optionsat null passed attrs elements add collection elements remove bug manifestation removemodels set optionsindex sending triggers optionsat null set method clear optionsindex set removemodels triggering add events case last optionsindex remove events reused add events var array map function val return property val want make pull request adding unit test merge investigate look change log improve performance add optionsindex longer set event callback collectionindexof model used retrieve index model necessary nt set unless passed index nt set optionsindex unless passed index bug add event backbone actually sending stale optionsindex set removemodels end removemodels needs documentation explicit sent options parameter callback able rely case stale data leftover remove event sure let fix pull request related open issue', 'date': '2016-02-08T17:22:02Z'}"
"16682",16681,"{'data': 'xiaomi mi lolipop mobile supported show custom emoji keybaord customd new customdialog softkeyboardthis androidrstylethemenotitlebar customdsetcontentview rlayoutyourcustomlayout customdgetwindow setflags windowmanagerlayoutparamsflagnottouchmodal windowmanagerlayoutparamsflagnottouchmodal customdgetwindow setflags windowmanagerlayoutparamsflagwatchoutsidetouch windowmanagerlayoutparamsflagwatchoutsidetouch customdgetwindow setflags windowmanagerlayoutparamsflagaltfocusableim windowmanagerlayoutparamsflagaltfocusableim customdgetwindow clearflags windowmanagerlayoutparamsflagdimbehind customdgetwindow settype windowmanagerlayoutparamstypesystemalert customdgetwindow setsoftinputmode windowmanagerlayoutparamssoftinputstatevisible windowmanagerlayoutparams lp customdgetwindow getattributes lpwidth windowmanagerlayoutparamsmatchparent lpgravity gravitybottom gravityleft lpdimamount', 'date': '2016-02-08T05:58:56Z'}"
"16683",16682,"{'data': 'collection forof support would nice could write maybe would take adding browsers without symbols generators probably nt forof anyway transpile think unfortunately unsupported browsers throw syntaxerror point requiring backbone transpiled would make great plugin projects support doable without throwing syntaxerror example lodash works iterator iterable wo throwing need detect func assigned symbol property returns lastly add function wrapper returns following iterator protocol iterator support makes happy pretty fun things work newer apis adding method little function', 'date': '2016-02-05T13:43:27Z'}"
"16684",16683,"{'data': 'optionsindex add event sometimes exceeds collection length adding models collection index greater collection length models added end test case shows index provided corresponding events reflects requested indices actual insertion indices sure qualifies bug tracking exact changes collection would great provided event would reliably reflect actual insertion index background need back native collectionviews mobile framework backbone collections js describe collection function var collection events beforeeach function events collection new backbonecollection collectionadd name name b collectionon add function model collection options eventspush add modelget name optionsindex set provides correct indices add events function b collectionadd name c name b c expect names collection tobe b c function names collection return collectiontoarray map function model return modelget name join mathminat guard line jridgewell thoughts future open runnable jsfiddle codepen assist debugging minor code golf function could written fix move mathmin logic figure guard line jridgewell thoughts yup take look solve reopening due whooops', 'date': '2016-02-04T15:57:48Z'}"
"16685",16684,"{'data': 'wrong optionsindex add event changing collection using events contain wrong indices added models problem tracking changes collection add test demonstrate problem js describe collection function var collection events beforeeach function events collection new backbonecollection collectionadd name name b collectionon add function model collection options eventspush add modelget name optionsindex collectionon remove function model collection options eventspush remove modelget name optionsindex set provides correct indices add events function var collectionat b collectionset name c name c expect names collection tobe c function names collection return collectiontoarray map function model return modelget name join indexat otherwise undefined hand always sets index definitely inconsistency alternative costly add', 'date': '2016-02-04T11:28:14Z'}"
"16686",16685,"{'data': 'collection factorying models set urlroot propose collection set models creates explicitly added added model already urlroot set currently item model instance removed collection longer talk remote urlroot collectionurl remote object still exists model instance proxying still exists removed collection mean model instance invalid anyway yet gets broken consider example collection representing first page results server collectionfetch reset true model instance may removed ability talk remote broken side note also think modelcollectionurl override modelurlroot alternatively urlroot set last collection added considered standalone argue another issue different etc recall correctly stopped passing along avoid shadowing model url collection nt remember stopped passing also future please open one issue pull request per change need two places hi different asking ability pass collection init seems added somewhere deprecated fix bug tickets mentioned convo resulted allowing pased options collection model constructors respectively allowing collection somewhat indirectly solves bug argument allowing merely consistent change collection far see essentially proposing absence specific instruction model class collection creates model instance set url rather urlroot nt care done implement originally made urlroot option constructor actually thats wrong model specifies urlroot take precedence pushed squashed amendment pr minor thing easy enough hack around like feel correct inutitive behavior also future please open one issue pull request per change need two places problem try think pr opening issue future simple actually board passing model constructor since may mean ajax url model url nt confusion consistency argument pretty compelling urlroot work url ca nt differentiate jquery model maybe open object passed options model right point going one one broken nt seems kind gross though use case setting either method edit fatfingered writing real comment samatgithub brought use case model created collection tied collection nt know use case passing option modelcollection model created collection tied collection urlroot already absolutely set collection could nt logic live collection passed option something like currently item model instance removed collection longer talk remote urlroot edge case would make sense model keeps collection passed option nt code would perfect spot wait use case creating model collection removing model collection surprised model nt keep collection url nt like think behavior currently right one model collection nt url urlroot set check collection nt collection responsible setting model tied collection longer wait use case creating model collection removing model collection surprised model nt keep collection url well yes unexpected behavior motivated pr note however user removing model backbone remove model collections certain situations leaving hanging around without way talk remote unless specifically aware behaviour set things accordingly think behavior currently right one model collection nt url urlroot set check collection agree still case nt collection responsible setting model tied collection longer still tied backbonecollection still tied item remote collection model proxy backbonecollection factory backbonemodels proxies nt work standalone maybe subtle difference view responsibilities backbonemodel backbonecollection semantics remove opposed destroying model nt think backbonecollection reflection entire remote collection nt think view removing model collection synonymous deleting remote collection hey model fell view pr driven newb scratching head model part ui referencing got removed collection sync longer worked thought wrong end day understand behavior easy enough hack around took think though way models collection urls membership related bit think agree surprise feel like many edge cases would backbone determine url urlroot nt set opposite behavior would surprising best bet probably set urlroot model initialize method know could potentially reference models outside collection right collection may reference models resource argue removed model collection usually reasoning behind sync removing model surprising still tie removed model collection longer member entirely money', 'date': '2016-01-31T06:49:31Z'}"
"16687",16686,"{'data': 'changing size text area finch hy like know anyone managed change size text area finch thing like transform expand able press return key skip lines exactly centerim work need communicate lot think writing text sending much better sending text per line anyone idea configuration gntrc purpleprefsxml regards', 'date': '2016-01-29T17:25:40Z'}"
"16688",16687,"{'data': 'routernavigate executes although trigger false encoded hash fragment firefox execute fragment contain url encoded characters firefox tested correct behaviour backbone wrong behaviour backbone think new behaviour introduced yup specifically fix super familiar code think solution preencode string see works thank feedback get path api already encoded navigate using path without extra encoding think found broken code called correctly called event listener compare cached decoded fragment decoded backbone result another fragment cached one including configured handler executed think backbone fixed eg calling thisdecodefragment thisgetfragment want open pull proposed solution tests fail master happy take look proposal including test', 'date': '2016-01-29T11:10:05Z'}"
"16689",16688,"{'data': 'integrating qdelaunay qvoronoi function qhull c hi know basics visual studio c advanced user programmer want perform delaunay triangulation generate voronoi grids using qhull library using visual studio c windows problem preparing necessary data calculation questions minimum necessary files included qhull publicly free qhull powerful contains huge amount files easily perform delaunay triangulation generate voronoi grids like delaunaynm file matlab calls qhullmx x opt get delaunay triangulation thank much sharing experience changdongyang believe commenting wrong repository captbaritone thank right put correct repository thanks', 'date': '2016-01-25T00:11:59Z'}"
"16690",16689,"{'data': 'collection create modeltojson return name test phonenumbers id number try set value modelset name test update phonenumbers id number modeltojson return name test update phonenumbers number id removed update nested model modelset value collectioncreate model please use stackoverflow gitter channel mailing list questions github issues maintaining framework', 'date': '2016-01-19T11:52:35Z'}"
"16691",16690,"{'data': 'nested views binding events proper ui', 'date': '2016-01-13T02:10:03Z'}"
"16692",16691,"{'data': 'lodash flatten function work differently hi wrote small piece code test flatten code version lt result use version result got confused definition change function lodash follows behavior ps backbonejs repo lodash', 'date': '2016-01-12T14:31:09Z'}"
"16693",16692,"{'data': 'route parameters default parameters rather small issue route parameters default parameters ran thought would bring semirelated guess say router looks like const router backbonerouterextend routes foo bar biz let router new router routeron route init foo bar gt console foo bar backbonejs comment method states given route url fragment matches return array extracted decoded parameters empty unmatched parameters treated normalize crossbrowser behavior navigating get following output nothing wrong gets bit trickier default parameters come say want use default parameters none supplied would something like one could use default parameters however mdn states default function parameters allow formal parameters initialized default values value undefined passed output still passed values rendering default parameters useless solution would passing value undefined instead null sure browsers comment crossbrowser inconsistencies refers workarounds rather trivial might best usecase general either issue urgent means change instead keep crossbrowser consistency mildly breaking change though yup could nasty side effects someone something like maybe next major version fireengine meantime meant overridden though would nt know private naming could copypaste code changing jridgewell cool thanks tip', 'date': '2016-01-12T12:55:43Z'}"
"16694",16693,"{'data': 'remove triggering destroy triggers remove bug causes second remove remove wrong thing see comment bug recreated without using fiddle without silent true original fiddle silent true recently upgraded backbone backbone project remove single item collection item last item erroneously collection removed reason two things relevant code typically mapped reasoning nt want uncollected detritus floating case someone accidentally uses collection newer backbone version longer behaves regards option destroy triggers remove event longer silenced conceptually fine indeed already removed model collection however occurs succeeds returns logic leading faulty removal occurs line line contains splice given index removes last element collection tested prevent attempts remove already removed items delegates byid contain model key contain model id cid nt one following changes fix bug changed trigger event given option modified splice last list element removed model cid id removed second remove call occurs please let know simple fix code maintains functionality destroying object remove event occurs following code reproduce bug use fiddle javascript define backbone function backbone var collection backbonecollectionextend endsindestruction function model collection options silent option apply remove events preventing infinite loop remove observe infinite loop modeldestroy silent true initialize function options thislistento remove thisendsindestruction thislistento add change remove thisrender var collection new collection collectionrender add two models keeping reference one collectionadd name foobardi var model collectionadd name caesar erroneously removes two items collection function removeit collectionremove model consolelog done binds button remove item leisure buttons html remove one model mainbutton click removeit silent true antipattern reasoning nt want uncollected detritus floating case someone accidentally uses remove collection explain preferred way call want get rid model completely want collection garbage collection taking care event binding handle rest nt issue silent true issue cleanup hash fork previous fiddle two lines modified use anywhere existing project sometimes hearing event calls remove destroy execute hash still contains references allegedly removed destroyed model via keys via model key model supposedly removed second unstoppable remove event occurs model destruction makes inadequate test model membership collection membership tests positive still map model presumably nt called already model key removed previous remove call second remove event continues execution positive membership test removes last item collection nt curiosity little bit extra information project project extends backbone provide asynchronous control flow sometimes uses wait promises resolve triggering events used backbone corporate datadriven website also needs coordinate multiple collections involve data data views subsequent validation synchronization behavior implemented well although might easily changed anyway nt matter used worth test fails tag passes master right calling event backwards intended design nt actually remove reference remove event fired ivarni thanks new version rolled without problem sometime soon would fantastic part public api would like public presented consistent state point time second event handled model nt key collection inconsistent think would intuitive robust remove three keys call triggering would fix problem complicated business logic database sync assurance abstractions support moving away strict rest necessary collections tied state collection question kind thing necessary able call determine model destroyed dupe fixed possibly nt know scheduled line nonoptimistic call might fix issue example testing update jridgewell careful look visited issue happens appears related fixing underlying issue likely fix ivarni pointed test passing master hope issue fixed work important estimate next release occur gauge whether workaround necessary fixed version thanks', 'date': '2016-01-11T17:55:51Z'}"
"16695",16694,"{'data': 'get method name event handler simple model intercepts error get name method created error export class commonmodel extends backbonemodel constructor options super options thison error thisonerror onerror model response options let method consolelog method get post put delete modeloptionsmethod know answer almost ca nt directly get method wraperror response jqxhr янв г пользователь maksim notifications githubcom написал takes model options parameters nt contain method know answer reply email directly view github second solution rewrite backbonesync questions like better left one channels questions working backbone general discussions answer', 'date': '2016-01-11T09:36:44Z'}"
"16696",16695,"{'data': 'deeply set model problem see code var model new backbonemodel b c value deeply get handy var val modelget bc deeply set var temp clone modelget tempbc another modelset temp proposal contain space maybe form better deeply get modelget b c deeply set modelset b c another attributes simple primitive values', 'date': '2016-01-01T10:54:22Z'}"
"16697",16696,"{'data': 'doc error collection modelid doc error found modelid collectionmodelid attrs var library backbonecollectionextend modelid function attrs attrstype dvd return dvd attrsdvdid else return vhs attrsvhsid var library new library type dvd id type vhs id alert dvd libraryget id vhs libraryget id ah yeah bad broke last time fixed', 'date': '2016-01-01T05:38:20Z'}"
"16698",16697,"{'data': 'bootstrap date time picker version add add datacontainer body data picker try stackoverflow questions', 'date': '2015-12-31T07:27:56Z'}"
"16699",16698,"{'data': 'make backbone play nicer nosql rest apis backbone currently nt play nicely nosql rest apis like mongodb rely substantially specific format api overridden results lot boilerplate code mongodb would use set something like book name main identifier api would look like since mongodb uses document attribute unique key backbone erroneously assume false trying create new entry save model isnew save create http post model already exists server save update http put one solution pass request method ie manually requests burden coder add extra boilerplate figure create update given view easier solution override backbonemodel something plays nicer mongodb problem creating boilerplate written comments model new never saved server lacks id nosql databases like mongodb nt rely ids like rdms solutions thus confuses new document old one issues put request instead post requires either boilerplate calls overriding somehow backbone already pretty unopinionated something feels little hacky considered clean able support nosql better particular scenario suggestion update method return model synchronized server implicitly would mean model new backwards compatibility issue option properly set api play nicely nosql database apis im always using idattribute id never issue since nt really get problem facing elgubenis said elgubenis id attribute would need passed api calls works fine app users making api calls want open api users would make api harder use api calls would like ugly like supposing book would unique identifier name ideally work like jridgewell nt question suggestion backbone less opinionated api structured nosql apis nt even let respond closing issue ristostevcev think jridgewell closed question backbone default using rest want use someting like rewrite ready go nosql solution simple version javascript backbonesync function method model options options options switch method case create break ps done websokets simple powerfull suggestion question nt use rest backbone relying headily api requests particular nt work elegantly set something else nt asking question looking use object id mentioned good reason original post explains issue nt see problem nt deserve consideration angularjs agnostic rest api structured backbone almost agnostic allowing set mentioned problem approach providing example breaks ristostevcev said rethink arhitecture id db world unique identifier name want someting change sync method use elgubenis solution options try find way rethink arhitecture id db world unique identifier name actually anything unique key db unique identifier identifier makes api easier use id used instead id eat user api request limit add additional load server user send additional request figure id something nt many real world popular apis either use id number unique identifier rest api looks completely different one backbone forces answer nt need rethink architecture sometimes different architecture makes sense sometimes architecture nt backbone flexible enough work kind api structure without internally changing rest api backbone relies say got wrong backbone rest api gold standard frankly little arrogant elitist impractical one nt going change backbone sync designed rest architecture absurdly common want use arbitrary identifier case override backbone designed rest architecture overall like implying designed particular flavor rest api work google right tell would write model backbone google rest api endpoint listbyactivity get activitiesactivityidpeoplecollection list people specified collection particular activity backbone expected rest api supports one identifier per model endpoint two identifiers activityid collection angularjs simple backbone requires additional boilerplate almost every rest api come across least one endpoint looking two identifiers nt get wrong angular issues think makes point clear collection like activities thisactivityid people thisid person collection url like valid syntax backbone something like angular backbone expected rest api collections looks like unless want add considerable amount additional wiring api nt match template string activities thisactivityid people thisid var c new collection cid test cactivityid var collectioncreate murl gt return activities thisactivityid collectionactivityid reality unique identifier resource required form unique resource model backbone allows one id really uncommon two identifiers endpoint forming unique resource moments possibly better example crud insert list fits backbone structure remove delete match backbone api structure instead might say close enough fitting could get delete fit url structure want access larger api issue pops constantly would feel okay forcing coder write bunch extra boilerplate backbone redesigned work better github wikimedia flickr apis mentioned earlier nt fit anywhere near neatly mainstream apis coder hack backbone code get fit structure strong opinion apis look like mentioned initially arguing ca nt find way make api work backbone override methods arguing adds bunch extra boilerplate instead play nicer kind api structure reasons mentioned extra boilerplate backbone specific use cases nt common applications nt fight accept learn url method idattribute overriding sync method plenty options connect restflavors never heard issues backbone offers many different ways use rest backends elgubenis missing point trying say make anything work backbone nt deny saying apis nt conform well enough backbone expected api requires considerable boilerplate even url method idattribute example flickr rest request format looks like looks completely different backbone expects addeditdelete methods require http post put delete differ enough backbone nt want override backbonesync accessing two apis app enter different method url fetch save destroy heard issue look enough backbone criticisms find people talking angularjs lets interface api easily emberjs hearing backbone proud change real world deal kinds endpoints make coders add boilerplate libraryframework already requires bunch boilerplate business perspective might option change api company uses especially lot clients already using could come new version nt know would go boss told change fight accept learn fight saying want accept learn made point lots apis use backbone framework similar said enough made point take wish original argument plenty merit online library service identify unique resource using something like never change makes api easier use less arbitrary requires less work using finding id forgive thinking horrible idea forgive', 'date': '2015-12-25T13:25:17Z'}"
"16700",16699,"{'data': 'model id undefined put model id undefined collection first get method collection always return model actually comes model try determine collection already set uses tries since model nt property fetches model please split circumstances would id sounds like bug code better places fix code bugs backbone proper categories coming external api one undefined like keep cause need get models collection category often pr allow examples contrived favor adding tests back ensure backbone unopinionated reasonable ensures case tested also similar case id object object update pr case given nature accepting wide range values think judicious measures nt think adam going agree though p duskpoet really model ids supposed used best bet first case fix bug second', 'date': '2015-12-21T16:55:59Z'}"
"16701",16700,"{'data': 'create two way binding hi guys new backbonejs created bootstrap modal pop view child view calling parent view modal pop want add hide elements based dropdown box currently modal pop disappears rendering code var repeatmodalview backboneviewextend el repeatmodaltem elements urepeateverybyweek true urepeateverybyday false urepeaton true urepeatby false events change selectrctype selectrctype hidden close initialize function bindall show teardown render selectrctype thistemplate template repeatmodaltemplate html thisrender show function elfind repeatmodal modal show close function eldata modal null thisremove render function elhtml thistemplate elmodal show true dont show modal instantiation selectrctype function event thisrctype urepeats option selected val consolelog rctype thisrctype thiselementsurepeateverybyweek false thiselementsurepeateverybyday true thiselementsurepeaton false thiselementsurepeatby false else thisrctype view use backbone model backbonestickit realize two way databinding also use issues qa please use thanks hi nicknaso checked backbonestickit getting bind elements backbonestickit provide short example great help hi elements must backbone model write little example base structure follow please refer styckit documentation rest really exaustive kinds discussions best one channels questions working backbone general discussions', 'date': '2015-12-20T03:50:17Z'}"
"16702",16701,"{'data': 'extending collectionprototypefetch collection comes malformed project place work need global error handler collectionmodel fetch errors models problems try extend fetch method collection prototype collection comes malformed cant tojson collection anymore default error fetch var originalcolfetch backbonecollectionprototypefetch backbonecollectionprototypefetch function options options var originalerror optionserror optionserror function collection error request originalerror originalerror collection error code extend collection fetch moment calling fetch arguments code model pretty similar works guys know could thanks create jsfiddle codepen example demonstrating problem hard tell without actual code malformed means remove custom code work fine also github issues nt place debugging help please try stackoverflow gitter channel posting issue', 'date': '2015-12-15T13:33:26Z'}"
"16703",16702,"{'data': 'run test cases play framework new play framework juniti migrated play framework want write test casesi see result console play testtestonly testdemo command total test cases many got failedpassed able see test result browser working', 'date': '2015-12-14T05:18:43Z'}"
"16704",16703,"{'data': 'cobertura delta changes testing hi already post cobertura issue last post also need report generation delta changes thanks advance hi jridgewell know close without reply chance automatic responses new issues saying usual backbonestackoverflow thing maybe like', 'date': '2015-12-12T08:28:27Z'}"
"16705",16704,"{'data': 'cobertura manual gui testing maven hi trying generate reports gui manual testing using cobertura need use without junit done instrumenting class using cobertura instrument generate instrumented classes manual testing shows data stored ser file even server shutdown help come issue thanks advance hi jridgewell know close without reply nothing backbone agree jridgewell', 'date': '2015-12-12T08:26:07Z'}"
"16706",16705,"{'data': 'internal byid index collections wrong model change event model change event attribute changes internal index containing collection invalid model obtained method even though id attribute already set nonintuitive internal indexing collections transparent end user returns null safe assume model id exist collection internally issue caused delayed firing collection method maintains index bound event model level handlers invoked events processed making collection update index change handlers executed please see example class entry extends backbonemodel initialize gt change e gt consolelog onchange model eid windowcollectionget eid windowcollectionget ecid windowcollectionget ecid id class collection extends backbonecollection model entry initialize gt change e gt consolelog onchange collection eid windowcollectionget eid windowcollectionget ecid windowcollection new collection entry collectionadd name unsaved entryset name saved console output please note model change handler collection invalid state produced returns meaning object id actually collection also second line shows inconsistency event bound collection level behaves correctly use model passed listener almost impossible fix updating hash done inside another listener guarantee called see point sometimes case possible use model passed listener high level think way collection internal indexing done transparent user whether implementation done via simple array search ie via hashindexing method really matter user object given id collection returned returned neither case result object different id one searched currently inside model callback possibility know may hard fix current implementation maybe warning quirk docs would help others may fall always possible use model passed listener long read kanban tool global collections acting identity map stored objects time multiple ui components clean interface initialization requiring objectid input ie upon initialization look objects global collections encountered issue objecta saved handler new ui subcomponents created referencing objecta id components could find id global collection even though high level think way collection internal indexing done transparent user whether get implementation done via simple array search ie id first thismodels mid mcid id via hashindexing essentially due landed instead getting pass model', 'date': '2015-12-09T14:58:51Z'}"
"16707",16706,"{'data': 'module conventions backbone libraries process refactoring code backbone codebase leverage new features one features excited module system introduced still playing around different bundlers able load current browsers nt support yet curious see people using backbone conjunction modules seen two approaches regards underscore jquery backbone libraries assuming following html file html load libraries onto global window object access via window object seems like traditional way declaring library dependencies nt require adding boilerplate imports custom backbone filesmodules javascript file mainjs import oneview onejs import twoview twojs access backbone via global var new backbonemodel var new oneview var new twoview explicitly import libraries new module create explicit individual file clear dependent unit test file isolation dependencies stated selfcontained feels kind bloated though include imports custom backbone file type format also play nicely browserifywebpack bundlers also feels like languages module systems work javascript file onejs import jquery import underscore import backbone backbone export default oneview backboneviewextend el one javascript file twojs import jquery import underscore import backbone backbone export default twoview backboneviewextend el one javascript file mainjs import jquery import underscore import backbone backbone import oneview onejs import twoview twojs access backbone via global var new backbonemodel var new oneview var new twoview could probably combine jquery underscore backbone imports one helper module exports three would one export curious see anyone else found useful conventions wanted discuss tradeoffs experienced two methods think second better cleaner future reader know using backbone important things clear bad idea webpack define plugin really question stackoverflow mailing list personally prefer import everything way much explicit easier refactor explicitly import libraries new module create', 'date': '2015-12-09T04:15:06Z'}"
"16708",16707,"{'data': 'route bug user pushstate history link home hope route home fact route homea please check please use stackoverflow mailing list questions github issues maintaining framework', 'date': '2015-12-09T01:36:01Z'}"
"16709",16708,"{'data': 'route arguments properly parsed hi based documentation following route function handles route defined yes arguments receive based url hash give url hash tab path null null myselftiti titi null myselftititata titi tata front tata based documentation nt get tata think parsing issue proper syntax future please try stackoverflow mailing list gitter channel debugging help might want add example docs trips well definitely nt enough routing examples general', 'date': '2015-12-07T13:26:22Z'}"
"16710",16709,"{'data': 'routers bindroutes initialize function call would nt better call bindroutes initialization try use objectmethods route object initialization objects initialize method routeobject looks like causes error object nt exist time bindroutes call currently using small workaroud set route initialize method call bindroutes manually initialization pretty much always last however may interested case though could define routes initialize using could also potentially pass routes instantiating assuming object question point thanks response thought special case makes sense call bindroutes initialization something may depend initialize method convention always call end constructor like said closed', 'date': '2015-12-03T18:15:48Z'}"
"16711",16710,"{'data': 'amd mode backbone router error backbonerouterextend initialize function thisbind route function consolelog routes home home function consolelog console log want log order router calls goes callback routertrigger route home args routertrigger route args backbonehistorytrigger route args callback always called first would nt affected amd good job bug find nov changed fixed bug amd commonjs bug still exist', 'date': '2015-12-03T06:07:54Z'}"
"16712",16711,"{'data': 'objectprototype collisions model values collectionbyid lookup issue seems related also happens values well keys firefox create collection uses field id lookup lookup return wrong value value models idattribute also value objectprototype example referenced issue people mentioned using prototype names default properties understand attribute values limitation nt always control values may example javascript var backbonemodelextend idattribute type defaults type name var new type watch name watch var new type name var c backbonecollectionextend model var collection new c add models collectionadd collectionadd try get model type watch consolelog collectionget watch consolelog collectionlength log function watch log example happens firefox chrome see behavior add following javascript var new type constructor name constructor collectionadd consolelog collectionget constructor log function object native code collectionget byidobjectprototypewatchset get watch model never added little ugly could something like following try add pr change well tests later today missed issue also seems related also difference affects values field model opposed keys attributes looks like found issue issue seems solutionworkaround nt using arbitrary strings model ids leave open imagine marked duplicate closed shortly yup alternative run checks every lookup comment notes would expensive hot path potential backbone might built around maps sets high enough priority right though stick js best practices take care keys could also others prefixing keys namespace emulate hash plugin might look something like following js const prefix bb const basemodel backbonemodelextend get attr return backbonemodelprototypeget prefix attr set attr value opts typeof attr string attr prefix attr return backbonemodelprototypeset attr value opts', 'date': '2015-11-30T18:54:47Z'}"
"16713",16712,"{'data': 'backbone longer used browserify environment without jquery project using backbone dependency nt use jquery everything worked fine backbone tried upgrade backbone build became broken throw er unhandled error event error find module jquery usersdvsdropboxcodecubnodemodulesbackbone process ondir load onex fsreqwraponcomplete using latest versions browserify nodejs tried backbone versions working build latest compatible version seems solved problem passing exclude option browserify described apparently nt needed backbone versions older needed thanks everyone help', 'date': '2015-11-28T16:26:21Z'}"
"16714",16713,"{'data': 'identify set reverse normals programmatically using arcobjects working project deliverables dgn esri multipath conversion dgn multipath arcmap noticed facades normals reversed results looks likes portions multipatch missing fix faces inverted programmatically please suggest fix issues also provide interfaces help resolve issues hi justin please let know request closed without answer justin ridgewell mailto notifications githubcom sent saturday november pm jashkenasbackbone cc chandrasekhar guda subject backbone identify set reverse normals programmatically using arcobjects closed reply email directly view github disclaimer email message sole use intended recipient may contain confidential privileged information unauthorized review use disclosure distribution prohibited intended recipient please contact sender reply email destroy copies original message check attachments viruses opening views opinions presented email author may reflect opinion cyient affiliates nothing backbonejs', 'date': '2015-11-28T06:11:19Z'}"
"16715",16714,"{'data': 'collectionset behavior changed change changes behavior collection method return falsy value empty collection collection blank model intended change personal consideration empty model case unexpected unwanted behavior good question looks like oversight part want work pr', 'date': '2015-11-27T11:25:15Z'}"
"16716",16715,"{'data': 'unable find elements inside jqplot canvas graph want write automation script loads webpage moves control graph find tooltip corresponding bar clicks bar find title next page please suggest tool could perform tasks major problem per findings inspecting graph elements hence unable use protractor selenium plus using sikuli also efficient approach large number graphs capturing expected results would tedious task please help regard nt think proper forum discussion tends backbonedevelopmentrelated topics maybe try asking question stackoverflow elsewhere', 'date': '2015-11-26T12:54:32Z'}"
"16717",16716,"{'data': 'collectionremove nt remove given models ugly flexbox reason want append fake models end collection even fetching models sync remove previous fake models add new ones end anyways issue onsync gt modelstoremove id consolelog modelstoremove modelstoremovelength prints child child child child child expected remove modelstoremove id consolelog print right prints child cid child actually present first list add fakecount someone could shed light issue appreciate got work properly using issue seems related fact several models exactly except cid using duplicate break instead give unique ids identify property like ok thanks', 'date': '2015-11-25T15:36:02Z'}"
"16718",16717,"{'data': 'upload file using backbonejs spring mvc jpa backbonejs application want upload file using backbonejs please tell want try backbone gitter room general support agreed questions working backbone general discussions', 'date': '2015-11-21T14:42:31Z'}"
"16719",16718,"{'data': 'backbone modelviewcollection extend feature make deep copy extend common features declared separate objects extend merge overwrite eg myviewevents gives easily solved merge method extend use merge merging properties yes prototypes work javascript please search issues background', 'date': '2015-11-19T19:49:20Z'}"
"16720",16719,"{'data': 'specflow used crossplatform applications hi couple applications different platforms java wpf java webservices need end end automation application want use specflow could please guide way use specflow crossplatform applications many thanks neha', 'date': '2015-11-19T09:53:28Z'}"
"16721",16720,"{'data': 'subcollection memory leak single model multiple collections adding single backbonemodel multiple backbonecollections collection adds event listener added model addreference reference prevents collection garbage collected every single model explicitly removed collection application depends creating many temporary collections grouping filtering results reuse extended collection methods results containing already existing models base collections like see temporary collections garbage collected reference gets discarded via delete leaving scope instead aggregating references every single temporary collection within every model preventing ever getting discarded long model alive solving problem calling reset every temporary collection thereby removing event listeners would major inconvenience bb concept enabling us use temporary backbone collections without forcing us cleanup jsfiddle demonstrating issue watching debugger timeline running loop see something like hi talontr correct happen purpose models part collection ca nt clean temporary models remove references model else would use models collection far understand model holds collection reference primarly eventbinding since collection offers many options connected event handling option create collection eventunaware would great feature way create onetimeusage collections sorting bucketing bells whistles collection offer without steady increase memory usage caused nongarbagecollectable collections looking wrong perspective model event binding nt issue collection collection reference models array models memory buildup seeing keep adding models collection ca nt garbage collected empty collection either throw away collection instance throw away collection model references thanks jridgewell answer unfortunately nt provide insight looking non empty collectionmodels array reason collection get garbage collected reference left last line removes last existing reference singlecollection gets garbage collected along models thats expected behavior favor take second look fiddle adding model many collections instantly get discarded var lt since singlemodel already backbonemodel time one model within heap delete command reference tmpcollection left leaving removed next garbage collection cycle even collections model array emtpy point memory buildup see none tmpcollection collections ever really discarded add singlemodelevents hence consolelog singlemodelevents end fiddle outputs even without variable pointing tmpcollection ever created garbage collector ca nt discard collections events entries thanks advance patience sure backbone right library use case try library like crossfilter need lot aggregation filtering thanks tip really filtering massive datasets otherwise happy backbone whole problem arose started rewrap collection function results filter collections returning filter result new collection instance class enables function chaining well using backbone collection functions extended collection functions great way work backbone collections assuming intermediate collections get discarded scope left instead backbone preserves event references within matching model simple solution would prevent intermediate collections attaching event listeners like huehnerhose proposed ah understand simple solution would prevent intermediate collections attaching event listeners like huehnerhose proposed try overriding nothing private method nt guaranteed stay thats less exactly moment removing added collection listeners case rewrapped collection might break next backbone update disablemodeleventlistenerflag false addreference function model options thisoriginaladdreferencecall model options surprised find backbone nt offer anything like underscores chain method would cool feature unfortunately fact collection registers models prevents us creating good concept even pr providing true backbonecollectionchain discussions single model multi collection relationships past eg occurs backbone nt clear handles', 'date': '2015-11-16T10:03:24Z'}"
"16722",16721,"{'data': 'hash incorrect safari pass path using unicode string navigate method safari pass path using unicode string method like hash incorrect output tracked code caused method call stack created method like navigate decodefragment updatehash fragment passed decoded hash also searched commit history added ps english good although trying improve seems working provide jsfiddle showing error notice please open safari record safari record chrome seems fairly similar described looks like safari buggy implementation assignment windowlocationhash 北京 unicode ac faced issue ukrainian chars well log cityname їє indexhtml line log locationhash citywt indexhtml line affects nonlatin chars addinig encodeuri updatehash assigning new hash fixes issue safari browsers links look like indexhtml city ba ac locationhash encodeuri fragment sure ok send pull requests found better solution update tests done green faced issue safari sample looks like test unicode symbols hash already written passes safari research figured windowlocation emulated tests html element assigning urlencoded hash worked correctly afaiu hash part uri unicode characters encoded assigning unicode string probably avoided safari quirk another reason original authors jsfiddle latest using hash encoded name consistent safari chrome', 'date': '2015-11-13T10:10:16Z'}"
"16723",16722,"{'data': 'doverilog installed doxverilog also downloaded source directories doxygen website setup doxygen downloaded using cygwin along installation bison flex graphviz packages windows also installed unxutills followed general steps provided readme file folder doxverilog run command cygwin run administrator displays different messages messages provided messages user userpc patch lt linuxpatch ca nt find file patch input line perhaps used wrong p strip option text leading index utilcpp utilcpp revision utilcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index doxygencssh doxygencssh revision doxygencssh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index navtreejsh navtreejsh revision navtreejsh arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index definitioncpp definitioncpp revision definitioncpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index configoptionscpp configoptionscpp revision configoptionscpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index ftvhelpcpp ftvhelpcpp revision ftvhelpcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdldocgenh vhdldocgenh revision vhdldocgenh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index indexcpp indexcpp revision indexcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index memberdefh memberdefh revision memberdefh arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index definitionh definitionh revision definitionh arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdlparsery vhdlparsery revision vhdlparsery arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdldocgencpp vhdldocgencpp revision vhdldocgencpp arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index filedefcpp filedefcpp revision filedefcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index imagecpp imagecpp revision imagecpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index doxygencpp doxygencpp revision doxygencpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index configl configl revision configl arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index utilh utilh revision utilh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index imageh imageh revision imageh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index classdefcpp classdefcpp revision classdefcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index htmlgencpp htmlgencpp revision htmlgencpp arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index typesh typesh revision typesh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index memberdefcpp memberdefcpp revision memberdefcpp arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index translatorenh translatorenh revision translatorenh arbeitskopie file patch skip patch skipping patch hunk ignored ca nt find file patch input line perhaps used wrong p strip option text leading index vhdlscannerl vhdlscannerl revision vhdlscannerl arbeitskopie file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index libdoxygenproin libdoxygenproin libdoxygenproin file patch skip patch skipping patch hunks ignored ca nt find file patch input line perhaps used wrong p strip option text leading index libdoxygenproin libdoxygent libdoxygent file patch skip patch skipping patch hunk ignored run following command messages following messages displayed messages run following command following messages dislayed messages please help problem thankyou', 'date': '2015-11-12T19:34:35Z'}"
"16724",16723,"{'data': 'backbone get route name execute method javascript backbonerouterextend routes routes filters function consolelog arguments basic router navigating however output execute method thought name argument route name see empty string match documentation edit title ca nt get name backbonerouter seems designed feel nomenclature bit misleading goal external modules different routes since use amd module loading might something like javascript define function var model var view return function boilerplate mvc whatever model new model view new view javascript define backbone filtermodule function backbone filtermodule return backbonerouterextend routes filters filtermodule exactly code get idea trying accomplish unclear want route event also carry route name hmmmmmmmm something like architecturally speaking fan javascript backbonerouterextend initialize function thisroute filters filters filtermodule nt like seems blur line factory typically constructor typically could move calls route outside object though feels like bit much open ideas', 'date': '2015-11-11T19:21:55Z'}"
"16725",16724,"{'data': 'information update event collection duplicate edit disregard duplicate apparently nt know search issues instances triggered collection within method within method code access following information models added collection none method local variable method models removed collection local variable method local variable method models changed collection none method local variable minus method included options event would possiblesensible information included allow optimised bulk operations rather respectively', 'date': '2015-11-09T00:11:10Z'}"
"16726",16725,"{'data': 'delegateevent documentation example irrelevant delegateevents documentation example code javascript var documentview backboneviewextend events dblclick open click icondoc select contextmenu icondoc showmenu click shownotes togglenotes click title lock editaccesslevel mouseover title date showtooltip render function elhtml thistemplate thismodelattributes return open function windowopen thismodelget viewerurl select function thismodelset selected true description example view displays document search result might look something like sure code related topic description confusion example demonstrating lay view using hash described earlier section mapping dom events view methods backbone extracted documentcloud example may bit specific documentcloud use case another example think would make sense bad sure missed first paragraphs nt yesterday looking keyword thing explaining usage code description posted remember anyways', 'date': '2015-11-08T09:06:36Z'}"
"16727",16726,"{'data': 'write sql queries inside active record new nt know write sql queries help highly appreciated', 'date': '2015-11-04T11:52:08Z'}"
"16728",16727,"{'data': 'backbonejs viewremove sorry poor english project use backbonejs execute viewremove throw exception obj null debug find occur line backbonejs eventsstoplistening method listeningobjoff name callback obj null please make jsfiddle case thanks nt sound related bugfix addressing test see still getting issue seems like closed', 'date': '2015-11-04T07:14:54Z'}"
"16729",16728,"{'data': 'collectionremove behavior previous versions model removed collection first cleaned index trigger event okay first remove model trigger clean index thus event handler model still present index absent collection resulting successful leads weird things like infinite loop trying remove model remove event handler specific reason triggering remove collection inconsistent state bug javascript removemodels function models options var removed var lt modelslength var model thisget models model continue referring yes guess cool feel free weigh thanks invitation quite recently decided nt need dependency backbone framework would rather implementation collections fun tickets', 'date': '2015-11-03T00:39:18Z'}"
"16730",16729,"{'data': 'objectprototype properties conflict run issue today firefox added support new function objectprototype unfortunate use watch name attribute model problem caused model constructor line fact lodash defaults implementation sees want override one found sure issue backbone lodash firefox one thing sure avoid today magic properties like etc really anticipate word forbiden future nt like idea updating app future whenever one favorite words get banned ooo good find dupe others nope nt setting attributes construction js var model function attrs attrs defaults attrs result defaults var new model hasownproperty test mattributeshasownproperty test gt false js var model new backbonemodelextend defaults watch true consolelog typeof modelattributeswatch boolean chrome function ff nt name keys watch seems fairly prescient creating model arbitrary keys nt mercy runtime use right related related slightly issues conflicts properties nt define one prevents creating model reserved properties yeah agree justin would consider bug aside using objectcreate null place comes worms would propose use times need argument orders adjusted feels like halfsolution drops readability fine go still think avoid et al app least could modify check notskip assignment existing value firefox experimenting making nonwritable would nt classify bug behaving design anything request would enhancement change changing introduce subtle bug apps relied behavior let tread carefully would nt effect case behavior assign even value exists value still assign change allow assigning values exist something like jdalton mean referring case js var model backbonemodelextend defaults foo true var model new model foo undefined defaults modelget foo true extend modelget foo undefined extend would preserve undefined adam modelextend differs semantics extend extend foo undefined defaults foo undefined thu oct pm adam krebs notifications githubcom wrote jdalton mean referring case var model backbonemodelextend defaults foo true var model new model foo undefined defaults modelget foo true extend modelget foo undefined reply email directly view github mean referring defaults behavior megawac aware expressionless referring line checking source value instead destination value well escalated quickly expecting simple solution like used would bad solution reason could come want support use cases developer intentionally creates prototype chains really wants inherited properties assigned attributes would bit strange usually things interested inherting prototype methods fields would like treat attributes model perhaps thing really like use let developer decide many properties inherited want treat attributes third approach perhaps stupid really want treat fields even worth attribute criterion decide prefer value argument passed constructor intuitively match developer intent specified attribute explicitly constructor argument used leads following idea let us traverse prototype chains find lowest common ancestor compare values fields values lca reading code bit puzzled merging uses forin loop definition iterates fields certainly function set reason get conflict check propertyisenumerable objects one implicitly iterating', 'date': '2015-10-29T19:03:10Z'}"
"16731",16730,"{'data': 'features x use x add bug fixes x model still collection regression x model id regression x returning regression x friends regression maybe deopt underscore methods containing add add event feedback conflicts cc paulfalgout smile well jeremy currently taking americas bike believe decision falls braddunbar cut release pretty ugly hacks sure necessary scaled back deopting check arguments check nt necessary think go release since nt imagine releases rather start merging prs nonbreaking generic people choose incorporate without redoing entire app think pretty good solution particular objection arguments check nt necessary right referring presplit still fan rather start merging prs got mind complete overhaul something gradual think pretty good solution particular objection responding clarity adding needed bugfix updates remaining new features add preinitialize add update event feedback think cut unless prs ready merge looks like pr fallen idle merge conflicts agreed think ready go anyone want draft pull request changelogdocumentation updates ping braddunbar try get pr tonight usually paulfalgout smile first one pr wins ha yeah jdalton take bit snowed week nt get around jump later draft changelog closing', 'date': '2015-10-27T22:28:25Z'}"
"16732",16731,"{'data': 'backbone object duplicated imported backbone imported file new copy created time consider files routerjs javascript import backbone backbone backbone export default backbonerouterextend stuff mainjs javascript import backbone backbone import router router backbone object new router trigger router router using different copy backbone backbonehistorystart make test another library like jquery always object never duplicated looked source seeing causing backbone get duplicated time may try later though figure cause make pr assuming would wanted nt see would intentionally duplicated looks like problem module loader setup packagejson dependencies usually marionette depending different version backbone one packagejson try stackoverflow mailing list gitter page debug backbone nt anything special', 'date': '2015-10-27T04:02:28Z'}"
"16733",16732,"{'data': 'backbone partial view rendering cases relatively new backbone running problem using backbone dustjs template looks something like gt appincresponsemessage button get user details partial eq key datasuccess value true success eq js looks like function called event occurs post returns successfully indexdust triggers event post event backend thislistentoonce thismodel sync thisprimaryviewsuccess render whole view thislistentoonce thismodel error thisprimaryviewerror thismodelsave data x responsevieweventtrigger function event button click triggers event post event backend thislistentoonce thisresponsemessageviewmodel sync thisresponseviewsuccess render partial view responsemessagedust thislistentoonce thisresponsemessageviewmodel error thisprimaryviewerror thisresponsemessageviewmodelsave data x primaryviewsuccess function model response thismodelset data responsedata thisrender responseviewsuccess function model response thisresponsemessageviewmodelset data responsedata consolelog thisresponsemessageviewmodel thisresponsemessageviewrender work cases implementations callback function belongs model whole page whereas model partial question works perfectly fine cases one case render partial latest model values click button executed click another button trigger post successfully comes stores model show frontend still true whereas show behavior refresh page works perfect called taking latest model changes spent days nt understand wrong thanks time jridgewell jashkenas hi supritashankar kind request best left one channels questions working backbone general discussions recommend trying stackoverflow jridgewell put first also bounty question', 'date': '2015-10-25T04:08:47Z'}"
"16734",16733,"{'data': 'collectionremove requires updated documentation fix according documentation remove model array models collection return seems part returning removed models always case latest stable release well edge version expected based documentation get back array always even array empty would allow things without worry return type problem actually returning different value types depending pass arguments see become issue open browser console backbone loaded attempting following trying following operations sure recreate collection time last one get really becomes issue since adds new item collection even though nt want add anything try see collection property increase recommendations resolve update documentation clarify various return types returns back update always return array regardless input arguments update add anything passed first argument added jridgewell could return array even empty removed nothing get back empty array whoops always returning array', 'date': '2015-10-22T22:18:58Z'}"
"16735",16734,"{'data': 'event documentation add arguments documentation catalog events special event fires triggered event passing event name first argument would great something added specify arguments passed trigger function also passed listener function want work pr fjanon jridgewell improved documentation please let know clear fix pulled master branch issue closed', 'date': '2015-10-21T13:36:43Z'}"
"16736",16735,"{'data': 'historyupdatehash correctly encoded fragment breaks uri safari browser fyi coding first backbone marionette project run strange uri encoding problem means far backbone professional maybe getting something wrong problem description following route marionette router handles searches get style query parameters trying persist application state need url fragment able handle special characters like ö ä ü correctly therefore encode query eg loccity berlin amp loccty münchen call works perfectly browsers testing safari encountered navigation routine fragment decoded given backbonehistoryupdatehash updates windows location point safari desktop mobile version encodes given fragment iso query consumed javascriptbackbone anymore break code urierror calling decodeuricomponent backbonerouterextractparameters find much information web call help obvious bug anywhere got something wrong please give hint already checked encoding sides documents server delivers correct encoding well headers also say braddunbar mind taking look jirgn looked today able replicate reopen provide jsfiddle causes error', 'date': '2015-10-21T12:39:51Z'}"
"16737",16736,"{'data': 'update new user caldroid android application used caldroid library get enter user details purticular day calander view first user enter details save database used database called activeandroid orm issue try enter details another user showing previous user enterd details aslo add many user means show first enterd details dont know fix bug one help issue', 'date': '2015-10-21T09:01:32Z'}"
"16738",16737,"{'data': 'dropping support jan ms essentially dropping support mind jquery lodash dropping support releases let discuss dropping next major bump backbone yep seems like good idea dependencies drop support backbone implicitly lose support anyway syncing seems like good plan specifically need fix finally use still ca nt use could get rid iframe end missing supporting older browsers besides able adopt various methods scanned backbone see fixes ie lt old ie amp earlier dropped iframe issues affect us moving forward things besides able adopt various methods got rid underscore remember mostly objectcreate see iframe issues affect us moving forward things dropping support means less code less workarounds less testing overhead generally less headaches allows expanding features new lowest common denominator instead boxing features doable got rid underscore remember mostly see suuuper handy though instead boxing features doable give example happening currently seems mostly talking minor code changes anything fundamentally different backbone iframe section could removed ton code give example happening currently really involved daytoday backbone maybe jridgewell braddunbar insights know developing lodash issue scoping features lowest supported environment comes plenty things like mapsetweakmap null prototypes etc seems mostly talking minor code changes anything fundamentally different backbone iframe section could removed ton code reduction code complexity nice though see something like supporttriage may bigger win know debugging older ie issues nt easiest many devs lack vms may volunteering oldiesupportcontact cool guess iframe section could removed ton code nt discount history fixes done iframe tried refactoring router code times always frustrated legacy code really involved daytoday backbone maybe jridgewell braddunbar insights thankfully jquery took brunt ie code fixes history code know work around thankfully jquery took brunt ie code fixes history code know work around jquery moves away support backbone take support burden fixes jquery moves away support backbone take support burden fixes nah enddev code views ajax requests backfill anything missing updating latest jquery clarify backbone wo nt drop support even though jquery amp microsoft also wo nt put effort extend support beyond history correct anguished get rid ie workarounds history certain extra features gain dropping support certain wo nt gain anything keeping past end support could define gettersetter stop news jquery somewhere know nt support neither stopping development branch paulfalgout yes plan branch official post yet using lot fallbacks stuff airbus company moving companies like make jump think die finally', 'date': '2015-10-20T20:31:00Z'}"
"16739",16738,"{'data': 'model id change collectionget event order change id triggered onmodelevent swapped id collection call collectionget fails var new bbmodel var c new bbcollection model cadd fails con change id function x consolelog cget xattributesid works con change function x consolelog cget xattributesid mset going backbones source code set method changes triggered changed attributes one one later change event fired see assignments happening two points nt know id getting updated two points way looking get updated model works listening event change happens event need model follow anoopmd suggestion', 'date': '2015-10-18T13:59:58Z'}"
"16740",16739,"{'data': 'modelget method returns objectprototype methods javascript var new backbonemodel mget tostring gt function tostring native code think would correct receive case see many duplicates', 'date': '2015-10-17T23:34:23Z'}"
"16741",16740,"{'data': 'entity type part model current context using unitofwork entity framework mvc created service layer repository controller getting entity type part model current context step services public interface idocumentservice iservice int uploaddocuments httppostedfilebase file document documents int contractid public class documentservice service idocumentservice repository public static class documentsrepository private static idatacontextasync test new datacontext mymodel getting error one public virtual void insert tentity entity entityobjectstate objectstateadded dbsetattach entity contextsyncobjectstate entity', 'date': '2015-10-16T20:18:07Z'}"
"16742",16741,"{'data': 'error opencv stitching project building opencv stitching project adding available files project gets build without error error run without debugging using static libraries error shown screenshot debug program throws following message going line line error debugged firstchance exception access violation reading location handler exception program may safely continued please answer question soon possible thankyou advance', 'date': '2015-10-16T05:22:41Z'}"
"16743",16742,"{'data': 'collection model attribute attribute collection expects constructor opposed attribute array model instances personally find syntax confusing would prefer one constructor attribute uppercased formats supported take may good reason syntax would find helpful know thoughts see personally hate lowercased name sigh', 'date': '2015-10-01T13:11:53Z'}"
"16744",16743,"{'data': 'unit tests using qunit syntax unit tests using qunit syntax ie global instead using object etc otherwise qunit nt yet however probably know qunit syntax fact available qunit consuming possible migrate everything order make eventual consumption qunit easier unless strong objections raised discussion happy migrate tests tool makes job lot easier batches nt matter awesome looking forward pull strong preferences whether batches think would prefer batches avoid possible merge hell scenarios better guys', 'date': '2015-09-30T01:38:53Z'}"
"16745",16744,"{'data': 'yii extension display selected value update view issue query trying solve stuck point please solve mystery using extension fortunately searchable drop like start typing loads stored data business table query show selected business update view currently address view four fields sector city business street getting business name using extension working update address every stored field data comes except business code addressviewsform var model address var form cactiveform beginwidget bootstrapwidgetsbsactiveform array id gt addressform please note enable ajax validation make sure corresponding controller action handling ajax validation correctly call performajaxvalidation commented generated controller code see class documentation cactiveform details enableajaxvalidation gt false fields required errorsummary model textfieldcontrolgroup model streetnumber array size gt maxlength gt error model streetnumber labelex model businessid widget array name gt address businessid data gt chtml listdata business model findall id businessname whole available list htmloptions gt array placeholder gt search business name options gt options selected values multiple gt multiple style gt textfieldcontrolgroup model sector array size gt maxlength gt error model sector textfieldcontrolgroup model city array size gt maxlength gt error model city isnewrecord create save endwidget', 'date': '2015-09-29T21:23:03Z'}"
"16746",16745,"{'data': 'add underscore methods findlastindexsortedindex finding writing much better want work pr sure submitted one though sure approach adding iteratee value arguments reverse order underscore methods thoughts closed', 'date': '2015-09-28T21:56:29Z'}"
"16747",16746,"{'data': 'changedattributes behaving weird using write computed field helper issue returns false expected least reproduced pen javascript consoleclear let backbone windowbackbone var new backbonemodel let log txt obj gt documentwrite txt jsonstringify obj let lastchange mon change gt log lastchange lastchange mchangedattributes lastchange log lastchange mset search text emit false changed mset search mset search text need multiple instances code model instance use determine dependency changes computed fields expected behavior looking passing object event compare previous attributes current meaning comparing think want closer sure previous attributes behavior expected someone else want weigh stumbled upon problem today imho bug according documentation change event triggered model attributes changed changed change call handler imho compare current attributes previous ones alas internal property reset event triggered thus called parameter compares previous attributes', 'date': '2015-09-28T05:45:50Z'}"
"16748",16747,"{'data': 'npm tarball missing license license file present tarball missing guess due please add back license mit packagejson sufficient needs packagejson whole license text sufficient according license requires copy license text included reason care maintain fedora package backbone required ship license text package nt understand using npm package npm download use git github releases fedora package manager tied npm tarball downloaded makes difference problem nt contain license text answer question fedora package uses npm packages npm dependency backbone satisfied actual build output two binary packages contains actual js people nt care npm requires also provides npm metadata npm requirements satisfied common way packaging js libraries fedora nowadays spec file interested change fedora package use github tarball prefer getting bit offtopic issue putting aside fedora packaging stuff npm pull tarball include license text like hmm seems incorrect reverting sure logic keeping js library os package manager know', 'date': '2015-09-27T08:10:43Z'}"
"16749",16748,"{'data': 'multi inheritance hi project needed multi inheritance capability backbone implemented feel free give feedback positive negative feature could useful thing multiple inheritance javascript mix properties instead hum yep precisely purpose avoid mixing manually properties precisely mixing properties prototype multiple inheritance yes simulates multiple inheritance final result use many module want js test extend multi inheritance function var function return', 'date': '2015-09-25T01:43:21Z'}"
"16750",16749,"{'data': 'constructor delegateevents regression bug old backboneview var view backboneview function options thiscid uniqueid view options options extend pick options viewoptions thisensureelement thisinitializeapply arguments thisdelegateevents new var view backboneview function options thiscid uniqueid view extend pick options viewoptions thisensureelement thisinitializeapply arguments delegateevents removed many patterns rely collections models set initialize see', 'date': '2015-09-23T15:19:02Z'}"
"16751",16750,"{'data': 'collection byid hash sync removing models following removemodels function models options var removed var lt modelslength var model thisget models model continue return removedlength removed false updates collectionmodels removing model event emitted collectionbyid mapping model id model updated collectionbyid sync collectionmodels problem listener tries remove model currently removed collection case occurs uses collectionbyid determines model fact collection returns following splice clobbers model array thanks write looks duplicate though sorry missed one', 'date': '2015-09-23T14:54:48Z'}"
"16752",16751,"{'data': 'router passing object route params handler currently matched parameters passed action javascript routes folder name mode openfolder openfolder function name mode querystring stuff would like actions given object instead resembling express routing solution javascript routes folder name mode openfolder openfolder function routedata routedata name openfolder params name valueofname mode valueofmode querystring querystring amp ab could option enabled bbrouter good idea functionality base bbrouter external library tried seems working well new set tests cloned current router test make sure nothing breaks thanks could might nice addition implementation little heavyweight though way could slim thanks please give pointers heavy code might think could cleaned bit replace current logic done backward compatibility mind added stuff top existing logic would guess without looking much possible combine logic already respond diff related router changes cc jmeas great idea think folks looking feature baserouter returns hash named params query params though ca nt recall works splats evident commit referenced op dsl implementation backbone biggest hindrance feature nt planning making changes dsl implementation keep concerns separate hugely favor updating vague plan subsequent pr focused solely dsl sure ifwhen get chance anytime soon sorry jmeas done better research pretty much already implemented baserouter converting querystring object also great addition think possibly objectified rare case someone needs use raw value possibly querystring objectified query routedata rare case someone needs use raw querystring value seems like good idea comes single point entry router think giving user much information possible best open pr baserouter merge cut release p query parameters super interesting comes router two leading clientside router philosophies uirouter ember router take fairly different approaches uirouter blends query parameter rest route sense ember keeps separate also todo list evaluate pros cons approach nt reached conclusions prefer dsl working client side router ignores query params moment reason moving', 'date': '2015-09-18T20:33:48Z'}"
"16753",16752,"{'data': 'syntaxerror unexpected token p objectparse native kparsejson backbone tries call objectparse default object validate false parse false createurl url contenttype applicationjson beforesend contenttype applicationjson createurl emulatehttp false emulatejson false error e n errorthrown syntaxerror unexpected token p objectparse native kparsejson j n xmlhttprequestkajaxtransportqcorstcrossdomainsende message unexpected token p stack get stack set stack proto error parse false success textstatus parsererror url validate false xhr object proto object object validate false parse false createurl url contenttype applicationjson beforesend contenttype applicationjson createurl emulatehttp false emulatejson false error e n errorthrown syntaxerror unexpected token p objectparse native kparsejson j n xmlhttprequestkajaxtransportqcorstcrossdomainsende message unexpected token p stack get stack set stack proto error parse false success textstatus parsererror url validate false xhr object proto object closed ps mark answer correct', 'date': '2015-09-18T09:34:42Z'}"
"16754",16753,"{'data': 'chainable routes alternative interim step overhauling router could adding ability chain routes built several applications required executing routes varying combinations rendering wrote lightweight plugin handle simply wondering something community open including library rather plugin creating pull request examples implementation full documentation found example usage using dot syntax within callback names able chain callbacks executing one chained routes parameters would passed parameters respectively want include additional route middle chain intended passed parameters bracket callback nice suggestion plenty times would nt want previous routes run view edit comment page example nt need post data counterpoint could nt common method called routes need counterpoint could nt common renderpost method called routes need yes commonly solved plenty times would nt want previous routes run agreed routes would simply pass chained callback string routes simply would pass chained callback string ah note readme cool concept opinion magical problem ultimately trying solve data view dependencies metaframeworks like marionette chaplin use regions layouts help sure tack take gives flexibility control without learn esoteric router syntax aside able implement event router something like js chainedrouter backbonerouterextend constructor backbonerouterapply arguments thison route thischainedroutes', 'date': '2015-09-17T07:16:22Z'}"
"16755",16754,"{'data': 'inconsistent events callback far tell problem javascript appeventson function eventname consolelog eventname triggered works expected appeventson somethingelse function eventname consolelog eventname triggered nope gon na work eventname automatically available callback first argument listen first arg event name listen specific event first arg event name bad fixed yeah confirm really bad special event specifically prepend event name callback know event called bind listener event already know event triggered listener yeah consistent callbacks every events event name first parameter callback imo', 'date': '2015-09-15T22:32:11Z'}"
"16756",16755,"{'data': 'incorrect behavior collection method retrieving model unexisting index expect undefined value check index lt index thislength nothing index less thislength example index collection length please remove line index lt index thislength cause bug negative number indicates select end collection would indicate last item collection believe works expected need negative number indicate found suggest check calling believe works expected need negative number indicate found suggest check calling agreed', 'date': '2015-09-15T18:27:44Z'}"
"16757",16756,"{'data': 'make model attribute sync server hi saw cases store states view like dropdown countries data country list get server want add selected attribute country model need change selected value view get rendered selected attribute meanless server nt want sent server local attribute backbonemodel use set get set modify attributes local attribute also fires events sync server right way hi please use mailing list stackoverflow questions like github issues maintaining framework', 'date': '2015-09-11T02:12:15Z'}"
"16758",16757,"{'data': 'update event fails fire times use backbone react flux build application uses babel listen add remove update change events backbone collection react component collection polls server times fetch models adds collection works fine lot add remove gets fired cases models replaced avoid removed add remove fire one update component sometimes work fine sometimes wont observed situation models returned new whole collection changed problem network response verified never fires update event confirm also thisbind update function tried logging problem fire added add remove statements back statement works fine said interested addition causes react components rerender many times look issue happy give details happy look provide test case sure thing since add remove working perfectly fine sure part share debug whatever calling causes event also state collection beforehand overrided parse looks like consolelog prints response received every time fires adds removes update calling set directly fetch call fires parse calls set assume instance api calls give objects time gives adds removals time updates verified via issuing bind collection logging changes update adding found another one collection firing change event bypassed binding sync seems like hack write jsfiddle demonstrate heedster remember encountering similar issue ver upgraded ver solved problem weird issue update would fire using upgraded problem fixed added notice changelog incorrectly spelled corrected', 'date': '2015-09-08T15:59:16Z'}"
"16759",16758,"{'data': 'undocumented collectionat behavior functionality introduced documented may lead surprising results record mentioned changelog nt stop breaking app tests obscure cases would happy add sentence method doc agree reason needs stay open looks like linked pr closed', 'date': '2015-09-08T13:04:09Z'}"
"16760",16759,"{'data': 'saving model part collection sync event triggered collection able find anywhere documentation sure happens help would appreciated thanks advance docs event triggered model collection also triggered collection directly convenience allows listen changes specific attributes model collection example documentson change selected thanks gone documentation thoroughly bad', 'date': '2015-09-05T13:15:37Z'}"
"16761",16760,"{'data': 'possible get code books code words vector quantization working matlab vector quatization know vector quantization provide set code words input get code vectors used lpg loyed algorithms result locations code word want locations code book subset locations code vectors ali', 'date': '2015-09-03T19:34:42Z'}"
"16762",16761,"{'data': 'hotel booking integration using catalook hi want add hotel booking system dnn site concept discussed given link tried hotel booking using catalook catalook store found hotel related fields like number bed rooms beds bath rooms accommodates property type ammenities etc clear add custom field catalook product detail page filtering things using latest catalook version dnn need additional fields adding product hotel management sure booking hotel system using catalook module please assist move forward configuring online reservation system using catalook module urgent please thanks advance thanks amp regards jay', 'date': '2015-09-01T11:01:03Z'}"
"16763",16762,"{'data': 'modelprototypeget counts properties hi stumbled following behaviour returns constructor function object rather expecting method filter properties return also hold true line underscore filter properties without model object would true hash thoughts see something address objectcreate might worth looking drop polyfilled black magic think prior art exoskeleton see etc general say right generally nt realworld use case naming keys constructor hasownproperty keep mind object hash change easy comes minimal side effects let bite bullet may good reasons eventually drop using properties like nt one let leave may good reasons eventually drop using properties like constructor nt one let leave trouble actual current project made sad case treatment overwrite collection', 'date': '2015-09-01T10:16:48Z'}"
"16764",16763,"{'data': 'router reloading page hash changes chrome created simple router application var backbone require backbone var router backbonerouterextend routes codename path onroute onroute function var p documentcreateelement p var args arrayprototypeslicecall arguments pinnertext argsjoin documentbodyappendchild p new router backbonehistorystart using run duplicate open developer tools address bar type random fragment see address bar type next random fragment see ok seems normal close developer tools repeat steps couple times sure occasionally type fragments used router continually reloading page fragment changes expected reload page fragment changes seems like reason backbone router behaves correctly developer tools open poorly closed safari also seems suffer lesser degree maybe related note seems apart known webkit issue loading url fragment twice may issue chromewebkit testing reveals behavior ok fwiw issue appears caused combination chromewebkit catchall type route like backbonerouter something like running results expected behavior router removing flag also results correct behavior interesting turning chrome developer tools somehow fixes problem live mode referring changes neat side effect backbonehistory longer uses jquery event methods pushstate hashchange listeners native way changing worked eventually found rooted chrome instability shutting chrome restarting fixed behavior', 'date': '2015-08-28T22:07:57Z'}"
"16765",16764,"{'data': 'potential regression setting directly part upgrading noticed issue app directly setting model nt think best way set id setting additional properties via later code started return minimal example expected behavior output calling wiping appears commit run fiddles see output console sh sh undefined resolved issue changing code call wondering setting directly continue work thanks cc jbrad setting directly never really supported experience always readonly property keep needing every single time said could something like following least avoid case messing diff diff git abackbonejs bbackbonejs index abackbonejs bbackbonejs thisid thisget thisidattribute var id thisget thisidattribute id null thisid id id directly probably way go sometimes got work got setting directly supported fine issue closed well least got documented others run problem upgrading sometimes got work got need mutate clientside nt typically something set sent server need mutate id clientside nt typically something set sent server reasons specific code within app agree smell problem added idattribute models assigned id removed direct assignments think works lot models little problematic regression problem error console effect components disappear application lots different cases lines code', 'date': '2015-08-26T15:06:41Z'}"
"16766",16765,"{'data': 'events work recently write city select component demo using backbonejs windowcitymodalview events click spanconfirm confirm failed windowcityview events click confirm works one tell wrong code fix thank much code jsfiddle please use stackoverflow debugging github issues maintaining framework', 'date': '2015-08-26T14:17:15Z'}"
"16767",16766,"{'data': 'events work recently write city select component demo using backbonejs windowcitymodalview events click spanconfirm confirm failed windowcityview events click confirm works one tell wrong code fix thank much code city component using backbonejs body paddingtop cityblock width height borderradius lineheight display inlineblock textalign center backgroundcolor color fff margin lt p gt clearit color marginleft textdecoration none clearit hover color fff textdecoration none addcity width height borderradius lineheight display inlineblock textalign center border solid margin cursor pointer color hide display none modalblock cityblock backgroundcolor transparent color modalblock cityblock hover backgroundcolor operator textalign center operator span width height lineheight display inlineblock borderradius backgroundcolor darkred color fff fontsize textalign center cursor pointer margin operator span hover backgroundcolor red windowcitymodalview backboneviewextend tagname table initialize function var self bindall render confirm cancel thisrender template template lt div gt city modal lt div gt lt div class modalcontent gt lt div gt lt div class operator gt lt span class confirm gt yes lt span gt lt span class cancel gt lt span gt lt div gt events click spanconfirm confirm click spancancel cancel render function elhtml thistemplate return confirm function consolelog yes cancel function consolelog windowcityview backboneviewextend tagname div events click spanaddcity addcity click confirm click cancel initialize function var self bindall render appenditem addcity confirm cancel thiscitymodalview new citymodalview thisrender template template lt div gt city list lt div gt lt span class cityselected gt lt span gt lt span class addcity gt set city lt span gt lt div class operator gt lt span class gt yes lt span gt lt span class gt lt span gt lt div gt lt div class citymodalsec hide gt lt div gt render function var self elhtml thistemplate citymodalsec thisel append thiscitymodalviewrender el return appenditem function item var itemview new cityitemview model item cityselected thisel append itemviewrender el addcity function citymodalsec removeclass hide confirm function consolelog confirm cancel function consolelog cancel windowhomeview backboneviewextend el body initialize function consolelog initializing home view thiscityview new cityview thisrender template template lt div class citysec gt lt div gt render function thisel html thistemplate citysec thisel append thiscityviewrender el return var homeview new homeview', 'date': '2015-08-26T14:16:25Z'}"
"16768",16767,"{'data': 'multiple modals opening backbone could someone help issue looks like answered future please use mailing list gitter channel questions', 'date': '2015-08-25T06:03:29Z'}"
"16769",16768,"{'data': 'passing options url function backbonesync function model collection seems like nobrainer order construct url add query params need know typemethod request options take request source javascript sync function method model options var type methodmap method nt instead javascript sync function method model options var type methodmap method missing something may want construct url add query params given certain options passed backbonesync right update url want work pr yeah would like yep would update url given params backwards compatible issues foresee tell thinking words create pull request url function needs passed params sync default pretty sizable thread read first please search opening issues essentially make use prop jqueryajax need set querystring values futzing actual url string done instance props method', 'date': '2015-08-24T22:28:46Z'}"
"16770",16769,"{'data': 'routernavigate stopped working hi using backbonemarionette webpack project using webpackdevserver server problem though nt work nothing happened error either rolling back solved problem something strange sneaked router three changes happened routing layer wager causing problem give us bit information happening hmm sure navigate inside backbonejs seems called never calling routernavigate later put consolelog inside backbonejs found two called browser using thing happens dumping backbone routers initialised seems app freezes nt get executed upon navigation works fine cases bang routing behaviour btw also break backbone marionette routing browser using post code sample using latest chrome code sample difficult actually marionette app quite complex modularised routers weirdest thing running issue end backbonehistoryhandlers array empty properly initializing approuter got exactly issue backbone filipmares backbonehistoryhandlers array empty similar problem research found two backbone versions bundled webpack project depends backbonesyphon dependent updated backbonesyphon dependency accept run npm dedupe rebuild app worked tip run webpack displaymodules know two versions bundled correct thanks tip sun oct pm luiz américo notifications githubcom wrote similar problem research found two backbone versions bundled webpack project depends backbonesyphon dependent updated backbonesyphon dependency accept run npm dedupe rebuild app worked tip run webpack displaymodules know two versions bundled reply email directly view github filip think closed issue likely described', 'date': '2015-08-24T18:27:06Z'}"
"16771",16770,"{'data': 'rethink backbone templates found pretty awesome idea using incremental dom underscore templates tiny extremely powerfull faster underscore templates react fact using almost idea like react developed google ps good idea marionette think jashkenas megawac jridgewell many virtual dom libraries wild virtualdom good one backbone continue agnostic choice templating library something specifically change way backbone views work make easier work virtual dom libs maybe consider tend take radically different view app state architecture backbone actually intimately familiar idom one reasons enthusiastic really nothing needs done support backbone treat like normal method js var view backboneviewextend template function data idom code render function stuff sorry read comment closing please feel free reopen want keep general tracker support virtual doms view unopinionated class backbone better worse know one practice codified prevents general vdom diffs container may keep container js virtualdom example code var tree setinterval function count reassigned every tick normal backbone view natural assume ca nt else event delegation breaks actually first child jridgewell admittedly nt ton experience using vdom backbone views experience mithril react one thing stands potential pitfall example looks like work great single view normal html elements manage nested backbone views way backbone combined backbone classes work quite differently vdom libraries manage nested backbone views way treat way subviews jquery detach render reattach left two something comments render method wink rerender much slower actually working getting firstclass subview support build idom wo nt apply vdom libraries need detachreattach render racehorse render backbone combined backbone classes work quite differently vdom libraries nondestructive react react much like backbone standardized yet backbone component concern react dev directly call treat way subviews jquery detach render reattach triggers reflows nt performance worse using vdom library subview management hard problem jquerybackbone nt unsolvable solutions atodds treebased descriptor approach majority vdom libraries take backbone render component concern react dev directly call could set something similar backbone problem creating backbone view typically sideeffects nt idempotent way vdom components typically implemented event delegation good example could done feeling lot easier use vdomfirst approach triggers reflows nt performance worse using vdom library jmeas actually testing ago found dom manipulations happen quickly oneaftertheother nt huge reflow penalty think browser group single reflow idea limit though virtual doms idom included actually trigger dozens reflows single render since elements modified attached dom tree detachreattach subviews nt hurt aside one reasons idom damn fast optimizing garbage collection dom manipulations manipulations certainly slower normal js react definitely right track actually manipulations causing bottleneck throwing away hundreds dom instances think elements attribute instances get created thrown away bottleneck react intelligently diffs largest source garbage fixed still suffers rendering entire virtual tree throwing away old one idom discovered away eliminate virtual tree last painful gc pretty atodds treebased descriptor approach vdom libraries take found something like mustache content attach subview entirely replace element time rerender replace original element rerender maintain element tree replace jmeas actually testing ago found dom manipulations happen quickly oneaftertheother nt huge reflow penalty knowing ton browser performance optimization say nt seem like removing readding thousands times scales large app recommendation browser vendors seen avoid touching dom nt also sure repo shows best methodology test dom performance mutationobserver nt really meant used way maybe chromium telemetry firefox performance tools topcoat pretty awesome telemetry tool built chromium would suited virtual doms idom included actually trigger dozens reflows single render since elements modified attached dom tree seems odds said one stated benefits virtual dom batching flushing changes time simply updating properties wo nt trigger reflow adding removing elements updating classnames getting computed styles etc gotten little offtopic fault happy continue gitter adding removing elements updating classnames getting computed styles etc meant hopefully adding removing bunch elements every render updating classes common gitter smile ps forked fork jashkenas backbone v ember performance demo add backbone incremental dom stunningly fast jridgewell maybe incremental dom future backbone jridgewell cool ambitions see opportunities integrating backbone incremental dom beside promoting defacto templating language wink nt think anything done majority use cases exactly analogous using html lt content gt underscoreviewtemplate template documentgetelementbyid template text idomviewtemplate function data incrementaldomelementopen div null null class box id box datanumber style top datatop px left dataleft px background rgb datacolor incrementaldomtext datacontent incrementaldomelementclose div pretty hand write several others working precompilation x gt idom using swap build target compiled function compiled idom continue use jst object however referencing templates replace jquery part use js var view backboneviewextend template underscoreviewtemplate render elhtml thistemplate thismodelattributes return var view backboneviewextend template idomviewtemplate render idompatch thisel thistemplate thismodelattributes return pretty hand write several others working precompilation x idom using template swap build target template compiled function compiled idom continue use jst object however referencing templates replace jquery innerhtml part render use idompatch kind hinting perhaps idom templating language ready bake render function backbone sets thought could certainly', 'date': '2015-08-24T05:50:38Z'}"
"16772",16771,"{'data': 'backbonehistory part public api could expect backbonehistory object exist moving added documentations documented sorry specific referring undocumented methods specifically used one devs could assume methods stay part api', 'date': '2015-08-20T23:06:13Z'}"
"16773",16772,"{'data': 'add new rows existing page please tell add rows rows click please use mailing list stackoverflow gitter channel questions github issues maintaining framework', 'date': '2015-08-20T08:21:06Z'}"
"16774",16773,"{'data': 'rethink backbonesync know numerous plugins wild override specific domain logic things like storage proxies web socket connections etc way plugins add functionality tends messy conflict one another backbone suggest reimplement custom sync added backbone long suggested plugins export custom function implemented opposed globally overriding bbsync however merit would suggest something like following adding custom sync js function predicate model options return modeluseproxy function syncfn model options sync function normal whether sync method stop syncs checked could useful storage syncs wish add data indexeddb also executing http sync var exclusivesync false backboneaddsyncmethod predicate syncfn exclusivesync sync functions could chained would nt regular conditional custom work use case would nt regular conditional custom sync work use case ding ding ding pretty big antifan middleware compared simple plugin calls needs call way override bit ugly also obvious clean backbone rides line magic allowing implementer understand happening quite well would nt want middleware approach personally megawac make backbone plugin extends backbone exactly suggested pretty common major plugin developers fall trap thrash sync environment storing access originalprevious sync way may conflict instance mixing two popular sync overrides run stack overflow issues due recursive calls load second occurs resolves default case ajaxsync thus causing resolve though could implemented plugin nt think optimal way disseminate change think core feature something implemented officially would good additional functionality baked sync could configure behaviour rather pluginchainoverride system maybe could rename enough convention like suggestion allows backwards compatibility also believe addresses megawac concerns thorough explanation got thinking differently', 'date': '2015-08-20T00:31:57Z'}"
"16775",16774,"{'data': 'collectioncreate return xhr option xhr returned instead events triggered events triggered nt let interfere request example aborting thoughts result right model control process rewrite method control xhr want request progress use see collectioncreate backbonesync fair point part promises js collectioncreate attr value model gt model created successfully error gt error happened creating locally collectioncreate attr value wait true model gt model created successfully error gt error happened creating locally server jridgewell near future tried suggested little painful modifying sync pretty much want functionality changing return xhr need copy two private function dependencies preparemodel ismodel fun something consider changing better waiting promises jridgewell talking something consider changing better waiting promises jridgewell talking wo nt changing', 'date': '2015-08-18T09:32:38Z'}"
"16776",16775,"{'data': 'remove android logger driver android logger driver driversstagingandroidloggerc used read write android logs devlog main system android lollipop logger driver loggerc removed logcat reads android logs reading writing android logs handled kernel', 'date': '2015-08-17T14:27:05Z'}"
"16777",16776,"{'data': 'error fired broken connections error event firing app reach server eg net errconnectionreset error function fetch method touched jquery version use jquery bug times browser like ff requests nt fire events xhr unlikely backbone issue jquery one mind opening issue tracker', 'date': '2015-08-17T09:08:26Z'}"
"16778",16777,"{'data': 'events hash responding jquery triggerhandler method hey working legacy code office plugin use seems use rather firing events nt ton xp maybe functionality makes sense really confused unexpected results following var testview backboneviewextend template template events customevent foo function consolelog customevent ran render function elhtml thistemplate var testview new testview testviewrender jqueryeventtrigger customevent null testview foo true example event handler bound render fires thought events bound identically appears event delegation works inside backboneview events hash intended behavior something known issue lived thanks think paulfalgout put well marionette issue backbone binds events view delegation directly js example foo customevent backbone elon customevent foo', 'date': '2015-08-15T19:13:15Z'}"
"16779",16778,"{'data': 'collection set nt intelligently merge unparsed models takes option set true call collection parse method input array well model parse method individual objects input array implies ok nonparsed data passed however nonparsed data passed line may fail correctly merge new data existing data collection particular nonparsed data wrapped way obscures idattribute failing test case illustrates issue test collection merge duplicate raw objects merge true function var model backbonemodelextend parse function data return datawrapper option indicates updated model collection object reference instead newly instantiated model potential fix might involve changing line although may elegant solution people agree bug open pull request perhaps sure something intended handled days anyone dupe closed one nt feel strongly one way oh right ids need parsed collection level nt think necessarily parse model twice fix bug make sure instantiate model earlier passed would nt mind working pr cleaner fix unless worth time know jridgewell working larger refactoring might also address make sure instantiate model earlier parse true passed issue nt want instantiate needed know jridgewell working larger refactoring collection parse might also address think approach would completely removing fetching parse collection level map result models passing pass models yes mean instantiating redundant models moving parsing issues entirely rethink parsing entirely way currently implemented quite halfassed result never used documentcloud originally imho put towards top list actually summarize let know misunderstanding anything passed technically impossible sure passed raw objects already collection without parsing since may root raw object since side effects mutate ca nt call without model instance therefore must instantiate parse every returned model eg fetching data server attempting intelligently merge new models attributes collection think result jridgewell suggestion moving parsing concerns would correct solution problem could significant performance implications also probably would nt happen alternatively short term look pull request created fixes original bug consumers apis wrapped responses nt degrade performance anyone else consumers apis root response nt experience extra parsing passes unit test suite interested running performance test suite anyone one thanks', 'date': '2015-08-15T18:25:39Z'}"
"16780",16779,"{'data': 'parse model validating modelset pojo parse true backbone model expects wrapped object api eg want work nice use parse like validate like mock model test fails modelset calls validate parsing object nt make whole lot sense say parse true parse validating workaround feel like would less confusing parse true actually work expected validate function nt option think thinking sadly gone see op reasoning', 'date': '2015-08-13T20:13:36Z'}"
"16781",16780,"{'data': 'nutch tika parsing issue trying crawl specific data per requirement using nutch tried make changes parsetika plugin got impacted make small changes compiling connectivity different classes storage parse crawl etc please suggest please direct questions gitter chatroom google group freenode irc documentcloud channel', 'date': '2015-08-11T05:39:51Z'}"
"16782",16781,"{'data': 'nutch plugin writing writing plugin writing plugin specific data crawling website amp store mongodb please guide give suggestions connect connectivity new plugin parse data mongodb', 'date': '2015-08-11T05:37:41Z'}"
"16783",16782,"{'data': 'model set docs nt explain options argument looked set method backbonemodel today perplexed see parameter method signature mention options explanation seems regression vividly remember least option documented place dupe', 'date': '2015-08-10T08:45:23Z'}"
"16784",16783,"{'data': 'documentation collection modelid wrong modelid docs backbonejsorg say method return name id attribute backbone use long painful debugging session found method actually return id instead attribute name absolutely fixed looks like fixed nt uploaded documentation yet fixed release documentation still vague assumed string name attribute expected return value ever get fixed update backbone website docs cherry pick commit ghpages mortenson updated example still wrong nt mean still returns name attribute also var library new library type dvd dvdid type vhs dvdid second object vhsid yeah fixed ishaikovsky fixed master pulled ghpages fixed still second typo ishaikovsky pointed sigh time open pull curiosity nt commit referenced pulled date head master code skipped cherrypick second typo still alive well actually looks like coming second typo mean second object fixed using shared instead dvdid appropriate else yeah could make model would set thought example getting long enough b demonstrates behavior bit better leave models right coming clarifying addition consuming knows anyway example code website saves throwing looks like bad merge ghpages fixed', 'date': '2015-08-10T08:41:41Z'}"
"16785",16784,"{'data': 'backbone truck factor part phd research code authorship calculated truck factor tf popular github repositories probably know truck bus factor designates minimal number developers hit truck quit project incapacitated work consider system trouble files become orphan ie without main author details work preprint calculated tf backbone obtained value developers responsible tf jeremy ashkenas author files brad dunbar author files validate results would like ask backbone developers following three brief questions agree listed developers main developers backbone b agree backbone trouble listed developers leave project eg win lottery less morbid c backbone characteristics would attenuate loss listed developers eg detailed documentation thanks advance collaboration guilherme avelino phd student applied software engineering group aserg ufmg brazil suppose one key dev hello guilherme thank sharing results backbone community tf seems comparatively high considering projects considered scored higher would interested know files backbone actually included analysis would guessed file cleaning process would eliminated personally would interested results would included documentation also includes ghpages branch since quality documentation deal breaker deciding make use foss project hand understand might skew results since actually takes different set skills produce high level documentation project would incapacitated copywriters got left seems definition degree code authorship limited admit read fritz et al challenge idea foss project would become incapacitated developers able influence command implementation ceased however think results accurate jashkenas recently refered god along jdalton doubt revere original authors would enough bring end backbone decided relinquish reins even declared backbone mistake started anew appears jashkenas plays executive role recent times watching project weeks time chimed comment documentation looking back commit history majority recent commits merging prs developers notably jridgewell rank analysis think backbone case sign project matured reached stage original authors transition owners stewards foss projects far anarchy people imagine fact strong andor consistent leadership common arguably important fact mature foss project would argue truck factor poorly named lower score better would hope jashkenas braddunbar left project community would quickly reorganise behind another one two developers crux idea please expand methodology deal merges analysis example commit attributed suspect analysis attributes jashkenas opinion jridgewell attributed indeed git blame function attributes file changes jridgewell author commit changed file even though file different repository jashkenasbackone paper like good research paper raises questions answers commend job well done cheers corin would hope jashkenas braddunbar left project community would quickly reorganise behind another one two developers crux idea think something else consider leaving project becoming less involved without clear exit cause delays decay project lead interests priorities shift things see involvement decline releases lag project contributors create releasechecklists much prep work lead hits release quickly answer questions terms bus factor project future someone hit bus today historical development look authors recent commits see b backbone trouble get hit bus brad wins lottery c important characteristic renders bus factor moot backbone basically finished project comprehensive documentation also helps even important annotated source code cheers', 'date': '2015-08-07T12:54:24Z'}"
"16786",16785,"{'data': 'official opinion needed underscore vs lodash someone give official opinion backbonejs stable migrationusage lodash know lodash lodashunderscore lodashcompat read lodash migration notes still want backbone community opion also wan na make sure lodash version work correctly version backbone starting trying digest fact personally closer use underscore first original library similar purposes think johndavid forked create new whell instead contributed withto underscore help jeremy improving underscore bad collaboration good history libs may mistaken sorry advance backbone tests special thanks rusalex triggering thinking way took versions backbone ran tests different lodash versions backbone lodash failed tests lodashcompat failed tests lodash prj frozen v failed testes lodashunderscore failed tests backbone lodash failed tests lodashcompat failed tests lodash prj failed tests lodashunderscore failed tests assume using latest versions libraries release moment appropriate risky obviously using different releasesversions risky im official programmer try replace undescrore lodash see backbone tests backbone well tested library tests exist rusalex answer almost already googled many developers say like want official opinion nevertheless thank reply need follow reduce amount comments note already migrated lodashbackbone approach project works fine projecttoplevel architecture community yet sure correct way go eager get proper official answers right way reading underscore issue realized sooner later might underdash agree collaboration jashkenas jdalton sure gods busy low probability answer anyway would answer equal official assume using latest versions libraries release moment appropriate risky obviously using different releasesversions risky yap lodash includes backbone underscore tests run commit current stable release future lodash may fail handful several tests use nonbackbone related underscore methods excuse wo nt surprises lodash side things lots projects go lodash first backbone think backbone official statement nt test zepto lodash compatibility work fine need stronger guarantee stick jquery underscore lodash runs passes backbone tests ci marionette runs unit tests multiple version underscore lodash gt takeaway backbone work fine lodash use lodashbackbone series browserify methods replace underscore lodash wild dependencies seem work kind sketchy number api differences libraries jdalton thanks reply read part backbone docs enough developers projectcommunity confident sentence tend work varying degrees compatibility tells us level uncertainty agree developers started discussion megawac thanks pointing really happy marionette team dreams merge original backbone team double development forces far researched lodashforbackbone fact weird exactly want backbonelodash fact backbone contributed jashkenas brandonpapworth fact one dozen forks backbone interested unless jeremy tell us version replace backbone browserify way used one communityprojects think lie developers simple substitution one library name another thanks comments yes need stronger guarantee backbone tests results one proven fact tdd needed works show holy wars internet thanks closing issue looks like resolved time solution migrate lodash sure wait underdash really hope oy backbonelodash blast past use cases nt run issues using lodash compared underscore another change made library giving ability view elements created using opposed honestly nt used backbone long time aside realized looking back old unmaintained code entertainingdepressing vote would definitely lodash works people nt cause tests create singularity sucks existence', 'date': '2015-08-06T10:32:54Z'}"
"16787",16786,"{'data': 'model returns undefined iterating although exists collection weird issue bothering atm bb reason see undefined model value one models iterating models collection please note always model assigned values using defaults method confirmed using tojson model property model exist collection defaults method adding models collection confirmation model values using tojson see default model exist collection however iterate collection remove models get undefined default mode code result consolelog inside dupe fix mutating array iterating someone tag issue phone', 'date': '2015-08-05T17:13:23Z'}"
"16788",16787,"{'data': 'old docs still recently got tripped fact hosting outofdate downloads documentation looks like new official site backbonejsorg sure first stumbled upon old url probably duckduckgo search results situation exists underscore perhaps would wise set redirect old url new one looks like issue github pages changed repo two years ago looks like old site nt redirected way github repo page open ticket github support bug project moving first implemented support helpfully unpublished pages us', 'date': '2015-08-03T15:51:12Z'}"
"16789",16788,"{'data': 'backboneajax wraperror eats jquery textstatus errorthrown arguments please see normal function signature jquery ajax callback following second params utilized backbone callback result missing error details create silent errors responses enter error callback due invalid json responses still returned status ok since backbone default implementation proxies jquery think good assumption make users would interest arguments maybe would good idea pass along could even tacked onto response object likely many devs issues debugging ajax failures like created catchalls workaround think allowing easy access two arguments could allow developers perform explicit error handling somewhat relevant discussions pass argument thanks snappy response upgrade version backbone case sure nt able find issues initial search answers version introduced idea actually executing error jquery parameters real problems extent even wrote error function attempts guess signature use signature wraperror signature end sync pasted please find actual code end sync took lines version code base v version already code note well although assign textstatus errorthrown options also execute error function wrapped wraperror signature seems introduction code execute error xhr textstatus errorthrown mistake reversed somebody explanation alexander workaround illustrates problem', 'date': '2015-07-31T21:33:20Z'}"
"16790",16789,"{'data': 'collection triggers sync model fetched im sure intended got issues app due collections sync event expect collection trigger sync calling fetch method collection nt expect collection sync model collection fetched problem easier explained code javascript var acollection backbonecollectionextend expect sync event collection acollectionfetch var amodel backbonemodelextend acollectionadd amodel point model sync triggered perfectly fine amodelfetch collection sync triggered collectionmodel created fiddle show problem wow knowed source objekt passed listener function thank much', 'date': '2015-07-30T13:23:53Z'}"
"16791",16790,"{'data': 'collectionfilter hi return plain array instead backbone collection curious rationale behind know backbone objects inherit underscore properties surprised learn collectionfilter tailored return collection turn instead returning plain array surely consider using bbvirtualcollection use case', 'date': '2015-07-29T06:55:22Z'}"
"16792",16791,"{'data': 'deferring updates first save succeeds generally accepted method delaying additional updates first save succeeds model trying avoid issue save ends creating additional entries server side first saves end getting treated post requests guess latency first save see something like post post instead second request put end multiple db rows near identical fields sequentially filled tried simple solution deferring saves deferred objects seems lead hash sent back server first save clobbering local changes deferred save fires thought check writing something complicated queuesmerges pending changes related google results seem several years ago nt worked tests save event async event without looking code try use models event listen event prior calling additional updates also add callback save options shown docs called response returned however probably need functionality ex disabling submit button debouncing actual save make sure send latest data multiple clicks reenabling submit successful save etc ideas hopefully helps please use mailing list stackoverflow gitter channel questions github issues maintaining framework said solutions problem easiest tsjoberg mentioned debounce saves might also want think happening code avoid want point readmemd says suggest feature report bug general discussion nt objections using forums looked like readme suggesting asking stuff like ha may outgrown wording policy years questions live appropriate medium thanks pointing fix asap', 'date': '2015-07-27T20:23:47Z'}"
"16793",16792,"{'data': 'someone tell whats wrong code include include using namespace std double struct employee string number string name double rate int hours int main employee brain int lt cout lt lt enter lt gt employee number gt employee name cin gt employee rate gt employee hours cout lt mahirsiraji repo backbonejs javascript library please stop posting issues c code', 'date': '2015-07-27T19:56:26Z'}"
"16794",16793,"{'data': 'collection set causes error add false option working example var books new backbonecollection id title booksset id title updated title first book id title add false result collection one model id working example var books new backbonecollection id title booksset id title id title updated title first book add false ps result second example uncaught typeerror read property id undefined worked fine reopen post failing test case sorry looks like already fixed current version nt work thanks', 'date': '2015-07-26T16:43:25Z'}"
"16795",16794,"{'data': 'compatibility mode hashchange work guess compatibility mode also work reason running compatibility mode reports true onhashchange window even though event nt supported first glance looks issue backbone handling nah bad pretending nt could add modernizer like test make pr done', 'date': '2015-07-25T08:58:51Z'}"
"16796",16795,"{'data': 'ajaxbackbone project php laravel requires ajax recently started learning backbone js due mvc structure unable use ajax via backbone js lavavel anyone help backbone development area please post questions use backbone mailling list thanks rusalex', 'date': '2015-07-24T05:20:06Z'}"
"16797",16796,"{'data': 'hey anyone help program write program accepts cstring input user reverses contents string program work using two pointers head pointer set address first character string tail pointer set address last character string ie character terminating null program swap characters referenced pointers increment head point next character decrement tail point secondtolast character characters swapped entire string reversed thanks lot', 'date': '2015-07-23T21:46:55Z'}"
"16798",16797,"{'data': 'im problem program anyone help write program accepts cstring input user reverses contents string program work using two pointers head pointer set address first character string tail pointer set address last character string ie character terminating null program swap characters referenced pointers increment head point next character decrement tail point secondtolast character characters swapped entire string reversed thanks lot', 'date': '2015-07-23T00:15:37Z'}"
"16799",16798,"{'data': 'peerdep warning npm heads ing backbone npm giving following warning sparkles', 'date': '2015-07-22T17:13:26Z'}"
"16800",16799,"{'data': 'app terminated due memory pressure taking multiple pictures ios tried lot solutions provided questions mine nothing could help much let tell collection view display images captured camera capturing multiple pictures time pictures taken address images first save database images displayed collection view happens click images time app crashed xcode displays message something like app terminating due memory pressure also getting many memory warnings logs actually neglecting first writing code taking multiple pictures void imagepickercontroller uiimagepickercontroller picker didfinishpickingmediawithinfo nsdictionary info uiimagepickercontroller issourcetypeavailable uiimagepickercontrollersourcetypecamera get image url library nsstring mediatype info objectforkey uiimagepickercontrollermediatype nsurl urlpath info valueforkey uiimagepickercontrollerreferenceurl segmentcontrolselectedsegmentindex picker dismissviewcontrolleranimated yes completion nil segmentcontrolselectedsegmentindex self insertpictodb urlpath else block nsurl url mediatype isequaltostring nsstring kuttypeimage uiimage image info objectforkey uiimagepickercontrolleroriginalimage alassetslibrary library alassetslibrary alloc init request save image camera roll library writeimagetosavedphotosalbum image cgimage orientation alassetorientation image imageorientation completionblock nsurl asseturl nserror error error taking picture saving image url db time trying reload collection view well condition keep clicking pictures pictures saving background definition method getimagefromurl void getimagefromurl nsurl yoururl nsindexpath indexpath alassetslibraryassetforurlresultblock resultblock alasset myasset alassetrepresentation rep myasset defaultrepresentation autoreleasepool cgimageref iref rep fullscreenimage iref uiimage image uiimage imagewithcgimage iref dispatchasync dispatchgetmainqueue collectioncell collectioncell collectionview cellforitematindexpath indexpath collectioncell nsdata imagedata uiimagejpegrepresentation image uiimage compressedimage uiimage imagewithdata imagedata collectioncellimageviewimage compressedimage else collectioncellimageviewimage nil collectioncellimageview setneedsdisplay collectioncell setneedsdisplay iref nil alassetslibraryaccessfailureblock failureblock nserror myerror nslog ca nt get image myerror localizeddescription alassetslibrary assetslibrary alassetslibrary alloc init assetslibrary assetforurl yoururl resultblock resultblock failureblock failureblock also trying compress images fetching collection view nt think crashing collection view reason using alassetslibrary something else debugging iphone ios version thanks advance', 'date': '2015-07-22T06:19:25Z'}"
"16801",16800,"{'data': 'microsoft edge compat hey backbone devs working assessing cataloging triaging library compat microsoft edge know version compat range backbone edge versions fully operable edge also bugs block features compat help escalate thanks reaching nt think core contributors use windows main os generally wait till sauce tells us problem sauce supports edge edge vm released nt think us tried run test suite edge said backbone tests hosted smiley current stable master branch versions pass ms edge support back based tags went tests runnable back test runner failed run older versions suspect qunit dep cause issue current stable master branch versions pass ms edge smile thanks testing thanks jdalton', 'date': '2015-07-20T20:28:22Z'}"
"16802",16801,"{'data': 'bump placeholder issue megawac jridgewell hijack checklists next bump prepping lodash part underdash proofing wait backbone bump removes use favor relevant changes things considered x bolded issue numbers important ones nonbolds much one want take stab writing change log writing prose really nt thing paulfalgout sure thing taking small stuff might wait considerations might wait considerations yup contribs keep checklist publish version addressing yeah anything shipit time pick issues shipping go ahead draft log pick issues shipping go ahead draft log let go merged paulfalgout agree jdalton let ship merge rest next version good deal get shortly long weekend bumped published', 'date': '2015-07-18T00:35:24Z'}"
"16803",16802,"{'data': 'annotated source docs hi lot trouble figuring call model constructor annotated source updated speak accomplishes source confusing reason care want views collections ability models default values trying mimic behavior model constructor views collections comments regarding method backbone source cant undesrtand also models default attribute values define property model hash get set corresponding properties set model instantiation try see method pretty straightforward model implements example future please nt use github issues ask questions try gitter channel stackoverflow page mailing list', 'date': '2015-07-17T19:36:29Z'}"
"16804",16803,"{'data': 'manually triggering event model part collection causes error hello upgrading backbone app ran unexpected error simplest repro var c new backbonecollection var new backbonemodel cadd mtrigger change error thrown intentional change events handled thanks clashing event expects format work expected megawac update docs change behavior docs mention models required param correct regression megawac also worth noting without passing model long model nt part collection dupe documentation says trigger objecttrigger event args trigger callbacks given event spacedelimited list events subsequent arguments trigger passed along event callbacks nt specifically says use modeltrigger change model caused line number needs amp amp model condition error please fix', 'date': '2015-07-16T23:53:32Z'}"
"16805",16804,"{'data': 'overriding backbone modelparse hi overrode backbonemodel instanceparse like btw model class passed option hope problem api everything successful node error see overridden parse function returns respsuccess think part correct however return problems seems happen backbone seems create whole new backbone models return empty object parse function case best way handle different responses server parse method example ss good idea javascript parse function resp options try asking questions mailing list gitter board stackoverflow github issues maintaining framework', 'date': '2015-07-15T23:18:10Z'}"
"16806",16805,"{'data': 'documentation options hi many methods backbone classes nt include documentation arguments seem find options would like work pr sure look source code realize multivariate signature work done looks like pr issue rejected sure else issue would useful', 'date': '2015-07-15T09:20:51Z'}"
"16807",16806,"{'data': 'error event triggered model destroy fails ajax call hi trying figure actual flow events destroying model think see least two issue related model destroy error event triggered ajax call fails different model save method error event always triggered case ajax failure model collection removal delayed successful ajax call meaning model removed collection ajax delete successful basic test jsfiddle var mycollection backbonecollectionextend url collection create instance collection model var collection new mycollection var model new backbonemodel id add model collection collectionadd model fired first modeldestroy expected collectionon request function model consolelog request never fired ajax call fails expected collectionon sync function model consolelog sync never fired expecting one triggered ajax fails model save collectionon error function model consolelog error fired last least confusing destroy ajax call failed collectionon destroy function model consolelog destroy fired right least confusing destroy ajax call failed modelon destroy function consolelog model destroyed unexpected removing model collection imho delayed done sucessfull ajax call collectionon remove function model consolelog model removed modeldestroy always function expecting collection length destroy succesfull model removed collection add model back ajax failure consolelog collectionlength let compare model save issue events tiggered expected according docs var mycollection backbonecollectionextend url collection create instance collection model var collection new mycollection var model new backbonemodel id add model collection collectionadd model fired first expected collectionon request function model consolelog request never fired ajax call fails expected collectionon sync function model consolelog sync fired expected collectionon error function model consolelog error modelsave always function consolelog collectionlength modeldestroy wait true make wait successful ajax delete returns triggering events removing model collection least think second like closing issues sight please read reconsider least one error event triggered ajax call fails different model save method error event always triggered case ajax failure least think second like closing issues sight apologies nt mean make think nt considered issue test expect see everything works like intend error event triggered ajax call fails event triggered model since model longer part collection wo nt trigger error event collection backbone optimistic server requests makes proceeded request pass like wait response instead inconsistent save method also optimistic optimistically adds model collection hence events triggered collection optimistically removes model collection preventing events triggering', 'date': '2015-07-14T13:41:40Z'}"
"16808",16807,"{'data': 'collection set one model cid another model id given following code javascript var new backbonemodel id foo var new backbonemodel id var collection new backbonecollection collectionset result contains also oddly changed fixed', 'date': '2015-07-14T02:17:06Z'}"
"16809",16808,"{'data': 'collection set method going merge modelsobjects already present code enter merging process already existing models im sure thats right change attributes happen instantiating new collection array objects creates model every object mergecheck backbone comparing bare attributes models array objects added setmethod though says turn bare objects model references ca nt spot bare object turned model reference comparing need merge js turn bare objects model references prevent invalid models added var lt modelslength attrs models existing piece code correct could someone point reason far understand would get true need something returns false change attributes mergemake decide compare bare objects models find good method decide merge think already preparing pr maybe thats necessary explanation missing understand thats done like im thinking might reason merge switch exists options think even merging desired models dont need merging exactly alike already unsure problem lets suppose set called array objects objects already exist exactly alike model instance problems overhead objects would get merged models already alike dont need get merged adding feedbackresume update event see including mergedmodels would return merge done models already alike im working pr includes update event triggering sending previousremoved models addedmodels mergedmodels edit code would run times even attributechange happening overhead instead following code pr right collection set method peak javascript set function models options options defaults options setoptions optionsparse amp amp thisismodel models models thisparse models options var singular isarray models models singular models models modelsslice var id model attrs existing sort var optionsat null lt thislength var sortable thiscomparator amp amp null amp amp optionssort false var sortattr isstring thiscomparator thiscomparator null var toadd toremove modelmap previousmodels mergedmodels var add optionsadd merge optionsmerge remove optionsremove var order sortable amp amp add amp amp remove false var orderchanged false request returning models merged think might good momentway introduce info manner previousmodels returned reset method example replicate behavior example times following code would ran even change model think problem move along disappointed overhead objects would get merged models already alike dont need get merged adding feedbackresume update event see including mergedmodels would return merge done models already alike way us know wether two objects alike without parsing setting keep mind may overridden custom code bare attribute objects could deepequaled without taking account ordersorting keys sure might even expensive guess depends alot size objects facepunch get merging even attributes model new object alike think thats good think alright like issue closed ofc overridden way know new object morph called keep mind also backbone model instance thus yeah mind thinking case setting bare objects models setting models everything works one would expect hey got fixed like even though got closed jridgewell disappointed', 'date': '2015-07-13T03:33:17Z'}"
"16810",16809,"{'data': 'model reference still exists collection remove backbone version description remove model collection model still collection model remove handler expected remove model part collection anymore actual model still collection model remove event triggered model reference removed located problem removemodels method collection reproduce var collection new backbonecollection var model new backbonemodel collectionadd model modelon remove function model collection collectionget model alert model still collection error thrown unexpected collectionremove model collectionget model alert model still collection error thrown expected jsfiddle thanks report already tracking', 'date': '2015-07-10T15:45:16Z'}"
"16811",16810,"{'data': 'question dear purveyors backbone question yall nt backbone views defaultsattributesoptions relationships backbone models checking source collections routers nt either nt backbone components follow pattern aware functionality automatically assigning thisoptions taken newer version backbone question asking decision made long one curious thanks type question better suited one channels try mailing list gitter board short answer nt need models supposed place care stateful attributes nt live object cases setting property instance good enough said really need app written plugin allows borrow backbonemodel getter setter functions object including rest backbone classes check see works thanks check', 'date': '2015-07-09T02:23:12Z'}"
"16812",16811,"{'data': 'collection wo nt reset trying clear calling retrieve new data page reason nt resetted fetching new data navigate another page resets collection gets new data manually reload page class projectpostitemsview extends backboneview template jst projectpostitemsejs postsitemviews initialize gt super listento collection add displaypostitem collectionreset fetch add true displaypostitem project gt view new projectpostitemview model project postsitemviewspush viewon render gt postitems append view gt render options gt super options tried still nt reset get error new backbone sure handling correctly wrong help appreciated thanks advance types questions appropriate stackoverflow side note using backbone version jridgewell literally jumped codebase makes say version according version installed bower using error removed', 'date': '2015-07-08T11:40:14Z'}"
"16813",16812,"{'data': 'views events getting called initialize updated backbone running issue views block called block intentional change nt see changelog lock since change breaking app conditionally extend events hash depending options set within initialize block dupe changed documentation views always delegate events longer modify events hash view property turn events hash method use initialize method turn method call either turn method call js var view backboneviewextend events function return click span onclickspan click onclick var view backboneviewextend initialize function thisdelegate click span thisonclickspan thisdelegate click thisonclick thank jridgewell relying initialize called events method var view backboneviewextend events function var eventshash thisdoclickspan extend eventshash click span onclickspan return eventshash initialize function opts var opts thisdoclickspan odoclickspan new view doclickspan true pattern longer works backbone jridgewell sorry nuisance motivation making changes see', 'date': '2015-07-07T16:26:55Z'}"
"16814",16813,"{'data': 'backbone update event collection return newly added removed model want work pr absolutely', 'date': '2015-07-02T15:20:20Z'}"
"16815",16814,"{'data': 'click back button twice go back backbone app using using backbone', 'date': '2015-06-27T09:06:03Z'}"
"16816",16815,"{'data': 'issue backbone collections hi everyone likely found bug concerning backbone collections first run next code javascript var model backbonemodelextend idattribute id var new backbonecollection var model new model id alladd model consolelog allget model execute previous code using latest backbone version get false consecuently using custom idattribute add collection wo nt able get back id means get method otherwise case using backbone truly works expected need tell collection model class nt support using collection without setting model class', 'date': '2015-06-26T20:51:52Z'}"
"16817",16816,"{'data': 'plans modularize backbone would love able something like js import events backbone objectassign mymodule events already work', 'date': '2015-06-26T01:16:32Z'}"
"16818",16817,"{'data': 'docs viewremove jeremy imo absolutely positively needs read nt make clear el goes missing call elremove hiding inside remove dangerous one thing could pass boolean remove decide whether delete dom element removes view dom nt clear would rather removes view dom kinds changes make pull request issue yes said would much much clearer nt know make pull request', 'date': '2015-06-24T23:35:20Z'}"
"16819",16818,"{'data': 'removemodels regression bug looks like removemodels simplified introduced regression bug removemodels function models options var removed var lt modelslength var model thisget models model continue code removed removed following lines means listening remove event check removal get infinite loop event called id removed think byid code put back events fired represent uptodate state changed mean right jridgewell solution ca nt find pull think changed ordering collection updated little back way reconcile move call trigger would fail unbinds model listener trigger happens model collection alternatively could move call trigger trigger model collection directly juggling args bit align yes use case unfortunately control flow little tricky would go one least side effects regarding moving call manually triggering sure cases users libraries might registered something get cleared triggering would get skipped personally would inline cleanup code like alternatively could update removereference unbind model events call manually take optional parameter skip clearing call twice without option reason trying get model event part nt make sense already providing parameter collectionon remove would fail removereference unbinds model listener trigger happens model collection agh forgot fixes would acceptable think cleanup code left makes sense jridgewell reason binding collection like way using hooks immutably update object handler generic ie nt use parameters passed instead references collection directly seems slightly misleading inside handler happens reason martynsmith generic code backboneorm update fix use case collection callback sync problem listener tries remove model currently removed collection case occurs thisget models uses collectionbyid determines model contained collection thisindexof model returns following splice clobbers model array generic sense seems wrong finds model also uses probably vulnerable whole method inlined callback model property unset callback could cause code relies property fail', 'date': '2015-06-24T16:37:33Z'}"
"16820",16819,"{'data': 'listento scroll events listento scroll events listento scroll events specifying event object works perfectly keep mind caveat scroll event sent element user scrolls different place element applies window objects also scrollable frames elements overflow css property set scroll auto element explicit height width less height width contents please use mailing list stackoverflow gitter channel questions', 'date': '2015-06-24T09:33:47Z'}"
"16821",16820,"{'data': 'collection get idaddreference broken looks like method broken around line nt look like trying index model value rather value course breaks well probably things code working intended docs confusingly worded meant return value given model attributes equivalent result update docs see updated documentation however really misunderstanding moment documentation get collectionget id get model collection specified id cid passing model seems able use retrieve model collection reading code fetch model id literal string instead running issue live site case misreading backbone code currently process constructing smaller test case grabbing model id handled first conditional ignoring call hello constructing test case see problem code working properly thanks efforts', 'date': '2015-06-23T22:55:22Z'}"
"16822",16821,"{'data': 'deferred undefined requiring backbone gt gist problem run install packagejson today install latest backbone version strangely undefined versions backbone greater backbone works expected console output anyone know going requiring backbone requires jquery set window var jquery ca nt detect global variable value factory function takes argument simple answer move backbone require setup also set later oh okay thanks help', 'date': '2015-06-18T21:21:19Z'}"
"16823",16822,"{'data': 'using backbone webpack without jquery throws errors following guide get error uncaught error find module jquery seems like webpack defaulting amd trying load jquery throw error fails tried forcing webpack use commonjs using imports loader result following error message uncaught referenceerror backbone defined although backbone present js file sure getting error ah sorry never added let fix said loader work see example try whittle might causing referenceerror yep works perfectly referenceerror came bad code referencing backbone without importing thanks', 'date': '2015-06-14T21:47:03Z'}"
"16824",16823,"{'data': 'replace wanting cut aliases lodash wondering would cool dropping use favor esfriendly flavor canonical name underscore anyways pr sure moved', 'date': '2015-06-10T02:46:51Z'}"
"16825",16824,"{'data': 'drop method use underscore method dropped favor bb definitely weird maybe add alias deprecate existing method relevant bit saw mean relevant bit opening issue great pull request better always tweak code style mapping older alias newer alias alias preferred alias longer documented bump order remove able add though wo nt define used cool cool', 'date': '2015-06-09T03:23:48Z'}"
"16826",16825,"{'data': 'ditch bindall use used backbone could swapped open pull', 'date': '2015-06-09T03:16:26Z'}"
"16827",16826,"{'data': 'help mobile terminal tap event nt work mobile terminal tap event nt work eh resolved sorry browser problem', 'date': '2015-06-08T02:59:15Z'}"
"16828",16827,"{'data': 'collectionat behavior change release collectionat function specified follows beginning function specified prior providing index lt would return undefined may may return undefined depending index supplied behavior change would nice mentioned release notes definitely added change future feel free open pull request documentation merge', 'date': '2015-06-07T17:24:51Z'}"
"16829",16828,"{'data': 'type error html canvas hello get type error backbone cdnjs rendering model within view document ready function var box backbonemodelextend defaults x w h var boxset backbonecollectionextend model box var boxview backboneviewextend render function var modelthismodel ctxthisoptionsctx var setview backboneviewextend initialize function thiscollectionon thisrender render function var canvasthis elget ctxcanvasgetcontext var cnew boxset cadd var vnew setview el canvas collection c vrender longer attach view error trying access property thanks sent sony smartphone justin ridgewell wrote longer attach options view error render trying access ctx property reply email directly view', 'date': '2015-06-04T19:13:44Z'}"
"18890",18889,"{'data': 'ember js disconnectoutlet doesnt clear cached template data modal open via outlet opened using following code modal view computed property close modal using code removeoutlet function issue computed property compute go page refresh close modal reopen computedproperty trigger even modified computed property data im clueless cause issue', 'date': '2018-11-14T08:51:15Z'}"
"18891",18890,"{'data': 'route recognizer add route name error message missing params developer try transition using controllertransitiontoroute routename model method get error thrown console indication route name appears case request transition customer intends redirect customerindex subroute missing parameter would nice route name shown error error must provide param getparam arraygenerate debuganonymous function routerecognizergenerate generate updateurl trycatcher invokecallback invoke defaultdispatch dispatcherror onerrordefault trigger anonymous invoke flush flush end run join runjoin anonymous exportsflaggedinstrument handleevent exportsdefaultembermetalmixincreatemixin createhandleevent bubbleevent anonymous dispatch elemdatahandle embercli', 'date': '2018-11-12T19:41:30Z'}"
"18892",18891,"{'data': 'mandatory setter failing assertion failed must use set set property route error description error seems occuring line lines present master branch well pointers something wrong general nothing observing route removing observercomputed propertyetc would resolve error double triple checked observing property anywhere could nt find references possible addon may using idea kind addon might using property missing something obvious edit feel pretty stupid right issue happening race condition app calling action route unloaded fixing resolve issue thanks', 'date': '2018-11-12T16:14:01Z'}"
"18893",18892,"{'data': 'assertion failed pass path mut template glimmer component following works js backed component even without property defined js template glimmer component hbs showsomething something else try template glimmer component get exception app reproduction great usecase helper p hmm nt fully understand goal using unless passed argument ultimately going try lookup template glimmer component feature flag enabled likely causing error seeing expect backing mutable binding general rule template glimmer component path expressions either block param scope named argument anything else imho error compile time gavinjoyce scenario would expected happen gt general rule template glimmer component path expressions either block param scope named argument anything else imho error compile time sure easy hard would implement moment since unknown template compilation given template going used template component frankly possible templates shared may possible template linting rule would somewhat helpful making clearer used nt also make error message clearer docs gt great usecase let helper p seems fail way hbs template component let false showsomething showsomething something else let gt hmm nt fully understand goal hoping able able implement toggle local property template component without needing define js class gt hoping able able implement toggle local property template component without needing define js class gotcha local property specifically mean backing data structure fwiw super bad error message definitely bug either way even todo code explaining happening one possible solution submitted pr demo repo hbs let databag data datashowsomething something else let returns stable object stashing state however really think hard want keep template component local ui state tracking gt gt local property specifically mean backing data structure understanding templates appears wrong local context helper could used mutate properties context see might nt case template components though keen replace frequently rendered components template components mainly performance reasons able mutate local properties friends would likely barrier removing js components one possible solution submitted pr demo interesting approach thanks seems like gives us way forward app feel benefits outweigh possible downsides gavinjoyce depending ember version suggest something like sparklescomponent possible path forward effectively removes instantiation cost really super tiny base class created align future apis rwjblue try thanks let close issue thread going useful lot people templateonly components become prevalent misunderstanding clearest explanation seen', 'date': '2018-11-12T11:02:03Z'}"
"18894",18893,"{'data': 'changing view elementid creation allowed component didreceiveattrs thissuper wrong modifying elementid prior creation previous version framework worked mistake thank solution init thissuper arguments', 'date': '2018-11-10T23:09:56Z'}"
"18895",18894,"{'data': 'linkto causing read property rooturl null using linkto passing id causes read property rooturl null error going route directly see error ember ember data jquery stack trace uncaught typeerror read property rooturl null objectevaluate appendopcodesevaluate lowlevelvmevaluatesyscall lowlevelvmevaluateinner lowlevelvmevaluateouter vmnext vmexecute tryopcodehandleexception updatingvmframehandleexception updatingvmthrow throw anonymous evaluate evaluatesyscall evaluateinner evaluateouter next execute handleexception handleexception throw evaluate execute rerender runintransaction renderroots renderrootstransaction revalidate invoke flush flush end end run join join join anonymous flaggedinstrument handleevent handleevent anonymous dispatch elemdatahandle use linkto parts application work fine could nt get embertwiddle reproduce seems particular linkto worked ember upgrading see error', 'date': '2018-11-08T15:10:30Z'}"
"18896",18895,"{'data': 'jqueryextend recursively broken use jquery plugins eg bootstrapdaterangepicker uses extend method jquery fails jquery recursively iterates property array use array prototype extensions ember embersource gives embersource gives using version jquery two immediately aware change would caused probably need bisect track reproduce created new project extra dependencies installs ember run default application browser console executed command upgraded ember gives error jquery uses construct iterate properties ember returns ember result construct iterates enumerable properties ember included included ember', 'date': '2018-11-08T10:27:04Z'}"
"18897",18896,"{'data': 'bug proxied object observers observing proxy object application sometimes throws assertion believed due proxy object trying add observer whilst content beinghas destroyed able solve reopening objectproxy object initializer modifying willwatchproperty method know probably nt best fix instead done somewhere addobserver function simple quick solution anyone meantime import get emberobject import objectproxy emberobjectproxy export function initialize applicationinstance objectproxyreopen willwatchproperty key thisisdestroying thisisdestroyed thiscontent null amp amp thiscontentisdestroying thiscontentisdestroyed return export default initialize nt really know reproduce fiddle anyone could help would appreciated version information error output sure related seems like different issue ps tried update master ember data still able reproduce issue however broke plugin inside project multiple things broke well current issue unable try test fix latest ember sorry also sorry wrong never posted issue read guidelines hope right', 'date': '2018-11-07T02:02:05Z'}"
"18898",18897,"{'data': 'docs api docs suggest deprecate imported emberdebug rwjblue importing emberdebug significant benefits emberclibabel ensures deprecate calls stripped prod builds true emberapplicationdeprecate currently docs indicate may imported emberdebug export deprecate function', 'date': '2018-11-06T20:47:28Z'}"
"18899",18898,"{'data': 'ember inspector promise test errors recently experiencing errors ember beta canary bee seen solved also cherrypicked beta', 'date': '2018-11-06T15:54:53Z'}"
"18900",18899,"{'data': 'input type range shows unwanted value edge browser created new project test added range slider third one pure html code work edge browser rest two give current value range slider mass slider ui ember version edge browser version screenshot result applicationhbs', 'date': '2018-11-05T23:01:10Z'}"
"18901",18900,"{'data': 'thisresource new thisroute ember highly nested routes working im process upgrading issue router used thisresource nested routes depreciated changed thisroute comes nested route working anymore futher explain let say thisresource path function thistransitionto id worked perfectly changed resource route thisroute path function route found route transitionto tried call lost nowhere triggering controller either children thilinadinith moved files right place project structure controller example project structure like parent parent parent according change let know thanks fast response thilinadinith moved files right place project structure controller example locks organized route structure controllers structure mentioned code child trying read parents model model im extending parent route child im getting issue child route extended locks tried well luck error im getting typeerror read property get undefined classmodel classsuperwrapper model classdeserialize applyhook unresolvedhandlerinfobyparamrunsharedmodelhook unresolvedhandlerinfobyparamgetmodel trycatcher invokecallback publish working misspelled thank support locks', 'date': '2018-11-02T03:10:44Z'}"
"18902",18901,"{'data': 'assertimplicitcomponenthelperargument error production builds lines striped screenshot file embersource sure notion debug mode error app run production mode cc chancancode', 'date': '2018-11-01T20:52:56Z'}"
"18903",18902,"{'data': 'abort transition route intermediate transition fails following code fails javascript import route emberroutingroute import later emberrunloop export default routeextend actions willtransition transition transitionabort thisintermediatetransitionto cc later transition transitionretry uncaught typeerror read property undefined privateroutertoinfos privateroutergettransitionbyintent privateroutertransitionbyintent privaterouterdotransition privaterouterintermediatetransitionto classintermediatetransitionto classintermediatetransitionto classwilltransition classtriggerevent privateroutertriggerevent uncaught typeerror read property iscausedbyabortingtransition undefined privateroutergettransitionbyintent privateroutertransitionbyintent privaterouterdotransition privaterouterintermediatetransitionto classintermediatetransitionto classintermediatetransitionto classwilltransition classtriggerevent privateroutertriggerevent privaterouternotifyexistinghandlers', 'date': '2018-10-31T13:10:30Z'}"
"18904",18903,"{'data': 'routerservice nt update currentroute loading route used route returns promise route entered promise resolved transition completed correct updated still references route also tried canary see example added child route param route child route points route parameter accessible beforemodel run example use url thank reporting chadhietala mind taking look looking ember modified example little bit added route redirects route point browser everything works fine hand point browser route active still references route chadhietala rwjblue nt know report new bug bug reopened', 'date': '2018-10-31T09:17:47Z'}"
"18905",18904,"{'data': 'contextual components invoked anglebrackets nt work receive splattributes first thought bug emberelementhelper reported found reproduction nt involve seems bug emberglimmer contextual component invoked splattributes created failing test', 'date': '2018-10-30T20:25:05Z'}"
"18906",18905,"{'data': 'child routes reuse param names parent routes following either bug behavior bug sense missing assertion key constraint router twiddle setup expected outcome points url param given parent param given child transitioning updated observed outcome bug points url param given parent param given child bug transitioning updated note urls different places bug inconsistent accidentally used params versions affected versions ember seem affected debugging found either bug unasserted constraint since least ember seems unfortunately like designed behavior params held single level pojo keys dynamic segment name really nt anything data structure allow duplicates could assert used dynamic segment parent suspect least apps rely clobbering think either make params behave expected way would mean changing storage structure seems like good time surface given rfc work around routing going cc chadhietala assert constraint fall back deprecation folks truly relying odd behavior hard time believing folks unknowingly relying apps given inapp url based transitions trigger model hooks correct id serialize wrong state linkto afterwards put wrong state url words many ways works someone shares reloads url nt correct would difficult bug trace back issue issue route recognizer one believe fix warning development first construct route maps user choose ambiguous parameter name maybe id ambiguous name consider specific like postid itemid check route construction child uses param name parent easily check time assignment would think', 'date': '2018-10-28T22:36:26Z'}"
"18907",18906,"{'data': 'nested components hi started using first time weekend found important issues would like raise previously using nested components group window components example hbs abmodalconfirmationwindow abforminput abform modelmodelblogpost form forminput attribute title formdate attribute publishedat formbutton success save formbutton abform larger applications grouping related components folder make lot sense encourages greater level usability comes functionality naming new syntax works blocklevel forms hbs formdate attribute publishedat formbutton success save formbutton abform however also need support nested level components supported currently think major requirement anglebrackets components order true replacement curlybraced components suggest following syntax hbs explain necessary needed read issue immediately clear specifically requested seems like talking yielded contextual components based first template snippet works perfectly fine angle bracket invocation mention desire invoke components nested inside directories information angle bracket invocation worked learning team read rfc specifically section explains dynamic invocations work would things like yielded contextual component eg later section near end see nested invocation specifically discussed ruled', 'date': '2018-10-28T19:56:03Z'}"
"18908",18907,"{'data': 'typeerror native class syntax certain lifecycle hooks calling converting app use native classes noticed component hooks throw errors calling superclass equivalent hook example one hook error rwjblue helped answer question today discord import component embercomponent export default class myclass extends component didreceiveattrs throw typeerror superdidreceiveattrs arguments alexdiliberto within hooks call know parent calls hook defined otherwise calling error think may part application refactoring needs necessarily ember bug javascript works js class greet constructor msg thismsg msg hello consolelog thismsg let g new greet hi gmsg hi ghello hi class yo extends greet hello consolelog yo let new yo sup ymsg sup yhello yo class sup extends yo hello superhello consolelog sup let new sup new sup dog smsg dog shello yo sup class whatup extends sup yo superyo consolelog thismsg let w new whatup peeps wmsg peeps whello yo sup wyo uncaught typeerror intermediate value yo function whatupyo rwjblue thinks bug ember need change component hooks define methods noop functions sure case see would change request component bug ember guides suggest use syntax yet ya think ensure component hooks defined base class actually important unrelated using native classes helps ensure consistent shapes whatnot rwjblue case probably try get submit pr asap', 'date': '2018-10-26T19:45:47Z'}"
"18909",18908,"{'data': 'canary ca nt use syntax latest canary breaks yielded contextual components directly invoked arguments using path expression without helper however happens production builds assume flag production working fine happened somewhere btw somehow directly influence flag would prefer ci tests run environment close production possible share reproduction repo trying determine template compilation happening correct environment sure prep one later evening thank interestingly seems like nt simple ca nt directly reproduce error dig deeper next days', 'date': '2018-10-26T14:07:20Z'}"
"18910",18909,"{'data': 'transitionabort raised tests redirecting see passes latest beta fails canary visible commit causes issues though face unobjectionable possible duplicate', 'date': '2018-10-25T17:41:10Z'}"
"18911",18910,"{'data': 'redirect causes test helper fail test case like retirement async assert gt await visit retirement assertstrictequal currenturl retirementcheck redirects prior precise test worked fails error adding noop catch clause fixes retirement async assert gt await visit retirement catch gt assertstrictequal currenturl retirementcheck redirects expected behavior want redirects bubble helper error possibly related find weird used work yeah possibly related related looks like see passes latest beta fails canary visible commit causes issues though face unobjectionable submitted revert work timing issues hmm fix definitely addressed reproduction wagenet shared sure fix issue buschtoens commit reverted nt exist current beta branch buschtoens help us track reproduction', 'date': '2018-10-24T21:12:18Z'}"
"18912",18911,"{'data': 'glimmeranglebracket splattributes problems discussion yesterday rwjblue discord problems displayed ensured test morning tried recreate tests code able replicate results got thinking run tests bascially templateonlyglimmer components class according empty body findings template div hbs yield invocation result html invocation result html template original template button invocation result invocation result invocation result gossi would mind submitting failing test case like ones added see description seeing passed invocation without value get added element element question right visually inspecting dom tree elements tab chrome devtools additionally testing css state nt triggered pretty sure nt work provide failing test later', 'date': '2018-10-24T07:45:57Z'}"
"18913",18912,"{'data': 'meta element modifier manager x land glimmervm upgrade introduce concept create modifier manager delegate possibly unify custom component manager delegate update determine canshould leverage public manager wrap feature flag', 'date': '2018-10-22T15:28:32Z'}"
"18914",18913,"{'data': 'question way force rerender component hi respect wondering way force rerender component life cycle hook executed also bit confused following behavior existing test app loading click topics click components invoked click components invoked observe focus state set topics level however click topics click router click components invoked click components invoked click components invoked observe focus state set topics level wondering getting invoked differently scenarios pointer would helpful thanks sarbbottam thanks asking question best place reach community forum chat see use issues track bugs emberjs framework get help using discord chat github issue tracker', 'date': '2018-10-21T14:37:23Z'}"
"18915",18914,"{'data': 'create dynamic model ember data trying create dynamic ember data modelsi tried code like creating model working shows model user defined pranavdubase thanks asking question best place reach community forum chat see use issues track bugs emberjs framework get help using discord chat github issue tracker', 'date': '2018-10-20T09:33:53Z'}"
"18916",18915,"{'data': 'update backburnerjs published fix oddity timers spanning system sleep need bump version backburnerjs used ember get fix commit notating nt forget hoping someone else gets', 'date': '2018-10-18T15:43:29Z'}"
"18917",18916,"{'data': 'memory leak changing routes appears memory leak present ember versions amp changing routes render hbsjs components first noticed looking user reports app showing memory usage warnings safari created reproduction simple ember app every second app switches back forth empty route route renders simple hbsjs components run production build see memory usage grows rapidly clean installs chrome safari firefox chrome tab crashes mins firefox safari yet dig might happening later today thank reporting poking reproduction questions report says mean version issue noticed going repro template glimmer components optional feature enabled optional feature related part tracking repro feel free tell figure mostly curious checked things specifically confirmed related continue trying isolate things gt report says mean version issue noticed going tested versions think exhibited memory leak repro template glimmer components optional feature enabled optional feature related part tracking repro nt believe related added option feature part investigations believe memory leak present rendering hbsjs components rendering hbs components verify actually appear happen rendering template components confirmed also happens seem related route transitions components rendered removed without route transition notice memory usage relatively static seeing large number blocktrackers seemingly retained context efforts track address recent memory leaks drill objects largest retained size come across many components state seems large number retained looks like may leaking backburner timers seems grow time switch route memory profiler seems point switching route one time using test app might cause though remove see array continues grow memory leak continues present ah appears may caused memory leak incorrectly using component using emberlifeline emberconcurrency test app forgot ensure cancelled component destroyed without browser tab memory seems grow garbage collected dropping going close issue mistake test app resulted significant memory leak fixed also verified significant memory growth longer present chrome safari still memory leak app continue look find looks like framework memory leak reproduce open new issue', 'date': '2018-10-17T09:21:53Z'}"
"18918",18917,"{'data': 'queryparam issue long running transitions transitioning one route route transition incomplete queryparams former route set latter route get former route transition object active transition processactivetransitionqueryparams merge current targetroute issue reproduced twiddle enough check refreshing route qp set trigger current route refresh like thebala see example twiddle shared explain steps reproduce eg expected actually happening eg steps reproduce click aboutcontact route click one expected result qp value actual result qp would help clarify work issue steps reproduce click contact route click button set quary param value contact th contact route url click route click contact route click route loading state contact route finishes increasing timeout may help expected vs actual result performing steps mentioned url expected actual url query param value route set route folowing gif may help better hope helps dig issue', 'date': '2018-10-17T09:00:06Z'}"
"18919",18918,"{'data': 'local variables always win helper tried fix apparently nt catch cases reproduction options fix error one cycle fix deprecate one lts cycle fix imho clearly bug fix option imo also bugs subexpression positions probably controversial cc wycats mmun sure approach still good current glimmer codebase last patch fixed cases agree statements second twiddle', 'date': '2018-10-16T19:24:47Z'}"
"18920",18919,"{'data': 'issue regarding precedence helpers properties anglebracket components helper called also property component called two code examples work differently ember passes changeset property calls changeset helper arguments however works using ember emberanglebracketinvocationpolyfill result users upgrading ember polyfill might see unexpected behavior type ambiguity rfc trying prevent deprecation code mods nt yet implemented reproduced twiddle embertemplatelint includes noimplicitthis specifically catch case existing code likely fix polyfill consistent behavior real feature always calling helper would mind making issue even failing test pr opened time write failing test', 'date': '2018-10-16T13:11:25Z'}"
"18921",18920,"{'data': 'could find module upgrading embercli hi everyone updated embercli version getting error building application output ember b output idea solve ca nt find anything release notes thank share reproduction repo emberdata tests canary builds double checked nt issue recent builds sure use project one took screenshots side note travis build fails different reason seems issue eslint ok little testing managed fix problem updating following packages emberajax emberclibabel emberclihtmlbars emberclihtmlbarsinlineprecompile emberqunit see pinpoint wich package particular causing problem edit reference commit reproduce issue nippiusdigitalillusionfrontend appears issue related emberclibabel updating version fixes problem', 'date': '2018-10-15T19:59:01Z'}"
"18922",18921,"{'data': 'read property name undefined trying set queryparams beforemodel getting error trying line debugged appears empty array therefore line must throw naturally unable reproduce twiddle clue debug like know empty array actually means error rather bug looking app works expected ie query parameter get set url browser updated accordingly issue query parameter set matter issue say check array empty better error message added ca nt pr nt understand internals otherwise would ohcibi well creating example reproduction issue twiddle working perhaps create example project share link clone repository able meantime pushed pushed branch case messed check branch explicitly simply open app redirect route without query param said error still thrown update dodeja another example differs mine yes please provide issue seems complicated expected pixelhandler able looking example yet valid example anything else needed', 'date': '2018-10-14T15:33:20Z'}"
"18923",18922,"{'data': 'embera slice longer exists passes ember beta default fails canary see also hmm getting ci locally wonder race condition causing something invalid logged got looks like returned property rather value guess usererror though nt quite tracked computed property definitely result makelocal effectively calls wonder whether problem perhaps needs looks like solved emberclipagination', 'date': '2018-10-12T17:53:17Z'}"
"18924",18923,"{'data': 'bug injection mocked service tests using classes reproduction repo see last commit using class adding even empty constructor causes injection mocked service fail cc pzuraq thinking probably insight behavior must pass injections assigned instance current ember native classes officially land longer necessary services also available construction pzuraq fixed problem thanks little documentation things scrambling bits pieces thanks close issue yep definitely fragmented fix soon native classes officially shipped yet part reason officially document usage', 'date': '2018-10-12T14:13:04Z'}"
"18925",18924,"{'data': 'bug emberarray pushobjects fails arrayproxy passed throws exception pieterv push content proxy think also believe supports proxy array see pixelhandler use already workaround thanks nt agree bug according documentation mutablearray pushobjects accepts according documentation arrayproxy also decision support real arrays de documentation adapted', 'date': '2018-10-11T08:55:15Z'}"
"18926",18925,"{'data': 'rendering reggression found weird rendering engine regression release issue dom nt updated properly state change component component templatehbs componentjs goes initial value ember last state change nt reflected dom spinner stays visible two short videos proving component correct state rendering issue version ember ember difference two videos run video function global scope actually checking state component instance things might relevant issue happening production build component talking rendered contextual component whereas contextual property suspecting pretty important tried build completely broken even run app optionalfeaturesjson embercli emberdata emberengines anybody idea might happened last release hmm nothing jumps tell setup components look like ts js decorators etc deprecationsassertions debug build might hard debug without reproduction dig creating repro may help us identify wrong would mind trying rerecreate issue demo repo rwjblue tracked something using production build minimal repo reproducing bug output clicking boom run development b b works expected ember', 'date': '2018-10-10T12:18:15Z'}"
"18927",18926,"{'data': 'linkto nt update href promised models model given helper promise eg dspromiseobject helper nt update href promise fullfiled might change result hook desired route example link loading state shows incorrect url promise resolves href updated link clicked new url correct one rerender components puts correct value href link expected outcome ps seems similar issue old nt think codebase sufficiently similar revive issue', 'date': '2018-10-08T17:56:51Z'}"
"18928",18927,"{'data': 'implement enable helper feature tracking issue enable helper proposed x implement x api docs x guides enable default author polyfill eg give implementation try general implementation notes believe roughly implemented way helper using positional args instead named args helper like one add array builtins add slew tests like really think need revisit entirely new array returned changes thing helper ember component system geared change property subproperty element triggers revalidation whole array kanongil sure agree point revalidating full array expensive experience hash helper see would different added todo items guides enable default josemarluedke interested picking guides work also rwjblue saw issue nt think josemarluedke picked guide yet wrote short blurb guide nice thank', 'date': '2018-10-07T20:00:23Z'}"
"18929",18928,"{'data': 'using block nested array property causes glimmer error appears glimmer bug dealing nested array properties error nestedoptions replaced options given data binding also updated similar characteristics development repo recently solved issue errors reported similar set twiddle illustrate problem display errors development repo produce errors development repo replacing nested reference equivalent avoids issue please let know assistance thank reporting issue make gist twiddle public able view twiddle says gist missing secret also thought perhaps use variable name template could mask html element angle bracket components make gist twiddle public one see example reproduction sounds like may duplicate', 'date': '2018-10-05T20:35:52Z'}"
"18930",18929,"{'data': 'using sinon triggers deprecation warnings tests see reproduction open console sinon enumerates objects thus finds accesses deprecated properties causing deprecation warnings tests yeah see console remove sinon dependency deprecation gone', 'date': '2018-10-05T16:14:32Z'}"
"18931",18930,"{'data': 'extending native classes follow new issue requested rwjblue extending native class extending emberobject throwing motivation able use native classes mixins like js class foo extends emberobject const bar fooextend class baz extends bar see embertwiddle also hit issue yes issue rwjblue timeframe fixing idea problem might hitting lot using native classes typescript using language sucks lot wonder whether postpone migrating typescript code', 'date': '2018-10-04T15:36:51Z'}"
"18932",18931,"{'data': 'doc computed properties documented properties methods computed properties currently documented inconsistently documented normalized expected documented properties quite sure correct examples computed properties documented examples computed properties documented cps file emberjslearningteammanagers thoughts given js properties called without parentheses also true computed properties makes sense top methods usually something thus usually contain verb name', 'date': '2018-10-04T13:01:21Z'}"
"18933",18932,"{'data': 'computed property cp depends oneway cp nt work twiddle demonstrates issue controller three cps take values amp based radio button click visit route twiddle route template displays state three values updates toggle radio buttons dependent cps alexspeller found removing fixes bug maybe needs update ember docs seem bug works fine removing incorrect use volatilereadonly docs definitely updated though people might fall trap realize added modifiers caused related question also correctly explained api specification also automatically fire change events must manually notify changes want observe property dependency keys effect volatile properties cache invalidation notification cached value invalidated guess safely withdrawn thanks everyone explanations', 'date': '2018-10-03T22:08:48Z'}"
"18934",18933,"{'data': 'call changeset w property throws get proxy assertion model property named size type string emberchangeset instance results error caused occurs ember assertion added also means assertion trigger object size key refers proxy minimal reproduction debugging emberchangeset case returns empty string getter calculated afaik used mapssets like might extra check necessary somewhat similar cc snewcomer nickschot create embertwiddle example pixelhandler debugging test case pretty simple update main post new findings meanwhile reproduction found press validate button error thrown console', 'date': '2018-10-03T09:52:39Z'}"
"18935",18934,"{'data': 'documentation broken link defined emberdata ver latest moment current url lifeart would open emberdata repo runspired done', 'date': '2018-10-02T18:04:41Z'}"
"18936",18935,"{'data': 'meta routing service go items tracking issue go router service x implement events x implement x deprecate events x implement x implement x implement type x implement x warn touching direct people routing service x warn touching direct people routing service x write deprecation guide handlerinfo usage x write deprecation guide events x write deprecation guide transition state usage x make transition public x document transitionfromto x document new events x add deprecation guides urls scope apis dealing template portion migrate computation use public note might tricky requires things like migrate computation use public make transitions immutable routerjs chadhietala merged deprecation app pr able gather url update deprecation', 'date': '2018-10-01T20:59:53Z'}"
"18937",18936,"{'data': 'text left aligned mobile view would like work thanks might want provide description couple screenshots move thank', 'date': '2018-10-01T18:54:07Z'}"
"18938",18937,"{'data': 'defaultgetterfunction returns wrong value actual value set undefined hi trying upgrade app using emberdecorators encountered issue ember precise issue unrelated decorators noticed decorator using instead changing app code seemed like trivial thing looks like issue present recent ember releases embertwiddle demonstrates problem nt know much internals ember object system core issue ca nt set regular property observer attached via method observers added via working fine though reason difference two getter methods methods using defaultgetterfunction seems getter observed regular properties used calling meta peekvalues calling meta see method metaobject value returned otherwise value one parent metaobjects returned means set property return parent value next lookup inheritinggetterfunction hand seems used getter regular properties observed via calling meta readinheritedvalue similar however also checked whether value exists metaobject via symbol returned nt exist means values taken account proper thing side note would nt make sense using instead checking existing properties even plain object much faster also removing first part ifstatement disjunction redundant like already said unfamiliar ember works hood two similar methods used two different getter methods thanks thanks taking time dig document going thoroughly definitely seems like bug address side note would nt make sense using hasownproperty instead checking existing properties even plain object much faster also removing first part ifstatement disjunction redundant believe actually faster circumstance please feel free test see gt believe actually faster circumstance right tested test suite used earlier nt ideal', 'date': '2018-10-01T12:38:40Z'}"
"18939",18938,"{'data': 'inconsistency rsvppromise native promises reading last posts tried removing mentions code base using latest emberjs latest embercli least one case still difference two put reproduction repo running causes one failure uncomment test passes means using native promise different using rsvp one reading reader question impression since ember interchangeable also see commented uncomment comment line resolves promise test passes using promise types sure connected insight would appreciated thanks taking time reproduce code racy test await asynchronous behavior helper made pr reproduction shows make test reliable need clarify said native promises absolutely work fine ember helper example behaves correctly implemented native promise identical timing relying races side effects observe different behavior caveat switch rsvppromise promise long waiting promise resolve thank much explanation definitely resolved issue thought fact test nt wait native promises rsvp ones question currently trying rewrite bunch coffeescript typescript noticed classesinterfaces defined takingextending instead notably breaks typescript code suppress warnings fine using native promises think going change type definitions rsvp required read eventually even removed jquery sure plan promiseproxymixin work fine native promises public api proxies method nt native promise nt know make typescript happy seems worth opening separate issue discuss added comment emberclitypescript issue linked thread clarifying types possible workarounds may', 'date': '2018-10-01T10:42:46Z'}"
"18940",18939,"{'data': 'pass hash helper linkto emptyobject lacking hasownproperty sometimes route resolve multiple records like js model const profile const user return rsvphash profile user think could use like nt work helper returns tries call resulting error workaround involves using action feels like poor experience issue ember years correct way pass multiple records using embercli edit started using following helper place workaround js import helper embercomponenthelper export function plainobject params hash const object note convert pojo used objectkeys hash foreach k gt object k hash k return object export default helper plainobject gt nt work hash helper returns emptyobject extractqueryparams tries call hasownproperty resulting error bug totally fix swapping instead would mind taking crack pr yep take look tomorrow rwjblue might days get would nt mind giving go hacktoberfest ca nt mhluska parrryy go gt gt nt work hash helper returns emptyobject extractqueryparams tries call hasownproperty resulting error bug totally fix swapping instead would mind taking crack pr code packages combinedqueryparameterconfigurationhasownproperty propname packages possiblequeryparams amp amp possiblequeryparamshasownproperty queryparams packages queryparamshasownproperty key mhluska actually unable reproduce original issue wrote test failed nt hash linkto post post hash id bar thisaddtemplate post post modelid hash useruser profileprofile userprofilelinkto hash linkto perspective nt passing record linkto pretty standard prevent route reloading data reason want pass two records via hash prevent reloading data rwjblue strange thing think maybe different versions using define standard works right decided general good pattern future might longer supported least one rfc related maybe mhluska able create test replicating issue', 'date': '2018-09-29T12:26:33Z'}"
"18941",18940,"{'data': 'ci investigate jquerynonejs loaded seeing latest master test runs real thing probably bug test harness setup making network request chancancode go', 'date': '2018-09-28T21:13:43Z'}"
"18942",18941,"{'data': 'ci investiate testemjs error seeing latest master test runs investigate fix mime type thing probably bug one upstream projects since things still running fine probably nt even need script first place need figure remove look', 'date': '2018-09-28T21:11:55Z'}"
"18943",18942,"{'data': 'isarray returns true object length property lately updated application ember change broke part application due code function happen object length property embers isarray say array mainly breaks using computed property object case content single object multieditobject using arrayproxy thats need check fixed renaming custom properties made us questions expected aware using objects anymore cbroeren code objects always considered arraylike object length property length property type number following test let instance emberobjectextend intentionally returning nonnull nonundefined length unknownproperty return false create would consider bug let know thoughts jonatahr always true check length btecu yeap mistake thanks cbroeren create example reproduction using embertwiddle', 'date': '2018-09-28T11:45:37Z'}"
"18944",18943,"{'data': 'router service behaves differently engine context regarding route path hey seems like router services behaves differently engine context compared views routes example want link engine route called overview engine mounted engine expected documented behavior route views whereas service requires mount point additionally service think three ways require route path versions hopefully issue like nt found searching thanks yes issue router service engine aware think recall another issue double check see duplicate ok thanks confirming picking searched could find anything like', 'date': '2018-09-28T09:14:36Z'}"
"18945",18944,"{'data': 'emberobjectcreate null fails emberobjectcreate rewritten longer supports passing null create effectively empty object intended case proper way bug edited comment change link proper diff test used give concrete answer best path forward believe support dropped intentionally though unlikely would consider breaking change intending create object properties methods extend anything migrate trying create new additional properties use either match trying dliblik think choices nt believe using ever documented use case see sorry responded sooner somehow missed original response rwjblue use case creating deliberately type object returned helper basic clean immutable obvious question way ie writing custom helpers object congruent semantics generated code use create objects without prototype methodspropertiesetc nt think ever intended actually', 'date': '2018-09-27T10:00:17Z'}"
"18946",18945,"{'data': 'classnamebindings removing classes added outside ember recomputes classes component attribute overwrittes class added outside example added jquery directly element suppose problem happens ember doe nt know classes added ignores put twiddle minimal working example problem using version sorry believe things working designed ember specifically ensuring classes component root element match expects classes results removing classes added others option something ember components mess extra classes issue makes harder integrate external plugins ember case trying make mixin adds perfectscrollbar component handle kind scenarios solution would make standalone component perfectscrollbar adds overhead passbubble actions extraunnecesary perhaps reach help channel ember discord app forum close since ember bug', 'date': '2018-09-26T20:07:46Z'}"
"18947",18946,"{'data': 'backport lts x land glimmerjsglimmervm release glimmer backport failing tests bump glimmer glimmer changes done currently looking reviewers', 'date': '2018-09-25T19:37:53Z'}"
"18948",18947,"{'data': 'factoryforlookup return undefined templateonly glimmer components using ember code prints templateonly glimmer component ie js file bug supposed get components seem like bug please explain use case well use case bit involved goes create component instances dynamically components dynamically generated using user input data data available fallback static templates codebase something like coffeescript userdata userdata componentname component userdata else componentname component staticcomponent owner getowner componentfactory ownerfactoryfor componentname componentfactorycreate tagname div nt work fallback case returns nt see reason component exist used statically hbs file ca nt get dynamically matter whether js file think totally valid scenario also inconsistency templateonly glimmer component normal components borispetrov work add componentjs file use template component pixelhandler add file issue goes away even true worked around problem nt tried false get back monday need information case nt see reason discrepancy component without file', 'date': '2018-09-21T13:52:03Z'}"
"18949",18948,"{'data': 'docs property documentation property specify common cases property could used component addons two threads describing common cases property addon component parent component whose child components want inherit parent template layout property parent component defined parent template inherited current api component doc describes use property cases developers nt need use layout injected app structure convention think may help describe examples docs became private api recommended questions wonder intention deprecate looks job allows set layout dinamically case someone needs runtime template resolution helper could work locks reviewed issue looks documentation clear wrong layouts section component doc following example looks indicate template yielded component default template js profilejs import component embercomponent import layout templatescomponentspersonprofile export default componentextend layout twiddle reproduce looks like error based expected behaviour example wrong misunderstood something commented previously property plan deprecate write rfc work', 'date': '2018-09-21T11:10:04Z'}"
"18950",18949,"{'data': 'meta missing docs api viewer anyone would like help important bugfix list documentation dropped ember terms rendered api docs viewer lost following public apis debugger deletemeta descriptorfor getowner partial setowner yield one super duper pleased catch kinda stuff moving forward using tests missing docs caused one multiple following public static methods missing static public meaning nt instantiate class use method missing tag file declaration directory indexed yuidoc configured got moved wrong module generally incorrectly formatted yuidoc code comments think action items figure got dropped open pr fixes explains omitted little bit tricky get hang think people todd locks know works anyone wants least attempt detective work would awesome see basic yuidoc generated output root emberjs repo looking method nt show somewhere chance showing api docs viewer show still nt show website possible website assumes certain structure hierarchy deletemeta descriptorfor marked private source nt listed therefore sure public apis someone confirm public mark appropriately given imports quite sure important least missing docs since', 'date': '2018-09-20T02:02:06Z'}"
"18951",18950,"{'data': 'router dynamic segments queryparams causes unexpected error seems related use case user tries navigate expired token leaving window open long enough api calls fail unauthorized error added logic applications error action catch type error reauthenticate user retry transition authentication problem try route dynamic segments query parameters fail error set query param works fine reproducible twiddle see error clicking dynamic segment query param link change routesdynamicsegmentjs works help appreciated thanks', 'date': '2018-09-19T21:39:16Z'}"
"18952",18951,"{'data': 'using input helper pass action per ember latest docs says set value value sent action first param otherwise send event first param however need passed action get work latest ember code shows example template code component js code hbs js code used work ember used get passed action upgrade ember sends second param event null thanks help also run updated ember action stop sending made simple twiddle show error hi eta bugfix patch already landed included next version hopefully releasing todaytomorrow', 'date': '2018-09-19T04:04:39Z'}"
"18953",18952,"{'data': 'defineproperty triggering computed property observation appears setting setting property trigger computed properties observing using computed properties observing recalculate assume behavior correct currently depend simple twiddle illustrate issue computed property recalculate using however disable line use prop recalculate observing ember sure behavior appeared ran trying remove use setting computed properties programatically vcipriani marked private used application code see ember using set computed properties deprecated team recommendation use defineproperty see based current messaging intention supporting programmatic setting computed properties appears bug defineproperty private see public api vcipriani see twiddle working need notify change since property setup async via timeout thank fix issue us', 'date': '2018-09-15T15:10:06Z'}"
"18954",18953,"{'data': 'add setupapplicationtest helper file blueprints sure needs rfc like start issue like propose changing ember app blueprints create new file js testshelperssetupapplicationtestjs import setupapplicationtest emberqunit export default function hooks setupapplicationtest hook change acceptance test blueprint js import setupapplicationtest emberqunit import setupapplicationtest appname testshelperssetupapplicationtest common ember apps additional steps performed acceptance tests also propose something similar thoughts yep totally favor checkout roughly proposal think multiple exports single leads nicer feel easier use actual blueprints thats pretty small tweak proposal anyways nt chance work rfc would absolutely love help someone else time', 'date': '2018-09-14T13:39:24Z'}"
"18955",18954,"{'data': 'rerender bug array truefalseundefined values rendering list checkboxes changing array element true list checkboxes rerendered following checkbox inheriting change along changed checkbox code use works correctly twiddle andrewtimberlake seems like using workaround issue seem like bug different purpose', 'date': '2018-09-14T07:23:17Z'}"
"18956",18955,"{'data': 'router service default query param values serialized url route default query param specified controller transition route using controller action route action default query param serialized url however transition using router service calling default value appear url reproduction twiddle possibly related although nt get errors console confirmed turns deliberate behavior described router service rfc implemented part commit even test behavior documented anywhere rfc open pr documentation rwjblue router service rfc describes adding symbol exposed hiding default query params using router service seems like never implemented still part plan happy work adding miguelcobain chadhietala since worked rfc router service may comments', 'date': '2018-09-13T14:33:03Z'}"
"18957",18956,"{'data': 'docs emberrouting module list public submodules least probably include also surprised see marked consumer api docs idea means terms ability rely semver would reflect breaking change', 'date': '2018-09-13T04:58:34Z'}"
"18958",18957,"{'data': 'docs ember module incorrectly marked private rwjblue indicates neither deprecated private time officially moved away remain documentation public thing things consumed new namespace etc nt think document alternative calls modules though think make sure things rfc based conversions documented would worth finding making sure exposed things worth noting converted source documentation things rfc way importing things making ember namespace public bring back want users new releases use new way live consumers old releases still get documentation pre gt nt think document alternative calls ember modules though think make sure things rfc based conversions documented understand trying deemphasize sounds like bit hedge private public api could result confusion example working type information ember even experienced practitioner finding difficult determine exactly public api surface framework area also plenty people still using running framework versions supposed know referring docs nt semver suggest api surface actually using could completely different documentation maybe thinking area overly simplistic feel like things either public api includes documentation test coverage guarantee breakage come major version number change deprecated soontobedeprecated hope deprecate eventually stuff falls category b private api documentation guarantee test coverage clear think agree guides suggested usage patterns written think classic stuff marked private currently must still maintained like rest public api surface discord convo issue also important note classic stuff nt marked private gone would reimplemented iirc ember namespace private atm', 'date': '2018-09-13T04:50:41Z'}"
"18959",18958,"{'data': 'duplicate includes documentation api documentation duplicate declaration method api documentation linked recent versions ember docs problem', 'date': '2018-09-12T12:39:34Z'}"
"18960",18959,"{'data': 'href attribute svg use attribute working used without quotation marks setting attribute svg without quotation marks svg rendered take look difference first example second example linter complains first example', 'date': '2018-09-12T12:17:51Z'}"
"18961",18960,"{'data': 'remove slack badge readme discord chat perhaps time remove slack badge readme yep totally agree', 'date': '2018-09-11T23:45:58Z'}"
"18962",18961,"{'data': 'factoryfor return component layout using ember code prints reason creating component dynamically nt get static layout render component page get empty div instead stuff template bug supposed', 'date': '2018-09-11T12:30:35Z'}"
"18963",18962,"{'data': 'docs syntax highlighting sometimes breaks whatever using syntax highlighting seems break around code language features', 'date': '2018-09-07T21:19:32Z'}"
"18964",18963,"{'data': 'docs emberdebug dataadapter mixed signals public api documentation reads methods likely overridden getfilters detect columnsfortype getrecords getrecordcolumnvalues getrecordkeywords getrecordfiltervalues getrecordcolor observerecord thing list marked public method public related source looks better today sure changed fix problem still exists inherited checkbox', 'date': '2018-09-07T21:08:01Z'}"
"18965",18964,"{'data': 'docs toplevel function exports emberstring missing despite marked show toplevel export seeing dasherize camelize capitalize classify decamelize fmt htmlsafe loc underscore w possibly related issue looking toplevel pages modules would expect circled text submodule like chatted mike bit think due missing missing class declaration file files path watched yuidoc', 'date': '2018-09-06T21:30:00Z'}"
"18966",18965,"{'data': 'add flag observer flag called think flag could useful well thanks link aware addons adding flag still makes sense', 'date': '2018-09-06T14:20:23Z'}"
"18967",18966,"{'data': 'unexpected behaviour helper use helper collection contains string value equals breaks render following error see action following twiddle fixed broken fixed', 'date': '2018-09-06T10:35:57Z'}"
"18968",18967,"{'data': 'error processing route index read property extend undefined typeerror read property extend undefined attempted update ember seeing error attempt run tried juggling dependencies wondered might babel thing ember v embercli node os darwin also see console looks like maybe ember nt getting properly initialised node module placeholder may looking command line tool framework code visit details parser babeleslint eslintrcjs file', 'date': '2018-09-06T09:29:43Z'}"
"18969",18968,"{'data': 'workaround buggy weakmaps firefox ember uses weakmaps internally meta value property used key weakmap broken firefox certain objects bug possible work around returning singleentry array instead object directly would nice ember would implement workaround internally moment firefox team nt seem inclined fix bug hmm tests pass firefox would mind sending failing test pr reproduction properly gauge impact', 'date': '2018-09-05T18:19:36Z'}"
"18970",18969,"{'data': 'deactivate hooks called based error handled tests found recently testing error states routes hook called end test dependent error handled example error handled global file application route hook called regardless deeply nested route caused error error handled next route causes error routes one hook called would expect end test hook route called regardless error handled produced repo demonstrates issue first ember issue happy provide extra information may missed', 'date': '2018-09-03T15:13:49Z'}"
"18971",18970,"{'data': 'docs coreobject create appear api docs website looks like jsdoc work done coreobject create nt appear corresponding docs page hard fix', 'date': '2018-08-31T11:13:50Z'}"
"18972",18971,"{'data': 'quest native classes background issue tracking progress native classes ember task list actively used strike team keep track major tasks left officially ship feel free ask questions help original rfc tasks x decide native class constructor update rfc ultimately decides behavior native classes way write looks like emberobject deprecated removed framework need get final decision rfc move forward x feature bugfixes open issues could cause compatibility issues converting native classes need get merged x classes onremovelistener observesremoveobserver interop x bugfix adds default implementations component lifecycle hooks polyfills currently going polyfill back last lts polyfills earlier versions definitely welcome working time help would appreciated x write readonlyvolatile deprecation rfc clobberability antipattern volatile generally needed something necessary move forward resolves differences native getterssetters computeds ideally address quickly readonly rfc volatile rfc write decorators rfc decorators reach stage move forward codemod decorators addon fold ember soon stage potentially viable ideally would wait stage x address open issues emberdecorators x add computedreadonly computedvolatile need way access apis codemod x blueprints used general bug important shipping though since users want use generators probably ported ember x route queryparams support think may need class decorator given prototype placement object one instance said object ever created though maybe issue x filter array based another property need way access add properties computeds codemod ultimately unneeded x update decorators x update babel x update decorators use stage transforms upon discussion seems like stuck stage transforms typescript updates likely stage finish codemod stage x folder globbing types update guides blocked decorators rfc', 'date': '2018-08-30T15:44:39Z'}"
"18973",18972,"{'data': 'transitionto passing query params url link opened new tab query params getting passed opening link new tab getting passed opening link tab', 'date': '2018-08-30T10:24:34Z'}"
"18974",18973,"{'data': 'mouse enterleave event firing jqueryintegration false enterleave events nt always fire think something component child component linkto gif demo repo related yeh related linked demo repo fix merged imagine prevent people ditching jquery could bug label fix thanks reproduction demo simonihmig fantastic thank', 'date': '2018-08-30T06:26:44Z'}"
"18975",18974,"{'data': 'linkto model queryparams configured refreshmodel true causes error link query params route definition throws error repro', 'date': '2018-08-30T00:53:01Z'}"
"18976",18975,"{'data': 'ensure ci fails yarnlock sync packagejson probably able running thank yes agreed think frozen lockfile trick', 'date': '2018-08-29T23:32:19Z'}"
"18977",18976,"{'data': 'dspromisemanyarray map unexpected behavior happening use map change content inside data structure returns plain array expected behavior expecting map return data type example think behavior occurs use embera generate map response line', 'date': '2018-08-28T19:53:18Z'}"
"18978",18977,"{'data': 'exception partials used templatename repro twiddle steps open devtools hit route hit route look console exception broken since ember works fine ember temporal fix change templatename use partial best regards run issue trying update app ember changing every usage templatename template using partial throughout app would troublesome rather avoid could chance future activity', 'date': '2018-08-27T07:30:50Z'}"
"18979",18978,"{'data': 'integration test linkto component emit href attribute repro twiddle relevant bit js module integration component mycomponent function hooks setuprenderingtest hooks test component rendering async function assert commenting following line test fails thisownerlookup route photosedit routersetuprouter lt test fail return null line present given routersetuprouter seems like private api hack actual solution problem recommended approach creating integration test references attribute anchor element created instance theseyi believe limitation router setup component tests perhaps reach forum slack see others stub routing behavior confirm href exists assert value think ok expected using routes generate href want test behaviour setup router use object pixelhandler thanks response see community solution mupkoo thanks solution works issue router private internal api could changed anytime think router class private property route classes see point cases testing generation url testing href expect concern router would feel better mocking router service used component well yep bug perse intended behavior startup routing sorts rendering tests suggestions seem reasonable though think personally instead lookup first separate discussion please make issue rfc repo making public apis', 'date': '2018-08-21T07:32:02Z'}"
"18980",18979,"{'data': 'dotted object lookup changed ember would prefer nested objects strings dots js let obj testdotted string object test dotted nested object emberget obj testdotted gt nested object however starting would return nt think necessarily great problem broke test made ember twiddle showing change definitely unfortunate broke things sorry think current new actually correct though going close hopefully nice googling point one else bitten change', 'date': '2018-08-20T06:59:00Z'}"
"18981",18980,"{'data': 'something dynamic segments problem hello new starter emberjs recently get problem like linkto cryptid show code anyone explain wrong fix emberjs version models cryptidjs import ds emberdata export default dsmodelextend name dsattr string cryptidtype dsattr string profileimg dsattr string sightings dshasmany sighting routes cryptedsjs import route emberroutingroute export default routeextend model return thisstorefindall cryptid cryptidshbs model cryptid linkto cryptid cryptidid linkto cryptidname else creatures routerjs routermap function thisroute sightings function thisroute new thisroute sighting function thisroute edit thisroute cryptids thisroute cryptid path cryptids cryptidid thisroute witnesses thisroute witness sketchk confirm actually exists addition usage questions posted development issues welcome ember slack channel ember discuss community find plus use qq local group welcome join us nightire thank much join local group soon finally find problem round brackets code like wrote like nightire means qq group number use search find nothing sketchk group name emberjs help', 'date': '2018-08-17T04:49:33Z'}"
"18982",18981,"{'data': 'memory leak upon attaching action handler component noticed memory leak upon attaching attaching action handler component repro steps created simple component correcponding template template click action handler defined created integration test component run test pass expected chrome dev tools memory heapshot notice class gets retained expected expected destroy completion test repository sample app repro root cause glimmer runtimejs retaining reference container instance believe object positionalarguments retains reference container test finished instance positionalarguments creates dnalagatla curious difference behavior change pixelhandler thank looking issue changing format effect behavior still noticed leak', 'date': '2018-08-16T18:19:26Z'}"
"18983",18982,"{'data': 'inelement helper working inelement helper throwing following error uncaught typeerror parentinsertbefore function using ember version finally got work passing element computed property indeed brought point rfc decided go forward anyway users get tripped since almost always want pass selector node works element returned computed property computed property nt work nt know', 'date': '2018-08-15T11:44:01Z'}"
"18984",18983,"{'data': 'distemberprodjs multiple sourcemap declarations breaking sourcemap build summary current npm version update issue remains contains file file contains multiple declarations form according source map spec one line form end file impact means file built embercli valid sourcemap file please see error bug erroneously closed issue assumed embercli embersource cause including multiple declarations causes issues fastsourcemapconcat libsourcemapjs since library removes first one valid behaviour since one declaration per file suggested fix remove extra lines references similar issues downgrading fixes first version npm already exhibits bug happened somewhere bug still present latest release search reproduction effectively prevents us upgrading sentry stack traces unparseable would love help fix know little ember internal build pipeline could get pointers potential sites interest start investigating first bad commit commit author robert jackson rjackson linkedincom date thu apr day earlier merged likely actual cause issue', 'date': '2018-08-13T16:09:31Z'}"
"18985",18984,"{'data': 'ember bracket components enabled default code block could figure broke update noticed declared variable called option minimal reproduction works breaks change declaring iteration variable called option creates following error message error assertion failed use value component name component names must contain hyphen guess ember tries resolve option variable component working ember broken ember one could argue bad naming convention cause hard figure issue duplicate', 'date': '2018-08-13T12:58:15Z'}"
"18986",18985,"{'data': 'calling isempty instances objectproxy wrapping arrayproxy throws assertion failed attempted access property working one projects encountered error managed boil following looks like regression caused utilisation getters worked ember breaks example', 'date': '2018-08-13T09:12:12Z'}"
"18987",18986,"{'data': 'missed old regression events metaissourcedestroying used target event issourcedestroying state determined send event long lived object would receive events shorter lived object willdestroy changed nt mean afraid maybe another thing may make hard people update past', 'date': '2018-08-09T22:51:45Z'}"
"18988",18987,"{'data': 'allow routes named array rwjblue commented making array reserved route name artifact things anymore robert please confirm summary correct add details feel free edit description directly wondering good issue new contributors yep totally correct longer need assert', 'date': '2018-08-09T00:12:14Z'}"
"18989",18988,"{'data': 'update watchers component teardown note sure able come concrete independent reproduction latest beta seeing error code works previous versions ember code question computed property component array components triggers error think component torn reasons nt clear switch using longer get error sure many instances use something odd must happening case ca nt quite ascertain yet thought would helpful open something case anybody ideas actually issues fixed switching macro iirc nt updating certain circumstances rate got recently upgraded ember noticed error cropping case noticed happens page navigate away navigate back error happens navigate back would really love repro loss nt really guess whats going interest time moved past since bunch small things fix app workaround see put something together tried build repro embertwiddle quite time failed think close issue pending repro rwjblue definitely issue nt close try reproduce somehow would awesome thank trying fwiw totally happy clone gh repo reproduce easier interesting found problem might bug bug ember case ember simple auth signing assign user service let call auth js export default class auth extends service reads currentusercompany currentcompany sign async loadcurrentuser userid const user await thisstorefindrecord user userid thisset currentuser user lets say components binding authcurrentuser usual maybe later sign basic fine sign blam get error like old user model still attatched auth service obviously destroyed state new user model loaded replace blah ember barfs trying setup watchers old user solution mouse like tip toe around problem voila problem solved case array models weakmap component using array later models destroyed component freaks answer mouselike destroy array models tip toe weakmap clear array', 'date': '2018-08-08T14:01:33Z'}"
"18990",18989,"{'data': 'query params linkto destination wiped current url different query param hi experiencing issue linkto specifying particular query param destination like linkto route different query param url myroute creatingtrue click linkto successfully taken query param seems wiped get around adding baz query params controller myroute like seems like bandaid fix larger problem nt entirely make sense relevant myroute team project currently version ember looked around similar issues posted could find anything apologies one missed somewhere thanks danielraggs think expected behavior query params per routecontroller global app like would expected traditional server rendered html app see controller tracks param value url perhaps document expectation clearly pixelhandler hit issue today could nt find documentation either came across thread created pull request documentation update', 'date': '2018-08-06T18:47:56Z'}"
"18991",18990,"{'data': 'add actions logging debugger options would useful option log called together arguments maybe would something hard add current ember infrastructure sure looks like one nice things redux able log actions state changes probably would harder emberdata leooo yeah sound nice currently tools track promises flag enable logging every action fired action handled error thrown help perhaps create issue rfcs repo see small enough need pr rfc repo open issue feature request pixelhandler created thanks', 'date': '2018-08-06T13:31:51Z'}"
"18992",18991,"{'data': 'disabledclass linkto component might work depending attributes order component documented property supposed change class disabled link see marked private sometimes feature needed set value expect link class following code work expected expected link class fact class code works fine think works way classnamebindings contains disabled defined computed property without dependent keys setter returns first example setter property called changed default value gendelflugansk use instead pr fix inconsistency bekzod nt try believe using lead issues class name lines trigger setter property template positioned link receive disabled class instead value property gendelflugansk thanks writing issue specific code examples looking docs seems use static dynamic seem nature using private api unpredictable perhaps another solution surrounding dom classname customize', 'date': '2018-08-04T15:29:09Z'}"
"18993",18992,"{'data': 'quest mocha blueprints rfcs background updated blueprints qunit reflect changes made rfc rfc embermocha implement blueprints mocha tests well desired behavior generating testing blueprints generate simplified mocha style tests supported host app several tasks extend blueprints support simplified mocha style blueprints alongside legacy embermocha blueprints tasks x dhaulagiri extend testframeworkdetectorjs support directory called simplified mocha blueprints live blueprint test folders eg decision use directory based host version add simplified mocha blueprints x dhaulagiri acceptancetest x dhaulagiri componenttest x dhaulagiri controllertest dhaulagiri helpertest initializertest instanceinitializertest x dhaulagiri mixintest x dhaulagiri routetest x dhaulagiri servicetest x dhaulagiri utiltest embermocha newer apis landed point repo needed work ready think point best path make quest style issue checklist guidance generally speaking efforts move forward fairly quickly personally would love see updated blueprints land time current beta rwjblue copied quest items qunit issue turn quest updating mocha blueprints let know plan seems sound little loop issue probably need help initializer tests seem differ qunit ways ca nt quite understand right way write sorry delays vacation finally getting caught back merged ones seemed ready commented others needing rebase restarting ci flakyness etc', 'date': '2018-08-03T23:51:15Z'}"
"18994",18993,"{'data': 'broken willchange arrayobserver arrayproxy certain bug intended used observing using proxy would enter willchange method array actually changed occurs change see screenshots console logs shows seeing vs seeing btw continue dig code changes see intended wanted get case quick easy answer goal wasis able see relationship arrayproxy changing id like know exactly record removed version version found commit way find explanation handy functionality longer exists still properly regular array arrayproxy thought act like array sugar top thanks help suggestions arraywillchange happens proxy changes proxy backing array content supposed use content use objectat proxy general mistake observe one thing make assumptions regarding another thing changing though looking closely example seem bug proxy supposed cache last observed state notifying change using proxy observer know something different thing changing expected keep working proxy keeping last observed state mmun actually looking closer never accessed proxy state ever observed proxy surprised even fired change event example test ember test suite issue nt log proxy still fires change event wrong info ideally would fire change event since proxy never used would match behavior computed properties thanks attention krisselden actual environment proxy template observed little test written nt quite right pointed nt grabbed proxytoarray yet however still issue run snippet js environment still work reason toarray returning different result narrowed proxywillupdate proxy length instead proxy willupdate proxy willupdate length lengthdirty length different keep digging code find length providing value environment sorry bug found library using changing length property arrayproxy mmpestorich removed lodash files app works expected somewhere must overriding length property gets defined', 'date': '2018-08-03T19:42:51Z'}"
"18995",18994,"{'data': 'sortyby emberarray longer returns emberarray ember returns ember array returns another ember array implements ember returns undefined returns native array broke emberelsewhere possible broke apps addons think fixed though nt dug confirmdeny look tomorrow still broken already includes far tell sounds like bug perhaps next steps create failing test anyone task also anyone confirm fixes issue seems like test show issue', 'date': '2018-08-03T16:50:39Z'}"
"18996",18995,"{'data': 'constructorname unique production build using hash key store class metadata property decorator compile production classes nt name least guaranteed unique actual classname set browser variable name using emberobjectextend going dev minified otherwise want name need still going guaranteed unique would suggest use map keyed constructor function got bitten today well used key worked dev prod builds bit troubled one would expect class name usable dev prod maybe something class names nt get anyone help understand bit behaviour oh btw created discuss topic hitting github issue', 'date': '2018-07-31T23:49:20Z'}"
"18997",18996,"{'data': 'quest ok listen incoming attrs recompute computed property found trick made code lighter reinvokes computed function without need using setting extra variables scope component trick something like computed property update component refresh every time attribute changed outside injected bad repercussions homeslicesolutions perhaps ask question forum ember community slack use issue tracker main bugs close perhaps form slack see', 'date': '2018-07-31T19:49:48Z'}"
"18998",18997,"{'data': 'rubygems bit behind latest version rubygems would possible get released thanks single package bower type dead meaning use npm package via embercli opposed getting single js file ember longer publish rubygems bower etc using npm registry approved mechanism consuming type migration guide transitioning rails app using embersource gem use npm module thanks', 'date': '2018-07-30T15:12:41Z'}"
"18999",18998,"{'data': 'routerservice rooturl handled inconsistently seems like rooturl property handled inconsistently example currenturl urlfor currentroutename return different results former one excludes rooturl latter one includes js export default controllerextend router service urlfor computed function return thisrouterurlfor thisroutercurrentroutename addition transitionto replacewith accept imho correct url includes throw error called like work fine ember twiddle buschtoens believe original use case using application hosted root folder specific domain eg ember app transitions concerned path route ember app transitions track path ember app specifically pretty sure described intended design use nt think bug agree pixelhandler attempting provide url see location bar browser whereas attempting provide app url buschtoens think pretty confusing documentation would love help figuring make docs better', 'date': '2018-07-30T14:33:18Z'}"
"19000",18999,"{'data': 'relevance emberobjectcomputed macros emberawesomemacros past months found using almost exclusively macros define properties hardly writing properties simply syntax declarative issues keeping list dependencies sync implementation using mostly emberawesomemacros addon instead macros defined emberobjectcomputed three reasons macros composable avoids name intermediate properties minus exceptions eg macros also available embermacrohelpers helps defines custom macros easily three reasons think superior technical solution macros emberjs users however confusion due overlap functionality two instance macro exists packages one composable one given confusion would make sense replace existing package thereby promoting latter official emberjs package course macros missing would ported thanks writing think rfc works bug generally like track issue tracker would mind opening issue emberjsrfcs repo instead thanks prompt reply rwjblue posted rfc issue', 'date': '2018-07-30T13:33:55Z'}"
"19001",19000,"{'data': 'jqueryintegration optional feature prints warning even enabled followed steps needed enabling jquery integration latest versions installed still see warning console accessing see following check returns case think defaults perhaps removed hash value code changed missing something ps ember latest ember cli borispetrov file still see warning make example app reproduces issue link pixelhandler think warning comes thirdparty plugin namely actually issue opened case yes nt warn use code nt suppress issue plugins expected something apart waiting addon updated actually lied also warns code something like gives warning please tell reproduce code try create full sample confirm things behave strangely investigate gt think jqueryintegration defaults true perhaps removed hash value exactly basically makes impossible distinguish jquery enabled default enabled explicitly rely distinction would say fix create pr agree rwjblue thoughts simonihmig prefer fix suggested original post think would also work borispetrov would also trigger deprecation user explicitly opted jquery setting true want prevent accordance rfc explicitly wants use jquery able including using without deprecations simonihmig documentation deprecate specifies falsy values would trigger deprecation either would result equal trigger assertion value would result expression hence show deprecation missing something gt jqueryintegration either true undefined would result emberenvjqueryintegration false true equal false trigger assertion want show deprecation flag undefined nt show either true user explicitly wants jquery false jquery available first place use whatever else comes jquery would break code anyway mentioned behavior way distinguish runtime user set undefined heshe explicitly set true fwiw repo failing test issue bendemboski thanks reproduction helpful created pr fixes problem', 'date': '2018-07-30T11:34:25Z'}"
"19002",19001,"{'data': 'indexjsmap referenced emberprodjs included embersource ember embercli create new ember project modify generate sourcemaps production build gives following warning referenced pieterv perhaps reported embercli project reported issue closed thanks pixelhandler look like issue related cli think reopened got thanks might fixed released yet though', 'date': '2018-07-24T08:44:29Z'}"
"19003",19002,"{'data': 'generated addon tests import addon module namespace currently mixintests generated within external addon import respective mixins directly namespace like intended pattern several types tests import thing tested import dummy app make generated tests consistent correct area fixing blueprints blueprint tests known sites happens util tests initializer tests helper unit tests related', 'date': '2018-07-23T21:34:14Z'}"
"19004",19003,"{'data': 'packages missing list ember api doc site number packages show missing selected ember api doc site seems like maybe marked private fixed closing looks like resolved', 'date': '2018-07-20T18:01:56Z'}"
"19005",19004,"{'data': 'ember typeerror class constructor connect invoked without new ember test looks something like js test display inline style based items max async function assert assertexpect update ember get error like rewrite test use class syntax instead ember object like everything works js test display inline style based items max async function assert assertexpect considered regression something glimmeror emberglimmer internals need quick repro embercli project one found broken upgrade ember ha best situation friday write issue realize internals hacking fault js import component embercomponent import wrapemberobject emberobject import export default statetocomputed dispatchtoactions gt gt return incomingcomponent gt const wrappedcomponent incomingcomponent component', 'date': '2018-07-20T14:03:26Z'}"
"19006",19005,"{'data': 'component helper updating component name changes upgrading app ember running issue helper yielding components twiddle demonstrating issue ember dependency set text changes set ember text changes ember set text update anyone else running issue tom dale provided workaround twiddle rob jackson tom dug bit came work around using component helper issue comes ast transform completely failing positional named arguments invocation nlfurniss see workaround thanks sharing solution pointing issue positional named arguments feel free close ready pixelhandler close workaround regression ember fixed whoops', 'date': '2018-07-19T20:08:59Z'}"
"19007",19006,"{'data': 'routerserviceurlfor causes typeerror test environments autobootfalse steps reproduce use component output value template attempt render component integrationrendering test expected behavior test nt crash since use makes sense router routerservice work however would expect return empty data rather crash similar behaves scenario twiddle click run tests see exception gt since autobootfalse use makes sense router routerservice work however would expect return empty data rather crash similar linkto behaves scenario value using use case sure also stubbing router service test default ember behavior test environment anyone trying use write integration test vanilla ember setup would run problem apelleranopw thanks explanation apelleranopw try stubbing router test perhaps see thread could workaround would stubbing ember functionality think part problem routerservice used transitions also url generator makes sense transition stuff available unit rendering test make sense url generation exist', 'date': '2018-07-19T18:22:18Z'}"
"19008",19007,"{'data': 'jquery included twice vendorjs upgrading hi upgrading reason jquery getting included twice vendorjs causing jquery plugins break jquery reinitialized later everything works fine followed steps ember update change way debug ember build process also known issue dont know pointers much appreciated reason stay sure would causing specific issue reported seem like prior issues recall era since neither supported versions really sure since app huge right micro upgrades going one minor version testing go might help us narrow issues different addons party code using app might try going another version test meanwhile way debug build process like discuss perhaps reach embercli channel chat regarding debug ember build likewise create reproduction issue nt think ember bug robert mentioned may worth upgrading newer version pixelhandler ye updated think since still bowerjson packages think thats causing issue added remove jquery ember cli resolves issue close ticket debug reach slack help vendorfiles jqueryjs false', 'date': '2018-07-19T00:24:48Z'}"
"19009",19008,"{'data': 'currenturl longer working acceptance tests app currently soon upgrade ember higher test suite starts failing bunch assertions like await click button type submit await settled assertequal currenturl dashboard however helper longer seems updating awaiting asynchronous things always returning previous url pause test console log second returns correct url thinking something might changed settled async logic tried everything pin cause error happening soon gets upgraded anyone help thanks dbbk using new testing setup ember eg importing embertest helpers like also able make reproduction issue took managed track issue basically upgrading ember app nt upgrade underlying test helpers package forcing upgrade command works gets transitive deps embercliqunit yarn remove embercliqunit yarn add embercliqunit', 'date': '2018-07-18T21:14:19Z'}"
"19010",19009,"{'data': 'embersource hi guys updating embersource get following errors warning ignoring input sourcemap vendoremberemberdebugjs enoent file directory warning ignoring input sourcemap vendoremberembertestingjs enoent file directory anyone else go back warning gone nt seen issue yet provide demo reproduction hit npm install update another package saw full npm install go back ember source error gone exactly problem regular upgrading windows poplevente herveseger able resolve issue clearing nodemodules directory help pixelhandler solved last version far see issue known maybe related dupe seeing downgrading fixes issue could downgrading also worked see last version also fine hi pixelhandler warnings gone checked today run times past weeks maybe dependency upgraded know warnings disappeared fact gone still issue see download look file multiple declarations form invalid please see details breaks sourcemap build rwjblue repro case closed copy steps reproduce create new ember project install latest version embersource add sourcemaps build build production results ember build environmentproduction building warn broccoliuglifysourcemap indexjsmap referenced assetsvendorjs could found cleaning built project successfully stored dist file sizes kb kb gzipped b kb kb gzipped b note error message indicating sourcemap could built closing favor', 'date': '2018-07-18T11:59:27Z'}"
"19011",19010,"{'data': 'rendering loop breaks application ember following template breaks application simple array console see error happen tags ie works fine happen ember repository demonstration yeah confirmed encountered error upgrade somewhat surprised broke would expected break due angle bracket invocation feature try dig confirm related changing resolve issue assuming guess angle bracket invocation feature correct rwjblue yes changing helps thank explanations informational message problem model img changing img ie foto resolves error breaking change embersource gt documented somewhere another information issue tricks lot key nt use html tag name part helper yields something p html tag name pname people person fine personname sure breaking change hope nightire tell use html tag name part html tag used inside block also think affects block helper yields something including components confirm yielding block param used angle bracket invocation result issue see following issues background information change happened try figure fix however intend land part along support linting applications general guide expecting patched probably still good idea refactor away patterns currently breaking embertemplatelint rule great way enforce also started getting error unreachable addon considered breaking change also little confused rfc whether allowed supposed work allowed buildtime breaks runtime gt considered breaking change yes breaking change working fix also little confused rfc whether allowed supposed work allowed buildtime breaks runtime current behavior matches rfc stated essentially block param named blocks template would assume block param yielded closure component attempt render based feedback issues determined result definitely something consider breaking change current plan discussing core team ensure block params shadow normal html elements inside blocks continue render html element assume invoke yielded component issue deprecation scenario detected ensure linter setup newly generated ember apps lint using confusing block param names block param could html element name html element invoked blocks template backport fixes ember issue last couple days well trying figure going changing fixed problem well throwing documentation issue gt throwing documentation issue thanks sorry issue rwjblue actually ables find evidence template lint rule exist somewhere else cafreeman listed though rule ah ca nt believe missed thank rule nt descriptive ended thinking rule another issue formatting vscode ember addon difference formatting issues errors think linter question better error future everyone running linter imagine coworkers running knowing going error nt useful ya mentioned consider bug totally want make ergonomics much better eg issue warning helpful message instead error actually confused ambiguous nt anglebracket components need invoked capital letter gt nt anglebracket components need invoked capital letter see dynamic invocation section rfc background', 'date': '2018-07-17T16:41:15Z'}"
"19012",19011,"{'data': 'ember array acting wierd insertat replace hi guys since updating ember alot errors like methodapply function happening within array actions like insertat replace example tried reproduce embertwiddle simple arrays made screenshot array thing simply trying insert position item already got error anyone idea could happen worked well ember error sendeven embermetal interesting deep copy array actions working find yet help welcome thanks idea guys ember array breaking alot places example using simple setobjects source array simple array input mostly input array initials arrays content sure going getting almost array functions following error uncaught typeerror methodapply function typeerror methodapply function sendevent arraycontentwillchange replaceinnativearray arrayreplace classreplacecontent classreplace source input reproduce within embertwiddle sure different application see alot issues sorting arrays returning array also array related issues someone else similar issues arrays workaround make deep copy object using poplevente able reproduce issue example application link repo noticed mention workaround workaround make deep copy object using ask ember community slack forums see anyone similar issue pixelhandler could reproduce sample application unfortunately yes workaround deep copy clone innitial array using ask community forums answer unfortuantely redirected array coming created also wondering events fired could sort array oberserverlistener broken change array property change notifications also perhaps missed bug report actual versions question mentioned broken works real version numbers much useful sorry guys could answer version brake since version dont observer far know tries load exact values array simple application break wierd impossible reproduce ouside systemm maybe guys idea could brake based info provided could narrow donno say', 'date': '2018-07-17T09:45:38Z'}"
"19013",19012,"{'data': 'linkto work properly wrapped element bound event listener ember apps often use following pattern htmlbars basicdropdown dropdown dropdowntrigger open menu dropdowntrigger basicdropdown way jump specific route close basicdropdown menu time otherwise rely pattern always worked upgrade ember found click linkto cause full refresh unless remove wrapped element figure details little debugresearch shows never chance execute method component clicking since issue occurs versions consider bug mention upgrade version talking version range also provide reproduction demo repo totally fine make easier poke things yes sir trying make demo issues embertwiddle fixed nightire curious instead using using action helper work linkto go foo foo action helper works nightire ah cool yeah think using specific reason like need access method handles click think using assigning function directly dom bubble thing may using great resource actionsevents close', 'date': '2018-07-14T22:51:31Z'}"
"19014",19013,"{'data': 'attempted call send action deactivate destroyed object tests ember tried set embertwiddle working add addons put together minimal example repo happening tests passed ember failing ember error like reproduce clone repo tests fail error similar one change version repeat steps amp everything passes example like real app problem modal dialog contains typeahead something selected powerselecttypeahead modal closed seems similar also happening canary experiencing well acceptance tests failing asserts running awaited route transitions complete app destroyed liquidfire sends notification container pgengler workaround robert jackson mentioned help see seems like various addons hitting problem implemented workaround stopped hitting problem pgengler close continue hit issue feel free reopen great weekend', 'date': '2018-07-13T17:42:53Z'}"
"19015",19014,"{'data': 'emberrouting uncaught typeerror currentwhensplit function uncaught typeerror currentwhensplit function sometimes got error debug faced emberhotload installation toranb ideas somehow became array instead boolean string ca nt find overrides component proprerty project node modules lifeart got covered boss add config exclude linkto component hot reloading like see commit core team closed hot reload related supportedofficial addon nt think need handle thanks toranb', 'date': '2018-07-13T14:15:25Z'}"
"19016",19015,"{'data': 'routes loading safari chrome mac getting next error safari chrome mac error module name emberdemoroutesitemsindex loaded yet context use require sorry forgot include de ember version embercli node os darwin ever working chrome windows ember version number would helpful access app deividkamui resolved issue yet please create reproduction issue perhaps bekzod mentioned link repo example application demonstrates issue', 'date': '2018-07-13T03:59:52Z'}"
"19017",19016,"{'data': 'ember module system similar last comment one access modern way without importing need escape html app decorating userinput markup marking ca nt find way without writing escaping function importing kind addon found answer yet asking ember community slack forum help get answers question found dialog post never find satisfactory answer though post slack forum currently following component future may import properly remove lines found yea nice links found thread travels think idea future import directly eg similar unfortunate downside relying handlebars export functionalities via module api think kind waiting point', 'date': '2018-07-12T23:11:21Z'}"
"19018",19017,"{'data': 'allow disabling eventdispatcher assertion tagless components opt eventdispatcher assertion major annoyance trying build container components assertion failed define function handles dom events tagless component since nt dom element emberglimmerlibcomponentts triggered define methods pass actions named like default events custom events handled eventdispatcher ember twiddle demo assertion technically correct explicitly want opt tagless components order avoid use needlessly convoluted verbose action names like calls handleevent viewmixin delegates component handleevent haselement indom function needs check whether proposed optout flag enabled immediately love submit pr get accepted call flag something like think better longer term solution would avoid issues completely via custom component manager assume talking rfc giving another read blush correct try join efforts', 'date': '2018-07-12T15:41:59Z'}"
"19019",19018,"{'data': 'documentation issue page view button nt working seems like get error console clicking error processing route versionshow ember data request get returned payload texthtml r n r handleresponse ajaxsend ajax ajaxrequest ajax ajax lt e lt e ajax queryrecord queryrecordsend ajax ajaxrequest ajax ajax lt e lt e ajax queryrecord queryrecordrun hjoin hrun hjoin hthe anchor tag references releasecookbookuserinterfaceandinteractionresettingscrollonroutechanges class btn emberview nt latest link beginner trying figure things thanks reporting follow progress root cause issue page questioncookbookuserinterfaceandinteractionresettingscrollonroutechanges nt exist latest version guides nt exist exact place would encourage anyone opinion desired behaviour comment follow conversation see trying figure actually happen push button scenario would great get feeling community expecting', 'date': '2018-07-12T10:39:58Z'}"
"19020",19019,"{'data': 'template helper rerendering following component ember coffeescript import component embercomponent import emberarray import later emberrunloop export default componentextend init gt super arguments set array b c addobserver array gt consolelog changed later gt set whenever occurs second element array changed neither observer get called template rerender observer guess normal template funnily enough nt work like whenever property object replaced rerender inconsistency bug created twiddle code problem sure bug nt think observer triggered changing array changing content observe use instead works urbany yes also think observer trigger also nt think triggered still trouble template rerendered think real bug try using strange use internally everything working fine twiddle even observer correct saying wo nt trigger like said sure work never used edit array like let wait someone team answer question supposed update array elements supposed update array elements update objects array values replace could addremove element also observes length array even objects would nt trigger update unless observe specific key btecu actually code used objects inside array also nt redraw using gave example values simpler understand never used elements array rather set fine example updates template also triggers observer example thing setting whole element rather element property know works example semantically different borispetrov yeah used change member array', 'date': '2018-07-11T12:16:32Z'}"
"19021",19020,"{'data': 'bug ember api documentation links source broken travisci jobs messing api docs understand explain wrong detail also screenshot seems like may related emberdata issue ember tbh many repos particularly area scripts generating api docs based comments source nt know appropriate place report emberdata references source urls pointing folder within travisci build artifacts gt emberdata references source urls pointing tmp folder within travisci build artifacts thank nt spot invalid url poked morning tbh many repos particularly area scripts generating api docs based comments source nt know appropriate place report yep totally understood since ember api docs nt issue dig emberdata doc generation differs embersource think issue fixed closed', 'date': '2018-07-11T06:39:08Z'}"
"19022",19021,"{'data': 'hang active class current route routes js thisroute posts function thisroute index path thisroute show path postpath function thisroute people path people problem class active take example link case class active hang two links make class active', 'date': '2018-07-09T21:10:24Z'}"
"19023",19022,"{'data': 'strange work bootstrap dropdown bootstrap ember contents emberclibuildjs file js use strict const emberapp require emberclilibbroccoliemberapp moduleexports function defaults let app new emberapp defaults apollo exclude graphqltag fontawesome icons freesolidsvgicons appimport nodemodulesbootstrapdistjsbootstrapminjs return apptotree problem line dropdown works fine line present dropdown works second time attached two screenshots two clicks problem resolved follows js use strict const emberapp require emberclilibbroccoliemberapp moduleexports function defaults let app new emberapp defaults apollo exclude graphqltag fontawesome icons freesolidsvgicons return apptotree', 'date': '2018-07-09T19:55:19Z'}"
"19024",19023,"{'data': 'bug inconsistent rendering update sure minimum reproduction observed ember power select observed first two selects expected works select opens searchbox inside gains focus immediately result input seems never get focused closer inspection get focused immediately looses event triggered sure changed exactly rendering engine makes input loose focus first suspected could related usage observe problem pass nt make use temporary workaround use instead seems regression suspect due migration microtask based backburner landed looked causing blur fire trace nt show anything helpful called blur event trigger nt know element would gain focus cibernox noticed mentioned fix also temporary workaround use instead seems regression link code example fix also docs open select says type search start type nothing need click search field type', 'date': '2018-07-07T19:53:22Z'}"
"19025",19024,"{'data': 'ember amp ember engines incompatible could nt reopen issue creating new issue show still defect latest ember full working repro seen ember includes fix ember current release lts nt think would normally patch releases', 'date': '2018-07-07T15:36:55Z'}"
"19026",19025,"{'data': 'docs appinstance register w instantiate false registering value container options subsequent hand value back directly demo worked least years iirc ember templates end container mechanism stefanpenner informs also part module works object stored container pojo w api docs indicate must pass regard something like intimate api allowing consumers flexibility use container way confidence ts factory case current documentation register containerkey string value function options instantiate boolean singleton boolean arbitrary value case instantiate false gt container nt care value register containerkey string value options instantiate false may also worth clarifying registration api wants ember factory something seems fine update docs', 'date': '2018-07-06T04:53:43Z'}"
"19027",19026,"{'data': 'attributes value set differently something seems changed way attributes set issue came light invesitigating issue setting attribute element make sure internet explorer fire input events used work embersource embersource stopped working guess glimmer compared value set null else set set undefined make sure get passed along created tiny demo app demonstrate see input events triggered placeholder attr changes case change see input events triggered explain problem eps turns ember started open immediately rendered bug triggers event placeholder input changes either inside outside stupid sounds real deal eps detected disabled placeholders something must changed way works ember probably even glimmer setting placeholder null triggers event eps programmed open user types searchbox reason selects opening immediately issue happen ember rwjblue issue try beta yet might intended way handled seem intended behavior ember included fairly major bump glimmer version used explains start minimal reproduction dig realize eps issue largely affected seems underlying issue affect browsers right hard time reproducing issue would expect cp component twiddle trigger attr change also triggers ember versions ill investigate eps try find going updated twiddle current release', 'date': '2018-07-04T13:48:10Z'}"
"19028",19027,"{'data': 'missing docs defineproperty help wanted defineproperty referenced solution deprecation documented last documented look docs update use syntax examples method currently emberobject update yuidoc reference using format similar methods like computed changed yuidoc syntax since get review pr someone ember core learning team help updating doc include defineproperty pr resolved', 'date': '2018-07-03T13:53:46Z'}"
"19029",19028,"{'data': 'infinite contentfor body inserted errors instead crash stop issued development env tested production errors code component name typo something like wrong content reached inserted certain url app reinsert contentfor body infinitly tab killed crash crash stop process common errors exemple need click link reproduce bug ember', 'date': '2018-07-02T16:10:07Z'}"
"19030",19029,"{'data': 'belongs relation cleared server response version setup scenario js const comment storecreaterecord comment commentsave somewhere else server response commentset post apost gt server responded obviously payload commentget post function post consolelog post post could bug behavior inconsistent appears relation least classic model attributes makes hard let form opened saving sorry wrong repository', 'date': '2018-06-29T13:14:47Z'}"
"19031",19030,"{'data': 'bug components rerendered even classnamebindings rely properties nt actually change hook called even class name would change see click button see console output thanks kris', 'date': '2018-06-28T17:58:28Z'}"
"19032",19031,"{'data': 'appendchild extension point deprecated without warning replacement using property app custom key navigation implementation know changed added override method component code stopped working ember due longer calls view function mutates array privately changed back least curly components alternatively would like new hook added know childview added reverted issue title appendchild extension point deprecated without warning replacement seem correct deprecation see using childviews property app custom key navigation implementation know changed added override appendchild method component code private api documentation find suggests userland hooks quick search emberobservercom shows little usage either addons appendchild note search includes results also childviews looks usages nt think raises level intimate api would require lts deprecation cycle gt using childviews property app custom key navigation implementation lets focus part share information monkey patching help implementation yes know private obscure usage key navigation based ember components either contains focusables groups component iterate determine elements focusables thus targets key navigation used work back cycle point ember stopped signalling changes property caused monkey patch know achieve nested element detection ways performant somewhat condensed example template using would suck add explicit bindings code nicely represented implicit hierarchy note work focusgroup logic added element contain focusable elements nevermind found another way left wondering ember bothers collecting good question indeed smiley afaik real use ember inspector childviews support probably removed even used ember inspector anyway actual issue closed', 'date': '2018-06-27T12:31:32Z'}"
"19033",19032,"{'data': 'ca nt use js native proxy ember object ember seems strip proxy use prototype new ember object tested ember twiddle works using proxy prototype normal nonember object passing object result properties object copied prototype newly created class nt fully understand trying share nonemberobject version trying ah explains currently writing query builder fluent api using proxy would saved typing wanted trap certain function calls handle one generic function probably way ember object use handler call function using would much overhead case write functions thanks swift response', 'date': '2018-06-26T16:38:00Z'}"
"19034",19033,"{'data': 'button component ignores disabled attribute jquery included noticed inconsistent component behavior jquery included vs excluded adding component looks like mybuttonjs mybuttonhbs using svg icon content like difference occurs click svg content rather button jquery used fire jquery excluded fire value sure correct pointing since inconsistency recently tripped attempted repro jsbin twiddle could nt figure toggle inclusion jquery contexts built simple example app contains single integration test fail jquery excluded pass jquery included', 'date': '2018-06-26T16:31:12Z'}"
"19035",19034,"{'data': 'attempted call send destroyed route upgrading get hundreds test failures seem related use andor destroyinged objects sure problem able create twiddle failing test working test failing test failures similar messages eg although tbf one might separate issue issue related combination things hook called router hierarchy destroyed assertion added calling destroyed objects quick workaround twiddle would modifying something like think correct fix would router avoid calling teardownreset oh ok implement something like similar', 'date': '2018-06-26T10:19:21Z'}"
"19036",19035,"{'data': 'consider making import clearer javascript module api awesome applied codemod however small issue eslint complains using nt look like supported codemod documented part rfc would something better documented considered part codemod js modules api created created imports public apis include general legitimate use cases curious use case share share vague examples tl dr used things really troublesome testing common scenarios things timers one example time user inactivity another services connect websockets nt want occur acceptance testing feel like useful escape valve kinds scenarios track instead locks already tracking missing apis nt think right solution scenarios note saying nt need something nt think right semantics loads baggage issue specifically catalogue use cases decide right path forward nt right solution scenarios could suggest approaches flag ember specific things like disabling auto boot application instance dom ready testing alternative make app specific flags things want disable setrestore test setupteardown invariably someone wants test something disabled sets test invariably subtle issues arise especially new things get added use escape valve around web stackoverflow various blog posts various libraries way selectively avoiding particular code paths testing seems like reasonable thing think would good community clear direction circumstances suggesting everyone implement flags setup teardown means potentially different ways feels oppositional convention configuration gt seems like reasonable thing think would good community clear direction circumstances totally agreed asking specific use case examples like popup notifications disappear bit faster testing mode every single notification currently increases build time seconds would nice application instance initializer looks notification service changes setting testing true', 'date': '2018-06-25T11:57:09Z'}"
"19037",19036,"{'data': 'embersourcechannelurl returning outdated urls beta amp release used built travis repo shows latest beta branch build travis built similarly shows latest release looks correct ht rwjblue fixed correct thanks beta back release think happened releasen branches built going rebuild beta amp release fix think long term need better way ensure data json files correct beta release leave buildtype travisyml think would solve problem think someone rebuilds older build overwrite files sure related page showing outdated emberdata beta kategengler currently showing probably patch release lts overwrote real release channel probably causing lots addons get different test coverage results expect case causing build failures release channel new enough work without jquery actually get old enough ember needs jquery yes checking per day make sure right temp fix rerun relevant branch tricky fix fix needs applied every possible old branch one time incorrect thought would remove permission write files existing keys make new keys write files making available release amp newer', 'date': '2018-06-21T02:19:53Z'}"
"19038",19037,"{'data': 'create thumbnail link hello would like create thumbnail link preview click link must go redirect url ho pls help hi repo mainly reporting issues emberjs might luck write post discussion forum ember slack get invite', 'date': '2018-06-20T12:49:32Z'}"
"19039",19038,"{'data': 'pr nt cherry picked last releases apologies tone frustrating seem get transition class docs kategengler next time think possible scripts used automating cherrypicking ltses nt work well docs believe toddjordan run snags well maybe could work improving get docs fixes releases quickly script github told rwjblue others process manual get link script process roughly review commit history since last beta release cherrypick things labeled another branch fact missed commits nt correct issue brought slack best sorts things happen sorry sure want get something specific branch missed cherrypick definitely submit pull requests directly target branch case would mean cherrypick commits locally submitting pr targeting branch appears commits already branch yep done yesterday working another patch release went ahead took care cherrypicks needed rwjblue thank', 'date': '2018-06-19T20:26:25Z'}"
"19040",19039,"{'data': 'didreceiveattrs mut property hi ember nt know normal behavior mut property child component parent component change value didreceiveattrs value changed parent component didrender mut work ok made twiddle test thanks might luck debugging write post discussion forum ember slack get invite', 'date': '2018-06-19T20:22:39Z'}"
"19041",19040,"{'data': 'enter key sends click event helper component set hitting enter key field trigger click event sent components rendered context see twiddle basic use case sure something known avoided strikes unexpected bug sort feature implementation detail html forms prevent behavior also needs attribute ember action trigger button inside form attribute specified pressing enter inside inside without action attribute trigger first available browsers default type unspecified button example shows behaviors working expected prevent make add event handler form prevent form trying call submit action add event handler component prevents default event yield result expect uggggggh thanks vast breadth web spec never ceases confound sorry pollute ember repo', 'date': '2018-06-19T18:42:28Z'}"
"19042",19041,"{'data': 'updating ember causes javascript heap memory exception building production packagejson changing gives error message running lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort gc old space requested ms marksweep gt mb ms last resort gc old space requested lt js stacktrace gt js stack trace security context stringslice aka stringslice tostring bufferjs fatal error callandretrylast allocation failed javascript heap memory node abort ember ember utils reportoomfailure char const bool ember internal fatalprocessoutofmemory char const bool ember internal factory newrawtwobytestring int internal pretenureflag ember internal factory internal vector internal pretenureflag ember string isolate char const newstringtype int ember node stringbytes encode isolate char const unsigned long node encoding local ember ember internal functioncallbackarguments call void functioncallbackinfo const amp ember ember internal builtinhandleapicall int internal object internal isolate ember build line aborted ember build environmentproduction maxzats tried reproducing luck share info setup share repo failing app', 'date': '2018-06-18T22:57:31Z'}"
"19043",19042,"{'data': 'problem computed property using filter array value value inside another object computed updated changed value suport nested values issue seems related mine maybe might problem code note works one level deep use nested forms like todos eachownername todos eachowner eachname yes mistake thank atomkirk', 'date': '2018-06-18T15:56:03Z'}"
"19044",19043,"{'data': 'weird issue handlebars doctype putting start hbs template file makes template compiler error first time something similar presume encountered block may used inside html element another block confusing points line linkto encountered making difficult track sorry missed something docs somewhere else state nt error thrown seems doctype declaration parsed open html comment never closed guess makes sense generally speaking doctype declaration go template file would go mistake specialized use case oh knew probably something wrong way error reported really confusing especially newcomers like nt report open comment error would make clear fault yep totally agree make error bit informative actionable tried reproduce latest version ember nt throw error however behavior bit strange perhaps close issue reopen issue guides would help better communicate relationship files main georgetg close think still worth adding guide section repo', 'date': '2018-06-18T06:31:38Z'}"
"19045",19044,"{'data': 'regression ember computed filterby observing ember data relationship includes example app example app instructions eachsavedzip updated est go follow instructions model tree hasmany bananas pass component positional param component computed property isnew changes banana computed property update component shows list saved bananas bananas get rendered save worked ember broken ember also works relationship pass array bananas directly works pass bananas relationship tree nt work fixed emberdata master released emberdata soon hopefully mean time workaround think change great already fixed posted issue example app help close atomkirk fixed couple months ago leave open emberdata released ember data released', 'date': '2018-06-17T02:48:37Z'}"
"19046",19045,"{'data': 'wip add embertesthelpers package documentation core api docs need get docs embertesthelpers main documentation site easiestmvp way would translate current markdown format yuidoc include core codebase approach discussed contributor tries tackle would like ultimately include quest issuecall community help times etc current behavior users ca nt find testing documentation api docs expected behavior users able search read test helpers like docs docs go clearly marked files obvious documentation outside resources long term ultimately solve bring new repos rather coding emberjs current architecture nt support break parts api separate packages may right time build necessary infra search hard part moment cc toddjordan also rwjblue wondering opinions fairly opposed moving documentation repo otherwise making appear come ember solution always assumed would add list projects top left side emberjscomapi essentially treat differently ember ember data hopefully embercli etc much expect ember test helpers change terms new features agree sentiment users ca nt find testing documentation api docs testing stuff one best things ember unique enough justify thorough accessible documentation would echo sentiment embercli get testing docs api docs site eventually questions put docs codebases quickly right know anyone bandwidth shortcut proposed figure something else maybe make quest issue get community help closed continue discussion elsewhere', 'date': '2018-06-14T17:31:13Z'}"
"19047",19046,"{'data': 'documentation incorrect links generated docs spotted defined links seem point intermediatebuild location work closing duplicated activity', 'date': '2018-06-14T01:09:48Z'}"
"19048",19047,"{'data': 'binding style attribute warning invalid anchor anchor invalid non existent bekicot looks like link works must hiccup guides confirm works close issue working', 'date': '2018-06-12T18:29:59Z'}"
"19049",19048,"{'data': 'timeout longer required pausetest embermocha timeout line nt necessary embermocha newer behavior us automatically thanks pointing mind sending pr fixing newbie pick first pr already taken devarajeshwaran sorry getting labels fixed think caseywatts pr open', 'date': '2018-06-11T14:06:00Z'}"
"19050",19049,"{'data': 'template glimmer components working seems work steps reproduce enable feature toggle create new component add content template remove component js file see rendered html still div wrapper hmm seems working following look dom see html notice wrapper component created however single actually representing application wrapper component maybe seeing also get rid like via command ran dom looks like believe working correctly demoed going go ahead close issue please let know made mistake happy reopen dig reproduction strange demo also works although demo installs ember manually upgraded tested well however still get problem main project suppose conflict somewhere else probably trawl addons figure cause lougreenwood addon inject propertiesstates components implicitly impossible guess create templateonly component afaik embercssmodules one nightire interesting nt use use looks like may something like aware way track addons may thought suppose unless magicnotobvious way addons inject components initialisers probably way identify addons may injecting lougreenwood also running issue ever figure issue rwjblue followed steps posted worked ember installed however upgraded ember seemed like template application wrapper optional features stopped working repo showing issue still getting advice track add ons may injecting properties components aside uninstalling add ons debug flag enable observe lougreenwood maybe try contact dfreeman see helps solved similar issue caused embercssmodules see thanks reproduction dpatz sorry missed try test see spot going nightire issue correct seems use pulling breaking templateonly components adding packagejson fixed rwjblue idea going yet anyway help dpatz reproduction repo shared depend dep devdep presence works installed yeah totally right however installed real app nt working upgrading things seem working thanks help', 'date': '2018-06-11T11:36:02Z'}"
"19051",19050,"{'data': 'appears addobserver destructure accepts one path string needed ability enable disable observers controller moving route hook using however unable use destructuring form discovered works pass one dot delimited string path following form passing series dot delimited paths also fails known workarounds get first example working destructuring using environment ember inspector ember ember data jquery confused bit realized meant syntax actually destructuring call property expansion api intentionally lower level others like support property expansion need via something like js function whateverfunction addobserver controller modelrequestid controller whateverfn addobserver controller modeldestinationlat controller whateverfn addobserver controller modeloriginlat controller whateverfn addobserver controller modelhasdirtyattributes controller whateverfn addobserver controller modelstate controller whateverfn addobserver controller modelend controller whateverfn addobserver controller modelaction controller whateverfn effectively sugary api hood going close please let know misunderstood something happy reopen rwjblue thank understand end opted use flag set setupcontroller unset resetcontroller route change checked controller observer execution seems work far hope wont performance penalty many app cheers', 'date': '2018-06-10T15:13:14Z'}"
"19052",19051,"{'data': 'hasattribute function getting lot errors application stems call hasattribute defined target nt able identify event causing seems likely something window target submit pr want let know want guard seems like changing line would work assuming reason dowhile loop otherwise converting loop also prevent running ember also fyi previously receiving error ember running embernativedomeventdispatcher previously reported issue repo source code js let handleevent thiseventhandlers event event gt let target eventtarget targethasattribute yet work one logs nt provide lot insight thanks quick response problem definitely want get fixed asap please let us know help getting error excluding jquery build got repro case sorry tried repro twiddle could nt get twiddle run error occurs hover content injected element simplified template could repro chrome firefox safari works fine also works fine include jquery build problem trying disable jquery app using ember firefox happen chrome simple reproduction case error triggered hover link issue application running ember seems happen following scenarios user drags link text drops across another text end point less clear user selects text drags selected text drops somewhere page note could reproduce firefox reports occurring chrome well way got around disable drag events customevents const customevents dragstart null drag null dragenter null dragleave null dragover null dragend null const app applicationextend moduleprefix configmoduleprefix podmoduleprefix configpodmoduleprefix resolver customevents loadinitializers app configmoduleprefix export default app solution ideal seems like might solve issue bug fixed created reproduction error getting error appears firefox interestingly problem appears styles applied app described reproduce seeing well sentry logs fwiw events firefox occasionally also chrome', 'date': '2018-06-08T17:33:47Z'}"
"19053",19052,"{'data': 'jqueryintegration optional feature wo nt enable latest version canary console logging following opting jquery section deprecation guide recommends packages installed running enable feature command seems work logs correctly adds feature configoptionalfeaturesjson however running server still displays deprecation follow instructions remove package successfully removes deprecation warning readd package though set optional feature true warning returns awesome thanks write would mind throwing together repo demonstrates issue sure thing ok branch pushed run see deprecation see configoptionalfeaturesjson amp packagejson let know anything else help thanks thorough writeup really made tracking issue much easier problem resolved welcome thanks', 'date': '2018-06-07T11:35:04Z'}"
"19054",19053,"{'data': 'ember changed page files scanned refurbished resulting slow restart ember changed page refurbished every time need scan files slow restart sometimes changes little bit takes long time start page put picture started shell bed want see want know situation solve problem problem previous program runs well changes soon able refresh page case scanning files thank appreciate image folder sorry really understand reported explain step step seems wrong closing per triage policy feel free reopen would like discuss issue', 'date': '2018-06-07T11:27:15Z'}"
"19055",19054,"{'data': 'fix extendprototypes deprecation updated deps got nothing find standard config follow deprecation stack trace find whowhat accessing send pr case known fixed update check first stack trace wonder help updated think yep look lines stack trace able see addon part app code triggering personally would start breakpoint line see modules using could also grepagrg nodemodules usages kidding use expandprototypes well exists standard ember skeleton tried removing pasaran tell like troll newly generated ember app emit deprecation message tested via something different application triggering deprecation things described ways track deprecations like sorry feel trolling could ember inspector issue please try disabling ember inspector related also use embersource deprecation similar stactrace comes emberinflectorextstring line recently updated avoid deprecation please confirm latest version rwjblue hm might related fact updated embersource package separately sure right check next week case outdated transitive emberinflector dependency fixed issue awesome thank chiming back confirm fixed return semver packagejson think problem emberdata coz use old version use resolve emberdata released might also already fixed emberinspector release process updating via embercliupdate also started experiencing issue pointed well fresh enough even though showed latest ember data inspector however disabling ember inspector fix however similar fix wonder something missing embercliupdate happens run yarn upgrade ran deprecation warning updated packagejson warning gone', 'date': '2018-06-07T11:26:44Z'}"
"19056",19055,"{'data': 'documentation special values key template helper hello sure right place nt sure ask current documentation template helper talks specifying keys makes mention special values key namely index index item array item item array used arrays strings numbers guid generate unique identifier object uses emberguidfor discovered comment special values actually still valid alright write back documentation looking source code seems used though sure public values rwjblue confirm please correct following considered public api specific helpers tweaks api docs helpers add mention available special values seems good also thought cross link rfc thanks applying labels accordingly emberjslearningteammanagers perhaps update api docs accordingly', 'date': '2018-06-06T04:57:31Z'}"
"19057",19056,"{'data': 'ember website working ie hi website working ie fully functional microsoft edge google chrome firefox safari using windows os version ie browser version console nt show errors either attaching console image officially nt support ie last releases test ie releasing new versions decided show huge warning header pages able make work warningserros nt point anywhere following technology stack embercli node server os centos dependencies bowerjson anyone help fix error thanks advance regards sukumar working ember apps work nt think something emberspecific support apps work ie ember versions last version updated far might try removing dependencies time debug issue definitely written code caused ie seeing added packages start somewhere dependencies look foundation first specifically caused issues past ie hi sukumarvangala want share additional resources help figure going list community forums chat ask questions get help debugging whatever causing issue forums please share details plus custom configuration build whether using fastboot etc console errors makes suspect fastboot problems version supported emberjs read issue closed since emberjs main codebase bug good luck', 'date': '2018-06-04T18:04:12Z'}"
"19058",19057,"{'data': 'angle bracket invocation allows implicit paths per angle bracket invocation rfc using path invocation use implicit fallback specifically following render curried component rfc reasoning seemed avoiding costly type lookups nonpath case eg nt completely clear also want require paths specifically think may make sense limit explicit requirement cases paths already satisfies case mentioned leave completely removing implicit emberjsrfcs chancancode think chatted chancancode rfc language intentional fix us released rwjblue closing released correct glimmerjsglimmervm ya perfect', 'date': '2018-06-03T03:39:10Z'}"
"19059",19058,"{'data': 'orderedset depreciation nt mention orderedset addon mention show depreciation installed think yep totally agreed related tracking fixing deprecation showing addon use rwjblue bekzod still issue perhaps close think', 'date': '2018-06-01T07:00:10Z'}"
"19060",19059,"{'data': 'read property parameters undefined upgrading get following error please tell need information please ignore using embertemplatecompiler backend compile stuff tried using version ember caused problem sorry confusion fwiw really using file bundled embersource use directly ember adds number features included glimmer compiler via ast transforms automatically ran compiled template use directly definitely emit output rwjblue thanks information javascript var compiler require glimmercompiler function main template return jsonparse compilerprecompile template send fe use ember saying rather something like understanding correctly yes exactly', 'date': '2018-06-01T06:49:13Z'}"
"19061",19060,"{'data': 'angle bracket invocation syntax summary angle bracket invocation rfc merged issue aims track landing functionality proposed behind feature flag possible individual items cross link related section rfc features x static invocation existing based components via angle brackets capital case component naming eg would find relevant rfc section x allowing single word component names long begin capital letter relevant rfc section x support passing named arguments component invoked eg x support passing html attributes relevant rfc section x add specified attributes element containing x add specified attributes wrapping element x attributes added specified component therefore overridable x attribute merged specified element x block support x block passed invoked component yielded x self closing invocations eg x normal self closing invocations eg x dynamic invocations relevant rfc section x allow invocation block params within scope casing rules applicable x allow invocations path lookups eg x allow invocations named blocks eg implementation todos x update support amp x update glimmervm avoid calling component manager every usage x ensure false self closing component invocations eg x implement support dynamic angle bracket invocation x implement support implicit embercomponent wrapper element updated checklist mark items marked support completed well one implementation todo updated items completed enabled default canary barring additional issues included series releases', 'date': '2018-05-25T14:35:38Z'}"
"19062",19061,"{'data': 'doc typo core concepts line code fragment seems like typo says appcomponentsfoodidrenderexamplejs js import component embercomponent export default componentextend didrender thissuper arguments line consolelog rendered thanks fixed see links prs interested', 'date': '2018-05-23T20:48:53Z'}"
"19063",19062,"{'data': 'emberonerror handler invalid testing behavior detected link nt contain working solution retrofitting existing ember app tests tests passing except see test end warning ember onerror handler improperly configured link contains information nt fully explain resolve issue appappjs import ember ember still advised ember broken individial packages emberonerror function error embertesting always false even test environment ie nt work throw error desired development production behaviors lt ok nuked default behaviour get back share example actually look like general set testing back testing completed suspect culprit play emberonerror undefined embertesting right something else definitely play going close hunt real cause issue thanks help', 'date': '2018-05-23T19:59:07Z'}"
"19064",19063,"{'data': 'replacewith create controller instance redirect route using replacewith passed controller query param let controller thisget controller returns value hi could ask question stack overflow community slack issue tracker used bugs emberjs code thanks', 'date': '2018-05-23T15:29:10Z'}"
"19065",19064,"{'data': 'deprecate embermap embermapwithdefault emberorderedset agreed emberjsrfcs need deprecate creating following objects embermap deprecation message suggest replace usage native usage embermapwithdefault deprecation suggest replace usage native usage emberorderedset deprecation mention adding addon update conditional emberorderedset ensure matches version removal lands deprecations', 'date': '2018-05-23T14:06:16Z'}"
"19066",19065,"{'data': 'form input element event handlers bind properly ie probably ie issue figure best log also put together twiddle illustrate point difficult validate issue since looks like twiddle nt work ie due lack browser support however put together demo fresh ember test app could validate issue ie also validated edge works normally nutshell binding action either helper element work ie screen shot console errors discovered root cause appears happypack used build looks like babel plugin nt initialized properly closing issue', 'date': '2018-05-22T22:53:01Z'}"
"19067",19066,"{'data': 'route lazy loading engine parsing queryparams type nt able find issue around problem team running thus creating new issue please see example bug go compare output lazy loaded engine engine set lazy loaded work fine ember go available handlers routes verify queryparams need parsed lazy loaded engine handlers wo nt exist route mount hit due parse returned cached quick hack provided demo reseting cache beforemodel try bypass problem correctbetter approach valid bug might related', 'date': '2018-05-21T06:17:33Z'}"
"19068",19067,"{'data': 'configenvironmentjs value environment undefined ember new testapp cd testapp edit configenvironmentjs log statement moduleexports function environment consolelog environment value always undefined ember build environmentdevelopment undefined saw result embercli node os ember build environment production undefined noticed execute app folder instead getting version ember cli tries build app point begin doubt ember cli issue ideas poke probe wrong repo go', 'date': '2018-05-19T07:41:41Z'}"
"19069",19068,"{'data': 'host app engine route transition queryparam type object working properly host app repository repo lazy loading engine proceed transition host app engine route query param type object first time shows error like syntaxerror unexpected token json position working fine actually found routerqueryparamsfor handlerinfos method routerjs returns empty objects map qps first time host app tries transtion engine route next time returns value objects map qps happening becuase engine instance already created previous transition also queryparamsfor method returns empty object since type check object serializequeryparam return string object object serializequeryparam value type value null value undefined return value else type array return jsonstringify value return proceed transition engine route object type qp might related', 'date': '2018-05-18T09:53:20Z'}"
"19070",19069,"{'data': 'emberrunbind throw error callback undefined', 'date': '2018-05-17T20:59:37Z'}"
"19071",19070,"{'data': 'using emberjs slider images jump sliding edge slides changing last first slide logos jump click see video', 'date': '2018-05-17T18:45:37Z'}"
"19072",19071,"{'data': 'google dfp gptjs google ad server file nt work anymore hi apparently google changed something dfp gptjs library seems nt work ember anymore trying load gptjs programmatically please read gptjs file loaded indexhtml file vendorjsappjs files ember uses loadstart application everything works great ads shown application runs smoothly want load file programmatically via ajax load via documentcreateelement etc something apparently modified google gptjs conflicts something embers string extension specific whatever reason stringprototypew method conflicting method google gptjs file error trown current fix disable string extension done ember env file using emberenvextendprototypesstring false gptjs closing seem arrived correct solution demonstrated intent deprecating prototype extensions rfc thank reporting', 'date': '2018-05-17T10:10:24Z'}"
"19073",19072,"{'data': 'runloop debounce slow chrome attached scroll listener page naturally like wrap action done nt fire crazily found scroll listener attached slow chrome set timer seems use issue nt happen firefox edge also attaching scroll listener element seems work fine chrome since issue happens ca nt replicate ember twiddle put repo show bug uses ember nt believe chrome issue tried removing everything fires correctly delay anything leads think bug rmmmp would assume using hood chrome throttles certain cases eg tab background scrolling etc guarantee gives never fired twice time interval due behavior might take little next time fired tl dr outside control browser throttling closing sad face', 'date': '2018-05-17T03:21:13Z'}"
"19074",19073,"{'data': 'confusing error message invalid property name routes helped colleague mine new ember error stating pretty confusing digging turned made route like triggered error error message confusing especially starting ember could probably improved made reproduction repo serve visit see error thank submitted pr let know think new wording', 'date': '2018-05-16T11:27:12Z'}"
"19075",19074,"{'data': 'documentation missing component helper way helper works changed resulting documentation apparently going away exist docs despite linked api docs exist contextual components guide link previously documented find documentation anywhere repo glimmerjs monorepo anyone know might moved deleted commit documentation deleted commit part pr fixed', 'date': '2018-05-15T16:36:25Z'}"
"19076",19075,"{'data': 'documentation link working ember test guide please go link click visit helper going move issue thanks moved', 'date': '2018-05-15T14:41:56Z'}"
"19077",19076,"{'data': 'memory leak seeing memory leaks upgrading ember specifically versions ember acceptance tests memory usage climbs gb tests start failing ember acceptance tests run memory usage around gb high unusual ie comparison chrome uses mb drops mb tests finish attempt bisect seems point big range commits ca nt build andor run reproduction created acceptance tests let lt test visiting foo async function assert await visit foo happens downgrading ember nt chance dig much yet capture memory profiles reproduction app attaching hopes someone time dig wink dwickern version windows amp zip windows ie vm reran tests able run full test suite without memory growth took heap snapshots approximately every tests seems indicate leak must related debug build specific feature started digging differences debug builds vs prod builds noticed prod rendering anything whereas debug render component removing component invocation enables debug builds pass without memory growth made attempt add simple component dom template resulted memory growth tests completed primary difference test run way addon setup tested normally resolved template whereas addon imports layout reexports updating locally make template resolved instead imported set property component js file able rerun test suite without memory growth confirmed latest beta still demonstrates memory leak however latest canary builds testing windows ie known memory leak issue wrt devtools microsoft marked wo nt fix ship fix edge though cherrypicked following commits beta branch prior changes branch exhibited leak provided reproduction commits leak reproduction runs completion ci completed publishes beta builds able test via update specify url printed confirm fixed thanks', 'date': '2018-05-14T18:55:32Z'}"
"19078",19077,"{'data': 'thisroutermicrolib undefined sending event tests hey looking updating travisweb ember everything seems working except failures tests around dynamically updating favicon based jobbuild status tried ember running tests many fail message suite uses chrome read property trigger undefined digging stacktrace found line question called lower stack specific code job controller observer build controller something almost identical action defined mixin mixed application route looks innocuous tried removing code within action change anything also tried merging mixin code directly application route also anything seems like code bubble action problem action code strange aspect actually use interface rather run tests see favicon updating action indeed sent run seems like problem tests let know information provide thanks work ember multiyear devotee backspace link one failing tests travisweb certainly see failures lot probably time build job viewed favicon needs change test comparatively simple one triggers error tried updating morning still failing tests far fewer failing described none failures seem similar one looks like fixed', 'date': '2018-05-14T15:47:18Z'}"
"19079",19078,"{'data': 'ember mapby persistent gist reproduce problem mapby array persistent given array emberobjects named items example user list item order property sorteditems computed property depended array sortdirection reproduce open gist default ordering sorteditems click sort button sorteditems logic return sorted array instead original list click reset button get original sort sort error expected result sorteditems ordering must equal items ordering output sorteditems prev sort result even list mapby order return returns mnemonic foo bar sortfunction foo sortkey sortfunction sortkey result sortby foo sortkey log mapby result someuniqkey return result else log mapby foo someuniqkey return foo step step one twiddle jenweber swapped reverse bug disappears reverse mutating items array jenweber thank going close issue', 'date': '2018-05-13T16:20:37Z'}"
"19080",19079,"{'data': 'ember nt update component attr binding array sort demo given array ember objects computed objects array sort given array route template render sorted list component render sorted list array sort list route template rerendered component old sorting state know filtered array render list successfully updated inside route template inside components feature must documented avoid user confusion looks related answer looks strange may confuse anyone teach', 'date': '2018-05-13T14:51:11Z'}"
"19081",19080,"{'data': 'ember regression attribute value serialized seems like would emberdata issue starts happening change leave ember source also works issue see first line item model value notes called payload server looks like note deps look model looks like ember rearranged structure stores data wondering problem related embersource gives data emberdata thats looks like ember data problem anything help debug see issue application well something broke case able trace computedproperty depends property properly serialized remove computedproperty issue solved hmm interesting whats name property seeing using dependent keys wonder truly related computed properties name property dependent property appears related serializing troubles emberdata gt without seeing use offirgolanembercpvalidations creates bunch computed properties fields confirm turning problematic models fixes issue elaborate bit debugging see happening looks like stale computed property cache issue field retrieved snapshot object created ember data serialization even though model right values set computed property finds stale value cache case happens model saved anyone able put together reproduction sounds like scenarios quite different common thread saving model would send attribute payload nt apps seeing problem expect tricky edge case hard debug would us contrive example demonstrates help us help guys handled debugging edge cases like past tips give help us debug narrow cause within applications maybe insight would reveal create demonstration app well trying create example app uncovered hacky thing probably root bug verified base case works ember going close basically must compound document saved altogether validation extended embeddedrecordsmixin embed records jsonapi problem arose template allows user edit showed gets set set right back payload funny thing remove works something setting initial value causing empty data use initial value instead updated value nt set initial value serializes updated value close unless create example app demonstrate well would happen add serializer works seems specific modelserializer relationships similar structure work fine ca nt figure different might help create example project whats happening created call updated line item property edited time serialize uses original value set created record suppose get updated give guidance debug updated', 'date': '2018-05-08T14:13:15Z'}"
"19082",19081,"{'data': 'linkto read property length undefined seeing errors sentry lately ember might indicate bug component able reproduce yet found far indicates hook finished yet according error message appears like systems cp might calculated hook chance run noticed appears issue specific chrome version android also seems happen assuming likely due underlying engine ua strings case helps linux android huawei khtml like gecko mobile linux android redmi khtml like gecko mobile linux android khtml like gecko mobile linux android khtml like gecko mobile linux android khtml like gecko mobile', 'date': '2018-05-08T10:40:16Z'}"
"19083",19082,"{'data': 'computedproperties weirdness defined hook seeing weirdness computedproperties ember reproduced see readme able get embertwiddle working twiddle nt seem support anything tl dr seeing two things cache invalidate external property changes unless property used component ember defined hook update property updated ahh looks like using instead fixes second problem possible first actually expected behavior closing', 'date': '2018-05-08T03:09:34Z'}"
"19084",19083,"{'data': 'regression arrayproxy pushobjects nt accept arrayproxy cleaned lot mixin code however also changed assertion checking enumerable array checking array assertion throws calling even though emberdata accept objects going rwjblue think path forward drop assertion entirely docs implementations assert arguments method implementations expected implement already assert nt need delegates thanks writing hjdivad agreed path forward mmun objections rwjblue nope seems good would also useful could mark methods derived final people nt override using instead sufficient runspired yes would work right believe muddies waters bit proposed fix problem ca nt use passing devdemi get around issue currently called enumerable trying push', 'date': '2018-05-07T22:01:14Z'}"
"19085",19084,"{'data': 'feture request add component name glimmer error error like defenetly component issue components page hard figure error location', 'date': '2018-05-07T08:44:36Z'}"
"19086",19085,"{'data': 'version number discrepancy may asplanned seeing scratching head installed embercli globally npm g embercli ember v embercli node os darwin new ember project packagejson shows embercli emberdata embersource devtools debug output fresh ember serve debug debug ember debug ember data debug jquery debug yep right tilde ranges semver thank also wanted mention projects local embercli dependency always used globally installed version functionality allows multiple projects various different embercli versions without issue excellent thanks folks yes thanks rwjblue info suspected much nt sure cheers', 'date': '2018-05-05T19:20:21Z'}"
"19087",19086,"{'data': 'attempted access error engine created demo app simple use using works parent app engine instead get recently added error informs user changes regarding get sorry wrong repo error coming emberjs repo engine repo thought raise thank reporting minimal reproduction similar bug unable solve documented fixed ember engines still problem chance patch make way', 'date': '2018-05-04T09:40:25Z'}"
"19088",19087,"{'data': 'embercomputed functions throw exception take ember engine using embercomputed computed accepts function method throws exception either take entire ember engine many glimmer errors worse yet silently corrupt dependency tree things half stop working incomprehensible ways basically problem ember inside js called whenever property changed update dependent keys function dependentkeysdidchange obj depkey meta meta meta depkey return var seen didseen var top seen anything blows inside computed property evaluation ends blowing inside means nt complete didseen nt get erased seems excessively severe one case resulted day tracking subtle functionality stop instead seems like best idea would make sure whenever evaluate function ed error logged something less severe total failure created mitigation application simply overriding computed initializer js import emberobject computed emberobject import assign emberpolyfills import typeof emberutils export function initialize override ember computed trycatch prevents complete blowupshutdown something goes wrong computed property const oldcomputed computed let newcomputed function let newargs arrayprototypeslicecall arguments const funcpos funcpos gt const oldfunc newargs funcpos typeof oldfunc function newargs funcpos function try return oldfuncapply arguments catch ex form logging else get oldfunc const prevfunc oldfuncget oldfuncget function try return prevfuncapply arguments catch ex form logging return oldcomputed newargs assign newcomputed oldcomputed computed newcomputed first admit bit hack makes major difference development prevents costly heck something go wrong sessions chance sort trycatch done around future ember release', 'date': '2018-05-03T03:24:18Z'}"
"19089",19088,"{'data': 'didupdateattrs called setting internal properties second route transition using ember first rendering route child components clicking button calls call call however transitioning another route component torn calling via button click call happy intializationupdate component looking refactor bug put example repo showfulltext amp amp moreshown internal properties component didupdateattrs setproperties showfulltext false moreshown false called action template onshowmore setproperties showfulltext true moreshown true going close reopen find something may something else causing problems htmlsafe clamping innerhtml', 'date': '2018-05-02T01:26:28Z'}"
"19090",19089,"{'data': 'dot notation vs emberget behavior shift ember ember issue manifests ember ember imagine instance maybe instance instance another perhaps model property following occurs regardless value property eg could computed es getter simple boolean following behavior divergence observed additionally dependent keys first call error set dependent keys subsequent calls work cc exelord share stack trace stack trace repo failing ci exelord runspired rwjblue still issue perhaps close create new reproduction think still valid case', 'date': '2018-05-01T20:48:35Z'}"
"19091",19090,"{'data': 'router service respect default value query param hello migrating private generateurl public urlfor noticed respect default value query param defined controller eq qp default value method returns instead twiddle reproduction twiddle uses ember behaves locally see test behaviour sure feature default qps url gone helper still autoremoves generates without default qps thanks expected marking documentation issue usually brought definitely improved thank serabe thanks clarification serabe know implemented done query paramrelated stuff looking way provide better documentation around query params find way unset complex ones thoughts maybe locks rwjblue knows may donald wasserman notifications githubcom wrote serabe know emberdefaultvalue implemented routerservicemd queryparametersemantics done query paramrelated stuff looking way provide better documentation around query params find way unset complex ones thoughts receiving mentioned reply email directly view github mute thread emberjslearningteammanagers update effort', 'date': '2018-05-01T13:59:04Z'}"
"19092",19091,"{'data': 'router service failing query parameters application controller hello really sure really problem anyway trying migrate router service got strange error message distilled following minimal test case application controller query parameter got two routes route uses router service transition route b aftermodel got acceptance test loads route query parameter set leads assertion failed passed query parameter transition application please update testparam checkin leading behaviour found believe bug problem code hint would helpful cheers jan niklas nt need inject router routes inside btecu writes obviously correct due beeing oversimplified test case unsimplified test case bit nt use router service route foo service return uses router service assertion still fails nt easy way using forked repo error ember called component routea redirect siblings route really weird access routea directly get redirected works access application root navigate way routea error occurs offending query param siblings parent route application route seeing ember case error printed console however work expected test test error printed nothing happen', 'date': '2018-04-30T14:44:39Z'}"
"19093",19092,"{'data': 'improve documentation unless template helper per discussion learning team channel unless bit confusing native english speakers multilingual devs improve documentation help two improvements put description logic docs suggested language give block form example current docs file edit take look issue', 'date': '2018-04-30T13:01:17Z'}"
"19094",19093,"{'data': 'mouseenterleave event delegation broken wo jquery components andor event handler called anymore running without jquery think events nt bubble event delegation based root element work events get triggered element listener app case see possible workaround would use hood enable event delegation make sure behaves ie nt trigger child elements jquery seems works jquery mode could work pr agree way forward somewhat hesitant bake without changes event dispatching make pay go believe applications nt use always listening nontrivial cost couple simple know always simple work arounds folks suffering right refactor component explicitly add event listener refactor template use closure actions hbs hover gt somewhat hesitant bake hm way would get baked change implementation pay go without changing public api time later support box already baked sense public api documented ca nt ignore believe applications nt use mouseenter mouseleave mouseover always listening nontrivial cost right certainly see benefit smarter approach handling events covered ember public api cost already incurring running w jquery fixing native mode would bring implementation par right refactor component explicitly add event listener didinsertelement yes fixed like gt hm way would get baked change implementation pay go without changing public api time later sold smiley would love pr experiencing issues demo repo', 'date': '2018-04-30T10:14:42Z'}"
"19095",19094,"{'data': 'misleading error invalid import computed hi development stumbled upon issue took quite time pinpoint error message actual error following bad import sure worth issue feel free close easy win gives developer helpful misleading error message always something provide quick repo reproduction wondering complaining computed function serabe ca nt reproduce new app either expected infinite rendering invalidation import real app instead could found module weird since give reproduction case shall close', 'date': '2018-04-27T09:39:33Z'}"
"19096",19095,"{'data': 'text template helper action doco makes sense pretty sure text doco template helper correct underlying file seen rendered text question reads like function read function passed create closure function arguments almost certain bit bracket function passed complete makes sense grammatically putting aside whether makes sense context ember unfortunately ca nt say brackets otherwise would pr edit changed make sense grammatically makes sense grammatically reread paragraph text appears think understand brackets would helpful get views others see right track contexts helper called closure action helper behavior simple passed function name read function actions property current context function read immediately function passed create closure function arguments resulting value action helper used way simply function would interested feedback suggestion shearichard thank please open pr people comment directly proposal ok approve merge directly thank serabe good idea done thank fix merged', 'date': '2018-04-26T11:03:13Z'}"
"19097",19096,"{'data': 'brace expansion allow whitespace consider example versus one easier read even error message makes case would suggest simpler readable missing something legitimate reason whitespace stripped intended behaviour changing would require follow rfc process describe contributing file thank understand intended error message interested knowing intended allowing whitespace allows cleaner code basically parse runtime dealing fewer exception led fastereasier code feel free dig last couple rounds refactoring underlying code also fwiw expansion simplified thanks links heads', 'date': '2018-04-26T08:56:59Z'}"
"19098",19097,"{'data': 'emberrelease embertry scenario failing scenario emberrelease missing npm packages package embersource specified installed installed run install missing dependencies think tarball failed publish valid tarball url downloaded locally confirm confusing reran make sure got error debugging kategengler seems like npm bug basically published tag addon already using due packagejson current release tarball exactly integrity checksum matches getting confused pruning newly installed package detailed log ssemberasyncactioncontainer debugembertry ember try one emberrelease skipcleanup embertry commands tryone scenario argument emberrelease embertry commands tryone command options embertry commands tryone skipcleanup true configpath configembertryjs checkforupdates false disableanalytics false embertry commands tryone command specified command line embertry commands tryone config npmoptions verbose scenarios name npm devdependencies embersource name npm devdependencies embersource name npm devdependencies embersource name emberrelease npm devdependencies embersource embertry task tryeach dependencymanageradapters npm bower embertry dependencymanageradapter npm backing packagejson nodemodules embertry task tryeach scenario manager setup embertry dependencymanageradapter npm changing dependency set devdependencies embersource embertry dependencymanageradapter npm write packagejson embertry dependencymanageradapter npm name emberasyncactioncontainer version description async state wrapper keywords emberaddon license mit author kelly selden directories doc doc test tests repository build lint js eslint js addon addontestsupport app config lib server testsupport tests start ember serve test ember test test ember try dependencies emberclibabel emberclihtmlbars emberdefer devdependencies broccoliassetrev emberajax embercli emberclidependencychecker emberclieslint emberclihtmlbarsinlineprecompile embercliinjectlivereload embercliqunit emberclishims emberclisri embercliuglify emberdisableprototypeextensions emberexportapplicationglobal emberloadinitializers embermaybeimportregenerator emberresolver embersource gt emberaddon configpath testsdummyconfig embertry dependencymanageradapter npm run npm install options verbose embertry utils run spawned sh c npm install verbose noshrinkwrap cwd usersrjacksonsrcsandboxemberasyncactioncontainer stdio inherit npm info worked ends ok npm verb cli npm verb cli npm verb cli install npm verb cli verbose npm verb cli noshrinkwrap npm info using npm npm info using node npm verb npmsession npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm http fetch get cache npm verb correctmkdir usersrjacksonnpmlocks correctmkdir flight initializing npm verb lock using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging npm verb unlock done using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging npm info linkstuff emberasyncactioncontainer npm verb linkbins emberasyncactioncontainer npm verb linkmans emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm info lifecycle emberasyncactioncontainer emberasyncactioncontainer npm verb saving date npm verb exit true npm info lifecycle undefinedpreshrinkwrap undefined npm info ok embertry utils run process exited embertry dependencymanageradapter npm run npm prune embertry utils run spawned sh c npm prune verbose noshrinkwrap cwd usersrjacksonsrcsandboxemberasyncactioncontainer stdio inherit npm info worked ends ok npm verb cli npm verb cli npm verb cli prune npm verb cli verbose npm verb cli noshrinkwrap npm info using npm npm info using node npm verb npmsession npm verb correctmkdir usersrjacksonnpmlocks correctmkdir flight initializing npm verb lock using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging npm info lifecycle embersource embersource npm info lifecycle embersource embersource npm verb unbuild rmstuff embersource usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle embersource embersource npm info lifecycle emberroutergenerator emberroutergenerator npm info lifecycle emberroutergenerator emberroutergenerator npm verb unbuild rmstuff emberroutergenerator usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle emberroutergenerator emberroutergenerator npm info lifecycle recast recast npm info lifecycle recast recast npm verb unbuild rmstuff recast usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle recast recast npm info lifecycle esprima esprima npm info lifecycle esprima esprima npm verb unbuild rmstuff esprima usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm verb unbuild rmstuff nodemodulesrecastnodemodules npm info lifecycle esprima esprima npm info lifecycle jquery jquery npm info lifecycle jquery jquery npm verb unbuild rmstuff jquery usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle jquery jquery npm info lifecycle broccolimergetrees broccolimergetrees npm info lifecycle broccolimergetrees broccolimergetrees npm verb unbuild rmstuff broccolimergetrees usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm verb unbuild rmstuff nodemodulesembersourcenodemodules npm info lifecycle broccolimergetrees broccolimergetrees npm info lifecycle broccolifunnel broccolifunnel npm info lifecycle broccolifunnel broccolifunnel npm verb unbuild rmstuff broccolifunnel usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm verb unbuild rmstuff nodemodulesembersourcenodemodules npm info lifecycle broccolifunnel broccolifunnel npm info lifecycle emberclivalidcomponentname emberclivalidcomponentname npm info lifecycle emberclivalidcomponentname emberclivalidcomponentname npm verb unbuild rmstuff emberclivalidcomponentname usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle emberclivalidcomponentname emberclivalidcomponentname npm info lifecycle emberclipathutils emberclipathutils npm info lifecycle emberclipathutils emberclipathutils npm verb unbuild rmstuff emberclipathutils usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle emberclipathutils emberclipathutils npm info lifecycle embercligetcomponentpathoption embercligetcomponentpathoption npm info lifecycle embercligetcomponentpathoption embercligetcomponentpathoption npm verb unbuild rmstuff embercligetcomponentpathoption usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle embercligetcomponentpathoption embercligetcomponentpathoption npm info lifecycle asttypes asttypes npm info lifecycle asttypes asttypes npm verb unbuild rmstuff asttypes usersrjacksonsrcsandboxemberasyncactioncontainernodemodules npm info lifecycle asttypes asttypes npm verb unlock done using usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesstaging removed packages npm verb exit true npm info ok embertry utils run process exited embertry dependencymanageradapter npm switched dependencies embertry dependencymanageradapter npm name embersource versionexpected versionseen null packagemanager npm embertry dependencymanageradapter bower changing dependency set scenario emberrelease embertry task tryeach embertry task tryeach scenario emberrelease allowedtofail false dependencystate name embersource versionexpected versionseen null packagemanager npm command ember test embertry utils run spawned sh c node usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesemberclibinember test cwd usersrjacksonsrcsandboxemberasyncactioncontainer stdio inherit missing npm packages package embersource specified installed installed run install missing dependencies stack trace error report error occurred constructor emberclidependencychecker usersrjacksonsrcsandboxemberasyncactioncontainernodemodulesemberclidependencychecker embertry utils run process exited result false embertry task tryeach cleanup embertry task tryeach skip scenariomanager cleanup embertry task tryeach output results results scenario emberrelease fail command run ember test dependency expected used type embersource installed npm scenarios failed scenarios succeeded scenarios run embertry task tryeach exit woah explains since brand new addon fix retriggering ci build release branch tarball would generate small difference timestamps kinda sucks though yeah mitigate embertry says shas match noop least npm fixes possible mitigations remove attempting updating packagejson remove updating packagejson allow disabling embertry ed new deps think second seems likely succeed thoughts kategengler like second think originally moved prune reason tue apr pm robert jackson notifications githubcom wrote possible mitigations remove nodemodules attempting npm install updating packagejson remove nodemodules updating packagejson allow disabling npm prune embertry npm installed new deps think second seems likely succeed thoughts kategengler receiving mentioned reply email directly view github mute thread since open pr avoid problem let labeled perhaps close pr merged think kategengler kellyselden rwjblue yininge pr nt seen one kategengler sorry bad saw issue thought pr', 'date': '2018-04-24T20:08:17Z'}"
"19099",19098,"{'data': 'ошибки при работе фастбута на продакшене такие ошибки есть', 'date': '2018-04-23T13:30:34Z'}"
"19100",19099,"{'data': 'looking work around restriction error changing view elementid creation application initial load data use data generate dynamic id classes another api call make reload missing data problem reload function bring different information elementid complains changing id allowed like without api call good work around issue keeping logic generally reserve issue tracker bugs ember seems like qa x type thing better served forum stack overflow slack going close please cross link forumso post update thread answer find future searchers', 'date': '2018-04-22T20:54:05Z'}"
"19101",19100,"{'data': 'componenthelper found message hello cerated new app wrote following templatehbs first component exists second one got errors console believe something like helper found message similar modaldialog modaldialognotfound outlet pass parameter like get error nt think need least warning reading someone hbs file ca nt say sure whether component name variable maybe always symbol good idea looks like pull requests already exist', 'date': '2018-04-20T09:57:16Z'}"
"19102",19101,"{'data': 'create new tag model destroyed error test teardown beginning ember test failing teardown error assertion failed create new tag destroyed working reproduction going hard best describe scenario model relationship model b model also properties depend properties model b la model b computed assertion seems getting triggered teardown tries computed properties depend property related model far tell occur running app make error go away either removing computed properties really solution setting relationship sure regression per se also really sure best dig figure fix think would useful see stack couple different pathways end calling need know dig thing seems somewhat odd case need figure unwatching would cause called personally would expect called given object getting rendered template rwjblue full stack gotcha old friend proxy assertion first suggestion may need digging would add guard avoid calculating proxy destroying might look like js unknownproperty key thisisdestroying thisisdestroyed return however also curious property call think point hmm think addressed missed rondalesc backported release scheduled us test latest build see already fixed feeling may trolled us issue apologize could sworn try latest release build morning still saw error however trying reproduce ember master locally could nt reproduce switch back latest release also ca nt reproduce nt even know way anymore switching back release version exhibit error think consider resolved await new release going bring back say experiencing relies upon ember data also latest version interesting thing though takes tries get check video attached zip create new tag errorzip edit route unloads models loaded hook versions error full stack assert writabletag tagfor contentfor unknownproperty get getpath get get anonymous computedpropertyprototypeget get compute value value initialize peek anonymous evaluate evaluatesyscall evaluateinner evaluateouter next execute handleexception handleexception throw evaluate execute rerender runintransaction renderroots renderrootstransaction revalidate invoke flush flush end run join join runjoin hashsuccess fire firewith done anonymous load async send ajax ajaxrequest anonymous initializepromise promise ajax query query query query aftermodel applyhook runsharedmodelhook runaftermodelhook trycatcher invokecallback publish anonymous invoke flush flush end run join join runjoin hashsuccess fire firewith done anonymous load async send ajax ajaxrequest anonymous initializepromise promise ajax queryrecord queryrecord queryrecord model deserialize applyhook runsharedmodelhook getmodel trycatcher invokecallback publish anonymous invoke flush flush end run join join runjoin anonymous exportsflaggedinstrument handleevent exportsdefaultembermetalmixincreatemixin createhandleevent anonymous dispatch elemdatahandle', 'date': '2018-04-18T13:49:37Z'}"
"19103",19102,"{'data': 'ember route model method swallows errors inside route file eg lets say nothing found redirect basically simple nt thrown console lead lots time wasted simple typo kdamball example code appear bug emberjs function signature model hook nt referenced code example exactly sure error trying invoke lately using emberclitypescript improves static type analysis application code helps editor lookup autocomplete well opinion adding typescript improves developers ability catch types errors also think eslint would call syntax issue close', 'date': '2018-04-17T13:20:19Z'}"
"19104",19103,"{'data': 'operand got fix updated seeing couple route transitions instead previous ca nt reproduce except application error operand got eencode tepush tpushcomponentdefinition estatic xn ecompile tecompileinline tecompileinline ecompile teadd ecompile objectevaluate eevaluate eevaluatesyscall eevaluateinner eevaluateouter enext eexecute ihandleexception ehandleexception ethrow nevaluate eexecute ererender eurender erunintransaction terenderroots terenderrootstransaction terevalidate einvokewithonerror eflush eflush eend eend erun ejoin ejoin array etrigger eend eend erun ejoin ejoin functione join l nsendaction ntap nsend n send htmlbuttonelementtap objectup objectgesturetrigger nullrocket experiencing issue could kindly explain integrated fix project like start digging sure get local version vm connected project edited reproduction pretty sure related usage component helper block reading willviles comment went back simplified reproduction nt take component reproduce initially thought removed pasted large number components simulate number rendered previously set reproduction transitions two routes template route number transitions throw error currently throws error experiencing issue switch embersource duplicate error hbs mycomponent textitem mycomponent textitem nullrocket thanks found caching issue template handle cached properly routes first visited definition given new handle every lookup worse issue affects dynamic lookup via component helper reproduction something else assumed every compilable template stayed compiled state wrappedbuilder handles components tagname ember meaning every invoke component tag regenerating opcodes hitting limit bumped glimmervm include related fix whcih cherrypicked beta release though release branch actually glimmervm builds published channels release beta canary soon test use update point tarball url printed command krisselden would mind reviewing confirming ultimately resolved close krisselden rwjblue ran iterations reproduction seems fixed errors memory heap growth thanks fast work today closing issue underlying bug fixed confirmed demo repos provided fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl additional issues crop report new issue reproduction', 'date': '2018-04-17T03:29:56Z'}"
"19105",19104,"{'data': 'migrate internals public modules api tracking issue migrating internal repo public js modules api x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x x moment progress rwjblue future point opened call help style quest issue', 'date': '2018-04-16T21:33:07Z'}"
"19106",19105,"{'data': 'special kind ember object proxy error thrown ember recently upgraded ember addon ember gt found model class created via proxy like note recordproxy using constructed using model object non computed property ie vanilla js import model emberclisimplestoremodel export default modelextend changerole throwing error like curious regression future deprecation waiting happen understand error ember would need access function prior could invoke like normal function without function computed getter would nt anticipate use explicit invoke trouble creating w ember twiddle able using prove broken note app works fine flip source dependency back ember helpful pointers move forward thank advance issue case emberclisimplestore nt seem terribly simple ember check trigger reported assertion proxy assertion find underlying model quick fix workaround implement always returns undefined copy forward methods underlying model setup something like js init snip thisiscopyingmethods true let method model typeof model method function method thisproxymethod method thisiscopyingmethods false unknownproperty thisiscopyingmethods return return thissuper arguments fix issue generically means either make proxy assertion ignore type result feels somewhat like whackamole may actually nice heuristic sorts check method exists calling types things see list exclusions nearly functions change assertion warning rwjblue closing favor thanks help robert problem happy help', 'date': '2018-04-15T13:29:46Z'}"
"19107",19106,"{'data': 'properly use injectedproperties ember recently upgraded ember addon gt got error regarding service injection worth mentioning project supports class syntax ember object working fine ember exception throws class tests almost certainly used js import inject emberservice export default function statetocomputed dispatchtoactions wrappedcomponent wrappedcomponentprototyperedux inject redux return class connect extends wrappedcomponent constructor super arguments pointers path forward would greatly appreciated thank advance update looks like root cause inside opt conditional first ember set false error thrown curious edge case support w nt caught yet magic returns injected service wout error roughly issue described change fix issue basic gist setting properties prototype instance properly define computed property must go normally change suggest work backwards forwards compatibly consider general regression though mentioned specific use case likely fixed private api deprecation patch release rwjblue perfect thanks quick reply dude verified works planning ship patch ember redux morning yet solve', 'date': '2018-04-14T13:24:14Z'}"
"19108",19107,"{'data': 'improve docs router service router service docs need beginnerfriendly description right says router service public api provides componentview layer access router recommend main description pr file needs change ideally commonly used apis code blocks demonstrating use explanations purpose use example see emberarray additional prs could include code block demonstrating use method property maintainers may feel free edit issue directly locks mark helpwantednew contributors looks good issue still open yes contribute', 'date': '2018-04-14T03:19:27Z'}"
"19109",19108,"{'data': 'rfc embercopy embercopyable deprecation metaissue track implementation embercopy addon x implement copy method copyable mixin data x remove use copy copyable code tests emberjs x adjust copy always copy arrays rather delegating copyable x remove use copy copyable code tests x deprecate copy nativearraycopy x deprecate copyable mixin use objectextend feasible deprecationapp document deprecation objectassign shallow copies availability addin emberclieslint x deprecation rules copy copyable discussion decided emberapi verify copy copyable documentation reflect deprecation link requisite prs opened', 'date': '2018-04-13T23:06:33Z'}"
"19110",19109,"{'data': 'regression canary emberextendprototypes undefined removed framework common libraries like emberinflector use value source need intimate api deprecation cycle example value used set source cc rwjblue', 'date': '2018-04-12T23:34:06Z'}"
"19111",19110,"{'data': 'regression closure component dot rule unenforced closure component invocations follow dot rule invoked either helper path containing example valid invocations hbs somecomponent wrappinghash wrappinghashsomecomponent somecomponent thissomepassedincomponent component somepassedincomponent another example invalid invocations invoke component usually show hbs somecomponent closurecomponent closurecomponent somecomponent somepassedincomponent ember invocations block param closure components without permitted reproduction cc iezer rwjblue dot rule removed', 'date': '2018-04-12T23:28:36Z'}"
"19112",19111,"{'data': 'class attribute recomputed something like template used work fine true addition classes added false classes used however nt work added even true works add nonempty string else clause first ran ternary also converted computed property found problem also ran basically prevents us using ember breaks app quite lot places rather hard track would awesome get fix someone time put together repo demonstrating issue possibly failing test case pr sure pretty easy reproduce see relevant code also note interestingly true default toggling work fields confirm issue passing argument component invocation right eg issue think likely similar fixed basically somewhere pipeline likely curly component manager truthy check nt', 'date': '2018-04-12T11:22:04Z'}"
"19113",19112,"{'data': 'dynamically created computed property seems broken hello using dynamically generated computed property seems work anymore code sample provide simplified demoexample working anymore mean recomputing throwing error etc ultimately believe essentially issue reported pattern public api happened work due refactor late cycle computed properties design time defined runtime way make usage scenario work would define cp instance object instead example really provide simple demo example quite rely application simplest example live probably write one necessary computed property function get called never get never get called even dependent keys modified working tell need live sample try write one fairly sure prior comment correct duplicate essentially thing actually support quick solution snippet would move works way back ember something like test asap get back thanks lot support works like charm thanks lot close closing missuse system', 'date': '2018-04-12T08:04:03Z'}"
"19114",19113,"{'data': 'uncaught typeerror read property syscall null banging head every time try update gt version beta final happens transitioning particular route exactly times unfortunately unable create reproduction except application stacktrace nt point anything dig idea start looking javascript appendopcodesprototypeevaluate function evaluate vm opcode type var operation thisevaluateopcode type operationsyscall errors type argument operationevaluate vm opcode else operationevaluate vm opcode seeing similar issues sentry logs upgrading ember stacktraces giving hints unfortunately one example safari another chrome similar debugging found far error happens receives larger size heap always moreover also larger look implementation class notice buffer uses something pushed heap size checking problem nt expand needed regular arrays simple test produces produces pieterv agree seems likely issue thank digging report specific issue glimmervm coordinate solving krisselden chadhietala wycats tomdale address expanding heap reached max capacity hi thanks quick work hot fix apply properly fixed urbany far know best option stay ember resolved nt run propper testing eheh thanks maybe next time around wo nt wait month report pretty determined something one components though question probably highlight fact know nothing glimmervm internals heap growing constantly transitioning route sign anything else looking mitigate general nullrocket concern something regenerating opcodes using already compiled specifically alway pushcomponentdefinition wondering always seeing new definition something see existing definition still smells rwjblue sure close may address crash confident fully root caused wondering idiom people messes caching covered test suite krisselden component following template route causes error perhaps component helper related problem dig bit deeper fix help opened another issue seems related continually growing opcodes hbs items item component itemcomponent optionsargs edited reproduction pretty sure related usage component helper block reading willviles comment went back simplified reproduction nt take component reproduce initially thought removed pasted large number components simulate number rendered previously set reproduction transitions two routes template route number transitions throw error currently throws error experiencing switch embersource duplicate error hbs mycomponent textitem mycomponent textitem experiencing issue since upgrading ember app occurs transitioning two tab states multiple times transitions errors tab child component scheduling function using ember runloop child component rendered using helper prevent error using instead solution locks thread quite perceptibly krisselden agreed reopened smiley nullrocket willviles test latest release build confirm working following get current tarball url update rwjblue confirm issue resolved app thank rwjblue also confirm version fixed app thanks awesome thank testing try take time today poke things krisselden try see another underlying issue releasing try update let know rwjblue fix error also fixed nt fix still reproduce one reproduction app seem related tested project linked latest ember release right problem reported still occurs probably means bug correctly fixed right fyi issue still ongoing problem need reproduction like believe roughly describes issue nullrocket minute try technique repo bouncing back forth routes like mentioned use demo able reproduce specific error issue led us ensuring heap grow fwiw fix landed still needed want avoid needing grow heap needlessly case appears leak rwjblue pushed two branches repo original setup using original setup using embersourcechannelurl release see heap continually growing takes upped number iterations number route changes speed growth minutes grows significantly awesome thank much nullrocket tested changes linked locally running iterations heap growth closing issue underlying bug fixed confirmed demo repos provided fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl additional issues crop report new issue reproduction rwjblue unfortunately nt reproduction yet seeing similar error according sentry traces also previous error thrown might caused glimmer vm throw later previous errors seems factorymanagercreate method function experiencing issue produce reliably app behind auth min share credentials anyone able take look also seeing still still seeing well though less often please open new issue much info see back forth almost certainly take reproduction us able track sooner gather enough info one faster fix sure helpful error encountered forgotten component running ツ still seeing production logs occasionally nt cause issue far tell something similar sammynave said imports case although seen unrelateduncaught exceptions corrected fixes error makes hardimpossible trace issue though gotten good guessing never see development production builds root issue caused program counter set invalid offset heap tries invoke opcode offset nothing get error ca nt find opcode object suspect happening exception getting thrown somewhere render catching cleaning appropriately add better logging track may help people seeing production logging assertions would stripped would expect though ember would rethrow error initial error visible logs well vm nt try catch exceptions although maybe start try aggressive cleaning state vm gt suspect happening exception getting thrown somewhere render catching cleaning appropriately definitely confirm suspicion every instance syscall error see sentry logs error log mentioned lot times seems involved original error according sentry apparently already issue upgraded ember error surface would valid cause issue especially ca nt seem spot development getting constant reports sentry user reports app issues help debug get occur developing would love help please let know tylerturdenpants reproduce fresh app reproduction repo would awesome got well soon thought finished upgrading dont reproducable repo yet tho', 'date': '2018-04-12T04:51:34Z'}"
"19115",19114,"{'data': 'expandproperties documented wrong module fall subheading page fix go set take toddjordan fixed', 'date': '2018-04-11T22:18:53Z'}"
"19116",19115,"{'data': 'assertion failed attempted access property following code inside called somewhere code results following assertion error lengthget get length case encountered error thirdparty code nt control information help us improve error message telling us happened situation new embererror assert objectget objectisarray arrayforeach arrayemberaflattenarrayflatten arrayforeach arrayemberaflattenarrayflatten blows inside ember guess bug switching resolve issue believe rwjblue yes fixed issue case thanks believe bug nonetheless possible ensure trigger error probing', 'date': '2018-04-11T19:35:03Z'}"
"19117",19116,"{'data': 'getowner returning false objectproxyinit returning container since returns false looks quite different lucacorti thanks reporting definitely bug related lucacorti share code snippet showing object proxy created rwjblue issue originally created service fixed', 'date': '2018-04-11T16:40:34Z'}"
"19118",19117,"{'data': 'read property fullname undefined following maybe hacky code coffeescript import service emberservice import component embercomponent import getowner setowner emberapplication import promise rsvp export default serviceextend getrenderer owner ownerlookup renderer dom render template context new promise resolve gt create new component owner getowner used work fine including broke calling append leads blowing returns undefined component create code know using somewhat private apis changed new ember fix thanks great framework error essentially component creating rendering created normal owner interface already worked around similar issue added manually setting owner quickest work around would sorry got ta use js since coffeescript super bad lets remove manual population renderer owner believe code still seems pretty nonidiomatic brittle future framework changes suggest trying come way refactor away pattern thank worked leave decide whether close issue sure whole thing documented somewhere maybe good idea definitely sure ones things like thanks great support definitely agree erroring useless error like add assertion actually helpful error message gah got one read property fullname undefined hi rwjblue problem thanks solution first source code update adding null check suppress error although accept declare component ember way ca nt prevent invoked', 'date': '2018-04-11T10:41:55Z'}"
"19119",19118,"{'data': 'queryparams longer documented api docs queryparams longer documented controller code refactored mixinscontroller fix need tie back adding existing documentation queryparam property flow viewable controller fixed', 'date': '2018-04-10T18:12:47Z'}"
"19120",19119,"{'data': 'bug canary embernamekey undefined undefined pulled namespace called return right thing kiwiupover double check current canary build need grab newest sha tarball url emberjscombuilds canary sir closed', 'date': '2018-04-10T17:10:39Z'}"
"19121",19120,"{'data': 'bug canary mixins throwing addon throwing embernamekey validationsmixin seems immutable addons using steps fix add mixin constructor calling add deprecation accessing suggesting usage directly profit', 'date': '2018-04-10T15:28:53Z'}"
"19122",19121,"{'data': 'ember viewbox attribute svg component incorrect capitalization summary rendering component bound attribute resulting dom element attribute without capital b impact svg wrong size observed chrome reproduction issue could nt figure jsbin embertwiddle problem exist ember similar past issue looks like also applies release possibly related yes agree believe related copied seems apply issue sth tried create test first however efforts write something matches current implementations showed current test setup happily accepts diffs case sensitive bindings glimmervm emberjs probably test helpers refined however many internals involved nt know codebase well enough make substantial decision continued find actually going wrong believe found offending commit code essentially changed using lower case name attribute setting within install method yet new emberglimmer internals nt feel comfortable deciding best way fix happy help getting done little support though rwjblue hmm change definitely odd ember tests pass remove tolowercase unsure could cause sth rwjblue maybe posted svg related issue totally sure issues really cause however specifically looking attributebinding like would end make requested change one test fails specifically tests case insensitivity honestly seems little odd since used js case insensitive thank sleuthing sth helpful rwjblue happy helpful tried fix issue yesterday came along way many questions regarding direction things actually go intended tried get help slack guess everybody busy happy see fixed fyi fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl', 'date': '2018-04-10T00:23:19Z'}"
"19123",19122,"{'data': 'changes scheduling task causes rerender ember contextual component work initial render register parent registration process cause cp updated want render updated value cp first paint code found reference ember cp would computed twice single render fine ember breaks behavior understandable reasons right schedule callback queue render triggers cp change next run loop updates dom accordingly working fine ember second render cycle nt happen tests example test found using example happening function resolved run queue empty go validate first step visible cp already updated made step visible however cp recomputed yet meaning step yet visible causes lot tests fail question twofold change intentional would right way approach declarative api like much ember power coming template seems like moving wrong direction break behavior allowed declarative apis like one addon run eager hear answers questions would interested helping figure solution problem eitherway alexlafroscia picked poke replicate failure outside submitted upgrade check embersteps ci see passing ci run unable reproduce locally seeing failure remarkably similar main codebase trying see get reproduction issue could issue related conversion addon typescript thus move classes actually typescript rewrite branch problem build show issue correctly although still running time writing specifically bunch tests fail find first step would computed cp class usage place right broken concern alexlafroscia may related paired rondalesc issue tracked alexlafroscia believe issue seeing attempting add computed property perinstance without ember adding computed property instance eg without usage setup native getter properly notified changes see additional background hmm interesting different way class set computed properties rather essentially would decorator version right way approach instead looks like using work instead thanks helping dig rwjblue definitely problem trying define computed property without', 'date': '2018-04-04T06:33:14Z'}"
"19124",19123,"{'data': 'typo shouldrender documentation currently documentation states setting value disable rendering setting value actually disable rendering default value cause application render thank', 'date': '2018-04-03T09:19:59Z'}"
"19125",19124,"{'data': 'ember regression unable addobject arrayproxy ember able use add new record existing collection fetched via upgrading ember action results error also breaks loading additional pages uses add subsequent pages existing model suspect related change understand immutability future direction ember results breaking change deprecation warning possible make less restrictive via deprecation willing work change unsure desired approach would right saw error existed ember data long time able years app without warning deprecation converting array approach took fix app model managed add emberinfinity without overriding addon code sorry deleted original comment bit confusing one clearer bryanhickerson nutshell happening inherited inherited calls overrides throw nt want mutating previously bug ember overriding version nt call letting accidentally bypass pr linked fixes bug array mutations go important keep fix avoid issues like future summary ember data always wanted recordarrays immutable error dates back due bug ember poor test coverage ember data recordarrays fact mutable went specific methods ember fixed bug ember data correctly enforcing recordarray immutability seems like right fix make deprecation thanks context open ember data pr', 'date': '2018-04-02T00:17:07Z'}"
"19126",19125,"{'data': 'namedtransitionintent dynamic missing necessary order scenarios app need store entry point page series pages want return upon completion series pages accomplish service set entry point routes use hook set found certain instances could break app first transitioning parent page dynamic steping series pages completion series pages using service access would called instance app would break upon closer inspection noticed difference working scenarios broken scenarios dynamic click inspecting object object used apply proper state interapp order properly apply state property object must correctly set found clicking dynamic went store property always empty work around grab proper parameters set array manually store beforemodel transition let intent transitionintent intent amp amp intentcontexts amp amp intentcontextslength let contexts thisparamsfor intentname intentcontexts objectvalues contexts thisset routehistorylasttransition transition thissuper arguments seems may bug dynamic getting set properly actually closing seems related workaround documented fixed issue', 'date': '2018-03-27T18:06:12Z'}"
"19127",19126,"{'data': 'notifypropertychange fails plain objects unit test fail latest beta js test notifies computed properties plain objects function assert let obj b computed function return thisa assertequal get obj b obja embernotifypropertychange obj b assertequal get obj b fails returned value still works intended ember object assume mean code intended obviously failed reduced test case expose issue working intended since dependency notifying cause invalidated mean ah make error yes proper failing case sorry updated original post bit investigation reveals usage scheduled deprecation also fails canary works correctly use define computed value yeah still need make work backwards compatibility fix relatively easy nt time work', 'date': '2018-03-27T14:44:48Z'}"
"19128",19127,"{'data': 'chromedriver filling full text inputs noticed chrome often tests fail text set input actually set fully example insert capybara inserted every time beginning text missing also sure think happens handler registered either event js file perhaps racecondition initializing event handler something perhaps chrome writing fast something missed ideas using ember think used happen also', 'date': '2018-03-27T13:21:47Z'}"
"19129",19128,"{'data': 'nt work correctly camelcase string includes oneletter word description function nt seem work ok camelcase strings include oneletter word ex javascript emberstringunderscore colombiawonagainstagreatfrenchteam colombiawonagainstagreatfrenchteam return javascript colombiawonagainstagreatfrenchteam found issue someone needs cover case possible use function lodash javacript lodashdefaultsnakecase colombiawonagainstagreatfrenchteam', 'date': '2018-03-27T03:18:57Z'}"
"19130",19129,"{'data': 'errors since upgrading upgraded couple projects one fine one throws errors whenever call seems issue looking debugger seems go twice reason first pass dynamic segments second fails length validation seeing nt get issue app sure hit edge case ember issue code wondering could point direction could look hmm seems like probably related setup nt seen reported others could try isolate smaller demo app make easier us track bit digging around discovered happens services used private routing service replacing fixes issue anywhere documented impression public router service still come artcommacode yes announced post release closing thank', 'date': '2018-03-26T12:03:13Z'}"
"19131",19130,"{'data': 'canary requires node due fsupdater dependency example failed build believe due bumping broccolimergetrees requires node revert bump back latest', 'date': '2018-03-25T01:16:56Z'}"
"19132",19131,"{'data': 'startrouting issue run safari technology preview update march broken sites use emberjquery reported problem apple may something code thought know example ember application forum loads fine safari yesterday safari technology preview update trouble identifying issue installed latest tech preview visit forumssketchupcom things seem working properly provide details around issues seeing thanks checking include screenshot see link release safari webkit safari version console error messages may mean something see safari page fully renders errors technology preview header renders lots errors guess apple released new build safari technology preview today build problem fixed idea fix really involved code whatever working ok', 'date': '2018-03-23T21:32:53Z'}"
"19133",19132,"{'data': 'document support let helper tasks mandatory x make emberletpolyfill cafreeman x document guides issue pr kennethlarsen optional base emberlet emberletpolyfill cafreeman first point mean put sort check like somewhere builtin helper documented api docs nt gotten working ember app sure yet added api docs missing feature flagging pragma perhaps apologies opened pr correcting problem fyi started work polyfill forgot mention polyfill completed published npm cafreeman mean close issue add checkbox something additional documentation ryanlabouve yep outstanding thing need get polyfill listed correctly emberobserver requested correction hopefully fixed soon', 'date': '2018-03-23T18:31:19Z'}"
"19134",19133,"{'data': 'router service documentation copypasta mistake', 'date': '2018-03-22T23:38:52Z'}"
"19135",19134,"{'data': 'pls send halp cleaning test output please consider environment printing github issue currently test output noisy even green builds makes difficult find actual failures especially small screens phones let try clean useless output found based test run leave comment looking others wo nt duplicate effort lot probably root cause example default works probably require refactoring test infrastructure build phase x x jamesbyrne test phase x x draggha x lukecoy x x kamikillerto x kamikillerto x kamikillerto x resumetest x library version banner app boot draggha allthesignals x kamikillerto look build phase take stab test phase like take stab test phase message beneath resolved fix saw correctly look thanks folks updated issue accordingly also take related think idea handle library version banner app boot look thanks draggha noted take take stab edit dice sure suppress error message since throwing error instance another object route may getting caught error callback open suggestions got pr attempt want make sure ok approach apply everywhere thanks allthesignals noted ok folks got items left takers jamesbyrne looks like nt pr yet task miss linking pr still want take one name unlock let someone else take stab take acorncom test actually checks window console error messages rewritten check messages differently skipped sure conservative try thx edit ah kamikillerto think overlap taken would nt mind taking look one test phase lukecoy got seems already fixed find error logs look sure look hey folks getting close anyone blocked things need help given area stuck edit check message longer appear rwjblue chancancode guidance got even less context snag kamikillerto draggha jamesbyrne kamikillerto acorncom allthesignals chancancode lukecoy rwjblue still issue perhaps close think chancancode anything remains todo looks like lot addressed okay closing tracking issue filing new ones needed opened looks like still outstanding prs waiting reviews also', 'date': '2018-03-22T14:25:32Z'}"
"19136",19135,"{'data': 'ember serve detecting files changed via symlink windows make copy app folder local ember setup via mklink app folder somewhere else system making symlink local ember setup make changes files ember serve detecting file changes closing favor thank', 'date': '2018-03-22T10:01:29Z'}"
"19137",19136,"{'data': 'docs router didtransition usage example uses private url property returns incorrect urls example using method calling property marked typo public example incorrect another thing noticed implementing track page views app wrap call otherwise reports url previous route looking deeper code lt find actually used instead overriding method like example calling would return correct value since didtransition marked public quite trap know one use instead result url completely different seems like way without manually dealing runloop define didtransition event routerjs solutions would use instance initializer lookup router main example get instance nice still using ember meet problem nt return correct value even runloop works', 'date': '2018-03-22T08:03:11Z'}"
"19138",19137,"{'data': 'assign read property form object latest beta button compoment like attempt bind attribute triggers error js import component embercomponent export default componentextend tagname button attributebindings form occur would make twiddle reproduce ca nt seem remember point twiddle beta possibly related glimmervm upgrade still issue release version dhaulagiri throw together demo app tweak show error rwjblue pull run see error issue exelord success finding workaround nope holding upgrade rwjblue insight might look track last issue blocking us issue almost certainly glimmervm think next step make failing test pr based demo think would basically similar test exelord get fix pointing packagejson thank dhaulagiri work ca nt wait official release', 'date': '2018-03-21T18:55:30Z'}"
"19139",19138,"{'data': 'node repl displays running following nodes repl results printed confusingly repl require embersourcedistemberdebugjs care trolled assuming ember longer loaded correctly node well let share results funny reasons basically invoke happens results run node repl print output based result looks like idea deprecated may eventually go away way solve immediately would use provided results sh emberjs could expanded pretty print public api something useful self discoverable', 'date': '2018-03-16T23:46:48Z'}"
"19140",19139,"{'data': 'unexpected behavior change ariarole glimmervm upgrade pr seemed introduce unexpected change behavior components previous versions ember allowed dynamic attribute generated element would update expected initially falsy would attribute later became truthy attribute would appended pr merged conditional check optionally binds attribute truthy instantiation monitored future changes initially falsy binding setup future changes add attribute element change highlighted diff apackagesemberglimmerlibcomponentmanagerscurlyts bpackagesemberglimmerlibcomponentmanagerscurlyts export default class curlycomponentmanager extends abstractmanager intended behavior change nt see called changelog oh sorry missed issue basic change needed instead like done still less work components use allow component set returning falsey value addressed fyi fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl', 'date': '2018-03-16T21:00:58Z'}"
"19141",19140,"{'data': 'input helper properly handle numbers exponentialscientific notation works think equivalent nt although html version tested chrome workaround quoting parameters seems cause interpreted correctly really sure issue htmlbars understanding syntax note returns twiddle demonstrating problem hmm two examples given actually quite different sets strings even quoted would treated strings html tokenizer browser attributes strings seems way parsing done example bit treated like path expression therefore evaluates undefined seem odd nt really seem like big parser quirk mmun may thoughts though rwjblue thanks taking look issue bug guess question becomes one documentation ie read need convert numeric literals string literals order use templates bind numeric variable instead eg set controller use works fine would expected work constant number controller property described getting converted string automatically part process think label documentation needs team discussion seem strange using works work worth document avoid confusion behavior emberjslearningteammanagers think adding specific documentation exponentialscientific notation template helpers guides pixelhandler think adding something api docs input helper might reasonable given relative rarity folks need recommending use regular gt probably best route take probably better add api docs fullon guides', 'date': '2018-03-15T19:49:31Z'}"
"19142",19141,"{'data': 'quest module unification final cut throughout small crew pushed forward implementation ember new filesystem layout applications addons described rfc lovingly called effort module unification much effort either design explorationheavy nt plausible reduce work list things individual contributors could pick without context last weeks turned corner effort behind three feature flags ember ember cli emberresolver order enable flags default new applications need help quest issue outlined current list known blockers well guidance test new features new migrated codebases several contributors huddled emberjs community slack recent months please join us start pick one tasks issue list emberjs emberjs pr landed namespaces behind feature flag implemented parsing strings runtime implementation improved work happen ember app build time advocating go feature want get benchmarks via confirm nt unexpected large regression changes implement features expected improve ember performance understand impact ember cli ember cli uses presence configure return value works well apps addons detection fails classic dummy app module unification addon however although dummy app may directory addon root level confuses logic dummy app incorrectly treated module unification app requires design ember addon author may want two dummy apps testing module unification app classic app acceptance tests would run apps could two acceptance test suites module unification blueprints generators mostly tracked x cibernox module unification ember addon blueprint generate module unification dummy app classic app generators initializers instanceinitializers broken x files module unification addons import app addon dummy app blueprints use fallback resolver via classic initializers support via remove feature flag need convert addon apps dependent upon module unification addon remove fallback setup newly generated apps addon dummy apps x embermaybeimportgeneratorfortesting needs apply tests src directory see classic app running version ember cli predates module unification support addon using module unification directory must way fail gracefully b bring reexport logic use embercli old version embercli module unification addons reexport top level components classic apps allows addon author use directory still addon work either kind app would like provide addons buildtime way configure reexport logic would permit rename components services match legacy classic apis adopt new apis module unification apps ember addons need api allows alter module unification config example add collections types theory ember resolver would use api add types collections fix method rely presence top level project module unification format specifically addon may module unification format dummy app classic format ember template compiler helpers accept argument like templates running app x part ast transform inline value however test files private collection local lookup component might able use easy value filename still access resolve subject example templates created able access component simplest solution pass templates one level example source templates test file would tradeoffs taking approaches seems like good place start ember resolver x emberresolver feature flag module unification removed time swap toggle based ember cli value buildtime flagging means classic ember app nt get larger js payload feature module unification using migrator x iezer rwjblueembermodulemigrator migrator update file import app currently mentioned fallback documentation part conversion x migrator currently renames templateonly components folder like resolver nt yet support instead always expects folder example emberresolver probably tweaked fix runtime alternatively migrator simply flattening nearterm x migrator tries reexport name also imports thing name embersvgjar x addon one found directory used module unification need update compatibility emberloadinitializers x test files initializers directory ignored loader ca nt strip test files development output since ce would break dev server easily initializer ignore tracked several contributors huddled emberjs community slack recent months please join us start pick one tasks creating new module unification app install ember cli master generate new app module unification env variable box newly generated application use emberresolver fallback resolver allows module unification app use classic addons much later converted default addons ship new ember apps drop fallback resolver use muonly glimmer wrapper resolver implementation module unification uses configuration collections types classic addon layout addons could define new types factories without explicit definition removing feature flags need api explicitly module unification config temporarily may want mutate config app add type example srcresolverjs issue generating new application likely find file issue something seem like works box likely related blueprints filed generate mu files use feature flag issue using generator find file addon seems work properly get errors around resolver issues found filed migrating existing ember app install module migrator run migrator app codebase install ember cli master update files match latest blueprint similar upgrade want keep emberresolver feature flag keep emberjs feature flag keep canary version emberjs keep addition two lines one one classic addons exporting keep change fallback resolver keep change import app issue migrating application likely find file issue run issues migrator bad file names bad file contents find file issue blueprint step may also part setup issues see section creating module unification app information applies migrated apps creating new module unification addon install ember cli master generate new app module unification env variable find file issues experience building addon issues testing addon mostly found although known issues around unexpected issue using add classic app module unification app look mixonic task lock handle also done thanks cibernox noted acorncom also check cibernox done items get done feel free ping slack help keep ball rolling checkbox closed see rwjblue looked migrator issue migrator currently renames templateonly components folder like srcuicomponentsnamehbs sure real issue context know specific case issue likely something fixed pods support added migrator cool case box also checked first migrator task fixed pr fixed latest directory renamed thanks iezer fix ivanvotti adjusting embersvgjar codebase greater ecosystem mixonic also tracked precursory pr would need merged taking stab fix try verify still happens today efx added iezer may solved items ember template compiler section think may skipped first checkbox moved straight onto autointerpretation mixonic embercliemberloadinitializers fixed thanks gavinjoyce instructions creating mu app changed mixonic perhaps could update quest issue description instructions creating new module unification app install ember cli master generate new app module unification env variables generate component run app updated instructions create run mu app needed running perhaps someone edit access issue description could update instructions provided comment gt fix libmodelsprojectjs ismoduleunification method rely presence top level src project module unification format specifically addon may module unification format dummy app classic format blueprint module unification mode currently determined root project ie presence src root project unaware generated destination format eg testsdummyapp blueprint knows enough detect destination format maybe future would make sense give blueprint edit simplified updated instructions create run mu app emberclimoduleunificationtrue needed running ember serve perhaps someone edit access issue description could update instructions provided comment mixonic please update issue description nt read description missed gavinjoyce comment thanks karthiicksiva yeah someone else needs reconfirm instructions light new options questions outstanding tasks someone new particular code base would need begin would need know solve tasks emberjs pr landed namespaces behind feature flag implemented parsing namespace name strings runtime implementation improved work happen ember app build time involved something build time happen emberjs current parsing located classic app running version ember cli predates module unification support addon using module unification src directory must way fail gracefully b bring reexport logic use embercli old version embercli actionable thing make sure later module unification addons reexport top level components app classic apps allows addon author use src directory still addon work either kind app would like provide addons buildtime way configure reexport logic would permit rename components services match legacy classic apis adopt new apis module unification apps involve hbs helpers accept source argument like templates running app one looked could figure entry point worked usage like know connection babel transform htmlbars confusion could new template functions additional guidance specifics would super beneficial also use github project managing remaining todos hmm sure put writing time hassle changed file run generate properly removed check work multiple dummy apps ismoduleunification detection', 'date': '2018-03-13T18:46:49Z'}"
"19143",19142,"{'data': 'question improved phantom support errors ci failures become common seem confuse users intimately aware weakmap missing likely user using unsupported browser case phantomjs thoughts adding quick compat check ember loads compat check error something actionable open questions checks done error message require us finally post official browser support list cc locks stefanpenner particular case even worse still using bower try get builds nt publish longer builds hodgepodge version canary ca nt recall exact sha super old rwjblue stefanpenner still issue perhaps close think stefanpenner update stefanpenner idea next steps issue', 'date': '2018-03-13T17:11:35Z'}"
"19144",19143,"{'data': 'tutorial integration test fails triggerkeyevent autocomplete component heading integration test heading application tests test file update matching listings fails due element passed call failure also applies test initially load listings although looked ember less days get impression error caused fact class exist html tag generated component rayascott moving well', 'date': '2018-03-13T12:55:58Z'}"
"19145",19144,"{'data': 'tutorial thison referent exist autocomplete component step heading integration test first code example reference referent unless misreading text lack knowledge regarding javascript amp ember development ca nt find call used documentation bug closing one favor one guides well', 'date': '2018-03-13T12:36:34Z'}"
"19146",19145,"{'data': 'tutorial autocomplete component example documentation bug autocomplete component step heading integration test second code listing lines code line highlighted green keyword added declaration without test fails keyword added next code example rayascott thanks feedback going move issues guides repo track issues guides tutorial would love get feedback help fixing bugs acorncom sorry nt realise guides repo rayascott worries clear', 'date': '2018-03-13T12:25:56Z'}"
"19147",19146,"{'data': 'tutorial tests fail apirentals ember data step following official ember tutorial writing recommended tests along app code completing ember data step noticed acceptance tests failing get request apirentals seeing issue app code however rentals display correctly rentals page anyone ember experience shed light wrong andor fix thanks promise rejected show rentals home page ember data request get apirentals returned payload empty contenttype found apirentals ms source error ember data request get apirentals returned payload empty contenttype found apirentals errorclassembererror errorclassadaptererror new errorclass classhandleresponse ajaxerror classhasherror fire objectfirewith rejectwith done xmlhttprequest rayascott moving one well', 'date': '2018-03-13T09:17:42Z'}"
"19148",19147,"{'data': 'attempting access inspect property via chai triggers get assertion try work reproduction added assertion using get proxy getting tripped tests line chai value amp amp typeof valueinspect function amp amp attempted access property line test code triggers case array ember data records returned filter closing favor adding discussion', 'date': '2018-03-13T00:19:30Z'}"
"19149",19148,"{'data': 'return value returned setter computed value setting value computed values method return value returned setter computed property instead passed value gets returned see twiddle details documented behavior think change', 'date': '2018-03-12T09:52:24Z'}"
"19150",19149,"{'data': 'conflict js module api module unification discovered issue pairing wycats wanted write future discussion upgrading ember app use module unification already adopted js module api migrator produced invalid code helpers due following conflict helper functions must wrapped function exported module unification helpers must named export called migrator produces code looks like one way fix migrator detect conflict rename import since export name changed eg something everyone type may want think conflict design changes want consider one solution would rename example would become done backwards compatible way exporting mapping mappings nlincoln yeah fine approach probably migrator though work done cc rwjblue bantic fix released module migrator', 'date': '2018-03-10T21:25:06Z'}"
"19151",19150,"{'data': 'properly get html property value ember input helper hello problems tried get defaultvalue property value gt use ember input helpers result always empty string like plain html return expected value using input helpers edit turns using value input helpers plain html cause defaultvalue return hmm title issue points underlying issue seeing described article linked initial attribute content reflect current property ember helper always set property therefore work nt really bug perse going go ahead close issue', 'date': '2018-03-10T15:01:48Z'}"
"19152",19151,"{'data': 'use computed properties nodejs js require embermetal require emberruntime const emberobject emberobject const computed embercomputed const user emberobjectextend firstname izel lastname nakri fullname computed firstname lastname function return let usercreate consolelog meget firstname works prints izel consolelog meget lastname works prints nakri consolelog meget fullname crashes typeerror thisfunccall function stacktrace computedpropertycpget ok figured embermetal npm package years old instead works js require embermetalnode require emberruntimenode const emberobject emberobject const computed embercomputed const user emberobjectextend firstname izel lastname nakri fullname computed firstname lastname function return let usercreate consolelog meget firstname works prints izel consolelog meget lastname works prints nakri consolelog meget fullname works prints izel nakri embersourcerequire embersourcedistemberdebug gt right require embersourcedistemberdebug tried trying get access main object returns literal obviously missing something tried odd return ember dist gives node environment actually loaded ember successfully node try see loaded correctly node wish ember return right object browser environment near future avoid confusion addition hope soon packages truly distributed es modules instead current amd module indisguise architecture enabled via ember babel shims embercli actually printing node utils inspect calling emberinspect argbash node v node require embersourcedistemberdebug ember referenceerror ember defined also need packages use try would false also inspect issue fixed canary izelnakri krisselden rwjblue still issue perhaps close think believe wrong', 'date': '2018-03-10T09:39:22Z'}"
"19153",19152,"{'data': 'routerservice forces model refresh queryparams unchanged query param defined controller set route inject service component trigger transition subroute name passing query params expected transition complete parent route model reloaded actual query param treated changed causes parent route reload reproduction interesting thing appears twiddle default reflected url second invocation router rfc sheds light default query params semantics still unclear behave query params passed issue similar may root cause however issue reproducible without passing query params got similar issue right found problem qp default always visible change router triggers model reloading try change reload model know temporary fix need find source problem exelord actually twiddle nonempty string default qp value', 'date': '2018-03-09T17:17:17Z'}"
"19154",19153,"{'data': 'inject header static content requests hello everyone actually issue help needed way get ember inject custom headers requests even tags application gets images path database uses path templates routes used emberdata send get custom headers backend dynamic routes ca nt get static content accessing image files using expressjs backend server accomplished thanks much help generally reserve issue tracker actual bugs ember seem like bug rather like general qa would better served stack overflow community slack channel going go ahead close issue please cross link post back think possible though unaware way add headers requests made elements', 'date': '2018-03-09T00:08:07Z'}"
"19155",19154,"{'data': 'embersource embercli generate valid tests landing longer helpers ember cli breaks blueprints instanceinitializers initializers also broken mocha acceptance tests sure enumerated everywhere fails bug effectively duplicate exists incomplete nathanhammond mocha point embermocha reregenerates helpers nt quite finished support newer testing system thank', 'date': '2018-03-08T23:30:52Z'}"
"19156",19155,"{'data': 'bug emberjs api hi want notify neccessary correction emberjs api downloaded repository make contribution seen master branch bug fixed however yuidoc api web still bug make import following updated way using old way calling computed properties use combination code fails please check part seen emberjs methods api web exactly problem description branch master repository code correct thanks lot ps union computed property anchor yuidoc correct either redirects sort computed property edit made pr changes answered pr let us know trying help pr seems problem many commits already master show usual update previous versions docs case please open issue anchor bug thank patricall ping closing according triage policy thank', 'date': '2018-03-08T14:04:49Z'}"
"19157",19156,"{'data': 'htmlbars pass parameter array loc helper according documentation possible pass array parameters loc helper works javascript trying something similar template file parameterized localization string like one like use like unfortunately results works dynamically created array would possible implement behaviour similar component helper using params property like facilities provided sufficient localization deprecated frankly thought already thinking think go making changes helper deprecation second rwjblue suggest use one internationalization addon instead read deprecation planned emberstring rfc follow implementation edit closing issue due thanks reporting', 'date': '2018-03-08T07:44:15Z'}"
"19158",19157,"{'data': 'trigger evented mixin always fires queued listeners reverse order flattened actions always loop reverse order queued order listeners see note intended events registered use register event results reverse order call queued events suggest check calling queued listeners direction reverse forward unless specified would expect listeners called order registered five years closing bug thank serabe thanks see considered bug shall submit feature request use evented several services app hack work arounds reverse firing order would great way designate direction listeners fire open rfc change behaviour please research impact current codebase learn rfc process contributing file', 'date': '2018-03-07T14:16:37Z'}"
"19159",19158,"{'data': 'tests pass locally failing heroku issue emberheroku identify exactly problems coming specifically qunit tests breaking many routes use mixin send data adobe analytics behaviour exactly expected running tests got comes js library significant numbers tests failing locally solve issue wrapping section code calls mixin looks like global datatracker import mixin emberobjectmixin import ember ember const testing ember export default mixincreate notifyadobeanalytics testing let payload somejson datatrackertrackevent newpage payload fixes many broken tests behaviour unaffected perfect however running tests heroku staging environment error message thrown previously getting locally adding elsewhere looked codebase using constant working normally heroku elsewhere unsure breaking find reason heroku getting error fixed locally error logs structure tried adding global variable putting top page various things nothing worked far issues find look vaguely related problem using ember version embercliqunit version reiterate everything working exactly desired running tests staging came across problem known issue something someone else looking wrong places solution thanks time apologies explanation bit garbled let know anything unclear fixed importing env wrapping instead', 'date': '2018-03-06T14:49:02Z'}"
"19160",19159,"{'data': 'ember failed assertion jsonstringify ing ember object upgrading ember using results following failed assertion read linked rfcs discussion understand precautionary assertion breaks usage thank reporting need add exception list probably', 'date': '2018-03-05T13:18:09Z'}"
"19161",19160,"{'data': 'unhelpful syntax error message updated ember got following error everything else working fine considering size codebase ca nt figure error comes already looked suppose missed one nt find generated repository ca nt send pr either could add full syntax please really helpful thanks reporting definitely consider bad error messages like bugs error thrown sadly point process lost original syntax source locations propose making invalidsyntaxdetection ast transform use move specific error perhaps statically detectable errors thrown opcode compiler include template path line number column anyone looking pick need something like add new ast transform good base add ast transform array add test confirming assertion thrown given bad input something like one mind way simpler new solution might helpful wanted print arguments nt enough time implement moment still fixed next time pass give look', 'date': '2018-03-05T12:32:20Z'}"
"19162",19161,"{'data': 'document provide imports emberhtmlbars following apis emberhtmlbarsprecompile emberhtmlbarscompile documented since removed ember core build ember part update glimmer afaik still public also imports used precompile templates wire format also required addons render server side required applications embertwiddle need compile templates client side reviewed tomdale day triaging list came following adds implementation needed need update docs reflect new paths cc emberjslearningteammanagers rwjblue one correct used compilation import string compiled template used runtime belong template comes runtime thing factory template singleton di compile precompile come indeed aware come please feel free provide suggestion without one likely push forward think close one looks like documentation added thanks yininge see imports listed close think repo provide documentation cc emberjslearningteammanagers', 'date': '2018-03-05T02:20:19Z'}"
"19163",19162,"{'data': 'question router passing wrong model setupcontroller pass goes directly sometimes confused case single model break templates use normal behavior pass model instead id model hook invoked transition instead passed result got passed method read documents carefully details though normal behavior many people thought improved ongoing rfc discuss rfc got implemented never get confused anymore either use instead model write custom method solve issue thanks explanation actually big problem use template remove rsvp', 'date': '2018-03-04T18:02:45Z'}"
"19164",19163,"{'data': 'replacing htmlsafe empty string end causes rendering error error triggered tries replace htmlsafe empty string anything also requires within htmlsafe empty string last thing displayed error triggered reproduced problem yes error happen removed specified also requires within htmlsafe empty string last thing displayed sorry took long fixed', 'date': '2018-03-02T21:17:31Z'}"
"19165",19164,"{'data': 'oneventname vs oneventname regression ember following template code works far know ember downcasing attribute solves problem developers coming frameworks vanillajs probably expect work whether nt work probably break folks upgrading ember gt thanks reporting sure end considered regression try discuss detail team decide per discussion core team meeting want treat regression top head aware changes vm caused need investigation anything one help move forward regression keeping us upgrading workaround lowercase breaks rendering svgs really want upgrade really would like finally get rid wrapper div regularly inconveniencing us cyclone sth tbh mostly need someone dig help track regressed perhaps great first step submitting failing test case pr glimmervm tldr message likely related issue rwjblue reporting back first extensive debugging adventure glimmer ember internals neckbeard tried create test first however efforts write something matches current implementations showed current test setup happily accepts diffs case sensitive bindings glimmervm emberjs probably test helpers refined however many internals involved nt know codebase well enough make substantial decision continued find actually going wrong believe found offending commit code essentially changed using lower case name attribute setting within install method yet new emberglimmer internals nt feel comfortable deciding best way fix happy help getting done little support though hmm change definitely odd ember tests pass remove unsure could cause working seems like would related component attribute bindings right rwjblue maybe posted svg related issue totally sure issues really cause however specifically looking attributebinding like would end make requested change one test fails specifically tests case insensitivity honestly seems little odd since used js case insensitive able write test within emberjs glimmervm far anything look inspiration done emberjs within eventdispatchertestjs test case insensitive event handler let receivedevent second test currently fails however sure best place test maybe even simplified please let know submit pr done differently seems quite though one several non trivial changes glimmer vm handles attributes tried debug changes seems issue appears dynamicproperty longer instantiated property manager contains normalized attribute exceeds knowledge glimmer intention development hopefully helps resolving issue though however pretty sure expected issue related sth tests look great failing test pr would perfect fyi fix pulled release release beta release latest builds minutes release beta canary channels include fix get latest tarball url via embersourcechannelurl', 'date': '2018-03-02T17:24:18Z'}"
"19166",19165,"{'data': 'missing changelog title says fixed', 'date': '2018-02-28T16:33:45Z'}"
"19167",19166,"{'data': 'quest glimmer components ember quest issue tracks implementation glimmer components emberjs plan glimmerjs components following features outer html templates etc arguments templates prefixed like arguments set component component classes use javascript class syntax mutable component state annotated properties components invoked via syntax attributes splatted via keeping ember spirit incrementalism want land functionality piece piece via addon allows community start using features providing feedback early process fact already started road glimmer components ember first two features already started land templateonly components templates outer html assuming optional feature enabled arguments accessed template via prefix eg issue proposes finishing process bringing glimmer components ember allowing addons provide alternate component implementations transforming package ember addon implements glimmerjs component api break work phases one unlocking benefits existing ember apps addons phase adding necessary primitives emberjs support alternate component implementations phases incrementally enabling glimmerjs component api go depth phases defer exploring technical details later phases first phases closer completion phase customizing component behavior tl dr add customcomponentmanager api emberjs allow addons implement custom component api currently components ember app assumed subclasses order support alternate component apis ember need way tell ember component behavior change say custom component behavior specifically mean component instances created component instances destroyed arguments provided component instance component notified lifecycle changes glimmer vm introduces concept component manager object makes decisions api low level would premature adopt directly public api ember difficult write easy author way breaks components yet stable instead propose new ember api called implements delegate pattern provides smaller api surface area fullfledged glimmer vm api allows addon authors fall pit success ember know component manager use given component original iteration custom components rfc introduced concept data structure eagerly registered ember specified component manager use one major benefits approach component manager resolution happen build time unfortunately means design api exactly get registered likely means sort integration build pipeline instead propose api setting component manager runtime via annotation component class incremental step allows work custom component managers continue longer term solution designed custom component manager discovery iteration components must explicitly optin alternate component managers via special function exported ember annotates runtime component manager used particular component class js import componentmanager embercustomcomponentmanager import emberobject emberobject export default componentmanager emberobjectextend glimmer eventually could become class decorator js import componentmanager embercustomcomponentmanager export default componentmanager glimmer class first time component invoked ember inspects class see custom component manager annotation uses string value perform lookup container example ember would ask container object container key addons thus use normal resolution semantics provide custom component managers glimmer component addon export component manager get automatically discovered normal resolution rules api verbose particularly ergonomic apps addons abstract away introducing base class annotation example addon called wanted provide custom component manager could export base class like js addonindexjs import emberobject emberobject import componentmanager embercustomcomponentmanager export default componentmanager emberobjectextend turbo users addon could subclass base class define components use correct component manager import turbocomponent turbocomponent export default turbocomponentextend didinsertelementquickly custom component api component island backwards compatibility reasons important introduction new component api break existing components one example existing view hierarchy api ember components inspect parent component via property even parent child ember components still nonnull property currently ember responsible maintaining state well ambient scope state like target actions prevent poorly implemented component managers violating invariants existing system use compositional pattern customize behavior hiding sharp corners underlying api js import customcomponentmanager embercustomcomponentmanager export default new customcomponentmanager major minor ember version manager targets version create componentclass args responsible instantiating component class passing provided component arguments value returned passed hooks getcontext component returns object serves root scope component template implementations return component properties looked curly expressions update component args called whenever arguments component change destroy component phase ember object glimmer components base class ember supports long list features many longer heavily used features impose performance cost even unused first step want provide way opt simplified glimmerjs component api via package ease migration provide implementation glimmer base class inherits example emberglimmer component looks like js srcuicomponentsuserprofilecomponentjs import component glimmercomponentcompat import computed emberobject export default component fullname computed argsfirstname argslastname function let firstname lastname thisargs return isadmin false toggleadmin thisset isadmin thisisadmin hbs srcuicomponentsuserprofiletemplatehbs fullname welcome back firstname isadmin admin notable characteristics components templates outer html example template single root element renders tagless component actions functions component need nested hash arguments set property rather setting individual properties component directly use ember object model means tools like computed properties mixins ember developers already familiar continue work important included properties supported phase properties component methods properties relating view hierarchy etc custom javascript dsl modifying root element dispatching events mandatory class autogenerated guid element id manual method property use instead passed arguments unidirectional create twoway bindings passed arguments set properties component instance avoiding possibility hardtodebug naming collisions create jquery object component element manual components dom support following lifecycle events event listener component lifecycle events hooks must implemented methods one interesting side effect set features dovetails effort enable javascript classes conjunction design proposed es classes rfc provide alternate implementation component js srcuicomponentsuserprofilecomponentjs import component glimmercomponentcompat import computed emberdecoratorsobject export default class extends component isadmin false computed argsfirstname argslastname get fullname let firstname lastname thisargs return toggleadmin thisset isadmin thisisadmin phase angle bracket syntax phase enables invoking components via angle brackets addition curlies syntax disambiguates component arguments html attributes feature also enables splatting passed attributes component template via hbs srcuicomponentsuseravatartemplatehbs lt attributes inserted hello firstname would render output similar following html hello steven phase tracked properties phase enables tracked properties via decorator ember details interop ember object model tracked properties worked tracked properties land users able drop module use normal nonemberobject component base class tandem recentlymerged autotrack feature infers computed property dependencies automatically result simplification application code js import component tracked glimmercomponent export default class extends component tracked isadmin false tracked get fullname let firstname lastname thisargs return toggleadmin thisisadmin thisisadmin q amp add back things like class name autogenerated attribute glimmer components compatibility existing css yes example hbs component content goes js import component glimmercomponent import guidfor emberobjectinternals export default class extends component get uniqueid return guidfor resources stglimmercomponents channel ember community slack coordinating work custom component rfc customcomponentmanager branch inprogress branch emberjs implementation behind feature flag tracked branch inprogress branch emberjs work interop properties ember objects tasks use lists track ongoing work learn implementation add remove items list custom component manager api x update custom component rfc reflect changes chancancode x add feature flag implement function expose resolver needs detect annotated classes resolver needs look specified component manager guidance addon authors put component managers discovered work module unification mixonic implement api define interface validate property upon creation internals preserve existing components instrument rendering performance instrument compatibility ember inspector glimmer component addon todo break separate quest issue glimmerjs repo support using ember addon preserve existing behavior consumed glimmerjs provides plain javascript base class provides base class base classes import add annotation consumed ember implementation discoverable via ember container lookup lifecycle hooks static event delegationinvoked methods etc triggered element access computed property alias arguments available constructor updated called trigger infinite rerender cycle documentation install caveats canaryonly emberglimmer compat components outer html templates lifecycle hooks defining computed properties depend migration guide glimmer components guides writing effective glimmer components people familiar libraries glimmer components ember developers glimmer components react developers glimmer components angular developers glimmer components cobol developers open questions best practices actions something need allow component managers hook use bare javascript classes static method component classes protocol initializing component seems simple surprisingly tricky best place document addon apis like handle versioning coordinating work stglimmercomponents channel ember community slack interested helping lurkers welcome curious sausage gets made regarding hbs srcuicomponentsuseravatartemplatehbs lt attributes inserted hello firstname nt understand curly brackets used denote dynamic variables splatted attributes visually looks like going rendered consistency would nt better rfcs glimmer components discuss look work tomdale issue mentions documenting component compat mode seem mention documenting migration guide example quite surprised thing anymore would great documentation shows migrate common use cases new best practice patterns dbbk biggest reason nt require syntactically ambiguous normal attribute like cases require curlies four fewer characters seemed easier type less visually noisy think may also cause people assume property scope ca nt example syntax would suggest also strongly implies spread syntax works positions nt suggestion adopting special template binding adding spread syntax handlebars needs design implementation immediate roadmap would nt totally surprised future replaced something like glimmer component api would go rfc process enabled default ember apps ever want one nice thing custom component manager approach nt canonize next generation api let different designs compete merits via addon ecosystem great suggestion add migration guide list show existing patterns approach solving problem new api address case specifically since brought usually people use hook initialization component state based passed arguments practice means fair bit unnecessary hooks eg initialize values never end getting used course people end shocking things hooks rendering hot path alternative switch pushbased initialization pullbased initialization example wanted computation generate initialize value component property would instead use tracked computed property ensures work done values actually get used example instead js import component embercomponent import computed emberobject export default componentextend didreceiveattrs thisset firstname thisattrsfirstname tobias thisset lastname thisattrslastname bieniek fullname computed firstname lastname function return js import component tracked glimmercomponent export default class extends component tracked get firstname return thisargsfirstname tobias tracked get lastname return thisargslastname bieniek tracked get fullname return admit skeptical first wycats persuaded experience building big glimmerjs app last year never ran use case could nt modeled moreefficient computed properties tomdale agree nt necessary things sometimes saved needing write observer one attributes passed parent example wanted kick ajax request one attributes changed hate add kind side effect getter yep thinking similar use cases one example animation say want kick animation changes different one direction would work glimmer components ah okay system working performance foot guns performed synchronous anything side effects like animations network requests scheduled async hooks like nt seem fit well example case seems trigger component rerendered correct nt actually use property rendering component would nt rerender changing argument would never called also throws hard error glimmer set anything cause rerender might misconception around called hook invoked tracked property used template passed argument changes see example parent component passes argument child component gets hook called even never used argument moving goalposts example kicking ajax request response argument change would cause error thrown happened want synchronously set property time able model behavior lazy getters need set property asynchronously ajax example wo nt trigger error happen different event loop alright seems good enough nt want expand specific thing anyway wanted highlight thorough migration guides needed tomdale still date seems inactive time tomdale ok scenario need kick ajax request particular attribute changed attribute nt want write observer still didinsertelement', 'date': '2018-02-28T02:28:06Z'}"
"19168",19167,"{'data': 'public api needed support ember inspector working going ember inspector updating encountered several things far support due lack public api things need expose relied find booted applications page like deprecate calling reopen instantiation done given object inspector uses reopen add custom logic think destroy sure atm within initializer expose public way finding descriptors', 'date': '2018-02-27T14:24:20Z'}"
"19169",19168,"{'data': 'runloop drop events hello fans timing bugs today fun one new microtaskbased autorun architecture drop scheduled events see action run following beta js import controller embercontroller import schedule emberrunloop export default controllerextend actions testit deliberately escaping run loop use autoruns instead promiseresolve gt schedules autorun schedule render gt consolelog schedule microtask ahead runloop next flush promiseresolve gt consolelog return promiseresolve gt runs fine consolelog scheduled event never fires schedule actions gt consolelog never runs return runloop goes back first queue start flushing promise stack interleaving runloop onemicrotaskperqueue fire event console logs number layers promises required experience bug depends queue trying schedule runloop spends one microtask per queue stack promise resolutions interleaved queue flush example schedule queue immediately queue flushed runloop never notices make drop events queue varying number promises resolve time first trigger autorun time schedule doomed event published working example bug thank detailed write start digging first via failing test cases back burner meantime revert back burner update ensure let door issue copied writeup tracking upstream fix', 'date': '2018-02-27T08:29:36Z'}"
"19170",19169,"{'data': 'observers nt trigger complex app ok really weird complex app lots addons involved observers triggering create simple test route simple observer watching plain string property nt fire put code new application works every time using change commenting else fixes symptoms function notifyobservers obj keyname meta meta return could broken code would cause fix work uncovered edge case around ember observers rwjblue cibernox thoughts see pr rwjblue mmun suspected app something break framework eg deferring would surprised found bug something fundamental however app huge addons ca nt reproduce anywhere else brand new ember app nt suffer problem pr tell us app broken looking app addons like find pattern search source find way alert dev broken framework way add warning appropriate docs deferring done appear global forgetting call would seem break observers application wide ways defer guess unbalanced call add logging around variable incremented decremented thing identify gets unbalanced dig things wrong bryancrotaz right put logging statements eg put conditional breakpoint contains also able put debugger look callstack see requesting deferral always write saying app throwing errors would definitely assume related addressed likely related bryancrotaz conceptually yes nt use functions private using tryfinally hmm unfortunately looks like accidentally marked private looks like code using example emberdata documentation beginpropertychanges nt jibe private method begins grouping property changes use method group property changes notifications sent changes finished plan make large number changes object one time call method beginning changes begin deferring change notifications done making changes call endpropertychanges deliver deferred change notifications end deferring perhaps documentation point devs public method probably also include changeproperties changeproperties needs promise aware code setup authenticator authenticatedcontent trigger trigger boolean trigger amp amp thisget isauthenticated thisbeginpropertychanges thissetproperties isauthenticated true authenticator set thiscontent authenticated authenticatedcontent thisbindtoauthenticatorevents going cause problems deferral global overlapping promises could mean deferral count never goes zero fact could explain symptoms bryancrotaz seems fine update docs however major part programming model nt belong guides mmun nt sit alongside make multiple changes without triggering lots redraws bryancrotaz nope redraws scheduled run loop redraw amount without deferred observers ok fewer computed property calculations tldr efficiency even beginpropertieschange etc runloop magic us bryancrotaz anyways absolutely nt need made promiseaware seeing embersimpleauth invalid usage private api begin end need embersimpleauth providing value generally speaking simple auth example using finally end property changes gt begin end need embersimpleauth providing value dunno dig added personally started used begin end propertychanges suspect digging issue tracker shed light edge case satisfies bryancrotaz nt code also years old may factor p api surface used public perhaps almost surely public least unmarked time ok dig experiment submit docs prs worked issue submit prs addons bryancrotaz regarding actually ensures key object changes multiple times single observer call occurs finished calling callback indeed problem unbalanced beginendpropertieschange private api one using would right add deprecation recommendation use instead bryancrotaz awesome unbalancing seems ok deprecate think rwjblue worried introducing extra churn intend make observers async case deferral functions nooped deprecate observers entirely agreed think changeproperrties reasonable replacement scenarios furthermore think introduce churn also intend significantly change internals observer system work underway much better picture best direction ultimately type issue actually pretty uncommon sorry ran bryancrotaz end similar mechanism new design please try make global return handle passed would much easier debug looking misuse especially defer counter global though pig implement strongly agree module would suggest removing deferring switching changeproperties', 'date': '2018-02-26T10:55:28Z'}"
"19171",19170,"{'data': 'meta issue routing fails identify willbeactive paramonly changes numerous issues reported topic going fix need work correctly simplified reproduction twiddle instructions one piece new information fails async transitions line triggers bug existing since least related cc topaxi bgentry', 'date': '2018-02-23T18:25:08Z'}"
"19172",19171,"{'data': 'possible memory leak seeing potential memory leak ember beta running acceptance test would expect instance garbage collected afterwards teared however case simple reproduction see readme steps reproduce see instance left object retainer path downgrade ember app container correctly gced simonihmig aware leaks last run test multiple acceptance tests leak multiple containers krisselden one leaked container even multiple tests think fixed happy reopen mistaken', 'date': '2018-02-23T15:26:40Z'}"
"19173",19172,"{'data': 'operand got using latest beta version seeing error operand got one tests seems maximum value literal numbers decreased significantly might also related fwiw ultimately glimmervm issue still needs release update right yes close intentionally fixed opened issue going log case regression started issues upgraded app embersource emberdata mentioning little could understand one side effect could broken hasmany relationships production stack trace nt seen error yet users rolled back embersource amp emberdata report back see something else upgraded app embersource emberdata running believe glimmer still getting issue using emberfontawesome relies emberasthelpers former relied emberasthelpers hard dependency glimmer forked loosen dependency diff running production along glimmercompiler amp glimmersyntax specified packagejson know ember glimmer precompiles templates issue around buildtimecomponents fix use case keep digging help hint would much appreciated rolled back embersource without touching anything else morning error stopped popping logs', 'date': '2018-02-22T18:47:32Z'}"
"19174",19173,"{'data': 'usage testemjs emberjs two different environments ci dev hello thank awesome project please correct testemjs issue using embercli macos sierra testemjs run tests development mode chromium installed macos yes gitlabci zsh dash git enhancementupgradeemberversion ember test cleaning built project successfully stored ok error message gt launcher chromium found installed tests pass skip fail launcher chromium found installed stack trace error report dash git enhancementupgradeemberversion today need run tests passing flags command kind usage seems tricky correct missing something ps gitlab ci use normally wich resolves generally reserve issue tracker bugs ember seems like qa x type thing better served stack overflow slack going close please cross link post update thread answer find future searchers', 'date': '2018-02-21T13:38:04Z'}"
"19175",19174,"{'data': 'router service transitionto aborted current route calling component router router service get called current route however aborting transition parameter hook abort transition router still transition specified route transition parameter another transition edit transition aborted calling', 'date': '2018-02-21T12:47:44Z'}"
"19176",19175,"{'data': 'attempted access property related service injected route extending authenticatedroutemixin use case nt know error coming route accessing service route service let need information try revert ember seems problems ie cc wycats maybe issue embersimpleauth kindly cc marcoow service yes function actually merely copypaste code also function paste whole error message including details properties involved descriptorget get descriptor case encountered error thirdparty code nt control information help us improve error message telling us happened situation error assertion failed attempted access property since ember usually fine longer need use access computed properties however case object question special kind ember object proxy therefore still necessary use case encountered error thirdparty code nt control information help us improve error message telling us happened situation new embererror assert objectget isdescriptortrap get classget trycatcher invokecallback publish concerning involved properties hard say error thrown access prototypes service aftermodel hook route make app crash code service helps btw thanks kategengler addon import camelize emberstring import keys emberpolyfills import emberobject emberobject import service emberservice export default serviceextend flags emberobjectcreate setup flags var normalizedflags var flag flags flagshasownproperty flag normalizedflags thisnormalizeflag flag flags flag thisset flags emberobjectcreate normalizedflags showall return thisget flags getproperties keys thisget flags enable flag var normalizedflag thisnormalizeflag flag thisget flags set normalizedflag true thisnotifypropertychange normalizedflag enableall keys thisget flags foreach function flag thisenable flag disable flag var normalizedflag thisnormalizeflag flag thisget flags set normalizedflag false thisnotifypropertychange normalizedflag disableall keys thisget flags foreach function flag thisdisable flag unknownproperty key return thisenabled key enabled flag var normalizedflag thisnormalizeflag flag return thisget flags get normalizedflag normalizeflag flag return camelize flag unknownproperty always returns value either true false afaict always trigger proxy assertion accessing properties properties proxy submitted fix thanks lot rwjblue heart', 'date': '2018-02-20T12:38:07Z'}"
"19177",19176,"{'data': 'replace router service transition adds history entry hi think may discovered bug transitions circunstances involving routes query params happening ember code traced cause bug currently broken created repo illustrate issue structure could possibly simplified closely resembles real life scenario route links routes using method routes dynamic part one breaks also query param templates let transition next using turns access page press broken link gets added history thats ok transitioning replacing press next link get second unwanted history entry investigating issue case side finally discovered culprit condition system router transitioning service preventing query params correctly pruned value getting saved library router property cause problems line future transitions query params change list reflects query params change previous state reality checks previous state object property keys new one nt triggers event base causes turn creates new transition somehow hijacks original one finalizes original could set route exactly works nt query params event nt get triggered workaround issue stop using instead use internal private one gets solved nt really know aforementioned condition makes transition different things coming service although sure reason behind discouraging coworkers using service additionally speculation say race condition happening within event transition spawned nt able finalize original one sets urlmethod thanks condition system router part rfc looks like able compare without default values maybe intelligent different way nt know enough router triage wihtout help maybe rwjblue locks help us bit forked repo rwjblue still issue perhaps close create new reproduction think update example reproduction current release ember pixelhandler updated test repo issue still happens thank', 'date': '2018-02-20T08:36:54Z'}"
"19178",19177,"{'data': 'assertion failed attempted access property ember assertion failed attempted access property since ember usually fine longer need use access computed properties however case object question special kind ember object proxy therefore still necessary use case encountered error thirdparty code nt control information help us improve error message telling us happened situation seems caused ember data using object since checks unconditionally causing error seems related cc mixonic fixed issue dserrors unknownproperty returned null instead undefined proxy assertion allows undefined', 'date': '2018-02-19T16:10:43Z'}"
"19179",19178,"{'data': 'computed properties relationships nt update model saves ember also canary ember lt relationship nt recomputed property changes one underlying models reproduced simple new app app consists two one displaying saved models displaying pending models button creates new model saves saving appear pending section completes gets sets false model appear saved section ember gt newlycreated thing never moves pending lt works expected logging like see new task changed expected returns noticing thing ember models example variables renamed protect innocent persistedthings computed things eachisnew function let things thisget things toarray code nt running saving new thing nt even run reloading parent model hasmany another model code run first createrecord called also gets run thing deleted maybe equal check returning wrong value hasmany arrays updated save case issue workaround set relationship calling wanted comment still seeing behavior ember ember data believe closed sitting runspired stefanpenner particular commitrelease may fixed test app see squashed', 'date': '2018-02-19T13:33:17Z'}"
"19180",19179,"{'data': 'uncaught typeerror rsvpcast function seems ember silently updated rsvp version longer includes unfortunately deprecation warning prior seems use function internally though broke tests cc jasonmit thanks original issue already fixed could still use sort deprecation warning thanks reporting seems weird rsvp removed cast released minor version bump even though clearly breaking change cc stefanpenner submitted bring back', 'date': '2018-02-19T07:35:07Z'}"
"19181",19180,"{'data': 'input helper passed type work ember beta working updating apps addons beta noticed strange behavior components wrap helper first one rendering input created reproduction played around appears issue passing argument chokes also tested seem difference awesome thank reproduction forked repo investigating since two changes related input type one ember one glimmer seems bizarre indeed let write findings far quite strange background neither component helper referred macro closer explanation work like lowlevel helper case important understand code input look like anything familiar users ember requires template compiler plugin transforms inputtype internal helpers basically checks given parameters returns name component based checking bug first thing noticed error console rendering working past first breaking input looking deeply changing order types would keep result first input would rendered also input inside component required add three inputs directly would work invalidates theory problem handled moreover add input failing component work happening checking devtools execution input macro saw params different length first execution rest rest missing first param one added compiler plugin summary problem input macro handling type problem params passed input macro fails directly thanks fix', 'date': '2018-02-17T20:52:57Z'}"
"19182",19181,"{'data': 'computed value nt get properly updated input element looks like edge use case valid one nonetheless please correct wrong twiddle reproduce user steps reproduce input character input element value gets coerced expected value world input element reflects input get coerced expected however controller property gets correct value expected behavior input element value reflect bound property value input key factors bug computed value whose setter function returns value twice consecutively regardless function argument input element bound computed property user input triggers setter function possible cause guessing stop condition prevent infinite loop propagating binding events checks whether value changed stop condition also stopping update event dom something like possible fix guessing input element bound property triggers change event since property may computed alter original value compare dom element value vs property value decide update needed dom regardless property value changed real case scenario trying define custom user input user value gets corrected special characters cleaned changed alternative twiddle using ember', 'date': '2018-02-17T02:38:38Z'}"
"19183",19182,"{'data': 'partial application argument order hbs input onchange action something value targetvalue placeholder enter text type text gt see backstory ember adding additional arguments helper invoked pattern behave expect example passed first argument others seem transposed one would expect argument order respected reproduction steps clone following dummy ember app see compare logged output entering text inputs sure typo positional parameters named arguments strings never get passed somewhat surprised nt result build time error imho ah interesting typo updated thing observing replaces first argument seems like expected though bizarre behavior huh thanks explanation wish work like standard helpers realize would need discussion something parsing error invalid usage helpers would nice concrete create separate issue track progress look help seems least explained though agree still bit rough edge framework going close', 'date': '2018-02-15T15:31:24Z'}"
"19184",19183,"{'data': 'transitiontoroute gone api documentation happens api documentation anymore please move thanks moved emberlearnemberapidocs actually problem emberjs documentation transitiontoroute defined controllermixin marked private', 'date': '2018-02-15T15:15:49Z'}"
"19185",19184,"{'data': 'oneway binding ca nt rerendered coexisting twoway binding reproduction twiddle demo shows bug component takes oneway binding value twoway binding value time trying mutate twoway binding value updated rerendered oneway binding value updated logged console rerendered properly however trying mutate oneway binding value nt problem ps like send pr provide test case sure kind tests write would helpful someone show example expected behaviour oneway binding given changing external value internal one overwritten looking local writes shadow external attributes need internal variable like comes still external value would nt overwritten closing serabe understand described internally expected behaviour please look reproduction demo especially example explain theory oneway binding two properties oneway binding changing external value well got updated correctly compare example difference two oneway binding props vs one oneway one twoway expect oneway binding props behave equally actually btw open console see logging play example bound value actually changed however got updated rendered dom issue nt questioning oneway binding works internally reveals inconsistency twoway oneway mixed together nt really happening given change external state component rerendering shadowing works long external state change see twiddle component lifecicle update part logged observing life cycles examples finally understand whats going hood thank much patience clearer explanation makes us feels warm ember community also give us confident use ember', 'date': '2018-02-11T14:21:18Z'}"
"19186",19185,"{'data': 'rfc deprecation emberlogger rfc rfc merged yet recently moved final comment period general support land feel confident work commence preparation tasks x deprecate apis emberjs pr develop publish codemod write deprecation guide x emberjswebsite pr x emberlearndeprecationapp pr x review api docs x review guides pr review top addons x ember data pr x emberresolver pr locally last weekend currently two passing references emberlogger guides could probably go pull request without rfc draft entry deprecation guide written final details depend release timing also coded change emberdebug use emberlogger coded deprecation although think may need go back wrap feature flag reworked tests intercepted emberlogger intercept console instead maybe four router tests never set back exit calling run transition two concerns little existing tests passing due issue router tests need verify whether test leakage browser console identical change get busy elsewhere week hoping deprecation completed feature flag weekend rfc exits fcp sure comprehensive way review api docs besides bulk searches source anyway think done right things code comments properly mark deprecation idea build api docs see final effect leaves codemod review addons need little help far following prs couple logger references merged closed already deprecation code one reference logger merged closed already corresponding deprecation page corresponding deprecation page encountered couple unexpected speedbumps using console edge simple page attachment used easily observe console uses pose problem easy workarounds try edge without developer tools try browsers tryconsolezip uhoh realized walking emberobserver emberresolver list many projects lupestro sure understand wake discussion locks issue emberresolver great job codemod discussion deprecation discussion captured prior discussion rfc pr rfc carries discussion deprecation text describes needs change deal one two remaining oddities console edge codemod automate changing code work involve little judgment changes generally local simple deprecation text tries show rfc references code examined determining impact change code looked seemed straightforward find make needed changes hand', 'date': '2018-02-09T22:42:14Z'}"
"19187",19186,"{'data': 'embersimpleauth demo working hi yesterday spent hours trying install embersimpleauth want see demo works using following versions ember node npm git version eslint current versions qunit mocha yarn etc etc followed instruction beginning output c yarn install yarn install validating packagejson resolving packages fetching packages info fsevents platform incompatible module info fsevents optional dependency failed compatibility check excluding installation linking dependencies warning gt eslintconfigsimplabs unmet peer dependency eslint gt warning gt eslintpluginmocha unmet peer dependency eslint warning gt sinonchai unmet peer dependency sinon building fresh packages success saved lockfile tried ember serve got c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation embergetownerpolyfill required ember later please remove group options used testgenerator option qunit mocha error group options used testgenerator option qunit mocha functioneslintvalidationfiltercreate c classlinttree c projectaddonsreduce c arrayreduce classeachprojectaddoninvoke c classjshintaddontree c classtreefor c projectaddonsreduce c arrayreduce emberaddonaddontreesfor c since tried installing emberdecoratorsbabeltransforms eslint qunit mocha broccoli also attempts install emberdecoratorsbabeltransforms fail regard whether use option tried several times warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation updating everything latest output c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation group options used testgenerator option qunit mocha error group options used testgenerator option qunit mocha functioneslintvalidationfiltercreate c classlinttree c projectaddonsreduce c arrayreduce classeachprojectaddoninvoke c classjshintaddontree c classtreefor c projectaddonsreduce c arrayreduce emberaddonaddontreesfor c nt feel like getting anywhere appreciate advice thank running yarn results c yarn install yarn install validating packagejson resolving packages fetching packages info fsevents platform incompatible module info fsevents optional dependency failed compatibility check excluding installation linking dependencies warning gt eslintconfigsimplabs unmet peer dependency eslint gt warning gt eslintpluginmocha unmet peer dependency eslint warning gt sinonchai unmet peer dependency sinon building fresh packages success saved lockfile done seemed complaining eslint installed decided address eslint warnings installing eslint used one bc good reputation top addins readmemd file says install thus ember install emberclieslint project installing asked wanted overwrite two files embersimpleauth said yes think said program still runs albeit error show bottom post keep reading tried reinstall emberdecoratorsbabeltransforms seemed install ok c ember install emberdecoratorsbabeltransforms deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c yarn installed emberdecoratorsbabeltransforms installed addon package question work correctly show auth app answer couple glitches yes c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation notice still complaining emberdecorators wait c error aftereach defined noundef problem error warnings c error aftereach defined noundef problem error warnings c error aftereach defined noundef problem error warnings build successful serving app served fastboot author note shows auth demo despite errors hurrah follows trying app able login view protected page logout protected page redirected login page expected ok get ms get emberclilivereloadjs ms avg get assetsdummycss ms get assetsdummyjs ms ms get assetsvendorcss ms ms get assetsvendorjs ms ms get faviconico ms ms post token ms get ms get posts ms get ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsdummyjs ms get assetsvendorjs ms post token ms get posts ms get ms get posts ms get posts ms get posts ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsvendorjs ms get assetsdummyjs ms post token ms get posts ms get ms get posts ms get posts ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsdummyjs ms get assetsvendorjs ms ps conclusions test shortly download embersimpleauto demo app run yarn yet install eslint perhaps cause warnings saw occur bc eslint present run yarn run yarn point install asked want overwrite two files auth code two files eslint suggest either compare files andor choose overwrite two files seem specific auth testing', 'date': '2018-02-06T20:18:39Z'}"
"19188",19187,"{'data': 'ember possible test instanceinitializers hey possible test instance initializers using current blueprint errors creating application booting application built app instance automatically boots app fires tested instanceinitializer able prepare test eg registering containers running initializer please provide reproduction absolutely possible maybe error specific test question code js export function initialize appinstance let loggerservice appinstancelookup service logger return loggerserviceget enabled export default initialize test js import application emberapplication import run emberrunloop import initialize dummyinstanceinitializersmyinit import module test qunit import destroyapp helpersdestroyapp import emberobject emberobject module unit instance initializer init beforeeach run gt thisapplication applicationcreate thisappinstance thisapplicationbuildinstance aftereach run thisappinstance destroy destroyapp thisapplication test return true function assert thisappinstanceregister service logger emberobjectextend enabled true assertok initialize thisappinstance error happened booted app tests possible mock service first real issue yes see need use service register service closing thank serabe could try latest ember works perfectly change im still getting error also forgot mention happening addon project think related new rfc needs reproduction get error create new ember app using running remove work need create two applications stopdropandrew worked makes sense thanks version', 'date': '2018-02-05T13:53:46Z'}"
"19189",19188,"{'data': 'dom state nt respect bound property values select following twiddle shows couple ways select element get sync bound properties first example shows value property select element seems overridden render process value bound property nt correctly reflected unless incidentally first option additional examples show selected property option elements used select element initialize correctly unless bound property value actually changes dom gets sync selecting new option may poor taste mention seems work react seen similar issues form elements eg input typeradio', 'date': '2018-02-04T04:08:38Z'}"
"24686",24685,"{'data': 'map arguments switched match map description map correctly calls callback argument ordering element index map calls callback argument ordering index element map switched match map consistency sake well enable concise arrow functions nt work arrow functions important element argument come first current code desired code also hi dmethvin worked son p discussed wayyyyyy much code relies current argument order timmywil could potentially make new method called like transform trans nt better make library better worry backwards compatibility people nt want use newer improved version library keep using old version nt think worth adding new method think value high enough warrant breaking change great thing jquery create plugin implements whatever feature want timmywil says late fix changing order arguments always hesitant add new features users add via plugins hay awesome gmethvin carrying legacy', 'date': '2018-11-14T15:18:53Z'}"
"24687",24686,"{'data': 'website jquery libraries unreachable description link test case reach sites jquerycom codejquerycom fine either problem resolved connection issue beyond control information report', 'date': '2018-11-14T10:21:58Z'}"
"24688",24687,"{'data': 'jqueryparsejson missing deprecated documentation page description jqueryparsejson missing category deprecated also link test case na moved api site repo', 'date': '2018-11-13T14:17:19Z'}"
"24689",24688,"{'data': 'module found ca nt resolve location c usersammardesktopcodilityclientnodemodulesjquerylib description run server gives error working correctly since months suddenly started giving error stated follows failed compile nodemodulesjquerylibnodejqueryjs module found ca nt resolve location c usersammardesktopcodilityclientnodemodulesjquerylib import following way import jquery using latest version jquery directory file package suggests code expects older version nt published jquery team previous owner package case problem lies outside jquery problem thing need check add remove update please help support forum ask help stack overflow similar forum ca nt debug people problems external libraries', 'date': '2018-11-09T08:16:08Z'}"
"24690",24689,"{'data': 'bug description go top link joomla template using bootstrap order bootstrap work correctly link head file cdn version bootstrap three scripts bottom html body links popperminjs bootstrapminjs include script end indexphp html body even go top link simply appear however use nonslimmin original works perfectly jquery templatejs file jquery document ready function var offset var duration jquery window scroll function jquery scrolltop gt offset jquery gotop fadein duration else jquery gotop fadeout duration jquery gotop click function event eventpreventdefault jquery html body animate scrolltop duration return false templatecss foot html body three scripts files required bootstrap link test case looks like using several effects methods included slim build see slim build section blog post', 'date': '2018-11-08T17:32:53Z'}"
"24691",24690,"{'data': 'arm sudo npm run build jquery directory hello seem install jquery arm processor bbb beaglebone black running updated version image debian stretch sudo npm run build jquery dir gets numerous errorswarnings npm mostly warn descriptors outdated needingtobe updated repositories updated installing bbb stretch distro also notation place find issue hand searched prompt told search located dir please send guidance description dir jquery used failed ways one need put newly installed versions deprecated items specific path link test case thanks opening issue repo bug reports feature requests support request needs fleshed support go jquery gitter personally nt much experience debian require make sure node installed correctly', 'date': '2018-11-07T20:52:55Z'}"
"24692",24691,"{'data': 'scrollbehavior smooth breaking simultaneous horizontal vertical scrolling animate description html page horizontal vertical scroll html page css property scrollbehavior smooth html element try scroll page certain position horizontally vertically time help animate like html body animate scrolltop scrollleft duration expectation page scroll horizontally vertically reality page scrolls horizontally try swithch scrolltop scrollleft like html body animate scrollleft scrolltop duration happens page scrolling vertically try call animate one direction time like html body animate scrolltop duration html body animate scrollleft duration happens page scrolls horizontally seems like last direction applied executed css property scrollbehavior removed scrolling animation happening expected page scrolls horizontally vertically use windowscrollto function like windowscrollto css property scrollbehavior smooth page scrolls expected horizontally vertically happens latest version jquery chrome v official build firefox happen ie css property scrollbehavior supported ie link test case jquery setting scrolltop scrollleft properties requested although body element example nt scrollable therefore never keeps nonzero value either looks like issue browsers implementations smooth scrolling', 'date': '2018-11-06T16:06:13Z'}"
"24693",24692,"{'data': 'feature prop disabled true noninput elements description modern web uses font icons parent element well many standard html elements buttons user interact personally prefer use tags buttons instead using tags feels dirty statements one top event handler especially pick element nt come preloaded action repeatedly prevent etc elegant solution numerous reasons see disable button element acting button clicked user allowed use button adding attribute tag acting button either use feels less clean resort toggling class name feels comparably less elegant less intuitive beautiful intuitive solution add support work noninput elements thank time numerous reasons disabling button gives good user feedback updating ui reflect button currently interacted immediately upon button click exiting function disabled else setting disabled processing completes prevent user accidentally triggering event multiple times cuts unintentional unnecessary server load thanks opening issue jquery javascript library best make working dom easy control browser ca nt simply sets native properties elements functionality corresponding property dependent jquery browser implements html standard also think may need look attributes vs properties section gain better understanding methods work purposes agree nt something jquery controls behavior html elements defined web platform standards also good idea craft buttons semantic elements elements designed element specific builtin behavior understood browsers screen readers example tab order focus click activation keyboard enter etc try using keyboard screen reader handcrafted pseudobuttons even better let visionlimited person try ui see kinds issues causes timmywil ah nt realize part javascript behavior hence creating issue repo thanks explanation dmethvin point visionlimited users really good one updated one page working use elements testing seems need element inside element', 'date': '2018-11-05T23:26:22Z'}"
"24694",24693,"{'data': 'extend different behavior empty array extend true b c b c returns b c whereas expect property b overwritten way happened properties c providing first argument performs recursive deep merge documented remove get shallow merge', 'date': '2018-11-04T16:21:58Z'}"
"24695",24694,"{'data': 'getresponseheaders suffers objectprototype collisions known issues constructor proto originally posted', 'date': '2018-11-02T02:15:45Z'}"
"24696",24695,"{'data': 'load multiple remote resources dependencies description hi using jquery load noticed issuebehavior perhaps could improved target url loaded libraryjs contains definition functions scriptjs contains document ready document ready wait libraryjs loaded randomly get error message saying myfunction defined would possible extend load allow document ready scriptjs take considerations resources alternatively tell load fetch process resources target url order found page perhaps deferred way otherwise alternatives scenario thanks lot amp regards thanks opening issue could make small example scripts executed synchronously hi please find attached test case jqueryloadzip put together simple test case noticed resources correctly loaded sync way noticed well following console message deprecation synchronous xmlhttprequest main thread deprecated detrimental effects end user experience console message appear application looked realized following lines code introduced soon set back optionsasync false load started working normally please note issue happens first load cached scripts considering majority ajax calls async possible pass parameter load instruct loading remote resources sync way tried replacing load get ajax passing explicitly async false work optionsasync set true long story short remove optionsasync true wonder still run majority ajax calls async way process remote resources fetched load synch one thanks mill support ok case need keep prefilter sets async true add another prefilter sets async back long executes existing prefilter example untested think working expected close thanks lot going play suggestion regards', 'date': '2018-11-01T18:02:19Z'}"
"24697",24696,"{'data': 'blur removes checked property checked radio element description radio input type named action several options following removes checked property checked item addition removing focus input blur however following work expected input nameaction blur nameaction blur thanks opening issue please provide reduced test case help us assess issue sorry logical error part blur causing another input field trigger function wiped radio button values', 'date': '2018-10-31T22:11:20Z'}"
"24698",24697,"{'data': 'documentation unclear expectationsdata type description seeming contradiction documentation docs setting function indicate function receives three arguments jqxhr jquery xmlhttprequest object string describing type error occurred optional exception object one occurred later docs indicate http error occurs receives textual portion http status found internal server error addition docs indicate type parameter based first sentence sounds like either object string separately appears always empty string http errors occur using aka appears always empty string request info love jquery team weighin limitations current docs migrated api repo', 'date': '2018-10-30T18:34:00Z'}"
"24699",24698,"{'data': 'removal element resulted detached dom written component using jquery library checking possible memory leaks came across following problems detached fragments jquery screenshot elements created using jquery stored fragments jquery even elements removed dom using jquerya remove method detached fragments exists elements cached jquery removed components using jquery remove method appears detached dom since cached jquery way prevent memory leaks sure jquery came across please guide', 'date': '2018-10-30T12:55:38Z'}"
"24700",24699,"{'data': 'default jsdelivr cdn file set package nt default file set set via field taken npm package starting older versions published another party supported', 'date': '2018-10-24T14:39:10Z'}"
"24701",24700,"{'data': 'deprecate jqueryinarray overlooking something fullfilled arrayprototypeindexof therefore deprecated like thanks issue nice api purpose intent clear true replacement array includes browser support great ie support recently mostly deprecated apis native equivalents supported browsers unclear many edge cases us handle like jqueryisnumeric said using purpose widespread maybe ok nt definite opinion reviewed weekly meeting agree exact replacement nt full support supported browsers short rush deprecate', 'date': '2018-10-24T07:19:17Z'}"
"24702",24701,"{'data': 'pause resume css animation jquery description creating code pauses resumes css animation browser tab changed wanted animation stop current browser tab inactive restart current tab active used events achieve worked expected method failed work supposed stop animation detailed discussion issue tested code google chrome firefox quantum jquery version used link test case jsfiddle duplicate', 'date': '2018-10-22T13:41:32Z'}"
"24703",24702,"{'data': 'pause resume css animation tab change description creating code pauses resumes css animation browser tab changed wanted animation stop current browser tab inactive restart current tab active used events achieve worked expected method failed work supposed stop animation detailed discussion issue tested code google chrome firefox quantum jquery version used link test case jsfiddle thanks opening issue review job confusion seems related focus works iframes note changing tabs necessarily trigger blur iframe window example actually works chrome firefox still might consider visibility api rather relying window focus regardless nt see jquery issue', 'date': '2018-10-22T13:36:45Z'}"
"24704",24703,"{'data': 'lt selector nt support big number description lt selector nt support big number like think jquery enters loop size parameter browser cuts execution jquery takes long link test case html hello world p lt numbermaxsafeinteger map function consolelog thistextcontent many elements page need query bigger problems crash selector real use case trying various things real case extracts websites limit number elements returned default use return elements displayed page roughly javascript class scraper constructor size numbermaxsafeinteger thissize size real case module reads configuration scraper extracts data fix problem jquery must create array elements reduce size find strange jquery limited number elements page example js bin jquery always returns single element execution time increases replacing ms ms ms ms thoughts extreme edge case rather using nonstandard selector extension like adding unnecessary parsing evaluation something like much better option stick proposed pull request limit size table uses minimum number html elements trying negative feel amounts iteration trivial feature would underused', 'date': '2018-10-19T07:41:01Z'}"
"24705",24704,"{'data': 'jquery click function nt work mobile websites seems jquery click function nt work mobile websites javascript click function let take website example go chrome mobile version ctrl shift ctrl shift add signup button website id called hi console hi click nt work documentgetelementbyid hi click work please ask help stackoverflowcom jquery gitter', 'date': '2018-10-18T11:39:50Z'}"
"24706",24705,"{'data': 'website introduced cdn ca nt modify could send chinese cdn china cost provided us originally posted dmethvin please continue discussion original issue', 'date': '2018-10-18T09:58:00Z'}"
"24707",24706,"{'data': 'show nt working update generated html yet added page description given html div gt div display none var expect display block tchildren show body append displayed working jquery tested longer works workarounds include attach page showing swap script lines link test case documented upgrade guide', 'date': '2018-10-17T22:00:36Z'}"
"24708",24707,"{'data': 'codejquerycom loading slow china link increase speed link china jquery cdn free service business requires specific performance levels china subscribe cdn provide performance uptime guarantees nt think option cdn generously provided third party nt control operations able switch cdn servers based china', 'date': '2018-10-15T12:59:28Z'}"
"24709",24708,"{'data': 'jquery end support notified jquery end life jquery become end support jquery supports latest version currently plans stop maintaining amp developing jquery still popular library', 'date': '2018-10-15T07:16:59Z'}"
"24710",24709,"{'data': 'use jquery php artisan preset react application trying integrate laravel reactjs using php artisan preset react normal createreactapp application would put jquery cdn publicindexhtml like use inside react component like import react component react import route link reactrouterdom import carousel carousel import tabs tabs import logo resourcesnetdilogopng class headertop extends component constructor props super props thisstate provinces export default headertop work perfectly fine createreactapp however seem case laravel preset react application try use jquery cdn esourcesviewappbladephp netdi laravelreact assetsjsexamplejs import react component react react router import route link reactrouterdom headerbody component import carousel carousel import tabs tabs resources import logo resourcesnetdilogopng class headertop extends component constructor props super props thisstate provinces export default headertop course create another file use reactdom render run npm run dev compiles successfully run php artisan serve render nothing return error window function way fix', 'date': '2018-10-14T09:10:27Z'}"
"24711",24710,"{'data': 'htmlprefilter adds bogus element selfclosing tags valid element using parse element inside attribute element adds spurious returns note extra inside attribute browsed issues saw related one marked invalid void elements must closing tags html might case docs say htmlprefilter greedily ensure tags xhtmlcompliant understand definitely valid xhtml behavior ironically makes invalid documentation thing bug probably regex missing something else issue workaround documented jqueryhtmlprefilter xhtml built upon xml xml allow attribute values see validator valid though employ documented workaround need process input greediness default processing nt exempt attribute values interferes data', 'date': '2018-10-11T09:20:40Z'}"
"24712",24711,"{'data': 'offset return wrong position trying scroll safari description using loop try scroll noscroll page values changing scrolling seam safari scroll move document position even scroll using way fix problem temporaly thanks opening issue please provide reduced test case help us assess issues', 'date': '2018-10-10T16:14:01Z'}"
"24713",24712,"{'data': 'outerheight returning nanpx svg elements description version outerheight returning nanpx elements elements working expected link test case code provided labels click called click clicking click svg output nanpx fixed master', 'date': '2018-10-08T17:29:23Z'}"
"24714",24713,"{'data': 'crash css hello using jquery crashes add desktop please look programming help stack overflow', 'date': '2018-10-08T11:47:32Z'}"
"24715",24714,"{'data': 'holdready nt affect document ready calling holdready true nt effect ready event firing anyway missing something bug using jquery jsfiddle demonstrate issue holds ready event nt happened already fiddle code runs ready event already passed thank dave right nt notice jsfiddle works try standalone html works expected', 'date': '2018-10-03T08:57:02Z'}"
"24716",24715,"{'data': 'jquerycss empty value disables transition description setting specific properties empty value jquerycss setting new style disables animation css transition see following examples jquery div animates jquery div nt animate looks like breaking change introduced believe unexpected behavior animates use jquery link test case thanks report caused cc result setter reading style requires browser recompute styles nt done browser would simply ignore first calls reset properties since set different values shortly note problem already exists jquery although limited way check always done usually amp similar apis see example jquery issue larger impact affects bare setter though think may hide check check got another usage see mentioned commit could first check currently named way commit query even issue imo performance reasons stands calling setter repeatedly cause layout thrashing hmm queried needed though either support test fails need adjust etc layout thrashing verified commit causing issue though investigating ok issue comparison layout thrashing end seems pr setting milestone', 'date': '2018-10-02T10:05:37Z'}"
"24717",24716,"{'data': 'asdfasdf description link test case', 'date': '2018-10-01T07:30:43Z'}"
"24718",24717,"{'data': 'jquery ready function work correctly good afternoon moved jquery jquery following code page function onjqueryload function consolelog documentreadystate windowapp new app logsurl scripts console see following error interactive jquerydeferred exception app defined referenceerror app defined htmldocument mightthrow process undefined uncaught referenceerror app defined htmldocument index mightthrow process turns contents function called appjs script loaded status documentreadystate interactive use defer importing jquery console status complete problems arise description status documentreadystate interactive document finished loading document parsed subresources images stylesheets frames still loading failed find detailed information whether status interactive indicates scripts loaded checked latest versions chrome firefox microsoft edge problem earlier version jquery errors thoughts using without cash error appears time time see console issue tracked', 'date': '2018-09-26T14:40:26Z'}"
"24719",24718,"{'data': 'wordpress css recently changes wordpress website css changed suddenly hand main color theme header menus banner position fonts size fonts type could please explain happens note body access website happen support forum', 'date': '2018-09-26T00:36:18Z'}"
"24720",24719,"{'data': 'fadetoggle siblings selector returns entire script dom description using fadetoggle siblings selector returns text entire function dom issue arose class teaching jquery reverted older version problem goes away replicated issue jsfiddle test case click red boxes see problem action spurious javascript appended dom link test case able recreate similar problem using toggle instead fadetoggle link test case yes seems toggle functions slidetoggle looked meeting noticed indeed working expected appearance script text confusing fact sibling script element fiddle next divs script elements visible default obviously animated like elements use cases demos documentation something want disable particular case fixed adding selector siblings', 'date': '2018-09-25T09:22:47Z'}"
"24721",24720,"{'data': 'fn working hi use fnxxxx adding plugin fix proper place ask programming help', 'date': '2018-09-20T01:57:15Z'}"
"24722",24721,"{'data': 'error line dreaweaver shows error line line version error result applying jquery code window load function var maxheight list height fitcol function maxheight maxheight gt height maxheight height fitcol function css paddingbottom maxheight height px html lt div lt ul class list lt li class lt fitcol xxxxxxxx lt li class rt fitcol xxxxxxx lt ul lt div height control li work work perfectly jqueryfnready function fn readylist fn catch function error jqueryreadyexception error return thanks opening issue please provide working test case help us assess issue syntax error dreamweaver wrong using catch method unquoted perfectly fine supported browsers support syntax perhaps using older version said eslint config currently specifies due ie wonder nt require us quote method hi timmy demo change jquery versions check background color second li tested toshiba windows firefox correct seems nt work code nt run overlooked line reading height lines problems event shortcut deprecated removed jquery method used completely different purposes one better remove ambiguity kept purpose loading html content ajax inserting dom documented able use instead fiddle seems work fine making change background color second li looks using jquery edge issues like better fleshed stackoverflowcom jquery gitter reporting', 'date': '2018-09-18T09:57:57Z'}"
"24723",24722,"{'data': 'select parent contains child href tag certain url hello need help select parent red rectangle td child red marked certain url great stackoverflow question bug report', 'date': '2018-09-18T01:08:03Z'}"
"24724",24723,"{'data': 'ajax nt allow file names starting assuming two files called code works code nt work happens example chrome network panel shows bytes received status firefox ajax request nt displayed network panel jquery calls callback instead callback reason second example uses file name beginning case insensitive also nt work directory path nt matter also nt work anything irrelevant also nt work happen ajax request file name bug extremely annoying code nt working although nothing wrong library forbidding certain file names one last things one would expect jquery forbid names passed ajax sure misconfigured something server side file broken also hard us anything without working test case therefore going close issue provide working test case reopen gt jquery forbid names passed ajax sure misconfigured something server side file broken tested two different servers file broken renaming file something else magically solves issue also hard us anything without working test case therefore going close issue provide working test case reopen nt know make test case ajax request file server prevent coors restrictions nt think bug stupid configure server wo nt bother report bug thanks appreciation efforts gt nt know make test case ajax request file server prevent coors restrictions something easy jsfiddle etc even zip file files packed run via static file server would enough nt think bug stupid configure server would never claim thing volunteers working jquery mostly free time time debug issues limited therefore need test cases quickly evaluate might issue side also happened misconfigure web server times think made anyone else situation stupid thanks clarification tested two apache servers jsfiddle jsbin even requested file missing bug observed developer tools testcasezip works least description checked nt load indeed jquery though ad blocker ublock origin also see blocked status column confirm experience well aloso gt confirm experience well aloso yes reason ublock jquery cool glad know going', 'date': '2018-09-13T20:06:46Z'}"
"24725",24724,"{'data': 'much slower pipe description make use wrapped deferreds lot replacing pipe causing lot slowdowns application using wrapped deferreds done takes almost chrome browser pipe takes link test case small fiddle showing issue think expected since pipe sync async need use hundreds promises per second probably nt right tool job exemple taken extreme better illustrate issue made new fiddle iterations slowdown still clearly visible case drawing canvas within callback causing lags async method going slower try native promise may faster stay pipe works use jquery deferreds worry browser support moment keep using pipe workaround changing deprecated since deprecation notice jquery deferredpipe method deprecated deferredthen method replaces used instead eventually get removed hit issue dave pointed async callback intentionally delayed next event loop frame browser control happens think usually around rest code seems fast profiling fiddle prefer code run synchronously always using promises start resolved probably nt need promises', 'date': '2018-09-13T13:03:40Z'}"
"24726",24725,"{'data': 'val val length inconsistencies', 'date': '2018-09-04T18:34:02Z'}"
"24727",24726,"{'data': 'prevent mobile keypad datepicker icon triggered hello folks got issue think like bug click datepicker icon mobile keyboard date popup appearing time expectation click icon datapicker appear mobile keyboard disabled thanks opening issue however better suited jquery datepicker plugin repo stackoverflowcom', 'date': '2018-09-03T23:21:08Z'}"
"24728",24727,"{'data': 'jquery function filter attribute name contains square bracket working description select elements name attribute use filter selector selector contains square bracket sometimes filter work expected test case first consolelog returns expected second consolelog returns expected link test case seems valid however easy workaround wrap value quotes know seen reports lazy look closed issues css spec says attribute values must identifiers strings identifiers nt quoted strings identifiers escaped characters case escaping work actually fixed sizzle master need update sizzle jquery', 'date': '2018-09-03T14:31:50Z'}"
"24729",24728,"{'data': 'issue reported version nt fix version issue declared surl could used key capture value lastmodified header however version still use way capture value lastmodified header therefore caused ifmodified caching functionality nt work set cache false please help check revert please tell work proper way thanks effort read post anyway reference link issue provide test case trying download javascript resource ifmodified caching mode using following code block however nt work chrome chrome never send ifnonemodifiedifmodifiedsince header server server always send back ok status jquerycachedscript function url options options extend options datatype script cache false ifmodified true async false url url return jqueryajax options cachedscript url done function script textstatus consolelog textstatus hi guys update issue could link commit changed behavior version afaict test passing code using surl url without cache buster also created fiddle requested css file twice headers present request fiddle sends etags note jquery saves lastmodified etag noncached url closing worksforme adequate test case proves issue', 'date': '2018-09-03T10:00:48Z'}"
"24730",24729,"{'data': 'change jquery language hi developed site using implemented localization logic using documentation using encountered little problem localization particular change default language italian english still get validation message provided italian course bad user changed language english possible tell use english localization language change someway nt found anything related internet also opened question still good answers jquery nt provide localization features also nt display messages user issues must lie different code', 'date': '2018-09-02T10:18:38Z'}"
"24731",24730,"{'data': 'restart reset rewind css animation jquery description problem restarting css animation jquery work element removeclass animationfadein element addclass animationfadein needs inserted element get offsetwidth result works element removeclass animationfadein element get offsetwidth element addclass animationfadein would cleaner restartanimationfunction link test case related jquery plain javascript behave way browsers batch style updates effect classattribute changes performance reasons want force browser recompute styles middle changes need query something require browser recalculate styles case might better define complex animation please look help stack overflow though thanks', 'date': '2018-08-31T11:22:16Z'}"
"24732",24731,"{'data': 'sourcemappingurl since description minified files nt contain sourcemappingurl comment looked looked distjqueryminjs file nothing found file old version include sourcemappingurl thing newer versions sourcemappingurl missing sourcemap actually exists address users want sourcemap supposed edit distributed minified file missing something link test case first couple lines first couple lines removed comment purpose see many problems including comment one different cdns use different file names comment would different different cdns kills security features like subresource integrity still attach map manually via devtools least chrome supports thanks nt know chrome good day whoa reminded never published note incorrect map file', 'date': '2018-08-30T18:05:49Z'}"
"24733",24732,"{'data': 'html hidden attribute elements made visible show toggle description hidden element made visible still attribute apart semantics wrong rule stylesheet work uncomment rule codepen thus remove attributes elements link test case thanks report amp one complex jquery cssrelated features lot scenarios handle especially connection elements visible hidden due default values inline styles conditions like attribute changes jquery tried make methods way simpler jquery basically relying inline styles alas nt work people expected called element hidden via stylesheets actually show element still nt think want complicate implementation modifying element attributes working elements hidden priority also scope unfortunately closing issue feel free elaborate thread hm see calling inside switching hidden shown status would complicate implementation saying put back element called setting would sufficient saying removed element shown definition hidden meant address css property always way try incorporate attribute sometimes making things complex causing inconsistent edge cases example start clearing showing would nt next logical step pay attention deciding whether something hidden nt work needs easy create plugin lines implement behavior way get want existing users code broken', 'date': '2018-08-29T11:39:58Z'}"
"24734",24733,"{'data': 'breaks string description calling jquery like actually happens breaks error expect happen instead think either one two things loop string character character output sensible error something like incorrect parameter type string jqueryeach browsers affected firefox chrome throw error edge throws different error means safari throws another different error means suspect problem affects every browser link test case usecase eaching object expected sit data attribute element somehow undue circumstances let say data attibute longer rendered server valid json therefor passed code string throwing error describe novice developers might ignore error long nt look like error code excuse believe clear error messages expectable behaviour purpose helps everyone one jquery design decisions validate input would otherwise get way larger amp slower want parameter validation consider using typescript contains jquery type definitions package users nt pay cost type information disappears compile time raised repeatedly past find duplicates request nt think good design decision error obscure fix nt want add validation better error messages loop input expected say loop character like loop would problem lots apis may behave unexpectedly blow provide incorrect input making fail helpful error messages would increase library size significantly especially jquery signatures really dynamic accept various parameter tuples said typescript flow friends want catch type errors earlier maybe community linters would catch sure whatever happens nt want send code endusers contained developers machines nt think able work anything like foreseeable future keep nonminified version development version anyway still nt responded original alternate loop character gt keep nonminified version development version anyway lots people import jquery npm bundle amp minify fan making production version different development one reason still nt responded original alternate loop character think likely mask errors someone mistakenly provide string instead array one string also iterating string letters common use case nt found useful much thany please read docs description generic iterator function used seamlessly iterate objects arrays arrays arraylike objects length property function arguments object iterated numeric index objects iterated via named properties primitives strings objects gt also iterating string letters common use case nt found useful much primitives strings objects fact matter strings iterable simple loop prove talking javascript loops jquery method generally iterate string using method overkill think talking vanilla forloops demonstrate strings iterable like arrays top docs clearly states arrays arraylike objects length property function arguments object iterated numeric index includes strings strings arraylike length property characters accessed index nt going iterate strings say docs arrays arraylike objects length property function arguments object except strings iterated numeric index ps previous comment meant say iterate strings whereas wo nt way meant oops understand talking altering jquery handles different types might offer gap current functionality proposed functionality nt large enough warrant overhead proposed functionality could easily afforded overhead negligible developer significant library due error catching type checking etc previously noted see cost changing testing supporting documenting something something makes sense might agreeable nt think makes sense iterate string cases someone tries jquery made mistake sure make something define always split chars get iterable array really want think starting repeat point nt make iterate strings per se make break horrificlooking way string passed clarifying documentation types accepted exactly would perfectly reasonable compromise thany documentation define types accepted see states objects arraylikeobjects accepted string arraylike object javascript bug feature thany defined either true javascript array javascript object contains nonnegative integer h property index properties link type definition definition string javascript object contains nonnegative integer property index properties documentation extended say something like well except strings addition dmethvin nt matter bug feature dark energy pure magic part language string object primitive depends ask definitely object might call class static instance properties amp functions string literal properties amp functions definitely stuff like typically possible primitive values however respond one could reason behaves weirdly nt inherit nt make less object least mind yes depends look people might say everything object javascript full oo language people might say javascript primitive values programming languages always worked reason works autoboxing method really invoked primitive autoboxed equivalent object instance nt change fact object nt heard primitives described objects javascript literature sure take definition incorrect let amend say strings considered arraylike objects thany welcome file pr clarify dmethvin need similar note amp btw says everything javascript object interesting twist discussion gt nt heard primitives described objects javascript literature sure take definition incorrect useful describe objects even instantiating true objects thing eg widely discouraged string literal already object far observe javascript magic going makes string number boolean literals behave way iyam nt take away fact everything object strings behave like objects properties functions iterable extensible also syntax sugar compiler magic also immutable different true classical oo languages like java c fact javascript weird string wrapper class safely ignored care useless confusing also provides ambiguous input discussion', 'date': '2018-08-29T09:43:00Z'}"
"24735",24734,"{'data': 'throwing gzip error west us central us south central us locations seeing lot gzip errors west us central us south central us locations error message systemioinvaliddataexception magic number gzip header correct make sure passing gzip stream systemiocompressiondeflatestreamendread iasyncresult asyncresult microsoftvisualstudiotesttoolswebstressdatacapturestreamendread iasyncresult asyncresult microsoftvisualstudiotesttoolswebstresswebtesttransactionreadresponse iasyncresult result looks like cdn issue jquery version locations east us east us locations nt throw error message serves right content back please fixrefresh cdn issue jquery library thanks using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error hi dave error azure availability ping test web browser seems loading jquery without issues atleast computer east us looks like compressed version expected returned back cdn whereas uncompressed file returned issue seem started est nt exact bits got microsoft support cdn serving returning incorrect data precisely error indicates magic number gzip header correct make sure passing gzip stream first time seen odd errors cdns unfortunately issue request gzip file successfully returns response header states content gzipped actually look hex return however file compressed file compressed first two bytes return value supposed contain magic number gzip returned instead cdn uncompressed instead report error testing get file back header says gzip detect report error web browsers forgiving regard often ignore error occurs retry read text field therefore failed test affect web browser clients hope helps fri aug pm dave methvin notifications githubcom wrote using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error receiving authored thread reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency exactly issue chance solving issue yes solve jquery update server return correct data gzip iisue codejquerycom cdn minutes ago awaiting moderation underlying issue cdn returning incorrect response header source server cdn queries quite easy see tool like fiddler query library pass gzip header upper case perfectly legal per rfc see response indicates zipped content compressed underlying problem example get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en returns ok date tue aug gmt connection keepalive acceptranges bytes contentencoding gzip contentlength contenttype applicationjavascript lastmodified fri oct gmt server nginx etag w cachecontrol accesscontrolalloworigin vary acceptencoding xhw noticed content returned plain text compressed gzip contentencoding specifies causes error mentioned original question return zipped promised source server fairly recent changeproblem past return data compressed fix ensure source cdn jquery server returning compressed data says cdn adding header content compressed gzip query library pass gzip header upper case jsandersrocks could provide source claim header values case insensitive something work forwarding issue cdn provider vchandrasn confirm test described also sends value uppercase know talking two different issues hi michal could see ping test send acceptencoding header sends contentencoding header value gzip thanks chandra wed aug michał gołębiowskiowczarek lt notifications githubcom wrote vchandrasn confirm test described also sends acceptencoding value gzip uppercase know talking two different issues receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency vchandrasn server send together response asking sending request server specifying right sent response header information indeed sending acceptencoding header gzip deflate br value wed aug michał gołębiowskiowczarek lt notifications githubcom wrote vchandrasn contentencoding server send together response asking youre sending request server specifying acceptencoding contentencoding receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency mgol absolutely open postman fiddler composer fiddler example send request following headers get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en inspect return see even though contentencoding indicates gzip reality returned plain text compressed ok compress return value however server must set contentencoding gzip header feel free email jsanders microsoft dot com need ps recent issue things worked fine also change request lower case gzip get correct value mgol also working jsandersrocks looking section last paragraph states explicitly edit also found section referenced first paragraph section acceptencoding acceptencoding acceptencoding header field used user agents indicate response contentcodings section acceptable response identity token used synonym encoding order communicate encoding preferred content codings contentcoding values caseinsensitive ought registered within http content coding registry defined section used acceptencoding section contentencoding section header fields debugthings thank follow request cdn provider issue confirmed content coding values contents caseinsensitive per rfc codejquerycom sends response encoding response variants lowercase lack encoding also including transcripts comments added sh curl sv head c xxd trying connected codejquerycom port get host codejquerycom useragent accept lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentlength unencoded size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt cachecontrol public lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery unencoded response failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength compressed size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data response appears gzipped cf failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip unusual request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength size big unencoded response lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery nongzipped gt failed writing body closing connection moved issue cdn repo addressed', 'date': '2018-08-24T15:00:17Z'}"
"24736",24735,"{'data': 'use visualviewport value window height description recent chrome available get window size windowvisualviewport web apis mdn value follow address bar shrinking mobile browsers nt work well consider use possible ditto right supported chromeish browsers behavior would different across platforms one problem see fires resize event assume case addition using viewport user would need us use well order charade effective thanks suggestion keep mind refrain using propagates browsers', 'date': '2018-08-23T04:27:42Z'}"
"24737",24736,"{'data': 'running results equivalent different jqueryminjs file description expect happen hopping run repo without making change get exact distjqueryminjs actually happens getting equivalent distjqueryminjs different variable names different line separators cases extra parenthesis example checkedin min file produced min file notice new produced file parenthesis one less comma browsers affected none command give exact minified version would like make changes use official tools minify file expected get mostly output would make private code reviews easier approve thank opening issue use uglify minify jquery way uglify mangles variable names make file short possible top head sure could get completely idempotent minification process point right direction telling look uglify documentation disable certain optimizations thanks quick response notice run multiple times row output always even run different computers pointing branch commit output files identical expecting point tag get output checkedin point available download jquery seems differences output file checkedin file improvement minification process like using less variables example pasted improvements coming dist files produces different npm packages improvements disabled command line option thank files may match dependencies subdependencies used build minified files changed since release still within version range specified recent versions generate file retrieves exact versions used build increases odds get result however jquery old file committed time release provide got thanks clarification dmethvin latest jquery versions nt committed either various issues around crossplatform mismatches modified leaving repo dirty state etc perhaps would nt bad idea add tags way people would able recreate build may matter peopleorgs wanting verify nothing bad sneaked compiled file oh yeah forgotten whole mess seem like would handy tagged versions along note distribution repo explaining upsidesdownsides still ca nt guarantee builds idempotent even even packagelock committed uglify timmywil true understand randomness uglify build tag currently use different version due lack lockfile fair enough would easy add lock file dist release', 'date': '2018-08-21T20:53:10Z'}"
"24738",24737,"{'data': 'jqueryajax method removal documented final release note description jquery release removed documented final release note place find mentioned beta release note removed specialcase deferred methods jqueryajax please add change final release note timmywil blog post highlights major changes constitutes major change matter opinion important part changes like removal methods deferred returned clearly documented jquery documentation change highlighted yellow think enough', 'date': '2018-08-17T23:30:22Z'}"
"24739",24738,"{'data': 'unable query form input element name id description unable query form input element name id gt returns input element gt returns form expected link test case jsfiddle used jquery v tested chrome v windows also tested chrome version official build macos high sierra chrome version official build windows issue thanks opening issue however due native browser behavior something fix recommend avoiding input names may conflict selectors input names become properties form element replacing native property generally bad practice hi thanks recommendation please note name property value id form serialized key send backend replacing native property tale old time sucom jquery see page see also thanks got', 'date': '2018-08-13T14:46:09Z'}"
"24740",24739,"{'data': 'ios fails dimension svg tests seems iossafari version ignores attribute used unlike width failing tests could easily updated put sizing attribute maybe also real bug worth fixing seems occur safari iphone see decided fix test since occurs one old ios version purpose test', 'date': '2018-08-12T23:51:20Z'}"
"24741",24740,"{'data': 'hover nt work multiple elements example second javascript line fails html javascript consolelog div hover line works fine consolelog div span hover line throws exception jsfiddle documentation says returns true least one elements matches selector means work multiple elements example shows nt selector officially supported jquery work qsa path taken first example check team see aware bugs selector currently supported browsers might able add support tell testing hover tricky discussed meeting agreed implementation selector pretty said plan rewrite sizzle way relies much heavily would provide support close covered sizzle roadmap would nt support sizzle selectors like would nt work end story however selector entirely supported trivial make work multiple elements actually currently using customized version jquery solves problem completely bypass sizzle selector works selectors like hover div would nt work end story actually rewrite would', 'date': '2018-08-12T19:47:46Z'}"
"24742",24741,"{'data': 'insert body element append method description append method inserts specified content last child element jquery collection insert first child use prepend add dom elements childs either side sub dom p insert body element method showcasegif pic see click button three times inserted inside body element sure link test case thanks opening issue however actually references particular elements may may get cloned depending way element gets appended example valid usage fact shows byproduct implementation words nt try append element multiple places new element must created appendprepend accomplish want timmywil thank reply look know references particular elements remove methods one element inserted method yet though pressed button many times multiple one docs append say important one target element however cloned copies inserted element created target except last one code moving span around body never creates clone', 'date': '2018-08-11T03:44:25Z'}"
"24743",24742,"{'data': 'getscript report parse failures via catch description produces uncaught exception chrome probably reported rejected promise link test case thanks opening issue however works', 'date': '2018-08-06T14:49:39Z'}"
"24744",24743,"{'data': 'make ajax understand acceptable data send file formdata jquery brought lot stackoverflow think things better trying understand kind data sending without propose possible js jqueryajax url url method post data formdata typed arrays blob file without need processdata false contenttype false also jquerypost url formdata typed arrays blob file usually propose using fetch api instead jquery ajax something nt make easier developers quite opposite makes harder confusing things nt work thank issue however jquery automatically processes data query strings sent get requests likely still common use case besides changing defaults options would break lot code sorry fail see something like could break nt even work first place nt mean change default settings processdata amp contenttype false meant check whatever data correct thing default would changed nt want set since default however rather removing contenttype header completely could set appropriate default behavior try convert data string like long time could start adding exceptions probably would nt stop formdata breaking existing code comes plugins custom methods handle correct options types requests would simpler added magic needed ajax prettier eg besides seems going use may well use gt could set contenttype appropriate multipartformdata nt set request header since boundary added something xhr fetch automatically setting content would break backend code know read boundary think set request content type data formdata let xhr handle default behavior try convert data string like long time well world changing think laking behind grate try convert everything string everything casted string becomes along blobfiledataview typed arrays could start adding exceptions think please nt add something like good enough ppl could stop write long version go back simpler sort version holding back please nt add something else blob file typedarrays also cuz would much handle put mind besides seems going use formdata may well use fetch talking nt use jquery longer get people want help fetch api always option since even fetch api microsoft still going support something follows rule even still today breaking existing code comes still nt see breaking changes would added functionality formdata instance avoid setting contenttype nt try process string simple would ever good default thing trying cast formdata blob typed arrays string never default thing type data might missing something nt used jquery couple years might give code example next major release see similar question like pop time send formdata objects ajaxrequests jquery sending multipartformdata jqueryajax use formdata ajax file upload nt suggesting core method suggested said would plugin function user code answers questions indicate easily addressed without additions jquery core nevertheless since feel strongly feel free submit pr happy review otherwise likely stay wontfix probably ajaxprefilter rick suggested old ticket go ahead answer still nt see breaking changes would added functionality would added functionality ca nt always predict change like affect millions lines code wild would actually result breakages nt know seen behavior changes affected users ways never expected extra careful definitely change behavior synonymous breaking change library lot users said sometimes deem necessary introduce change major version nt seem critical enough warrant change best way persuade core team code nt suggesting core method suggested sendformdata said would plugin function user code ah misstake answers questions indicate easily addressed without additions jquery core imo like ask quest nt make easy played around prefilter easy cast error first thing happens guess need make core changes let slide js ajaxprefilter function args write potential fix never logs anything consolelog args ajax url method post data new formdata right prefilters seem applied data converted following blocks could perhaps swapped ajaxjs line ca nt think reason would problem wonder jaubourg dmethvin mgol markelog might js convert data already string sdata amp amp sprocessdata amp amp typeof sdata string sdata jqueryparam sdata straditional jqueryparam thanks discussed meeting open exploring first step swap blocks mentioned see tests break', 'date': '2018-08-06T12:05:52Z'}"
"24745",24744,"{'data': 'position top calculated incorrectly since upgrading lot issues top values many places web app property returns top value parent returned least places top value top page parent element testing position attributes anything special ca nt seem understand exact use case order create example switching definitely returning different values one place issue cross browser ok able reproduce div testing inside table top value returned remove table returned top page switch jquery returned top page cases may cases produce issue tables looks like issue still open agreed addressed', 'date': '2018-08-05T13:41:57Z'}"
"24746",24745,"{'data': 'offset index returns error description selecting eq variable inside return error try manipulate values link test case except happen array want select first grid class fourth inner class inside grid class hence eq starts subtract values array one nt selects second grid class fifth inner class inside second grid class like array nt actually happens subtracting array values one returns error line nt everything fine selects wrong one line please ask questions forum stackoverflow agree bug make issue never asked question asked coding den near like forum place report bugs jquery library look like bug library visit forum help understand happening okay', 'date': '2018-08-04T15:20:41Z'}"
"24747",24746,"{'data': 'added nonpassive event hi deparated warning chrome found page instruction solution problem line jquery version change another problem set preventdefault line need test handler requires use passive listeners appears slickjs jquery issue background passive listeners see please add comments', 'date': '2018-08-03T19:50:30Z'}"
"24748",24747,"{'data': 'height give negative number problem point get value reported guaranteed accurate element parent hidden get accurate value ensure element visible using oh ha missed display none says gt guaranteed accurate imho difference reported height pixel case completely physical impossible', 'date': '2018-08-03T10:23:26Z'}"
"24749",24748,"{'data': 'extend returns incorrect result string parameters function call bug extend name john abc returns following b c name john return name john string parameter incorrect input params need objects first one also yes string parameter incorrect instead throwing error returning first parameter unpredictable result example case extend name john true method return first argument object name john think fixed jquery nt validate input public api get much bigger amp slower started care validation consider using typescript type definitions jquery throw error try use incorrectly', 'date': '2018-08-02T13:52:53Z'}"
"24750",24749,"{'data': 'pseudoclass selected selects much edge using edge returns select elements firefox correctly returns selected ones disregard notice may repost provide example', 'date': '2018-08-01T17:57:54Z'}"
"24751",24750,"{'data': 'verbose reporting comparing two nonequal objects prototype chain seems unnecessary report properties prototype chain know priori difference two objects wo nt found prototype object behavior discourages test driven development several failing tests quickly result insurmountable amounts lines logged generating html slows browser issue two legs section log prototypal properties know difference objects ca nt reside among prototypal properties b qunit log prototypal properties logging object example test gives output bare bone test prototype comparison ms expected add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z result add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z diff add function add b code addscalar function addscalar code addscaledvector function addscaledvector b code addvectors function addvectors b code angleto function angleto code applyaxisangle function applyaxisangle b code applyeuler function applyeuler code function code function code applyprojection function applyprojection code applyquaternion function applyquaternion code ceil function ceil code changebasis function changebasis b c code clamp function clamp b code clamplength function clamplength b code clampscalar function clampscalar b code clone function clone code copy function copy code cross function cross b code crossvectors function crossvectors b code distanceto function distanceto code distancetomanhattan function distancetomanhattan code distancetosquared function distancetosquared code divide function divide code dividescalar function dividescalar code dot function dot code equals function equals code floor function floor code fromarray function fromarray b code fromattribute function fromattribute b c code frombufferattribute function frombufferattribute b c code getcolumnfrommatrix function getcolumnfrommatrix b code getcomponent function getcomponent code getpositionfrommatrix function getpositionfrommatrix code getscalefrommatrix function getscalefrommatrix code true length function length code lengthmanhattan function lengthmanhattan code lengthsq function lengthsq code lerp function lerp b code lerpvectors function lerpvectors b c code manhattandistanceto function manhattandistanceto code manhattanlength function manhattanlength code max function max code min function min code multiply function multiply b code multiplyscalar function multiplyscalar code multiplyvectors function multiplyvectors b code negate function negate code normalize function normalize code project function project code projectonplane function projectonplane code projectonvector function projectonvector code reflect function reflect code rejectonvector function rejectonvector code round function round code roundtozero function roundtozero code set function set b c code setcomponent function setcomponent b code seteulerfromquaternion function seteulerfromquaternion code seteulerfromrotationmatrix function seteulerfromrotationmatrix code setfromcylindrical function setfromcylindrical code setfrommatrixcolumn function setfrommatrixcolumn b code setfrommatrixposition function setfrommatrixposition code setfrommatrixscale function setfrommatrixscale code setfromspherical function setfromspherical code setlength function setlength code setscalar function setscalar code setx function setx code sety function sety code setz function setz code sub function sub b code subscalar function subscalar code subvectors function subvectors b code toarray function toarray b code transformdirection function transformdirection code unproject function unproject code x z look like jquery bug report mean qunit totally meant qunit', 'date': '2018-08-01T06:58:48Z'}"
"24752",24751,"{'data': 'extraparameters swallowed trigger click checkboxes description impossible pass extraparameters checkbox click handlers duplicate source error time look full history added seem right want make sure checked state set consistently explicitly link test case expect happen hello world displayed using extraparameters actually happens extraparameters discarded thanks report time nt work radios well required us revert fix pr ideal otherwise breaking change old pr fixes quite large holding accepting since plan big event refactor jquery likely make use native event system need see feasible passing data new model nt add revert shortly thereafter right description situation dmethvin leave issue open figure story jquery getting rereported lot compared issues people really running frequently document nt work even deprecate remove eventually suspect people using discovered code snippet elsewhere internet uses minj wherehow learn feature would able use something simple like closure pass data one features think prevent us leaning heavily native event plumbing get second argument shim native handler jquery one dmethvin docs course would think people always turn first looking information wink one may want use click listener completely different js file closure always valid solution', 'date': '2018-07-30T04:33:25Z'}"
"24753",24752,"{'data': 'changes handle anonymous functions simple eample code looks right document ready function p click function hide mostly single function handler code jquery java look alike functions would awesome documentready p click thishide sure easily compiled functions ready changed ready function compiling also second option little less human readable ready document click p hide let know good idea thanks issue however repo support questions find help stackoverflowcom gitter', 'date': '2018-07-26T17:54:47Z'}"
"24754",24753,"{'data': 'extraparameters swallowed trigger click checkboxes description duplicate source error eventjs sorry barebones report description improved shortly link test case added thanks opening issue however rather leave issues open action items reopen valid reduced test case', 'date': '2018-07-26T12:06:17Z'}"
"24755",24754,"{'data': 'css function called added values nothing description right way call css wrong way call css better thing first output warning currently nothing link test case thanks report lot possible csslike syntaxes could want like ca nt support semicolon part value allowing end might confusing nt think want make syntax ambiguous already mgol thanks answer warning console appreciated saving user time maybe thanks issue however warning like would warranted happened lot maybe even would require parsing value could slow things significantly semicolon obviously part value think best document honestly border examples sufficient', 'date': '2018-07-25T08:13:26Z'}"
"24756",24755,"{'data': 'actual alternative pipe obviously listed official replacement however described forces execution callback onto new context even case promisedeferred already resolved unlike following case suitable replacement reason js var promise someasyncoperation function results return processresults results promisestate resolved overlayfadein return promise utilizes filter results anywhere call chain animations play unintentionally far tell alternative current library combine immediate callback behavior filtering behavior except deprecated method missing something think point deprecating encourage people use promisea alternatives point nt seem logical ever actually drop since still support old syncnoncatching methods like maybe remembers discussions old tickets dmethvin right deprecated made promisesa compliant however left deprecated want encourage usage suitable replacement cases cases easy replacement removing time soon words choice undeprecate leave deprecated continue encouraging usage discussed meeting chose latter however assure deprecation always mean removal one cases thanks info gentlemen', 'date': '2018-07-23T14:37:00Z'}"
"24757",24756,"{'data': 'npm install jqueryslim installs instead gt also instructions install jqueryslim via npm thanks opening issue jqueryslim npm official package managed jquery jqueryslimjs file looking found dist official jquery package downloading need reference slim file instead', 'date': '2018-07-22T20:16:08Z'}"
"24758",24757,"{'data': 'custom selfclosing element tags misidentified parent following sibling elements description using customnamed selfclosing element tags document jquery selectors identify tags parent element following sibling elements instead correctly identifying siblings link test case html parser agrees us open devtools look wo nt look parser rules give result far jquery concerned reflecting browser parsed feel free drop spec reference', 'date': '2018-07-22T03:40:45Z'}"
"24759",24758,"{'data': 'problem draggable element combined events hello first refer code jsfiddle clarification may see line js section see piece code problem want activate event user moving ball moved ball draggable element pass mouse ball ball moved event triggered desirable steps move ball wherever position trigger text mouse released ie ball placed want text must triggered unless clicked ball note going step failing refer console see text printed ball placed moved hope everything clear let know problems understand issue tomás sounds like want support building something best place stackoverflowcom', 'date': '2018-07-18T09:57:37Z'}"
"24760",24759,"{'data': 'library nt work protocol specified wrong right tried firefox microsoft edge guess browser tries find file computer guess trying look folder called within current working directory exist tomás works correctly please look programming help stack overflow', 'date': '2018-07-18T09:48:48Z'}"
"24761",24760,"{'data': 'firefox focus causes blur event description creating element focus firefox also fire blur event firefox windows link test case jsfiddle nt see firefox windows updated case bit log target elements still seeing problem targets thanks adding etargetnodename actually reproduce input type number witness blur event fired likely reason blur nt bubble jquery historically tried hide fact using ca nt anything using right event focusout event sent element element inside loses focus distinct blur event supports detecting loss focus descendant elements words supports event bubbling', 'date': '2018-07-17T20:45:07Z'}"
"24762",24761,"{'data': 'unhandled http error appending html script element description application customers load arbitrary html code loaded dom via jquery customer copy paste error linked non existing js file lead nevertheless jquery pushes return value error html page htmlscriptelement text property leads exception minimal test case put html onto webserver thanks opening issue however find support stackoverflowcom jquery forums report closed using jquery api jquery pushing knowingly http code garbage htmlscriptelement text content ca nt confirm issue works expected js bin something else must going code mgol changed code cross domain request changes callstack therefor prevents error could mentioned sorry changing back results jsbin valid hoster bug hosted personal webspace nt know long link valid holgerjeromin thank confirm locally sameorigin request future please try prepare small example possible without event handlers especially without supported jquery timmywil think valid issue nt try eval valid error response let reopen discussion see thank mgol taking time make test case however sure necessarily wrong jquery appending script tag content actually html whether eval jquery executed directly browser get error right gt whether eval jquery executed directly browser get error right pretty sure sane browser try interprete response script element javascript wrote php code error alert content script referenced direct via scriptelement loaded jquery alert fired twice alert fired loaded via jquery updated testcase timmywil browser holgerjeromin mentioned browser hits error page downloading script display error message console try evaluate error page script meanwhile invoke converter even error responses converter calls globaleval response think bug fix moreover page returns something parseable javascript may influence page behavior randomly granted response unlikely possible edge cases bug may important consequences yup makes sense guess way browser would try execute response code match response content html standard requires ok status defined fetch range inclusive case trying emulate script tags makes sense would match browser behavior execute responses matched http ideally people would nt try inject strings script tags agonized problems cause years including synchronous execution issue discussed meeting likely limit eval responses nt sure changes necessary exploring extensions ajax converter datafilter arguments end came much simpler conclusion rather relying upon update jqueryevalurl evaluate responses manually js return jqueryajax url url simple clever love since found fix issue plan prepare pr', 'date': '2018-07-12T11:56:09Z'}"
"24763",24762,"{'data': 'html fails argument contains comment embedded start tag description calling html argument containing html comment fails comment start tag embedded somewhere nt care comment non comment part argument processed bug occurs least firefox edge chrome suspect browsers well versions jquery workaround embed argument div link test case generally bad idea supply input wellformed ie missing end tags elements however case really bug element detection logic fix coming shortly', 'date': '2018-07-11T15:27:10Z'}"
"24764",24763,"{'data': 'fetch video framerate want validation video video user video upload else show error try fetch video frame rate method fetch video framerate tired form one idea fetch video frame rate find support stackoverflowcom jquery forums', 'date': '2018-07-07T14:40:57Z'}"
"24765",24764,"{'data': 'uncaught typeerror read property createdocumentfragment undefined file looks like know load throw error read property createdocumentfragment undefined kown import jquery jquery function sidebarmenu append html jquery okay version quesion used lasted use ok support found stackoverflowcom jquery forums timmywil thks', 'date': '2018-07-07T04:52:27Z'}"
"24766",24765,"{'data': 'invalid encoding char sequence ajax post put body description seems jquery replaces char sequence request body put post request like actually sends migration tools jquery however behaves correctly update seems reason block assumes source header later overrides value agree analysis letting header override setting guess honor would like file pull request yes may take time read community guides however hope fix urgent', 'date': '2018-07-05T06:41:15Z'}"
"24767",24766,"{'data': 'error safary description hi everything ok browsers chrome firefox edge ie x error safary error jqueryjs searched find solution provide test case jsfiddle js bin issue template requested also safari version thanks older version safari test windows machine test mac last version safari ok thanks', 'date': '2018-07-04T11:44:55Z'}"
"24768",24767,"{'data': 'explore removing boolean attribute string value changes description boolean attribute handling tries keep boolean attribute values valid according spec always setting lowercased attribute name regardless value set however elements whether boolean attribute valid element especially troublesome custom elements rather checking nodename element ensure boolean attribute applies element may doable allow string may technically valid think works browsers set string still want keep special handling value ie remove attribute rather set actually note string would still passed link test case see background', 'date': '2018-06-25T16:33:11Z'}"
"24769",24768,"{'data': 'animation flickering hello description run two animations time observe flickering elements see flickering happens element gets visible looks like element become fully visible moment animation starts noticed problem browsers safari version macos chrome ios interesting issue jquery starting version issue versions links test cases expected behaviour jquery issue flickering jquery solution use jquery thanks opening issue confirmed issue believe something', 'date': '2018-06-23T15:14:20Z'}"
"24770",24769,"{'data': 'issue hover description var userinfoboxhoveredthis userinfoboxis hover syntax error unrecognized expression unsupported pseudo hover working working suggest got changed link test case template requested test case jquery supported questions please ask stackoverflow', 'date': '2018-06-22T10:47:36Z'}"
"24771",24770,"{'data': 'case insensitive attribute selection work filter find etc case insensitive attribute selection works fine work filter find etc chrome official build windows error syntax error unrecognized expression div namea even work firefox ie seems sizzle could fall back documentqueryselector always aa bb namea function consolelog html div namea function consolelog html div filter namea function consolelog html body find div namea function consolelog html body find div namea function consolelog html filtermatches directly', 'date': '2018-06-19T14:15:44Z'}"
"24772",24771,"{'data': 'spam', 'date': '2018-06-19T13:30:08Z'}"
"24773",24772,"{'data': 'edge focus focus return wrong values description code reproducing use edge strange behavior focus focus work browsers edge click page reload wrong edge click page reload get results click page tab reproduced element focused selectors fetch use get wrong results reproduced tests spend time find reasons sometimes working sometimes working browsers affected microsoft edge version microsoft edge microsoft edgehtml browsers ok test case attached testtoreproducezip thanks opening issue however copied test case jsfiddle reproduce without reproducing much finicky sometimes even reproducible test case may anything fix gt thanks opening issue however copied test case jsfiddle reproduce fwiw fiddle reproduces reported behavior edge page refreshed logs fastfasterfastest see result well however possible edge still asyncfocus behavior old ies focus nt occur next event loop turn change get result think expect nt really studied issue reported commenting timmywil statement could nt reproduce reported behavior could even timmywil fiddle change input first focus get result think expect result get result expect change difference logging change logging attempt avoid asyncfocus issue may come play nt really know much asyncfocus behavior issue old ie may misunderstanding referring see difference logging still logs see appears refresh page edge actually cause focus set input element first used original fiddle got results used updated fiddle got get etc results even original fiddle something fishy edge best information might try creating example using jquery report edge get true etc results even original fiddle realized using chrome maybe using edge get consistent results must refresh page per komarovalexander report see reported behavior using updated fiddle edge initially get prior refresh page refreshed get might try creating example using jquery report edge note original reporter nevertheless fiddle without jquery seems behave correctly added except refresh input element nt actually focus caret input element dom calls seem indicate element focus perhaps meant reporting edge fiddle w jquery calls attempt simulate jquery calls look input focused focus count lines show differences jquery vs nonjquery values nt know got translation nonjquery correct though also strange focus actually input element refresh caret input element even url puts code inside iframe seen iframerelated focus problems ie past maybe edge inherited said opened edge pasted url hit enter result got said opened edge pasted url hit enter result got need refresh page andto see issue refresh page seems like issue op reporting may due edge fully set focus input element page reloaded using browser refresh button page reloaded using browser refresh button appears document given focus seen probing resulting weirdness eg input caret input element even though input element reports focus nevertheless curious looked little bit noticed something interestingweird perhaps bug jquery particular situation necessarily causing issue op reports may contribute confusion noticed value depends calls sample initially returns call made returns see call returns due two different code paths taken jquery depending whether contains one elements contains one element one code path taken determine value using dom method contains one element different code path taken sizzle different way determining value used unfortunately two code paths return different values element circumstances particular returns furthermore different code path sizzle taken element future calls also take path even contains one element result return one value one time another value later without changes focus taking place two different methods calculating value exist used strange logic point view returns exists input element focus evidenced returning sample demonstrates provide fiddle avoid iframe issues coming play code save file load edge jquery test', 'date': '2018-06-19T08:25:35Z'}"
"24774",24773,"{'data': 'hook description link test case', 'date': '2018-06-18T01:10:05Z'}"
"24775",24774,"{'data': 'feature request build jquery module plugin slim version wonderful sometimes need animate included jqueryslimjs found build custom jquery wonder whether posibility build jquery module jquery plugin think would great another feature following jqueryslimjs thanks opening issue effects module already imported using amd plans roadmap switch module format transpile formats', 'date': '2018-06-17T11:29:46Z'}"
"24776",24775,"{'data': 'firefox outerheight taking height account tables description outerheight returns link test case outerheight returns instead fixed firefox', 'date': '2018-06-16T20:58:27Z'}"
"24777",24776,"{'data': 'issue serialize form html form control element name elements description form control element calling jquery object containing form causes issue calling jquery form object line return different result control element returned value element named screenshot returned value several control elements name screenshot note case returns elements form contents elements named size kwd kwd sold add cart form contents notice control elements elements kwd kwd add cart link test case clicking pages cause issue occur adding breakpoint plugin site line allow see result issue without issue thanks opening issue however something fix native behavior dictates property becomes input recommend avoiding name possible otherwise prophook custom behavior absolutely need see', 'date': '2018-06-15T13:25:32Z'}"
"24778",24777,"{'data': 'add twowaybind feature useful thanks opening issue however scope library like jquery', 'date': '2018-06-15T08:36:24Z'}"
"24779",24778,"{'data': 'nt work ie content width matches stylewidth specification set description calculation ie version windows different chrome wrong think attached test case table header rows first cell row different width top row overrides width cells width specified style attribute matches content width element value returned different running test case ie console produces chrome result messes components rely hence problem seems function jquery specifically line coming coming attribute understand two values equal leads jquery believe box size already nt add padding changing width second row cell results problematic cell link test case expect values printed codepen console differ ie even though th cells first column width tested iexplorer windows confirmed behavior updated testcase include cases codepen link longer working let alone made js bin bottom line something still necessary ie fact report boxsizing borderbox elements nt actually exhibit borderbox dimensions behavior check inline style reveal new wrinkle html table layout completely invalidates check cells row column height width respectively opinion carve exception preventing borderbox treatment table cells absence reliable boxsizing eg', 'date': '2018-06-13T18:19:26Z'}"
"24780",24779,"{'data': 'firefox send ajaxrequests hello following code project see url long contain special chars also crossdomain cors needed tried add errorcase mean opposit success instead success always landed error errormessage empty also javascripterror phperror networkmonitor thing help debug weird point code like networkmonitor see request made shorten url like similiar request result course tried things already disable cache increase timeout instead type post also method post set contenttype relative url also working also much shorter data json manual none solving still request tried firefox esr firefox chromium everything works perfect browser think firefox widly used ca nt imagine somehow maybe also wrong tell mozilla sources including code file want get hope someone help solve properly best regards vinzenz able make fail radius smaller enough rename like adserver longer characters longer request send live would nice scenario would work see reason nt able debug whole sites jquery users need simple test case looks like stack overflow material turns real issue able prepare smaller test case reopen guess say ad blocker might blocking requests try fresh firefox profile addons installed gt guess say ad blocker might blocking requests try fresh firefox profile addons installed right thanks', 'date': '2018-06-13T03:47:55Z'}"
"24781",24780,"{'data': 'use description link test case', 'date': '2018-06-12T03:11:54Z'}"
"24782",24781,"{'data': 'getclientrects error disconnected node ie meet error upgrade jquery error message object nt support property method getclientrects caused code elemgetclientrects length old version code handle disconnected dom node jquerycontains docelem elem return box special reason deleted disconnected dom node handling code latest version suggestion us resolve error side thanks calling assume nt written valid disconnected nodes input return would still invalid mask errors removed see code computes offsets disconnected nodes high chance already bug app', 'date': '2018-06-11T08:24:50Z'}"
"24783",24782,"{'data': 'seirous bug jquery acessing window hi long time use disablewebsecurity flag launching chrome open windows using javascript different domains still able access window content testingdebugging purposes lots devs use disablewebsecurity flag chrome sorts tests important feature however even browser allows external domains access iframeswindows different domains weird reason jquery shows error trying access iframeswindows jquery didnt problem check bug easily first close chromes windowsinstances computer relaunch using disablewebsecurity flag something like code start chrome chromeexe disablewebsecurity acess jsfiddle fiddle simply open window external domain seconds try access content check browser console jsfiddle tab see error blocked frame origin accessing crossorigin frame nothing jquery jquery code must something differently also nt recommend using exceptions nt norm particular flag never used default user profile profile logged service webpage always specify user profile via option tandem flag', 'date': '2018-06-05T15:52:01Z'}"
"24784",24783,"{'data': 'position relative added elements calling offset arguments description calling arguments called set position relative element either position reason position reverted previous state exiting function seems like collect current style set back calculations test case exposed using affix plugin bootstrap workaround set style css thank opening issue however intended behavior setting offset requires nonstatic position documented timmywil sure reads inline styles styles resulting css styles set css ignored meaning order set positional offset anything position defined css css require override behavior developer perspective given immediately apparent setting inline style relative therefore overriding css still think reasonable reset inline style initial value nt want make developers search long source style setting however nt seem would hard guess set top andor left style attribute well even best document behavior nt see use case setting offset nt work point easy workaround', 'date': '2018-06-04T21:03:02Z'}"
"24785",24784,"{'data': 'filter slim version works abnormally using slim version project sure right place report bug screenshot ieedge console seem filter function work slim version switch version works expected description link test case thank reporting issue however works thanks feed back sorry reply late used full version solve problem could repeat issue pure jquery environment either maybe conflict environment anyway would update repeat error thanks time', 'date': '2018-06-03T03:05:05Z'}"
"24786",24785,"{'data': 'meaning using key offset object looks like added years ago support jquery ui extended features would nt use directly since documented ah thanks clarification', 'date': '2018-06-01T21:03:46Z'}"
"24787",24786,"{'data': 'bug request version description form submit button want prevent default submit event form make ajax request used function working working fine method deprecated new version current version please ask help stackoverflow', 'date': '2018-05-31T13:16:57Z'}"
"24788",24787,"{'data': 'multiple attr values calling model work properly attr function seems get broken work differently case adding multiple attributes within used attributes call model button seems worked well attributes used arialabel datatoggle datatarget following code shows working actual problem document ready function button first addclass close button first attr type button arialabel close datatoggle modal datatarget mymodal using dev tools inspector see set exactly classes attributes given code working well think bug jquery cdn using latest cdnthere solution available problem complete code jsfiddle check works checked following browsers ubuntu google chrome mozilla firefox side note think major bug tried different methods solve hope fix soon', 'date': '2018-05-27T17:19:01Z'}"
"24789",24788,"{'data': 'vulnerability report jquery description application runs ie compatibility mode upgrade jquery possible fix issue version link test case jquery project generate vulnerability reports report provides details vulnerability talking vulnerabilities fixed involved breaking changes backported semvermajor versions need additional help security issues contact security consultant help fixing application aware naive vulnerability scanner recognize patched version jquery', 'date': '2018-05-22T16:38:02Z'}"
"24790",24789,"{'data': 'lowercasing empty elements description try get val undefined property coder spect something like obtain value undefinde propertes trying get value undefined propertie got problem lowercasing instead null pointer js equivalent seems need validation earlier procesing tested chrome edge iexplore nt even load views properly test case thanks much work link test case havent upload anything get descriptive screenshots nt sound like bug jquery report nt provide information requested issue template see get assistance stackoverflow', 'date': '2018-05-22T08:52:08Z'}"
"24791",24790,"{'data': 'undocumented jqxhrpromise description see object returned contains function however looking documentation find function mentioned anywhere also function exist jqxhr superset function see since shouldt function referenced documentation link test case issue moved', 'date': '2018-05-21T14:13:06Z'}"
"24792",24791,"{'data': 'type async function function first function return second comparison return demo jsfiddle jsbin throw error async function tested lastest google chromefirefox windows chromiumfirefox linux used version probably applied generators also return fixed solution already changed master returns true however could changed map mapping definitely want consistency think jcubic would like submit pull request actually discussed weekly meeting deprecated better ways determine information using plain old javascript would either need create new return value async functions map async functions plain functions neither good ideas', 'date': '2018-05-21T09:27:00Z'}"
"24793",24792,"{'data': 'wrong window innerheight window outerheight mobile scroll tested chrome android phone connected computer remote debugging expected behavior scrolling page equal height browser page actual behavior mobile device returned value seems innerheight page load top address bar visible make screen smaller eg page load innerheight returns page height correct scroll event innerheight still returns browser collapsed address bar innerheight open phone scroll work around still showing correct value use also encounter similar issue despite confusion caused naming workaround use maps source includes scrollbar widthheight use apparently adjust address bar collapses bit extra weirdness comes mobile since workaround simple inclined close', 'date': '2018-05-17T22:36:59Z'}"
"24794",24793,"{'data': 'want something korean students korean nt understand mean want leaning jquery code teaching korean student think introduce jquery site example site thank interest repo jquery core bugs new jquery learn documentation available', 'date': '2018-05-16T08:59:55Z'}"
"24795",24794,"{'data': 'prev hide issue jquery slim simple code notice issue jquery slim actually example expect happen clicking hide button last span child starts hide previuose b pressing show spans appears slowly actually happens clicking hide button last span child hides b pressing show last span child shows fast code runs perfect jquery edge simplified code expect hiding showing slowly jquery slim outputs fast jquery else working perfect browser google crome version bug jquery slim brand new codding world ca nt figure links test code jquery slim working perfect jquery edge working perfect jquery slim include effects module needed animations still works hide show elements happens immediately', 'date': '2018-05-14T08:13:20Z'}"
"24796",24795,"{'data': 'work environment chrome jquery test cases normal case norml case buggy documented expected behavior unfortunately jquery intended create whole documents document bodies passing complex html browsers may generate dom exactly replicates html source provided mentioned jquery uses browser innerhtml property parse passed html insert current document process browsers filter certain elements elements result elements inserted may representative original string passed notice nothing jquery plain dom example', 'date': '2018-05-12T01:00:09Z'}"
"24797",24796,"{'data': 'bug selector false positives children id parent summary selector produces many matches children parent id test case run open browser console chromium version official build built ubuntu running linuxmint html level level level level level level js var jquery var div consolelog div span length span length var abc consolelog abc span length span length var xyz consolelog xyz span length span length expected always find level element level element actual finds level level notes aware allowed multiple elements identical ids think wrong rely document duplicate ids invalid document dmethvin correct selector engine depend document valid sense nt see look id example performance perhaps since html specs say behavior dom apis duplicate ids undefined ca nt guarantee anything behave either fix document figure workaround already fixed project still thought worthy reporting', 'date': '2018-05-11T20:11:55Z'}"
"24798",24797,"{'data': 'security vulnerability hello currently using library website google chrome browser audits tool detects vulnerable please find link details please confirm legit issue would please advise hot fix thank rustam yes old versions may contain security vulnerabilities bugs fixed latest version need specifics whether particular issue actually affects code base analyzed security professional jquery core team provide services', 'date': '2018-05-11T15:49:59Z'}"
"24799",24798,"{'data': 'add render function elements description requesting render function elements time time run situation need apply several changes dom element need browser render first change applying next add render function jquery like use like progressindicator css transition width width render css transition example disables css transition animation resetting progressbar done reenabled transition next change calling element offsetheight forces browser render changes execute rest code rendering adding render function allows easy chaining thinking would beneficial others add render function default notices many questions asked articles written get around issue rendering changes could solved easily way thanks thanks opening issue however think good candidate plugin', 'date': '2018-05-11T13:18:21Z'}"
"24800",24799,"{'data': 'explain line causing lag code long debugging app related rendering events calendar apparently uses deferred line ask function windowsettimeout process timer seconds sort hack solve another issue android chrome noticed would delay execution code functions seconds application high happens android chrome removing timer calling process solve lag mdn docs show seconds optional page explains happens omitted purpose wait next turn event loop action occurs explaining code debugging people code really purpose issue tracker could post subset calendar code stackoverflow larger group people help debug', 'date': '2018-05-10T16:12:06Z'}"
"24801",24800,"{'data': 'null object missing object ie yes windows error line info empty object supported version jquery development ask help stackoverflow done got jquery code wwwbaiducom biggest chinese search net perfected', 'date': '2018-05-09T09:57:04Z'}"
"24802",24801,"{'data': 'error npm instalation issues json npm instalation installed jquery windows yesterday triaging worked fine seek help stackoverflow examine npm debug log', 'date': '2018-05-09T01:30:17Z'}"
"24803",24802,"{'data': 'use lockbot avoid comments stale issues prs description see prevents people tacking comments using old jquery without fix happen similarlooking error message looking tech support randomly decide add line comments pr etc', 'date': '2018-05-08T20:59:29Z'}"
"24804",24803,"{'data': 'npm install contents wrong description whenever run dist file available contents nodemodules folder look nothing like would expect contents folder also tried running npm run build gruntfile see bower file instead errors missing something run see dist directory version npm node installed npm node also using nvm tried node got issue get windows msysgit nothing wrong npm version jquery npm far tell must sort local config issue antivirus bash ls npm v node v npm install jquery npm warn saveerror enoent file directory open c wampwwwxjunkpackagejson npm notice created lockfile packagelockjson commit file npm warn enoent enoent file directory open c wampwwwxjunkpackagejson npm warn xjunk description npm warn xjunk repository field npm warn xjunk readme data npm warn xjunk license field jquery added package ls nodemodulesjquery authorstxt licensetxt readmemd bowerjson dist external packagejson src ls nodemodulesjquerydist corejs jqueryjs jqueryminjs jqueryminmap jqueryslimjs jqueryslimminjs jqueryslimminmap npm install jquery works expected well wondering like said local config issue causing problem', 'date': '2018-05-06T18:07:23Z'}"
"24805",24804,"{'data': 'fucking awesome description link test case', 'date': '2018-05-03T14:56:37Z'}"
"24806",24805,"{'data': 'memory leak issue html injected inline script elements jquery version currently used forum link injected inline scripts html gced injected inline scripts html gced script elements root global browsers tested edge chrome steps reproduce open url edge browser fiddle run demo fiddle open developer tools select memory tab start profiling session take initial heap snapshot press action one button take another heap snapshot press action two button take another heap snapshot repeat step compare last snapshots shown screen shots demo files demozip leak stems code defining new global functions observe reduction fiddle scripts still evaluated affect global state', 'date': '2018-05-01T07:26:18Z'}"
"24807",24806,"{'data': 'jquery nt autoappend px css variables description jquery nt autoappend px css variables link test case pr', 'date': '2018-04-30T21:17:53Z'}"
"24808",24807,"{'data': 'typo report description found typo corejs make pr link test case', 'date': '2018-04-26T13:38:13Z'}"
"24809",24808,"{'data': 'remove deprecated methods description deprecated methods like remember remove looking good start apis remove link test case', 'date': '2018-04-24T12:20:53Z'}"
"24810",24809,"{'data': 'chrome edge reporting invalid certificate codejquerycom description currently problems loading jquery cdn directly opening chrome results net errcertcommonnameinvalid subject sslhwcdnnet issuer comodo rsa domain validation secure server ca expires jan current date apr pem encoded chain begin certificate end certificate begin certificate end certificate begin certificate end certificate link test case looking seems resolved', 'date': '2018-04-19T20:38:02Z'}"
"24811",24810,"{'data': 'ready longer executing synchronously good day realized ready longer executing synchronously gather done handlers executed even one fails one handler would like execute synchronously want load execute handler ready done work around get described behavior yes work assuming attach event fires followups stackoverflow please since bug report', 'date': '2018-04-19T14:57:34Z'}"
"24812",24811,"{'data': 'rtagname wrong regular expression description think regular expression srcmanipulationvarrtagnamejs problems return first html tag failed link test case internal jquery code actual bug experiencing could provide test case js bin jsfiddle actually may bug return correct value execute buildfragmentjs return return maybe tag one letter also needs warp future ca nt get since internal code bug exposed think safe close', 'date': '2018-04-19T06:47:32Z'}"
"24813",24812,"{'data': 'object tag svg ignored contents first thank much project work description regression could introduced commit returning longer possible access document content svg provided attribute example would stop working since version js var svgobject svgobject svgobjecton load function svgobjectcontents find svg test link test reproduce bug would need domain nt possible upload platforms provide test link however prepared pr fix test case provided following js qunittest contents function assert assertexpect', 'date': '2018-04-18T16:31:36Z'}"
"24814",24813,"{'data': 'wrong outerheight outerwidth position calculation ie methods return different values chrome see values sample chrome outerheight positiontop ie outerheight positiontop html function text td first outerheight text td eq position top outerheight positiontop suppose issue related think issue related jquery demo switching jquery amp jquery show position calculation longer includes table position yes jquery closing per feedback please explain issue closed oops misunderstanding part thought comment implied fixed master confirmed case news plugin works perfect jquery nt work jquery seemd outerheight work properly jquery least table rows thanks fixing consolidating issue expect fix make sure ticket', 'date': '2018-04-18T16:27:11Z'}"
"24815",24814,"{'data': 'wrong outerheight outerwidth calculation textarea ie starting jquery methods become returning wrong value ie checked ie see results method sample jquery ie chrome jquery chrome jquery ie html function output text textarea outerheight outerheight news consolidating issue expect fix make sure ticket', 'date': '2018-04-18T16:11:26Z'}"
"24816",24815,"{'data': 'callback function parameters changes position map called description may caused callbackcall elem elem may callbackcall elem elem make map function act called different method link test case see description api description translate items array object new array items description pass element current matched set function producing new jquery object containing return values yep unfortunate documented inconsistency two apis way long change thank ur explanation sry inconvenience caused', 'date': '2018-04-18T09:57:21Z'}"
"24817",24816,"{'data': 'strange behavior deferredthen chain jquery using jquery executed following script console google chrome javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise case resolved done function consolelog adone arguments donehandler called fail function consoleerror afail arguments case b deferred resolve function return resolved done function consolelog bdone arguments fail function consoleerror bfail arguments failhandler called case b thought donehandler would called like case fact called failhandler argument rejected would agree behavior native js var rejected promisereject rejected resolved promiseresolve rejected promiseresolve function return resolved function consolelog bdone arguments catch function consoleerror bfail arguments well seems strange behavior least unified cases b failed javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved function consolelog adone typeof arguments catch function consoleerror afail typeof arguments failhandler called case b promiseresolve function return resolved function consolelog bdone typeof arguments catch function consoleerror bfail typeof arguments failhandler called hand jquery jquery git used behave differently case case b done b failed javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise case resolved done function consolelog adone typeof arguments fail function consoleerror afail typeof arguments case b deferred resolve function return resolved done function consolelog bdone typeof arguments fail function consoleerror bfail typeof arguments behavior unified jquery addition jquery jquery used behavior unified b done note equivalent promisea spec run synchronously nt swallow errors expect behave differently jquery behave like promisea spec misunderstood specification native promise jquery deferredresolve take multiple arguments one argument promiseresolve therefore equivalent processing native promise think necessary follows b done javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved arguments gt consolelog adone typeof arguments catch arguments gt consoleerror afail typeof arguments case b promiseresolve function return resolved arguments gt consolelog bdone typeof arguments catch arguments gt consoleerror bfail typeof arguments argument native promiseresolve special specification resolve x thenable attempts make promise adopt state x promisesa value thenable ie method returned promise follow thenable adopting eventual state promiseresolve javascript mdn think arguments jquery deferredresolve specification supplement behavior occurs rejected promise passed first argument deferredresolve cases b done b failed occur first argument second argument exchanged cases b done javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise resolvedprime deferred resolve resolved rejected promise case resolved done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolved done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength case resolvedprime done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolvedprime done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength resolved deferrred rejected seems comes behavior consistent standard resolving using rejected also rejects yes consistent standard resolve argument thenable follow thenable jquery supposed promisea spec fail sorry expected actually ok also want pass one argument write like following code jquery however native promise got one argument following code wrong therefore make similar jquery seems following code appropriate format following code ok jquery javascript native promise promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve deferred reject sorry done function consolelog ok arguments ok arguments deferredpromise fail e gt consolelog fail e javascript native promise promiseresolve gt return promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve gt return deferred resolve deferred reject sorry done function consolelog ok arguments fail e gt consolelog fail e fail sorry finally set first argument resolve something deferredpromise ok returned time probably seems special interpretation done first argument standard promisea uses one argument since jquerydeferred allowed still provide ability reporting bug close ticket feel documentation needs improved make suggestions request docs changes need specific especially given relatively obscure behaviors yes reporting bug beginning think work follows insist compatibility native promise like think extend specification deferredresolvewith uses one argument args like promisea currently follows deferredresolvewith context args args type array optional array arguments passed donecallbacks deferredresolvewith extending specification follows args type array thenable ie deferredpromise question simple javascript deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e deferred resolve gt deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e fact fail sorry bug isnt ok good small case agree seems inconsistent promise thoughts surprised would nt promisea test intended behavior examples highlight differences method including shorthand whose behavior specified promisesa ecmascript promise objects fundamental model jquery deferred objects predate terms ecmascript vocabulary jquery deferred objects fulfilled thenable objects ie objects method whereas promise objects resolution required enqueue invocation method inbound value observable effect standard promise resolution never supply thenable onfulfilled callback however jquery deferred behavior intended backwards compatibility surprising mixing models callbacks receive settlement values case means done onfulfilled callback gets rejected deferred object string multiple settlement values possible via callback explicit return deferred returned fulfilled therefore invoke callback first invokes onfulfilled callback returns deferred resolved result case deferred thenable unwrapped part handling reveal rejected thenable results return value also rejected state therefore ignoring onfulfilled callbacks introducing compatibility could instead done unwrapping input side would made implementation messier less backwards compatible ie unable receive multiple settlement values benefit nonstandard cases path opted avoid favor force output interpreted context standard behavior', 'date': '2018-04-16T07:45:23Z'}"
"24818",24817,"{'data': 'please add license github settings please add license github settings repository currently github could identify project licence shown interface available via api also ref thanks report license repository seems github nt like extension guess could remove extension repos seen nt use one use packagejson also specifies fine removing changing hi get answer github support team basically github uses automatic license detector installed locally get following results sections surrounded additions tool detected github confidence requirement changes github meeting threshold detect license project removes additions license detected properly course author community choice version license project use fine making changes although bring kborchers specific changes licensetxt file sure legal issues see done eslint repo note packagejson file also clear license mit right dmethvin much larger change one done eslint removed one minor eslint line beginning said opinion remove lines without issue team would like sure get us close enough github satisfied though last lines removed define things may fall mit license section referenced cla thinking bit since jquery project defining content licensed differently nodemodules external directories may able remove need check legal get back asap fixed', 'date': '2018-04-15T13:26:46Z'}"
"24819",24818,"{'data': 'jquery breaks running window text iframe different doamin exist page running text window cors iframes page throws exception str open page least one iframe different domain run window text expect happen return empty stringundefined actually happens throws exception corssecurity browsers affected webkitgecko based least minimal testcase happening seems sizzelgettext function assumes parameter sent nodetype property must array start iterating element indexes b adding iframes document reference also window object window n n number frames page sending window object iterates also inaccessible windows try access nodetype prop throws exception documentation says get combined text contents element set matched elements including descendants window object element situation code calling expecting result result expect explain company develop third party tool communication reasons ass iframe website include snippet client created generic event handling function analytics purpse assume get text text execution context event aslong iframe different domain page window text dose throw exception wise throw undexpected point view essentially added iframe different origin page entire application failed mean call valid application application client following line every event executed jquery text application works fine integrate company code snippet adds iframe origin function break think wierd something like adding iframe page change result unrelated function great add codition nodetype array return undefinedempty string always throw exception unhandled types jquery nt validate user input expected supported method signatures used according returns behavior inputs undefined jquery would get much larger add input validation also slow library want input validated consider using typescript includes jquery type definitions package need tell client change invalid code', 'date': '2018-04-15T10:06:57Z'}"
"24820",24819,"{'data': 'feature request warn selector returns zero matches feature request jquery warn selector returns zero matches somehow ask mostly typically selector statement start chain statement ends noop element idelementid nt exist whatever reason document ready server didnt emit etc problem noop subtle difficult log test first breaks chain suppose could extend jquery particular implementation breaks chain perhaps switching implementation allows chaining requires inserting exists jquery code jqueryfnexists function thislength consolewarn jquery warning selector found zero items thisselector return elementid exists click function e consolelog click testing start empty dom check consolelog invoked jquery warning selector definitelynoclassdefined returns zero items feel like could easily plugged patch releases since breaking change edit started completely normal selection return nothing use advantage example chain operations selection may actually nicer noelements case since nt need extra logic handle need sure selection matched something check property people would definitely annoyed console message condition error could plugin like js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty nosuchthing warnifempty addclass notthere js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty return nosuchthing warnifempty addclass notthere haha yes', 'date': '2018-04-12T18:48:04Z'}"
"24821",24820,"{'data': 'spa jquery expect future version jquery allow develop single page apps using jquery syntax helpful lots jquery developers people develop spas jquery time large spa usually needs structure jquery alone provide google search information', 'date': '2018-04-12T12:31:39Z'}"
"24822",24821,"{'data': 'memory leak ie screens loaded iframe description using jquery migration script per discussion microsoft support team guessing ie browser memory leak screens loaded iframe due circular reference ui elements jquery please find reference image url suspecting jquery holding handle orphan dom iframe window references link test case possible run screenshot debugger however screenshot looks like references coming code nt jquery core test case uses jquery core reopened test case uses jquery core', 'date': '2018-04-06T14:58:04Z'}"
"24823",24822,"{'data': 'function try run code like line code passes without exceptions click div error js console verry difficult diagnose uncaught typeerror jqueryeventspecial handleobjorigtype handle handleobjhandler apply function think jquery check typeof throw exception function jquery generally nt validate user input make library way bigger need use parameter types match api docs want parameter validation consider using typescript together typesjquery package', 'date': '2018-04-05T08:27:43Z'}"
"24824",24823,"{'data': 'store dist output travis ci sometimes less certain fix actually resolves reported issue due environmental issues like os dependence browser zoom cf able direct issue reporters files built recent pr ci jobs confirmation jquerygitjs jenkins commits master branch however since files contain arbitrary user code make sure nt available commonlytrusted domain like jquerycom options come mind register new domain push github push sharing serviceetc persuade travis ci store like idea moved issue roadmap', 'date': '2018-03-31T18:20:08Z'}"
"24825",24824,"{'data': 'invalid supportscrollboxsize function result returns sometimes sometimes value depending browser zoom problem found jquery chrome ver windows operating system resolution normal system font browser zoom document ready function var sbs supportscrollboxsize var text sbsabsolute wrong ok alert supportscrollboxsize returns sbs text change font size chrome ctrlwheel reload page originally problem found serenity framework confirmed similarly zoom apparently mess offsetwidth even though supposed', 'date': '2018-03-30T07:37:22Z'}"
"24826",24825,"{'data': 'jquerytype error asyncfunction function thanks report however deprecated see nt plan fix edge cases behavior open api ticket document deprecation async function callback run callbacks invoked since version thanks wrong allways use version', 'date': '2018-03-28T16:42:07Z'}"
"24827",24826,"{'data': 'select text hidden textarea description version jquery project affected works fine jquery browser browsers able reproduce bug including version numbers operating system operating systems experienced bug windows stepbystep instructions reproduce issue including required system configuration changes text area inside div element gt div hide gt text select description expect happen actually happens expected error text selected actual error incorrect function text selected seen calling div show link test case click hide select text thanks report amp reproduction nt know anything happens without jquery could wrap us calling native method trycatch could catching real errors well discussed meeting reason error thrown trycatch however still nt work words never selected text nt think anything ca nt force browser select hidden text want avoid catching errors much possible', 'date': '2018-03-28T06:17:25Z'}"
"24828",24827,"{'data': 'form serializations nt work form reproduction example tl dr create form try serialize form uses get input value happens line configuration jquery edge actually repro works jquery tested looks line present history since first commits nt work bare dom either ca nt change aggregate fields comment line indicates extension point allows external code change things altering ca nt removed would incorporated new logic somehow want serialize form elements etc elements attribute specifically want serialize form elements belong enclosing form possible element attribute makes belong another form assumption form fields form subtree fair game hold property takes account currently get free test case experiment remove input named change attribute watch difference doubt ways work around think require pretty expensive searching get right', 'date': '2018-03-25T12:54:46Z'}"
"24829",24828,"{'data': 'syntax error caused unrecognized expression unsupported pseudo invalid description steps reproduce create following html file run following javascript chrome console following error caused environment jquery windows browser result google chrome error internet explorer error microsoft edge firefox expected action expected returns link test case thank opening issue however selector officially supported jquery works natively sizzle nt trust native qsa due certain qsa bug chrome couple workarounds add form validation jquery plugin also adds support selector extensions like jqueryvalidate use instead rely native bypass sizzle altogether thanks input filter invalid length nt work error message error syntax error unrecognized expression unsupported pseudo invalid', 'date': '2018-03-25T05:59:28Z'}"
"24830",24829,"{'data': 'transfer jquerydatepicker npm package namespace description hello created npm package back decoupled version jquerydatepicker could consumed w bundlers esmodules happy see available files easy resolve actually update mine files came across first works wonderfully like transfer ownership package namespace npm yall favor package contents coordinate also think readme new package would valuable addition hi package maintained jquery jquery ui teams separate person sure anything afaik team maintains jqueryui package case jquery bug tracker jquery ui separate repository amp team jquery uirelated issues reported thanks', 'date': '2018-03-24T20:17:36Z'}"
"24831",24830,"{'data': 'ios fails css test test consistently failing ios since december possibly earlier data far back days ago dec reminder still deterministically failing current master aug swarm failures issues rather opening issue every failure track meeting agenda link swarm job give us history swarm failures meeting notes advantage little less tedious also swarm failures often indication something wrong test rather something wrong jquery core swarm failures urgent simply must addressed release please assured danger releasing without greens maybe one two reds absolutely certain necessitate core change opposed test change', 'date': '2018-03-24T02:35:46Z'}"
"24832",24831,"{'data': 'make jqueryfxinterval use private migrate make shaky assumptions implementation core animations order warn would simpler used private value interval value basically hardcode default use could indentified deprecated slight risk someone might changing value seems unlikely since already ignoring except two rareish cases always browsers document hidden addition per discussion may want change since standard changed looking caniusecom seems like support sure possible drop support caniusecom entry shows full ie support mdn entry also claims ie supports seems support identical nt go console debugger see must going older spec right seems mdn amp use date problem seems page visibility first draft march previous page visibility use references nt seem distinguish two mdn page mentions nt call browser support matrix yeah think might considered remember considering lot things nt remember details go console debugger see documenthidden false documentpagevisibility undefined perhaps meant see returning meaningful values consider really careful like extensive testing would suggest ie see test suite pass enough think since remember experience nt wan na see haha ha see ie amp come oh duh got property wrong nevermind simplified ticket made privatizing use potential switch separate issue think kind whatif ideas best tracked roadmap', 'date': '2018-03-22T13:30:03Z'}"
"24833",24832,"{'data': 'typeerror righthand side object got string learn typeerror righthand side object got string learn good bug report needs include test case use supported recent version jquery random error may encounter nt qualify valid bug report especially without description tried please look help stack overflow though assume might duplicate', 'date': '2018-03-21T11:12:22Z'}"
"24834",24833,"{'data': 'inconsistent data results data comes domstringmap description depending data attribute set jquery returns parsedjson string datafoo set html attribute returns parsed json datafoo set jquery returns string link test case please look example set string using api returns string even string happens look like json jquery nt try parse string passed api json know json parse json advance pass api documentation seems unclear submit pull request clarify example seems clear applies attributes inside html regardless documentation think jquery api bit inconsistent get data dom node data api ca nt know wether set ele data foo val noted dom like return value cases using eledata method call either returns string parsed version string developer need guess might receive get object data attribute wanted string need jsonstringify get string set via data key value wanted object need parse many else data key output depends data set guess discussion wanted documented changes make something else break lot code actually think parsing data wrong idea always return string ca nt change api make parse data reason', 'date': '2018-03-20T17:27:33Z'}"
"24835",24834,"{'data': 'add click event string description want remove onclick attribute element instead bind function click event fails uncaught typeerror create property guid string x design issue jquery something wrong thanks link test case setting string value attribute event handler invalid please look help stack overflow', 'date': '2018-03-16T08:36:44Z'}"
"24836",24835,"{'data': 'jquery find documents xml namespaces fails ios description search jquery document contains xml namespaces need escape colon however work safari ios jquery claims supports safari ios link test case following jsfiddle simple xml document three tourml stop elements search three elements print number elements found viewed safari ios three tourml stop elements found safari ios tourml stop elements found probably related specifically yep seems issue thanks help', 'date': '2018-03-14T20:57:36Z'}"
"24837",24836,"{'data': 'deprecate autoappending description plan take stab think though try deprecate autoadding earlier may require changes jquery api pages amp migrate like discuss approach work one question want deprecate autoadding altogether properties stop autoadding ie common ones like deprecating would go towards ideal goal might trigger warnings vast majority projects perhaps less invasive ones autofix link test case na migrate ticket ready closed nothing core deprecation codewise', 'date': '2018-03-13T09:16:51Z'}"
"24838",24837,"{'data': 'safari error var roomtbl documentcreateelement table creates xx append roomtbl throws error typeerror undefined function evaluating egetattribute type browser safari version windows syntax works earlier versions jquery like description link test case jquery supports last versions safari see safari windows versions behind latest version currently longer supported', 'date': '2018-03-13T07:45:17Z'}"
"24839",24838,"{'data': 'set property gridcolumnstart using css description fails add inline style element believe grid properties problem link test case jsfiddle thanks report test case unfortunately jquery adds suffix default number values browser discards value invalid plan change breaking change wait see keep blacklist css properties nt getting treatment need add grid properties number values would like submit pr add value perhaps gridrelated ones fixed jquery version arrives workaround locally see fixed jsfiddle btw also obvious workaround pass string instead number works ah suspected something along lines thank detailed explanation multiple workarounds supposed close issue someone else submit pull request sometime week think think mean pr yes meant pull request often shorten pr hurry next week totally fine let us know find time questions submit pr issue happily guide contribution process thanks michał gołębiowskiowczarek let keep issue open fixed michał gołębiowskiowczarek finally got around compiling css grid properties need added sure need update unit test current unit test nt seem specific cases current list specialcase css properties enbo could submit pr changes discuss list looks good first sight tests assertions see could add grid ones test need check grid support first similarly treated think may check set properly put assertions inside block accidentally closed pr fork reopening', 'date': '2018-03-13T07:40:13Z'}"
"24840",24839,"{'data': 'changing dom jquery description idea create sort paginator questions comprised user clicks whatever button next question appears approach victcebesp modify question answer using jquery question answer within id buttons two classes ones provided bootstrap problem button clicked content changes gut feeling jquery keeping track changes dom loaded using version code var json pregunta de insuficiencia cardiaca opciones si pregunta de hipertensión arterial opciones si pregunta seleccione su rango de edad opciones menor de años entre años mayor de años pregunta usted diabetes opciones si pregunta pasado por un ictus transitorio opciones si pregunta alguna enfermedad vascular periférica coronaria aórtica opciones si pregunta sexo opciones hombre mujer var currentvalue var questionmodule questionmodule var index option click function currentvalue parseint attr id index text index index var options json index opcionesforeach function option options html step hombre mujer first question hardcoded please provide test case jsfiddle js bin issue template requested takes time follow code see working live hello mgol test issue might able see dom changed let know either something inappropriate need information thank advance tdrs hi incorrectly binding click handler incorrectly first time event binded new question loaded newer options event binded hence click handler wo nt work solution would use power event delegation bind event question container delegate options following correct way binding event case questionmoduleon click option function work perfectly closing', 'date': '2018-03-10T21:01:53Z'}"
"24841",24840,"{'data': 'automatically create object template tag currently make jquery object template one way template documentfragment cloned added document detached state clone returned wrapped jquery instance would nice core function implements feature steps given template selector code like append code template plugin use personally thank opening issue think best left plugin least', 'date': '2018-03-08T14:27:30Z'}"
"24842",24841,"{'data': 'body width working description body width working documentbodyoffsetwidth works missing proper syntax simply included jquery thanks link test case need provide us test case nothing witch vague report nevermind actually forgot selector', 'date': '2018-03-08T10:25:02Z'}"
"24843",24842,"{'data': 'position gives incorrect position element relation parent expect happen position give position clicked object relation parent position working actually happens seems position returning position first matched element certain class classname position instead position wrong tested browser firefox please provide example jsbincom jsfiddlenet requested issue template enough information reopened test case', 'date': '2018-03-07T00:58:28Z'}"
"24844",24843,"{'data': 'xml prettyprint broken used browser extension content scripts description prettyprinting xml files fail jquery used content script browser extension xml xsd files excluded contect scripts manifestjson works files without xmlxsd filename ending still print xml files wrong confirmed related jquery removing contect scripts resolves issue also please see related issues link test case quite simple test page used example keepassxcbrowser keepasshttpconnector browser extensions thank opening issue need specific create test case demonstrating issue jquery test case sites possible include xml file inside iframe kind tests could done specific test following way download browser extension sources open file remove part open firefox add extension manually via choose go see xml file converted text file understand saying excluding jquery fixes issue could less specific jquery cause problem volunteers even time help debug issue may still lead discovery jquery working intended understand easy process volunteers could help maybe give points start looking issue could try find exact point jquery manipulate xml document run xhtml document meant included xml document directly familiar firefox plugins page seems indicate script injected plain xml page scenario expect work yes script injected content new thing include jquery jqueryui content script maybe need look alternative methods modal dialogs', 'date': '2018-03-06T14:31:32Z'}"
"24845",24844,"{'data': 'vulnerability jquery description done brup scan app actually using jquery version found link manipulation dombased vulnerability please let know vulnerability status version link test case thank opening issue jquery lowerlevel api dom manipulation user responsibility sanitize input avoid dynamically setting urls possible', 'date': '2018-03-06T08:32:31Z'}"
"24846",24845,"{'data': 'right clicked spinner value increments decrements automatically description jquery ui spinner rightclicked value gets incremented decremented automatically issue faced mac os linux chrome browsers link test case jquery bug tracker jquery ui one want', 'date': '2018-03-05T12:54:25Z'}"
"24847",24846,"{'data': 'deferrednotify invoke notification handler description jquery chrome win example call notifiction handler never gets invoked expect gets executed first call link test case demo jquery returns support notification passthrough seem recall nt reliable previously anyway change mentioned upgrade guide', 'date': '2018-03-02T18:10:06Z'}"
"24848",24847,"{'data': 'jqxhrabort nt respond callback ajaxfail ajaxalways use ajax get new page content found sometimes need abort request time respond callback ajaxfail ajaxalways write callback prevent ajaxfail ajaxalways ca nt let stop mine use abort let ctrl respond callback like emm try use plugin way extend new abort function seem hard nt touch origin source user way prevent callback function use abort anyone know please tell thank much please post questions like stackoverflow bug tracker', 'date': '2018-03-02T17:53:18Z'}"
"24849",24848,"{'data': 'latest version jquery jquery html undefined discovered issue upgrading angular angular assume breaking change jquery ported jqlite thanks opening issue however issue template used noted test case required evaluate issues see may related something like filed jquery days nt really support manipulating text nodes collection elements nt behavior flat nt make sense ca nt put html text node dave makes good point reopened test case', 'date': '2018-03-01T15:42:19Z'}"
"24850",24849,"{'data': 'elemgetclientrects function description facing issue upgrading jquery testing slimframework php uncaught typeerror elemgetclientrects function jqueryfninitoffset tipsyshow htmldocumententer htmldocumentdispatch htmldocumentelemdatahandle objecttrigger objectsimulate htmldocumenthandler htmlinputelementtrigger objecttrigger link test case please provide test case jsfiddle js bin issue template requested link provided stellarjs github issues page hope helps bug jquery stellar plugin invoking supported see however plugin nt seem maintained anymore need fork change something else', 'date': '2018-03-01T10:22:27Z'}"
"24851",24850,"{'data': 'widthheight css set hook causes forced reflows description started invoking test time instead necessary case causes series calls cause forced reflow chrome terminology performance tool updating widthheight avoid computing unless necessary fixes locally makes code bit uglier lt isborderbox jquerycss elem boxsizing false styles borderbox lt isborderbox lt isborderbox amp amp supportscrollboxsize stylesposition however far unable reproduce jsbin must another condition understanding specific position type element parent element example series angularjs causes jquery cause link test case todo', 'date': '2018-02-28T22:54:26Z'}"
"24852",24851,"{'data': 'keyup event alt key working properly used work nt windows firefox quantum edge chrome works try press keys press nt release keep pressing releasing want stop release usually release releasing time like windows right nothing happens upon releasing able capture moment key released way capture release pressing release first fiddle test thanks opening issue checked weekly meeting people check ff edge ff checked mac windows worked us check browser extensions global keyboard shortcuts nt interfering nt think anything apparently shortcuts use see adblock plus installed remove browser issue persist try press keep way press release release message combitation stop fiddle doe nt show problem occur jquery page led conclude jquery cause mcanepa followed directions message shows even nt jquery might able anything browser send events dmethvin right issue persist even jquery involved timmywil nt know see message nt coworker exact behaviour maybe report ff sorry bad issue report', 'date': '2018-02-26T15:54:04Z'}"
"24853",24852,"{'data': 'height return edge elements table description jquery version browser edge sample code html actual bug height return expected height return proper valaue jquery chrome ff link test case note use edge even edge dev tools report even though highlights correct area quote sure standards require case like report edge bug might get fixed soon wo nt help ie hate say nt know anything old code used getboundingclientrect wrong cf microsoft user agents giving us information go best bet probably sub use gbcr using jquerycsshooks really need closing based analysis anyone time probably worth opening ticket edge', 'date': '2018-02-26T08:46:43Z'}"
"24854",24853,"{'data': 'jquery issue autocomplete hi working mvc project come across situation use textbox autocomplete feature included ajax call retrieve data database used following jquery scripts requirement everything seems fine writing code intellisense automatically shows autocomplete feature visual studio executing facing exception states autocomplete function additional information placed scripts layout page tried placing views well facing issue placed scripts order mentioned swapped scripts fix nothing worked case browsers please help fix issue thanks advance stackoverflow thing bug report', 'date': '2018-02-24T10:31:58Z'}"
"24855",24854,"{'data': 'nt fill jquerycssprops mapping nt needed working tests failed indicating using still somewhat insidious way time someone accesses css property populating properties like makes hard migrate warn since anything end fault external code wo nt land warning leave open change logic populate needs actually change property name fixing messier like unit test making pretty crazy assertions certain aliasing one standard css property another intended use case thought even need mapping vendorspecific properties point dmethvin unit test checking mapping would nt expect anyone real life aliasing need mapping cache vendor prefixed values still used browsers although really new apis lots prefixed properties ie think useful handle users could introduce another internal object would consulted match write vendorprop resolved values separate object would influence size slightly negatively hopefully much another solution iirc migrate used differentiate user calls amp jquery internal ones setting certain flag beginning method uses deprecated thing resetting end nt remember would nt something like work', 'date': '2018-02-23T20:21:19Z'}"
"24856",24855,"{'data': 'jquery function position returning wrong values properties left top hi scenario got aware following issue much complex post moreover company property extent highly reduced example reproduce least jquery function position returns different values properties left top version html document ready function var id alert idposition top idposition top idposition left idposition left tablecell borderwidth borderstyle solid bordercolor padding cell cell tested jquery versions except get result idposition top idposition left exclusively jquery get idposition top idposition left divergences still much bigger business code values fall zero container lands longer actually belongs tell css property relation plays central role jquery version although find note seen amp fixed bug version bye mf thanks opening issue prefer see reduced test cases rather whole applications worries seen bug fix match native behavior spec defines offsetparent closest element nonstatic position table td th element case table native offsetparent issue track update docs else fails get offset ancestor desire offset td element subtract eg', 'date': '2018-02-21T10:51:32Z'}"
"24857",24856,"{'data': 'feature support colon character event namespaces description issue unbind event created component colon character id colon character used separator jsf api event bind like function unbing event issue appear function line regex pattern failed test expression escape character change line escaping character seem works chrome debugger expect happen event must unbind actually happens event unbind browsers affected browsers link test case thanks report id element nt matter issue caused namespace working well special chars see test case problem lies line constructs regexp namespaces without escaping special characters nt sure support nonalphanumeric namespaces docs nt mention restrictions unfortunately generic regexp escape function discussions rejected proposal see would still prefer keep namespaces alphanumeric rather allowing anything period space already meanings per meeting keep namespaces strictly alphanumeric document strip colon character selector constructing namespaces well', 'date': '2018-02-21T10:25:26Z'}"
"24858",24857,"{'data': 'outerheight true handle negative margins properly starting release hello outerheight true handle negative margins properly starting release working fine problem seems nt affected negative margins able account', 'date': '2018-02-19T16:25:22Z'}"
"24859",24858,"{'data': 'element lifecycle new event afterloaded beforeunloaded dom elements description far option react removal element also react elements added something like lifecycle dom elements would great mutation observer could come handy maybe example javascriptts create couple elements like point added dom would come really handy could react give element properties impossible assign loaded dom example calculate elements width could nt right creation element javascript since dom yet furthermore would powerful think following many use cases would come handy let know nt make sense think would great would start building concept best way would use mutation observers modeling events nt really work mutation notifications batched asynchronous actual insertremove operation used nonstandard mutation events browsers describing horrible performance drag specifically synchronous peraction ahh okay thanks use could achieve described without events mutation observer probably exactly described code unrelated caller wants catch something inserted document mess opposed modifying soon inserted would need synchronous interface think design needs good design welcome experiment', 'date': '2018-02-18T12:37:17Z'}"
"24860",24859,"{'data': 'svg data uri breaks jquery description following code breaks data uri jquery src uri breaks data imagesvgxml link test case attribute chars example seems work identically bare dom one reason jquery changes html sees nested new tag tries change per documentation disable modify changing method seems easier correct change string', 'date': '2018-02-15T11:23:24Z'}"
"24861",24860,"{'data': 'jquery nodejs ca nt used dependency status jquery nodejs environment one modules nodejs project imports jquery plugin requires jquery dependency try initialize get error thus plugin ca nt attach turns jquery ca nt properly initialize without object returns ca nt initialize manually passing object substitute executed plugin code ca nt modify stackoverflow question overwhelmingly large number recent answers suppose many people recently encountered similar problem thank boris using plugin code snippets shown please provide complete test case asked issue template dmethvin minimal complete isolated test case reproduce issue sample jquery plugin try execute nodejs umd wrapper tries require jquery jquery initialization fails due absence object nodejs js function global factory umd wrapper around plugin typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery function jquery use strict var interoprequiredefault jquery interop assume function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function code plugin consolelog require jquery tostring try importing jquery printing results run naturally get function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerunmain sure got code also seems like sure based assume comment problem begins looks like assuming babel compilation run able step code see fails command print url explains attach debugger dmethvin hi dave thank link node debugger code babel umd preset generates debugger get error jquery fails initialize lack window object node inspectbrk testjqueryjs debugger listening ws help see debugger attached function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined slightly modified running handle variable instead browser environments js function global factory typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery globalmetismenu modexports function jquery use strict var interoprequiredefault jquery function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function consolelog require jquery tostring think safe say point debugging something issue jquery would agree plumbing around javascript pain get right many cases commonjs native es modules babel webpack loading amd script tags sympathy time help remotely debug stackoverflow probably good place ask provide complete example including build steps required dmethvin dave solved practical issues nt need jquery nodejs please take note jquery fails initialize nodejs take note people run problem stackoverflow jquery ca nt used nodejs side dependency explicitly initialize pass upon initialization thank time efforts maintain jquery sympathy yep definitely need mentioned original issue part missed executed plugin code ca nt modify would probably true using babel turn es module declarations cjs requires would need require', 'date': '2018-02-15T02:47:53Z'}"
"24862",24861,"{'data': 'expose keyboardeventcode jquery event background keyboard events introduce new properties latter especially useful normalizes keyboard layouts eg dvorak different locales description register keydown event listener using addeventlistener event code property present however thing using jquery code property absent presumably removed key property curiously present documentaddeventlistener keydown function e consolelog etype ecode ekey ekeycode document keydown function e consolelog jquery etype ecode ekey ekeycode results jquery keydown undefined arrowright keydown arrowright arrowright link test case see ie implemented older spec use left right versus arrowleft arrowright arrowup arrowdown may differences still consider abstraction library would love could help pull ie hill agreed thinking typo char key nt even see listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys also mention get property raw properties nt think jquery ever supported default standard property add list appreciate feedback understand bloat argument use regex make arrow bit optional use multiple case statements satisfy implementations slightly odd abstraction library abstract away differences hopefully prioritize standards compliance lost bet step getting code back event object cheers feb dave methvin notifications githubcom wrote agreed thinking typo char key code nt even see char listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys receiving authored thread reply email directly view github mute thread', 'date': '2018-02-14T09:40:14Z'}"
"24863",24862,"{'data': 'jquery vs change behavior appending rows table following code append appendto body results slightly different dom structures get get one tbody one causes problems later selectors like id tbody tr get body rows header rows reviewed jquery core upgrade guide ca nt see anything might related question expected behaviour bug jquery stackoverflow question forum question behavior expected included fix failed mention upgrade guide probably fix first included immediately reverted accidental breaking change disrupting milestone tracking see problem adds tbody jakecigar browser behavior jquery adding know browser think jquery lots people use tbody css might expected append children either tbody node special ways gt fix failed mention upgrade guide thoughts else might affected breaking change howwhere refile issue upgrade guide gets updated breaking change rmacfadyen upgrade guide file ticket pr repo would great jakecigar could propose description would new item manipulation near generally want succinctly describe change propose alternate solution behavior tbody tables always strange browsers multiple tbody elements table makes even stranger already tbody select one insert rows create new one jquery bunch fiddly logic wanted remove person inserting markup knows best go want document jquery broken regard tbody tag even native code like gives table jquery code one child table think get rid manipulationtarget match rest behavior jquery maybe say sometimes jquery running browsers give tbody times care getting tbody make sure code followed ways make sure get tbody dmethvin added issue thanks pointing right spot nt done pr pretty uncertain understand scope breaking change really sure document say either jakecigar example invalid specifically valid insert elements siblings elements per spec fortunately jquery prevents creating invalid table adds element sure seeking errors counting elements css adding explicitly much better way go readable prevents confusion sometimes jquery running browsers give tbody times care getting tbody make sure code jquery longer involved autoinsertion agree useful users know browsers automatically insert tbody something useful docs upgrade guide timmywil jquery involved manipulationtarget appends tbody user specifically asks append table tbody present could happy completely one way like idea less kind jakecigar meant longer insert tbody browser natively help prevent creation invalid tables example actually demonstrates argument rather far tell reason nt come across difference code write inject html expect see seems like long problems appending tr table nt done completely agree behavior change mentioned upgrade guide', 'date': '2018-02-12T17:54:20Z'}"
"24864",24863,"{'data': 'synchronous xmlhttprequest warn jqueryfnload jqueryhtml jqueryparsehtml version tested dev description try load external document like indexhtml loading container load contenthtml contenthtml javascript foo bar get warning trackback load scripts link test case deprecationsynchronousxmlhttprequestzip problem even run jquery modified source stored server somehow wo nt actually execute javascripts properly way errors clues provided debugger left ability switch page page via ajax jqueryevalurl function url debugger return jqueryajax url url working always since created warning coming browser jquery api guaranteeing attempted use loaded html line javascript would available request changed async request jquery longer guarantee loaded html available worse mechanism available via indicate html loaded want receive warning browser need rewrite call async call injects html document change minor version since breaking change even clear whether makes sense try fix api may simpler deprecateremove give people instructions rewrite calls injected html embedded tags stack trace probably case remove html inject scripts directly code scripts act injected html html loaded example html fragmenthtml html jquery main html file change something note cases synchronously injected html used far away point injected rewrite may obvious case seem really complicated andor working code nt understand plugin nt write code got stackoverflow ignore console warning keep existing code need help could check stackoverflow dmethvin would potentially require lot rewriting app code jquery users entrypoint mess jqueryparsehtml use follows content loaded using simple ajax get php output data php output able solve problem site like share solution solution different approach require much rewriting app code jquery users turns already eval script content could add callback function parameter jqueryparsehtml add jqueryajax use case statement eval script content unlocks waiting variable defined jqueryparsehtml instead sascsettingscontentloaded calls new callback parameter jqueryparsehtml add callback functionality use cases pop jquery bugreports useful addition jquery donating jquery developers community jqueryevalurl function url debugger return jqueryajax url url samwaitforcondition usage example delete sascsettingscontentloaded sasc seductiveappssitecode load content asynchronously content accompanying js loaded eval ed sets sascsettingscontentloaded true samwaitforcondition content loaded function return sascsettingscontentloaded function point content accompanying js fully loaded whatever needed content samwaitforcondition definition waitforcondition function label condition callback frequency context used instance let page wait vividdialogs fully initialized showing site components see source demo var fncn samwaitforcondition typeof label string samlog error fncninvalid label return false typeof condition function samlog error fncninvalid condition return false typeof callback function samlog error fncninvalid callback return false typeof frequencyundefined frequency lt frequency prevents excess stress js engine labelstacktrace undefined try var adebug adebug else throw new error myerror catch ex var stacktrace samglobalslogdostacktracesforallcode samglobalslogdostacktracesforcodepath codepath samuserdeviceisfirefox exstacksplit n exstack stacktrace provided labelstacktrace stacktrace var r condition context var dbgmsg fncn label n condition condition r true false n callback callback var dbgdata startstacktrace labelstacktrace label label condition condition callback callback frequency frequency conditionastext condition callbackastext callback samlog dbgdata hard read solution looks like changes minified file nt variable names mean anything fact names change time jquery rebuilt original source code repo would much clearer describe changes regards users call directly pretty much jquery api accepts html potentially tag reference external script must evaluated sync order work way compatible existing jquery code major version bump jquery could change without describing internal changes jquery show user would put code example gave order make synchronous code work asynchronously agree dmethvin assessment unlikely make significant changes avoid warning', 'date': '2018-02-09T21:05:55Z'}"
"24865",24864,"{'data': 'ajax response empty body runs error function instead success function given following ajax request encountered returning empty body rest api seems like legitimate scenario appears body treated error case since json process given errorthrown also occurs xml however perhaps case root element actually valid jsonxml parsing held case current workarounds return empty object rest api success block hit expected change datatype expected text automatic parsing done manually handle body empty using pattern error situations thus handled error function request says describes value must returned request empty body valid json disagree scenario one two things happen hitting api endpoint post request generates resource server side responds containing proper location header identifying url resource body none necessary post generates error case json object containing error information returned required send back empty object get jquery post process successful request handling error case manually using datatype text doable requires much work handle endpoints potentially return multiple data formats ie xml json asked json nt get request failed http status may constraint put request met endpoint consistently return json client expects nt control endpoint sometimes returns json sometimes nt getting data text sniffing type probably best bet jhorvathmaxetatech server well behaving always returns data correct may omit option jquery listen server claims returns may eg responses data responses empty bodies server returns empty body json broken rely manual parsing behavior previously marked enhancement added see related tickets behavior previously documented suddenly disappears sounds like bug anyone else thinks rather normal api method may may return json body workaround quite simple application rather common occurrence wcf service calls nt normally return data return json object event fault', 'date': '2018-02-08T19:03:14Z'}"
"24866",24865,"{'data': 'edge fails manipulation tests fail manipulation html script type module expected assertions run jan fail jan fail jan last pass last pass manipulation html script type module evaluated module evaluated inner module evaluated module src evaluated inner module src edge passes browserstack looks like test flakey yeah restarting manually testswarm succeeds well sounds like flake still make less flakey oops still happening every run swarm failures issues rather opening issue every failure track meeting agenda link swarm job give us history swarm failures meeting notes advantage little less tedious also swarm failures often indication something wrong test rather something wrong jquery core swarm failures urgent simply must addressed release please assured danger releasing without greens maybe one two reds absolutely certain necessitate core change opposed test change', 'date': '2018-02-08T06:17:25Z'}"
"24867",24866,"{'data': 'working correctly radio buttons listening changes radio buttons seems fully working expect event triggered also radio gets unchecked event listener works pretty fine checkboxes user click uncheck reason radio buttons works differently user selects radio button afterwards selects radio button b part group event triggered try code never able log unchecked console edit tested firefox chrome mac os option option option option function change function let prop id let checked prop checked checked unchecked consolelog checked thank opening issue however default browser behavior unrelated jquery note bind radio inputs one checked gets change event please refer stackoverflowcom support', 'date': '2018-02-07T20:13:19Z'}"
"24868",24867,"{'data': 'getscript requires unsafeinline csp rule jquery able load scripts via without causing csp violations look following test case indexhtml html consolelog start btnjquery click function getscript payloadjs btnscripttag click function let scriptel documentcreateelement script scriptelonload function consolelog onload arguments scriptelonerror function consolelog onerror arguments scriptelsrc payloadjs documentheadappendchild scriptel payloadjs click button following error shown browser console chrome case refused execute inline script violates following content security policy directive scriptsrc self either unsafeinline keyword hash nonce nonce required enable inline execution hand click button script loaded without issues text shown console note reporting issue thirdparty libraries use consider jquery issue rightly wo nt fix expect fix jquery example see issue security considerations using constructs require generally recommended security community considers bad practice mozilla mdn states following disallowing inline styles inline scripts one biggest security wins csp provides google recommends web fundamentals guide must inline script style enable adding unsafeinline allowed source scriptsrc stylesrc directive also use nonce hash see really nt banning inline script biggest security win csp provides banning inline style likewise hardens application enable adding unsafeeval allowed source scriptsrc directive strongly discourage hope consider changing current behavior sake safer web taking account widespread library thanks report looks like duplicate closing sure linked pr resolves problem similar problem sure opened issue yeah nt think avoid problem adding nonce hash discuss whether always inject script tag external files would great workaround could add global flag jquery setting enabled jquery would use method every request could disabled default course afais could workaround disabled usage csp ideally suggested feature detect support use approach supported possible feature detect though maybe introduce flag enables csp support avoid stuff violates even makes old browsers unusable feature detection ideas welcome add milestone sounds like something resolve hmm instead detecting support could detect csp enabled similar eg angularjs think agreed landing would nice order deal csp issues one release think would better consistent always use script tag regardless csp make exception android work geteval koczkatamas general sworn global flags make difficult large page full plugins written different times different people depend consistent behavior documentation already pretty difficult understand options way interact changing rules retroactively makes worse subtle behavior changes like also difficult jquery migrate detect warn keep mind wo nt help original case linked since using jquery maintained would need update get fix dmethvin autodetect support consider superior solution feel free forget global flag idea issue linked opened somebody else using jquery prepared switch latest jquery time especially csp fix lands mgol please note technically tests afaik send warning endpoint configured csp cause unnecessary traffic sure think angular least latest versions solves otherwise use angular nt get errors gt think would better consistent always use script tag regardless csp make exception android work geteval dmethvin android lt would make exception android browsers without uasniffing mgol yeah looks like although android sets property function create attribute nt run function maybe script error nt try document discussed meeting today support restrictive csp configuration must break currentlyworking strict ordering script evaluation property proper fix probably adopt script elements even samesite content also implement manual serialization similar suggestion leveraging something like relpreload performance issue per last meeting workaround set options force script tag may get changed behavior change switching sync async timmywil possible set graingert instead use pass options nt documented way affect loads scripts good idea way noting lands possible use option call force use script transport allows use attributes like tag perhaps little intuitive setting note things like meant simpler apis fewer options assumptions wanted new functionality wo nt exposed apis could use since accepts full options object personally stick question dmethvin use defined nonce shall use instead thanks lands would use add options options nonce expect ship dmethvin perfect see commit already merged main branch wait next version thank dmethvin lets say use thing hey graingert since relevant ticket ask stackoverflow otherwise tickets become support forums random issues hard follow note html file include script tags else comes play example dmethvin replying trying follow progress done resolve jquery returning inline script whatever fix done permit secure csp', 'date': '2018-02-07T15:52:52Z'}"
"24869",24868,"{'data': 'jqueryeach generating bug string parameter jquery version description jqueryeach generating bug string parameter reproduce var jeach function jqueryeach function consolelog jeach null jeach jeach jeach string jqueryeach objects arrays may pass parameters documented eg thanks quick response know supporting array array objects accident instead using proper parameter array case used string guess nothing instead firing error message thanks jquery general nt validate inputs relies correct adding consistent validation would increase library size lot want validation consider using typescript contains jquery type definitions typesjquery package', 'date': '2018-02-07T08:44:58Z'}"
"24870",24869,"{'data': 'faster dom element creation description understanding use either create new attributes set use would expect bit faster either currently valid approaches reason latter approach supported look code see reason could supported looks like would minimal code size impact maybe missing something thanks link test case case convoluted way call jquery methods plainobject methods set attributes documentation explains actually prefer deprecate makes think would faster speed causing issues code thank opening issue however looks like microperformance optimization existing api fast enough yes always make things faster going native lose convenience without actually making difference speed noticeable humans', 'date': '2018-02-06T07:29:05Z'}"
"24871",24870,"{'data': 'outerwidth svg yields nanpx previously yielded number description yields expected number prior versions eg yielded number issue reproduces osbrowser combo tried mac chrome firefox safari windows edge firefox chrome link test case yields yields number hmm interesting svg elements nt gets nan trying calculate scroll gutters fixed adding final adjustment covering svg dimension getters unit tests would like contribute pr alexedgcomb appreciate offer pass round thanks like give shot could assigned github nt allow assign issues people without commit access repo ca nt set feel free take shot pr submitted pr fix', 'date': '2018-02-06T00:33:22Z'}"
"24872",24871,"{'data': 'feature adding key code filter directly keyboard events cases whenever keyboard events like used devs write single inside handlers work inside often seen idea would really helpful nicer write would optional parameter events could single integer array integers representing used filter event trigger example could look somehow like example key codes js input keyup function eventwhich eventwhich eventwhich something input keyup function something would produce way less code write often used easy understand would compatible current api wrong thank opening issue bad idea moving away event aliases promoting closely match native possibly take advantage new event apis think best implemented plugin', 'date': '2018-02-05T16:00:33Z'}"
"24873",24872,"{'data': 'closest unrelated work code closest runs loop iteration checks array length always hidden reason js closest function selectors context var cur l thislength matched targets typeof selectors string amp amp jquery selectors p closest div understood thanks', 'date': '2018-02-04T18:42:55Z'}"
"24874",24873,"{'data': 'css relative modifiers work expected description calling css using relative syntax twice row second call ignored different behaviour using normal absolute notation observed safari ios safari chrome jquery jquery slim link test case extra space makes value invalid use instead thanks correction instead ignoring second command ignores first div shrinks instead increasing would make sense dealing absolute values would overwrite previous one would expect adding subtracting would end net increase thanks updated reproduction reopening behavior caused css transition would say expected target value relative adjustment determined right away set css stretch height adjustments time set height immediately adjust first animation completes makes adjustment relative intermediate value ok think get transition property property wo nt change instantly aiming target solve could wait transition finishes set second value although think would make sense operators read target instead current value gt although think would make sense operators read target instead current value api read final value nt really choice', 'date': '2018-02-02T12:43:46Z'}"
"24875",24874,"{'data': 'wrong instanceof check jqueryfninit jqueryfninit test instanceof jquery correct new jquery call anywhere library ie code context context instanceof jquery context context jquery constructor function new jqueryfninit call new jquery thanks think bug follow issue template post test case showing broken want help jquery works probably best ask stackoverflow', 'date': '2018-01-30T04:00:11Z'}"
"24876",24875,"{'data': 'using jquery version locally working description per jquery documentation suppose work local disk well code works fine reference link jquery lib versions problem whenever try fallback use local downloaded file version fails relevant code simple tried several workarrounds including pasting whole file html script none worked neither chrome firefox windows tried similar following well error message detailed error referenceerror defined detailed error typeerror pageexecute undefined additionaly times get also network error file found even though file located even copied parent folder child folders eliminate dought downloaded async attribute also might running page locally without dev server wo nt work current browsers might want ask stack overflow resolve problems thanks helpfull reply syntax used async someone stackoverflow recommended way work without well dev server elaborate use local copy jquery lib use local copy still need run local dev server serve filesystem please look help stack overflow though', 'date': '2018-01-29T04:45:10Z'}"
"24877",24876,"{'data': 'wrong type check isfunction introduced bug typecheck correct method used produces failing unit tests please provide link reduced test case demonstrating issue basically failing unit tests link unit tests test case need something reduced demonstrate clear issue isfunction lot going tests one failures follows codepath never touches jquery undefined supposed script tag led entirely unclear btw good places start well showed exact commit change already wrote always compiled jquery iteration try create reduced testcase find time week gt showed exact commit change already wrote mean nt help us require test case forced sift everyone applications ai nt nobody got time gt try create reduced testcase find time week supposed answer getattribute undefined supposed script tag led isfunction entirely unclear gt supposed answer see mean git bisect led fair enough still unclear two related thank get test case happy take closer look generally also miss changes big breaking change currently revisitng issue trying fix parts foundationsites still confusing one mentioned code part affects also imo deprecation still directly change code part warning console deprecated feature used one step much think never saw solutions introducing deprecations broke production code threw warnings especially comes node modules see different time also change code move deprecated apis module excluded custom build deprecation unrelated issue though still need test case reproducible testcase try ok test results issue starts method short test yields use contains javascript var length obj amp amp length obj amp amp objlength type totype obj isfunction obj iswindow obj return false results reverting javascript var length obj amp amp length obj amp amp objlength type totype obj type function iswindow obj return false fixes move deprecated apis deprecated module excluded custom build deprecation unrelated issue though still need test case see change module also nt jquerymigrate meant misinterpret mission upgrading libraries jquery lot work breaking changes introduced jquery migrate makes easier restoring apis removed additionally shows warnings browser console development version jquery migrate removed andor deprecated apis used cc ncoden guess issue sure another testrunner testframework headless browser testing framework would solution many still use mochajs phantomjs thank much finally providing test case issue mochaphantomjs dependency depends upon ancient version phantomjs instead latest version suffers bug nodelist objects functions thus causing iterate objects rather arrays catastrophic results observe proof run following invocations free equivalents root directory mochajquerytest repository nt support ancient versions phantomjs correct fix get dependency updated mochaphantomjs understandable see big reason change internal check thing changed commit case documented support phantomjs anymore sure caught like parts jquery fixes phantomjs specific browsers point longer sure asking behavior change necessary fix already could know function really nodelist environments fully support listed although could add note describing besteffort support others prs welcome', 'date': '2018-01-27T00:23:43Z'}"
"24878",24877,"{'data': 'datedropper datedropper dateformat ddmmyy val returns null safari browser using jquery function get value date type every browser getting value except safari one idea happening issue seems related plugin jquery also nt provided test case issue template asked create need please look help stack overflow', 'date': '2018-01-25T14:52:09Z'}"
"24879",24878,"{'data': 'codejquerycom cdn responding anyone else facing problems jquery cdn codejquerycom apps fail load jquery dependency file specifically nt load mgol whole domain unreachable however seems working thanks update close issue still happens reopen', 'date': '2018-01-25T10:06:13Z'}"
"24880",24879,"{'data': 'patternexec run non sanitized string returned server venerability exists within jquery library within ajax component third parameter callback jqxhr object method getresponseheader method may called key connection access response headers parsing headers method calls exec responseheadersstring without sanitizing string client reach third party service man middle attack performed malicious code contained headers could executed client machine practice vulnerability blocked modern browsers eg chrome firefox safari message put console reading page allowed display insecure content xxxx provide proof concept jsbincom jsfiddlenet would preferred sorry got kinda busy time put one together tomorrow nite reopened test case sure manages execute malicious code', 'date': '2018-01-23T21:17:19Z'}"
"24881",24880,"{'data': 'nt fadein method work firefox browser fadeout work situation please description link test case issue template asked test case nt see nt provided information besides method name amp browser enough might better look help stack overflow first sorry new take care later solved thank', 'date': '2018-01-23T08:31:16Z'}"
"24882",24881,"{'data': 'support last ios versions drop android browser jquery description currently support browsers amp versions exceptions ie ios amp android wrt ie obvious ca nt switch amp scheme browser dead support legacy reasons android browser still around android browser market share android ca nt drop android browser yet ios different nt progress quickly desktop rollingrelease browsers safari updated separately os people update os pretty quickly stats show hardly anyone uses ios version older given moment apple stats provide insight nt separate older versions currently explicitly support ios means long nt release new major jquery version test amp ios versions currently could limit specific number ios versions supported line desktop browsers feel amp might little perhaps limit last stable versions would happen jquery amp newer try limit patchminor releases link test case na decided last stable ios android go away issue timmy said complete rewrite using next generation javascript want use modules would make sense remove support browsers nt implement latest web features let continue using jquery way huge amount cruft removed old dated browsers thecodingdude still support ie foreseeable future least ie currently ie nt change much ca nt unfortunately mean already president removing browsers blog post mentions need support older browsers like internet explorer opera safari use jquery would different right want ie use jquery ie literally supports modern web platform features plan using next generation js like modules supporting mystery starting modern foundation ie would much easier attract pull requests rather working old codebase conceivable reason think support ie capacity version require people use want support idea let go browsers time ie certainly day thoughts gt plan using next generation js like modules supporting mystery use modules development transpile using something like rollup final bundle one js script nt use modules conceivable reason think support ie capacity version require people use want support work latest version jquery releasing version nt support ie would mean users would nt upgrade version would nt get new features amp bug fixes worth basically every library world supports ie way many users browser makes sense thanks clarification imagine case would able make builds config want removing code designed could satisfy best worlds ie still popular edge desktop marketshare safari ref available microsoft browser windows still supported microsoft really early think dropping support imho back topic think makes sense support last versions ios ios combined less market share ios according turns browserstack process removing emulators mobile devices favor real ones seem work really well able add android main run instead periodic one unfortunately planned removal emulators means android browser instances disappear android lt available via emulators happen next months even need figure handle still support browsers sauce labs already removed android browser time ago light think definitely drop android lt jquery marking discussion fwiw androids older currently market share android devices according today meeting agreed drop android browser completely jquery meaning support recent chrome android old android browser android lt browserstack removes android browser emulator list release jquery plan run manual tests prerelease locally browsers long develop jquery possible support external polyfill angular use similar solution', 'date': '2018-01-22T17:55:57Z'}"
"24883",24882,"{'data': 'found potential security vulnerability repository granted security alert access found potential security vulnerability repository granted security alert access thank opening issue security vulnerability refers ways jquery abused open possibility xss attack usually attaching unsanitized user input dom best guard vulnerabilities ultimately impossible guard overly critical bit ridiculous list vulnerabilities lowerlevel api like jquery wraps native apis always open abuse rather see warning update jquery suggests sanitizing user input nt anything worry likely related message says update jquery problem go away also affect request data crossorigin untrusted domains without specifying', 'date': '2018-01-22T16:58:23Z'}"
"24884",24883,"{'data': 'exception thrown caught jquery bootstrap mvc app bootstrap jquery use nugget update bootstrap application crashes immediately error exception thrown caught downgrade bootstrap everything works perfectly something nt understand definitely something wrong jquery bootstrap things issue template asked ticket provide test case test case test case simplest possible set code shows problem meager information sounds like new bootstrap nt compatible jquery however huge app lots code could due anything goal test case help identify problem without one ca nt much give exact place jquery crashes think would shorter faster way give wrong else give repro minimum requested probably nt going help need know got might want see effect changing jquery versions bootstrap versions trying browsers ok get back assume attach repro issue template said like case site like jsfiddlenet jsbincom easily try share ok fyi bootstrap documentation use jquery slim version everything fine codepen use latest bs jquery full version fine bootstrap switches bootstrap datetimepicker many things sure bootstrap jquery fine project absolutely nothing however case world repro soon getting error updated bootstrap looks like issue lies bootstrap jquery least default position said could look test case reopened test case', 'date': '2018-01-20T23:52:36Z'}"
"24885",24884,"{'data': 'bundled packagejson dependencies empty leads npm errors description packagejson dependency npm static version npm nt compatible npm terms npm dependency dezalgo link test case none mgol since commented packagelock pr maybe something look getting fixed oops thanks report wonder happened cc timmywil problem version deps object empty tag main jquery repo also extra deps fine object empty thanks banged head hour wondering kept getting npm errors banging head hour ca nt help notice dependencies exactly match mention perhaps something went haywire release process would account appearing updates thread yea weird nt know happened release dependencies jquery dependencies know happened release using npm adds dependencies installed dependencies used needed add option prevent immediate release fix timmywil used current master project npm stuff fixed frankdspeed generated tag timmywil probally anyway need wait upgrade applications broken many packages requiring jquery latest doomed need wait ca nt hotfix much packages hope get done learnd also backup nodemodules folder dev frankdspeed fine need get new release released checked packagejson dependencies empty expected fine apologize inconvenience pulled issue indeed fixed side thanks also confirm fixed installed materializecss latest timmywil thank jquery team fast reaction happens developers know', 'date': '2018-01-19T21:35:30Z'}"
"24886",24885,"{'data': 'bundled description link test case', 'date': '2018-01-19T21:33:21Z'}"
"24887",24886,"{'data': 'get image dimensions new created element description want create new image element get dimensions information fails jquery works javascript wonder ca nt get information jquery improper usage code javascript var src jquery fail case get image dimensions var src src load function consolelog jquery output jquery javascript javascript result expect var new image src load function consolelog javascript output javascript run code chrome firefox fail first jquery case link test case testing environments jquery ubuntu firefox chrome elements document thus nt measurable width height example consider document css rule actual width height document would match natural dimensions image want value browser provides properties use', 'date': '2018-01-19T19:07:12Z'}"
"24888",24887,"{'data': 'ajax change url consider following ajax request call correct url like consider request expected url called strange behaviour call instead expected sure whats happening tried settings working working leading call jquery chrome macos might actually chrome bug since also call wrong url method post filed bug chrome issue tracker ca nt reproduce using xmlhttprequest example using chrome linux mint', 'date': '2018-01-19T16:04:06Z'}"
"24889",24888,"{'data': 'order script executed hello created script executed order script times log console index value datas alert array lenght alert get run amp get function script times log console index value datas alert array lenght times get run amp get function nt know wrong maybe anyone help regards szymon ajax requests asynchronous everything correct please look programming help stack overflow', 'date': '2018-01-18T11:35:08Z'}"
"24890",24889,"{'data': 'question public class registerviewmodel required datatype datatypeemailaddress stringlength errormessage must least max characters long minimumlength display name 邮箱 public string email get set next viewcshtml model registerviewmodel viewdata title register viewdata title create new account register section scripts await htmlpartialasync validationscriptspartial question eventhrouth submit form data also remind danger user name must letters digilts named username input nt look like jquery issue please look help stack overflow found fault thank u', 'date': '2018-01-18T04:19:30Z'}"
"24891",24890,"{'data': 'support object selector description support object selector js successfully setup event handler document selectstart dragstart document function e epreventdefault unsuccessfully remove event handler document selectstart dragstart document looks like problem second argument work string link test case problem nt passing trying trying remove event handler expecting looks like delegated event handler attached delegated turn possibility select text page turn possibility select text page yes delegated handler js document selectstart dragstart function e epreventdefault document selectstart dragstart actually nt know source taken think work work also currently work nt work way probably get help stackoverflow since nt bug may remove support', 'date': '2018-01-16T11:33:33Z'}"
"24892",24891,"{'data': 'jqueryfnload uncaught typeerror urlindexof function description getting error getting traced jqueryfnload function jqueryfnload function begins jqueryfnload function begins lines removed new version error occurs try run snippet code definition load within iframe creation causing typeerror link test case jquery migrate help find problems', 'date': '2018-01-15T16:21:43Z'}"
"24893",24892,"{'data': 'jquery nt optimize attribute selector contains selector works noticeable faster since optimized documentqueryselectorall asking faster sure bug issue problem contains problem jquery nt parse idxyz part idxyz contains xyz valid selector queryselectorall takes slow path oh related ticket sure impact real code timings likely based tight loop high iterations correct still nt see reason make code pessimization greatly improved simple regex change sure give try want keep mind additional regex complexity nt reduce performance common case course btw option store parsed selector structure current jquery implementation parses selector string time runs plumbing already sizzle case complex selectors nt want reimplement inside jquery optimize rare cases long term proposed merging sizzle jquery anything think would eliminate need many optimizations btw expected time release thank opening issue trying pull valid bits running separately idea gets extremely complicated besides one selectors potential check lot stuff slow doubt running attribute part separately would make much difference performance slow part invalid part much except recommend giving big block text jquery idx find contains works much faster one selector due optimization queryselectorall first part easily split optimized jquery going hard much faster would definitely run qsa would less text working learning site recommends things like sizzle extensions reason however sizzle already certain simple selectors like id class already take care common cases nt think worth adding attribute also nt think realize implications behind suggestion going run every valid part selector qsa matches selectors like complete rewrite sizzle honest exactly may happen future roadmap thing simple enhancement well yes always thought jquery working way holds parse tree cache parse selectors time surprise see naïve implementation btw performance issues reality due bad design going make drastically less queries', 'date': '2018-01-14T19:43:11Z'}"
"24894",24893,"{'data': 'jquery nt optimize identifier backslash jquery nt optimize selector x documentgetelementbyid x problem regex nt recognize backslashes escape character intentionally leave complex cases alone nt want reimplement escaping logic situations real code lack optimization makes difference typically examples given show sort tight loop selecting things times similar nt realistic yes real word scenario need use selector id containing colon case simple getelementbyid times faster jquery btw queryselectorall nt think logic complex also many css selectors parsers used inspiration know want something literal characters would need escaped css use solution means need parse selector make optimization path exactly jquery thanks opening issue idea behind catch common cases meant get overly complicated one common cases fast enough actually sizzle already right regexp reason jquery nt use sizzle implementation miss thanks meant catch every selector quick pass make common selectors like id class bit faster sizzle handles rest much complicated regex patterns meant match selector spec timmywil small addition handling escaping small enough instead w w w w w w please review new pr smaller change', 'date': '2018-01-14T19:39:24Z'}"
"24895",24894,"{'data': 'small probability work environment jqueryversion chrome latest firefox latest example view codepen description sorts array dom elements place duplicates removed note works arrays dom elements strings numbers api doc', 'date': '2018-01-11T11:38:05Z'}"
"24896",24895,"{'data': 'performance greatly improved combined selectors js aperformancenow lt jquery div span divspan input label bperformancenow consolelog ba separate selectors js aperformancenow lt jquery div jquery span jquery divspan jquery input jquery label bperformancenow consolelog ba documentqueryselectorall combined js aperformancenow lt documentqueryselectorall div span divspan input label bperformancenow consolelog ba documentqueryselectorall separated js aperformancenow lt documentqueryselectorall div documentqueryselectorall span documentqueryselectorall divspan documentqueryselectorall input documentqueryselectorall label bperformancenow consolelog ba documentgetelementsbytagname works way faster js aperformancenow lt documentgetelementsbytagname div documentgetelementsbytagname span documentgetelementsbytagname divspan documentgetelementsbytagname input documentgetelementsbytagname label bperformancenow consolelog ba thanks opening issue microperformance improvement real use case performance good enough almost cases nt actually see suggestion improve jquery', 'date': '2018-01-11T11:30:58Z'}"
"24897",24896,"{'data': 'add tooo sloooooow add slow happens adding lot elements previous selection problem fixed many ways also stupid ways give super results really frustating chrome latest version firefox slower responds good manner check link sample adding rows rows takes seconds wait bit result alert stupid second fix respond istantly cache comment first part want jsfiddle difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements rare anyway solution exactly would recommend learning site ca nt remove thanks report jquery doc imo davide messaggio originale oggetto jqueryjquery add tooo sloooooow da timmy willison jqueryjquery cc sdav author difference add also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove uniquesort add receiving authored threadreply email directly view github mute thread apiversion publisher apikey name github entity externalkey githubjqueryjquery title jqueryjquery subtitle github repository mainimageurl github url difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove action name view issue url', 'date': '2018-01-11T07:49:49Z'}"
"24898",24897,"{'data': 'jquery create html graph hi team new jquery want good document learn getting actually want display html bar chart takes input excel sheet generate graph bar chart display html time open html read excel sheet generate graph facing lot issue able read data plot graph please help direct get knowledge read demo example understand work thanks ashissh thanks opening issue however repo bug tickets feature requests find support stackoverflowcom jquery gitter timmywil thank guiding redirecting', 'date': '2018-01-09T13:03:08Z'}"
"24899",24898,"{'data': 'vulnerability jquery hello please would like test security project scan found vulnerability jquery vulnerable known vulnerabilities affecting installed version jquery framework exchanges data using javascript object notation json jquery framework exchanges data using javascript object notation json without associated protection scheme allows remote attackers obtain data via web page retrieves data url src attribute script element captures data using javascript code aka javascript hijacking suppress thanks thanks opening issue jquery lowerlevel library convenience wrappers around native apis jquery vulnerable things jquery would compromise security site like things vanilla js known vulnerabilities many ways ridiculous ultimately users responsible security sites jquery still best keep users making silly mistakes jquery misused abused many ways would impossible impenetrable safeguards point may actually nothing wrong site tell warning nt help thanks timmywil response please nt show jquery vulnerablity example maven project found suppress code node js project scan tool may option prevent specific vulnerabilities shown know unaffected beyond scope jquery bug tracker though would need look docs', 'date': '2018-01-08T10:21:56Z'}"
"24900",24899,"{'data': 'jquery breaks droppabledraggable subpixel widthheight description issue using jquery draggable elements width height subpixels eg using em rem units draggables fly back source position even configured snap stay target expected behaviour snap remain target browsers affected recent chrome firefox ie link test case minimal test case reproduce drag white boxes onto drop targets gt bounce back bug css remove subpixels line gt works expected leave subpixels swap jquery library first html lines gt works subpixels use different values subpixels get different failures draggable works one works etc seems like jquery ui bug jquery one subpixel values becoming important highresolution displays seems like would nt want fix ui bug truncating values jqueryui bug reverting previous jquery library fix yes agree truncation would nt solution reason major version bump make changes added things could potentially break code semver intends signal fractional dimensions documented migration guide thank posted jqueryui forum', 'date': '2018-01-07T23:08:50Z'}"
"24901",24900,"{'data': 'jquery cache cause memory leak hi already asked question one replied spa page events bind using jquery page load diagnosing app memory leak issues testing navigating pages back forth looking heap snapshot many detached dom trees caused jquery cache size growing navigating pages potential memory leak also tested unbinding events page load unbinding events cache size stable need unbind every events every pages cache holds dom even dom removed document need add info like test fiddle ca nt say sure without test case looks like rebinding handler navigation single page full page reload previous handler would still case expected behavior remove element jquery somehow jquery know get rid handler', 'date': '2018-01-05T13:18:36Z'}"
"24902",24901,"{'data': 'deferred fail throwing uncaught promise chrome odd behaviour jquery ajax interactions deferred fail deffered catch chrome firefox writing callback like ajax call fails called expected another error thrown browser shown inspector tools change behaviour operates expected uncaught promise errors also executes twice understand docs appears deferred fail deferred catch thing documented add handlers called deferred object rejected subtlety two methods missing even docs suggest using fail correct behaviour done meantime replacing fail catch seems solving issue thanks report please provide test case jsfiddle js bin show issue reopened test case', 'date': '2018-01-05T04:18:50Z'}"
"24903",24902,"{'data': 'syntaxerror jquery elqueryselectorall x line ie resolve error jquery javascript library ie syntaxerror elqueryselectorall x inside code assert function el elinnerhtml thank opening issue however please follow bug report template provided clicking new issue unearthed old issue without test case specific problem likely need investigate issue stackoverflowcom', 'date': '2018-01-04T18:50:38Z'}"
"24904",24903,"{'data': 'infrastructure grunt commands amp check work ticket need check new maybe old ones grunt commands fit example work jquery builded execute though still work grunt commands like appear work commands maybe others either fixed documented removed order confuse user documentation needs provided readmemd side note wonder java still required order execute tests need provided additional documentation provide reference cc krinkle side note wonder java still required order execute tests considering chrome amp firefox nt supported java time tests work java required succeed also removed tests element causing problems outdated java alerts ie markelog mgol work fine note however important difference others uses chromeheadless starts ends automatically singlerun whereas others bring karma dashboard browser choice click debug start tests pressed debug press debug documented gruntfile idea want run specific browser want able debug eg set breakpoint rerun tests extra step pressing debug probably nice karma could use improvement consider alternative without debug mode browser visually open see tests run anything qunit devtools like breakpoints rerunning individual tests karma close browser soon tests finish unfortunately enabling debug mode meaning browser stays open starting automatically mutually exclusive step start debug manually nt see good way change perhaps compromise rename task hint desired also add subtask starts chrome firefox without debug mode think next bug report karma closes browser something answer use karma chromedebug instead scripts use seem working properly gruntfile serve docs nt think need put readme lists starter', 'date': '2018-01-04T15:58:25Z'}"
"24905",24904,"{'data': 'grunt commands amp work executing commands mentioned header tests run cc krinkle think merge ticket need inventory grunt npm commands want userfacing ensure work wish command updated description ticket', 'date': '2018-01-04T15:57:23Z'}"
"24906",24905,"{'data': 'ca nt download jquery download install newest version jquery install software uncompressed development jquery greeted error like one shown attachment thank consideration kevin error message says trying execute jquery using windows script host meant run way include downloaded file html page open html page browser save downloaded file html file kevin', 'date': '2017-12-31T17:54:52Z'}"
"24907",24906,"{'data': 'new method bind listener description function f consolelog document click f document click f click document appear twice way thinking adding new method like method binds callback function nt exist queue callback functions thanks proposal api close core would nt want end lots similar apis thing slightly different way method written small jquery plugin nt see happening core thank prompt reply michał gołębiowskiowczarek lt notifications githubcom thanks proposal api close core would nt want end lots similar apis thing slightly different way method written small jquery plugin nt see happening core receiving authored thread reply email directly view github mute thread', 'date': '2017-12-28T11:08:41Z'}"
"24908",24907,"{'data': 'windowload event getting fired open link new tab opening link new tab using ctrlclick simultaneously opening tabs pages getting working browser chromium version built ubuntu running linuxmint code could possible issue even tried luck basically want fire event whole page completely loaded problem binding onetime events registration happens fire listener never invoked looking jquery callback invokes callbacks even document already loaded would give way fire event whole page load let know exactly use stackoverflow thing certainly jquery bug report apis working always take look followup stackoverflow needs', 'date': '2017-12-28T10:42:38Z'}"
"24909",24908,"{'data': 'jquery width function converting description seen getting width value calculating tab width would nearly browser width deeply gone figure converting value taking value getcomputedvalue styles computed getting time offsetwidth using pfa screenshots link test case please provide test case jsfiddle jsbin guess issue looking screenshots also wrote issue description html comment invisible please edit move description outside comment reopened valid test case testcase want see clearly converting using parsefloat issue use come check width using clientwidth goes getcomputedstyle get width later convert px bharatnishad jsfiddle js bin run clearly see expect get screenshot middle execution nt really help much nt know code getting see weird situation use come middle execution functionality kept element display none middle event handler file execute make true try compute width browser jquery width functionality get two time goes jquery width function get correct browser width happens time time get width call many times width function rest time may get correct width even time calling width function produce jsfiddle online see issue think time elemoffsetheight populate try take width computed style width function means jquery width function val name width elemoffsetwidth elemoffsetheight styles getstyles elem val lt val null fall back computed uncomputed css necessary val curcss elem name styles try get getstyles var getstyles function elem return elemownerdocumentdefaultviewgetcomputedstyle elem null function curcss elem name computed var width minwidth maxwidth ret style elemstyle seen elemownerdocument style attribue width taking value ret computedgetpropertyvalue name computed name ret nt know setting width windowdoucment take style width attribute hope gave enough information want live demo arrange video call show volunteer time project lack capacity debug full application code especially video call provide succinct test case demonstrating problem nt enough information even verify one', 'date': '2017-12-27T05:42:01Z'}"
"24910",24909,"{'data': 'backpress event problem android phone framework use framework hybrid application template android amp ios devices also used cordova framework project android native back button pressed framework header titles collapsed application attached application gif image older title collapsed last selected page text android device tell solution fix issueelse possible solve jquery code described complex project many moving parts code could know issue also seem anything jquery please look programming help stack overflow', 'date': '2017-12-26T10:36:17Z'}"
"24911",24910,"{'data': 'jquery slim version npmjscom description version jqueryslim jquery npmjscom link test case jquery downloaded npmjs already jquery slim inside', 'date': '2017-12-25T16:19:41Z'}"
"24912",24911,"{'data': 'check february amp year wise input field validation jquery validate february month days validation jquery input field hybrid application possible check feb amp year wise pls tell men solution please ask help stackoverflow', 'date': '2017-12-23T08:44:21Z'}"
"24913",24912,"{'data': 'scrolltop 在mac safari上 document scroll function html body scrolltop description link test case 当html', 'date': '2017-12-20T15:30:23Z'}"
"24914",24913,"{'data': 'method resolving version ajax description resolve method says method undefined browser console link test case could possibly determine bug little information given template followed please ask help stackoverflow', 'date': '2017-12-16T23:01:39Z'}"
"24915",24914,"{'data': 'connecting svg shapes example working tried latest example blog post connecting svg elements together working see endpoint dots showing svg elements connected together click endpoints disappear ideas working offsetcalculators sizecalculators need updating thanks jquery bug tracker nt anything common ys sorry posted wrong repo thanks checking', 'date': '2017-12-13T13:22:44Z'}"
"24916",24915,"{'data': 'jqueryparsejson error empty string description calling jqueryparsejson function empty string argument crashes probably due changes jsonparse function tested chrome fix link test case intended supposed work exactly besides deprecated use mgol found issue recieving empty response ajax post since tried parse empty response crashed function new reporting issues github maybe nt right approach reporting issue look tomorrow pinpont scenario issue reproducable post eywenn given description though think bug stackoverflow first stop questions dmethvin return success message server instead nothing stackoverflow first stop google search leads post highest ranked answer telling shortest valid json strings removed fix js file returning empty valid json instead thanks feedback', 'date': '2017-12-13T12:23:26Z'}"
"24917",24916,"{'data': 'future jquery hi wanted take opportunity enquire future library plans going forward terms updates support last years fair say landscape changed frameworks including angular react vuejs introduced new paradigm writing javascript ways made jquery redundant effect encouraged loaduse library also inline observable decrease number releases pushed march shipped july whereas blog posts one year ever since silence time seen number major changes javascript ecosystem including exhaustive list promises arrow functions spread operator asyncawait generators fetch api replaces ajax template literals letconst classes changes add one biggest rewrites library seen date question whether ajax still required fetch supported major browsers said main question plan going beyond regards jquery lie passing year already aging codebase nt touched years continues common across web delightful see project attempted try remove parts longer required focusing keeping absolute essentials focusing extreme performance modern codebase new language features added browser thank look forward comments issue may generate happy coding first thank question let start pointing team decided ago release slow steady pace translated releases year coming soon noted bombard users releases especially breaking changes releases intentional otherwise added workload users recommending upgrade release potential affect users websites entire plugin ecosystem also volunteers demanding jobs nt work jquery every week regards features right note jquery framework describe elegant lowerlevel api make working dom easy across browsers jquery get used alongside robust applicationbuilding solutions like angular reactredux main usage probably still lies within websites rather web applications make distinction noted generally pay attention remove rather features add info guidelines adding new features laid said plan release jquery subsequent patch releases soon minor features added version bigger plans jquery upcoming major releases includes complete rewrite using next generation javascript turn requires update build system want use modules need way keeps final size identical smaller original rewrite speed framework keep track performance regressions common operations allnew event module design detailed get done new design allow us support new native options like passive event listeners right jquery adds one handler per event type takes care call user handlers manually way supported old ie becoming plausible add native handler every user handler let browser work keep track larger plans roadmap thanks question go ahead close since bug feature request feel free continue discussion hi timmywil thanks much reply expecting one soon also mind closing issue since elegant response answers main points concern however looking contributors graph observe trends today years later obvious drop occurred take last year see total commits covering period additions deletions comparing likes angular react vuejs paints pretty telling picture course know numbers everything think project size commits year single blog post much community interest support maybe reveals community nt see staple web okay maybe right focus library cares essential removes left cruft ajax animations etc syntax lovely maybe place redefined jquery likes angularreactvue cheers thanks informative reply projects mentioned much larger scope jquery core nt really worth comparing certainly drop number commits believe still strong competent team fairly active community irc gitter angular react similar projects gained wide usage us story quite worldwide words think definitely truth saying jquery nt going anywhere long jquery still used vast majority web sites opposed web apps including top million sites traffic according builtwith many web apps part crawlable web builtwith monitors many big frameworks focusing jquery people think majority feedback get changes compatible previous versions regardless whether previous behavior documented long way saying people nt fond changes think mistake someone building angular vue etc use dom manipulation jquery common use pull domstateful plugins defeat reason using frameworks first place communities building widgets work properly framework instead gt jquery people think reason made issue due lack communicationactivity roadmap going forward regards jquery modern web features agree jquery nt going anywhere hope codebase ages even adapted jquery takes advantage new web platform features think agree xhr day windowfetch native replacement think much said apart wait watch happens coming years progress great thing thankful plethora frameworks chose building web sites apps doubt jquery going away anytime soon reason reason c sqlite going away old hype always exist current shiny new thing sometimes justified sometimes substitute confidence knowing using seasoned stable thoroughly tested well documented library huge install base knowledge base plugin ecosystem usual always question choosing right tool job point still many jobs jquery still right tool probably continue timmywil thanks explanation future jquery appreciate efforts especially full time jobs terms jquery release thinking end year dotnetshadow yep thinking least getting beta end year many things jquery made much easier back nt framesworks jquery nt framework compare angular dying react vue silly angular jqlite built projects worked added jquery since react newer versions angular work dom completely different used super handy use jquery selectors rarely use selectors anymore need use easy standard javascript ajax used another popular area jquery came handy promises newer versions javascript nice clean easy way ajax calls promises built using fetch promises newer javascript versions need use jquery babel also popular typescript allow us cross browser compatible something jquery really used help seeing comparisons frameworks makes wonder informed javascript general comparing jquery react like comparing comparing bicycle sports car issue jquery dropping continue drop popularity simply javascript gotten lot easier work frameworks might also reason jquery nt used much simply frameworks lot built functionality combined newer versions javascript yet see benefit using jquery woah hold yoar hoarses bruvas jquery rawks like nun ok enough alphabet riddles mean jquery still currently highly relevant far building customized kickass spas function like standalone software web pages jquery cloud joy last years reason able code less design dealt javascript good ol days netscape ie wars grey hair lol long time ago times would design applications flash actionscript dhtml remember web pages back becoming dynamic less boring besides orgasmic headaches crossbrowser compatibility lol code base long wayyyy tooo lengthhhhyyyy much much later surpriiiise jquery arrives goal boldly go coder gone talk success jquery among awesome things introduces less code normalization bingo javascript library removed headaches crossbrowser compatibility relevancy jquery today equals facility designing code major reason adopt jquery stay closest native code without constraints frameworks emphasize allows customize ux way imaginable absolutely necessary designing prototypes another major reason jquery usage coding interpreter legible understandable hence intuitive explaining code within code bright let minifiers assorted cleaners job prepping file production one may gather modern browsers offer pretty much latest javascript jquery becoming redundant far crossbrowser compatibility issues jquery offers much foresee future jquery align sturdy crossbrowserness priorities userfriendly library possible allows among things novel quickest element manipulation traversing many frontend designers like want delve interactive spa coding web pages may full knowledge javascript none simply want design visions code effortlessly without steep learning curves constraints short shelf life frameworks respect jquery way less overwhelming designer needs expert programmer learning using jquery jquery remains relevant us folks awesome spas prototypes take look currently wwwdanavangardcom let hope jquery withstands wrath time keeping core features offering novelty instead redundancy jquery way da jquery это рак который порожает мозг и отупляет резига ждут ад и анальная пенетрация за то что он породил миллионы дебилов gt angular dying quite patently incorrect babel also popular typescript allow us cross browser compatible something jquery really used help make sense using babel typescript typesjquery feeling lot misinformation floating around previously told new version release every months yet nt one almost year stand together claims jquery dying next jquery version released close release coming weeks whether jquery dying question often releases whether still enough users warrant maintenance latter true long time come anyway think issue served original purpose', 'date': '2017-12-11T21:40:53Z'}"
"24918",24917,"{'data': 'check current date future dates validation using framework android amp ios hybrid application mobile also created sample web application using html amp jquery plugins showed current date time text field html page attached sample input field screen shots issue manually entered invalid time save value time showed error example dec pm correct time format value correct modified time dec pm dec pm actually manually entered time wrong validation showing solve problem using jquery check current date time invalid datetime validation check application related jquery tool also best look help stack overflow questions bugs report', 'date': '2017-12-08T11:53:51Z'}"
"24919",24918,"{'data': 'unable set opacity css property chrome description using elm css opacity value nt work chrome least problem part jquery code checking opacity support test styleopacity case chrome french locales value opacity note comma instead point jquery use opacity workaround set zoom style may chrome bug instead thanks anthony version jquery using please provide test case jsfiddle similar reopened test case', 'date': '2017-12-07T23:25:35Z'}"
"24920",24919,"{'data': 'issue outerheight outerheight true jquery possibly hi strange one using jquery two machines running linux using chrome hadhave issue outerheight calculation jquery one machines element height set css also showed element inspector chrome instances however jquery returns incorrect outerheight outerheight true one machines lot head scratching comparing things eventually realised issue latest version jquery possibly branch case rolled back jquery machines reporting correct value outerheight outerheight true seems like pretty clear regression let know help regards jerry thanks opening issue however need reduced test case order assess issues daflip super helpful thanks serbanghita actually breaking change applies window performing outerheight div element attempt create reproducible version problem also got something machine using machine happens wo nt able reproduce case share piece code tests suites manually want check reopened test case', 'date': '2017-12-07T20:25:05Z'}"
"24921",24920,"{'data': 'jqueryparam improvement using jqueryparam function libraries noticed throw errors input object functions expect input values example lets say library extends string class adds following prototype string class application stringprototypehascharacter function char char throw char expected var idx thisindexof char return idx gt added code verify input value defined throw error higher functions handle fairly normal seen behavior ton code years pass string jqueryparam function try run function without passing value using processes line code spent half day helping someone track bug app came situation make jqueryparam function robust see two possible solutions wrap valueorfunction trycatch later code looping prefix values use proper loop instead foreach least string values would reduce number iterations loop thus making faster would also prevent error occurring nt use jquery often leave community decide best approach improve extending prototypes nt particularly builtin ones bad practice must use set actually nt fairly common especially libraries fill feature gaps older browsers nt point thread point pass object function jqueryparam function throws error input values passed function param function fail wrapping valueorfunction trycatch would handle situation make param function bullet proof want throw exceptions ca nt serialize input signals developers something wrong case two things builtin prototypes passing string documentation indicates need array plain object jquery object', 'date': '2017-12-07T19:46:35Z'}"
"24922",24921,"{'data': 'event handlers executed removal description attach two event handlers event type target remove second handler inside first one still executed regardless removal nt happen addremoveeventlistener make pr link test case thanks opening issue however expected behavior use keep second handler executing dup btw even though someone looking behavior might consider bug fix change suspect would nt dare next major point likely redone jquery event plumbing one dom event per jquery event would fixed due course bunch assumptions people based current implementation broken well thanks clarification', 'date': '2017-12-07T14:45:36Z'}"
"24923",24922,"{'data': 'selector jquery object fninit return var selector var b b false selector jquery object return return save memory thanks opening issue stackoverflowcom good place questions', 'date': '2017-12-07T13:31:09Z'}"
"24924",24923,"{'data': 'delegated mouse event targeted svg element caught description using delegated version mouseevent event recognized edge possibly ie flavors either event svg element pointing externally defined symbol event recognized reference svg symbol pointed attribute declared inside delegation target pointed eg example first element targeted would work also work event delegated eg first html structure work believe ie set target event weird probably representing shadowelement element uses nt know ie much first time encounter weird object nt think part standards thought might want handle case link test case mean recognized work edge microsoft edge windows example logs target dmethvin recognized mean script checks event gone p element work case work mean jquery event created clicking use element unfortunately nt access computer experienced issue right ca nt give exact revs happens edge machine happens edge ie see edge thought related explicitly decided jump instance shadow tree host tree event processing upon investigation looks like browser bug tested browserstack browser jquery event handler invoked ie svgelementinstance edge edgehtml svgelementinstance edge edgehtml svguseelement yes edge edgehtml svgrectelement ancestor chromium svguseelement yes firefox svguseelement yes edge almost certainly wrong probably switch chromefirefox model targeting host node could live instead reverting older behavior targeting instance node previous versions status design understand edge behavior hard deal probably stay long anyway one handled quite easily think doubt ms going patch browser unfortunately still used corporations care much since particular case could workaround disabling pointerevents elements cases could real problem concept shadow tree nt established time nt sure event propagation inside svgelementinstance nodes also protective performance hot code path seeing standard behavior comfortable jumping straight outermost host tree remember nest shoot tree delegate might outermost might require jumping confused possibly related one workaround seems per maybe simple enough workaround nt need change anything jquery dmethvin expected target still understand big deal warrants tons ugly patches general jquery supports events bubbling svg events attached svg elements workaround seem fix issue shown fiddle delegating works firefox chrome also pointerevents trick might said comment time cases wo nt ok wontfix issue known registered edge case jquery indeed main lib used people deals complex svg worth jquery user would expect jquery match behavior behind scenes nonms browsers aka kaiido suggested svg sprites gaining momentum days important event delegation works mouse events fired inside svg elements ieedge', 'date': '2017-12-06T08:16:27Z'}"
"24925",24924,"{'data': 'wrapall removes checked attribute input internet explorer code goes like sample fiddle notice first checkbox checked however running wrapall longer checked appears html serialization issue ie still see attribute set expected', 'date': '2017-12-05T13:16:42Z'}"
"24926",24925,"{'data': 'dom inserted scripts support script type module description using jquery version chromium trying use native modules use code like jquery execute script link test case test case thank opening issue agree issue worth addressing need test case actually pass address excuse nt expirience plunker service forgot freeze test case', 'date': '2017-12-04T08:22:58Z'}"
"24927",24926,"{'data': 'edge fails attributes test flaky see also since started testing edge attributes often fails always first seen oct still today progress update set edge locally seeing failures investigate', 'date': '2017-11-28T18:58:12Z'}"
"24928",24927,"{'data': 'edge fails css test last passing testswarm job jqueryjquery sep first failing testswarm job also first job runs edge oct ran edge css failure hmm mail claims ticket refered safari well also still fails tests core ones precise moved separate issue though mgol yeah edited ticket creation ticket previously mentioned support test failing safari started testing already fixed', 'date': '2017-11-28T18:52:07Z'}"
"24929",24928,"{'data': 'events bound inline runtime automatically deleted document load description full description debugging process tldr binding input events runtime inline html events bound successfully runtime according event parent removed readded elsewhere dom using works replacement jquery alternatively setting prevents bound events deleted link test case need use instead course', 'date': '2017-11-27T10:02:17Z'}"
"24930",24929,"{'data': 'process bar nt work edge hello edge process bar nt work process event fire upload completed even use big file', 'date': '2017-11-27T02:05:58Z'}"
"24931",24930,"{'data': 'try see klg ok see description link test case', 'date': '2017-11-26T01:45:22Z'}"
"24932",24931,"{'data': 'animate callback function executed animation completed latest jquery hi upgraded jquery version code inside animation callback function executed animation completed executes next line click function p slidedown function consolelog inside consolelog outside jquery output jquery output sample link jquery sample link jquery expected result please let know concern thanks help advance regards keerthana appears case code changes affecting likely outcome race condition jquery animations resolve synchronously millisecond duration short enough almost always elapsed time check completion first tick computer ms seems always avoid synchronous completion ms pretty much coin flip however convinced problem jquery require asynchrony recommend using example inside completion callback also reconsider short animation first would probably cleaner set properties immediately without animation construct promise asynchronous handling decided meeting leave open hopefully abandon synchronous resolution updating jqueryfxstart schedule first tick zeroduration timeout also fix stutter animating collection first element gets head start', 'date': '2017-11-24T08:46:21Z'}"
"24933",24932,"{'data': 'jquery multi select issue hi need use jquerypluginformultiselectlistwithcheckboxesmultiselect application ie plugin supporting please help code snippet viewbagtitle home page select multiple multiselect columns placeholder select options thanks divya jquerypluginformultiselectlistwithcheckboxesmultiselectzip jquery repository jquery multiselect repository report issues plugin plugin authors also jquery longer supports ie version longer provide support older versions', 'date': '2017-11-23T13:08:03Z'}"
"24934",24933,"{'data': 'errors ff quantum get web console following messages loading jquery syntaxerror test equality mistyped assignment weitere informationen referenceerror reference undefined property delegatetype weitere informationen referenceerror reference undefined property nodetype weitere informationen syntaxerror test equality mistyped assignment weitere informationen referenceerror reference undefined property delegatetype weitere informationen referenceerror reference undefined property focusout weitere informationen referenceerror reference undefined property nodetype weitere informationen referenceerror reference undefined property triggered weitere informationen referenceerror reference undefined property offsettop weitere informationen referenceerror reference undefined property triggered weitere informationen referenceerror reference undefined property result weitere informationen referenceerror reference undefined property type weitere informationen referenceerror reference undefined property uniqueid weitere informationen referenceerror reference undefined property traditional weitere informationen referenceerror reference undefined property username weitere informationen referenceerror reference undefined property weitere informationen referenceerror reference undefined property weitere informationen referenceerror reference undefined property altkey weitere informationen referenceerror reference undefined property start weitere informationen referenceerror reference undefined property disabled weitere informationen could possibly debug test case copypaste information firefox console close please create new issue following instructions issue template ps firefox quantum ubuntu firefox windows say nothing maybe browser bug option thanks answer', 'date': '2017-11-21T18:00:23Z'}"
"24935",24934,"{'data': 'ready callback might called load event fired description certain circumstances callbacks following code would called unexpected order windowaddeventlistener load function e consolelog native load true documentaddeventlistener domcontentloaded function e consolelog native domcontentloaded true function consolelog jquery ready window load function consolelog jquery loaded would always expect following output possible create test case output like switched personally would say order followed never happen given code might opinion based therefore nt want insist opinion think least adjust following section documentation point behaviour ready note although dom always becomes ready page fully loaded usually safe attach load event listener code executed ready handler opinion section currently targets issue snipped link test case would mistake assume direct connection window load event asynchronous jquery ready callback happen either order latter particular affected native events also jquery loaded ca nt even guarantee follows native domcontentloaded rely standards compliance browser given extremely unlikely add guarantees around behavior open issue pull request feel like documentation poor job expressing', 'date': '2017-11-21T06:55:34Z'}"
"24936",24935,"{'data': 'suggestion rename isarraylike function add comment description hi read corejs yesterday confused used real function used checking also find duplicate issues reported bugs like yeah find owner replied saying clear document type passed array object users fault read document still unreasonable use name would add comment function rename function determines object treated array determines across browsers tricky confusing sometimes however purpose aligns name also internalprivate function long understand passed think good', 'date': '2017-11-20T03:30:30Z'}"
"24937",24936,"{'data': 'angular uncaught referenceerror jquery defined object hello migrated app angular angular stops loading gives error uncaught referenceerror jquery defined object bootstrapjstransitionjs using angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic platformserver router angular cdk angular cli angular material angulardevkit buildoptimizer angulardevkit core angulardevkit schematics ngtools jsonschema ngtools webpack schematics angular typescript webpackhotmiddleware webpackmerge webpack latest jquery please advise please look programming help stack overflow', 'date': '2017-11-17T10:21:09Z'}"
"24938",24937,"{'data': 'jq find xml colon prefixes dont work xml file prefixes part try use prefixes get function xml done function xml consolelog xml work fine show full document nothing console dont work let xml find number text consolelog work fine many nodes show nodes prefixes like bb number aa number let xml find nodename bb number text let xml find nodename number text let xml find nodename bb number text consolelog nothing console dont work work find cant use prefixes children use prefixes nodename bb number nodename attribute none exists seems depending propertyattribute confusion older jquery come ancient stackoverflow thread maybe need look property try using instead', 'date': '2017-11-16T13:26:01Z'}"
"24939",24938,"{'data': 'jquery exception method offset window object getclientrects supported hi call window offset get exception saying object support method getclientrects sorry german using jquery following version duplicate think though maybe make obvious upgrade guide api page calling method way jqueryui influence reading manual help case change method like following elem return elements outside body body offset thisparents body length return top left return zeros disconnected hidden display none elements support ie lt running getboundingclientrect disconnected node ie throws error elemgetclientrects amp amp elemgetclientrects length return top left avoid unnecessary errors version jquery ui older jquery ui version wo nt work newest jquery silencing errors often bad idea masks errors hit another way yep right jqueryui maybe update though window document body would expect result change would produce best course call method objects since result rather na perspective avoid silencing errors exception like call method offset kind object may helpful explicitly point went wrong upgrade guide jquery migrate already cover case neither used reason come older version ui tried valid used nothing long using recent version ui jquery migrate old version problem goes away error handling hard yes everyone would love specific error messages every case case could could something right inside jquery says noticed code tried call valid using jquery ui please make sure using recent version jquery ui fixed problem library would times larger error messages like sprinkled around code nt put minified version save space people still run mysterious problems upgrade plus already something similar migrate nt used dmethvin nt thinking error messages embedded jquery rather mentioning upgrade guide entry offset far obvious makes invalid orand api page', 'date': '2017-11-16T12:10:29Z'}"
"24940",24939,"{'data': 'importing jquery electron applications tried import jquery electron application like usual nothing happened therefore searched online found solution stackoverflow add script beginning importing jquery typeof module object windowmodule module module undefined use import jquery electron see amp details', 'date': '2017-11-15T21:50:30Z'}"
"24941",24940,"{'data': 'wrong link description type definitions description add type definitions vscode want call jquery method link description redirects official jquery website wrong link test case notice end link nt maintain typescript definition file done report issues repo vs code depending bug', 'date': '2017-11-15T03:23:34Z'}"
"24942",24941,"{'data': 'jquery update question sure js file would need update website template stopped scrolling using wheel chrome browser already tried updating jquerymousewheeljs script nt seem fix nt want go replacing unneeded files someone could provide insight posted wrong nobody answers understand guessing decent amount contributors seen already hoping guess description scrollwheel scroll chrome link test case wwwelastikus please look help stack overflow place report bugs support requests', 'date': '2017-11-13T23:01:04Z'}"
"24943",24942,"{'data': 'base href getting ignored ajax request made description link test case', 'date': '2017-11-13T13:32:36Z'}"
"24944",24943,"{'data': 'jquery internet explorer edge isplainobject fails passed object created child browser window simple html page lets say opens new browser window using windowopen function loads another html page lets say creates simple object window note object created child browser window try execute main browser window following error thrown typeerror functionprototypetostring function object working fine jquery stopped working jquery using following versions ie edge ie update versions edge microsoft edgehtml tested windows windows firefox google chrome issue created zip simple demo reproduces issue attached zip contains readmetxt detailed instructions reproduce error jquerytestzip slightly updated sample demo jquerytestupdatedzip thanks opening issue however create test cases need local files would make easier us assess issue confirmed seems like edge bug possibly intentional one since appears limited opposed iframe windows going method parent window functionprototype rejecting child window function constructor plain objects child realm function object contrary ecmascript specification builtin function object one inherits functionprototype parent realm unfortunately nt think anything without introducing false positives andrewew ever figure workaround issue anyone know bug ever submitted microsoft awbuboltz workaround see substitute isplainobject function implementation jquery working fine described case', 'date': '2017-11-09T07:16:08Z'}"
"24945",24944,"{'data': 'ajax post network errors returned description using ajax post propagate network errors callback replicated using following code results blank error empty string see behavior internet connection post fails get error back empty string errors appear console ca nt anything error using chrome create jsfiddle shows bare xhr mean say bare xhr example using jquery thing seeing behavior guess issue actually jquery library underlying xhr tried looking error event also nt provide error either seems problem unsolvable alas', 'date': '2017-11-06T17:17:11Z'}"
"24946",24945,"{'data': 'ajax post json body bug send reason jquery send get request body request params en devtools shows duplicate', 'date': '2017-11-05T05:50:24Z'}"
"24947",24946,"{'data': 'tooltip nt work assigned function sure bootstrap issue jquery issue function creates divs appends inputs example placed js called functionsjs bodyjs html head title showing normal title bootstrap tooltip showing tried moving tooltip initializer top functionsjs wrapped document ready still nothing jquery github bootstrap github please open issue jquery issue closing', 'date': '2017-11-03T07:13:18Z'}"
"24948",24947,"{'data': 'getting cssstyle attribute order flex boxes fails large numbers description getting order css style element using jquery css method returned number exponentialized sp larger numbers leading errors order needs used computation eg move items around programmatically seems occur larger numbers possibly negative numbers well smaller numbers eg less sure actual range triggers problem link test case extracted actual code maybe bigger needs example sorry thanks opening issue lot code test case please try reduce future inlining code eg getting rid flexorder method removing nonrelevant logic amp test cases etc case able see going though returning returns see firefox amp safari nt change representation number could report issue chrome bug tracker please link thanks really nt see use case big number value might want handle problem way regardless nt think anything', 'date': '2017-11-02T15:24:22Z'}"
"24949",24948,"{'data': 'mouse wheel event eoriginaleventoffsety bug description hi use find mouse wheel scroll value set scroll neither bug link test case please create test case jsfiddle jsbin show issue hi use lasted version jquery happened', 'date': '2017-11-02T04:55:14Z'}"
"24950",24949,"{'data': 'replacewith method bug fall creator update edge browser hello using edge fall creators update html page global javascript code executed two times dynamically adding javascript working fine html thanks stéphane thanks opening issue however please create test case much convenient debugging test case might need fixed edge like dig make sure taking different code path browsers confirmed jquery ignores svg script content type evaluates everything ecmascript breaking mechanism use suppress early evaluation edge bug report thank investigating', 'date': '2017-11-01T13:03:01Z'}"
"24951",24950,"{'data': 'add main key file bowerjson description noticed performing command bowerwiredep plugin nothing happen html file entered bowerjson fixed like picture please fix entry already repo via publish npm amp bower one', 'date': '2017-11-01T10:47:48Z'}"
"24952",24951,"{'data': 'error installing jquery mac via terminal marcosmacbookpro marcomoretti npm install jquery marcomoretti usersmarcomoretti jquery unmet peer dependency popperjs npm warn optional skipping optional dependency gracefulfs nodemoduleslessnodemodulesgracefulfs npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency mkdirp nodemoduleslessnodemodulesmkdirp npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency mime nodemoduleslessnodemodulesmime npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency request nodemoduleslessnodemodulesrequest npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn optional skipping optional dependency sourcemap nodemoduleslessnodemodulessourcemap npm warn optional skipping optional dependency error eacces permission denied mkdir npm warn bootstrap requires peer popperjs none installed npm warn marcomoretti description npm warn marcomoretti repository field unrelated jquery packages causing errors package nt dependencies peerdependencies', 'date': '2017-10-29T18:31:36Z'}"
"24953",24952,"{'data': 'sending string literal jsonified data ajax results replaced garbage containing word jquery description submitting serialized object containing value string inside object gets replaced different data reproduce issue test case using latest version jquery latest versions firefox chrome extensionsplugins enabled link test case open developer console open network tab rerun fiddle request shown differing form data serialized data last part modified data underscore appears current timestamp suggesting actually part anticaching mechanism appending timestamps course one favoured techniques gone wrong duplicate closing per dave comment', 'date': '2017-10-29T12:09:23Z'}"
"24954",24953,"{'data': 'uncaught exception htmlunit somehow line causes htmlunit version crash hard jquery fully loaded processing website possible could please wrap trycatch assert comgargoylesoftwarehtmlunitscriptexception typeerror set property innerhtml undefined comgargoylesoftwarehtmlunitjavascriptjavascriptengine htmlunitcontextactionrun netsourceforgehtmlunitcorejsjavascriptcontextcall netsourceforgehtmlunitcorejsjavascriptcontextfactorycall comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunitjavascriptjavascriptengineexecute comgargoylesoftwarehtmlunithtmlhtmlpageloadexternaljavascriptfile comgargoylesoftwarehtmlunithtmlhtmlscriptexecutescriptifneeded comgargoylesoftwarehtmlunithtmlhtmlscript comgargoylesoftwarehtmlunithtmlhtmlscriptonallchildrenaddedtopage comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderendelement orgapachexercesparsersabstractsaxparserendelement unknown source comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderendelement netsourceforgehtmlunitcybernekohtmltagbalancercallendelement netsourceforgehtmlunitcybernekohtmltagbalancerendelement netsourceforgehtmlunitcybernekofiltersdefaultfilterendelement netsourceforgehtmlunitcybernekofiltersnamespacebinderendelement netsourceforgehtmlunitcybernekohtmlscanner contentscannerscanendelement netsourceforgehtmlunitcybernekohtmlscanner contentscannerscan netsourceforgehtmlunitcybernekohtmlscannerscandocument netsourceforgehtmlunitcybernekohtmlconfigurationparse netsourceforgehtmlunitcybernekohtmlconfigurationparse orgapachexercesparsersxmlparserparse unknown source comgargoylesoftwarehtmlunithtmlhtmlparser htmlunitdombuilderparse comgargoylesoftwarehtmlunithtmlhtmlparserparse comgargoylesoftwarehtmlunithtmlhtmlparserparsehtml comgargoylesoftwarehtmlunitdefaultpagecreatorcreatehtmlpage comgargoylesoftwarehtmlunitdefaultpagecreatorcreatepage comgargoylesoftwarehtmlunitwebclientloadwebresponseinto comgargoylesoftwarehtmlunitwebclientgetpage comgargoylesoftwarehtmlunitwebclientgetpage orgopenqaseleniumhtmlunithtmlunitdriverget orgopenqaseleniumhtmlunithtmlunitdriverlambda orgopenqaseleniumhtmlunithtmlunitdriverlambda javalangthreadrun unknown source caused netsourceforgehtmlunitcorejsjavascriptecmaerror typeerror set property innerhtml undefined netsourceforgehtmlunitcorejsjavascriptscriptruntimeconstructerror netsourceforgehtmlunitcorejsjavascriptscriptruntimeconstructerror netsourceforgehtmlunitcorejsjavascriptscriptruntimetypeerror netsourceforgehtmlunitcorejsjavascriptscriptruntimeundefwriteerror netsourceforgehtmlunitcorejsjavascriptscriptruntimesetobjectprop netsourceforgehtmlunitcorejsjavascriptinterpreterinterpretloop netsourceforgehtmlunitcorejsjavascriptinterpreterinterpret netsourceforgehtmlunitcorejsjavascriptinterpretedfunctioncall netsourceforgehtmlunitcorejsjavascriptcontextfactorydotopcall comgargoylesoftwarehtmlunitjavascripthtmlunitcontextfactorydotopcall netsourceforgehtmlunitcorejsjavascriptscriptruntimedotopcall netsourceforgehtmlunitcorejsjavascriptinterpretedfunctionexec comgargoylesoftwarehtmlunitjavascriptjavascriptengine comgargoylesoftwarehtmlunitjavascriptjavascriptengine htmlunitcontextactionrun somehow key thing nt nt enough information determine problem jquery try mask nt even make sense somehow resolved nobody else reported problem need provide information maybe error caused line precisely faulty implementation code htmlunit end need test case order assess possible issue preferably jsfiddlenet jsbincom', 'date': '2017-10-27T13:29:57Z'}"
"24955",24954,"{'data': 'microsoft edge returns error code request nt offer responsejson calling web service following manner chrome ff ie correctly reply error object includes proper responsejson attribute microsoft edge however reports status statustext error object nt contain additional information web server always responds error request raw response request according google chrome expected result parameter e microsoft edge exclusively tested browsers generates use bare xhr problem persist moment seems like reporting edge bug jquery one nt enough information standalone test case determine actual issue looks like could really edge bug created little test code browsers post status correct edge however get back status created ticket microsoft bug tracker far tell ca nt really work around obfuscate problem let edge fix', 'date': '2017-10-27T13:14:15Z'}"
"24956",24955,"{'data': 'use new fetch api feature request improvement hi think using new api already implemented major browsers used default function available explicitly deactivated using parameter major browsers supporting feature time familiar jquery codebase used maybe implemented due missing features eg full browser compatibility usage check documentation benefit using fetch feature done code work better advantages promise based streaming responses response promise provides methods text json blob arraybuffer newer means better idk sorry think random weird issue advantages sooo huge think implementation much cleaner one xmlhttprequest maybe fetch replace sometimes nt know could used compatibly within implementation already return promises via improvement expose somehow already performs functionality similar fetch data type methods think best way would via new api rather stacking new functionality top even clear whether would dependency jquery implementation could done plugin explore feature locking version mind nt think something core team manage build', 'date': '2017-10-22T10:59:48Z'}"
"24957",24956,"{'data': 'ie compatability issue application working previously later start using identifying symbol ie browser throwing error value property null undefined function object executing code ddlstate empty enough detail act report likely issue setup please look help stack overflow', 'date': '2017-10-20T15:18:49Z'}"
"24958",24957,"{'data': 'parsing html child throws error description throws exception instead properly parsing unusual html string documentation also nt seem mention usage impure html expect happen html string properly parsed null returned proper console message proper description docs actually happens exception thrown browsers affected mac firefox mac safari version jquery versions affected jquery jsfiddle latest jquery javascript library link test case strongly disinclined work around native behavior would willing submit documentation pull request', 'date': '2017-10-20T10:30:18Z'}"
"24959",24958,"{'data': 'offset inaccurate pinchzoomed bug reports expect happen offset return offset document origin actually happens browsers pinchzoomed browsers affected edge possibly safari future description open console clicktap input box pinchzoom page scroll top scroll back input box tap output always see background details issue offset adding getboundingclientrect relative layout viewport windowpagexyoffset relative visual viewport note chrome recently made pageyoffset relative layout viewport nt issue link test case thanks opening issue may need fixed browsers leave open time case anyone finds workaround workaround offset diff documentelement getboundingclientrect element getboundingclientrect recall correctly right offset element e calculated maybe bit esoteric edgecase page adds offset transform documentelement result relative transformed documentelement rather scroll origin differs current semantics maybe ok fixing fix might able incorporate smfr bokand would either like submit pr far css offsettransform problem already document dimensions accurate cases wo nt time next weeks', 'date': '2017-10-19T18:56:45Z'}"
"24960",24959,"{'data': 'featreq add new api tags past already asked forums peek css rules eg example css declaration like learned possible resp difficulties since css stylesheets tags becomes important access jquery jquery provide new api next release first step would sufficient modify check presence eg see sample find simply elements clause afterwards want remove elements coming jquery api make following possiblevalid div span remove since large performance difference native selectors processed via native method jquery selector extensions require sizzle code longer consider selector extensions however sizzle engine provides extension api lets add features like', 'date': '2017-10-17T13:32:35Z'}"
"24961",24960,"{'data': 'maybe better solution description created amazing tool write synchronous code even operation asynchronous alternative solution deferred maybe merged jquery link test case example code js cc function exec ctx resume project address good luck library', 'date': '2017-10-17T07:52:04Z'}"
"24962",24961,"{'data': 'inarray functions returns negative problem array function returns boolean backwards solution fixed idea sudenly original turns good', 'date': '2017-10-15T13:22:21Z'}"
"24963",24962,"{'data': 'attr rowspan return number hello suggestion return number attribute values converted numeric values sush rowspan dom returns attribute values strings must represent integers nt think want get business trying determine whether specific attributes proper numbers converting done similar things past example regretted', 'date': '2017-10-15T10:27:04Z'}"
"24964",24963,"{'data': 'using slideup page inner element makes whole page scroll instead description test case provided see upon arriving page items green column regularly sliding precise topmost item slideup making items underneath slide well topmost item moved green column reappears case everything looks good soon start scrolling page see items yellow column read text red column see every time green item slides whole page slides well effect see yellow red column look like going back reach top page point green column resumes intended motion link test case might understanding correctly concern elements move element height reduced completely normal layout works however could reduce test case bit large smaller test case would help us understand issue thanks forgot mention bug mostly seen chrome problem occurs scroll page point green column stops moving page scrolls back try reduce even already really slim version actual page see issue thanks looking repro steps use chrome visit link arrive page see green items cycling properly intended behavior scroll page bring item f g near top notice green column stopped instead whole page scrolling back problem behavior complaining coming chrome jquery seems related scroll anchoring probably simplify single operation submit issue bugschromiumorg nt seem anything us thanks time inputs continue investigating see pinpoint exact problem conclusion problem indeed caused scroll anchoring css style overflowanchor none applied first column example solves issue', 'date': '2017-10-12T23:13:51Z'}"
"24965",24964,"{'data': 'ajax interprets webserver errordocument valid javascript ajax called datatype script received document always interpreted javascript even actually document expected behavior evaluate received document webserver returns small example ajax url doesnotexistjs datatype script firefox shows message console syntaxerror expected expression got lt tries execute html document received webserver expected behavior ajax call functionally equivalent meaning nonexisting resources webserver give error message console log syntax errors says nt care server returns header data type jquery interpret way server returns different types case nt trust server content type call manually inspect decode request complete', 'date': '2017-10-07T08:35:38Z'}"
"24966",24965,"{'data': 'new element creation raw html string working expected description example run console javascript fnjquery gt text hello attr disabled true prop outerhtml gt hello lt ok text hello prop outerhtml gt lt expected text link documentation link test case would expect attribute nonempty value set way see jquery issue nt expect attribute text expect button text caption ah see misread sorry api page linked important second argument passed html string first argument must represent simple element attributes seems documented sure reason restriction though ideas team arturbaybulatov note docs explicitly discourage using pattern second argument convenient flexibility lead unintended consequences eg calling method instead setting size attribute better using method explicitly always works way logic worked feature put long ago code fell simple path tag nothing else looked second argument list attributes otherwise second argument element creation context documentation tries warn people away method signature entirely noticed nt use ah right clash signature', 'date': '2017-10-05T09:08:09Z'}"
"24967",24966,"{'data': 'ieedge submitting form using jquery submit causes submit handler forms detach using beforeunload description examples two forms first form foo submitted js button outside form second form bar submitted submit button within form bar also event handler submit event handler disable beforeunload confirmation dialog bar submitted without asking user confirm submit foo confirmation dialog displays choose stay page page remain unaffected button never pressed works fine pure js using jquery ie edge choosing stay current page causes onsubmit handler bar become detached somehow nt run bar gets submitted case means user gets another annoying dialog cause severe problems processing needs happen handler form submitted worked around code calling submit raw form element also solved attaching event handler using pure js using pure js entirely tested ie fail edge fail firefox pass chrome pass tests run link test cases jquery native reproduce issue submit foo click stay current page submit bar pass form submits fail confirmation dialog shows check console see edge generate exceptions versions jquery ca nt expected resolve', 'date': '2017-10-04T21:55:19Z'}"
"24968",24967,"{'data': 'css reports wrong widthheight chrome certain zoom levels jquery reports wrong sizes elements chrome certain browser zoom levels seems add element insets padding border width height although css width already includes insets demonstration provided test case two padding sides border sides css widthheight set boxsizing set visual size elements remaining inner space browser zoom level correctly reported zoom numbers get slightly changed probably due rounding errors instead always get css pixels affected browser zoom would expected numbers stay live real problem occurs reload page browser zoom width completely incorrect instead page uses values programmatic layout results wrong see effect demo css width height first copied second always size however start second much larger analysis analysis shown seems caused internal function csssupportjs wrongly sets internal property apparently happens rounding error case test div measured width equal expected value worse internal property calculated start zoom reset problem still persists completely reload page could observe problem following zoom levels firefox ie nt seem affected problem also jquery everything works fine browsers tests performed windows default dpi font size settings ugh confirmed git build think need something like unitpreserving round comparison fortunately reproducible able verify fix unit testing news fixed downgrading version pr would welcome nobody expresses interest probably put fix next release would like work issue saptaks feel free saptaks see add reported similar issue back may essentially told browser zoom supported essentially expect things break around versions policy changed end rip code using jquery rewrite also able rely jquery heightwidth parts may break intention fixing see originally described issue nt anything wrong particular issue phrased way came sufficient detail merited attention even though probably stemmed similar underlying causes one highlighted fundamental problem support tests failing nondefault zoom levels severe given response wrong dmethvin noted landing changed things still ca nt guarantee behavior nondefault zoom confidence browser behavior observations correct likely resolve issues like official policy remains dimensions may incorrect page zoomed user try make things work even outside normal operating parameters fix achieved without incurring undue cost factoring size performance code complexity testability maintenance burden followup reports etc feel bad remove jquery dimensions calls application hope consider restoring released month please report issues encounter future notices caveats absolutes way verify fix tried file seem include fix yet yes correct looks like file stuck jquerycore someone need kick jenkins jenkins looks like time content jobs broken amp never end killing manually time time vacation past days done jobs go thanks able successfully verify fix updated jquerygitjs version', 'date': '2017-10-04T14:20:40Z'}"
"24969",24968,"{'data': 'jquery ajax removes empty arrays data description expected jquery ajax sending correctly array even empty could nt find rfc saying nt sent though know one happy read happened sent data nt contain empty array link test case right rfc governing encoding javascript object query string people doubt depend current behavior since way decade need welldefined spec would advise using json could try setting see works case add empty arrays additional option jquery ajax would change current behavior would add possibility send accurate data good naming things something like default', 'date': '2017-10-04T12:35:58Z'}"
"24970",24969,"{'data': 'missing closing square bracket attribute selector nt throw error browsers except safari description concern googled returned stackoverflow question nt gained attention going exact problem example works fine browsers except safari politely throws error reminds silly mistake thrown browsers work link test case posted answer thread way could throw error every browser would fully parse every selector javascript nt going happen performance reasons', 'date': '2017-10-04T12:16:19Z'}"
"24971",24970,"{'data': 'nonpassive even listener violation link picture looks im using jquery uikit threw error used side nav also throws google chrome error link jquery nt support passive event listeners yet planned tracked closing duplicate', 'date': '2017-10-01T14:13:55Z'}"
"24972",24971,"{'data': 'jquerydeferred passed jquerydeferredresolve value chained jquerydeferred object given let promise gt new promise resolve gt resolve native promise new promise resolve reject gt settimeout gt reject seconds exceeded resolve promise data gt consolelog data catch err gt consoleerror err native promise logged chained constructor using pattern version jquery deferred object logged chained let promise gt new deferred dfd gt dfdresolve jquerydeferred promise new deferred dfd gt settimeout gt dfdreject seconds exceeded dfdresolve promise data gt consolelog data fail err gt consoleerror err jsfiddle expected result chained actual result object result chromium firefox backwards compatibility older versions jquery deferred resolve fulfills values exactly provided supplied registered callbacks unmodified however deferred fully promisesa compatible deferreds returned always unwrap fulfillment values providing callbacks short may receive thenable never', 'date': '2017-09-29T18:50:12Z'}"
"24973",24972,"{'data': 'function working properly arrow functions description faced problem function using arrow function inside eg always referred last element array case simple array returns window calling however regular syntax working well behavior regular function checked chrome link test case arrow functions nt binding inherit one outer closure nothing jquery change js element parentsuntil untilelement body addback el gt let el', 'date': '2017-09-26T07:27:08Z'}"
"24974",24973,"{'data': 'condition working properly used jquery check condition application code val lt thus purpose condition input field value nt allow zero values give value show alert zero allowed change input value show alert zero allowed pls give example condition code help forum please try stackoverflow', 'date': '2017-09-25T12:59:53Z'}"
"24975",24974,"{'data': 'infinite loop mutationobserver select option checked description set mutationobserver select element calls listener function within listener function call jquery check selected options listener function called immediately mutationobserver set jquery gets stuck infinite loop obviously happen tried replacing jquery zepto infinite loop occur tested windows chrome firefox link test case set reduced test case abort iterations avoid crashing browser see alert current dom apis provide way correctly rooted query arbitrary element nt always return expected results vs example ancestor root element expression always returns elements root jquery returns elements root work around problem jquery temporarily adds attribute root triggers mutation observer already root element jquery use either add select avoid using yep ok would explain thanks worked around temporarily disconnecting observer calling find calling observe using id would nt really appropriate think probably best solution case short manually enumerating children select looking one checked status', 'date': '2017-09-24T12:17:40Z'}"
"24976",24975,"{'data': 'ajax converts requests jsonp request data includes description calling data includes set turns request jsonp request causes additional headers sent additional added array latter turn causes converter used parse response server would throw error tell caused datatype used test request data would match string contains currently worked around issue explicitly setting could nt think case link test case ok ajax url type post datatype json data jsonstringify foo bar done function r consolelog r ok ajax url type post datatype json data jsonstringify foo bar done function r consolelog r encodeuricomponent need either encode string change content type plenty examples stackoverflow elsewhere example', 'date': '2017-09-24T09:27:09Z'}"
"24977",24976,"{'data': 'password regex javascript password regex javascript password must minimum length characters one uppercase one lowercase one special characters one alphanumeric values pls given password regex code open tickets jquery repos ask help stackoverflow', 'date': '2017-09-22T12:30:36Z'}"
"24978",24977,"{'data': 'uploaded documents issues viewing document upload one document image click view uploaded document display document document preview popup right click click open image new tab throw error message click save image option file properly downloaded images file proper amp file proper need display image properly new tab need save file properly note save image open new tab working fine note right click image open throw error message jquery bug report oh solve bug idea support forum please ask stackoverflow somewhere else', 'date': '2017-09-22T12:06:33Z'}"
"24979",24978,"{'data': 'new bug ajax description jquery版本信息代替 link test case url submitted contain fields urlencoded via similar encoding url still seeing please submit test case requested issue template', 'date': '2017-09-22T10:31:09Z'}"
"24980",24979,"{'data': 'display records found html page created ajax method bind data html page data found display message html page tell records found append jquery code', 'date': '2017-09-22T09:12:15Z'}"
"24981",24980,"{'data': 'jquery hi jquery support support jquery internet explorer see browser support nebrot way support dependency need support old browsers like ie use jquery way make jquery amp newer work ie says need support older browsers like internet explorer opera safari use jquery', 'date': '2017-09-21T07:11:44Z'}"
"24982",24981,"{'data': 'remove packagelockjson description npm even version included latest nodejs regenerates install system nt support optional dependencies supported os lockfile generated removes optional deps lockfile effect everyone firing repo os macos immediately get dirty state repo dependency subtree gets removed really bad experience link test case hmm nt regenerate lockfile otherwise point lockfile reported npm seems open since august feedback npm team far interesting install everything opposite problem', 'date': '2017-09-20T14:20:07Z'}"
"24983",24982,"{'data': 'password validation expression jquery description used latest jquery version check password regular expression website password mandatory password must char must combination uppercase lowercase alphanumeric special characters give password validation check expressions link test case related jquery core perhaps could ask help stackoverflow', 'date': '2017-09-19T05:37:08Z'}"
"24984",24983,"{'data': 'window height sent wrong value description used window height found page height resize tables width height page smaller metod sent big confused wrong number problem happen chrome firefox happen ie finally used windowinnerheight problem solved link test case htmltxt provide test case test code pc resize browser lot going example reduced test case seems work fine', 'date': '2017-09-17T18:17:37Z'}"
"24985",24984,"{'data': 'jquery issue deferred method description detected problem jquery function minute freeze web page chrome version build oficial bits firefox version file line case solved temporarily issue adding ms delay parameter exceptions stack chrome violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took violation settimeout handler took sorry ugly english link test case ca nt anything nt test case millions reasons problem may occur many would cause code external jquery provide test case right issue comes another component datatablenet still looking fix thanks', 'date': '2017-09-16T18:30:05Z'}"
"26440",26439,"{'data': 'error boundary nt catch typeerror app crashes hello using component building web forms json schema specific scenario app user fill form regularly filling form inputs toggle expert area possible modify json code editor comes problem user omits expected parameters json definition component crash throws errors like uncaught typeerror read property parameters undefined error occurred decided create errorboundary class copied documentation page placed wrapper nothing changes also placed method nt log anything something wrong bug error handling omg false nt wrapped components', 'date': '2018-11-14T17:24:52Z'}"
"26441",26440,"{'data': 'defining legacy context inside constructor regression want request feature report bug bug current behavior code using legacy api react longer works react defining context classes constructor used style utility helper reduce boilerplate example broken code expected behavior uncomment childcontexttypes works appears value read object created thinks context used versions react browser os affected issue work previous versions react tested could test due dep depending new context api error confusing could probably find way show better one style dynamically defining context officially supported worked accident either case encourage look using modern context api instead legacy one always marked unstable gaearon interesting simple fix may lead quick fix react restore simply adding static childcontexttypes container resolves seems react seems check property exists nt care values since actual use case providecontext method parent class extend components common base component provide common utility functions able trivially fix stubbing base component leads believe regardless supporting usage nt easy corrupt fiber state note moving new api agenda want tackle different unit work outside main gt update', 'date': '2018-11-14T17:04:11Z'}"
"26442",26441,"{'data': 'ca nt access instance property containing ref debugger want request feature report bug bug current behavior defining callback ref assigning element instance property like attempt access debugger within callback cant see get however within callback function able access instance property long debugger succesfully able log ref console current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example put repo reproduce problem follow steps reproduce issue clone repo run root repo open chrome dev tools click text landing page says click end debugger onclick callback try access get previously mentioned error however continue past debugger see value correctly logged console really available callback method expected behavior would expect able access instance properties ref values within debugger versions react browser os affected issue work previous versions react react version chrome chrome variants nt know', 'date': '2018-11-14T12:18:54Z'}"
"26443",26442,"{'data': 'error jsdoc react versions hello looks like file reactdevelopmentjs exists inconsistency versions inconsistency specific license react packagejson reactversion set reactproductionminjs also react version seems also', 'date': '2018-11-14T10:34:59Z'}"
"26444",26443,"{'data': 'featurequestion optimistic rendering want request feature report bug feature kind like question lead proposal understanding suspense takes care postrendering sense suspense wait async action finish rendering ui otherwise renders fallback ui based threshold possible something like opposite end spectrum ie instead suspending postrendering ui possible prerender certain methods prepare certain things next ui change could something trivial instantiating fetch call user clicks navlink would mount next component waiting component mounted rerendering ui kind like lazy loading much bigger harder scale know would obvious performance implications sure would play well componentwillunmount would imagine play nicely concurrent react could naive agree premature optimization hard rabbit hole dig moreorless curious something like could mean react public api usage example reactcomponent edit forgot mention aware calling component mounted noop good reason sure implementation even good idea something playing around wanted open issue see merit another edit giving thought playing around example clone link original copy nt think great idea afterall cwu would destroy state changes mention best idea mutate state directly calling setstate nonrendered components noop lifecycles would diff props context using context even feasible even props context feasible sure would perf benefits logic executed rendering upcoming component going leave issue open guysgals review case missed something see something nt still possible feel free close ping happily close', 'date': '2018-11-14T08:57:09Z'}"
"26445",26444,"{'data': 'warning fix cancel subscriptions asynchronous tasks useeffect cleanup function get warning ca nt perform react state update unmounted component noop indicates memory leak application fix cancel subscriptions asynchronous tasks useeffect cleanup function camera created app nt subscriptions calls creates subscription however comes cleanup function reproduce visit click open new window icon next address bar allow enable camera open console click stop button see warning console wrong hooks', 'date': '2018-11-14T05:22:50Z'}"
"26446",26445,"{'data': 'warning expected instance props match memoized props updating get new warnings occur prior unable give examples code sure occurring stacktrace comes deep unfollowable code though happens every page visited within app reverting back versions removes warning completely exists least one problem sorry need reproducing example fix even share app code good guide creating one problem reproducing example using yoman generator steps install yoman select run dependents installed see browser console already found key problem hook removed warning disappeared hi reproduced found without initializing rxjs works fine lower maybe helpful reproduce issue thanks upd reproduced webpackdevserver running issue updating react reactdom bundle size excluding node modules reproducing issue rough experiencing issue isolated using latest migrating use class components error disappears minimal example thanks gaearon suggestions isolate issue', 'date': '2018-11-13T22:49:41Z'}"
"26447",26446,"{'data': 'hooks disabled smile oops sorry release well way maybe unpublish believe people using next version hooks got installing thinking something wrong reactusestate undefined heh spent good hour trying figure usestate defined react changed look version previous alpha release incorrect feature flags due build script snafu even tested npmcra apparently next tag nt propagated yet fortunately ideas prevent sort thing happening future sorry inconvenience', 'date': '2018-11-13T19:52:49Z'}"
"26448",26447,"{'data': 'setstatedispatch arg callback emiteffect use case feature request current behavior usestateusereducers hook updaterdispatch functions expose way execute code update made expected behavior usestate usereducer hooks expose way locally execute equivalent inline useeffectdidupdate etc allow overriding default side effect behavior eg emiteffect gt use case formik exposes props control form validation occurs set form validation run whenever called fns update form similarly validation also run whenever called fns update state form reason formik nt centralize orchestrating validation logic ie run validation whenever either changes allow local overrides custom input components example often times party input component eg like airbnb rheostat value touched state need update together nt real blur event component nt prop formik get around updating field value touched state imperatively override validation behavior run formik current nonhooks api exposes extra parameter methods allow opt running validation update made internally looks like js setfieldvalue name value shouldvalidate true thissetstate prevstate gt setin prevstatevalues name value gt thispropsvalidateonchange amp amp shouldvalidate thisvalidateform thisstatevalues setfieldtouched name touch true shouldvalidate true thissetstate prevstate gt setin prevstatetouched name touch gt thispropsvalidateonblur amp amp shouldvalidate thisvalidateform thisstatevalues callback supported either update fn formik could maintain current api footprint allow following code work expected js const customrangedinput props gt const formik useformikcontext function handlechangevalue value set value formiksetfieldvalue propsname value false avoid normal validation logic mark field touched formiksetfieldtouched propsname true return however current hooks api way expose users since lift update validateonchangevalidateonblur validation logic current formik x hooks pr looks like js reactuseeffect gt didmountcurrent amp amp validateonchange amp amp stateissubmitting validateform statevalues statevalues validateonchange stateissubmitting reactuseeffect gt didmountcurrent amp amp validateonblur amp amp stateissubmitting validateform statevalues statetouched validateonblur stateissubmitting execute whenever change usually people want time however nt knowsee way make compatible old api locally override validation versions react browser os affected issue work previous versions react', 'date': '2018-11-13T17:57:45Z'}"
"26449",26448,"{'data': 'using reactlazy cause gpu run overloaded page slow want request feature report bug bug current behavior page slow see picture react executing work loop rendering suspend current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior expect page stuck versions react browser os affected issue work previous versions react janrywang please provide example reproducing issue requested issue template hi aweary updated image picture clearly see retrysuspendedroot time consuming task always jam browser would really help actual code example triggers try extract one codebase thanks gaearon also want give demo case bit specialbut give profilejson page slow decide back loadable sydinh help diagnose issue way would help shared project reproduces otherwise comments create notification noise help us solve issue', 'date': '2018-11-13T17:30:14Z'}"
"26450",26449,"{'data': 'useeffect hook broken production want request feature report bug bug current behavior useeffect hook throws error production bundle used development everything good current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior hooks work production versions react browser os affected issue work previous versions react react reactdom example works download use normal entrypoint replace run would normal cra app issue seems stem trying use production build directly arianon know development bundle works fine mentioned issue issue exactly production bundle title clear gt useeffect hook broken production nt breaks importing production bundle development mode instead using notice react developer tools indicating production build used changes code make work actually broken app production nt use cra particular sandbox set incorrectly reactdom imports points development bundle end two different reacts gaearon funny story code broken uglify works fine terser js import react react import reactdom reactdom function app reactuseeffect gt consolelog mounted return hello codesandbox start editing see magic happen const rootelement documentgetelementbyid root reactdomrender rootelement get error uglify probably need sunset move forces terser support way unsupported buggy try extract minimal repro uglify', 'date': '2018-11-13T11:43:17Z'}"
"26451",26450,"{'data': 'crossorigin prop provided rendered prop lowercase want request feature report bug potential bug current behavior using rendered lt script crossorigin anonymous datareactroot gt current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example js const react require react const reactdom require reactdomserver const result reactdomrendertostring reactcreateelement script crossorigin anonymous consolelog result expected behavior spec well mdn docs refer lowercased sure affects anything html parsers tried investigating validator cheerio worked fine lowercase versions react browser os affected issue work previous versions react reproduction uses latest react nt matter html spec treats attributes insensitive casing lets us avoid runtime work react awesome', 'date': '2018-11-13T10:50:21Z'}"
"26452",26451,"{'data': 'reactnestedfiletree hi known issue nestedfiletreeview since updating latest version react way run webpack get application display delete code import nestedfiletreeview reactnestedfiletree thanks hi use issue tracker bug reports feature requests question please check community support resources', 'date': '2018-11-13T10:35:45Z'}"
"26453",26452,"{'data': 'using reactlazy codesplit error occurs accessing root route want request feature report bug bug report current behavior using codesplit page routes navigating routes works fine long start start app another route get following uncaught error could find store either context props connect info either wrap root component explicitly pass store prop connect info warning unexpected fiber popped warning unexpected pop unexpected context found stack error likely caused bug react please file issue current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example ca nt make reproduction moment try add comment later also nt want forget submitting least adding without repro expected behavior entering route different root load correct component versions react browser os affected issue work previous versions react react chrome firefox try yeah need reproducing case', 'date': '2018-11-13T08:37:43Z'}"
"26454",26453,"{'data': 'textarea loses focus inserting paired punctuation chinese ime want request feature report bug bug current behavior textarea lose focus insert paired punctuation chinesepinyin key input source ios safari textarea ca nt focused click element focused textarea could focused current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codesandbox demo steps youtube video expected behavior work fine versions react browser os affected issue work previous versions react versions react os ios browser safari think issue ios rather react tested see plain html input behaves native apps ios selecting chinese quotes cursor goes chars automatically recommend address issue', 'date': '2018-11-13T08:26:59Z'}"
"26455",26454,"{'data': 'react dragact component interaction bug want request feature report bug bug current behavior use dragact layout mouse position component real boundary layout boundaries inconsistent current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example problem screenshot expected behavior mouse position component real boundary layout boundaries inconsistent versions react browser os affected issue work previous versions react react react dragact component interaction little uncomfortable hi use issue tracker bug reports feature requests question please check community support resources reason post think react bug think need reproducing case', 'date': '2018-11-13T08:21:14Z'}"
"26456",26455,"{'data': 'react ignores fast props change redux want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example redux dispatched action twice quickly react ignores first dispatch also renders redux store updates dispatch properly raf react works expected code expected behavior react renders twice versions react browser os affected issue work previous versions react react os mac browser firefox think dispatched action tick means reactredux provider tick know merging setstate sync react default feature probably runs two calls behind scenes batched react controls click event handler hence results one render runs one synchronously one asynchronously result two renders batched runs asynchronously controlled react try calling two result renders clicking correct wrong plz thanks explaination', 'date': '2018-11-13T06:58:38Z'}"
"26457",26456,"{'data': 'react missing umd bundle want request feature report bug bug current behavior longer drops umd bundle breaking examples rely current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior file exists versions react browser os affected issue work previous versions react yes codepen listed included dependencies umd output patch removed reproduce change unpkgcom urls thanks heads fixed build script republishing fixed thank', 'date': '2018-11-13T03:13:32Z'}"
"26458",26457,"{'data': 'react matching version found scheduler want request feature report bug bug current behavior bash npm install react latest npm err code etarget npm err notarget matching version found scheduler npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err notarget npm err notarget specified dependency react npm err notarget npm err complete log run found npm err current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react react got problem aha think slip pen version hand slipped lol emergency waiting online problem also ran also ran stupid mistake hope solve quickly cnpm works use instead choose version using yarn reacttestrenderer scheduler aware also better comments npm react npm err code etarget npm err notarget matching version found scheduler npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err notarget npm err notarget specified dependency react npm err notarget problem waiting online looks linked issue bug react linked library seriously guys enough comments get install fail error react scheduler ca nt find package scheduler error react scheduler ca nt find package scheduler resolve resolvenext onfulfilled processtickcallback npminstall version gt whole world waiting sf bay waking guys stop floodding post useless comments please makes thread unreadable issue reported confirmed happen wonder someone make sleepycommit project going online automation script available repair waiting online wake fix fixed farewell seems barely knew happened fixed also add proper tests dependency version sanity checks prevent happening type bugs ripple effect remove file evn works well use yarn install yeah working improving release process tooling moving new release flow stable releases built downloading previously published canary directly npm republishing new versions idea stable packages identical ones canary difference ca nt avoid update versions exact thing broke case oops going add snapshot tests release script protect future regressions also probably slightly rushed patch release suspenserelated bugfixes really needed go usually would wait canary build stabilize bit promoting stable thanks patience also please use lockfiles next time thanks fixing issue andrew middle react workshop encountered bug glad everything fine update npm', 'date': '2018-11-13T03:01:11Z'}"
"26459",26458,"{'data': 'useeffect unmount triggered two renders want request feature report bug bug current behavior generates better illustrate problem drew red boxes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior every rerender trigger unmount previous render effect versions react browser os affected issue work previous versions react sophie says bug leave yall need confirm close', 'date': '2018-11-12T23:56:20Z'}"
"26460",26459,"{'data': 'rendered fewer hooks expected upon deletion todo list item want request feature report bug bug current behavior codesandbox add todo items list press one red x buttons delete one expected behavior todo item gets deleted versions react browser os affected issue work previous versions react react using hooks tl dr useprofunctorstate hook underneath uses usestate usememo useprofunctorstate call one call usestate children components use nt real setstate instead share setstate toplevel component implementation useprofunctorstate case js class profunctorstate constructor state setstate thisstate state thissetstate setstate function usememoizedprofunctorstate state setstate return usememo gt const profunctor new profunctorstate state setstate profunctorpromap profunctorpromapbind profunctor return profunctor jsonstringify state function useprofunctorstate initial const state setstate usestate initial return usememoizedprofunctorstate state setstate export default useprofunctorstate usememoizedprofunctorstatepromap regular function instead hook rules hooks lint rule would caught although sure would renamed something ultimately becomes problem calling loop inside another rule really rule calling custom hooks inside custom hooks exists fwiw would worked made component instead function way calling component instead loop right multiple calls causing attention one nicely following hook rules bit quirky indeed works component gt lint rule would caught although sure would renamed promap usepromap something lint rule nt currently check class methods functions time many false positives internally classes maybe worth strict', 'date': '2018-11-12T22:33:14Z'}"
"26461",26460,"{'data': 'automated incremental react releases ticket covers changesadditions would need make existing release scripts support automatically publishing canaries master changes ci scripts update ci scripts share code building generating artifacts lot redundancy autogenerate checksum file add npm package well array enable us later verify specific package version corresponds specific git revision help ensure nt accidentally publish incompatible sibling packages autogenerate unique version number based git revision used canary like x circle ci already builds packages runs tests source built modules build script currently go ahead save resulting builds circle ci download publish asis changes local scripts x create script prepare canary release ci artifact x require inputs circle ci build identifier eg x download extract artifact create script tp prepare stable release published canary require inputs npm version number published canary release scan local packages directory determine list nonprivate packages check canary version package prompt version number package default could fill latest majorminor querying npm done front interpackage dependencies eg depends replace canary version number source renderers specified version also replace version numbers update existing publish script require inputs otp token list npm tags eg aid generation release changelog add git tag revision canary release created publish package npm specified version number tag script also support basic resume functionality checking package see already published publishing skipping update existing build script rewrite script execute four ci container scripts parallel local testing nice create snapshot tests new promote script runs dry run mode compares resulting content could use promote known canary version specific release version order regression test changes build script future devtools able detect canary version using regex visually signify via new icon something automatically create github release stables see api docs open questions update file need generated ci stored artifact well x want version currently marked private release scripts ignore made current version schema would cause problems release script assumes packages either unstable releases locksynced main react version currently tagged version solution skip package since stick version scheme', 'date': '2018-11-12T18:47:03Z'}"
"26462",26461,"{'data': 'react removing critical vendor prefixes breaking styles related react removing vendor prefix without prefix supported chrome see chrome inspect element see invalid applied requested expected behavior applied versions react browser os affected issue work previous versions react tested chrome react occurs chromeopera impacted react removing see behavior reproduces regular js api apply case well browser think bug please report chrome', 'date': '2018-11-12T18:40:20Z'}"
"26463",26462,"{'data': 'problem html select thing updates state select work weird looks reload try use latest cra test windows mac os hi silentpick trying solution kind outcome looking khorramk work', 'date': '2018-11-12T18:37:12Z'}"
"26464",26463,"{'data': 'context provider value prop honored consumer initial render want request feature report bug bug andor feature current behavior currently trying migrate redux context set config values passed many presentational components thing still want leverage selectors pull values redux save trouble handing config object tree creating context default value empty object obviously create context within component instance grab values mapstatetoprops high component importing context providing config value object mapstatetoprops value contextprovider render method current behavior consumer using default value empty object first render instead value passed redux bad consumers expect object properties nt issue seeing value prop contextprovider nt honored consumer initial render expected behavior value prop contextprovider honored consumers initial render versions react browser os affected issue work previous versions react react native react please provide minimal reproducing case could reproduce problem code sandbox sorry noise', 'date': '2018-11-12T17:40:27Z'}"
"26465",26464,"{'data': 'hooks animations want request feature report bug doubt bug either missing feature request clarification usenot use hooks current behavior trying design interactive component animation event listeners highlighted issue state updates behave differently triggered events sources case want use requestanimationframe incrementally update value using setter function best effort far lot tinkering sort works sure ideal fiddle really supposed use approach complex component image carousel performance noticably worse traditional approach counterpart think maybe work bit hard diagnose performance problems demo nt reproduce provide realistic demo would easier help thank useful could explain chose wrap assignment callback ref inside also works reassign without like generally advise mutating things rendering cause issues concurrent mode released later server rendering thanks gaearon support', 'date': '2018-11-12T12:05:00Z'}"
"26466",26465,"{'data': 'page flickering injecting styles useeffect want request feature report bug nither feature bug current behavior use useeffect including styles onto page styleloaderusable page flickering behaviour seen used injecting styles componentwillmount handler expected behavior render page without visual flickering content versions react browser os affected issue work previous versions react react browser os declare hook js import useeffect react const usestyles css gt useeffect gt cssforeach item gt itemuse export default usestyles js import react react import usestyles hooksusestyles import applayout componentsapplayout import appcss appcss const app gt usestyles appcss export default app rendering going deepest component component tree styles begin applying rendering whole component tree using lead deffects kind thing needs done intentionally wait browser painted changes user see current render result need something affect current render result need kovensky thanks works', 'date': '2018-11-11T23:05:38Z'}"
"26467",26466,"{'data': 'usestate hook setter always working code create add jsx harmony const statetitlebarref setstatetitlebarref usestate null const titlebarref reactcreateref useeffect gt setstatetitlebarref titlebarref consolelog statetitlebarref titlebarref idea adds created state done rendering subcomponents use ref state updates triggering rerenders et rendering component like happen main component renders gets setting property main component updates state new containing actually happens main component renders gets setting property main component updates state new logging effect code shown output even running log directly also nt add second turns infinite loop got work directly adding element may best practice solution able find far', 'date': '2018-11-11T20:13:43Z'}"
"26468",26467,"{'data': 'state updates usestate hook always collapsed want request feature report bug hoping bug least bit unexpectedly trying new react hooks current behavior multiple setters returned usestate called timeslice sometimes collapsed single update single rerender triggered intermediate state observable sometimes collapsed single update multiple rerenders triggered intermediate state observable first rerender current behavior bug please provide steps reproduce possible minimal demo problem see triggered button click collapse state changes consolelog never trigger however triggered windowsetinterval collapse state changes triggering consolelog expected behavior would expect state changes always collapsed little bit performance less rerenders mostly makes logically impossible states observable rendering unexpected versions react browser os affected issue work previous versions react react new hooks work way classes updates event handlers batched updates outside hmm might right however using classes natural combine single call talksexamples hook seem favor multiple calls single call state object multiple calls see way anymore combine updates single callupdatererender gt however using thissetstate classes natural combine single thissetstate call think mean combining different batching updates event handlers batched meaning final state value calculated rerendering happens even multiple statements jsx toggle gt seta setb b ab changed values note statements combined update nevertheless batched gt multiple usestate calls see way anymore combine updates single callupdatererender temporary way wrap logic longer term plan batch updates default way opt course also describe updates multiple fields result one dispatch say recommend multiple state variables logic gets complex hmm right indeed works around issue way forward automatic batching would perfect fix', 'date': '2018-11-11T10:06:28Z'}"
"26469",26468,"{'data': 'finddomnode throws inside suspense want request feature report bug bug current behavior component listens resize events via blueprintjs resizesensor loading component dynamically exception occurs resize sensor appears unmounted resize sensor removing listeners unmount demo related expected behavior exception thrown versions react browser os affected issue work previous versions react tested react fails react works test works master nope broken master bisecting confirmed regression caused edit something else found regression nt execute edit yeah throws invoked suspended component reproduce jsx const react require react const reactdom require reactdom const reacttestrenderer require reacttestrenderer const suspense react let didsuspend false function suspend didsuspend throw didsuspend true return null class component extends reactcomponent componentdidupdate reactdomfinddomnode render return null function app return const root reacttestrenderercreate rootupdate true aforementioned pr case looks like helped us discover smile gt edit something else found regression resizesensorcomponentdidupdate nt execute sounds like separate problem provide test case minimal repro reactdom js const lazy reactlazy gt new promise resolve gt resolve default return hello class child extends reactcomponent componentdidupdate reactdomfinddomnode render return null class app extends reactcomponent state suspend false handleclick gt thissetstate suspend true render return thisstatesuspend amp amp reactdomrender documentgetelementbyid container okay part covered got first broken got fixed however think repro case might separate issue looking gt sounds like separate problem provide test case welp turns wrong actually made mistake mocking resulted called stuckouttongueclosedeyes', 'date': '2018-11-11T03:53:37Z'}"
"26470",26469,"{'data': 'reusing refs jquerylike dombased libraries depend specific dom structure lets say image slider itemslist controls componenddidmount myslider sliderinit itemsmap item gt item note div completely empty generated lib initialisation structure closed take put another place lib would work found another technique accomplish using structure became controls reactcreateref componentdidmount gt myslider sliderinit thisforceupdate hide controls thiscontrolscurrent null stuff works great thought maybe better technique reuse couldt find anything docs maybe would good idea fill gap thanks guidance integrating nonreact code gaearon sure know page question could maybe avoid place place nt know thats something others look something like thissomerefmirror would much cleaner nt really semantics eg input state wo nt preserved adding something like react would misleading see keep small dirty workaround secret', 'date': '2018-11-10T13:42:44Z'}"
"26471",26470,"{'data': 'hooks storing react component state produces unintuitive error want request feature report bug bug current behavior storing function component state using interpreted providing lazy state function react attempts use returned rendered result component current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example broken fixed workaround wrapping object literal note contextrelated code relevant bug reusing skeleton code tracking another bug contextrelated one probably bug code expected behavior react components functional otherwise treated state values rather lazy functions versions react browser os affected issue work previous versions react earlier versions applicable since hooks known possible point confusion ability lazyinitialized probably want use memoize function component really want put need return function lazy initializer function instead hrm seems like ergonomics problem given effectively doubleduty case ambiguous developer actually intended run similar scenario api design one projects eventually decided separate methods latter accepted lazy value producer function would make explicit whether function intended used lazy producer whether function value convinced possible merge eager lazy usage single api without causing issues perhaps react make similar distinction using type system would help welcome comment rfc alternative proposal read comments indeed intentional decision even though recognise downsides posted comment', 'date': '2018-11-10T10:49:19Z'}"
"26472",26471,"{'data': 'hooks reducer useeffect using example try add code ends calling defaultaction return previous state still executed desired behavior want request feature report bug possibly bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior reducer retains previous state state used trigger state change versions react browser os affected issue work previous versions react would say yes intended behavior similar standard redux store behavior looks like js function createstore reducer var state var listeners notice always runs subscriber callbacks nt check whether saved state value actually changed ui layer job ie reactredux get current state kind diff determine anything meaningful changed case builtin behavior calling always trigger rerender regardless whether value provided value returned reducer actually changed default behavior rerun every render unless provide values watch array argument gt default behavior useeffect rerun every render unless provide values watch array argument poster provide second argument though derp nt read carefully enough sorry case sure going might bug needs reproducing example could nt reproduce pressing default button useeffect never runs pressing reset button useeffect always runs nt latest button clicked behaving exactly intended believe', 'date': '2018-11-10T07:06:31Z'}"
"26473",26472,"{'data': 'hooks useeffect context use conjunction meaning would like rerun context changes example javascript const mycomponent props gt const ctx usecontext mycontext useeffect gt useful operation ctx changes ctx want request feature report bug possibly bug current behavior ctx work useeffect current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react check changed means changes different object seen provider possible accidentally changing property object without changing object never trigger context update ideally would jsx const mycomponent props gt const b c usecontext mycontext useeffect gt stuff b c really want job jsx const mycomponent props gt const ctx usecontext mycontext useeffect gt stuff objectvalues ctx arianon kovenaky thank trick instead whole object total nitpick nt think spread result could js useeffect gt objectvalues ctx', 'date': '2018-11-10T06:56:42Z'}"
"26474",26473,"{'data': 'rendering web application kofax kapow rpa client uses robotic process automation rpa automate interaction react web app provide app works great run rpa platform render main component tag indexhtml page tried use different browser engines rpa platform success found problem react version version works expected please help understand changes version may responsible behavior changelog want dig sure else done without actually seeing able interact whatever platform using actually reading changelog probably need provide polyfills maybe try first', 'date': '2018-11-09T22:04:00Z'}"
"26475",26474,"{'data': 'check component triggers useeffect want request feature report bug feature maybe sure current behavior ca nt find way check componentfunctionmethod updates state useeffect expected behavior range slider input takes progress state value progress state updated event handler need arrange range slider update progress state trying make runs gets triggered slider got stuck check component function method changes state get versions react reactdom provide demo please like codesandbox sure audioontimeupdate useeffect slider update ca nt run first time comment useeffect ca nt actually play anything sandbox always getting typeerror failed set currenttime property htmlmediaelement provided double value nonfinite eval useeffect function windowaudioplayercurrenttime parsefloat mathfloor windowaudioplayerduration stateprogress gt ca nt actually play anything sandbox always getting typeerror failed set currenttime property htmlmediaelement provided double value nonfinite eval useeffect function windowaudioplayercurrenttime parsefloat mathfloor windowaudioplayerduration stateprogress fixed', 'date': '2018-11-09T20:12:07Z'}"
"26476",26475,"{'data': 'yarn build core build nothing seems useless contributionprerequisites updated yeah changed please update say also needs done readmes', 'date': '2018-11-09T16:46:22Z'}"
"26477",26476,"{'data': 'setstateaction returned usestate hook dose accept second callback argument want request feature report bug question current behavior setstateaction returned usestate hook dose accept second callback argument works like class componet setstate method receives callback param perform callback setstate action updates current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior hopes setstateaction function receive second callback argument used like setstate method callback read official note instead working intended perform special action setstateaction called versions react browser os affected issue work previous versions react reason ca nt instead generally better solution gt reason ca nt instead generally better solution since nt want trigger callback action every time dispatching setstateaction useeffect might cause effect running every time state changed use useref setting flag saying want effect run effect directly function calling setstate nt render phase begin gt since nt want trigger callback action every time dispatching setstateaction useeffect might cause effect running every time state changed describe specific use case please', 'date': '2018-11-09T15:39:59Z'}"
"26478",26477,"{'data': 'incorrect scheduler dependency getting installed alpha want request feature report bug bug current behavior whenever try use concurrent mode react one error thrown current behavior bug please provide steps reproduce create react app update react react dom alpha version update js import react react import reactdom reactdom import indexcss import app app import serviceworker serviceworker const root reactdomcreateroot documentgetelementbyid root rootrender one error thrown expected behavior render correctly concurrent mode versions react browser os affected issue work previous versions react nt work without either synchronous react works correctly hi think caused scheduler tried installing scheduler manually removing folder app run edit would better install scheduler react depends originally scheduler breaks avoid making manual fix time follow bobgy thank works worked thanks using yarn added version resolution', 'date': '2018-11-09T12:07:26Z'}"
"26479",26478,"{'data': 'release based since contains important bug fixes would lovely release together hooks thanks considering another patch soon bugs shake cut new alpha close since nt usually track patch releases gh issues looks like accidentally missing hooks please wait coming soon', 'date': '2018-11-09T09:41:56Z'}"
"26480",26479,"{'data': 'reacttestrenderer nt support suspense lazy nodes hello test components suspenselazy renderercreate totree throws totree yet know handle nodes react reacttestrenderer getting something similar enzyme', 'date': '2018-11-09T07:27:53Z'}"
"26481",26480,"{'data': 'uncaught typeerror unmountcomponentatnode function want request feature report bug bug current behavior uncaught typeerror unmountcomponentatnode function example typo node capitalized', 'date': '2018-11-09T06:37:20Z'}"
"26482",26481,"{'data': 'input type email bug open codepen paste example gmailcom press backspace notice focus changes beginning input happens browser trim spaces end value modify code follows see happens looks already discussed means choose using uncontrolled input controlled input nt great solution swallow event space js controlled email input onkeypress syntheticevent gt syntheticeventcharcode syntheticeventpreventdefault onchange evt gt thissetstate value evttargetvalue wo nt work user pastes email space least terrible bandaid could come', 'date': '2018-11-09T05:28:29Z'}"
"26483",26482,"{'data': 'use context encountered error test case want request feature report bug bug current behavior return child components contextprovider properly js import react react import reacttestutils reactdomtestutils const themecontext reactcreatecontext theme red function themebutton return theme gt theme const contextvalue theme blue const instance reacttestutilsrenderintodocument consolelog instance null within element works js const instance reacttestutilsrenderintodocument returns instance providers nt instances suggest use get want directly example js let buttonref reactcreateref reacttestutilsrenderintodocument something buttonrefcurrent', 'date': '2018-11-09T04:36:40Z'}"
"26484",26483,"{'data': 'svg import cause image crack several needs hover button change color svg path strokefill work perfectly time use component assign classname sometimes svg image crack sure complete use think bug thanks help fyi svg source import reactcomopnent graph svg lt graph npm react please file create react app repository reproducing example', 'date': '2018-11-09T02:44:39Z'}"
"26485",26484,"{'data': 'inconsistent dom lazy suspense want request feature report bug bug current behavior given code like run see dom change nodes rendered nodes rendered instead see dom nodes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example watch output panel expected behavior dom match react component tree versions react browser os affected issue work previous versions react tested windows chrome react fixed release patch soon thanks report', 'date': '2018-11-09T00:53:42Z'}"
"26486",26485,"{'data': 'set property return null using suspense lazy want request feature report bug bug current behavior given code like download render run instead get internal react error setting property current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open console see error message expected behavior combination defer downloading rendering component set state variable versions react browser os affected issue work previous versions react tried windows chrome react chrisvasz bad get using fixes release patch within next days hey acdlite thanks quick turnaround one thought pretty jazzed seeing test case commit goal mine contribute code react today say mission accomplished pretty cool see code land react would even cool receive official attribution part commit wrote test case via coauthored commit worried code react reward enough thought next time able reuse code outside contributor', 'date': '2018-11-09T00:43:38Z'}"
"26487",26486,"{'data': 'xss protection href object html escaped props want request feature report bug would like request bug current behavior know possible inject object props however object seems html escaped inserted dom observation thus try add onerroralert xss tag props gon na escaped rendered realized inserting idtest totally possible props thought dangerous javascript injectable attributes escaped onerror onload however realized hrefjavascript alert escaped inserted props javascript gets executed thought might bug current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example class app extends component render const href href javascript alert return reactdomrender documentgetelementbyid root expected behavior would expect href object escaped props treated exactly like onerror javascript attributes versions react browser os affected issue work previous versions react react version browser chrome', 'date': '2018-11-08T23:48:22Z'}"
"26488",26487,"{'data': 'reactmemo reactlazy ignore proptypes want request feature report bug bug current behavior nt get triggered console required prop undefined jsx import react memo react import reactdom reactdom import proptypes proptypes appear two proptypes console errors without memo throw proptypes error like const memobutton memo gt return memo button memobuttonproptypes memocolor proptypesstringisrequired throw error console const button gt return button buttonproptypes color proptypesstringisrequired const rootelement documentgetelementbyid root reactdomrender lt gt rootelement versions react browser os affected issue work previous versions react work attached component give argument nevermind thinking checked without caring whether component memoized came across issue alpha well updated codesandbox show adding proptypes memoizing component effect need decide actually want support arguably valid decorate either side depending define decorating outer side seems shady probably warn attempt want adding removing transparent ie breaking change expect proptypes defaultprops etc work encountered something similar different angle package prop types check prop using package surprisingly enough returns object wrapping function guess package needs updated reflect originating issue reference edit work pr easy enough wait green light gt reactrouter package prop types check routecomponent prop using reactis package surprisingly enough reactmemo returns object wrapping function guess package needs updated reflect please specific checks bunch different methods exported one using update use yet release still uses current check', 'date': '2018-11-08T23:48:09Z'}"
"26489",26488,"{'data': 'portals created dynamically exist outside main tree want request feature report bug bug current behavior using library creates provided react components dynamically renders using portals components rendered expected exist outside main react tree see screenshot create repro problem yarn install npm start using react devtools inspect created react components trimmed downsimplified example illustrates problem seeing current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior dynamically rendered components exist within mainparent react application versions react browser os affected issue work previous versions react react reactdom reactscripts', 'date': '2018-11-08T17:50:05Z'}"
"26490",26489,"{'data': 'exporting context appjs returns empty object noticed exporting context directly appjs file returns empty object correct behavior working example file mycontextjs file appjs import react react import mycontext mycontext import mybutton mybutton class app extends reactcomponent render return button export default app file mybuttonjs import react react import mycontext mycontext class mybutton extends reactcomponent render consolelog mybutton props thisprops mybutton context thiscontext return mybuttoncontexttype mycontext export default mybutton working example file appjs import react react import mybutton mybutton export const mycontext reactcreatecontext class app extends reactcomponent render return button export default app import react react import mycontext app class mybutton extends reactcomponent render consolelog mybutton props thisprops mybutton context thiscontext return mybuttoncontexttype mycontext export default mybutton thiscontext empty object packagejson name reactcontexttest version private true dependencies react reactdom reactscripts scripts start reactscripts start build reactscripts build test reactscripts test eject reactscripts eject eslintconfig extends reactapp browserslist dead ie lt opmini cyclic reference appjs lt mybuttonjs chibiblasphem got thank', 'date': '2018-11-08T07:29:25Z'}"
"26491",26490,"{'data': 'question react call return remember last year experimental package published like indeed year later ca nt find gone plan replaced see pr removed feature', 'date': '2018-11-08T07:26:30Z'}"
"26492",26491,"{'data': 'ref callback works expected current behavior used ref callback code want implement clicking input got focused main code belows handlefocus name name name name focus itemrenderer item index gt return itemsearch itemreplace gt set ref input thissearchinput input value thisstatesearchedit onclick thishandlefocus searchinput onchange thishandlechange searchedit classname thispropsclassesinput inputprops arialabel description thisstateeditmode index set ref input thisreplaceinput input value thisstatereplaceedit onclick thishandlefocus replaceinput onchange thishandlechange replaceedit classname thispropsclassesinput inputprops arialabel description handlefocus actural one could invoke full code read still could make works expected search found react issue need use instead see', 'date': '2018-11-08T01:17:27Z'}"
"26493",26492,"{'data': 'ref nt properties one would expect want request feature report bug bug current behavior class like jsx class parent extends reactcomponent constructor props super props thistableref createref render return class extends reactcomponent render return contents jsx expected behavior given refs supposed negate need use finddomnode seems like weak spot versions react browser os affected issue work previous versions react react chome unless using internally putting ref wo nt hand back dom node handle back class instance looks like logic error use refs also use directly looks like would crash first time anyway null first time component renders even using really close right thing need also note semanticuireact happens component support refs current releases working forwardref pr', 'date': '2018-11-08T01:08:24Z'}"
"26494",26493,"{'data': 'function usage changes duration hmr want request feature report bug bug current behavior using hmr one component change takes longer without using standard case import react suspense lazy react const home lazy gt import routeshome const app gt loading gt expected behavior take time many routes takes seconds changing one component matter without lazy seconds versions react browser os affected issue work previous versions react version matter kind browser environment say hmr implementation mean mean please report issue project hacks break react plan look officially supported hmr implementation soon case reproducing example needed help closing since additional info', 'date': '2018-11-07T22:23:51Z'}"
"26495",26494,"{'data': 'suspense fallback component remounts parent rerendered want request feature report bug think might bug perhaps understanding reconciliation incorrect trying use primitives implement loading ux requirements specifically want render loading state indicator descendant lazy component ancestor rendering indicator ancestor seems like happy path trying something little different current behavior go click button see crash expected behavior go click button see text show lazy loading wait bit see lazy component render understanding reconciler algorithm leads expect fallback component mounted single time observing setting state parent component causes fallback component unmount remount triggering infinite loop causes react crash note wrap things work except component remounting loop promise resolved versions react browser os affected issue work previous versions react tried please try bug fix remounting oh nt notice updated sandbox works great thanks', 'date': '2018-11-07T21:41:31Z'}"
"26496",26495,"{'data': 'tapping outside input ios fire onblur event want request feature report bug bug current behavior ios chrome safai input focused attempting tap outside blur input focus kept onblur event fired current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example tap focus input tap outside input blur observe focus kept example repo expected behavior tapping outside input blur input remove focus versions react browser os affected issue work previous versions react affects ios android still maintains expected behavior tell seems regression sure work current prod build someone forgot also upgrade reactdom behavior expected went also bump reactdom version noticed bug edit reverted commit back took look inside find reverting commit well', 'date': '2018-11-07T20:35:47Z'}"
"26497",26496,"{'data': 'read property reactdebugcurrentframe undefined hi get following issue chrome developer tools console updating latest version react nt seem common issue please let know information provide uncaught typeerror read property reactdebugcurrentframe undefined eval webpackinternal eval webpackinternal object webpackrequire eval webpackinternal object webpackrequire eval webpackinternal object webpackrequire full reproducing project would nice gt full reproducing project would nice ca nt put code due work restrictions current react versions packagejson devdependencies reactdom reacttestrenderer reduxmockstore dependencies react reactcustomselect reactdatetime reactinputautosize reactnestedfiletree reactnumericinput reactredux reactrouterdom reactsimpleaccordion reacttooltip wondered missing something sounds like maybe using incompatible versions odd reactdom packagejson gt sounds like maybe using incompatible versions odd reactdom packagejson thanks response way find react reactdom versions compatible also copy reactdom dependencies followed install says use npm install save react reactdom maintain exact versions like run view local dependency versions grep react filter lines may see variety reactrelated npm packages looking specifically chasestarr thanks response deleted nodemodules folder reinstalled updates error seems disappeared installed proptypes seperately referenced everywhere import import react react import proptypes proptypes however following error message uncaught typeerror read property object undefined probably code nt exist check stack trace error happens third party package try looking new version last workaround could something like code runs', 'date': '2018-11-07T14:31:51Z'}"
"26498",26497,"{'data': 'defaultprops inconsistency createelement cloneelement want request feature report bug bug current behavior nt handled given component adds wrapper around children given defined js function modal children return children modaldefaultprops children default content sets default props setting children sets default props setting children resulting different behavior js const defaultmodal reactcreateelement modal children hi undefined evaluates default prop default content const cloned reactcloneelement defaultmodal children hi undefined evaluates however happens children explicitly set since check children js const defaultmodal reactcreateelement modal children hi evaluates default prop hi const cloned reactcloneelement defaultmodal children hi evaluates hi pr refactor also makes behave like setting default props setting children though nt know ultimately behavior want might also want code ignores children though nt know repercussions would inside reconciler bit confusing know setting children config object parameters function take precedence definitely document though probably case comes often real world code current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example codesandbox expected behavior set default props way versions react browser os affected issue work previous versions react codesandbox using react think like always changing would breaking change right yes would definitely breaking change primarily curious understand nuance setting via config object versus passing extra arguments even sure take precedence though think least functions behavior update looks like children arguments take precedence would expect works well long nt passed explicitly children like original codesandbox link initial case single child passed behaviors differ uses default prop uses undefined though multiple children passed render children wondering makes sense filter children deoptimization children sometimes render issue also begs question handle children different behaviors could trip people bit curious internals store reconcile even children', 'date': '2018-11-07T13:53:41Z'}"
"26499",26498,"{'data': 'tell react supports want request feature report bug feature current behavior developing component wants use classcontexttype also needs compatible old version use determine react supports createcontext tell react supports classcontexttype might somewhat weird checking eg reactlazy work released together dont think better way yeah sounds reasonable note package nt actually contain implementation contained package even nt safe personally suggest cutting new major version uses requires react instead trying support otherwise going ship extra code bloating bundle thanks', 'date': '2018-11-07T10:17:45Z'}"
"26500",26499,"{'data': 'package scheduler nt exist defined reacttestrender want request feature report bug bug current behavior package scheduler never ever existed defined packagejson reacttestrender moreover commit merged trunk current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react', 'date': '2018-11-07T08:30:41Z'}"
"26501",26500,"{'data': 'add react component new component props precomponent props want request feature report bug bug current behavior use props subcomponent rendering put values props acount bcount parent component b props subcomponents b acount bcount dynamically add outer component c initialized state inside parent component initialize state constructor props b component props c want add c end correct props think props newly added component c depend props last rendered component english good nt know understand current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react react reactredux hard understand exactly problem sounds similar problems people use react incorrectly link chinese documentation wonder writing index element loop list cause errors like nt help could post full code example run hard help see screenshots gt hard understand exactly problem sounds similar problems people use react incorrectly link chinese documentation wonder writing index element loop list cause errors like nt help could post full code example run hard help see screenshots go deeper thanks soooo much gt hard understand exactly problem sounds similar problems people use react incorrectly link chinese documentation wonder writing index element loop list cause errors like nt help could post full code example run hard help see screenshots think find problem generate components layerparser value works v still think may error list elements glad code working', 'date': '2018-11-07T02:51:22Z'}"
"26502",26501,"{'data': 'hooks called using webpackdevserver hmr note nt sure made sense open issue webpack repo sorry nt make sense want request feature report bug bug current behavior hooks called using webpackdevserver specifically see link repo source code callback given useeffect run typing input update current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example created repository reproduces bug expected behavior callback given useeffect run log using effect hmr typing input update text state versions react browser os affected issue work previous versions react using mac os chrome work previous versions react please file issue ironically started project currently maintaining due lack certain necessary features react project currently uses techniques break hooks afaik way work around although sure exactly probably search repo issues mentions hooks plan work fixing since hooks enable us implement hot reloading much simpler way ah thought look thanks terrencewwong realize kind late thought might worth sharing anyway issue necessarily caused hmr could flag webpack config remove hooks works intended spent hour troubleshooting reason hooks work development mode think react hot loader hacky stuff dev mode disabling fixes issue recommend disabling development mode development gt reason hooks work development mode think react hot loader hacky stuff dev mode disabling fixes issue recommend disabling development mode development ah right nt implying hooks problem although see might come across like bad totally right use hooks without hmr development mode everything works', 'date': '2018-11-07T01:45:25Z'}"
"26503",26502,"{'data': 'autofocus text puts cursor end instead beginning want request feature report bug bug current behavior react text input value autofocus set cursor end input current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example see react repro expected behavior react plain html behavior cursor placed start input react plain html versions react browser os affected issue work previous versions react reproduces react worked expected react want look fix sure thing thanks confirming look matthewgoldberg tried figure wrong nt ideas stack could try works modern browsers narrow works nt somewhere bisected commit thank chasestarr makes sense also happens plain html cursor end set value using script instead attribute mmarkelov think hard write test seems showing even though browser code shows endlength text value', 'date': '2018-11-06T18:57:12Z'}"
"26504",26503,"{'data': 'event name different eg want request feature report bug question possible something adjusted current behavior click button console outputs event name change input outputs expected behavior expected versions react browser os affected issue work previous versions react upgraded react version button event name looks like name constructor used change events created calling directly uses create new constructor defined function named seeing say anything issue happens effects chrome firefox edge say heyimalex explanation correct', 'date': '2018-11-06T10:00:23Z'}"
"26505",26504,"{'data': 'use typescript types nt define want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior error versions react browser os affected issue work previous versions react type definitions react maintained definitelytyped community touch ts maintainers please raise find issue solve temporarily add custom defined reactdts file project types folder import react react declare module react function usestate defaultvalue newvalue gt void hopes works', 'date': '2018-11-06T08:17:13Z'}"
"26506",26505,"{'data': 'suspenselazy working expected display none removed want request feature report bug bug current behavior suspense adds display none top level child elements current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example code sandbox ca nt render either example would expect see div would display none expected behavior visible display none children versions react browser os affected issue work previous versions react revert back reactloadable fix specific general bug general bugs tracking right ie specific worked chromesafari display none left child components able go check style inspector see components loaded fine take codesandbox add edit packagejson compile support download build locally deploy nowsh get page successfully displays hello world opened jaruesink confirm anything different tested hmm hoping would simple guess complicated using router lazyloading router components file working everywhere except ie flow vendors import react component suspense react import connect reactredux import route switch reactrouter import connectedrouter router connectedreactrouter import classnames classnames import history store layouts import layoutauth layoutpublic styles import pagelayoutscss components import loading components types type props isauthenticated boolean class layoutglobal extends component render const isauthenticated thisprops const mapstatetoprops auth isauthenticated object gt isauthenticated export default connect mapstatetoprops layoutglobal oh think found bug', 'date': '2018-11-05T21:27:18Z'}"
"26507",26506,"{'data': 'usestate unsafe return unsafe setter component unmounted setter called get warning class component handle unmount event avoid situation example click button get warning console cleanup logic complicated case separate unmount render cleanup handle useeffect returning function cancels set call unmount thought issue two common cases api call depends props heyimalex solutions fits well depends props pass second argument solution additional benefit props changed api call old props values result needed helps us avoid mistake result previous api call received later result last call set consistent value state think bug yep works intended could also abort request effect cleanup pretty annoying class practice suspense intended primary data fetching mechanism rough edges time need use often use asyncawait pattern case somehow useeffect async gt let unmounted false let newn await apicall n like though js const ismounted useref true useeffect gt performcall return gt ismountedcurrent false async function performcall let newn await apicall n ismountedcurrent setn newn longer term suspense recommended solution instead elaborate suspense recommended solution using hooks api wise imagine hooks flexible mean suspense intended api data fetching would look something like need handle effects race conditions etc api wise imagine hooks flexible use suspense inside hooks need reason many use cases suspense alone enough ah wondering suspense could used within hook looking forward seeing action totally missed hook way exactly needed deal ismounted things previously assign component instance ie naming nt intuitive easy confuse component gt easy confuse component ref concept though intentionally widening meaning also similar refs ocaml mean', 'date': '2018-11-05T20:35:09Z'}"
"26508",26507,"{'data': 'provide ways bail inside hooks separate issues wanted file issue track general nt offer way bail rendering update processed gets bit weird actually process updates rendering phase already rendering could offer way bail children nt let subscribe part context value memoized selector without fully rerendering cc markerikson probably want subscribe one yay thanks gt nt let subscribe part context value memoized selector without fully rerendering receives second param nt guess right context one existing limitation ignoring unstable part alexeyraspopov nope example js function contextusingcomponent subscribes update context value object const largedata usecontext mycontext early bailout without actually rerendering means ca nt locally derivation see changed example assuming magic usage reactredux imagine redux state tree looks like top calculate bits based key names maybe change results bit turned connected component interested changes pass bitmask bit turned change sets bit react kick rerender component bitmasks nt overlap however component interested changes bit still may want rerender depends whether derivation changed realistic example user list item interested changes wants rerender changed perhaps possible api would hood snikobonyadrad wo nt work second argument already value gaearon semistupid question given returning exact elements reference already skips rerendering children would kinda already solve js function contextusingcomponent const largedata usecontext mycontext const deriveddata derivesomedata largedata markerikson yes means contextusingcomponent needs know even might otherwise want put two usecontextderive calls custom hook yeah know tossing sort semistopgap idea initial thoughts real api like might look like crazy idea add reconcilerknown symbol sure would mesh interrupting hooks running already problem reconciler throwing hooks already run component suspends personally nt like would expect nothing similar also call could whatever needed probably throw marker suggested especially ignore call first render probably skipped also thought possibility return early render method marker would nt work custom hooks hand skipping rerendering custom hooks might strange think', 'date': '2018-11-05T19:12:20Z'}"
"26509",26508,"{'data': 'synthetic keyboardevent support keyboardeventcode want request feature report bug feature current behavior current synthetic keyboard event support keyboardeventcode property expected behavior synthetic keyboard event pass along keyboardeventcode property currently wd dom events part replacing much consistent easy use currently supported ff chrome caniuse may bit premature fully integrate however deprecated eventually need added edit spoke quickly caniuse shows ff chrome safari opera support ie edge mobile browsers seems like safari also supports looking caniusecom want send pr seems like keyboardeventkey property also probably added happy send pr nt hear back jjspace charliesmart already feel free send pr philippspiess right already implemented correctly adapted code use lieu happy take look adding wont much time weekend charliesmart someone else wants nt seem like large change apart browser support created pr pass property along synthetic event looked solutions provide polyfill browsers without support like edge ie property actually complicated needs access actual hardware keycodes seen really possible also change docs go updating also would make sense comment partial lack browser support', 'date': '2018-11-05T16:28:51Z'}"
"26510",26509,"{'data': 'usecontext returns invaliddefault value used inside custom react renderer want request feature report bug want request bug current behavior inside component custom renderer tree default value value passed function returned expected behavior expected behavior get latest value context versions react browser os affected issue work previous versions react reproduction case already filed related bug reactdevtools issue tracker expected limitation see workaround', 'date': '2018-11-05T15:23:02Z'}"
"26511",26510,"{'data': 'simple react app using hooks starts using cpu far understand bug current behavior simple app created cli replaced file following javascript import react useeffect usestate react import appcss const app gt const usestate default const usestate default useeffect gt settimeout gt done waiting useeffect gt settimeout gt done waiting infinitely tries load test hence cpu usage useeffect gt fetch test gt done waiting useeffect gt fetch test gt done waiting return value value export default app nextnpm start linux machines see firefox starts eating cpu small amount time chromium expected behavior expect cpu usage stays low obviously could test value perform operation different default value might complicated cases versions react browser os affected issue work previous versions react firefox chromium ubuntu ok seem expected effects run every render default scheduling update effect update leads render making effects run probably warn infinite async loop fix provide second argument example want run provide want run effect value eg changes specify see ooooh nt caught empty array trick silly nt read note end useeffect documentation ps definitely like dev hooks way leaner easier read hoc spaghetti seen', 'date': '2018-11-05T15:20:40Z'}"
"26512",26511,"{'data': 'usecallback invalidates often practice related issues problem often want avoid invalidating callback eg preserve shallow equality avoid resubscriptions effects depends props state likely invalidate often see current workarounds nt suffer reducer evaluated directly render phase sebmarkbage idea giving similar semantics likely require complex implementation work seems like something like though filing acknowledge issue exists track work gaearon thank answer reactjsrfcs look sources ca nt understand related issues mutation ref rendering explain brief gt look sources usereducer ca nt understand related usecallback lets memoize callback avoid different function passed every time specify everything depends second array argument something props state callback might get invalidated often nt suffer issue function gives stay rerenders even reducer closes props state works reducer runs next render thus natural ability read props state would nice could also something like clear issues mutation ref rendering explain brief concurrent mode yet released would remember last rendered version nt great render different workinprogress priorities async safe would nice second argument injected dependencies callback function javascript function usecallback cb deps gt lastdeps deps save current deps cb deep somewhere lastcb cb const mycallback usecallback state props gt b gt b state props state props mycallback', 'date': '2018-11-05T15:06:53Z'}"
"26513",26512,"{'data': 'alternatives functional components want request feature report bug na current behavior quite convenient wrap parts complex uis functional components simply compose together especially different configurations repeat elements consider following example js class useraccountpage render const useraccount gt return const loginbutton gt return const quit gt return switch thispropsloggedin case yep return see change state props causes functional components remount underlying tree perhaps design wonder alternatives syntax using functional components quite descriptive since looks like regular html jsx suggest use regular components define inline like sure minor readability benefit worth issues ideas improve api please post thanks', 'date': '2018-11-05T14:48:22Z'}"
"26514",26513,"{'data': 'rapid successive calls unloaded cacheresource items suspense results silent lockup want request feature report bug report bug current behavior using suspense triggering several veryrapid noncache hits locks nearest parent suspense component remounted current behavior bug please provide steps reproduce visit open devtools show network inspector click post view click next button focus keyboard press space bar multiple times quickly inspect network tab find later posts requests happen post requests made also called expected behavior cacheresource requests called regardless quickly many pending requests currently inflight versions react browser os affected issue work previous versions react react browser official build os macos mohave likely issue try see fix solves looks like indeed fixed therefore fixed see', 'date': '2018-11-05T14:18:01Z'}"
"26515",26514,"{'data': 'useeffects called second argument nt change tried get familiar hooks created custom hooks called use useeffects passing props propsvalue optional second argument problem called nt change demo create minimal example cleaned code drop code snippet javascript const usevalidator intialvalue value validator delaytime gt const iserrormessagedispalyable seterrormessagedisplayable usestate intialvalue useeffect gt seterrormessagedisplayable true value return iserrormessagedispalyable expect set true changed case set true even nt change runs initial mount source confusion yes sorry maybe got trick avoid maybe future maybe read documentation may miss something yep docs using effect hook hooks faq', 'date': '2018-11-05T13:00:14Z'}"
"26516",26515,"{'data': 'bug react hooks issue intervals want request feature report bug bug current behavior created react hook displays counter incremented every increments counter struck would update anymore current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example bug reproduced expected behavior expect counter increment continuously without getting stuck increments versions react browser os affected issue work previous versions react react chrome windows working version look use sideeffects gt working version look use sideeffects awesome thanks lot', 'date': '2018-11-05T10:10:50Z'}"
"26517",26516,"{'data': 'input stuck sure understand mistake think user input hight priority update update user input first use demo elements updating input smoothly smoothly ps try', 'date': '2018-11-05T09:54:22Z'}"
"26518",26517,"{'data': 'getstate hook proposal provided state value currently used componentdidmountlike scenario asynchronous functions state updated following initial run upon trying give hooks try real world application initially confused accessing state little example tried javascript const userlist gt const users setusers usestate useeffect gt const socket io dashboard socketon user connect user gt setusers users user socketon user update user gt let newusers usersmap u gt uid userid user u setusers newusers socketon userssetusers socketon user connect users useeffect socketon binds became skeptical hooks use case sadly thought would journey using hooks instead class components would end fortunately found solution problem someone indirectly helped accident reactflux channel using updater function made work problem solved wondering ever need access outside updater function ie reply websocket message value state unable force users revert class components cases therefore would like suggest hook would ideal solution problem another mini example demonstrating problem concise manner javascript const hookscomponent gt const value setvalue usestate val consolelog output instead one proposed solution javascript const hookscomponent gt const state setstate getstate usestate val socketon calls way pass state second argument time state changes socket listeners clean resubscribe btw think wanted access new state useeffect avoiding misuse gt pass state second argument useeffect time state changes socket listeners clean resubscribe unsubscribing subscribing sockets every message would idea performance wise least intended though think way around using instead see gt gt pass state second argument useeffect time state changes socket listeners clean resubscribe unsubscribing subscribing sockets every message would idea performance wise least probably better split two effects connect separate effect yup idea thchia use brilliant could dispatch action new user internally would merge current user list like javascript const usersreducer users actions gt switch actiontype case adduser return users actionpayloaduser case updateuser const user actionpayload return usersmap u gt uid userid user u default return users const userlist gt const users dispatch usereducer useeffect gt const socket io dashboard socketon user connect user gt dispatch type adduser payload user socketon user update user gt dispatch type updateuser payload user edit example custom event instead sockets connections considered usereducer wa nt use redux boilerplate instance want simplicity case turns better achieved class components reducer mean redux reducer pretty much like arrayprototypereduce try use useref could possible let access current value time chibiblasphem means boilerplate jumping hoops expect react hooks make life simpler complicated hum nt think hooks mean make life simplier code better designed less possibility break nothing stops calling setusers returned custom hook ref updated javascript function useuserlist initialusers const users setusers usestate initialusers const usersref useref users return users usersref setusers function mapper usersrefcurrent mapper usersrefcurrent setusers mapper const userlist gt const users setusers useuserlist refs made known limitation might make handle cases better future know practice invalidates often current recommended workaround one three options resubscribe cheap enough resubscribing expensive could wrap api using make cheap avoid closing variables nt solve use cases especially also need perform side effects gets pretty close also hacky workaround using refs essentially emulates classes recommend last resort since may cause issues future least worse classes want provide better solution take time filed track root problem', 'date': '2018-11-04T22:43:27Z'}"
"26519",26518,"{'data': 'shallow render component containing hooks want request feature report bug bug current behavior error thrown invariant violation hooks called inside body function component current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example appjs javascript import react usestate react const app gt const name setname usestate chris return hello name export default app testjs javascript import react react import shallowrenderer reacttestrenderershallow import app componentsapp const renderer new shallowrenderer rendererrender expected behavior able shallow render component hooks like component enzyme versions react browser os affected issue work previous versions react yeah nt added support shallow renderer yet know scheduled nt like really much full mount application definitely prerequisite considering hooks stable ca nt give dates though ok good know thank answers', 'date': '2018-11-04T22:32:16Z'}"
"26520",26519,"{'data': 'hooks update array parameter length changes want request feature report bug bug current behavior update length array argument changes hooks array parameter behave way fiddle second render trigger recalculation variable even though second argument changed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior second argument changes length recompute current behavior might design slightly unusual use array parameter case case would argue easy pitfall fixed least documented nowhere docs say length array parameter constant input array varying length one could assume fine splice parameter everything work potential good reasons using data array one elements instead splicing eg array gets mutated dynamically generated based potentially mutated data versions react browser os affected issue work previous versions react appear design agreed note docs could useful added runtime warning recently yet release believe want send pr docs repo adding note useeffect section reference page', 'date': '2018-11-04T21:13:30Z'}"
"26521",26520,"{'data': 'type error module exported members suspense lazy want request feature report bug think bug current behavior react failed compile versions react browser os affected issue work previous versions react used flag tested new project without flag worked well config packagejson tsconfigjson update least probably meant open issue facebookcreatereactapp way smile maintain react type definitions maintained community definitelytyped may lag behind react features released week ago', 'date': '2018-11-04T15:25:52Z'}"
"26522",26521,"{'data': 'eslintpluginreacthooks work wrapped components linter shows error first component ignore second one probably handle although ideal pass anonymous function since give chance name think common case anonymous function wrapped several hocs application uses wrapped variant need think name inner function nt want use named function helps debug code react dev tools solve issue eslint sandiiarov two hard things computer science example super simple real life finding appropriate name hard thing alexandershushunov would like send pr plugin support gaearon experienced eslint rules writing always wanted write one', 'date': '2018-11-04T07:11:11Z'}"
"26523",26522,"{'data': 'set functions state using react hooks want request feature report bug bug current behavior set functions state using react hooks current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example using react hooks nt work using thisstate expected behavior sure expected behavior ideally one able set whatever want state example done using thisstate versions react browser os affected issue work previous versions react wawhal typo sandbox edgesoft bad fixed typo still nt work wawhal edgesoft yes works workaround expected behavior following also works however would good know intended behavior wawhal reason unexpected behavior lazy evaluation pass function called return value used initial state passing function updater case called current value need return new state bug weird behavior especially new users might read api docs thorough ah got want set function state need provide function returns function really weird though intuitive mean could call function set returned value reason ca nt directly set want set thanks input henribeck think lazy initialization makes sense something plan often write custom hook wooo import usestate react export default function usefunctionasstate fn const val setval usestate gt fn function setfunc fn setval gt fn return val setfunc wherever want state value always going function import usefunctionasstate hooksusefunctionasstate function mycomponent props const myfunc setmyfunc usefunctionasstate gt consolelog woo custom hooks reason lazy initialization makes sense otherwise would compute something every render become performance problem would advise making everything lazy evaluated initial state unless primitive value like numbers booleans strings etc unfortunately intended make cases api simpler though admit bit pain', 'date': '2018-11-03T08:50:17Z'}"
"26524",26523,"{'data': 'hooks provide alternative way create memoized selectors hi question clarify behavior correct assume using new hooks api would enable developers create essentially memoized selectors making custom memoized hook would read given values reducer something vaguely would like vtext emojis getemojis state gettodos state used pure component like const todos dispatch usefromreducer usereducer rootreducer rootreducerinitialstate mainactionsresettodos nt essentially mean wish get combination data different reducers like example could done reselect could create logic inside hook multiple different reducers pass custom hook using component completely base sense could make able create reselect like memoized selectors hand hooks would seriously awesome yes something like work perfectly note avoid calling getemojis gettodos twice storing local variable inside usefromreducer function costly help', 'date': '2018-11-02T21:57:06Z'}"
"26525",26524,"{'data': 'hooks affect use memoized redux selectors hi question clarify behavior correct assume using new hooks api would enable developers create essentially memoized selectors making custom memoized hook would read given values reducer something vary vaguely would like javascript defining custom hook mapping values reducer combination necessary gettodos simple wrapper state gt statemaintodos const usefromreducer reactmemo state dispatch gt todos gettodos state dispatch used pure component like const todos dispatch usefromreducer usereducer rootreducer rootreducerinitialstate mainactionsresettodos nt essentially mean wish get combination data different reducers like example could done reselect could create logic inside hook multiple different reducers pass custom hook using component completely base sense could make able create reselect like memoized selectors hand hooks would seriously awesome', 'date': '2018-11-02T21:37:14Z'}"
"26526",26525,"{'data': 'usecallback warn something returned seems return value omitted probably fine necessary react warn something returned mentioned docs huh seems surprising unless wanted leave door open delaying steida double checked implementation think claiming right usecallback returns either first argument exactly value past render modify function way probably bug code thank quick answer sorry confusion', 'date': '2018-11-02T20:02:15Z'}"
"26527",26526,"{'data': 'react onkeydown called fullscreen chrome want request feature report bug bug current behavior element requests fullscreen parent element onkeydown binding fullscreen keydown events bubble onkeydown binding current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reproduce steps click text start typing see keyboard strokes appear text also see strokes logged console click toggle fullscreen button wo nt see anything probably limitation jsfiddle type strokes see strokes logged console click esc exit fullscreen see latest keyboard strokes appear text expected behavior would expect react onkeydown binding receive keydown events documentaddeventlistener even fullscreen versions react browser os affected issue work previous versions react chrome mac osx sierra react found solution issue element fullscreened tabindex focus events bubble react onkeydown binding updated new version jsfiddle works addition tabindex', 'date': '2018-11-02T17:54:06Z'}"
"26528",26527,"{'data': 'warning message updating unmounted component using hooks want request feature report bug guess current behavior try use unmounted class component get warning expected would true hooks current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example quickly navigate pageb back pagea cleanup soon get called expected behavior think result warning class component maybe versions react browser os affected issue work previous versions react get warning visit sandbox click b click back wait assume means working intended please reply missing something happy reopen also tried sophiebits strange get though appears first time happened sure intended edit think know story probably nt see first warning made changes cleared console', 'date': '2018-11-02T17:08:00Z'}"
"26529",26528,"{'data': 'confusing refs attached time usemutationeffect runs nt work expect gaearon could called synchronously dom mutation dom element even add believe would use case fires synchronously dom mutations allowing ref settle caryyon believe would use uselayouteffect case fires synchronously dom mutations allowing ref settle ya works gaearon use usemutationeffect refs set time runs struggling think could used nt live handles dom within callback', 'date': '2018-11-02T17:01:45Z'}"
"26530",26529,"{'data': 'style attribute applied backgroundimage contains parenthesis could nt find reference guess know issue already want request feature report bug bug current behavior using inline styles set url path containing parenthesis nt apply style attribute dom element demo repro codesandbox expected behavior apply style attribute versions react browser os affected issue work previous versions react seems affecting versions specific browser os need quotes', 'date': '2018-11-02T14:37:05Z'}"
"26531",26530,"{'data': 'suspense fallback remounts child resolves want request feature report bug sure bug feature request current behavior component given fallback suspense remounted time lazy child resolves example shows fallback component counts mounted expected behavior fallback mounted unmounted lazy children resolved example counter would run versions react browser os affected issue work previous versions react react looks like expected behavior resolves component tries render children throws another promise renders fallback nope three promises thrown parallel every time promise resolves attempts rerender children seeing children unresolved renders fallback course promises resolved however concurrent mode observed behaviour aligns expected behaviour one apparent bug children nt render delay milliseconds machine least sure happening try look css loading spinner due remounting fallback component animation spinner smooth seems like bug added failing test sure bug unavoidable quirk sync mode thanks', 'date': '2018-11-02T11:57:22Z'}"
"26532",26531,"{'data': 'hooks useimperativemethods multiple refs sure post question feel free delete nt belong small accordion accordionpanels uses hooks manage state panel opened need scroll need ref question hooks supposed used see problems approach appjs js function app const panels panel panel panel accordionjs js function useaccordion panelscount const currentindex setcurrentindex usestate undefined let refs const accordionpanel reactforwardref props ref gt const containerref useref function accordion props return propschildren part looks shady js let refs think happen would make sense nt allow lazy initialization workaround lazy init edited use mean right possible use inside loops gaearon sorry edited putting refs inside state good idea way managed put inside otherwise nt seem work const refs setrefs usestate undefined useeffect gt let refs let lt panelscount refs createref setrefs refs hmm sounds complicated refs alone work mind posting code sandbox sure created fork sandbox solve original problem ca nt really array refs seem like clean workaround least particular usecase happy receive feedback nt preserve old refs changes reattached current render commits use', 'date': '2018-11-02T11:11:35Z'}"
"26533",26532,"{'data': 'elements able contain components return strings render output correctly want request feature report bug feature request current behavior use component returns string inside option textarea element component rendered object object current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior string returned component rendered elements innerhtml versions react browser os affected issue work previous versions react working accidentally react apparently buggy crash prone longer works react specific use case feature using translation component enable replace strings multilanguage application clean convenient able use component inside potentially also elements currently working around using reactdomserverrendertostring ideal yeah would nice sure implement let keep open taking crack updating reactdomoption like obviously without function flattenchildren children let content flatten children warn invalid validateprops runs hydration note would throw nonelement objects elements stringified normally irrelevant matters reactchildrenforeach children function child child null return consolelog child type typeof child consolelog child child let childtypeval typeof child object amp amp typeof childtype function consolelog childtype childtype childtypeval childtype content typeof child object amp amp typeof childtype function amp amp typeof childtypeval string childtype child note nt warn invalid children instead done separately happens hydration codepath return content works breaks unit test typeerror read property content undefined wondering right approach add tostring object wrappers component similar test functional component created returns simple string sure code lives someone guide component wrapper happens edit ok never mind found added following reactelementjs const reactelement function type key ref self source owner props const element tag allows us uniquely identify react element typeof reactelementtype typeof type function amp amp typeof type string elementtostring gt type dev validation flag currently mutative put external backing store freeze whole object replaced weakmap implemented commonly used development environments elementstore return element satisfies unit test plus one added reactdomoptiontestjs support component returns string gt function stringcomponent return hello question better way determining return type function without actually calling understand adapted original html form works exactly intuitive prop accept strings mean unlikely first place react expects children must strings elements nt special handling', 'date': '2018-11-02T08:27:15Z'}"
"26534",26533,"{'data': 'see breakdowns user timing want request feature report bug bug current behavior ca nt see information specific components listed profile react app following directions described tutorial recommended react docs others recently reported issue stackoverflow current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example reproduce using simple repo found internet clone repo contains several examples user timings information show app interestingly user timings showed correctly example app navigating lifecycle app folder run add url open chrome performance tools press start profiling reload page open user timing section select specific component tab shows expected nothing tabs expected behavior tabs show sub call information described tutorial versions react browser os affected issue work previous versions react sure problem previous versions major version react one stackoverflow questions mentioned react sounds like could problem please file chrome control tabs chrome decides show maybe chrome bug thanks anyone else runs issue bug', 'date': '2018-11-01T22:44:53Z'}"
"26535",26534,"{'data': 'state variable updating useeffect callback want request feature report bug bug maybe although thinking makes think misunderstood something current behavior state variable updates rendered output inside event callback reckon might due fact defined defined scope updated component rerendered jsx import react usestate useeffect react const scroller gt const scroll setscroll usestate windowscrolly const handlescroll gt consolelog scroll scroll always setscroll windowscrolly useeffect gt windowaddeventlistener scroll handlescroll return gt windowremoveeventlistener scroll handlescroll runs return scroll scroll correct export default scroller please play expected behavior updated inside event callback render output versions react browser os affected issue evolutionxbox bug normal behavior doc check issue detail short using second parameter need put variable state rely case want access state variable need put obviously maybe nt want nt want create remove event listener everytimes way use effect responsible modifying getting value one way see issue code example hope clear yep right might offer convenient way future rule thumb use variable must declare dependency array omit array entirely example array true would cause resubscribe often way avoid convenient might cause issues future plan add better way later take time implement help thanks aywa gaearon filed track root problem', 'date': '2018-11-01T22:20:39Z'}"
"26536",26535,"{'data': 'element containing component returns string rendered object object want request feature report bug bug current behavior use component returns string inside element component rendered object object current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior string returned component rendered elements innerhtml versions react browser os affected issue work previous versions react issue started occur version occur version earlier versions ppeppercc bug element accept label string accept another dom element replace react functional component see exact behaviour yeah really sorry worked accidentally cases crashed others nt intended work crashing bug fix always treat text understand frustrating started relying might eventually properly support behave exactly like children converted strings', 'date': '2018-11-01T15:52:40Z'}"
"26537",26536,"{'data': 'keyboard shows hide clicking input androidchrome want request feature report bug bug current behavior android chrome click input keyboard show hides immediately thus use input keyboard behaviour portrait mode current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example site problem login page found jsfiddle code tested jsfiddle works devices input page nt nt nothing differently jsfiddle devices works correctly tested samsung galaxy huaweii pro nt work samsung galaxy works expected behavior keyboard show stay order write data input versions react browser os affected issue work previous versions react react reactdom reactrouter reactrouterdom chrome android samsung galaxy nt work galaxy works aykelith happens adaptiveness page replicate desktop open site new browser window focus inputs resize window make smaller similar like keyboard mobile shown window become smaller point repaint whole app focus lost code page probably causing whole problem nt see reason expect react specific issue react specific please prepare example nt use react nt exhibit problem', 'date': '2018-11-01T13:26:36Z'}"
"26538",26537,"{'data': 'function components support contexttype want request feature report bug bug current behavior warning withrouter registermodal function components support contexttype expected behavior error versions react browser os affected issue work previous versions react unfortunately unable reproduce codesandbox javascript import react component react import withrouter reactrouterdom import errorcontext errorcontext class registermodal extends component render return test registermodalcontexttype errorcontext nt cause error export default registermodal causes error export default withrouter registermodal reason whenever wrap registermodal component withrouter get error weird thing setting contexttype directly class hoc function applied appears get rid error reason using static class properties syntax best guess react router copies inner class static fixed get fix automatically update lockfile usings contexttype themecontext example component context api suggests react still issue', 'date': '2018-11-01T11:36:13Z'}"
"26539",26538,"{'data': 'plan enable usage hook class component want request feature report bug feature current behavior hooks used functional component expected behavior plan enable usage hooks class component hi know quite drawbacks class component one motivations hook introduced hook seem outstanding however due javascript proposal decorator used class may indicate conflict hook decorator question possible developers use hook class component future possible use hook decorator time react thanks kind decorators referring class decorators normally work function components anyway example javascript observer class mycomponent extends reactcomponent basically equivalent const mycomponent observer gt doubt see hook support classbased components gt kind decorators referring class decorators normally work function components anyway example js observer class mycomponent extends reactcomponent basically equivalent const mycomponent observer gt doubt see hook support classbased components hi mean actually class decorator like mentioned property decorator debounce ect anyway hooks cool find many decorators somehow implemented hooks api thanks reply', 'date': '2018-11-01T06:38:04Z'}"
"26540",26539,"{'data': 'property memo doest exist type typeof react property memo doest exist type typeof react download lastest typesreact memo method believe still react version introduced react illuminist yeah lastest version checks failed closing since nt currently maintain ts typedefs watch pr landed definitelytyped', 'date': '2018-11-01T04:39:44Z'}"
"26541",26540,"{'data': 'hooks jspm support want request feature report bug bug current behavior hooks used jspm build react example html untitled app import react import reactdom function button props const position setposition reactusestate return reactcreateelement button children propschildren onmousemove event gt setposition left eventclientx top eventclienty style position position positionleft fixed absolute reactdomrender reactcreateelement button null add contact documentgetelementbyid root lt script gt following error given uncaught error hooks called inside body function component invariant resolvedispatcher objectusestate button however code works fine loading react via unpkg lt script gt tag html untitled app', 'date': '2018-11-01T03:43:07Z'}"
"26542",26541,"{'data': 'unexpected copies props object retained memory new hooks api want request feature report bug bug current behavior jsx function useeffect gt consolelog mounted return gt consolelog unmounted function props useeffect gt consolelog propstest return object used component rendered first time kept alive completely unexpected behavior even developer understands closure context sharing current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example select test click button create new array times take memory snapshot developer tools inspect array objects arrays retained memory expected behavior arrays retained memory wonder could issue mind looking retains references similar issue thought retained state expected behavior react makes even worse retained memory also add conditionally firing effect cleanup function even inside custom hook retain memory closure context render function created conditionally firing effect fired another codesandbox example clearly shows deeply nested component trees closure contexts retained', 'date': '2018-11-01T02:48:53Z'}"
"26543",26542,"{'data': 'suspense delaying initial render whole application want request feature report bug bug maybe something wrong current behavior component resourceread wrapped causing whole application delay initial render exceeds current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior expect delay render code within component whole component versions react browser os affected issue work previous versions react react reactcache reactdom think confused suspense works suspense delay entire app whole point waits everything consistent applies changes way everything appears instead jankily popping piece piece since would nt want suspend forever eventually react give switch rendering fallback component nt want particular subtree block rest app decrease prop threshold reached app suspended expected behavior ok understood thanks explanation wrap whole app component actually want suspend work mean love new suspense feature imo user comes sees app initially white bad user experience think mental model backwards nt use suspend parts tree use unsuspend rest tree takes bit adjustment get used start certain parts tree taking long use tell react long willing wait put around stuff nt want wait understand thanks', 'date': '2018-11-01T01:28:53Z'}"
"26544",26543,"{'data': 'useimperativemethods uselayouteffect causes error creating component causes error want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react', 'date': '2018-11-01T01:16:13Z'}"
"26545",26544,"{'data': 'getting dispatcherusecontext function testing jest hooks want request feature report bug bug current behavior know still alpha sorry early posting testing components jest using reacttestrenderer getting whenever trying use hook expected behavior test pass issues versions react browser os affected issue work previous versions react updated reactdom well issue tried use hooks reactdom yes hooks work fine browser tomitrescak render components testing trysound using full repro js import create reacttestrenderer renders correctly gt const context reactcreatecontext const processinstanceitem gt const context reactusecontext context const list create error thrown expect list tomatchsnapshot repro codesandbox view tests get error ok figured using reacttestrenderer', 'date': '2018-11-01T01:07:09Z'}"
"26546",26545,"{'data': 'reactdomserver import conflicts nosubmoduleimports tslint rule want request feature report bug question submodule export reactdomserver current behavior way import reactdomserver documentation conflicts tslint rule nosubmoduleimports couple fixes available like disabling rule setting tslint config disabling rule reactdom expected behavior plan make reactdomserver available toplevel export reactdomserver public api feel fine importing nt think planning change adjust linter accomodate', 'date': '2018-10-31T22:04:18Z'}"
"26547",26546,"{'data': 'provide way trigger useeffect tests hello tried testing components use cool new hooks api nt seem work test renderer small failling jest test js import react useeffect react import create render reacttestrenderer calls effect gt return new promise resolve gt render function effectfulcomponent effect useeffect effect return null minimal reproducing repo note use apis seemed work eg try using like currently hook test executing think intentional behaviour far understand executes paint never paints nt use dom edit typo smile thanks arianon works want use issue exists another test js import react useeffect react import render reactdom calls effect gt const container documentbodyappendchild documentcreateelement div return new promise resolve gt render container function effectfulcomponent effect useeffect effect return null maybe passive postpaint hooks nt work inside jsdom something trigger thanks updating issue fact useeffect nt triggered also render using reactdom use different api rendering heh nt cut bleeding edge years one got skidding guess wait working workaround uses reactdom seems like trigger effects either rerendering element place rendering another root somewhere else document even detached node sure hooks nt called first place though since requestanimationframerequestidlecallback available jestjsdom environment tip fixed library fixed tests mocking useeffect return uselayouteffect tests useeffect module component use component test mock like following think nt need hassle jest would automock create file great workaround nt need touch code somehow fixed remove mock', 'date': '2018-10-31T21:53:53Z'}"
"26548",26547,"{'data': 'using getderivedstatefromerror getderivedstatefromprops foot gun want request feature report bug feature current behavior andor put component state avoids cause error reverts state change error boundary obviously fail avert disaster sounds obvious simplified like team updated react suddenly started happening us something changed internally hard pinpoint unfortunately nt able create small repro specific case works making issue avoiding cause first place expected behavior naively thinking errors exceptional let state error handlers take precedence probably reason ca nt happen warning kind happen would nice two ways comes mind crosscheck keys state nt collide sounds bit far fetched explicit documentation error boundaries run last developer consider case versions react browser os affected issue work previous versions react behaves bit differently see platformsbrowsers hmm nt quite see unexpected seems like resetting error generally bad idea unless compare props decide reset error eg maybe route changed case actually expect work missing practical scenario think agree since caused production crasher updating minor version react wanted report see anything done avoid might also legacy code breaking due intentional changes react basically happened case relied upon trigger twice row error occurred rendering change value change since changed found see discussed length called twice due single update error occurs first render since reset second never call render set something causing two crashes row turn causes error boundary skipped causing react unmount entirely understand nt written goal keep null much time possible since need probed fixes either prop change child replacement child may fix never null two erroneous renders row since error boundary fails footnote used legacy code since obviously nt exist end result would case guess trying say code returns something unconditionally symptom bug means code relies updates happen rather changes fair enough definitely rely changes given following scenario correct way set changes eg property change javascript static getderivedstatefromerror error return error render thisstateerror child component error state show red box return return thispropschildren sandbox indicates bug child component component control ui need handle good user experience recover component replaced updated work options think find every place error boundary used imperatively tell reset error rendering since error happen level even component renders twice recover error rely user press retry button error boundary compare value component upon error current value upon render show error identity equal erroring way attempt rerender eg resetting something stack changes probe potential errors either recover retain error state', 'date': '2018-10-31T20:10:47Z'}"
"26549",26548,"{'data': 'numericinput decimal issue impemented react numericinput code however noticed entering figure nt allow example works fine issue replicated link particular inline styles disabled format raised elsewhere told come raise thanks see see vladignatovreactnumericinput access fix latest version sorry quite new react thanks looked release documentation could nt see released hi provide sample code base screenshot reference hi issue fixed try upgrading react tomorrow currently using think memory work quite far behind report back tomorrow tried work supply sample code thanks upgraded latest version react fixed applied last version something different entirely get work issue react problem reactnumericinput component using third party package part react suggest write repository already linked previous post pullrequest seems author package maintaining last release nearly one year ago xizario oh see sorry really new react hence confusion makes perfect sense asked update link sent', 'date': '2018-10-31T14:13:32Z'}"
"26550",26549,"{'data': 'onkeydownonchangeoninput android device controlled input work incorrectly want request feature report bug bug current behavior character appears input handler triggered demo happens android device actual behavior demo happens pc expected behavior description example look codesandbox see controlled open android device attach chrome debugger add breakpoint line input number mobile device see number appeared input alongside breakpoint handler triggered expected behavior inputted number appear versions react browser os affected issue work previous versions react react chrome android android list devices issue tested deser react related proofs responsible react declares behavior also even nt declare anyway react consistent across devicesplatforms may want use event keydown keypress keyup browserdeviceosculture specific would use keyboard navigation example arrows delete key etc mdn good reference point start much information explained really place discussion gt gt may want use onchange event oninput tried issue reproduced guys android controlled input prevent typing short answer set thus controlled mode react keep overriding value input element value property kind preventing typing long answer tldr framework prevent typing directly like calling preventdefault native event since underlying input event cancelable instead framework restores values code execution finishes oninput works pretty much modern browsers event older like handy event used keydown prevented issue nt know typed keydown let illustrate person push button keyboard browser throws keydown event keycode character code code mapped os preferences language shift capslock pressed etc character available browser puts character element throws keypress event hold key multiple events fired however canceled keydown keypress never happen oninput user end release key get keyup event want know typed deleted dragged swiped pasted autocompleted dictated need allow entered input browser visible point process onchange event nt like typed override later something else part react automatically set key part overriding must happen shortest time possible frame end user able see flickering text end able see new value onchangeoninput place debugger yes end user able see ps simplified stuff technically correct short enough readable ok thanks closing issue thanks time', 'date': '2018-10-31T13:35:01Z'}"
"26551",26550,"{'data': 'display warning component called without props want request feature report bug feature enhancement current behavior parameter nt validated omitted common mistake results undefined constructor may result problem problem may harder determine previously working code stops working refactored js class mycomponent extends component constructor super error componentwillmount rewriting constructor code result situation thissetstate b thispropsb expected behavior validate parameter object least display warning development mode case nt passed child constructor versions react browser os affected issue work previous versions react react hi bisubus agree helps developers also try static state methods check article reference javascript import react component react class app extends component state appname thispropsappname render return thisstateappname export default app super super time however could perhaps warning accessing thisprops make getter sagargavhane style declaration personally prefer problem argument nt appear class field sophiebits getter reasonable solution nt see nothing wrong warning constructor though simpler implement promotes good practice provide parent constructor correct argument even secured lifecycle hooks lot nagging react warnings recommendatory nature', 'date': '2018-10-31T09:51:27Z'}"
"26552",26551,"{'data': 'react useeffect usestate recognizing state values working within graphql subscription want request feature report bug bug maybe could using hook wrong current behavior using current state value available state old state value available current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior state available memory versions react browser os affected issue work previous versions react codezip experienced think little confusing first think purpose put second argument basically said wanted run mount unmount passing empty array inputs tells react effect depend values component effect would run mount unmount never updates however case depend state put like however think proper way dont want subscribe every todolist change edit take back comment adding second argument subscriber indeed fixe issue maybe subscribeunsubscribe every render aywa nt think issue although see coming would want resubscribe list todos changed subscription set torn lifecycle tried moving variable subscribe effect case referenced stale value result javascript export function usesubscription const todolist updatetodos usestate removes reference effect state still reset somewhere function addtodostostate newtodos updatetodos todolist newtodos useeffect async gt const tododata await apigraphql graphqloperation query addtodostostate tododatadatalisttodositems useeffect gt const subscriber apigraphql graphqloperation subscription subscribe next data gt const value data oncreatetodo data addtodostostate oncreatetodo nt reference effect return gt subscriberunsubscribe return todolist far tell posted example follows subscription example docs exception merging previous state gt far tell posted example follows subscription example docs exception merging previous state example added second parameter see doc nt put second argument means call everytimes component rerender doc use optimization make sure array includes values outer scope change time used effect gt maybe subscribeunsubscribe every render thchia think multiple way achieve one way reducer guess way const initialstate todolist function reducer state action switch actiontype case set return todolist actionpayload case add return todolist statetodolist actionpayload export function usesubscription const state dispatch usereducer reducer initialstate useeffect async gt const tododata await apigraphql graphqloperation query dispatch type set payload tododatadatalisttodositems useeffect gt const subscriber apigraphql graphqloperation subscription subscribe next data gt const value data oncreatetodo data dispatch type add payload oncreatetodo return gt subscriberunsubscribe return statetodolist hey aywa solution think looking indeed fix issues either subscriber called every render state stale thanks much help going go ahead close ticket', 'date': '2018-10-30T23:26:21Z'}"
"26553",26552,"{'data': 'eslintpluginreacthooks ignore rendered component believe valid conditional state flow type refinement js function editor data page editorprops page null pagewebbordervalues null pagewebcolorvalues null pagewebdimensionvalues null pagewebelements null pagewebstyles null return null const elements pageweb const editorvalue seteditorvalue usestate gt const elementsbyid maparrayofobjectswithidtoobject elements const model dbmodeltoslatemodel pageelementid elementsbyid ssr keyutilsresetgenerator return valuefromjson model nt understand conditional state prove flow conditional flow types reflect ca nt prove flow sure null throw conditional return null first usestate componentdidorwillunmount suppose still clear behavior even though state preserved unmount effects run etc exactly nt support conditional calls effects confusing right reason created issue tried create another component editorwithdata flow infer props anymore recreating relay generated types without null verbose need handle case without many flow refinements within usestate callbacks somehow understand unconditional usestate required could exception early return first usestate believe hmm maybe overengineering ok throw seems better', 'date': '2018-10-30T23:13:19Z'}"
"26554",26553,"{'data': 'improve message dispatcherusestate function mixing react next reactdom want request feature report bug report bug current behavior getting trying call happening createreactapp well codesandbox example example expected behavior hook function execute without error defined api documentation versions react browser os affected issue work previous versions react react reactdom csb local reactscripts csb local need update reactdom version likely better error though leaving issue open track sophiebits thank issue reason thought tried packages suppose ready closed imo', 'date': '2018-10-30T23:08:04Z'}"
"26555",26554,"{'data': 'eslintpluginreacthooks believe valid case throw hmm realized throw used valid business case graphql endpoint updated render nothing request app update correct approach think nt warn', 'date': '2018-10-30T22:39:26Z'}"
"26556",26555,"{'data': 'crossorigin attribute needs applied attribute want request feature report bug bug current behavior react nt handle changing crossorigin attribute properly current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example img going attribute pure js first load origin set according chrome clicking react clicking img element get updated crossorigin image nt reloaded img loading twice pure js request fired check network tab headers react first load headers clicking reason request fired without origin header even crossoriginanonymous expected behavior rerendering img src defining attribute reload image header rerendering img src fire new request without header versions react browser os affected issue work previous versions react google chrome version official build react looks like probably src attribute gets assigned first change jsx crossorigin tag src looks like works correctly special case could possibly similar crossorigin though unsure want gt could possibly similar crossorigin though unsure want would arguments wanting', 'date': '2018-10-30T19:26:15Z'}"
"26557",26556,"{'data': 'ref initialized reactcreateref attached root element immediately available child really sure expected behavior strange current behavior ref attached root element parent component always returns null accessed lifecycle component class parent extends component constructor super thisparentelem reactcreateref componentdidmount consolelog parent thisparentelemcurrent render return div ref behave expected element class child extends component componentdidmount consolelog props obj thisprops ref render return test sandbox expected behavior ref expected point root element using react reactdom also tested react reactdom parent invoked child less expected behavior idea component fully initialize ie finish componentdidmount parent componentdidmount called probably recommend restructuring code nt issue', 'date': '2018-10-30T16:09:23Z'}"
"26558",26557,"{'data': 'usestate useeffect undefined want request feature report bug report bug current behavior upgraded react order able use new hooks method importing react browser keeps saying decided log react browser check version correct methods found current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example upgrading use normal import expected behavior would expect two functions defined know anything wrong could possibly gone wrong versions react browser os affected issue work previous versions react react browser chrome version official build os ubuntu hooks still rfc available alpha builds try something like bad noticed still proposal sorry', 'date': '2018-10-30T13:08:58Z'}"
"26559",26558,"{'data': 'react hooks old way components cached state value please see demo see old way component looks like javascript import react component react class oldlibrary extends component componentdidmount setinterval thispropsonprogress render return null export default oldlibrary simple component setting interval mount component use react hooks code matter click button onprogress always console logging initial value like state cached something nt know useref wo nt help use old way work fine thank listening question please help ca nt live without hooks first render app created onprogress function returns invoking function returns increment value within app value new function would return called continue call first function setinterval ignore fact oldlibrary second onprogress function passed props returns incremented value wrap setinterval would call first given directly internal method gets newest function props calls js import react component react class oldlibrary extends component onprogress gt thispropsonprogress componentdidmount setinterval thisonprogress render return null export default oldlibrary wojtekmaj thank solution think modify old code want ask one question way fix without touching old component know best solution rewrite old code question curious thank gave much thought came hacky solution set value outside function would nt recommend workaround wojtekmaj wow thank solution seems like way without hacky solutions thank might works hope would clearinterval unmount dislido yes would also work oldlibrary actually video reactplayer unmounting restart playing video sad wojtekmaj explanation correct onprogress prop gets updated new function old function passed setinterval class component example onprogress always reads latest mutable field nt able change oldlibrary best approach store value ref described faq js function app const value setvalue usestate const onclick gt setvalue value const valueref useref useeffect gt valuerefcurrent value const onprogress gt consolelog valuerefcurrent return lt gt note one sharp edges hooks right might introduce better way deal final release sophiebits thank', 'date': '2018-10-30T10:21:14Z'}"
"26560",26559,"{'data': 'ignore mistake context consumers updating development want request feature report bug bug current behavior context consumers updating running dev server work fine buildingbundling minimal example proprietary software ca nt paste full example root class context defined consumer file expected behavior triggering changes logout example new state updated logged consolelog beginning render propagate change consumer ie consolelog consumer code gets executed happens development versions react browser os affected issue work previous versions react code working perfectly months recently upgraded stopped working development works fine building use webpack build bundle special configuration note nothing changed devbuild configuration anything providerconsumer codes problem side reactdom still packagelock weird mismatch broke development', 'date': '2018-10-30T07:55:22Z'}"
"26561",26560,"{'data': 'typeerror dispatcherusestate function hit error trying use hooks upgrading react nt upgraded version experience could improved checking throwing error explains package date closing real bug hope somebody finds useful haha thanks using react next typescript hit error oo update believe issue reactkonva updated thx similar problem got error using jest update reacttestrenderer solved', 'date': '2018-10-30T05:31:39Z'}"
"26562",26561,"{'data': 'currentdispatcher gets set null calling reactdomserver reactdom happened notice react throw sibling element calls fiddle shows behavior think need manually open console see error wrap sibling element component even assign variable issue occur easy get around pretty specific bug might happening happens rendertostaticmarkup exits sets currentdispatcher null shared react package instead setting previous value reactfiberscheduler means call usestate child component dispatcher present acdlite thoughts restore old value think since legit even recommended use case call eg inside component least far using nextjs issue resolved temporarily dropping custom set reverting dist', 'date': '2018-10-29T18:21:46Z'}"
"26563",26562,"{'data': 'enable nesting aware context provider want request feature report bug feature current behavior currently nested context providers consumers always get closest provided value jsx const context reactcreatecontext function outer children return children function inner children return children function app return value gt value always inner desired behavior could somehow provide function provider takes previously set context value set value accordingly see codesandbox example primary problem solution use created context react hooks really faked context mimicking provider consumer thinking would done maintaining backward compatibility might look something like love api though could accomplish wrapping nested provider consumer hamlim attached codesandbox opens route confusion someone could still use contextprovider instead using secondprovider therefore bypass nesting behaviour like make behavior consistent enforced tried exposing secondprovider basic consumer contextconsumer nt support new hook needs full context object idea api like please propose rfc sounds similar', 'date': '2018-10-29T14:55:33Z'}"
"26564",26563,"{'data': 'cases hooks nt currently provide good answer vs hoc unsure right place trying noticed new react hooks feature aiming providing alternative composition pattern hoc render functions believe many use cases solved hoc framework level currently addressed new hooks api specifically way incorporate react hooks reactmemo unless incorrect means system would like implement optimisations based external context reactredux function uses implement efficient still need rely hocrenderprop automate optimisation reason bringing one main benefits stated documentation reduce framework level use hoc pollute tree reactredux connect hoc probably prevalent use case additionally redux specifically brought exemplary use case although current system cause large optimisation issues since optimised every connected component rerender every state change although might fit documentation repo discussion opinion feel mistake report rather discussion importance example solution could way use contexts unless incorrect access check docs reactmemo closely see second argument allows similar optimization possible however whispers certainly final able granular level especially hook able decide component rerender representing react team give detail definitely radar honestly really want optimize renders look mobx already gives much granular control rerender without explicit checks shouldcomponentupdate redux never good sure yes actually discussed exact issue dan sophie reactconf explain bit detail let say following setup js ancestor component ignore inline object example component function somecomponent const data usecontext mycontext example subscribe updated value given good except situations care derived result might want bail rendering unless changes reactredux indeed concrete example version going putting entire redux store state context given component would want rerender value extracted associated function changes notional hook would cause component always rerender part redux store changed derived value changes dan sophie aware want add way functional components bail rendering ie similar returning returning updater function said wanted time hooks finalized fixed goes final would able ship hook equivalent also able ship improved version reactredux built hooks internally drastically simplifying code see idea might look like implementationwise please try post feedbackquestions hooks rfc discussion nt get fragmented thanks', 'date': '2018-10-29T12:13:54Z'}"
"26565",26564,"{'data': 'usecontext contextconsumer nt receive updates properly think bug unless intentional expected behavior using context api implement dynamic loader parent component responsible triggering loading network data one grandchild components want consume data show loading data fetched current behavior migrated usecontext nt get rerender ca nt quite see going come update examples show dynamic behaviour supported highlight still need use contextconsumer looking like reactasync good generalisation current approach also provides useful view may go useasync building hooks api look even complex hood perhaps api core react good support coverage please provide code sample demonstrating bug reporting use starting point nealeu please provide reproducing cases reporting bugs lets us avoid backandforth chance fix thanks sorry folks read wrote see asking intended behaviour leave employers profit take time stick old ways things stable intentional based description unfortunately things get stable people help us isolating issues appreciate help reporting hope get details somebody else nealeu demo usecontext triggering rerender even though ancestor returns false shouldcomponentupdate purposes updates work exactly way context consumer component going close issue since nt believe enough info actionable us right end time comment small test case someone else runs issue definitely take look nealeu running tried latter found component received initial value get rerun context updated react team told actually bug passing consumer nt work passing entire context object still think debatable design decision mismatch rendering consumer works calling consumer nt markerikson whoaaaa nealeu confirm mention seen warning console saying warning calling usecontext contextconsumer supported may cause bugs removed future major release mean call usecontext context instead maybe make obvious released yet could better never add support begin detectable using usecontext context happy closed given working example thanks sofiebits another look come hackathon week', 'date': '2018-10-29T12:07:10Z'}"
"26566",26565,"{'data': 'ios causes strange clicktouchbehavior bug ios simulator device im sure exactly causing problem clicktouch events gets triggered outside buttons red squares trigger buttons inside yellow squares almost like buttons yellow squares flowing react reactnative reactnavigation folofse hey screenshot unclear issue verify indeed bug react trying build reproduction case uses sure react bug appreciate small example working codesandbox link enough ideally one button ohh sorry nt see using react native issue tracker react core react dom might want reach friends thanks ooops bad many tabs open time', 'date': '2018-10-29T10:43:20Z'}"
"26567",26566,"{'data': 'run well version get uncaught typeerror read property displayname null backendjs open page chrome error use react instead simple react page using react reactrouter redux code run well using following packagejson proptypes react reactdom reactredux reactrouter reactrouterdom redux change react version build ok error show console open page chrome uncaught typeerror read property displayname null getdisplayname getdatafiber enqueuemount mountfiber setforeach objectwalktree', 'date': '2018-10-29T06:58:22Z'}"
"26568",26567,"{'data': 'react nt provide api witch side affects top bottom want request feature report bug feature current behavior current version react requires lifecycles must pure functions nt side affect side affects unfriendly frameworks got memorize order ancestor component instance child component instance words like topological sort even reverse array achieve goal impossible distinguish end array react nt provide api let framework knows rendering done always called child instance ancestor instance react missing approach side affects top bottom current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example line expected behavior versions react browser os affected issue work previous versions react work properly sync rendering side affect constructor would cause unexpected result memory leak async rendering node may rendered multiple times think problem trying create chart try simplify example much got chart component inside line component created codesandbox example gt chart component take props indicates coordinate use inside data object altitude points expressed distance time also zoom chart managed inside chart component using state line component take props needs chart component draw line inside chart quite simple want things switch type want animate line done using transitions zoom nt want animation problem need determine render phase whether must animate state changed zoom nt want animate props changed want render access previous propsstate values nt want use prupose lifecycle method ans component purecomponent ca nt use unsafe legacy lifecycle methods compatible new component api someone know solution please let know tonai compare props getderivedstatefromprops mirroring state need perform sideeffect done componentdidupdate keep getderivedstatefromprops pure hi thank reply copying props state purpose comparing seems like hack situation might lot props tends rapidly increase complexity component case prefer using wich allow comparison set flag componant reason example seems impossible provide api usage scenario limited think hook making frameworks perceive rendering done necessary tonai example derived data might look like want know data changed something conditionally render example quite accurate case could simply call derive thispropsfoo inside render get value want need getderivedstatefromprops arises derive function nextprops prevprops would accurate say class expander extends reactcomponent state expanding false static getderivedstatefromprops nextprops prevstate nextpropsheight prevstateheight return prevstate height nextpropsheight expanding nextpropsheight gt prevstateheight return null render return height thisstateexpanding overflow hidden gt thispropschildren thanks example fact would great could access next prev values props state previous api seems like regression api since enforce trick like copying props state achieve want gt seems impossible provide api usage scenario limited think hook making frameworks perceive rendering done necessary addition initialization simplify one api like think react flexible enough nt provide enough hooks apis lowerlevel developers gt gt seems impossible provide api usage scenario limited think hook making frameworks perceive rendering done necessary addition initialization simplify one api like think react flexible enough nt provide enough hooks apis lowerlevel developers tired going develop react close', 'date': '2018-10-29T06:11:07Z'}"
"26569",26568,"{'data': 'useeffect fails production mode want request feature report bug bug current behavior rendering component calls production mode react crashes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example still working reproducing locally meanwhile relevant error sentry expected behavior error versions react browser os affected issue work previous versions react would helpful code example sorry delay simple repo repros code pretty straightforward bug seems caused latest version gt bug seems caused latest version uglifyjswebpackplugin mind reporting upstream please seems like ca nt fix sure thing', 'date': '2018-10-29T02:16:00Z'}"
"26570",26569,"{'data': 'suspense nt resolve subsequent times suspended want request feature report bug possibly bug current behavior repro demo github user search type one character wait list rendered everything works correctly subsequent fetches work way type two characters faster results first character rendered fallback never go although second request successful current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior suspense resolves last resolved fetch renders list users versions react browser os affected issue work previous versions react react reactdom reactcache think intentional behaviour adding key suspense fix nt think thats intentional handle cases like without requiring least emit warningerror quietly show fallback forever definitely bug', 'date': '2018-10-28T22:44:36Z'}"
"26571",26570,"{'data': 'suspense ping nt suspend suspended content already fallback mode using suspense hooks specifically nested async renders using cause state hooks updated specifically happens first promise settling last promise settling component however state updates concerned outside root linked example moving mouse update displayed coordinates first time first thrown promise resolves however ui show updated coordinates final nested promise adjacent root settles may using suspense wrong given understandable lack documentation bugs setup specifically example sometimes never render beyond loading placeholder especially noticeable setting higher timeouts component react reactdom reactcache reason disabling concurrent mode fixed problem maybe scheduler nt think suspense end used inside useeffect meant run render thinking hook wild guess moviesurl part cache key nt appear related hooks issue using class component force update inside handler flushed synchronously wrapping works expected react makes distinction interactive noninteractive events updates occur result interactive effect events like flushed immediately even concurrent mode say flushed mean dom updated new ui noninteractive events case considered noninteractive event update gets deprioritized case seems like encountering starvation issue flushing updates sibling suspended seems unexpected sure acdlite used force update flushed synchronously immediately resolves issue ah good spot double checked raising issue point still seem unexpected thanks narrowing away hooks tue oct brandon dail notifications githubcom wrote nt appear related hooks issue using class component force update inside mousemove handler flushed synchronously wrapping reactdomflushsync works expected react makes distinction interactive noninteractive events interactive events like click keypress focus trigger updates flushed immediately even concurrent mode noninteractive events case mousemove considered noninteractive event update gets deprioritized case seems like encountering starvation issue flushing updates seems unexpected sure acdlite reactdomflushsync used force update flushed synchronously immediately resolves issue receiving authored thread reply email directly view github mute thread discussed bit expected real updates confusing pings sebmarkbage said ping need suspend suspended content already fallback mode gaearon chance could explain difference ping real update would expected one richieahb real update regular update occurs update state believe ping occurs promise thrown suspended components resolves rejects pinging react knows try rendering gaearon right aweary ah makes sense guess instance real state update anywhere state change happened outside react cache pinging way forcing another render newly fetched resource cache', 'date': '2018-10-28T21:22:06Z'}"
"26572",26571,"{'data': 'reacttestrenderer setstate componentwillmount nt cause state change want request feature report bug bug current behavior js class mycomponent extends reactpurecomponent state isloaded false componentwillmount fetch something gt thissetstate isloaded true render return thisstateisloaded foo bar const renderertestrenderercreate renderergetinstance componentwillmount renderergetinstance state isloaded false expected isloaded true current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior call setstate lifecycle instance state update correspondingly versions react browser os affected issue work previous versions react mac os chrome react reacttestrenderer jest seems never worked', 'date': '2018-10-28T20:55:58Z'}"
"26573",26572,"{'data': 'state usestate hook inside settimeout updated want request feature report bug bugquestion current behavior retrieve value usestate hook inside settimeout function value one function called code inside gets executed try increase counter start timeout increase counter timeout expires expected behavior retrieving updated state instead working intended retrieve updated status versions react browser os affected issue work previous versions react subtle expected behavior scheduled using value time scheduled relying closure access asynchronously component rerenders new closure created nt change value initially closed instead working intended retrieve updated status case need use container write updated state value read later timeout one use case useref sync state value ref property read timeout instead js use ref access current count value async callback const countref useref count countrefcurrent count const getcounttimeout gt settimeout gt settimeoutcount countrefcurrent note many cases desired behavior example subscribe id later want unsubscribe would bug id could change time closing propsstate solves categories issues', 'date': '2018-10-28T20:04:45Z'}"
"26574",26573,"{'data': 'react gsap animation nt work build production bug report maybe yes doubt try recovering dependencies yes terms search user guide yarn build animation failing environment packagejson javascript homepage dependencies gsap react reactdom reactscripts scripts start reactscripts start build reactscripts build test reactscripts test envjsdom eject reactscripts eject devdependencies browserslist gt dead ie lt opmini manifestjson javascript starturl steps reproduce running project server animation runs perfectly however creating bundle production using reactscripts build command animation simply work provide code show happening expected behavior animation works normally actual behavior animation happen video left project running adding seconds delay view console along animation start right project running static server withe build folder run console seconds runs animation reproducible demo appjs javascript import react component react import tweenlite gsapall class app extends component componentdidmount settimeout gt consolelog animate init true tweenliteto thismypref x render return export default app idea ps post behavior also gsap facebookcreatereactapp github see could gsap build cra bundlerelated issue thanks help alex gotcha make cssplugin reference code', 'date': '2018-10-28T16:26:13Z'}"
"26575",26574,"{'data': 'react hooks typescript via babel want request feature report bug questionbug current behavior trying use hooks typescript project uses babel getting error uncaught error hooks called inside body function component guess missing something trivial could nt figure minimal reproduction issue available javascript import react usestate react import reactdom reactdom function hello const isdraweropen setdraweropen usestate false return hello reactdomrender documentgetelementbyid root pointers would helpful strangely came similar problem custom hook trying wrap context nt need export whole context object bit related hooks called inside body function component hey test running two different instances someone else also run issue otherwise reproduction case would ideal either small codesandbox example github repo install run locally code snippets look alright like verify tooling firsts thanks help boy good hey philippspiess nt think running two different versions react though reproduction case available thank looking raathigesh thanks indeed tooling issue think caused take look generated html main js entrypoint added twice causing two react versions loaded remove package make sure still mounting point react everything works expected recommend file upstream issue report maintainers fix philippspiess discovered culprit case observer hoc mobx sure going regular hoc works fine see thinking file new issue obviously unrelated one rather try solve mobx side suggestions edit created issue mobx side philippspiess oh right thank much looking gt sure going regular hoc works fine see thinking file new issue obviously unrelated one rather try solve mobx side suggestions think hooks nt work components wrapped hocs since hocs often wrap functional components class component example lt click button crash page mobxreact seems like wrapping functional component class component according fredyc got saw already filed upstream issue think needs resolved mobx side hrgui example trying use react hook class component supported warning already indicates implementation would clash classes think resolves issues ticket going close find bug feel free open new ticket include reproduction case', 'date': '2018-10-28T09:14:46Z'}"
"26576",26575,"{'data': 'promises hooks proposed want request feature report bug feature request kickstart discussion current behavior current proposal promisebased function call must used something like fairly awkward pattern promises one needs add extra check mounted state potentially quite divorced unmount logic noted subscriptionbased patterns like rxjs fine promises stinks bit confusing would also get repetitive multiple requests involved ideally make easier clean asynchronous code without imposing pattern user would carry async behavior one manner could remove need confusing return function provide helper function argument function passed useeffect returns whether current component mounted solve verbosity completely might outside scope react removes need extra boilerplate arguably hurts readability proposal part could rewritten like thoughts anyhow would understand proposal rejected please consolidate feedback thanks', 'date': '2018-10-28T07:45:33Z'}"
"26577",26576,"{'data': 'errorboundary seems working want request feature report bug bug current behavior errorboundary component seens nt children component errors please check sample codesandbox expected behavior errors catched versions react browser os affected issue work previous versions react react reactdom', 'date': '2018-10-28T05:05:37Z'}"
"26578",26577,"{'data': 'add support multiple context values request support consuming multiple contexts within class component without creating artificial wrapper components looking new hooks proposal seems underlying infrastructure capable propagating changes multiple contexts single component seem exposing outside hooks would love see available class components using approach unlike old context api declare static field function would expose multiple values component differentiate old api value object must context object javascript theme context default light theme const themecontext reactcreatecontext light signedin user context const usercontext reactcreatecontext name guest buttoncontexttypes theme themecontext user usercontext able distinguished old context api props typically references ie honestly would shoot leg classes use hooks yea sure still alpha released officially believe one reasons team came hooks nt need craziness classes opted support extra object allocations would incur extra static typing difficulties', 'date': '2018-10-28T04:47:30Z'}"
"26579",26578,"{'data': 'state missing post finishhooks example invoking resulting defined become function wrap function reason defined need default case reducer return see henribeck dang looks like onload ai nt triggering well triggering property empty string edit image never loaded url load image yes notice valid image url yeah nt setting state action causes image never render reason image showing briefly action merging causes empty object case debugging update post spinner stops loads image loading instant tigger taking issue thanks', 'date': '2018-10-28T02:50:18Z'}"
"26580",26579,"{'data': 'safari devtools flooded security errors reactdom selection work iframes diff origins hey folks looks like code added small issue safari could flood devtools console output messages like understand happens see catch error safari still adds error message iframes different origin asci thanks reporting issue time create reproduction case us look potential solutions philippspiess reproduce issue need serve files different locations click textarea check console output one potential solutions check iframe src origin accessing good create pr', 'date': '2018-10-27T19:09:31Z'}"
"26581",26580,"{'data': 'releasemaintain typescript declaration dts reactjs want request feature report bug feature current behavior publish declaration file expected behavior js file declaration file packaged together releasing npm versions react browser os affected issue work previous versions react reactstatelesscomponent reactsfc still keep name xiaoxiangmoe actual concern know easier declarations coming together package big issue install right good thing definitelytyped likely get best typing many people knowing typescript well good results relying definitelytyped suspect continue recommend foreseeable future relying community definitions likely better anyways since react nt written typescript react team nt use', 'date': '2018-10-27T17:18:11Z'}"
"26582",26581,"{'data': 'make stateless components pure default react stateless function components always pure components default behavior would great implemented start people know well consequences always relate function pure however maybe get done new react version major version upgrade know maybe things break would ok course would also ask remove reactmemo react reason afaik memo check free components checking prev next props differences every render maybe skipping render would ultimately slower always rerendering opt giving user option optimize components would benefit jquense remember always rendering literally true react check virtual dom see things component returned changed rendering real dom pure components would need check since saying want rerendered props changed even check virtual dom question checking props slower checking virtual dom know actual behavior tho maybe virtual dom check obligatory hi would large change would need go rfc process going close issue', 'date': '2018-10-27T13:02:34Z'}"
"26583",26582,"{'data': 'suspense nt stop rendering fallback lazy resolves want request feature report bug bug believe unless misunderstand works current behavior given inside case like promises start resolving time resolved first never renders stays result first text fallback please see expected behavior every displayed end first text second text versions react browser os affected issue work previous versions react react reactdom try move nested suspence separate component eg function secondcomponent return qutran nt help result looks like bug confirmed fix', 'date': '2018-10-27T12:08:32Z'}"
"26584",26583,"{'data': 'advice useeffect hook api advice current api think better api js useeffect function didpatchdom prevprops const subscription propssourcesubscribe return function willpatchdom nextprops subscriptionunsubscribe return false false means run didpatchdom use old willpatchdom handle nextnextprops componentdidmount useeffect function componentdidmount prevprops assertequal prevprops null doeffects return nextprops gt false componentwillunmount useeffect function componentwillunmount prevprops return nextprops gt nextprops null doeffects real subscription example useeffect function realsubscription prevprops prevprops null const subscription propssourcesubscribe return nextprops gt nextprops null subscriptionunsubscribe return false return function willneverreach return false functions name documenting show lifecycle closure may objects early time ancient nt know good idea willpatchdom return returns true hi xialvjun post hooks feedback rfc hey xialvjun sort feedback go hooks rfc', 'date': '2018-10-27T11:07:36Z'}"
"26585",26584,"{'data': 'read property replace null trying remove string topsecret fibername bug report using react version app suddenly crashed error read property replace null exception happens react tries remove string topsecret fibername tried revert back confirm version happens indeed happen sure steps reproduce using react days project without issues screenshot exception file happens along stack seems like straightforward fix hope reproduction example nt needed case looks like duplicate make sure running latest version devtools might need restart browser update applied oh okay thanks', 'date': '2018-10-27T09:50:51Z'}"
"26586",26585,"{'data': 'hooks plays well mobxreact observer want request feature report bug bug current behavior code shown complains hooks called inside body function component import react usestate react import observer mobxreact import wishlistitemedit wishlistitemedit const wishlistitemview item gt const isediting setisediting usestate false const toggleediting gt setisediting isediting export default observer wishlistitemview removing observer using works conflict using mobx observer react hooks since component longer observer component following mobx pattern current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example created repo cra update react reactdom expected behavior works well mobxreact observer versions react browser os affected issue work previous versions react hey code attached everything looks correct maybe something perhaps stale cache using right react version check hookenabled codesandbox example made example everything seems work expected saw issue another community member try see running issue hope helps philippspiess thanks quick reply nice demo checked issue mentioned think different issue works without decorator also created codesandbox comment line uncomment line suppress error concern hooks feature might broken thirdparty module easily recommended code style official react team might leads efforts ecosystem change implementation official could handle cases like one kimochg got looks like upstream issue repo philippspiess super helpful', 'date': '2018-10-27T07:36:40Z'}"
"26587",26586,"{'data': 'vendor prefixes treated improperly reactdom reactdomserver want request feature report bug bug current behavior seems like reactdom trying smart vendor prefixes nt quite work properties come nt stuck style object current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsfiddle showing reactdomserverrendertostring works correctly reactdomserver expected behavior reactdom render style specified versions react browser os affected issue work previous versions react reactdom chrome mac os high sierra sure investigation updated jsfiddle looks like specifically problem setting style div style object properties instead using issue related hm learned couple things missing vendorprefixed attributes probably ok means nt exist style model browser uses case adding would nt help anyway react uses style properties instead csstext multivalue css expression nt going work although think could value supporting csstext alternative able successfully implement version gaearon suggested think would great react firstclass way supporting vendorprefixed values inline styles accepting array values since inline styles huge part developing react solved issue determined exactly react bug close', 'date': '2018-10-27T01:35:27Z'}"
"26588",26587,"{'data': 'hooks feedback introducing hooks page states observation classes biggest barrier learning react would state redux biggest barrier using react hope hooks help simplify state management please leave feedback redux part react clear barrier learning react indeed hook might find useful builtin state management find api reference', 'date': '2018-10-27T01:14:24Z'}"
"26589",26588,"{'data': 'hooks multiple instances react want request feature report bug enhancement current behavior multiple instances react mistake trying use hooks got error correct since using function components took find real cause issue expected behavior work multiple instances react show correct error message maybe detect app multiple instances react say may reason bugs clarification importing hook say different module one used render component agree confusing sure though way knowing react module rendering afaik try run react isolation much possible multiple react instances work global context without issues otherwise could probably update error message mention case well confusing yes compared indexjs file using hook happens hooks fail generic error message issue raise awareness case maybe improve error message way help people face probably edge though yup tried npm link package creating throws error since package also using hooks react publish package npm import directly npm way error gone hope fixed since publishing package without testing bad obviously lerna monorepos suffer well custom hook defined one package used another symlinked dependencies use copy react hacky workaround moment using npmlinkshared npm script essentially replace one package dependency symlink use instance issue resolved adding property webpack config main app obviously mistake using two copies react agree would great error message better think maybe similar mpeyper works thanks', 'date': '2018-10-27T00:34:08Z'}"
"26590",26589,"{'data': 'usereducer dom events want request feature report bug possibly bug possibly feature current behavior create reducer using action dom event attempt update value passing updater event event accessed throwing error reusing syntheticevents assume updater running synchronously jsx const valuereducer current e gt etargetvalue const example gt const value updatevalue usereducer valuereducer expected behavior nice worked versions react browser os affected issue work previous versions react event passing around dom event synthetic event docs mention want access event properties asynchronous way call event remove synthetic event pool allow references event retained user code reducer run asynchronously synthetic event might already returned pool time case wo nt refer want docs say either call like pass reducer instead like btw seeing error message similar text wrote console warning synthetic event reused performance reasons seeing accessing property releasednullified synthetic event set null must keep original synthetic event around use eventpersist see information interested possible run reducer synchronously apply asynchronously nt know common pattern', 'date': '2018-10-26T21:45:58Z'}"
"26591",26590,"{'data': 'nextcontext arg shouldcomponentupdate method want request feature report bug think feature could bug also current behavior subscribe context using contexttype api component rerenders even unused context properties changed want use shouldcomponentupdate method nt nextcontext argument way solve problem current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react', 'date': '2018-10-26T16:09:52Z'}"
"26592",26591,"{'data': 'react test renderer nt render dynamically imported components want request feature report bug bug current behavior rendering component dynamically loaded needed child rendered current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example simple component renders fine however using load component dynamically component nt render method returns null jsx import loadable loadablecomponents const component loadable gt import componentjsx const renderer create consolelog renderertojson null print true expected behavior renderer render whole tree return promise ed wait result render versions react browser os affected issue work previous versions react reacttestrenderer solved using', 'date': '2018-10-26T14:46:07Z'}"
"26593",26592,"{'data': 'react performance worse time ago refactoring cell renderers components achieve performance gain huge table refactoring functional stateless components eg saw released updated refactored expectation would even faster lifecycle methods called function smaller class memory etc surprise performance went significantly profile data prod mode addons chrome show much scripting happening scripting time case went investigation seems issue new version react reverted cell renderers purecomponent left new react version result significantly slower performance still present idea could issue hmmm could nt reproduce quick jsfiddle could share chrome performance data safe profiles right clicking list timeline sessions thanks help files profileszip update slows things code open source please link assuming possibly run git bisect help us figure react commit changed local clone repo able run packages install able go tag using purecomponent need use thanks advance helping investigate best guess something change batching hard tell try btw way download repo without cmd behind proxy blocking github cloning dragonflypl try setting git config work proxy able try cloning either case also use proxy ssh sure blocked nt work would clone different network copy whole folder computers including hidden git directory normal cases could download tgz github since need history wo nt work fix failing async tests node bad unfork lazy component branches bad always bail timed children even receive update good centralize props memoization good bugfix good reactlazy constructor must return result dynamic import good scheduler rename priority levels good bisec output git bisect good first bad commit commit author sebastian markbåge sebastian calyptuseu date fri oct double checked amp previous commit confirm one first performance dropped reactbisectprofileszip dragonflypl thank really helpful also confirm app performance dropped since sebmarkbage idea could cause perf regression unfork lazy component branches commit instinct incorrectly calling leading missed bailout verified test suite tests use end calling nt seem cc acdlite dragonflypl martinsb looking blamed commit still sure could chance one post reduced repro case showing regression would really help us debug reproduce locally try keep debugging hard make good progress without repro guess going bunch comparisons guard tagging effect calling lifecycles think bailouts broken lifting non code paths like components always different passing resolved props would always differ memoized props hmm wrong protect gah already tried instinct incorrectly calling resolvedefaultprops leading missed bailout verified test suite tests use lazy end calling resolvedefaultprops nt seem may minor reason two functions call one another instead one code brief review commit inner function nt seem used anywhere else may missing bigger picture google closure compiler part build step inline think noticed issue reproduce open url browser switching uglify terser fixed issue switching minifiers solves problem conclusion expected find bottom thread ok investigated reasons unknown uglify decided inline fibernode function createfiber createfiber implementation looks roughly like vms much worse optimizing probably figure uglify wants fix upstream maybe something clever nt try inline react also thank localvoid particular piping gives bad news dragonflypl confirm seeing issue check using uglifyes b try checking commit bisect editing packagesreactreconcilersrcreactfiberjs add fibernodefoobar line definition fibernode rebuild see fixes issue app guessing using uglifyjswebpackplugin version upgrade version terserwebpackplugin think issue go away even release build gt maybe something clever nt try inline react use function expression wo nt inline semantically equivalent seems like pretty bad bug looks like something uglifyes via node inspect inline constructor function used uglifyes via node inspect rarely minifier best interest inline variablesetc used many times surprising note also calls constructor one place sebmarkbage points though incorrect ever inline function new applied unless provable instantiation runs seems like uglifyes known buggy maintained probably focus efforts shifting people reference uglifyes stale seems strange abandon since nt deprecated npm assume taking break maintaining forked new project called projects need support use instead since new development happening things like webpack switching shortly fabiosantoscodeterser terser works correctly case inline operator thank report solution hoped transitioning via respective webpack plugins would simple switching packages unfortunately terser seems running memory consistently machines whereas uglifyes either paralleltrue false downgraded back react uglifyes figure guess close really fair close seems proposed solution transition people uglify terser feasible short term additionally reported danburzo terser memory issues would possible edit code least temporarily avoid uglifyes bug would great solution transition transition known buggy package already caused bunch bugs nothing fix side using broken minifier even could patch around particular bug clear keep bumping issues also completely unmaintained bugfixes wo nt come nt anything stopping reverting stable would require compile code beforehand would presume memory characteristics similar since subset unsuccessfully tries also try switching report memory issues ah see nt aware issues guess true uglifyes less widely used uglify danburzo would raising issue terser repo providing reproduction case see first person hit issue gt solution transition uglifyjs transition uglifyes sorry meant amended comment using via seems like bumping plugin easiest way handle moment rolled back try morning regards terser follow repo issues anything find derail thread much sophiebits confirm application fixed performance issue currently using hood migration latest solved issue thanks support also confirm switching webpack fixes performance problem thank thank confieming anyone needs quick fix without upgrade webpack terserwebpackplugin works webpack turn compression option uglifyes webpack config would look something like verify worked following first output looks using bug output looks default bug finally output looks option set nt bug terser outputs obviously need quick bug fix least amount change code real longterm fix get newer version webpack use terser', 'date': '2018-10-26T13:45:19Z'}"
"26594",26593,"{'data': 'warn reactdomcreateportal inside noscript text content tag want request feature report bug bug current behavior calling within nothing happens error logged expected behavior whether warn nt work worked previous version render portal versions react browser os affected issue work previous versions react react amp recent reproducible every browser repro probably related change seems super niche sure adding warning unless somebody sends pr render work around', 'date': '2018-10-26T13:10:22Z'}"
"26595",26594,"{'data': 'simple animation api would great react could support following api would allow write extension jsx import animate react import function chart props return currently implemented simple malevičjs library implemented yet see live example many libraries solves various ways maybe help look animations like leave userland since many good existing solutions different tradeoffs', 'date': '2018-10-26T10:45:57Z'}"
"26596",26595,"{'data': 'suspense feature pause rendering based server rendered server already rendered data fallback need rendered like example gaearon acdlite janrywang sure right example looks like suspense nt support ssr yet stuck reactdomserver yet support suspense invariant violation reactdomserver yet support suspense invariant suspense nt supported server rendering yet starting work new fullyfeatured server renderer', 'date': '2018-10-26T10:07:34Z'}"
"26597",26596,"{'data': 'docs hooks typo first example hoksintro shows following code js import usestate react function example declare new state variable call count const count setcount usestate return clicked count times since theoretically visually scoped within wonder supposed work mean ever showing anything different typo first line instead thanks clarifying andor fixing first example webreflection calling component rerendered new call returns new value point immutable typo change count directly setcount every rendereing count result value memoized state func comp trysound thanks quick explanation still bit puzzled transpile via babel read output js import usestate react function example declare new state variable call count const count setcount usestate return reactcreateelement div null reactcreateelement p null clicked count times reactcreateelement button onclick gt setcount count click clear could interfere variables unless transpiled output hooks would generate unless mapping part text update accordingly new immutable value close since understand meant like extra explanation works behind scene would help thanks webreflection reduxlike dispatching new value returning newstate every rendering count new immutable state setcount gt dispatch newvalue next rendering newcount dispatch newvalue thanks salvoravida understand correctly dispatcher capable updating slot new value right mapping fully following guess check internals anyway definitively less puzzled think idea nt update variable rather arching state component component rerenders first argument current value held state slot example consider implementation trimmed always component instance component invoked react traversing tree ie idea setcount nt update count variable rather arching state component got attached anything bit mystery happens without checking internals think returns something able remember last value andor update previous one js const usestate initial gt return valueof gt initial next gt initial next const count setcount usestate consolelog count setcount count consolelog count similar alchemy well hidden behind component scene implement userland entirely following js var stack var index function setstate value thissetstate value value function usestate value try const frame stack index const state framestate const value value state statevalue statevalue value finally return value setstatebind frame function use fn sp index return class extends reactcomponent state render try return fncall stack index sp thisprops finally stack sp null const example use function declare new state variable call count const count setcount usestate return clicked count times count countnumber value without attached reference guess got bitten fundamental difference jsx nt use template literals use daily mystery solved thanks lot last example edit actually still bit puzzled one example checks constant different value one returned fascinating need weekend yes implementation bug call nt handle multiple calls may entirely wrong may harm good far understand handwavey explanation seems go something like unlike may told imagine really straightforward component function point invoked return value point applied component tree entire lifecycle thing going react already keeps lot state around component aside one example state apparently local state classbased components expose via words exposed class instance properties really controlled instance supposed use btw may take effect asynchronously provides callback form need access current state derive new state component function nt invoked directly user instead invoked react somehow react knows advance function invoked thus provide global functions namely hooks aware current rendering context js singlethreaded far part concerned component functions always execute synchronously hooks recognised execution order assuming follow rules always put start function never invoke conditionals reason getting constant value point modifying even though could actually receiving state object receiving state current value callback assign new value state lives outside function rendering context part takes getting used state persists across multiple invocations component function component instance ie rerenders tl dr hooks component tree local context component rendered state creates lives context function returns setter current value time component function invoked turns completely wrong let pretend following cunningham law pluma skimmed answer bit yes appears entirely correct ultimately react knows exactly component rendering point time class function internal bookkeeping attached effects stored linked list attached metadata given function component instance', 'date': '2018-10-26T09:25:28Z'}"
"26598",26597,"{'data': 'plan support grpcweb plan support grpcweb reading docs could nt see changed react order support grpc supported natively could elaborate little bit clear', 'date': '2018-10-26T09:08:36Z'}"
"26599",26598,"{'data': 'getting read property warnedaboutrefsinrender null want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react nt fill details ca nt help', 'date': '2018-10-26T06:14:22Z'}"
"26600",26599,"{'data': 'error using react lazy react router want request feature report bug bug current behavior changed reactloadable lazysuspense get console error current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior dynamically import versions react browser os affected issue work previous versions react chrome osx react react see thanks aweary', 'date': '2018-10-26T03:52:00Z'}"
"26601",26600,"{'data': 'helpful interaction react recognize propname prop dom element want request feature report bug feature current behavior pass unknown prop dom element common pass something turns divspanany dom element rather composite component get warning like tree pretty complicated especially using hocs hard find prop passed dom element expected behavior quick muck around reactdom logging dom element triggers warning allows see element dom makes much easier work prop accidentally passed even use react dev tools work exactly line component defined code simply logging element obviously elegant way showing user mistake would possible something order make quicker fix mistaken prop passing like versions react browser os affected issue work previous versions react think could also extend errors clear exact proposal send pr describe detail eg screenshots take look sure thing nt want make pr vaguely sure would accepted helpful people get screenshots coming days', 'date': '2018-10-26T03:24:35Z'}"
"26602",26601,"{'data': 'changing number calls component results error want request feature report bug bug current behavior changing number calls renders kills application sandbox click first button increment click button decrement application crash white screen console limited information inlining source reference js import react usestate react import reactdom reactdom function counter const counta setcounta usestate counta gt const dynamicstate usestate const countb setcountb usestate counta return lt gt count counta count b countb const rootelement documentgetelementbyid root reactdomrender rootelement expected behavior really sure guess least warning explaining placing calls conditional nt supported expected behavior hooks ca nt call conditionally see rules hooks really sure guess least warning explaining placing calls usestate conditional nt supported linter plugin', 'date': '2018-10-26T01:00:32Z'}"
"26603",26602,"{'data': 'react hooks question bug report heyyyy team everyone trying react hooks rewriting one side project buggy issue caught created repro case case js function app let store const authstatus updateauthstatus usestate false useeffect gt asynchelper gt store nested value hello world people naturally believe store updated auth status true actually updateauthstatus true authstatus return loading return throw error store nt updated storenestedvalue castingupdating new value assuming works similarly update last line tries render throw error read value undefined store nt updated time natural operation sequence mind render loading state run useeffect store gets updated auth status gets updated render correct value however works expected also wrap local state js function app const store updatestore usestate const authstatus updateauthstatus usestate false useeffect gt asynchelper gt updatestore nested value hello world authstatus return loading return throw error store nt updated storenestedvalue guessing maybe async nature state update function sure missed something bug fun react conf excited finally shipping things gt however works expected also wrap store local state looks like expected behavior nt wrap value way react persist updates hits line evaluate expect set empty object happen every time component renders using hook lets react track persist state renders aweary emm actually works fine previous pattern confirmed expected behavior means break change thing function component body executed every render executed mount yes say definitely expected behaviour breaking change still use class components fine yeah want compare class components equivalent would good explanation thanks aweary arianon', 'date': '2018-10-26T00:50:26Z'}"
"26604",26603,"{'data': 'stop displaying strictmode warnings errors strictmode throws warnings errors making difficult debug errors due amount consoleerror spam logged instead warnings fact warnings would able filter console easily isolate messages relevant current task would love able solve strictmode warnings moment reality filed tech debt company resolved later time certain one reality work day perhaps case could disable strictmode ready address sure value adding ignore anyway later time thanks quick response first suggestion team pushing disable strictmode better address tech debt others team want keep strictmode whatever reason possibly keep fire lit tech debt displaying warnings warnings would make sides happy seems odd regardless warnings logged errors thought worth bringing issue downside suggestion get less prominent less incentives fix especially keep teams introducing regressions think wo nt always override code delegate specific message substring matches eg contains hope helps never tried delegation errors nt thought give try thanks advice', 'date': '2018-10-25T19:46:39Z'}"
"26605",26604,"{'data': 'react hooks webpack transpiled component throws invariant ssr current behavior versions react browser os affected issue work previous versions react component looks like transpiled webpack could paste original untranspiled code well ts import usestate react function hookedcomponent const name setname usestate mary return name export default hookedcomponent reactreactdomreactdomreactdomserverrendertostring rendertostring rendertostring counter component existing app transpiled code js function example var usestate object usestate object default usestate count setcount similar componentdidmount componentdidupdate object useeffect function update document title using browser api documenttitle clicked concat count times return div null p null clicked count times button onclick function onclick return setcount count click react reactdom webpack reacthotloader dadamssg get error remove got issue dadamssg yesterday narrowed something sure ssr parts think two different issues ca nt say anything ssr hot loader definitely nt work replace part appjs error goes away aweary bkniffler removed app still getting error relevant source code written typescript transpiled using edit using babel might also using typescript babel issues removing hot loader switched using babelloader invariant violation thrown note exact app works fine avoid rendering function component server render client looks like something rendering app tree getdatafromtree afraid hook would break custom reacttree traversal apollo reacthotloader loadablecomponents asynccomponent pheuter exact issue everything works client breaks server using typescript babel tsloader webpack thekashey ah would make much sense would case closing favor', 'date': '2018-10-25T19:23:46Z'}"
"26606",26605,"{'data': 'proposalconvo starter new affect api control data gets passed data containing components presentiation children feature request new hooks api awesome thinking one issues react render prop based components pass data children often want able control props effectively complete container telling child component render usable data parent component determines complete child component would remain loading state loading state set default updated hooks cdu cdm usual would propose possible solution modification render props pattern new api could put place components conditionally restrict passing props child tree api would similar new effect api downstream updates could part hooks api methods called affects api could similar footprint affects could skipped like effects second argument affect function could array keys determine props passed render props components wdyt completely nature react expected work understand pattern components control props state ui updates make data coming understand could antipattern stop components passing data children understandably could control via using setstate passing state children sometimes want use internal state manage logic component also logic controlling prop updates children use cases would mainly data containers api requests conditional api requests combining multiple containers code isolation presentational component understand bullet points solved using various different means new hooks api well thought understandable provides clear pattern controlling data components would beneficial similar pattern data leaving components context providers etc thanks gregorskii open rfc hooks please direct relevant feedback questions rfc broader proposal also want use rfc process thanks link kinda saw different proposal albeit related gregorskii separate proposal also belongs rfc repo ok ty add', 'date': '2018-10-25T19:00:24Z'}"
"26607",26606,"{'data': 'contexttype getderivedstatefromprops want request feature report bug feature current behavior context passed getderivedstatefromprops curious new would save lot nesting could access context getderivedstatefromprops using pattern gave shot assuming may work already get undefined third argument curious discussion', 'date': '2018-10-25T17:04:42Z'}"
"26608",26607,"{'data': 'context api working class component want request feature report bug quite possibly bug maybe confusion current api using new context api well new react passing context couple components deep attempt access context within component object empty default value passed displayed happening current feature working job display code create codesandbox gist problem demonstration behavior would expect able access current values context way values change would always recent values maybe expected behavior however would confusing react reactdom nt believe using context api correctly usually implement javascrewpt believe one way use context api looked contexttype property class assigned context object created reactcreatecontext lets consume nearest current value context type using thiscontext reference lifecycle methods including render function looks able attempting thanks nt know figure export context indexjs import component empty object tried export regular object properties import empty object added additional file export context default values seems work take problem exportingimporting context rather react handles context perhaps investigate separately javascrewpt solution approach seems avoid original issue also toplevel component could used store state also provide methods manipulate state last example would need jump hoops account tell whole purpose changes context api heard feedback adopting new render prop api difficult class components add convenience api consume context value within class component quoted appreciate help would like address root issue gain clarification intentions api api supposed work like attempting use would propose even help clarifying documentation others run issue sorry spam chat really sure believe underlying issue taken createcontext put separate file everything else code changed createcontext takes place perhaps appeared previous example changed things example identical case createcontext separate file see would argue bug works intended please let know missing javascrewpt issue create context separate file docs say example used docs context created file docs say one thing code behaves differently usually one three things bug mistake documentation lack understanding documentation willing accept provided workaround sorts address root cause proposed solution previously statedquestioned toplevel component tracks state also passes methods change state please see original codesandbox update simple solution longer valid would completely refactor solution separate context provider another toplevel component tracks state etc may correct way documented back original question root problem documentation makes seem like approach work mention anywhere see would work bug mistake documentation interpret something incorrectly trying dismiss help appreciate attempting find solution problem however trying prove point telling nt believe using correctly bug works intended please feel need help anymore sorry came aggressive nt trying dismiss issue lack knowledge made question problem elaborated perfectly understand concern looking forward hearing experts seems interesting issue dericgw problem describing nothing react behavior circular module imports example showing problem without react index file imports imports index file requires index file circular dependency reason works api render method lazily evaluated class definition including static properties evaluated module loaded u manage resolve facing similar issue context empty object even something like jsx const context reactcreatecontext class child extends reactcomponent render const renderedcontext thiscontext consolelog consolelog renderedcontext consolelog asd childcontexttype return childcontexttype context export const test props gt quite sure cyclic rendering make sure nothing seems work possible work production build transpiling till broke context try many many variation upgrade render context provider class component context type could get work ca nt get work either enclosing lt consumer works fine static contexttype object always empty using latest react native navigation case forgot upgrade manage get working upgrade clintjansen think might need reactnative official support unless much mistaken dericgw right issue aweary point related modules seems incorrect created copy one file module hijinx mix still work jacksongabbard seems like codesandbox shared still using versions react reactdom codesandbox using showing context assigned rendered correctly ah indeed indeed checked changelog would noted syntax arrived thanks pointing right direction issue using problem circular dependency think due reactnavigation works tested react native didnt work either rn need update work well oof noticed expo using rn probably working ran issue dericgw came conclusion aweary circular dependency problem move context creation separate file parent component holds child component consumes imports solves dependency problem least nt know common problem agree dericgw follow documentation point run problem means probably note docs seems like sophiebits charge docs agree', 'date': '2018-10-25T16:31:17Z'}"
"26609",26608,"{'data': 'shorthand prop false feature request would nice something like meaning lt foo gt thispropsbarundefinedfalse need bar unlikely either case would change jsx would require change specification please see', 'date': '2018-10-25T14:43:52Z'}"
"26610",26609,"{'data': 'ca nt consume context static contexttype imported components want request feature report bug bug current behavior importing context another component consuming using nt work current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior think context importable like versions react browser os affected issue work previous versions react react browsers oses using new api solved caused circular dependency moving separate file worked', 'date': '2018-10-25T11:50:27Z'}"
"26611",26610,"{'data': 'reactmemo attempting assign ref component wrapped memo produce friendly error message want request feature report bug bug current behavior attempting assign ref component wrapped reactmemo produce friendly error message attempting thing functional component wrapped memo gives descriptive error warning function components given refs attempts access ref fail current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example trust needed case expected behavior error message nonmemo functional component displayed versions react browser os affected issue work previous versions react', 'date': '2018-10-25T11:44:41Z'}"
"26612",26611,"{'data': 'expected subtree parent mounted class component hi getting error trying mount component component tooltip seems working fine tried mount child feedcard causes crash code feedcard import react component react import proptypes proptypes import listitem person stayindicator import feedcardinfo feedcardinfo class feedcard extends component render const isselected thisprops return export default feedcard stayindicator import react react import proptypes proptypes import staystatus constantsenums import tooltip tooltiptooltip import basestayindicator basestayindicator const tooltips const stayindicator status large classname style dark width id fill gt stayindicatordefaultprops status staystatusplanned large false classname style width undefined dark false id undefined fill false stayindicatorproptypes stay status enum staystatus reserved planned staying complete status proptypesoneof staystatusplanned staystatusstaying staystatuscomplete staystatusreserved indicator whether use large component size large proptypesbool additional class add stayindicator classname proptypesstring additional style add stayindicator style proptypesshape customize line width width proptypesnumber set theme dark dark proptypesbool id stay indicator component id proptypesoneoftype proptypesstring proptypesnumber set stay indicator fill space fill proptypesbool export default stayindicator tooltip helps import react component react import proptypes proptypes import cn classnames import straptooltip reactstraplibtooltip import uuid utilscommonutility import theme constantsenums import tooltipscss class tooltip extends component constructor props super props thisstate isopen false id propsid uuid ontoggle gt thissetstate prevstate gt isopen prevstateisopen render const children classname body style autohide theme placement offset containerclassname props thisprops const id isopen thisstate return tooltip id gt children tooltip id isopen isopen toggle thisontoggle classname cn lighttheme theme themelight classname style style autohide autohide placement placement offset offset props gt body export default tooltip using react reactdom reactstrap someone please assist issue appears hovering component jonyy nt see anything wrong code started working jsfiddle trying reproduce issue couldnt get finish im rushing work rawest version looking poppercontent src could try reproduce think probably problem portal reduced version fiddle without context logic portal thing fails get node mount portal first time since executed render sure could issue since say error displayed hover guessing state find id since everything would mounted check makes sense hope fiddle helps reproduce hey thanks reply im wondering approach since tooltip component works storybook fine put inside one components crash im wandering whether ill able reproduce fiddle think might issue reactstrap version clash jonyy ah missing point crashes inside ca nt really much anyone else look yes inside context crash thats dont get problem need runnable reproducing example pasting code nt enough help find issue need able actually repro gaearon ill work trying create example next days thank react error expected subtree parent mounted class component error likely caused bug react please file issue invariant findcurrentunmaskedcontext getcontextforsubtree updatecontaineratexpirationtime updatecontainer reactrootlegacyrendersubtreeintocontainer unbatchedupdates legacyrendersubtreeintocontainer objectunstablerendersubtreeintocontainer help without reproducing example also issue different project reproducible example please note issue coming aecz issue seems coming component remove line example page renders fine recommend filing issue package please also see older issue package may want follow well please also see older issue package thanks chasestarr fixed removing context propagation suggested', 'date': '2018-10-25T09:28:12Z'}"
"26613",26612,"{'data': 'reactlazy recognizing named modules resolved want request feature report bug bug current behavior named components extracted call recognized code generating error despite fact named export gets logged console correctly link codesandbox example expected behavior render component correctly versions react browser os affected issue work previous versions react react reactdom macos version reactlazy previous versions react return work fine hack think nt add least reactlazy takes function must call dynamic import must return promise resolves module default export containing react component want get info could read yeah intended work right ack missed bad error message could probably least improved misleading', 'date': '2018-10-25T06:23:19Z'}"
"26614",26613,"{'data': 'reactlazy defaultprops merged props commit phase lifecycles want request feature report bug bug current behavior component loaded using reactlazy default props merged props object lifecycles componentdidmount componentdidupdate componentwillunmount getsnapshotbeforeupdate shouldcomponentupdate default props merged nextprops argument thisprops steps reproduce create component default value prop using defaultprops use prop one lifecycles load component using reactlazy observe prop defined lifecycles codesandbox link expected behavior default props merged props lifecycles using reactlazy versions react browser os affected issue work previous versions react react reactdom windows firefox windows chrome reactlazy previous versions react thanks detailed report definitely looks like bug reactfibercommitworkjs assign instanceprops times meant resolvedefaultprops sebmarkbage', 'date': '2018-10-25T00:03:31Z'}"
"26615",26614,"{'data': 'reactis breaking change asyncmode seems like reactis longer compatible react react use export instead seems like async mode symbol needs remain reactis function would need check asyncmode concurrentmode symbols note blocks full enzyme support react explain case breaking sure enzyme react adapter needs maintain support versions react provides getdisplaynameofnode function needs able return string react string react comparing symbol exports adapter nt issue lock version breaking change part able keep working react symbol export matched react think would nt problem gt reactis asyncmode symbol export matched react think would nt problem think sounds okay could pr sure try hand mistake prefixed isasyncmode unstable actual api included treating unstable effectively private break minors ok supporting calls unstable future break several times releases want keep around bundles prefix renaming things still going break consumers however understand react decides accept breakage minor versions either way value abstracts kind changes including would meant hardcode stuff inside enzyme defeats whole purpose first place case bundle size difference negligible case seems worth trying keep back compat even things react decided effectively private alternative put behind feature flag expose featur much harder people try cases breakages ok really hard people many environments use alpha builds understand dilemma case functionality nt changed sure renamed iow sure helps people try name change still going change gets promoted stable tradeoffs seem somewhere difficult people try cause breakage amount downstream tooling incur tiny additional bundle cost maintain back compat tough call asking policy change case bundle size increase seems pretty close zero ca nt imagine handful bytes benefit enzyme presumably downstream tools able continue using without hardcode things', 'date': '2018-10-24T21:36:43Z'}"
"26616",26615,"{'data': 'design decision introduce memo separate hoc ostensible bug report feature request genuine interest internal dialogue design react motivated decision introduce new feature separate optin higher order component rather rendering function props nt changed understand correctly functional component design sideeffects nt matter wo nt rerender none inputs changed alternative approach would enforce behaviour perhaps maintain backwardcompatibility point release perhaps functional components nt state therefore ca nt default store objects surely react pulls props tree midupdating see instance light shed design decision anything else might seem relevant would great interest would help way understanding appreciating beautiful framework language thanks hi read rationale', 'date': '2018-10-24T20:59:51Z'}"
"26617",26616,"{'data': 'onmouseenter fire underlaying element element removed want request feature report bug bug searching around issues see similardupe could find one current behavior elements overlaying top upper element gets removed cursor elements mouse enter never fires element compared native browser events issue appear persist native browser events appear fire mouse enter underlying div overlaying div gets removed current behavior bug please provide steps reproduce possible minimal demo problem codesandbox example provided top level boolean constant switch using react synthetic events native browser events console keep track state updates console logs simple way test open console mouse upper div position also top lower div click remove upper div lower div fire mouse enter synthetic events browser events expected behavior expected behavior would react would fire mouse enter underlaying div upper div removed versions react browser os affected issue work previous versions react chance test previous versions', 'date': '2018-10-24T19:59:53Z'}"
"26618",26617,"{'data': 'receive previous state getderivedstatefromerror want request feature report bug feature request current behavior hook receives nt access component instance limits possible ways could used requires additionally use hooks derive state js class app extends component state static getderivedstatefromerror error return error static getderivedstatefromprops props state really need state derived error props stateerror return remapstatetopreferredstructure state render expected behavior expected receive previous state signature consistent related static hook signature backward compatible existing one react versions react browser os affected issue work previous versions react react concrete use case trying refactor following componentdidcatch error error instanceof requesterror thissetstate state gt errorsbysrc stateerrorsbysrc errorurl error else throw error render const media thispropsmediafilter item gt thisstateerrorsbysrc itemurl media rendered component throws fails load', 'date': '2018-10-24T18:28:10Z'}"
"26619",26618,"{'data': 'npm start failed reactscripts package provided create react app requires dependency babelloader following steps doesnt work want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react sounds like issue facebookcreatereactapp instead tried also problem anyone found fix emjgreen make issue hawkins suggest certainly get help npm probably kind outage might behind proxy try today tried npm yarn going cra repo open issue', 'date': '2018-10-24T12:31:17Z'}"
"26620",26619,"{'data': 'suspense fallback always computed current behavior suspense fallback property takes react element case div element always computed vdom element children could instead take function lazily evaluated fallback needed expected behavior versions react browser os affected issue work previous versions react eloytoro content also lazy evaluated react beginning case one must careful regarding amount inline rendering done prop sounds fair could prop accept function well instead element small performance improvement probably worth reason meaningful performance difference concerned complex children likely affect performance except extreme scenarios extract separate component meaningful performance difference concerned complex children likely affect performance except extreme scenarios extract separate component', 'date': '2018-10-24T11:23:14Z'}"
"26621",26620,"{'data': 'using suspense amp lazy triggers warning functions valid react child want request feature report bug bug current behavior using amp lazy load components triggers following warning however affect functionality lazy loading amp rendering component works fine current behavior bug please provide steps reproduce possible minimal demo problem expected behavior trigger warning valid way loading amp rendering components according documentation versions react browser os affected issue work previous versions react believe due line pull function make component eg error appears go away least temporary solution problem hey rovansteen expected behavior fix frehner provided correct way expects prop react element react component passing function component renders text need pass function would return directly frehner change works react element component think working something like think like would children equivalent something like hopefully makes clear react would warn function valid child thanks explanation aweary misread documentation correctly describes returning component directly rather function confused crash loading component fast see notice fallback cheers rovansteen thanks bringing definitely make sure explicitly called docs assume common mistake easy miss', 'date': '2018-10-24T11:14:50Z'}"
"26622",26621,"{'data': 'suspense lazy missing api docs might blind goes want request feature report bug think documentation bug current behavior docs missing current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior reactsuspense lazy documented api docs ps suspense referenced codesplitting document general api referece subsections api referrence sections please send pr raise issue docs repo thanks', 'date': '2018-10-24T10:43:27Z'}"
"26623",26622,"{'data': 'reactmemo work well styledcomponents want request feature report bug think bug current behavior wrapping function returns could composed get error expected behavior returned components could wrapped vice versa versions react browser os affected issue work previous versions react update fixed styledcomponents newest version updating reactis dependency issue styledcomponents think something styledcomponents fix could replace make work', 'date': '2018-10-24T08:40:49Z'}"
"26624",26623,"{'data': 'used new contexttype api constructor want request feature report bug feature current behavior using keeps class component constructor expected behavior obtained constructor implementing feature inappropriate write documentations used constructor versions react browser os affected issue work previous versions react react older react nt chrome windows hm yea bug think probably allowed want send failing unit test andor fix maisumakun calling pass accessible expected seems consistent nt pass access constructor work differently aweary oh thanks reminded code legacy context api necessary documented anywhere please feel free send documentation pr section using', 'date': '2018-10-24T07:58:17Z'}"
"26625",26624,"{'data': 'import one component working cyclic references behaviour bug two components import proptypes proptypes import react react import testfield othertestcomponent const testcomponent props gt return testcomponent propstestprops testcomponentproptypes testprops proptypesstring testcomponentdefaultprops testprops testfield export testcomponent import react react uncomment line see working default props values import testcomponent testcomponent export const testfield testedvalue const othertestcomponent gt return othertestcomponent export othertestcomponent add import field testfield undefined defaultprops bug normal behaviour sandbox bug problem react problem babel ok close', 'date': '2018-10-24T07:57:15Z'}"
"26626",26625,"{'data': 'ability set key attribute programmatically fully uncontrolled component want request feature report bug feature current behavior currently want component fully uncontrolled component attribute assigned outerparent component jsx recreated every time key changes class outer extends component render return expected behavior know inner comp fully controlled component designated attribute imo would make sense could decide better encapsulation possible could programmatically set key attribute maybe static property similar way implemented export interface props user user class inner extends component static key userid render thanks advance submit rfc instead thanks', 'date': '2018-10-24T07:53:08Z'}"
"26627",26626,"{'data': 'objects valid react child found object keys meant render collection children use array instead able pass state book components react import react react import reactdom reactdom import data data import datadisplay datadisplay import booking booking import cardscss class show extends reactcomponent constructor props super props thisstate shows book thisloadshows thisloadshowsbind thisbookshow thisbookshowbind loadshows gt thissetstate shows data bookshow key gt const copybooking thisstatebook thisstatebook key thisstatebook key thissetstate book thisstatebook render return objectkeys thisstateshows map key gt export default show hi use issue tracker bug reports feature requests question please check community support resources', 'date': '2018-10-24T07:23:32Z'}"
"26628",26627,"{'data': 'refactor packages top exports use named exports want request feature report bug feature right packages export api weird solution jest rollup example also export object default example expected way implemented newer packages like reactis using named exports top export wild export entry point package entry point top export would like research refactor strategy receive suggestions tried refactoring react reactdom first pull request react used react two years looked sometimes sources repo', 'date': '2018-10-24T07:19:19Z'}"
"26629",26628,"{'data': 'error line number error boundary hey reopen issue opened nt like fixadd request simply say nt close issue simplenot related answer aweary react pro library pro act like pros thanks clear asking want gaearon good problem details nt point right file example js componentdidcatch error info thissetstate haserror true got see detailsline numbers point bundled file case browser console point right file line number looking see browser ui like great ps tired use outside think adding great', 'date': '2018-10-24T05:03:58Z'}"
"26630",26629,"{'data': 'intended reactmemo also works class components want request feature report bug clarification documentation strict input validation current behavior currently documented receive functional component actually works correctly even given class component discovered looking code writing types following code demonstrates works rendering js const test reactmemo class extends reactcomponent render return test reactdomrender documentappendchild documentcreateelement div expected behavior functional components documented valid arguments either class components also documented supported reactmemo reject argument yeah probably document works classes intended work valid component including exotic ones like result result documenting risks obscuring primary use case memoized function components obsolete immediately think bit optimized right could though see purecomponent optimized classes less optimized pure function close since intentional feel free adjust docs', 'date': '2018-10-24T03:10:56Z'}"
"26631",26630,"{'data': 'update release script handle alpha reactreconciler deps commit broke problem updating change version check verify packages', 'date': '2018-10-23T22:37:35Z'}"
"26632",26631,"{'data': 'scu nt prevent child rerender legacy context batched setstates involved want request feature report bug bug report think bug one already reported root cause current behavior component instance preventing rerender returning may certain condition still get children rerendered even direct update said children happened behaviour triggered specific stack components simplest example managed create involves five components rendering next one responsible triggering toplevel update calling lifecycle method responsible creating child context object according legacy context api function always returning children component instance rerendered long sheduled update behaviour expect bug prevents happening responsible rendering levels component instance tree responsible calling lifecycle method created component instances rendered one two times expected rendered twice happen instances expected render expectation based fact always returns false child instance updates legacy context api pierce returning despite expectation instances rendered twice important function batched together try unbatching swapping done instances correctly rendered example code batching calling functions directly lifecycles respective components believe generally antipattern approach chosen simplicity issue replicated calling practical example situation two ancestordescendant components may naturally schedule updates batch take look legacy context api used popular components like commonly used reallife example bug could two reduxconnected component scheduled update batch injecting legacy context rendered component descendent ancestor implements optimize rendering unchanging subtree eventually line renders component instances rerender correctly expected since uses legacy context api correctly described however instances corresponding unchanging element tree returned also unexpectedly rerendered current behavior bug please provide steps reproduce possible minimal demo problem expected behavior instances rendered versions react browser os affected issue work previous versions react react reactdom canary originally discovered issue reactreactdom version please let know something unclear bug definitely easy thing reproduce since many different components need involved like take fix somebody sends one unlikely working since legacy context phased closing duplicate since probably symptoms root issue', 'date': '2018-10-23T00:31:34Z'}"
"26633",26632,"{'data': 'support headless chrome logging integration tests want request feature report bug feature current behavior logging console errors headless chrome lacks ability provide full message due reliance formatting consoleerror current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior like way get proper error message without hacking code versions react browser os affected issue work previous versions react sure prior versions hack concatenate strings rather use template get reasonable message rather template may issue capybara headless chrome nevertheless real issue troubleshooting integration tests fail due console errors code logging consoleerror note template rb rspecconfigure config configafter js example next unless seleniumchrome seleniumchromeheadless include capybaracurrentdriver traping errors work firefox end end could mode warningwithoutstack concat args testing append message maybe convert call stack string well thoughts could create pr think useful blocking override version formatting inline ideally would nice reported upstream integration tools fixed', 'date': '2018-10-22T07:03:20Z'}"
"26634",26633,"{'data': 'update getmodifierstate browser support comments stale comments geteventmodifierstate nt issue anymore safari probably still nice figure specifically still need module update comment info mind take look thanks mentioned appears issue older versions safari lt according caniuse link probably overkill tested modified createreactapp safari modifierkeytoprop mapping object used also appears chrome supports lockkeys removed note well let know changes okay', 'date': '2018-10-21T18:30:45Z'}"
"26635",26634,"{'data': 'raise typeerror parentinstanceadd function want request feature report bug want report bug current behavior raised capture current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior raise versions react browser os affected issue work previous versions react react google chrome taki seems nested try js import react react import reactdom reactdom import circle rect layer stage reactkonva import stylescss function app const width const higth const radius return const rootelement documentgetelementbyid root reactdomrender rootelement thank work well close soloved', 'date': '2018-10-21T14:37:34Z'}"
"26636",26635,"{'data': 'removing bordertopwidth work want request feature report bug want report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior top border set back deleting versions react browser os affected issue work previous versions react react mac sierra version official build according setvalueforstyles equals js render nodestyleborder solid black render nodestylebordertopwidth render nodestylebordertopwidth reset render reset change works correctly thanks response elaborate happens also change bordertopwidth bordertop seems helping picodoth well mistake changing nt works indeed seems need manually set initial value try js import react react import reactdom reactdom export default class app extends reactcomponent state toggled true style border solid black handleclick gt const style thisstatestyle thisstatetoggled stylebordertopwidth else stylebordertopwidth set thissetstate style toggled thisstatetoggled render const style thisstatestyle return hello codesandbox start editing see magic happen looks like native behavior settingoverriding border style values use shorthand override setting specific value like expands shorthand explicitly uses border property try override nt work properties already expanded sure defined somewhere spec sure anything react easily fix aweary thanks response closing issue', 'date': '2018-10-21T06:57:03Z'}"
"26637",26636,"{'data': 'production build failing using yarn build node want request feature report bug bug current behavior development build compiling correctly production build failing error related rollup first time tried building react machine current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example clone project run yarn install run yarn build using node yarn expected behavior builds without error versions react browser os affected issue work previous versions react os high sierra react version output error badbundletransformer scriptsrolluppluginsclosureplugin error error transforming bundle scriptsrolluppluginsclosureplugin plugin java jar usersemilyrobinsonprojectsreactnodemodulesgoogleclosurecompilercompilerjar compilationlevelsimple envcustom warninglevelquiet applyinputsourcemapsfalse usetypesforoptimizationfalse processcommonjsmodulesfalse rewritepolyfillsfalse assumefunctionwrapperfalse renamingtrue exception thread main javalangunsupportedclassversionerror comgooglejavascriptjscompcommandlinerunner unsupported majorminor version native method javalangclassloaderdefineclass javasecuritysecureclassloaderdefineclass javaneturlclassloaderdefineclass javaneturlclassloaderaccess javaneturlclassloader javaneturlclassloader javasecurityaccesscontrollerdoprivileged native method javaneturlclassloaderfindclass javalangclassloaderloadclass sunmisclauncher appclassloaderloadclass javalangclassloaderloadclass sunlauncherlauncherhelpercheckandloadmain error promiseresolvethenthencatcherr processtickcallback error command failed exit code try reinstalling java node sounds like corrupted setup thanks ah figured date jdk machine overruling date jre thanks', 'date': '2018-10-20T19:08:28Z'}"
"26638",26637,"{'data': 'flaky tests node version running node following tests fail reactdebugfiberperf supports suspense lazy reactlazy supports class forwardref components reactdomserverhydration able use lazy components hydrating node node tests passed output tests summary failing tests fail packagesreactreconcilersrctestsreactincrementalperftestinternaljs reactdebugfiberperf supports suspense lazy fail packagesreactreconcilersrctestsreactlazytestinternaljs reactlazy supports class forwardref components fail packagesreactdomsrctestsreactserverrenderinghydrationtestjs reactdomserverhydration able use lazy components hydrating versions react browser os affected issue work previous versions react react version node mac os also reproduced ubuntu bionic note error attempting run based unrelated issue yeah try figure started happening recently guess something going calls tests know nt await promise maybe reason cc acdlite hi gaearon amp acdlite hello boston hosting mentoring hactoberfest boston filed bug special message us thanks hopping quickly investigate fix tested node followup rewrite tests less flaky like using timers instead microtask guessing change asyncawait microtasks node might related', 'date': '2018-10-20T17:01:51Z'}"
"26639",26638,"{'data': 'react throws error input attribute id defined nodename want request feature report bug bug current behavior name attribute element react throws error console try focusblur input example hey known issue see thanks ohh third birthday issue soon', 'date': '2018-10-19T15:05:48Z'}"
"26640",26639,"{'data': 'use typesreactdom build reactdomdevelopmentjs use reactdomdevelopmentjs build production mode without dependencies react team nt maintain typescript definitions sounds like potentially issue build setup recommend checking community support resources nt work try opening issue definitelytyped repo appears source thanks aweary sorry highjack issue sign react team add official support typescript even without using ts files add types comments eg like webpack done thank', 'date': '2018-10-19T12:14:56Z'}"
"26641",26640,"{'data': 'dependency loop today found dependency loop react packagessharedreactsharedinternalsjs require gt packagesreactindexjs require gt packagesreactsrcreactjs require gt packagesreactsrcreactchildrenjs require gt packagessharedwarningjs require gt packagessharedreactsharedinternalsjs nt know designed way bug could anybody help answer question thanks run unexpected behavior could nt find anything breaking surface comes refers reactsharedinternalsjs connects back entire loop referred warningjs traces back nt dependent components constituting chain nt loop hand loop causing issues concern since nt seem problem going close', 'date': '2018-10-19T10:48:09Z'}"
"26642",26641,"{'data': 'reacttestrenderer bringing back key error code want request feature report bug bug current behavior test passes fine get print console expected behavior reacttestrenderer nt throwing errors like versions react browser os affected issue work previous versions react thecodemonkey please share source component testing likely one components testing missing required key non components tested map foreach literally form two fields button connected store actually made snapshot component thecodemonkey please share test ca nt help ca nt reproduce problem get mac tomorrow', 'date': '2018-10-19T07:20:28Z'}"
"26643",26642,"{'data': 'unexpected purecomponent behavior want request feature report bug bug current behavior setup component counter track number renders container component counter container purecomponent counter three components accept children main component button updates state string value scenario use regular container component single child string value state click button multiple times updates time expected scenario use purecomponentcontainer single child static string click button multiple times renders times initial render expected scenario use purecomponentcontainer single child string value state click button multiple times renders times initial render updated render expected scenario use purecomponentcontainer two children string value state static value click button multiple times updates time click although state value changed expected example implement scenario well show comparison using reacts shallowequals current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior may fully understand expected behavior purecomponent would assume due nature shallowequal works would validate expected whether props reference example show happens compare two example props values difference references use normal nt validate ref different shallowequal validates long values even refs different second example values reference props nt change expected third example values reference props nt change expected final example values reference changes lead believe validating even gets shallowequal check maybe implementation wrong versions react browser os affected issue work previous versions react google chrome version official build beta also tested alpha mac os nt verified previous versions closing seems like duplicate', 'date': '2018-10-18T18:23:53Z'}"
"26644",26643,"{'data': '文字错误 want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react', 'date': '2018-10-18T09:39:07Z'}"
"26645",26644,"{'data': 'uncontrolled input type checkbox reflects updating edge safari want request feature report bug bug current behavior updating value causes change dom property value current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior updating value affect dom property value log codesandbox expected versions react browser os affected issue work previous versions react reproduce react reactdom reproduce browser safari macos sierra edge windows reproduce chrome beta chrome canary firefox smartphone browsers checked aweary nhunzaker remember intentional sure intentional started happening commit think happens checked property never gets assigned never detaches defaultchecked assignment think happens curious comment says change defaultchecked type changes nt comparison maybe curious wrote comment amend comment actually wo nt work react assigns property code runs react ca nt tell type changed unless reactdominput filtering props think two bugs switch text input remove property left text input attribute react nt appear detaching checkboxes correctly least following code works safari var input documentcreateelement input inputtype checkbox inputchecked true inputdefaultchecked false consolelog inputchecked true consolelog inputdefaultchecked false possible react nt something like hood reassignment changes checked attribute bug detachment sure without triggering form validations firefox hit property managed get around wonder way detach checked property attribute without triggering validation', 'date': '2018-10-17T19:40:11Z'}"
"26646",26645,"{'data': 'npm createreactclass support context article nt mention possible use contexts without able support contexts using yes works way', 'date': '2018-10-17T06:32:33Z'}"
"26647",26646,"{'data': 'need react component function check nextprops rerender stop redirecting action react component want request feature report bug need help edge case sure good practice current behavior using react redux redux saga application home screen search bar search subscriber action dispatched saga api call requirement redirect subscriber screen result read good practice redirect sagasreducers redirect component using reactrouterdom home component check props result redirect subscriber results page issue redux stores state every time navigate home gets redirected store persist results jsx class home extends reactcomponent render const actions subscriberdetails thisprops subscriberdetails return return search subscriber homeproptypes actions proptypesobjectisrequired subscriberdetails proptypesobject const mapstatetoprops state ownprops gt return subscriberdetails statesubscriberdetails const mapdispatchtoprops dispatch gt actions bindactioncreators subscriberactions dispatch export default connect mapstatetoprops mapdispatchtoprops home expected behavior redirect happen search subscriber every time navigate home screen results persisted solve need function called component renders update check props home component see props result redirects required screen componentwillrecieveprops function made unsafe use shouldcomponentupdate function solve issue check nextprops set variable redirect component update works fine need confirm way solve issue use function versions react browser os affected issue work previous versions react windows hey use issue tracker bug reports feature requests question please check community support resources', 'date': '2018-10-17T03:34:28Z'}"
"26648",26647,"{'data': 'suspense component capture fallback prop defined edit acdlite decided comments change semantics missing prop means exception propagate next parent like rethrow way suspense component specify props like without needing provide fallback want request feature report bug bug current behavior warn omit redundant tsflow usage misspelled prop accident playground tearing hair trying figure things working expected current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example omit expected behavior react warn development versions react browser os affected issue work previous versions react master send pr hi would like give try quite new project looking first pr react guess write test uses maybe file instead semantics even without fallback also going add kind priority field means least check either defined however maxduration could still miss thing would catch looping props proptypes kinda moved away moving sebmarkbage current semantic fallback defined fallback empty change semantics captures fallback prop defined proptypes kinda moved away moving still warn return undefined component though feels like type warning gt still warn return undefined component though feels like type warning agree sufficient check existence fallback property however case valid use case ca nt typically nt warn looping like difference subtyping objects exact objects looping thing get calling check fallback children undefined optional guess saying case inner one one actually suspends therefore case try render content warning delayed instead eager sebmarkbage yeah either change semantics captures shows fallback actually defined fallback missing like rethrow yea probably field important able add priority hints things without fallback', 'date': '2018-10-16T19:50:09Z'}"
"26649",26648,"{'data': 'script onload triggered event handler nt triggered script element tried well live demo react version looked quick look use directly dom script nt answer question also easily make wrapper component injecting dom script element interested know react script element fails thanks anyway', 'date': '2018-10-16T18:43:39Z'}"
"26650",26649,"{'data': 'bug inline styles flex value steps reproduce expected result actual result notes change sure works way also change second digit also also suffixing px waste cause potential bugs actually seems happy also changed issue related react inline style anyways following explanation might help understanding tl dr shorthand property flex factors positive numbers size flex item must unit distance changed px giving unit none keyword none expands description lt flexgrow gt component sets flexgrow longhand specifies flex grow factor determines much flex item grow relative rest flex items flex container positive free space distributed omitted set lt flexshrink gt component sets flexshrink longhand specifies flex shrink factor determines much flex item shrink relative rest flex items flex container negative free space distributed omitted set lt flexbasis gt component sets flexbasis longhand specifies flex basis initial main size flex item free space distributed according flex factors accepts values width height properties except treated differently plus keyword auto specified flex item keyword retrieves value main size property used flexbasis value used value content indicates automatic size based flex item content lt width gt values flexbasis resolved way width height omitted flex shorthand specified value reference css flexible box layout hope cleared confusion taleymirza thank explanation however ie talking nt really follow specs usually hacks make work one chrome resolves tried using instead nt understand neither flexbox implementation buggy also think making assumptions changing code like based web standards nt best practise think problems like workaround put style inside stylesheet loaded react changed works wish nt need support unfortunately still customers using lt verified react set react nt append suffix dealing browser issue', 'date': '2018-10-16T12:49:01Z'}"
"26651",26650,"{'data': 'npm createreactclass version date current version react npm states version mean nt support certain features latest version react afaik means releasing new versions package except necessary', 'date': '2018-10-16T09:50:10Z'}"
"26652",26651,"{'data': 'shouldcomponentupdate ignored legacy context new context coexisting want request feature report bug bug current behavior component tree legacy context new context coexisiting components placed tree nodes legacy context provider new context provider consumer components always rendered even returns false parent component current behavior bug please provide steps reproduce possible minimal demo problem minimal case created without dependencies first found behaviour redux application uses legacy style context map state store expected behavior call returns false parent components cases prevents rendering located without legacy context new context provider consumer tree see fiddle versions react browser os affected issue work previous versions react react maybe older versions osbrowser dependencies believe bugs like rather difficult fix would increase code size may satisfactory recommendation migrate away legacy context look fixing would great though gaearon reactredux still using legacy context becomes difficult migrate fully new context fix issue difficult might continue using legacy context app least reactredux introduced new context api faced issue reactrouter thanks mjackson gone think approach used fix reactredux going support legacy context future version stomita kafein working new reactredux version switches use instead legacy context please see workinprogress prs available npm tags respectively also fiddling tweaks hope may worth pushing updates near future appreciate could try builds see well work overall give us feedback issues going close likely duplicate published reactredux beta uses internally please try let us know works', 'date': '2018-10-16T01:33:20Z'}"
"26653",26652,"{'data': 'reactcreatecontext ssr leads concurrency problems environments coroutines first context using react ssr meteor meteor uses nodefibers coroutines see enables async code run synchronously without asyncawait generators think reactrendertostring could interrupted code leads problem totally unsure given following code const mycontext reactcreatecontext const appcontent gt props gt const app props gt want request feature report bug bug current behavior gets rendered different properties roughly time eg execution execution might render twice props either twice current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example see expected behavior context consumer respect current tree pick value parent provider even environments fibers coroutines versions react browser os affected issue work previous versions react comment also describes problemlimitation possible workaround environments nodefibers eg meteor currently testing const createfibersavereactcontext defaultvalue gt see const context reactcreatecontext defaultvalue meteorisclient return context const getcurrentfibercontextvalues gt const fibers require fibers fiberscurrent throw new error fiber fiberscurrentreactcontextvalues fiberscurrentreactcontextvalues new weakmap return fiberscurrentreactcontextvalues objectdefineproperty context currentvalue get return getcurrentfibercontextvalues get context set value getcurrentfibercontextvalues set context value return context gt comment also describes problemlimitation comment specifically talking cases concurrent renderers like using reactdom reactart time actual concurrent execution environments react supports standardcompliant javascript environments using environment noncompliant concurrency primitives going cause problems see opened issue meteor repo think right place report hopefully meteor team look thanks aweary understand noncompliant environement might need supported still think limitation react therefore belongs feature request frboard react created meteor package monkeypatches reactcreatecontext course belong react maybe api facilitate support maybe could also help workaround think perhaps fixed try gaearon thank tried update app concurrent serverrenders get happen one call server another rendering happening need investigate though', 'date': '2018-10-15T11:53:09Z'}"
"26654",26653,"{'data': 'ca nt access syntheticevent setstate function body want request feature report bug bug current behavior trying access event object inside setstate function body working shown works fine passing plain object setstate current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior possible access event object setstate function versions react browser os affected issue work previous versions react latest one sure vahnag think warning pretty clean bug take everything need event object synchronously event listener use updater function problem obvious updater function called asynchronously maybe warning least sentence stating difference gives impression used interchangeably difference updater function reliable access previous state always asynchronous matter object function chicoxyzzy setstate function passed setstate need access event async callback use prevent deallocated agree somehow make clearer docs though sure right approach ideas please feel free send fix', 'date': '2018-10-15T10:30:41Z'}"
"26655",26654,"{'data': 'findbytype reacttestrenderer search components addition pure components want request feature report bug feature request current behavior currently method explore array passed components components means method find elements eventually rendered type expected behavior expected behavior navigate element see type searched eg components return currently returns component empty component components interest versions react browser os affected issue work previous versions react currently case please let know clarify anything gt expected behavior findbytype navigate propschildren element see children type searched nt think right guarantee children would get rendered break expectations would nt also able descend nt rendered would also confusing issues specifically suggest mock test works like similar', 'date': '2018-10-14T23:46:19Z'}"
"26656",26655,"{'data': 'set title div effect want request feature report bug current behavior lt div title abc gt mouse passes abc display current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react react', 'date': '2018-10-14T11:47:00Z'}"
"26657",26656,"{'data': 'add key fragment use use add key error uxitten syntax works propless fragments need add key use nothing wrong uxitten docs thanks know use question something else trysound thanks uxitten add complexity syntax trysound thought alias syntax extension transformed reactfragment alias trysound thanks added note docs reactjsorg nt clean enough yes enough', 'date': '2018-10-14T10:35:01Z'}"
"26658",26657,"{'data': 'npm createreactclass forwarding refs nt seem explain use forwarding refs render function class new props argument forwarding refs affected attach pr docs still unclear would need merge rest props fields ref instead example using purpose make easier pass props without merge purpose forwarding special prop passed props usual prop similar key prop passed component props read docs mentioned exactly clear example passes example single nt use help functions please use issue tracker reporting bugs', 'date': '2018-10-13T12:21:02Z'}"
"26659",26658,"{'data': 'strictmode causing runtime behavior change want request feature report bug report bug current behavior wrapping app strictmode see different behavior reactgooglemaps library wrapped strictmode current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example details written inside expected behavior app behave withwithout strictmode versions react browser os affected issue work previous versions react chrome also saw half point strict mode explained see saying opened issue following tweet maybe misunderstanding dev build react codesandbox also use dev build reproducing codesandbox use dev build yes strictmode probably pointing legitimate issue library see thanks clarification investigate issue reactgooglemaps', 'date': '2018-10-13T06:16:28Z'}"
"26660",26659,"{'data': 'set undefined version using recommended polyfills hi updated react different error logs console using document mode checked article entry point including scripts following order solution running version without errors included polyfills problem document mode chrome everything runs fine thanks help pascal please provide complete project reproducing simple project causing console issues issuezip include via thanks lot', 'date': '2018-10-12T14:13:19Z'}"
"26661",26660,"{'data': 'head gt meta gt content escaping issue want request feature report bug guessing bug current behavior following source code escaped server side rendered reproduce behavior like jsx const react require react const reactdomserver require reactdomserver const http require const doc reactcreateelement html children reactcreateelement head children reactcreateelement meta property og image content reactcreateelement body children og image create server object http createserver function req res reswrite reactdomserverrendertostaticmarkup doc write response client resend end response listen server object listens port editor output expected behavior would expect content escaped related using meta element pages nice previews within facebook versions react browser os affected issue work previous versions react ever worked intend send fix solving problem way js import entities const entities new entities const contentregexp content g const handlecontent match content gt return html htmlreplace contentregexp handlecontent spend per request path bad give look point', 'date': '2018-10-12T12:01:36Z'}"
"26662",26661,"{'data': 'forward ref bug latest react version want request feature report bug bug current behavior error boundary components catches error setstate refs forwardref break attached image error occurs bottom post assist struggled find root problem internal task open try fix code possible make pr react could find code shows screenshot probably understanding code right expected behavior forwardref work components like expected versions react browser os affected issue work previous versions react checking packagejson seems using alpha version react people team updated version react last week due bug fix sure stable version seems issue forwardref api happen previous version maybe bug fixed next version already report bug react discord channel someone told open issue thank help try updating latest alpha one using known issues latest gt could find code shows screenshot replaced screenshot code link case somebody wants look would really help could create minimal reproducing case mean breaking thank guidance found bug latest release seems fix wonder removed screenshot though thought nothing begin others team pointed maybe release used meant public feel dishonest behaviour goes open transparent open source upsets lot know reading code version used many mechanics due changed likely reproduce problem original screenshot author like us seeing please remove time author thank mind screenshot post said find source code edited point relevant code code link link representative code us looks suspicious also checked alpha version version found many inconsistencies api lots new apis scare much team apis released soon really appreciate could share reproducing example troubles canary releases generally unstable may contain bugs experimental codepaths maybe particular bug got fixed hard say without reproducing case screenshot tell much bug create minimal example would helpful thanks example great way create reproduction cases specify exact alpha using packagejson answer question ask confuses us bug fixed thank kindly help ask questions relating api important us try new api find bugs know ask thank help close issue please ignore messages api kindly', 'date': '2018-10-12T10:49:12Z'}"
"26663",26662,"{'data': 'need help im new react im trying recreate simple search page css html javascript react tried put code indexhtml react file encounter error current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react anyone help provide email thanks alot use issue tracker bug reports places get help good luck', 'date': '2018-10-12T10:48:15Z'}"
"26664",26663,"{'data': 'warning creates false positives want request feature report bug bug current behavior set field get warning development warning failed prop type provided prop form field without handler render readonly field field mutable use otherwise set either however always true listener component tree warning longer true goes checkboxes reproduction open console tab see warning relevant piece react source code expected behavior possible love react show warning issue least change wording warning great actually forgotten add onchange handler probably nt remove together right passing noop onchange listener silence warning yeah dev deving time warnings annoying probably nt great solution either versions react browser os affected issue work previous versions react versions ever tried last three years love work sure solve issue reported component maintain reluctant make code changes avoid warning reported original issue input element child component defines event listener please see aha yeah see gon na hassle thanks getting back', 'date': '2018-10-12T06:01:10Z'}"
"26665",26664,"{'data': 'props lost refresh hello currently function sets states props works fine refresh state empty props lost state empty enters else condition javascript constructor props super props thisstate address previousaddress componentdidmount thisloadvalues loadvalues gt consolelog thispropsuser consolelog thispropsuserhasownproperty name thissetstate email thispropsuseremails address name thispropsuser amp amp thispropsuserhasownproperty name thispropsusername mobilenumber thispropsuser amp amp thispropsuserhasownproperty mobilenumber thispropsusermobilenumber console log refresh console log refresh hi use issue tracker bug reports feature requests question please check community support resources', 'date': '2018-10-11T18:10:49Z'}"
"26666",26665,"{'data': 'support classlist want request feature report bug feature current behavior exists right expected behavior think adding property dom elements would useful far understand react fire drop support even add remove classlist elements another idea might adding support array type future make sense array array passed used dom elements otherwise used usual real dom side versions react browser os affected issue work previous versions react versions hope added react fire unless misunderstanding think already handled perfectly classnames docs link classcat anyone working one gekorm others work combine array class names single string pass string attribute suggesting use browser native functionality managing array class names way wo nt need additional library gasimgasimzada could get ref dom node operate align react update model check example functionality support chasestarr concern regarding dom react dom prop classlist allows adding classes list allow arrays accepted go class might worded intent wrong currently need use library takes values array create string pass array even dom functionality accept arrays gasimgasimzada attribute would precedence fwiw thing attribute html made babel plugin allows pass array classes please submit rfc work obvious design mix components pass names add extra ones thanks', 'date': '2018-10-11T13:14:18Z'}"
"26667",26666,"{'data': 'context provider attributes want request feature report bug feature reading context api tried use somewhat complex shown docs docs nt clear enough passed attribute used immediate try reading docs thinking attribute put inside passed consumer saw case example const provider consumer reactcreatecontext deep deep child inside would like pass value callback consumer nt understand ca nt react pass attributes consumer asis chosen attribute passed performance reasons solution react shallow compare props current solution requires single reference comparing js const component class extends reactcomponent state value update value gt thissetstate value render return value attribute object feels wrong since everything semantically considered value thanks bogdan still think consumer nt ideal yaireo call instead however want example hoisted value sync maps trysound hi bogan want give context question playing think solution makes sense yaireo sure however prefer mixing context powerplug like', 'date': '2018-10-11T08:10:19Z'}"
"26668",26667,"{'data': 'script executed tag name contains capital character want request feature report bug bug current behavior code script executed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example demo codepen expected behavior processed code may cause security risk versions react browser os affected issue work previous versions react versions browser firefox chrome processed code may cause security risk say also html without react html alert foo alert bar show foo bar alerts html mostly case insensitive except certain attributes issue looks like filed result misunderstanding closing please correct missing something though reopen hi bvaughn thanks reply maybe nt clearly describe try two code snippet first one see script executed think right behavior react script may cause unexpected result also hack let script executed second one script executed react two way generate tag think behavior strange thing second one executed first one ca nt change version react second one also executed sure feature react bug usually nt write like noticed development editor format result schemed json describe html node use render json hacker construct result editor like code renderer like snippet cause hacker inject script page fixed think guys may us application may security risk create minimal demo sure bug please reopen gt issue looks like filed result misunderstanding closing please correct missing something though reopen hi bvaughn evaluate case described bug feature', 'date': '2018-10-11T07:58:12Z'}"
"26669",26668,"{'data': 'getting error eunsupportedprotocol trying install using npm install getting error npm err code eunsupportedprotocol npm err unsupported url type link link scriptseslintrules npm err complete log run found npm err debugging understood dependency eslintpluginreactinternal link scriptseslintrules packagejson giving error currently version eslintpluginreactinternal package run cases even removing dependency packagejson thanks advance suggest use node recommended version install package sudo permission sudo npm install hi use issue tracker bug reports feature requests question please check community support resources change link file solve problem mac hige sierra eslintpluginreactinternal file scriptseslintrules reference learn peachen worked thank much', 'date': '2018-10-11T07:05:07Z'}"
"26670",26669,"{'data': 'context consumer forcing first child always rerender state change want request feature report bug bug current behavior using context api first element inside consumer always rerender context change whether current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example getting deeper optimization react getting rid redux working example component holds state group inputs gif provider holds state inputs wrapped purecomponent split groups consume context consumer input looking different piece state appears however first child consumer always rerender regardless expected behavior would expect purecomponents nt rerender would nt unless assigned piece state changed unless misunderstanding reconciliationrendering step looking consumer versions react browser os affected issue work previous versions react react react dom chrome nt tested others sure happened versions react sorry digression kind extension tracking rerendered component looks useful looking could nt find one react dev tools settings option highlighting renders take look caveats section react context docs provider value always new object reference consumer rerender example provided consumer children rendered first child add call interested visually seeing updates highlighting first child might bug react dev tools filed repo gt highlighting first child might bug react dev tools filed repo gt provider value always new object reference consumer rerender clear consumer rerender components example seem bail correctly put see one log every keystroke many think maybe bug determine whether highlight updates nt see actual performance problem feel free file issue react devtools overcounting updates highlighting bug seems related fragment rather context similar hover element fragment child first element fragment highlighted child hovered element yes part', 'date': '2018-10-10T20:14:03Z'}"
"26671",26670,"{'data': 'componentdidcatch nt catch invariants want request feature report bug bug current behavior componentdidcatch nt called child component renders void element containing another element app crashes contains text error void element tag must neither children use dangerouslysetinnerhtml appears time componentdidcatch properly called current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example behavior different change expected behavior componentdidcatch called cases versions react browser os affected issue work previous versions react worked correctly hi would like give try issue unfortunately used react project idea start looking also would like know take look humm weird tried codesandbox example windows hours earlier able reproduce issue retried mac time behavior components tried chrome mac gon na keep looking way fix file correct edit tested back windows pc behavior components thinking may also expected behavior error boundary example pass child errorboundary however said odd one error caught gt used react wrote problem appeared still moreover put thispropschildren instead line example behavior exactly described first post reproduced problem separately findings boundary fails specific invariant errors case input contain children one boundary works correctly invariant errors returning boundary works able catch error boundary work see comments code different ways cause error boundary successfully trigger', 'date': '2018-10-10T18:58:40Z'}"
"26672",26671,"{'data': 'send notification specific user handle android ios developer android ios programming open specific page user click notification example sample json string server side clients receive notification open page want handle react pages notification receive possible handle action web application user see message notification sure asking honest nt seem like react question seems broader suggest trying site like stack overflow seems like might also want post information eg web application routing setup listening notifications etc donn know possible listen notifications react js still nt really know asking notification mean message pushed server javascript client nt really anything react smile suggest maybe reading post like get ideas', 'date': '2018-10-10T17:52:22Z'}"
"26673",26672,"{'data': 'jaws reads noninteractive elements clickable want request feature report bug bug current behavior create app using createreactapp use jaws professional edition version build ilm internet explorer windows use arrow keys navigate paragraph edit srcappjs save reload jaws announces edit srcappjs save reload clickable expected behavior paragraph non interactive announced clickable versions react browser os affected issue work previous versions react jaws professional edition version build ilm internet explorer windows createreactapp suspected cause using chrome event listener breakpoints observed function called onclick handler non interactive elements noop function causing jaws think interactive element possible solution trapclickonnoninteractiveelement comment reads think would fix issue would great unfortunately nt good strategy reliably detect ios safari webviews apply hack started looking pr looking came seems brittle problem relying user agent webviews overwrite think would break feature test onclick events react check context upgraded project days accessibilty got broken downgrade yeah know android instance something like manipulate useragent directly assume doable almost every scenario nonandroid ofc good point emanaskar upgraded project days accessibilty got broken downgrade code react many years nt know mean upgraded latest react issue started happen sure worry change user agent guess mean case like viewing website inside twitter app twitter happen defined weird user agent', 'date': '2018-10-10T14:07:16Z'}"
"26674",26673,"{'data': 'batchcommit nt empty existing container hello run div contain goodbye instead contains hellogoodbye looks like forgetting empty container issue exists seems like intentional', 'date': '2018-10-09T18:07:22Z'}"
"26675",26674,"{'data': 'react proxy work hi facing issue react proxy actually accessing files port proxy works url like currentpostimages proxy code proxy code package js file ps probably meant react repo using', 'date': '2018-10-09T08:35:21Z'}"
"26676",26675,"{'data': 'passed children functioncomponent component rendered inconsistently want request feature report bug bug current behavior passing function child returns reactelement another component performs conditional rendering function gets called render function inside component render children however another component passed child instead function everything goes expected child component rendered parent component example code javascript class conditionalloader extends component render consolelog conditionalloader render gt gt gt new date false return thispropschildren else return null class undefinedcomponent extends component render consolelog undefinedcomponent render gt gt gt new date return thispropssomeunexistingobjectfunctiongetscalled class app extends component render consolelog app render gt gt gt new date return edit save reload thisrenderundefined renderundefined idontexist consolelog renderundefined gt gt gt new date return idontexistbutgetcalled expected behavior guess consistency either function component rendered neither function component versions react browser os affected issue work previous versions react behaviour amp description confusing far tell entirely correct behavior react attempting render components eventually become children time order react know component children call first clear convert jsx equivalent calls normal js function call evaluation make call know arguments call also first call react gets elements run nothing broken react thank answer markerikson said order react know component children call thisrenderundefined first nt call time calls nt aware childrens example happen declare dummy component like try render think obvious happens functions class executed method still misunderstanding javascript react work given parentchild pair sequence events react calls code parent function executes returning tree js objects called elements like react inspects tree elements returned parent sees one elements type calls collects render output next level tree react call parent component rendered example called parent component method difference first second examples function call executed immediately part going end element object tells react component render next misunderstanding javascript usage react behavior bug hi markerikson thinking answer understand ment thank answers helped lot', 'date': '2018-10-08T18:13:52Z'}"
"26677",26676,"{'data': 'settimeout onclick nt work ssr use issue tracker bug reports feature requests question please check community support resources', 'date': '2018-10-08T01:27:43Z'}"
"26678",26677,"{'data': 'error line number error boundary hi maybe question feature req found nothing want request feature report bug feature current behavior error boundary shows error message stack trace expected behavior error boundary show error line number browser console using source map dehghanimehdi already possible check transformreactjsxsource babel plugin give information stack traces hope helps aweary nt help sadly could find way work plugin plugin description says nothing changes already see info browser console looking info via params example like see instead line number col number', 'date': '2018-10-07T09:32:25Z'}"
"26679",26678,"{'data': 'okay want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react', 'date': '2018-10-06T20:04:48Z'}"
"26680",26679,"{'data': 'getderivedstatefromprops makes state unchangable hello update info form loading values initially textfields using value props state name also using getderivedstatefromprops function sets states props problem currently textfields uneditable state doesnt change onchange function js handleinputchange event gt const target eventtarget const value targettype checkbox targetchecked targetvalue const fieldname targetname example textfields component js derived state please see blog post advice appropriate simpler solutions use case', 'date': '2018-10-05T19:31:18Z'}"
"26681",26680,"{'data': 'add boilerplate compose refs want request feature report bug feature current behavior currently way compose ie situation hook ref multiple components via context one components need calculate layout ref passed consumer little snapshot js export const megacomponent reactforwardref function megacomponent props ref return context gt expected behavior expect react would provide way compose consumer would nt dive runtime implementation details reimplement react already pronebird checkout specifically gaearon comment recommend approach case though pattern nt used frequently', 'date': '2018-10-05T16:45:24Z'}"
"26682",26681,"{'data': 'tag nt preserve line breaks nt seem work intended preserves spaces line breaks example code please see react nt treat specially jsx however pass string literal want', 'date': '2018-10-05T13:50:08Z'}"
"26683",26682,"{'data': 'reactdomserverrendertostring double call want request feature report bug bug current behavior double calling components reactdomserverrendertostring current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior call component reactdomserverrendertostring versions react browser os affected issue work previous versions react example error included github link install instructions normal operation bug seems call consolelog twice client server calls twice could issue express server issue express server closed appget req res', 'date': '2018-10-05T12:46:25Z'}"
"26684",26683,"{'data': 'gray overlay tap react root container want request feature report bug bug current behavior since react seems element event handler noop function ios safarichrome browsers html element gray overlay tap current behavior whole blinking tap simple example reproduce issue reproducing fullscreen mode root container steel blue suppose changes came issue related versions react browser os affected issue work previous versions react react ios safarichrome amikitevich thanks reporting agree nt add handler react roots seems spot regression manual tests safari hiding tap highlights element bigger viewport check philippspiess appreciated explanation help fix thank', 'date': '2018-10-04T22:20:19Z'}"
"26685",26684,"{'data': 'limitations reactcreatecontext want request feature report bug feature current behavior current behavior requires end users use module scope understanding currently possible use default value derived state component stateful provider case stackoverflow post hits issue right imo feel like classic use case replacing redux nt work box static types think quite telling something similar pr move react context would expect default value provider component instead knowledge react internals naive nt see anyone else bringing issue current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example desired behavior maybe jsx api context creation imagine quite simple versions react browser os affected issue work previous versions react sorry might missing something read question linked still nt understand asked provide small example showing trying super clear default value get nt provider top want override value children receive nt need create context inside need render provider value driven state replied question hope helps general seems unnecessary usually nt want create new contexts per component instead want use provider gaearon imagine coupling context initialization single provider pathway end users take redux integrating imagine follow nt feel correct right way wrap function initialize context null happy path nt feel happy always thank input sorry nt understand talking think probably talking different things provide specific example look gaearon sure thing sample provider react redux pr js class provider extends component context flow nt like duplicated provider initial state feels odd would pass provider via props redux go nt think even common case context using apis large majority expose provider render top level ca nt really think want matter nt flow compatible nt mean react redux use case honestly nt looked meant specific use case jquense completely agree passing provider props think bit strange however something similar everything else see flow using typed js object throws accessing keys quick fix duplicated provider state default value passing noop functions place functions defined class properties provider gaearon removing usages redux small footprints moving context attempting duplicate api process went felt similar enough redux single provider state mirrors context functions defined class properties provider emulate dispatched actions sorry mean still nt understand defining context top scope sufficient small example would really help okay gaearon come code js export type analyticscontextt startdate moment enddate moment blueprintid string selectblueprintid function changedate function const analyticscontext reactcreatecontext startdate moment subtract months enddate moment blueprintid selectblueprintid noop changedate noop class analyticsprovider extends reactcomponent state startdate moment subtract months enddate moment blueprintid selectblueprintid id string gt thissetstate blueprintid id changedate dates startdate moment enddate moment gt thisonchangedate dates wrote pr let add uh context discussion default use case reactredux single store top component tree however versions far also supported passing redux store instance directly prop connected component like js const createstore const createstore reactdomrender documentgetelementbyid root works far individual connected component separate subscriber redux store pass store prop component subscribes directly prop store instead store passed legacy context switching individual percomponent subscriptions single store subscription way reactredux means concept passing store prop meaningless individual connected components nt subscribe potential alternative trying idea accepting separate providerconsumer pair like customize behavior like subapp inside main application let know got questions related also note least considered idea using two providerconsumer pairs first would singleton create second instantiated pass using first one main interest actually allow passing custom function second arg seems hacky seb markbage actually suggested thanks input markerikson find second comment fascinating hope continues harden interface gets used cool use cases like gaearon purely userspace perspective could optional solves particular issues nt require anything fancy dan still nt understand actual concern trying raise default value context instance gets used render consumer provider since normally actually rendering provider giving value default value irrelevant time nt branch atm would reasonable us check value null throw error saying probably forgotten put reactredux around app markerikson understand default value unimportant time want optional overriding feels dirty react redux populates store initial render would different optional works fine believe jquense flow fails consume context afaik exists provide typesafe fallback hooks solve problem perfectly thanks hard work guys gaearon jquense published reactredux beta uses internally please try let us know works', 'date': '2018-10-04T12:49:54Z'}"
"26686",26685,"{'data': 'mutationobserver reactdom without polling want request feature report bug feature description developers want watch mutation dom nodes need use mutationobserver api polyfill checks observed element times second performant ideally reactdom would api allows execute callback time dom element created updated removed dom list mutations like mutationobserver observe callback observing elements would lightweight polling changes observed element feature request mutationobserver api reactcontrolled dom nt use polling api could mutationobserver depends trying accomplish many normal use cases best bet let component make dom modifications cycle whenever updates whenever one children updates due change initiated occur synchronously allow dom modifications happen without unexpected flashesglitches asynchronous behavior access smartly change need change know exactly changed react rendering use case integration testing unfortunately ca nt use case nt know ca nt use primary purpose nt see react providing specialized api seems like niche use case', 'date': '2018-10-04T08:24:15Z'}"
"26687",26686,"{'data': 'error find module binaryextensions trying use reactjs local system followed official documentation reactjs trying tutorial tic tac toe local development environment followed steps try run npm start getting error throw err error find module binaryextensions functionmoduleresolvefilename functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload using node npm fyi installed binaryextensions using npm binaryextensions still getting error need install directly honest idea recommend removing running help try using yarn instead npm think probably makes sense switch tutorial use plain html instead node setup later worked yarn thanks much', 'date': '2018-10-04T07:49:32Z'}"
"26688",26687,"{'data': 'dom selector vs react ref performance hello heavy react user question developing react develop sometimes need access elements exist dom performance difference using using example using ref virtualdom optimize physical speed difference dom selector ref official document doest explan react ref performance like hear ideas gaearon thank hgpyun refs might little faster cases since component already reference dom node friends browser parse walk tree find node could slower said performance difference probably negligible almost cases use case lots manual dom queries manipulation might best manage use react part application checkout integrating libraries advice performance nt problem say nt really worry general recommend using refs makes sense', 'date': '2018-10-04T06:22:41Z'}"
"26689",26688,"{'data': 'event handlers fire added via reactcloneelement want request feature report bug probably bug nt sure current behavior onkeydown onkeydowncapture events handlers fire added via reactcloneelement current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example pseudoexample demonstration case appviewtsx file export class appview extends containerview containerview extends reactcomponent public render let view superrender appviewtsx file export class appview extends containerview public render let view superrender expected behavior handler fires versions react browser os affected issue work previous versions react know work previous versions react please spent u time write correct example bug happen u use container hoc high order component check onclick work sorry unable reproduce isolated environment project huge possible extract exact code investigate reopen suspect bug', 'date': '2018-10-04T06:17:39Z'}"
"26690",26689,"{'data': 'bug double clicking span contenteditable followed normal span want request feature report bug bug current behavior double click contenteditable span single word followed another span editable text entire contenteditable selected since single word instead part text left cursor selected current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior selects full word versions react browser os affected issue work previous versions react react nevermind faithful html behavior nt make sense', 'date': '2018-10-03T18:46:09Z'}"
"26691",26690,"{'data': 'conditional components feature current behavior often use expressions like desired behavior would like expressive components many cases generic syntax preferred explicit child component pure function knows supposed render issue evaluate children even ultimately returned since passed children component desired syntax able behave exactly like conditional expression contained children actually processed unless condition met reality component could something else entirely process render children current user super user process render items similar key thing want props passed children children produced unless condition satisfied versions react browser os affected issue work previous versions react presumably version react hi seanyriver consider using npm package reactif look project github repo implement version functionality application chasestarr thank note bit detail syntactically reactif library spoton conditional concept imagining something ultimately affects syntactic sugar uses short circuit logic something like component would produce following problem children actually evaluated including example rough incomplete concept convey thoughts imagining something like would produce something akin curious thoughts perceived problem potential solutions way handle allow nodereturning function specified children far see reactif library already allows course move function outside jsx avoid recreated ambivalent proposal jsx currently straightforward predictable evaluation works special component nt work way could confusing discussed many times please search past discussions unlikely introduce something like propose might introduce syntax sugar embedding generator expressions like future thank additional feedback jamiewinder gaearon helpful ideas resources seanyriver try use smth like', 'date': '2018-10-03T12:13:22Z'}"
"26692",26691,"{'data': 'handle possible null return value want request feature report bug bug specific reactdom current behavior null check returns null specified possible return value mdn docs browsers documentdefaultview returns window object associated document null none available current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example root cause seems pretty apparent handling possible null value submit fix shortly expected behavior error thrown returns null versions react browser os affected issue work previous versions react present version seems addressed', 'date': '2018-10-01T19:01:21Z'}"
"26693",26692,"{'data': 'npm createreactclass way implement getderivedstatefromprops seems way implement class methods others overlooking something mention either work note generally meant last resort recommended except edge cases methods problem methods concerned solved suggestion using nt see documentation anywhere yeah doc needs updating filed feel free help nt need put methods though static methods react component api name component debugging purposes etc believe another', 'date': '2018-09-30T22:49:03Z'}"
"26694",26693,"{'data': 'provide umd build simplecacheprovider expect planned wanted make sure file make sure missed want request feature report bug feature current behavior cjs build simplecacheprovider expected behavior react reactdom umd build makes easy test things teach people react simple file without tooling complicate things umd build simplecacheprovider would help teaching suspense versions react browser os affected issue work previous versions react na', 'date': '2018-09-30T16:10:53Z'}"
"26695",26694,"{'data': 'input typenumber eventtargetvalue changes empty string pressed onchange emitted used want request feature report bug bug current behavior onchange event changes value input empty string pressed additionally seems like nt fire onchange dot comma example current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior value stays integer seen user fire onchange versions react browser os affected issue work previous versions react react chrome tried reproduce latest version react seems ok issues like one explained even codesandbox nt matter localization maybe change attribute chrome firefox behaving different way sure matter localization check made video showcasing problem additional info chrome version version official build macos high sierra lang attr nt help bug react way native html input type number parses floating numbers behavior react input similar behavior nonreact input field refer example replicate nonreact input field typing valid number press enter trigger change event notice input one wrong inputs change event listener triggered happens inputted number valid floating number consists following optionally character one following given order one characters range following exactly given order single full stop character series one ascii digits optionally exactly given order either e e character optionally hyphenminus character plus sign character one characters range click html spec reference valid floating numbers follow rule valid numbers invalid floating numbers input number pass validation throws error nt trigger change listener refer link html spec solve ui one way provide better feedback user add validation using regex pattern set proper error state using setstate callback disable form submission haldarmahesh indeed exactly native works yeah behavior react ca nt really control discussion see', 'date': '2018-09-29T18:55:53Z'}"
"26696",26695,"{'data': 'ok login button want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react', 'date': '2018-09-28T18:38:21Z'}"
"26697",26696,"{'data': 'error expected subtree parent mounted class component idea error occured version prod develop whats wrong official react page says expected subtree parent mounted class component error likely caused bug react please file issue many thanks hello kbalus steps reproduce issue maybe codesandbox link version react using also dependencies installed locally projects im using react issue appear googlemapreact package version using latest see issue repo seems like changed need reproducing example', 'date': '2018-09-27T14:15:24Z'}"
"26698",26697,"{'data': 'expected subtree parent mounted class component want request feature report bug bug current behavior demo use use render add worked change generate error invariant violation expected subtree parent mounted class component error likely caused bug react please file issue expected behavior correct render two possible fixes think could stop passing third argument would break legacy context propagation nt using anyway since get deprecated think would remove fragile dependency versions alternatively update dependency version came together imagine thank gaearon try fix', 'date': '2018-09-27T12:53:07Z'}"
"26699",26698,"{'data': 'click mobile working research link github page showing hi use issue tracker bug reports feature requests question please check community support resources', 'date': '2018-09-27T08:57:22Z'}"
"26700",26699,"{'data': 'react context value propagation performance hi observed performance issue context providers value updates spoken gaearon twitter bit context let say provider update value provider good far let say want pass value tree performance reasons want render tree components want render consumer components case naive way would something like js class blocker extends reactcomponent shouldcomponentupdate return false render return thispropschildren render return thispropschildren even though components tree rendered except consumers update expensive suspect tree walking algorithm takes run standalone example example render time simple counter update production app list nodes components components looking update times similar rendering tree bit context trying replace root would create subscription store pass latest state context consumers would pick update run selector rerender result value changed working found updates context slow usage see relevant files looked running codesandbox example mode flags makes update time take around try running production flags see performance issue went away looking development bundle time taken seems due markers really bad performance something react team already found past looks like alexreardon might assuming js import reactcjsreactproductionminjs import reactdomcjsreactdomproductionminjs import react react import reactdom reactdom would switch production mode nt think correct said still appreciate trueadm could look locally prod build maybe less calls previous discussion alexreardon said issues occur prod builds even without measurements gaearon added well ivan asked enable production mode codesandbox recommended way keep digging issue though see something comes issue still existed reduced amount production builds real world example listed item list time hit consumers still taking production builds compare something like reactredux uses event emitter pass values tree cost hit consumer made codesandbox illustrate issue try get working production builds would kinda big deal reactredux actually trying switch using version instead connected components separate subscribers also tie performance benchmarks trying wip branches well try gather numbers helps thought sandbox showed issue enough clarity needed try obtain numbers yes certainly appreciate details gather also curious whether comes play consumers marked bitmasks nt require update react still traverse entire tree speed things sandbox nt helpful nt run production mode includes sandboxspecific overhead eg inject code every loop check infinite get issues sorted definitely need repro cases plain html files working umd production builds react reactdom markerikson let leave think derails issue little bit issue specifically default update performance extra overhead want look regardless optin optimization apis fact talking apis distracts us fixing bigger issue tempting say need optin thing fix yeah selfcontained html version using umd builds would big help noticed also another reactdom used render codesandbox ui probably affected profiling bit bit digging turns things bad first observed good must tested dev builds point tip want run codesandbox examples locally developer copy paste repo run custom builds react cheers gaearon tip simplified real world use case clarity find branch stateprovidersimplier allow parent renders reordering broken simplifies use case results production build critical render using critical render slow critical render dragging item render rest tree sort makes sense face value context updates walk tree whereas direct subscription state update propigation closer looks like context updates would sufficient use cases although significant slowdown event emitter model would push extremely fast updates gt slow still significant us relevant markerikson moving leaning context propigating state values would lead slow current subscription pattern look like zerosubscriptioncost model used context api absolutely free ironically one reasons moving hoped switching single subscription passing state via context instead n subscriptions would faster reactredux ability memoization checks bail even asking react update advantage immediately calling top component tree letting react walk everything fwiw current benchmarks indicate single subscription approach winds bit slower multiple subscriptions approach artificial stress test scenarios would nice quantify exactly cost inside react case yep old subscription mechanics could use observedbits sender side receiver still nt get real problem tearing actually bad alexreardon also dug last night morning new context never fast redux updating state simply new context model work behind scenes thus incurs overhead traverse entire tree going fiber time might things tweak implementation function however dig today trueadm think beginning thought would cache traversal path updates put scope initial implementation maybe revisit problem need somehow invalidate cache keep consistent could also linked list context consumers still traversal less whole tree thanks looking work blows mind fri sep pm dan abramov notifications githubcom wrote could also linked list context consumers still traversal less whole tree receiving mentioned reply email directly view github mute thread trueadm gaearon yeah expected knew calling top tree redux update cause react reevaluate things work bailing early one reasons interested potential thing help potentially skip work way context implementation sped especially cases context updates need propagated tree due use type blocking would helpful something like obtaining ref provider calling value update react render would great almost got thekashey see markerikson would work client side stuff default value could work everyone ssr different clients shares context value gt simply new context model work behind scenes thus incurs overhead traverse entire tree going fiber time trueadm current context model different consumers subscribing provider directly rendering consumer using hook traverse tree fairly lightweight find provider subscribe would imagine providing new value sameish cost redux case particular reason provider doesnt maintain consumers registry guess would nonflat trigger consumers topdown rather insertion order', 'date': '2018-09-27T01:16:24Z'}"
"26701",26700,"{'data': 'schedulecjsschedulejs thinks browser run server want request feature report bug bug current behavior code meant run browser running server error seeing current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example using one components server render broken due dependencyfile pulled expected behavior error guess root problem seems faulty check environment somewhere versions react browser os affected issue work previous versions react narrowed nothing downgrading using fixes issue seems related issue looks like fixed master yeah issue means define server ideally nt adjusted heuristic also check separately next version thanks pointing nt anywhere codebase set except tests maybe dependency dig deeper recently updated reactdom issue ramideas eureka moments able share project specifically reactnative app via expo sure helps nt time dig dependency declaring pinned react reactdom', 'date': '2018-09-26T13:08:31Z'}"
"26702",26701,"{'data': 'controlled component receiving state rendered variable want request feature report bug bug current behavior create controlled input element store variable render update input value according state value expected behavior update demo sure bug lack understanding nt seem like bug anything inside runs essentially equal thus example input state updated state updates value still stuck seems updating state initial value like muniftanjim mentioned muniftanjim exactly right inputs nt working call constant elements rendering element whats returned every time since nt updated component renders props never change expected behavior', 'date': '2018-09-26T07:21:52Z'}"
"26703",26702,"{'data': 'setstate working component remounte setstate bug triggered child component callback component mounts first time unmounts mounts button onclick gt closetab gt method setstate mutating state share fullcode becouse work since im using serverside component generator injecting eval function code setstate component mounted second time tested tested toggle ui pasing button tesed state setstate bu debuugging tested using state clallback setsate gt never runs second mount consolelog thisstate tried hi use issue tracker bug reports feature requests question please check community support resources general likely get help put effort reducing examples saying discourage lot work dig wall code like', 'date': '2018-09-25T11:40:34Z'}"
"26704",26703,"{'data': 'context context hello list items edit item panel opens list also edit item new tab ssr use redux isomorphic code panel item editing difficult composition several controls task edit several items simultaneously one window react legacy context itemeditpanel receives data redux puts context edit two items simultaneously context deprecated done without using context props proxy context deprecated old unsupported api new context api lets everything old one could supported general use issue tracker bug reports questions please see nt true new context old context difference pattern use unsupported api sorry understand without example run old new context propagate tree way oh yes mistake looked source code new context thought work synchronous mode enablesuspense true try context recreate providers async branch interesting application ca nt lot context objects thank', 'date': '2018-09-25T11:27:55Z'}"
"26705",26704,"{'data': 'official tutorial mistake url 地址 official tutorial mistake completing game lifting state code snippet class square extends reactcomponent render return thispropsvalue cause error maximum update depth exceeded onclick brace see mistake show failing fiddle', 'date': '2018-09-25T08:47:08Z'}"
"26706",26705,"{'data': 'element type invalid expected string builtin components classfunction composite components got undefined dealing json response react native coming wordpress rest api containing pages profile page id title featured image using flatlist created screen featured images titles artist page want add functionality navigate individual page clicking item flatlist passing title featured image later content regarding page next screen display information probably based id linksscreenjs import react component react import proptypes proptypes import artist artist import createstacknavigator reactnavigation import scrollview stylesheet view text image flatlist activityindicator touchablehighlight reactnative export default class linksscreen extends reactcomponent constructor props super props thisonalerttypepressed thisonalerttypepressedbind thisstate data onalerttypepressed typeid typename imageurl static navigationoptions title links state data isloading true iserror false static proptypes navigation proptypesshape navigate proptypesfuncisrequired isrequired componentwillmount fetch response gt responsejson responsejson gt responsejsonsort b gt atitlerendered lt btitlerendered thissetstate data responsejson isloading false iserror false catch error gt thissetstate isloading false iserror true consoleerror error renderrow item gt getkey item gt string itemid rendercomponent thisstateisloading return else thisstateiserror return error loading data else return render return thisrendercomponent const styles stylesheetcreate container flex backgroundcolor elementscontainer backgroundcolor grid margintop marginbottom marginleft height width borderbottomwidth borderbottomcolor title color ffffff textalign left fontsize thumb height width resizemode cover artistjs import react component react import createstacknavigator reactnavigation import scrollview stylesheet view text touchableopacity image reactnative export class artist extends reactpurecomponent constructor props super props onpress gt thispropsonpressitem string thispropsitemid string thispropsitemname string thispropsitemimageurl static navigationoptions title artist render const artist thispropsnavigationstateparamsartist return const styles stylesheetcreate container backgroundcolor title color ffffff textalign left fontsize image height width resizemode cover getting error moment saying string expected undefined type found used different way unable pass id identifier pass data next screen open specific generated screen artist error edible code used like working grid version navigation functionality sure gives good indication supposed work notes please nt mind titles moment still small unsolved issue regarding unicodes think wo nt matter passing titles another screen default import named export wo nt work thanks letting know unfortunately nt solve issue still gives error try removing still breaks know issue something else keep removing find jsx element broken type figure type undefined gaearon issue nt occur anymore removed following artistjs seems error unclear error happening exactly course need artist object fill data pushing another screen tips please unfortunately stuck days nt seem able solve error location clearly wrong write becomes error seeing happens receives first argument maybe making similar mistake inside rendering something nt imported correctly tips please unfortunately stuck days nt seem able solve stuck days need reexamine approach debugging issues nt try randomly guess happens cut parts code see causing find bad callsite fix explained error means precisely hope helps put right direction managed resolve error slowly getting somewhere thanks lot encounter problem cause import blank component another component render reference thanks gaearon debugging method', 'date': '2018-09-24T21:17:42Z'}"
"26707",26706,"{'data': 'feature request purecomponent children comparison compare component instance instead element instance always returns false want request feature report bug feature current behavior consider root component export default class root extends reactpurecomponent constructor render return purecomponent color component gets new element instance although pointing old component instance wrapper shouldcomponentupdate provided purecomponent functionality compares element instance always false expected behavior wrapper shouldcomponentupdate provided purecomponent functionality compares component instance true false purecomponent behavior nt necessarily changed instead solution even helper function argument use within custom would really great feature example shouldcomponentupdate nextprops nextstate const childrenprops reactchildrengetprops thispropschildren new react helper const nextchildrenprops reactchildrengetprops nextpropschildren const childrencomp reactchildrengetcomponent thispropschildren new react helper const nextchildrencomp reactchildrengetcomponent nextpropschildren compare variables realise could nt work children array etc would require bunch stuff considered think need kind solution problem ultimately purecomponent could components elements comparison hood somehow currently way achieving sort performance optimization either cache price losing reactivity accept fact unnecessary rendering involved tree aware discussion subject solution provided like know way feature could implemented react future thanks wish live tutor understand sorry clear native speaker thing component rerenders every time receives new props blocks rerender props nt change soft comparison primitives pointers stay purecomponent block unnecessary rerenders problem received children changed every time parent component rerenders new instance react element created parent rerender always different comparison fails even though pointing unchanged reactcomponent instance suggesting nt compare children guaranteed receive different instance react element instead somehow extracts actual component instance element instance checks actual component instance props changed hope expressed main thought understandable way problem close favor one nt see one searched lot swear sorry confusion thanks pointing', 'date': '2018-09-24T15:24:46Z'}"
"26708",26707,"{'data': 'schedule package problem npm yarn want request feature report bug bug current behavior gives error build installing react packages npm problem nt give error yarn error raises mac linux could nt test windows installed packages fixing nt help ps working smoothly new experimental schedule started give error using experimental feature error steps build webpack give error build webpack build success also share webpack setup think related expected behavior work npm yarn versions react browser os affected issue work previous versions react react reactdom nodejs npm yarn working version react reactdom nodejs npm yarn please provide full project might bug package manager build tool build setup hard guess without actually reproducing', 'date': '2018-09-24T13:10:59Z'}"
"26709",26708,"{'data': 'improved stack trace want request feature report bug feature current behavior usability current stack trace components native dom elements improved example tells divs followed select tag sure select display name showing components name option tag structure exists lot places component expected behavior stack trace line numbersome way pinpoint location like idclass provided desired versions react browser os affected issue work previous versions react os ubuntu react case using babel use following plugin view source file line numbers tried small repro cra pretty neat properly showed tag restricted error stack file line number v v curious magic done cra enable cc gaearon aftabnack extra magic required already builtin react see configure babel config file include plugin dev environment produce user friendly errors disable production environment since properties exist react production anyway', 'date': '2018-09-24T08:59:09Z'}"
"26710",26709,"{'data': 'reactdomtestutilsproductionminjs working npm want request feature report bug bug current behavior reactdomtestutilsproductionminjs published npm package differs one release current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example trying use reactdomtestutils npm package production mode throws error typeerror read property undefined related line col expected behavior error thrown versions react browser os affected issue work previous versions react provide reproducing project please', 'date': '2018-09-24T07:13:00Z'}"
"26711",26710,"{'data': 'dom event mount target considerations given considering rewrite event system thinking attaching events react root thought would fitting explore options mount event listeners little combine knowledge scattered across repo general three candidates attaching event listeners document listeners react root listeners element listeners every option comes shortcomings want summarize learned years document listeners historically react always listened document level implemented synthetic event system simulate capture bubble phases inside react tree event listeners listening bubble phase means users still add capturelevel document listeners see fire react process event additionally events bubble dom support bubbling events react sometimes eagerly adds event listeners media events example listens capture phase instead usually works leave react event system attach native listeners needed certain caveats come one example calling capture documentlevel listener effect another implication interoperability react roots thirdparty frameworks behave unexpectedly browsers certain optimizations place make handling document listeners complicated safari properly bubbling document listeners used chrome respect preventdefault touch start document level also never cleaning documentlevel listeners certain benefits solution well current event system use event bus implement polyfills require document based listeners implementation portalbubbling easier need ensure already listening document portal target later react root listeners one solution issues outlined use react roots mount target events would still rely event delegation would require synthetic event system root level listeners would certainly help make bubbling robust using multiple react instances since longer add listeners level however work bubbling events use capturing would fire inverse bubble order capture handlers multiple roots also always fire wrong order portal bubbling also become complicated since find portal root inside reactroot see need attach listeners portal root well consider following example need add listeners well compare example need compiled list previous implementation attempts issues pointed well date pr issues oct enterleave shims using instance react events like focus firefox fire reverse order tap highlight shims jun firefox mousemove events aug enterleave shims probably possible work around someall issues invalid capturing order worked around adding bubble capture listener regular events trigger appropriate phase shims probably rewritten need document additional listeners could added ios tap highlight could disabled via css get rid edge cases around events bubble browser consider deprecating support together new features since taking time rethink event system also want us think passive event listeners web components think albeit additional implementation effort support passive event systems keep using event delegation add two different listeners one capturing one bubbling handle completely different events support shadow roots bit complex event delegation really make sense easily consider shadow root react root portal root since rely adding listeners parent shadow root consider following case html handy comparison custom elements support different javascript framework react definitely better planned changes event system work element listeners sort radical approach changing event system get rid event delegation altogether happens preact reactdomlite vuejs probably frameworks well research ember angular point case trivial add support passive event listeners bubblecapture behave expected also allows us completely remove need synthetic event system could rely browser also know browsers better optimize certain events attached directly element think least two major roadblocks though performance event delegation avoids need every element event handler figure significant overhead really especially considering possible bundle size improvement make initialrender faster needs compared realworld application rough benchmarking microbenchmark outcomes representative real apps eventsystem less react noticed another feature event delegation often overlooked setstate batching right react knows event listeners called batch setstate calls case looked bit potential callback mechanism would fire events processed next frame drawn think possible browsers evaluate performance implications realworld application see bad often setstate batching occurring could still batch inside event listener portal bubbling big issue see portal bubbling still need use event delegation portal roots catch events listened parents writeup react fire gaearon mentioned could use redispatching native events would still require us set listeners first considerations whole synthetic event system currently accounts react dom bundle size back july worked example removed everything event related added tiny preactlike system find much save look edge cases much already got tests pass general might also consider adding api installing global dom event handlers since upcoming concurrent mode make complicated listen arbitrary non reactcontrolled events possibly fired render time slices discussion scope writeup though maybe good keep mind especially curious ways could implement portal bubbling using element listeners say biggest uncertainty right really wonderful writeup figure significant overhead really especially considering possible bundle size improvement make initialrender faster great consideration loadparse time code execution cost think important create good series benchmark fixtures though worry much effort take produce good ones anyone know existing projects could based noticed another feature event delegation often overlooked setstate batching right react knows event listeners called batch setstate calls familiar async rendering however wonder batching setstate event listeners remains useful mode assuming mediumlow priority setstate calls getting batched anyway problem could eventually go away dispatching inside event listener seems straight forward like know event types often get batched together excited local event listener attachment seems like avoids browser issues challenges making work within react control problems', 'date': '2018-09-23T19:00:28Z'}"
"26712",26711,"{'data': 'pass refs wondering good idea pass refs understand passing instance welcomed edge cases next state calculated based refs take look example javascript const getflyoutposition idealdirection margin parseint statictooltipmargin relativeoffset triggerrect gt const windowsize height windowinnerheight width windowinnerwidth scrollx scrolly needed get element dimensions use calculate next state moment way access refs const flyoutsize height thisflyoutref thisflyoutrefclientheight width thisflyoutref thisflyoutrefclientwidth const maindir getmaindir flyoutsize idealdirection triggerrect windowsize margin const base baseoffsets relativeoffset flyoutsize maindir triggerrect windowsize margin const flyoutoffset top basetop left baseleft return flyoutoffset maindir export default class extends component state flyoutoffset top undefined right undefined bottom undefined left undefined maindir null static getderivedstatefromprops getflyoutposition setflyoutref c gt thisflyoutref c flyoutref render const flyoutoffset thisstate const children thisprops think consider passing refs sometimes state may based values dom please let know create pr would interested hearing others handled case ended storing refs state could access use case value state needs updated changes flushed dom correct way would move state update need take measurements render exactly right tool job clear code reading values writing values ref response change external props nt think enough context code example really understand important eg used related component suspect nt need use general usually better solutions lt code gt getderivedstatefromprops lt code gt jason mentioned lt code gt getsnapshotbeforeupdate lt code gt lifecycle sure really needed case either limited knowledge component would inclined say could everything something like js function updateflyoutposition props flyout flyout const windowsize height windowinnerheight width windowinnerwidth scrollx scrolly export default class extends reactcomponent flyoutref reactcreateref componentdidmount always update position flyout first render updateflyoutposition thisprops thisflyoutrefcurrent componentdidupdate prevprops prevstate update position flyout related props changed thispropsidealdirection prevpropsidealdirection thispropsmargin prevpropsmargin thispropsrelativeoffset prevpropsrelativeoffset thispropstriggerrect prevpropstriggerrect updateflyoutposition thisprops thisflyoutrefcurrent render const children thisprops getderivedstatefromprops use case value state needs updated changes flushed dom call setstate ref know bad practice call setstate render nt think approach correct one gt correct way would move state update need take measurements render exactly right tool job tried using nt work quite well triggered component receives props renders late gt clear code reading values writing values ref response change external props nt think enough context code example really understand important eg used related component suspect nt need use general usually better solutions getderivedstatefromprops jason mentioned getsnapshotbeforeupdate lifecycle sure really needed case either limited knowledge component would inclined say could everything something like js function updateflyoutposition props flyout flyout const windowsize height windowinnerheight width windowinnerwidth scrollx scrolly export default class extends reactcomponent flyoutref reactcreateref componentdidmount always update position flyout first render updateflyoutposition thisprops thisflyoutrefcurrent componentdidupdate prevprops prevstate update position flyout related props changed thispropsidealdirection prevpropsidealdirection thispropsmargin prevpropsmargin thispropsrelativeoffset prevpropsrelativeoffset thispropstriggerrect prevpropstriggerrect updateflyoutposition thisprops thisflyoutrefcurrent render const children thisprops component reading div sizes calculations see fits screen writes position values update div div positioned relatively another element anchor looks position size anchor changes updates flyout element like approach tried writing styles ref directly opening issue nt sure written styles leave react decides better update dom sorry posting enough code getmaindir javascript export const curryternary predicate gt right gt left gt predicate right left export const setorreset predicate gt right gt curryternary predicate right export const getmaindir flyoutsize idealdirection triggerrect windowsize margin gt const predicatevertical windowsizewidth triggerrectright gt const predicatehorizontal windowsizeheight triggerrectbottom gt const setorreset predicatevertical triggerrecttop flyoutsizeheight margin windowsizeheight flyoutsizeheight triggerrectbottom margin const left right setorreset predicatehorizontal triggerrectleft flyoutsizewidth margin windowsizewidth flyoutsizewidth triggerrectright erroroffset margin const spaces right left const max mathmax spaces return idealdirection amp amp spaces parseint directionsindexmap idealdirection gt idealdirection spacesindexmap spacesindexof max basically returns one values left right direction flyout function javascript export const baseoffsets relativeoffset flyoutsize maindir triggerrect windowsize margin gt let top windowsizescrolly triggerrecttop let left windowsizescrollx triggerrectleft maindir directionsdown top windowsizescrolly triggerrectbottom margin else maindir directionsup top windowsizescrolly triggerrecttop flyoutsizeheight margin maindir directionsleft left windowsizescrollx triggerrectleft flyoutsizewidth margin else maindir directionsright left windowsizescrollx triggerrectright margin return top top relativeoffsety left left relativeoffsetx nulledgravity think use case basically inside positioner component determines topleft position values popovertooltip run issues storing refs state causing cascading updates somehow code got us around issue alternative approach considered store refs instance setstate stored ie deferred initial render pass ran issues think route end going two pass rendering brian suggestion updating positioned element setting styles setting state update position finally setting tooltip unfortunate needs two passes passes generally quite fast hey hamlim interesting approaches used brian suggestion small changes fit needs end updating dom directly', 'date': '2018-09-21T11:23:16Z'}"
"26713",26712,"{'data': 'context consumer rendering correctly inside tag want request feature report bug bug current behavior context consumer rendering correctly placed inside html tag reproduction fresh generated project js import react react const examplecontext reactcreatecontext const examplevalues number zero zero class app extends reactcomponent render return value gt examplevalues value zero value gt examplevalues value zero export default app first renders expected second one renders expected behavior second render versions react browser os affected issue work previous versions react react version browser chrome os ubuntu mate work previous versions react nt know looks related issues think suggested solution move context consumer outside option', 'date': '2018-09-21T11:01:53Z'}"
"26714",26713,"{'data': 'accessing reactdebugcurrentframe without using secretinternalsdonotuseoryouwillbefired want request feature report bug request feature current behavior working writing custom react renderer right use order access stack information current frame order display warnings developer expected behavior would like able access stack information current frame without worrying safety employment better way versions react browser os affected issue work previous versions react react', 'date': '2018-09-21T01:39:46Z'}"
"26715",26714,"{'data': 'displayname supported combination forwardref react developer tools display names components based reactforwardref currently ignored react developer tools gt name always forwardref think bug example edit preview check docs function pass needs named rather object returned updated code preview oooops like always helps read thanks lot bvaughn overlooked part documentation worries looks like easy mistake make', 'date': '2018-09-20T21:30:20Z'}"
"26716",26715,"{'data': 'component previous route staying memory navigation different route want request feature report bug bug current behavior using reactrouter making single page application multiple routes navigating routes noticed component previous route still present memory eg navigate see component corresponding still memory moreover change route component cleared component still memory adding heap snapshot unexpected behaviour codesandbox demo reproducing demo expected behavior ideally component corresponding previous route must completely removed memory navigate new route must rule keeping optimizations versions react browser os affected issue work previous versions react react react reactrouterdom afaik expected component one level deep would retained next update would clear seeing deeper tree getting gc please make sure checking production version include exact steps diagnose gaearon investigated see screenshot would see route deep nested react components huge state go route test see heap snapshot root component nested child along state result route memory bloats gets garbage collected route debugging could see mentioned reconciliation gets gced creating next wip tree previous fibers used effects nexteffect firsteffect lasteffect wiped references get removed line reactfiberjs parent route component type ƒ route still keeps reference using lasteffect lasteffect reset fiber gets reused code pointed behaviour seems fiber node even though disconnected parent child alternate using detach fiber still references fibers using effects array also reproducible production version well detailed repro steps load sandbox navigate route take memory snapshot navigate route take memory snapshot route components still persist navigate route take memory snapshot route components still persist route gone wait seconds trigger state change automatically take memory snapshot route gced behaviour seems fiber node even though disconnected parent child alternate using detach fiber still references fibers using effects array think makes sense thanks explaining', 'date': '2018-09-20T16:21:44Z'}"
"26717",26716,"{'data': 'upgrade rollup working upgrading rollup test builds show decreasing size bundles also problems option deprecated critical building react checked issue tells totally fine couples circular dependency warnings also default exported warnings also check branch maybe help think make sense wip trysound see prs mistake need help happy help', 'date': '2018-09-20T13:14:41Z'}"
"26718",26717,"{'data': 'component inside handled string current behavior use reactintl translations project since release reactdom use anymore use snapshot tests nt fail use reacttestrenderer u look rendered html string rendered option tag expected behavior tests failing react component tag expected object object rendered inside option versions react browser os affected issue work previous versions react use createreactapp occurs test env react reactdom reacttestrenderer reactint please see react dom behavior intentional supported put custom components inside worked cases accident crashed others changed work consistently either use render prop right unfortunately reflect test renderer intentionally dom specific behavior catch problem something plan change needs remain agnostic use cases', 'date': '2018-09-20T08:13:49Z'}"
"26719",26718,"{'data': 'jsx whitespace consistent line starts expression want request feature report bug bug current behavior jsx content text line starts expression whitespace rules followed current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior whitespace jsx rules respected always versions react browser os affected issue work previous versions react working intended unfortunately way understand jsx specialcase adds space newline separating two literal texts universally want case otherwise obviously breaks output easy fix adjacent texts rarely want unintentional occurrences space always clearly visible simple work around believe following case hi andreas thanks clarifying gotcha close thursday september bst andreas svensson wrote working intended unfortunately way understand jsx specialcase adds space newline separating two literal texts universally want case otherwise obviously breaks output easy fix adjacent texts rarely want unintentional occurrences space always clearly visible simple work around believe following case', 'date': '2018-09-19T21:33:32Z'}"
"26720",26719,"{'data': 'schedule ssr windowaddeventlistener function want request feature report bug bug current behavior windowaddeventlistener function current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example build serverbundlejs ssr node usual try run node serverbundlejs see windowaddeventlistener function consolelog window line returns navigator server true expected behavior working usual versions react browser os affected issue work previous versions react react well worked fine yarn upgrade first since march guess hmm strange server environment defines fake global nt behave like real could possibly check checks kind arbitrary line get rid fake server environment gaearon wow bizzare legacy fun found globalwindow navigator server true serverjs entry file added works like guessing added bypass errors like one strange places consolelog globalwindow going undefined anyone wonder team seeing something similar react native seeing runtime crash nt dug metro internals see whether defined seems like likely cause problem due recent bump inspecting bundle see development version included addition nt umd wrapper odd trying track link files seems schedule renamed standalone package come rn would nt expect used moreover nt understand brings version run gt moreover nt understand brings version maybe installing newer version package like issue oh maybe well supported never gt standalone package come rn yeah think somehow getting dependency depends reactdom bad dependency tree part build tooling bit complicated try thanks issue caused reactdom latest version got issue fixed downgraded previous version yeah dependency added version need depend time would reasonable version pin running rn react got error windowaddeventlistener downgrading react reactdom resolved problem fix unblock rn', 'date': '2018-09-19T19:32:11Z'}"
"26721",26720,"{'data': 'react error looking schedule want request feature report bug bug current behavior installing seems throw error looking schedule nt exist current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example npm err code etarget npm err notarget matching version found schedule npm err notarget cases one dependencies requesting npm err notarget package version nt exist npm err notarget npm err notarget specified dependency react expected behavior react get installed versions react browser os affected issue work previous versions react react sure going maybe transient npm registry definitely published npm see also jsfiddle code sandbox linked work fine going assume npmcache hiccup appreciate looking yes think may caching issue within npm proxy sorry wasting time thanks think happened installing latest react sorry guys already know useless comment published minutes ago experiencing thing right exactly error text graydonhaskins suggest adding thumbsup post others googling way final edit issue referenced comment resolved release react edit workaround edit pin version affected react components via command line us following components required installed react seems work interim get issue scheduler worked well got problem scheduler still working got work command also require thanks updated reference packagejson point specific version dependencies react reactdom twiliojyoung worked experiencing issue using createreactapp experiencing issue installing react nt work also installed reactdom fyi nt install packagejson installed packagelockjson never seen ryan needed save though right ended working two steps first updated packagejson dependencies react reactdom ran npm install complained reacttestrenderer next install npm install saveexact reacttestrenderer ended letting npm install entire project afterwards hopefully helps mattmeyernyc use savetry deleting react want entire nodemodule dir well thanks shanno worked gt updated reference packagejson point specific version dependencies react reactdom worked folks trouble either edit packagejson manually use npm command otherwise autoupgrade broken version updated reference packagejson point specific version dependencies react reactdom one worked gt also installed reactdom fyi oh yes got reason latest react version working hmmmm super weird maybe tinkering code deleted whole thing file tried working running mattmeyernyc tried createreactapp yes used createreactapp worked yeah looks like fixed problem matching version found scheduler ran worked time edit module used reacttestrenderer explicitly declare module help npm install savedev reacttestrenderer confirm fixed also issue changing packagejson like following worked changing changing decided wait tried use createreactapp working confirmed works', 'date': '2018-09-19T19:14:59Z'}"
"26722",26721,"{'data': 'implement filereaderreadasarraybuffer want request feature report bug feature current behavior currently unimplemented expected behavior implemented versions react browser os affected issue work previous versions react versions react affected approved plan work towards implementing may need guidance along way first time using native code react using native ios code probably meant file repository generic parts web version oops right thanks gaearon', 'date': '2018-09-19T16:57:13Z'}"
"26723",26722,"{'data': 'unmountcomponentatnode works async want request feature report bug bug current behavior tried use manage multi roots found use sync code get error like change route pages use browserhistory change route code written componentdidmount method root react component use wrap result success expected behavior versions react browser os affected issue work previous versions react react reactdom please provide single runnable complete example reproduces issue example fiddle gaearon demo thanks gaearon nt use unmountcomponentatnode react root clear old component eventsdomsstate sub components self old component unmount automatically hello tried investigate example gave note first time checking reactdom source want try contribute react first want achieve need call plan renderrerender react component case rendering component gt rerender properly without unmount mount new component case rendering component gt properly unmount previous component render new one easily test behavior removing adding component check behavior correct however think code share work correctly investigation bug behavior first button click unmount something empty return false correct behavior doc component render correctly set correctly second button click unmount react component return true correct behavior doc component render component unmount set container bug next click error return false unmount correctly component root cause null guess root cause might come uncorrect order unmount mount wrap code async works order component unmount set component render reactrootcontainer correctly set used investigate let know needs fix investigation wrong send fix happy verify gaearon thank u yes right checked source code unmountcomponentatnode think works relates fiber demo works right react maybe new changed feature noticed little investigate think problem come behavior testing timeout working render believe somehow reschedule job rendering order might inverted still nt clue continue investigate making fix gaearon could reproduce unit test tried find correct way fix found multiple way really confident quality seems quite hacky pr feedback opinion make fix would appreciated', 'date': '2018-09-19T16:46:54Z'}"
"26724",26723,"{'data': 'global overwritten react development mode want request feature report bug report bug current behavior global overwritten react development mode minimal repro steps react dev mode click button see event type expected behavior current behavior contradicts specified behavior window property event returns event currently handled site code outside context event handler value always undefined moreover works properly production mode react prod mode returns expected event type versions react browser os affected issue work previous versions react works properly react prod mode react dev mode issue reproduced chrome works properly ff nt support however reproduced ff recently added see details seems issue introduced conradirwin seems like bug figure wrong could revert altogether although still get different event cases tried fix gt figure wrong according docs outside context event handler value always undefined sets value never resets back undefined always stores previous event want send pr reset long handle nesting correctly gaearon tried couple things nt think possible restore property correctly initially looks like assigned eg looks like would suggest using something fix eg roll back entirely sorry testing observed changes windowevent made within event handlers restored end event handler said ca nt reproduce must mistaken happy either exposing somewhere using property descriptor restore let property objectgetownpropertydescriptor window event property let windowevent windowevent function call windowevent windowevent dispatchevent property objectdefineproperty window event property conradirwin applied suggested fix project issue initially detected works fine also verified restored descriptor let know would like make pr delegate able get tomorrow want jump ahead please feel free conrad sent via superhuman wed sep pm sergei startsev lt notifications githubcom gt wrote conradirwin applied suggested fix project issue initially detected works fine also verified restored descriptor image let know would like make pr delegate receiving mentioned reply email directly view github mute thread conradirwin np changes look pretty straightforward', 'date': '2018-09-19T13:49:45Z'}"
"26725",26724,"{'data': 'error duplicate identifier librarymanagedattributes suddenly could nt build react project error seems appear many people failed compile c devprojectfrontendnodemodules typesproptypesnodemodules typesreactindexdts duplicate identifier librarymanagedattributes error command failed exit code looks like defined following files expected behavior error versions react browser os affected issue work previous versions react react relationship sounds like typescript definitions maintain typescript definitions react definitelytyped community perhaps would best place report actionable us files', 'date': '2018-09-19T08:29:33Z'}"
"26726",26725,"{'data': 'input render createprotal blur input want request feature report bug bug current behavior input render portal blur input current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example see types diff input expected behavior change value blur versions react browser os affected issue work previous versions react latest version work create new div every render including updates move portal works sorry link work edited mobile looks like codesandbox save changes cc compuives basically moved creation parent div constructor attaching document componentdidmount render would always render portal gaearon thanks fault', 'date': '2018-09-19T02:28:27Z'}"
"26727",26726,"{'data': 'prevent reactdomrender errors bubbling otherwise explicitly handled want request feature report bug bug ordinarily would probably considered feature request however stated purpose feature referenced violated certain environments current behavior react surfaces uncaught error render even using designed using trycatch around render described comment related code convenience provided developers using devtools debugging purposes however convenience provided development debugging changing behavior specs causing failures otherwise protected code paths goes statement comment description code error happens different event loop context interrupt normal program flow error occurs spec runner mocha fail test uncaught error continue next test advancing second render component complete call reactdomrender callback continues code alreadyfailed test subsequent test progress pollutes spec suite leads issues produced using production version react current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example relevant code content included codesandbox due use karmamocha tests must run locally inline comments add detail behavior expectations see tests pass switch test production file expected behavior typically devtools used different context running vs investigation lack precise terms option rather default using react nonproduction environment least environment spec runners conditionally sensitive global errors developers must option disable disallow behavior implemented time second perhaps intuitive option refer portion mentioned comment talking pause caught exceptions untintuitive though even though react caught error developer perspective error uncaught exception render captured using trycatch mentioned exception considered caught developer explicitly created error boundary around render case expected behavior would error surfaced globally developer debug exceptions within error boundary defined versions react browser os affected issue work previous versions react present nonproduction version react environments react feature behavior react issue prior react explicit trycatch handlers solely responsible error boundary render observed opposite large products people error boundaries place accidentally catching failing surface legitimate bugs tests certainly valuable tool removed outright retaining behavior permanent path specs eliminates option gracefully detect assert around render failures specs especially important nonsandboxed spec frameworks failures global scope disruptive flow specs often tricky debug jest jsdom eliminate form pollution choice two tools available every project allowing behavior option would ensure intended convenience remains benefit projects depending nonsandboxed spec frameworks hindered conflicts behavior introduce spec suite add error handler like probably seems hacky would also smother non renderrelated errors could relevant specs deliberate error handling could valuable addition reactdomrender api use determines whether render errors surfaced globally designated handler gaearon handler interfere error handling places issue states problem occur tests would expect test framework may use handler needs start malfunction mess want able throw things like network authentication errors anywhere tree catch boundary show error message instead handling errors every place occur application like would use network error occurs regular image somewhere show alternative content nothing happens gallery fatal error want handle differently image component throw error error boundaries great use case console sentry spammed errors though adding global error handler silence legitimate errors caught either surprising unintuitive behaved differently', 'date': '2018-09-18T17:48:47Z'}"
"26728",26727,"{'data': 'possible return dom elements ref callback hi guys wondering possible return dom elements ref callbacks codebase working currently need use refs parts find wrap components id divs get dom element ref required another library using openlayers would convenient dom elements returned callback unless ofcourse reason custom component object proxies callback case ca nt dom element attached proxy trivial change would willing given guidance course work proxy mean inner class component instance suggested solution inner component forward ref dom node desired wo nt wrapper middle thanks link gaearon something like yes work need use like described link thanks give go', 'date': '2018-09-18T14:07:21Z'}"
"26729",26728,"{'data': 'eventtargettext returns undefined react hello using react reactbootstrap select dropdown unable get selected text value eventtargettext says read text undefined code dropdown function testmefunction event gt let setvar eventtargettext thanks hey try keep react issue tracker specific react bugs features issue run reactbootstrap nt pass event object first argument dropdown onselect handler eventkey thanks jquense tried replacing event eventkey still working please recheck function suggest done wrong cause working fine react read reactbootstrap docs nt react issue onselect event nt browser one fired something picked dropdown hey read reactbootstrap docs passing itemindex previously eventkey param inside menuitem changed itemvalue works fine changed onselect onclick eventtargettext also works thanks suggestion', 'date': '2018-09-18T12:40:36Z'}"
"26730",26729,"{'data': 'childrenmap amp co traverse keyed fragments want request feature report bug report bug current behavior documentation reactchildrenmap tells us children keyed fragment array traversed function never passed container objects demo shows arrays indeed traversed keyed fragments traversed open developer console click run see output expected behavior childrenmap foreach toarray count traverse keyed fragments per documentation versions react browser os affected issue work previous versions react example runs also seen fail locally never tried know ever worked see fail latest firefox chrome ubuntu linux think test added also demonstrates bug failing nt think bug actually discussed times issues believe consensus intended fragments distinct elements vs array elements jquense bug documentation sounds like let wait core team member confirm way automatically flatten among children much desired feature anyway would happy see code work currently specified documentation gt nt think bug actually discussed times issues believe consensus intended fragments distinct elements vs array elements yes intentional traverse update docs apologies confusion searching found comment dan abramov think changing behavior might reasonable interpret implementation particularly intentional proposes submit rfc changes find moment try create one rfc flatten fragments gt interpret implementation particularly intentional maybe although worth talked confirm intentional earlier yesterday brian reactchildrenmap treat fragment single child docs worded bit ambiguously dan yeah intentional brian cool wanted confirm update docs said rfc sounds like right way go', 'date': '2018-09-18T12:20:48Z'}"
"26731",26730,"{'data': 'ios safari react dom attempting configurable attribute unconfigurable property want request feature report bug report bug current behavior page crashes current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example ca nt load fiddle pages ios basic react app demonstrate issue expected behavior app load versions react browser os affected issue work previous versions react hey hard time reproducing issue use new codesandbox project indeed work ios due code codesandbox inserting react working expected ios matter use production development build react deployed internal testing application try suggest try find code interfering removing everything react specific application closing ticket ios clearly working latest react version feel free follow reproduction case isolated enough', 'date': '2018-09-18T05:32:59Z'}"
"26732",26731,"{'data': 'possible use profiler server side trying use profiler server side rendering onrender callbacks getting called way using nodeenv development code looks like works fine client side javascript import react unstableprofiler react const profilercallback id phase actualtime basetime starttime committime gt consolelog consolelog consolelog consolelog consolelog const mycomponent gt onrenderprofiler implemented noop server renderer wo nt break app wo nt collect log metrics either nt feel strongly either way offering additional context bvaughn thanks info also thanks working profiler helped us much find components slowing rendering us server side render speed much important client side right tracking entire rendertostring call using node perfhooks would really nice able use profiler node track performance granularly would happy try work someone could point right direction plan feature', 'date': '2018-09-17T17:32:15Z'}"
"26733",26732,"{'data': 'jsx attributes must assigned nonempty expression want request feature report bug honestly nt know current behavior jsx attributes must assigned nonempty expression reason jsx transpiled js function meaning gets converted empty expression made would converted result invalid javascript see info tryingtoimprove right must assign nonempty expression nt include valid definitions javascript props passed without props using first expression better use proptypes default props cheers thanks everyone helping ihaddream going close like keep issue board focused bugsimprovements react however please checkout support page discussion boards sources get help great day gt reason jsx transpiled js function meaning gets converted empty expression made would converted result invalid javascript see info thank', 'date': '2018-09-17T08:18:26Z'}"
"26734",26733,"{'data': 'want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react', 'date': '2018-09-16T11:10:23Z'}"
"26735",26734,"{'data': 'possible react skip dom nodes hydrate different server render server component example server render props available client frontend rehydrate app updates dom node thispropsserverdata empty make react touch dom nodes created server hydrate parts tree kind behaviour possible example something like', 'date': '2018-09-15T19:27:11Z'}"
"26736",26735,"{'data': 'edit oauth configuration inside quip help helpful us would like ask one question working integration quip doc app inside authorization url also want add question mark please tell way helps add inside configuration quip example authorization url wwwquipcomauthorization want hit authorization url wwwquipcomauthorization typeuseragent send error please tell add typeuseragent using coding helpful us regards vaishali hey issue tracker react repo unrelated quip try quip support resources looks like might helpful using react please check community support resources', 'date': '2018-09-15T01:22:48Z'}"
"26737",26736,"{'data': 'update existing state transition exception caught componentdidcatch want request feature report bug bug current behavior working right mistake code could rerender inner query time outer query integration test see react error console perfectly makes sense problem expect caught toplevel boundary component componentdidcatch nt get executed case result hangs bitbucket pipelines stop build pr hours inactivity expected behavior guess componentdidcatch could caught exception versions react browser os affected issue work previous versions react using react maybe could sure right kind treated fatal error otherwise might difficult ensure get terminal state hand could keep unwinding boundary boundary happens like normally way developers catch kind exception right unwinding boundary boundary sure means tbh oh sorry thinking completely different error one nt error warning therefore ca nt catch never thrown technically something overriding adding custom logic tests', 'date': '2018-09-14T22:24:28Z'}"
"26738",26737,"{'data': 'root element noop blocking gsap draggable want request feature report bug honestly nt know current behavior moderator greensock forums recent update causing issues draggable tool default draggable tool ignores clicks specific elements default draggable elements unless specify element draggable starting version function passed event root element react app preventing simple tag used draggable tool current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react blue square draggabl rotate either uncomment line change react reactdom versions expected behavior nt necessary add indication make element draggable work default regular application web page versions react browser os affected issue work previous versions react react chrome firefox edge windows also users tested chrome firefox osx nt know specific versions reason work around issue ios safari say breakage unfortunate react root generally expected react control handlers attach implementation detail fact future plan move event handlers root instead document even fixed could break later nt necessary add indication make element draggable work default regular application web page understand correctly decision use heuristic whether explicit click handler gsap common convention therefore sure see nt necessary looks like overly broad heuristic clashing implementation detail know would sufficient change get around heuristic think could seems bit fragile fixed would expose flaw heuristic consider property event listeners maybe heuristic would better change hope makes sense let know misunderstood hi dan thanks detailed fast response fact normal behaviour using gsap draggable elements buttons tags inputs select textareas keep default functionality clicked unless indicated user hijack passing boolean mentioned sandbox sample heuristic mention also normal behaviour tag nt need heuristic work hand discussion forums jack doyle creator gsap mentions user wants make form element button tag draggable intention clear matter heuristic kind redundant considering popularity react decision starting next release gsap boolean true default order avoid unexpected behaviour linked issue forums gsap users wants chime come add opinion matter appreciate keep open best rodrigo thank sure keep open sorry inconveniencing hi gaearon thanks addressing think best way move forward us change default behavior draggable dragclickables true way nt need anything react people want disallow dragging clickable elements set dragclickables false answer question yes resolve things switched declaring onclick addeventlistener click totally see point fragility hence recommendation switch behavior end side us course change could break legacy code doubt widespread problem easy fix setting dragclickables false plan making change next gsap release thanks consideration thanks rhernandog reporting think ended changing back except portal roots kept targeted fix probably fixed anyway', 'date': '2018-09-14T19:46:30Z'}"
"26739",26738,"{'data': 'react causes jest unit tests fail using jest enzyme unit tests project working recently upgrading caused errors appear almost unit tests error occurs use enzyme unit test mount component given example code however since upgrading always fails following error since downgraded react since causing issues think looked thanks want put together reproducable example error nt descriptive actual problem happening nt upgraded version compatible react result getting multiple instances reactreactdom bundle confusing react', 'date': '2018-09-14T16:34:59Z'}"
"33063",33062,"{'data': 'weird input behavior version reproduction link steps reproduce try writing letters try pressing space multiple times see dot input also use space bar personal project doesnt anything expected normal input behavior actually happening dot appearing believe mac os double tap space bar textsentence adds period smart phones never realized macos also try thing input text field behave spacebar issue please elaborate snippet code would super helpful tried one dots add text spaces able lt dot added double spacebar sorry right still need found spacebar working sometimes separate case good yea nt know would happening able replicate im sure debug', 'date': '2018-11-15T00:01:47Z'}"
"33064",33063,"{'data': 'console print vue warn error nexttick error invalid argument console print vue warn error nexttick error invalid argument work well chrome hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-11-14T11:51:23Z'}"
"33065",33064,"{'data': 'undiefind 搞笑的东西 大哥 你们是不是换了 router 文档没更新啊 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 或 不会是如你所预期的 vue 或 笑出声 gt 或 不会是如你所预期的 vue 或 react 用户 转过来 我都写 gt 写习惯了 gt 或 不会是如你所预期的 vue 或 haiyo还有如果不支持 为什么 layout 里面data gt 的东西 铁憨憨一个 rainbowmorelhahahah 你可以在 data 里面也用一下 文档', 'date': '2018-11-14T09:10:26Z'}"
"33066",33065,"{'data': 'problem feature solve proposed api look like duplicate', 'date': '2018-11-14T08:18:28Z'}"
"33067",33066,"{'data': 'conditionally response value change want response change pixijs object complex object property lead cpu hight hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-11-14T05:51:52Z'}"
"33068",33067,"{'data': 'iframes reloaded vue app mounted version reproduction link steps reproduce insert iframe somewhere within div vue app expected iframe url load actually happening loads normally another time vue app loads filter network requests see action images seem act expected way src load twice example given normal vue parsing template replacing content ok string templates wrapping component config set nt touch iframe', 'date': '2018-11-14T01:33:44Z'}"
"33069",33068,"{'data': 'transition inside transition group working version reproduction link steps reproduce press add notification button several times expected new notification slides vmove slides right left venteractive actually happening new notification slides vmove use nested transition thanks posva could give explanation working nt search appear docs wed nov andrei andreev notifications githubcom wrote thanks posva could give explanation appear working enter nt receiving mentioned reply email directly view github mute thread gt eduardo san martin morote', 'date': '2018-11-13T18:46:06Z'}"
"33070",33069,"{'data': 'extra css single css file css file child component css declaration front parent fixed hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-11-13T08:08:45Z'}"
"33071",33070,"{'data': 'unable bulid project development mode trying build project development mode got error help fix issue error uglifyjs invalid assignment hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-11-13T06:04:09Z'}"
"33072",33071,"{'data': 'invalid html reported vue version reproduction link steps reproduce write add wrong html markup slots expected got readble error explanations actually happening got unreadble errors vue chat newbie write problem slots notice wrong html markup div p think vue must die unreadble errors got wrong html markup slot imagine add every html rule html parser scenario would require handled template compiler display error terminal actually compile time thing generate wrongly structured vdom nodes runtime gon na warn would quite expensive check vdom structure upon update think something nice think possible make userland plugins perform runtime validation leveraging tools like ecomfehtmlnestrule hook posva notice react handle errors like ca nt okay', 'date': '2018-11-12T18:27:38Z'}"
"33073",33072,"{'data': 'object values option elements stringified using slots version reproduction link steps reproduce create component slot select options passed use objects options need objects applied values although believe stringify value matter passed expected making custom select element using component select slot options work objects instead providing string value object object change actually happening options passed component via slot appear get converted string passed slot example js fiddle shows behaviour normal select control custom select control described options passed select slot see select box behaves fine custom component always produces object object value emitting value event instead value hold posva confirmed working thank', 'date': '2018-11-12T13:47:52Z'}"
"33074",33073,"{'data': 'send forms post version reproduction link steps reproduce choose different values selects send form expected sent data server actually happening use form without vue js cycles data sent server send request regular form please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug', 'date': '2018-11-12T11:28:33Z'}"
"33075",33074,"{'data': '有支持手机和pc共用的ui库吗 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-11-12T08:55:19Z'}"
"33076",33075,"{'data': 'unexpected component destroyed trigger sibling component version reproduction link steps reproduce open console click toggle bottom expected weird component two vif destroy mount actually happening acomponent destroyed unexpected bcomponent keep added class addition find div cause issue added class change tag button wo nt destroy div reused vue create top div get around adding div wrapping component top div posva thanks lot workaround works helps prevent bug project', 'date': '2018-11-12T05:03:27Z'}"
"33077",33076,"{'data': '好像没有 ng 的做得好吧 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 提示您在模板或渲染函数中使用了未定义的 vue ng', 'date': '2018-11-11T14:00:03Z'}"
"33078",33077,"{'data': 'component name css selector problem feature solve single file components styles section possibly allow selectors name components used right need style component must assigned class may used elsewhere along css scoping see powerful solution writing styles nested components proposed api look like suggesting html mycomponent backgroundcolor red really sure loader would convert plain css using standard selectors thinking let reinvent wheel use css class', 'date': '2018-11-10T20:51:26Z'}"
"33079",33078,"{'data': 'scoped styles nt work correctly transitiongroup version reproduction link steps reproduce check link see expected must transition using scoped style using scoped slots actually happening nt transition slot based working expected elements passed via slots get affected scoped css child otherwise would problematic either make animation non scoped use deep selector vueloader docs', 'date': '2018-11-10T15:46:36Z'}"
"33080",33079,"{'data': 'slow template compilation dev mode normal version reproduction link steps reproduce dev mode webpack edit component let recompiled comment html blocks incrementally uncomment watch compile time component grow milliseconds seconds expected fairly quick actually happening component takes around seconds compile component fairly reasonable amount html yet compilation time grows quite bit html elements added components around compile one takes seconds every change makes extremely annoying work behaviour normal take measures improve compilation time additionally discovered deeper nest html elements longer takes compile example compiling component takes around seconds able reproduce behaviour using latest vuecli bootstrapped app compile time grows must something either vue loader webpack directly needs investigated recall correctly cache template compilation vue btw closing related directly vue posva well bootstrapped app using vue cli got results think worth raising cli repo think worth investigating see comes vue loader webpack config used cli webpack problem pointed right place posva seems like like said issue comes using library dev mode issue prettierprettier thanks', 'date': '2018-11-09T12:21:10Z'}"
"33081",33080,"{'data': 'typeerror convert symbol value string using proxy version reproduction link steps reproduce click reproduction link check console panel expected get correct value actually happening throw error convert symbol value string nothing vue second argument handlerget string simple concat string using even creating empty literal unrelated vue justineo thx much btw fine nt work could u pls detail reason', 'date': '2018-11-09T09:41:49Z'}"
"33082",33081,"{'data': 'within scope slot displaying child elements version edge reproduction link steps reproduce see fiddle change tag hello render scoped slot expected hello rendered template tag actually happening hello rendered could nt find documentation supporting behavior also seen lot tutorials showing templates used scope slots please check console using returning multiple nodes either use functional component wrap rendered use children returned returns array use node returned makes return single use component nt rendering correctly nt single root node wrap scoped slot single node try return first child scoped slot returns array', 'date': '2018-11-09T08:41:44Z'}"
"33083",33082,"{'data': 'unexpected update appvue caused calling computed mounted version reproduction link steps reproduce try click parent button update parent component data nt understand causes app update remove line consolelog thischildname wo nt happened expected expected updating parent component child component data updated parent actually happening app updated caused child component console logging computed data found problem thischildprop anything affects variable trigger updated define variable containing value childprop data line solve problem thanks tdskyz hmm still make sense calling computed function cause app updated', 'date': '2018-11-09T05:08:47Z'}"
"33084",33083,"{'data': 'upgrading vue project typescript project uses vueclasscomponent vue updating npm dependencies get following error error myprojectnodemodulesvueclasscomponentlibdeclarationsdts error vue refers type used namespace hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 please consider using forum discord server stackoverflow questions first feel free come back open issue turns bug', 'date': '2018-11-08T13:14:01Z'}"
"33085",33084,"{'data': 'upgrading vue project typescript project uses vueclasscomponent vue updating npm dependencies get following error code import vue vue export declare type vueclass new vue amp typeof vue export declare type decoratedclass vueclass amp decorators options vuecomponentoptions gt void error error myprojectnodemodulesvueclasscomponentlibdeclarationsdts error vue refers type used namespace hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-11-08T13:08:12Z'}"
"33086",33085,"{'data': 'vue extends 问题 parent 添加 export default child 调用 import parent parent export default extends parent hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-11-08T09:26:48Z'}"
"33087",33086,"{'data': 'first character paste accepted watch assigning placeholder tag version reproduction link steps reproduce doctype html document click key one character paste word click search button get alert true remove placeholder attr get false expected alert false actually happening alert true codeio supported please manually type code reproduct issue seem related justineo thanks new release fix bug nt got time look yet ca nt guarantee anything right related', 'date': '2018-11-08T04:44:05Z'}"
"33088",33087,"{'data': 'prop didt produce right value version reproduction link steps reproduce see demo simple expected first prop val empty string actually happening first prop val true create checkboxlike component props value accept boolean string type empty string assign value actual value true weird declared prop type vue would try figure treated boolean value first boolean props long exists regarded truthy declare type want regard value string first nt make sense order props type affect result props accept string assign string string confusing anyway official docs nt mention implementation depending order array intentional feel still confusing welcome file issue make pull request documentation repo vuejsvuejsorg thanks see linked issues', 'date': '2018-11-08T03:49:03Z'}"
"33089",33088,"{'data': 'conditional template rendering slot name version reproduction link steps reproduce create component named slot exposing boolean flag scope consume component two templates inside vif using exposed boolean flag last template written order code rendered expected templates using slot name render vif evaluates true actually happening last template written code order rendered template slot name render even vif permits workaround currently using change slot name based flag quick look see binding value prop attribute child component data attribute parent understanding slotscope needed trying use data attribute child component parent passing scope case already data attribute accessible parent could something like', 'date': '2018-11-07T16:14:30Z'}"
"33090",33089,"{'data': 'add flag lifecycle method problem feature solve sometimes vue reuses component happens created mounted called updated case data change props end create common method calling make sure logic executed would like force called first render code dry suggestion would follow semantics using immediate flag proposed api look like also put code method call method', 'date': '2018-11-07T13:56:37Z'}"
"33091",33090,"{'data': 'throw error using interpolation instead js expression slot names problem feature solve demo opening console running throws error also throw exact issue attribute proposed api look like na thanks proposal warning meant people coming allowed personally nt think worth adding warnings regarding rarely help user well old references still exist obvious new users surely confused', 'date': '2018-11-07T10:48:56Z'}"
"33092",33091,"{'data': 'missing content passed dynamic list slots version reproduction link steps reproduce na expected elements contain respectively texts actually happening mentioned elements empty angcosmin said need use binding syntax nt throw error like attribute example used support interpolating attributes syntax detected inside attribute assume user might migrating never supported js expressions inside attribute without binding syntax gon na warned misunderstood example linked first post instead trying say vue throw code like see think could enhanced open new issue track change could reopen use one new feature request would fine', 'date': '2018-11-07T07:46:16Z'}"
"33093",33092,"{'data': 'using conditional vmodel getting error use operator search null version reproduction link steps reproduce open fiddle open dev console check checkbox form type anything mailing zipcode text field notice error console expected error actually happening error console use operator search zipcode null notice using conditional vmodel expression allowed says yes look screenshot sources tab dev console looks like compiled conditional javascript exactly right first argument always case never thanks never done would nt say officially supported official docs code using approach least instead use computed property setter yea used computed solution trying extra lazy time thanks linusborg', 'date': '2018-11-06T22:17:29Z'}"
"33094",33093,"{'data': 'item added wrong position transition group version reproduction link steps reproduce click button jsfiddle expected new item added left middle item since list sorted numerically actually happening new item added right middle item bug longer list nothing numeric order already become vue patching strategy ok understand since temporarily items dom way influence order maybe apply extra styles transition elements fixedwidth', 'date': '2018-11-06T17:37:48Z'}"
"33095",33094,"{'data': 'vnode reference original component reopened problem feature solve lots ads site hydrate ssr page vue completely ads would break vue also site ist static would stupid ship entire app parts page interactive instead partially hydrate page plugin need map ssr html corresponding vue components need put html match use setting component component like html would read html work party components anything get without id hydrate would great could find component component instance vnode property server client different number oder components client server use similiar issue one members suggested create new issue old one would show pile issues proposed api look like hi lukas nice idea going moisturizer plugin unfortunately think proposal nt really feasable reasoning simple id would generated build time actually know file paths nodejs runtime even possible would job vueloader additional loader vuecore party components regularly come bundled one file eg party lib exports bunch components possibly would end duplicate values means even make work still end able identify party components reliably soon one comes bundled single file alternative approaches thought defining name party components use since code seems indicate know control collection components intend moisturize way seems like viable path take nothing wrong javascript import thirdpartycollection export default name yourdesiredname even yourdesiredname export default example expects defined options object similar thing could done component distributed constructor already extending thought could even use something property set custom options options object could add every component want means leave name untouched ah ok understand done filename path could attach names component manually would probably work thank also means overhead developer particularly loading svgs quite annoying give name svg still fallbackscenario us currently seeing ways fingerprint components like think see attributes used fingerprint component bonus question functional components render function compiled components render function get render function component compiled yet compile get render function bonus question found debugger seems like mal op components ssr module knows made use', 'date': '2018-11-06T16:44:56Z'}"
"33096",33095,"{'data': 'allow mixed props array problem feature solve let say developer component already props defined array strings totally fine developer hisher team leave one day new prop added type default value defined currently developer rewrite existing array props object adding new prop default value would like propose using mixed array strings object detailed props already tested code works fine proposed api look like vuejs repo file vuesrccoreutiloptionsjs normalizeprops function slightly modified javascript function normalizeprops options object vm component const props optionsprops props return const res let val name arrayisarray props propslength else isplainobject props const key props val props key name camelize key res name isplainobject val val type val else processenvnodeenv production warn vm optionsprops res use syntax would gladly create plugin nt think possible redeclare private vue function achieved global mixin rewrites props property hook since api freeze really uncommon recommended object syntax better let keep userland achievable via plugin', 'date': '2018-11-06T15:25:26Z'}"
"33097",33096,"{'data': 'much recursion provided mixins version reproduction link steps reproduce component mixins component provided implemented uses mixins another component getting error expected getting provided eventbus errors recursions actually happening much recursions alert problem mergedata components using provided inside main component error alert code nt seem output error thing problem could come vuepropertydecorator since heavily using looks like pr fixes problem nt please provide repro without vuepropertydecorator open issue', 'date': '2018-11-06T12:17:27Z'}"
"33098",33097,"{'data': 'unable bind object props passed parent child properties getting following response axios request want pass data props id title required qualification experience company jobsnepalcom description asdfdf asasdfdf ajksdf jbasdfa asdf resumeid parent component code pass data child components props data data return experience thisdata joinmonth moment thisdatafrom endmonth moment thisdatato access data joinmonth endmonth experience sure component loaded data fetched network though code complete hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-11-06T11:00:17Z'}"
"33099",33098,"{'data': 'slot slotscope accessed via slots version reproduction link steps reproduce create component slot export default name testcomponent created consolelog slotsdefault use two slot components one attribute one found access second vnode removed attribute first element shows expected sure whether limitation methods get slot vnode actually happening access slot scoped slots exposed via justineo yes see looks like access scoped slot passing scoped props okay found also passed empty object props since going render vnode decent way describe actual use case passed props parent slot called parent component async tasks tasks done would like trigger slot component event handle result would like get slot vnode tasks done parent component provide callback function current context need touch child component yes good alternative already try trying provide straightforward api thanks lot', 'date': '2018-11-06T10:26:18Z'}"
"33100",33099,"{'data': 'svg component rendered ie version reproduction link steps reproduce open minimal reproduction link ie expected component works chrome edge ie actually happening error nexttick typeerror unable set property overflow undefined null reference ie nt support svg element nt see vue could anything', 'date': '2018-11-05T13:27:48Z'}"
"33101",33100,"{'data': 'next vuenext submitting code inreal time problem feature solve next vuenext submitting code inreal time proposed api look like next vuenext submitting code inreal time nt understand question guess asking commits related oh thanks makes sense still prototyping stage everyone join would create much confusion share full code alongside detailed rfcs feel reached something worth discussing flesh details necessary changes rfc feedback stage people start sending prs good chance outdated tomorrow right change things round practically daily basis people would hard time following discussing changes effectively linusborg jacekkarczmarczyk thanks', 'date': '2018-11-05T12:38:11Z'}"
"33102",33101,"{'data': 'render function input removes reactivity version reproduction link steps reproduce create vue component js file render function simply input value expected input stay reactive data matter manually edited actually happening input loses reactivity manually edited extra info using set attribute soon edit content input attribute value still updated dom check console attribute longer relevant displayed spec attribute initial value soon user changes longer relevant even updater later render function generated template vue nt use uses looks something like nt change attribute changing dom change property wiht javascript vanilla javascript difference two concepts looks like javascript const el documentqueryselector yourelement changing attribute effect user changes input elsetattribute value new value changing dom property overwrite changes user elvalue new value', 'date': '2018-11-05T07:50:51Z'}"
"33103",33102,"{'data': 'computed最终值没有改变的情况下组件重新渲染了 version reproduction link steps reproduce 打开chrome dev tool 点击页面的add按钮 控制台会打印三个updated expected 最终值没有改变的情况下组件不需要重新渲染 actually happening 最终值没有改变的情况下组件重新渲染了 duplicate see also amp', 'date': '2018-11-05T03:36:33Z'}"
"33104",33103,"{'data': 'keyboard event modifiers alert event handler fire twice user using ime ie version reproduction link steps reproduce use ime type letters press enter keyboard expected event handler run alert window show actually happening event handler run twice alert window show twice ie version keyboard event modifiers alert also windowopen handler fire twice user using ime guess interrupting javascript execution cause problem maybe system browser bug sure caused vue fiddle without vue shows result', 'date': '2018-11-04T11:36:47Z'}"
"33105",33104,"{'data': 'hidingunhidding jquery datatables breaks column widths version reproduction link steps reproduce create page multiple jquery datatables hiddenshown via vshow vue data variable initially shown datatable looks fine switch second table showing column formats wrong change back originally working table column widths broken well columnsadjust draw appear fix know jquery plugins dicey best datatables work done postrendering page nt know vuejs would prevent working expected table column widths preserved actually happening columns widths unhidden table widths try force layout recalculation plugin something like mentioned container attached dom may want put', 'date': '2018-11-04T05:45:55Z'}"
"33106",33105,"{'data': 'multiple type prop null version reproduction link steps reproduce docs says basic type check matches type use multiple type prop like propb string number throws error expected number string got null expected accept null value hi hard time trying reproduce issue errors console codesandbox everything working expected meaning set null specifying error thrown throw expected error add prop definition expect help hi also could reproduce error error disappeared restarting serving reported hope miss something check write occurs thank', 'date': '2018-11-03T22:04:27Z'}"
"33107",33106,"{'data': 'child component property fully reactive version reproduction link steps reproduce click add select image file local machine selection thumbnail property appear nt issue arise using child component see codesandbox expected property exist child component mount actually happening exist somehow details could check stackoverflow question codesandboxes vue version reduce boilerplate reproduction ie drop quasar dependencies etc least make clear code parts problem quite difficult find part actually mean surrounding code added comments front make clear musicformellons answered quasar forums metalsadman thanks found answer codesandbox added mount child shows indeed mount initial render child reactive ie come picture show like one component solution btw parent reassign reactive props child child component use instead etc things work expected see needed closing boiled repro frameworks provided', 'date': '2018-11-03T20:53:10Z'}"
"33108",33107,"{'data': 'missing space html elements version reproduction link steps reproduce run app navigate page expected space tags file actually happening mentioned space missing rendered browser whitespace characters html tags removed option vueloader set default vuecli order enable option modify webpack config using either vueconfigjs first one simpler imho actually need sqal said thank', 'date': '2018-11-03T12:35:43Z'}"
"33109",33108,"{'data': 'next generation vue submitting code real time hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-11-03T02:30:57Z'}"
"33110",33109,"{'data': 'keepalive longer caches component calling destroy version reproduction link steps reproduce viewing component base counter shows many times created lifecycle hook called click next go component confirm click yes go back base also destroying created calls counter increased expected click next go back component confirm press though see created counter increased keep pressing next see created calls counter keeps increasing even though nt destroying expected manually destroying component base reacreated cached keepalive actually happening manually destroying component base keepalive creates another instance longer caches recreating new instance every time shown run bug using vue router fiddled around noticed keepalive pretty sure nt fact destroy called showing component project component destroyed recreated another components shown issue remains nt call manually general keepalive call actually destroy component however use let actually handle recreation wanted achieve posva want base destroyed press yes next time get clean instance issue new instance nt cached anymore', 'date': '2018-11-03T01:21:37Z'}"
"33111",33110,"{'data': 'vbind style backgroundimage working cli backgroundimage ever going get fixed vuejs hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-11-03T00:56:37Z'}"
"33112",33111,"{'data': 'write vuejs version reproduction link steps reproduce look answer question write vuejs go website see expected one answer actually happening two possible answers hi usual issue since bug anything created repository know write things wanted add vuejs went website seen one use thank fine use vuejs nonfrontendspecific context frontend specific context using vue fine', 'date': '2018-11-02T13:57:29Z'}"
"33113",33112,"{'data': 'problem feature solve vjsxxxx 的标签 proposed api look like mixing two syntax one template causes chaos think wo nt put efforts feature requests require proposed api', 'date': '2018-11-02T03:17:17Z'}"
"33114",33113,"{'data': 'vjsx hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-11-02T03:13:23Z'}"
"33115",33114,"{'data': '请问template和jsx能不能混写在一个template里 代表了是jsx组件 vjsx hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-11-02T03:10:14Z'}"
"33116",33115,"{'data': 'compiler like sveltejs stenciljs problem feature solve framework expert supposedly using compiler removes app framework final app lighter faster especially great mobile users also stenciljs claims framework produces standardsbased web components make components framework components compatible framework apparently using compiler also allows add feature framework without adding extra bloat framework like vue design ideas either svelte stencil think using compiler would really awesome vue might helpfult links find proposed api look like nt api proposals would love help project like would nt even know begin way contribute please let know closely watching exciting work happening area talking people work ideas see draw inspiration vue however considering currently planning vue nt think compiling away vue core something see feasable desirable point sounds good found roadmap check periodically get updated latest plans thank linusborg', 'date': '2018-11-01T18:51:59Z'}"
"33117",33116,"{'data': 'ssr error style injection cached components version reproduction link steps reproduce open refresh page error also reproducible development mode expected app render properly rendered refreshing page actually happening remove cached component try app renders properly originally thought nuxt related issue nuxtnuxtjs forgot issue since ditched component caching able find time reproduce plain vue thanks reporting look soon', 'date': '2018-11-01T14:25:37Z'}"
"33118",33117,"{'data': 'cache problem hello developing vuejs based application huge caching problem team members constantly updating site getting feedbacks solved problems typos miss placed elements personnaly tried inspect situation found chrome reads files disk cache memory cache page refreshed even though sometimes chrome still loads old page entering site refreshing process ctrl shift r created website iis local machine windows published project tried reaching local ip adress network tab see js css files downloaded restart browser tried time files served disk cache tried couple times sometimes files served cache sometimes downloaded tried add serviceworker got empty handed also created base project test vuejs features added serviceworker code project cached servers windows server iis possible want nocaching approach want manage cached help would appreciated checkout base project vuebase project hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-11-01T12:06:20Z'}"
"33119",33118,"{'data': 'version reproduction link steps reproduce expected 翻译成中文后数据更新的时候更新视图 actually happening vue pengfei yang notifications githubcom vue receiving authored thread reply email directly view github mute thread vuejs 应用并不保证能在 google', 'date': '2018-10-31T09:41:20Z'}"
"33120",33119,"{'data': 'computed 是怎么工作的 version reproduction link steps reproduce 修改第一个文本框中的数值 第二个和第三个文本框会跟随着变化 修改第二个和第三个文本框的数值 第一个文本框不会跟着变化 expected 修改第二个和第三个文本框的数值 第一个文本框跟着变化 actually happening 修改第二个和第三个文本框的数值 第一个文本框不会跟着变化 当我使用 vuedevtools 选中自定义组件 comp 的时候 computed 开始正常工作 used vuedevtools select comp computed worked 不要在 computed getter 中 emit 仅接受 bug 或者 discord 聊天室 justineo 除了第一次操作有问题外 后面都能正常工作 本来以为是框架的问题 既然不能这么写 那我试一下其他方式好了', 'date': '2018-10-31T09:04:31Z'}"
"33121",33120,"{'data': 'ca nt use arguments native event handlers version reproduction link steps reproduce open sandbox watch browser page navigated without action hit back button observe console gives error expected wait user interacts clicks button navigate page actually happening user navigated without action user forces go back tot previous page console error thrown discovered bug creating navigation bar wanted logo link home page using vuerouter programmatic navigation one solution works wrapping event handler function one following methods function navigation ca nt understand works ideal since need one method link abstracting also produces error original sandbox ie methods function page routerpush page accept function calling directly inside render function make app redirect every time rendered', 'date': '2018-10-30T23:07:18Z'}"
"33122",33121,"{'data': 'vue addeventlistener using onclick function add event listenner parent class click trigger immediately function stcontainer parent class cover button function fire immediately try hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-30T11:44:15Z'}"
"33123",33122,"{'data': 'test issue delete later simonmysun hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 please use repo tests', 'date': '2018-10-30T06:45:32Z'}"
"33124",33123,"{'data': 'nonredundant way importing component problem feature solve currently importing component somewhat verbose redundancy ways shorter api would reduce lot lines codebase see dicussion proposed api look like vuecomponent commonsomecomponentvue might need modification within vueloader support special statement subjective matter people prefer explicit said something could handled custom webpack loader feel free post loader write', 'date': '2018-10-29T18:18:51Z'}"
"33125",33124,"{'data': 'fire keyboard event key modifier using ime changed version version reproduction link steps reproduce use ime type letters input keydowndown press arrow keyboard expected event fired version actually happening event fired version fired version user ended composition compositionend event ime version keyboard events modifiers eg keydown enter keydown fired version keyboard arrow keys usually used choose right word change result lot extra events investigation think might caused composition keyboard events always first key triggers composition points actual pressed key commit always checked first handler wo nt triggered check first leads issue sure intended behavior familiar background change maybe discussed second thought think current behavior reasonable accurate use events check keydown event happens composition seems reason revert justineo found another issue alert windowopen handler event fire twice ie changed code reproduction link open new issue yes please open new issue', 'date': '2018-10-29T07:00:46Z'}"
"33126",33125,"{'data': 'inline statement event handler return problem feature solve see generated code return normal syntax method name return think consistent may better use case child component may want manually call event handler get result proposed api look like added api get return values events would work way multiple handlers attach single event sirlancelot right use sirlancelot maybe return result array multiple handlers anyway another duplicate', 'date': '2018-10-28T04:24:01Z'}"
"33127",33126,"{'data': 'arrow functions appropriate problem feature solve moving vuejs towards incremental progress javascript open feedback worthwhile improvement suppose primarily thinking along lines people choose read vue source code think deliberate use arrow functions sometimes make intentionslimitation keyword explicit case case basic thank time advance thank making excellent framework proposed api look like breaking changes changing vue core library use arrow functions appropriate thanks concern yes try use fat arrows improve upon readability find places readability could improved using fat arrow feel free submit pr', 'date': '2018-10-27T10:10:10Z'}"
"33128",33127,"{'data': 'event handling keyboard events listener works expected version reproduction link steps reproduce open jsfiddle click arrowleft arrowright expected counter decreaseincrease actually happening counter stays click buttons one stays press arrows everything ok event handlers work click somewhere else event handlers nt work tried attach listeners places template nt help tried use keys eg bug tried use another event eg bug somebody know working way keyboard events work keyboard events works focusable elements contain current focused element focusable default see tabindex', 'date': '2018-10-26T23:16:31Z'}"
"33129",33128,"{'data': 'allow vue templates ssr usage version reproduction link steps reproduce opening issue follow nt think solution provided suitable usecases fairly simple ui everything relatively positioned flows downward would likely fine include outside context vue application would render correctly entire app however plenty ui may desirable feasible include outside vue application context display properly linked codepen shows simple fixedheader layout including tag outside vue application context results tag hidden behind fixed header reality intended rendered inside main body content thus fixed header outside vue context also unintended effect pushing main content proper margintop account staticheight fixed header per mdn flow content perfectly viable exist outside perfectly valid nest inside dom div allow flow content children please reconsider decision permit tags vue templates expected elements render properly vue templates actually happening elements render properly vue templates cause hydration issues ssr workaround currently following feels quite hackish export default created thisnoscripthtml nt know think nt make sense disabled javascript browser vue apps javascript javascript disabled vue templates nt works needs stay vue vanilla html sorry super clear description linkedclosed issue specific using ssr vue case javascript disabled still ssr perfectly valid page problem include tags browser nt javascript enabled vue inability render client side breaks browsers javascript enabled insofar hydration fails full rerender performed ok even ssr vue components place want prevent errors browser javascript disabled write global want show user friendly content put redirect head static vanilla html page makes sense disagree code pen showing fixed header ux feasible put noscript tag indexhtml template completely outside vue app must part app order displayed user meaningful location redirecting separate page defeats purpose allowing users js disabled browse use site site already user friendly js disabled would redirect instead showing message advanced ui functionality might work core browsing usage fine reasoning behind vue templates supporting subset valid html markup one major advantages ssr opens possibility using vue giving support js disabled users using redirect described would also good seo', 'date': '2018-10-26T17:05:43Z'}"
"33130",33129,"{'data': 'functional component ca nt get direct dom parent rendered context problem feature solve chains functional components dom components ca nt knows placement dom ca nt get direct parent element returns direct nearest parent element proposed api look like export render h context let parentclass contextparentelmgetattribute childclass parentclass contextdataclass contextdataclass push parentclass return h div contextdata functional component instances access dom element dom api nexttick though although probably want regular component need manipulate element', 'date': '2018-10-26T11:35:34Z'}"
"33131",33130,"{'data': 'vue develop test failed dev branch version latest dev branch reproduction link steps reproduce vue repo forked repo local expected tests passed actually happening test transition outin async component resolve leave complete failed', 'date': '2018-10-26T06:59:57Z'}"
"33132",33131,"{'data': 'imported components shown created application using vuecli wanted components header sidebar watched tutorials checked official documentation also tried check passed prop created function sidebarmenuvue even showed missing something call components appvue headervue sidebarmenuvue navigation mainjs import vuetimeago vuetimeago import vueprogressbar vueprogressbar import vuenotifications vuenotifications import izitoast izitoast import vueresource vueresource import vuehead vuehead import vue vue import veevalidate veevalidate import vuematerial vuematerial error browser console see page hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-25T20:25:45Z'}"
"33133",33132,"{'data': 'documentregisterelement deprecated removed got warning console hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-25T15:08:35Z'}"
"33134",33133,"{'data': 'target component tag names css selectors single file components problem feature solve adding child components tag name component mapped available selector understandable since actually output html example proposed api look like suggestion would replace name css type attribute add new one root element matching components addition would already border solid red nt see previous request see stackoverflow post use css class made', 'date': '2018-10-25T04:23:36Z'}"
"33135",33134,"{'data': 'vue tries load img src hidden component vshow false version reproduction link steps reproduce open provided jsfiddle chrome ie firefox report error open developper tools ctrlshifti windows developper tools select console tab click clear console click run jsfiddlenet website expected hidden image loaded vue vshow condition parent component actually happening error appears image supposed displayed vshow condition behaviour vshow img tag vshow adds images load hidden elements browser works expected behaviour nt want image load nt hide component nt render using', 'date': '2018-10-24T16:03:24Z'}"
"33136",33135,"{'data': 'triggering object change vue set work laravel echo version steps reproduce use vue inside laravel echo listen change object object change viewing directly vue tools chrome extension trigger change also tried using alert change nothing happens inside laravel echo listen method triggers change page expected expected trigger change page actually happening updating object triggering change page came probably stupidest solution added new array also updated useless data object updates added vfor array next vfor object array changing array trigger change object well reporting bug require minimal reproduction laravel either still question state please use forum chat', 'date': '2018-10-24T12:05:49Z'}"
"33137",33136,"{'data': 'display page async call api done dom load problem feature solve website program vuejs would like display page transition api call axios vuex done dom including images load proposed api look like already tested mounted method nexttick inside render isnt done fully end look post isnt resolve problem need way know call api finish also dom load images charged fade total page create codesandbox illustrate actualy see mounted appear finish simulate async api call maybe idea resolve problem thanks advance please use forum discord chat ask questions', 'date': '2018-10-24T07:08:00Z'}"
"33138",33137,"{'data': 'accept array events first parameter vuedts nt version reproduction link steps reproduce edit code editor expected editor prompt correctly actually happening type string assignable parameter type string', 'date': '2018-10-24T07:04:43Z'}"
"33139",33138,"{'data': 'problem feature solve vue 官方提供了 keepalive keepalive vuevuerouter proposed api look like 路由a 调用 routerpush b 调用栈 b routerredirect b related vuerouter already issues opened matter provide better support nativescript vue router nt consider support', 'date': '2018-10-24T04:22:02Z'}"
"33140",33139,"{'data': 'vue组件中如何给div绑定keydown等键盘事件 problem feature solve renderkeydown e consolelog ekeycode ekeycode proposed api look like 能在vue下成功的对div 请不要开重复的 在 vue feature request bug 请提供可以在线运行的复现代码 justineo sodatea sdlddr 你没有写 justineo', 'date': '2018-10-24T02:36:05Z'}"
"33141",33140,"{'data': 'vue组件中如何给div绑定keydown等键盘事件 problem feature solve proposed api look like 能在vue下成功的对div please provide valid reproduction btw may want use bind event listeners justineo 已经使用过von working example hope want', 'date': '2018-10-24T01:47:18Z'}"
"33142",33141,"{'data': 'dynamic component jsx problem feature solve really want say like code tried jsx doest wirk import todo todojs import nottodo nottodo js export default render h const component somejudge todo nottodo return example another mvvm tool r close expression import r r import photostory videostory stories const components photo photostory video videostory function story props const specificstory components propsstorytype return proposed api look like works see ps please nt file duplicate issues', 'date': '2018-10-23T02:35:24Z'}"
"33143",33142,"{'data': 'dynamic component jsx posva really want say like code tried jsx doest wirk import todo todojs import nottodo nottodo js export default render h const component somejudge todo nottodo return import r r import photostory videostory stories const components photo photostory video videostory function story props const specificstory components propsstorytype return originally posted bruceguanff hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-10-23T02:08:56Z'}"
"33144",33143,"{'data': 'computed property nt receive component instance first argument ssr version reproduction link steps reproduce clone install dependencies run expected render app actually happening start server see application throws following error happens ssr computed property nt receive component instance first argument therefore access property sure bug think could find anything vue vuessr docs would appreciate someone could clarify issue thank sure opened issue pr apparently nt', 'date': '2018-10-22T16:48:48Z'}"
"33145",33144,"{'data': 'venter class removed immediately using animation transition version reproduction link steps reproduce click toggle button text component still animating inspect class got instead expected class actually happening class docs stated css animations applied way css transitions difference venter removed immediately element inserted animationend event chrisvfritz nt docs inaccurate would make sense venter class also removed animations even get applied sdras thoughts probably built animations rest us combined behavior would expect', 'date': '2018-10-22T03:37:44Z'}"
"33146",33145,"{'data': 'unit tests within single file component problem feature solve excited single file components allows see related component one place almost got naive question adding file think single file component tag tests js code inside used perform unit tests particular component proposed api look like something like import mount vuetestutils describe name gt const wrapper mount import default componet renders correct markup gt expect wrapperhtml think proposal already implement workflow custom block including custom blocks', 'date': '2018-10-21T03:05:03Z'}"
"33147",33146,"{'data': 'move leave triggered removed transitiongroup item transitiongroup display flex version reproduction link steps reproduce see fiddle expected leave triggered removing item list displayed display flex actually happening leave move triggered may take one go ahead great working bug difference op fiddle sets element animating see difference added element try fiddle see jkzing fiddle remove transition working expected thanks jkzing found trying find workaround thanks efforts', 'date': '2018-10-20T12:05:20Z'}"
"33148",33147,"{'data': 'let componentmethods take function object problem feature solve trying separate component filters computed methods etc separate files import classes pass argument works created data since take function approach would possible put component property declarations another file thus leading cleaner code proposed api look like export class mycomponentmethods constructor mycomponent wohoo reference component import mycomponentmethods methods export default name methods gt mycomponentmethods use mixins organize reused methods nt really understand separating component methods making code cleaner thanks pointing mixins meant cleanness much less noise larger component code lot got project wrong rather case always separate things smaller modules think solely separating methods nt sound like good idea since mixins totally capable separation think need provide usage vue core btw separating scripts single file component actually use include separate script files single file components', 'date': '2018-10-19T09:43:07Z'}"
"33149",33148,"{'data': 'typescript definition functionalcomponentoptionsrender allow return undefined vnode version reproduction link steps reproduce try return multiple vnode undefined render function functional component using typescript works requires wrap typescript definition probably updated allow return value render function expected code compile without needing wrap actually happening typescript error typescript definition allow return value likely priority vue typescript rewrite easy fix extending function typescript definition return values', 'date': '2018-10-19T09:38:48Z'}"
"33150",33149,"{'data': 'unnecessary computed version reproduction link steps reproduce computed property based dependency property object like array computed test property return every time array changed pushunshiftpop deep watch computed test run even value test never change please see codesandbox demo infomation expected computed cached actually happening unnecessary computed normally big problem huge try compute render large data like stock data object job try resolve problem well believe also problem project writer maybe write code like better way use property see resolved new reactivity system gt see resolved new reactivity system helpful thanks indeed easy resolved tring transform computed property fp like function work like transform base fp use arguments got result result cached use tag function arguments return cached exist avoid compute works project lot computes stock data closing implemented objectdefineproperty', 'date': '2018-10-19T04:58:14Z'}"
"33151",33150,"{'data': 'inject properties added combinedvueinstance type definition version reproduction link steps reproduce copy minimal reproduction link local environment run webpack compilation process initialize vue vm try access service sfc expected declaring injections component typescript able access injection actually happening accessing injection vue single file component currently throwing error webpack compilation process stating injection please note link minimal reproduction wo nt show error logs webpack compiling compile successfully errors need tested local environment see happening typescript currently using webpack compile single file use application compilation complete successfully however print multiple errors console compiling able access properties etc running browser works successfully dug around folder best knowledge think inject part something sort possibly temporary workaround use avoid errors fixed release proposed', 'date': '2018-10-19T02:39:40Z'}"
"33152",33151,"{'data': 'scoped styles generate random scss number version reproduction link sandbox steps reproduce create sass list colors like colors bababa dcdcdc next want randomly pick one color use example remember code contained inside component component reused many times loop expected component even reused different background color since using sass random actually happening seems component style rendered random function always pick color rendering component multiple times component instance share style apply different styles instances', 'date': '2018-10-18T14:38:38Z'}"
"33153",33152,"{'data': 'dynamic component jsx problem feature solve dynamic component jsx proposed api look like jsx already feasible passing component tye h function posva try h function works write jsx kaelwd posva really want say like code tried jsx doest wirk import todo todojs import nottodo nottodo js export default render h const component somejudge todo nottodo return import r r import photostory videostory stories const components photo photostory video videostory function story props const specificstory components propsstorytype return', 'date': '2018-10-18T11:11:30Z'}"
"33154",33153,"{'data': 'filterby workiong enter country name countryname india country occupies greater part south asia constitutional republic consisting states substantial degree control affairs less fully empowered union territories delhi national capital territory includes new delhi india capital roughly onesixth world total population india second mostpopulous country china new vue el container data countries name india name canada name sri lanka name france name germany name egypt name china name america name russia name japan search', 'date': '2018-10-17T22:48:18Z'}"
"33155",33154,"{'data': 'extended arrays mutated vanilla arrays version reproduction link steps reproduce extend array instantiate new class assign component property observable vue access property console expected reference maintain instantiated class actually happening instantiated class mutated regular array tested latest version chrome sure rest purposes browsers irrelevant project duplicate', 'date': '2018-10-17T15:03:05Z'}"
"33156",33155,"{'data': 'preventdefault working chinese like input method version reproduction link steps reproduce change ime input method chinese type content press space key expected preventdefault prevent input actually happening content input input box native behavior nothing vue ok thank reply', 'date': '2018-10-17T09:05:18Z'}"
"33157",33156,"{'data': 'vueserverrenderer camelcased local directives applied ssr problem feature solve currently ssr directives passed kebabcase keys nt denoted anywhere except tests luckily intuitive provided camelcased ones client well introduce camelcased ssr directives available work impl proposed api look like provide code sample nt work directives always kebabcase event client hey posva pass camelcase variants well client side repro assumed possible well provide simple js file fails ran node work posva sure go directive passed directly fn nuxt mean one single js file reproduce problem whoops go red style directives makered inserted el consolelog client directive elstylebackgroundcolor blue const makered node dir gt const style nodedatastyle nodedatastyle consolelog server directive arrayisarray style stylepush backgroundcolor red else stylebackgroundcolor red step create renderer const renderer require vueserverrenderer createrenderer directives makered step render vue instance html rendererrendertostring app err html gt err throw err consolelog html red style include red backgroundcolor style makered makered kebabcasecamelcasekebabcase go ahead nobody working atm', 'date': '2018-10-16T23:10:47Z'}"
"33158",33157,"{'data': 'remove element pretransformnode problem feature solve mobile build web build want add directive componentselements get included bundle built respective flags env currently via vuecli plugin executes template using custom loader tried using instead seemed safer idiomatic however unable remove elements using callbacks proposed api look like tried returning even resulted various errors also tried changing nt yield results think element removed returning would great possible completely sure asking looks like tooling question get build working people nativescript got things like working multiple templates want component appear appear mobile would recommend use component media queries nt know two builds one anyway probably go forum contain details posva stated post components appearing disappearing able transform template build time nativescript obviously nothing question either vue build system particular providing option remove elements add turn limits possible directives build time wo nt using media queries would require us almost duplicate build size severely worsen performance mobile web app said post using preprocess angularjs looking way thing bit cleaner way nt supported well bad luck manually parse templates nt know two builds one literally first sentence please tell unclear looks like might able might also need push though destructivedragon wrong something like may work element try remove root component may get errors posva may exist many reasons close issue understanding questions exotic one', 'date': '2018-10-16T16:07:22Z'}"
"33159",33158,"{'data': 'click wo nt trigger call watch version reproduction link steps reproduce click wo nt show file window exec script import script click click show file window expected click show file window actually happening click wo nt show file window test browser wo nt let trigger click outside user action', 'date': '2018-10-16T15:16:30Z'}"
"33160",33159,"{'data': '报错信息 使用react 和 ng 发现两句的 错误提示 都做的比较好 但是 vue 的的 found srccomponentshelloworldvue srcviewshomevue recursive calls srcappvue warn vueruntimeesmjs warnnonpresent vueruntimeesmjs get vueruntimeesmjs render helloworldvue vuerender vueruntimeesmjs updatecomponent vueruntimeesmjs get vueruntimeesmjs run vueruntimeesmjs flushschedulerqueue vueruntimeesmjs anonymous vueruntimeesmjs flushcallbacks vueruntimeesmjs 如上所示 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-10-16T08:21:28Z'}"
"33161",33160,"{'data': 'uncaught typeerror objectentries function osx version reproduction link steps reproduce problem osx windows android linux nt encounter problem tried rebuild google found alot non vue related issues nt work ipad aswell however iphone likely problem project build vuecli expected bundle work osx actually happening gives typeerror objectentries function osx used work fine one build started show errors apple related products except iphone nt found issue related willing share source code necessary repro necessary please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug repo gitlab way share posva also vue cli issue likely related babel polyfill behavior please post issue proper minimal reproduction entire projects please vuecli repo instead maartennnn please share whole repo create repo github provide minimal code reproduces current issue pretty difficult reproduce nt mac however reply able scope problem within package link stack overflow resolved issue osx thanks', 'date': '2018-10-15T18:19:30Z'}"
"33162",33161,"{'data': 'uncaught typeerror objectentries function osx link problem osx windows android linux nt encounter problem tried rebuild google found alot non vue related issues nt work ipad aswell however iphone likely problem project build vuecli hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-15T18:15:00Z'}"
"33163",33162,"{'data': 'typescript property foo exist type vue version reproduction link steps reproduce open see change errors disappear expected typing errors actually happening typing errors exist check please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug posva know think bug ktsn help check bug thx emm bug ok', 'date': '2018-10-15T16:38:54Z'}"
"33164",33163,"{'data': 'knowing component emits glance problem feature solve managing components important information interact glance general component two primary interactions props takes events emits ability know glance props go props section component know certainty props available types props required ease comes events component emit emit component anywhere component streamlined process nature emits lose ability know glance would nice extend component structure include emits section included vue throws error emit event happens listed also extended include types proposed api look like duplicate', 'date': '2018-10-15T16:33:53Z'}"
"33165",33164,"{'data': 'show warningerror message listen event unregister native vue event beforedestroy problem feature solve checking component register vue native event components show warning unregister beforedestroy make components implements correctly proposed api look like javascript mounted show console warning refresh event unregister beforedestroy root wo nt able know component destroyed always bus implementation handles much vue core', 'date': '2018-10-15T09:13:15Z'}"
"33166",33165,"{'data': 'show warning listen event event native event beforedestroy hi wondering vuejs checking plan implement checking register vue native event components show warning unregister beforedestroy make developer aware something done right hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-15T09:02:43Z'}"
"33167",33166,"{'data': 'vue template removes whitespace immediately inside pre version reproduction link steps reproduce run unit test expected newline preserved actually happening newline removed seems happen selfclosing tags', 'date': '2018-10-15T08:58:34Z'}"
"33168",33167,"{'data': 'animation childs broken latest chrome version reproduction link steps reproduce first browser chromium running ubuntu behave chrome latest browser works firefox expected world word turn red progressively actually happening world word turns red without progression wontfix likely implementation quirk chrome workaround always giving span color transition', 'date': '2018-10-15T01:23:52Z'}"
"33169",33168,"{'data': 'vmodel nt work expected hebrew mobile phone version reproduction link steps reproduce start typing input using hebrew language mobile device expected data update every input actually happening data updated time cause inconsistency suspect issue occur becuse reason browser treat hebrew ime way around maybe modifier trigger update native input expected ime indeed listen individual events like need values typed nt emit composition end way hebrew nt need ime saying vmodel waits composition finished want get around use native events ok user left field never emit compositionend really big issue nt think need sweep rug posva maybe vmodel directive clear flag somehwere section deal issue composition completed user moves focus input', 'date': '2018-10-14T05:28:57Z'}"
"33170",33169,"{'data': 'want modify data value page console hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 want modify data value page console', 'date': '2018-10-13T08:06:53Z'}"
"33171",33170,"{'data': 'modify data value page console hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-10-13T08:06:30Z'}"
"33172",33171,"{'data': 'bind vm instance local async component registration problem feature solve work large firm many developers defining strategy reusability still providing capability provide conditional behavior words design needs ability provide behavioral differences grand children codesplit differences purpose scaling edit see comment valid usecase easily solved vue single level hierarchy things get complicated trying create multiple levels nesting configuration injected grand ancestor accounting need codesplit nice pattern requires child component still loaded even condition always false nonoption us performance implications atscale loading code never used therefore need conditionally split child components separate bundles based instance properties vue provides ability allow behavioral differences also ability provide promises therefore create split points local component registration definitions tried coming many different angles apparent way without losing serverside rendering information found reading section async components edit also worth mentioning seo factor application fully universal isomorphic purpose seo tti selective client lazyloading seo important typical usecase code splitting javascript purpose performance atscale edit way thanks solution provided sirlancelot pattern came solve business need looks like html feature html export default inject flavorofchild components child thisflavorofchild flavor return import return import issue vm actually bound component function therefore undefined however take advantage component instance lifecycle create reference instance js let export default inject flavorofchild created components child thisflavorofchild flavor return import although solution works following limitations bit messy manually manage would otherwise needed opens opportunity possible unexpected behavior components may instantiated multiple times instances created parallel different values async component registration documented part lifecycle confidence lifecycle remain consistent versions thus may defined vue changes source happens async components resolved solution going despite limitations also perhaps another way conditionally lazy load child components considered however try come every possible design accomplish overall goal could edit another way thanks solution provided sirlancelot edit created post vue forum explore different design options need github issue assumes possible design solve business need proposed api look like js export default components child thissomecondition return import edit see demonstrated simplified form edit see demonstrated vanilla js agnostic vue seems like simple change given fact instance exists component functions executed already possible manage binding manually like earlier examples happily submit pr could find right spot code make change edit solution usecase provided sirlancelot issue remains open two reasons sirlancelot articulates apparent difference local registration caching properties expected change component definitions cached forever may benefit since usecase values configuration never change may usecase could benefit design opportunities opened vm bound local async component registration promise function usecase componentsplit componentsplit see wants use wants use rest child components nt scale well create especially true multiple levels recursion play copypasta gets outofhand exponentially answered using like mentioned original issue description load well without conditionally importing debilitating atscale pretty sure already load modules lazily using webpack chunkbundle splitting likely related vue fact even tutorial one first results google assuming using babel syntax issue mentioning appears happen nesting context inside object context could due behavior expected could probably use closure retain reference parent vue context appreciate quick reply afraid fact related vue correct issue using webpack code splitting features lazy load bundles child components however issue posted also correct closure working according ecma spec posted feature enhancement bug familiar concept lazy loading via webpack code splitting feature also comfortable concept closures block scopes see code example inheriting block scope context using arrow function case would component constructor instead using shorthand retain context instance scope even syntax used example posted since object case caller vue bind instance clearly articulated issue vue needs bind vm context calling component promise function edit see demonstrated simplified form edit see demonstrated vanilla js agnostic vue spent bit time trying find place codebase add enhancement figured someone comfortable source would able quickly identify change would go html feature html export default inject flavorofchild created thischild thisgetchild methods getchild thisflavorofchild flavor return import return import kaelwd thank taking time provide input solution nt work couple reasons must name registered component component options objects see docs dynamic components vue know promise code could slightly modified however function nonblocking therefore would inhibit ability render serverside another requirement edit fiddle illustrating different syntactical approaches design comments explaining flawed wrt solving particular design issue update original description make clear application universal isomorphic purpose seo tti selective client lazyloading seo important typical usecase code splitting javascript purpose performance atscale contingency seo impacted appreciate response thank detailed description took time read think providing response think vue solve issue asis core dev provide response anyone guess solved scenario describing using computed property wrapper component using example scenario think would write something like vue feature html export default inject flavorofchild computed childfeature const feature thisflavorofchildname return gt import features feature vue important part computed property returning function starts import process webpack place codesplit nothing downloaded except required fulfill request added benefit also get reactive object value changes computed property work new component downloaded displayed take step returning async loading component definition instead seen handling loading state javascript import loadingspinner componentsloadingvue export default snipped computed childfeature const feature thisflavorofchildname return gt component import loading loadingspinner overall think idea behind object component definition functions remain stateless pure vue cache result indefinitely component definition depends external state dynamic best solution tells person reading code future something depends state something else update note required use component name file structure use larger applications structure files however like important piece keep mind return function pass function directly let vue handle rest sirlancelot great solution grateful clearly took time understand problem provide thoughtful response mind values resolved synchronously order get seo juice standard computed value return promise promise function piece puzzle missing computed property bound happens special accepts form component definition including promise function tested solution javascript disabled effectively blocks render cycle resolving component definition solution much cleaner portable going solution unless core friends step save day usecase properties configurations need reactive therefore seems inline object local registration agree assessment seems difference vs imagine issue treating property case value never change however nt know enough vue internals sure fact difference makes think reason keep issue open valid reason ie performance still value conditionally loading definitions requires vm bound separately potential usecases could take advantage design opportunities opened binding context component function would otherwise close issue sirlancelot solved usecase cheers sirlancelot one unrelated question causing get bundled understanding would evaluated runtime webpack would bundle everything dynamic part explained rules like importnodynamicrequire place piece puzzle missing forgot promise wrapped function justinhelmer assumption correct compiletime webpack bundle everything matches parameters dynamic require easiest way accommodate structure folders way analyzer bundle modules want another option use webpack magic comments craft regexp match files want include bundle see import module methods specifically', 'date': '2018-10-13T00:42:59Z'}"
"33173",33172,"{'data': 'scoped css applied programmatically append styles head tag version reproduction link steps reproduce export default created var style documentcreateelement style styletype textcss styleid name stylesetattribute scoped styleinnerhtml content add styles dynamically documentgetelementsbytagname head appendchild style expected solution scoped applied styles actually happening scoped working inner styles trying add deep dynamically adding styles updated pretty much point scoped css get applied outside component', 'date': '2018-10-12T08:42:18Z'}"
"33174",33173,"{'data': 'scoped css applied programmatically append styles head tag export default created var style documentcreateelement style styletype textcss styleid name stylesetattribute scoped styleinnerhtml content add styles dynamically documentgetelementsbytagname head appendchild style trying add deep dynamically adding styles updated inner styles page please help solution possible thanks amp regards hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-12T08:32:09Z'}"
"33175",33174,"{'data': 'vue compatible version reproduction link steps reproduce project use vue way project open ios version try use babel way declare type script textbabel problem solved expected help thanks actually happening problem solved please provide boiled repro', 'date': '2018-10-12T08:26:04Z'}"
"33176",33175,"{'data': 'ability pass event listeners creating components new keyword like propsdata props problem feature solve vue already ability pass props components creating keyword using far tell possible events however events added component creation means events emitted component hook immediate watchers caught creating components keyword proposed api look like something akin props instead event listeners created user land mixing attaches events removes since api freeze implemented user land pass fair enough nt thought making mixin thanks tip', 'date': '2018-10-11T15:16:38Z'}"
"33177",33176,"{'data': 'scoped slot delegate child component slot child component always set also set version reproduction link steps reproduce open sample expected output second sample child component scopedslot false actually happening output second sample child component scopedslot true also interesting remove vif parentvue default basicslot still rendered default scopedslot nt anymore function call check result undefined empty array future parent component always scoped slot template case appvue function may also exist', 'date': '2018-10-11T12:25:51Z'}"
"33178",33177,"{'data': 'proposal vuego wasmbased vuejs wrapper written go problem feature solve unusual feature request vuejs propose subproject vuejs called vuego vuego wasmbased vuejs wrapper written go uses go web assembly compiler compile wrapper immediate benefit vuego allows vuejs users deliver web applications binary web assembly forms companies would better way protect ips vuejs applications project started would love see vuejs maintainers users want look eventually ok concept vuego project donated subproject vuejs proposed api look like something like hey chanwit thanks sharing project interesting idea sure although seems main benefit ip protection terms wasm curious leveraging performance improvements either runtime ssr ip protection may topic particular user groups interested unfortunately team currently bandwidth expertise provide meaningful feedback collaboration project appreciate effort though would encourage keep exploring idea thank reply terms wasm curious leveraging performance improvements either runtime ssr ssr would greatly simplified go already lot serverside stuffs help archive including go templates protobuf grpc ws example runtime performance would bit challenging requires port whole vuejs wasm also midterm goal project surely continue explore space thank encouragement hopefully could collaborate somehow future project becomes mature', 'date': '2018-10-11T11:44:36Z'}"
"33179",33178,"{'data': 'child transitions triggered parent element hidden version reproduction link steps reproduce click toggle screen button see first screen content faded second screen content already visible expected would expect transition trigger due fact parent hidden transition actually happening child element first screen faded second screen content already visible assume sort element reuse situation adding key either first second screen elements fixes reporting mainly call attention something nt seem intentional little information indeed caveat related element reuse necessary provide key outer div even sure could document properly tbh could attempted solved conditional disposing code updatechildren patchvnode perhaps way mark node transition hooks triggered parent context replaced andor part transition group', 'date': '2018-10-10T21:49:14Z'}"
"33180",33179,"{'data': 'setting another object overwrites original one modified version reproduction link steps reproduce make two variables keys call write anywhere code modifying values value overwritten write modify anything change expected modifying wo nt modify actually happening modifying modifies javascript works want make copy need explicitly clone object', 'date': '2018-10-10T18:46:23Z'}"
"33181",33180,"{'data': 'setter computed property get called input element change vmodel references property object version reproduction link steps reproduce run fiddle example click increment age ages change change age manually input element age bound vmodel simple variable setter called expected would expect change value bound vmodel input element setter vmodel would called actually happening setter simple variable called changing value input element trying make grid component unaware data key names needed way dynamically generically handle data object wanted way bind input element generic gettersetter handle backend calls looks like probably using method pass data component read prop changes made via input element sent back parent event persist data push committed value back prop expected setter gets called seems inconsistent binding vmodel property object seems common yet different behavior simple variable', 'date': '2018-10-10T17:29:05Z'}"
"33182",33181,"{'data': 'store listlength variable problem feature solve increase performance vue preparations vue initialization process function splits string items array create maplike object forloop every iteration checks value stored separate variable running forloop arrays improve performance proposed api look like javascript function makemap str expectslowercase var map objectcreate null var list strsplit var listlength listlength lt exploring vue source code found places length caching applied create pullrequest code refactoring regarding performance need benchmark show changes worthwhile according existing benchmarks found results almost identical sometimes uncached version even faster latest browsers justineo tried running code chrome got anyway create appropriate benchmark tests add links run benchmark multiple times see clear winner least modern browsers', 'date': '2018-10-10T13:26:40Z'}"
"33183",33182,"{'data': 'vue templates runtime amp compileroptions problem feature solve hello nt use files instead use templatestringfield files ca nt find way set delved packages found compilerfunction created immediately importing vuepackage vue uses time deadend also bit strange called instance one component static template string component definition think result cached classcomponent proposed api look like something like webpack since specific use case goes different direction recommend find way compiler vueloader front bundle improvements regarding caching compilation templates could repro pr though make sure nt impact runtime version though', 'date': '2018-10-10T12:05:24Z'}"
"33184",33183,"{'data': 'different behaviour pass props object property object version reproduction link steps reproduce click property pass watch consolelog click object pass watch consolelog expected expected cases child components console logged first case apart console log child component also parent component console log actually happening property pass clicked parent updated span counter updated console logged object pass clicked span object updated console logged clicking buttons modify data vue component way console log fired updated hook components updated difference behaviour depending pass data child components pass data single property object first case parent child components updated pass entire object second case child component child component updated expected template updated needs rerender object posva thanks answer good practice pass props object instead single property way additional rerendering parent component could avoided depends prop would nt pass avoid though wed oct damjan bursac notifications githubcom wrote posva thanks answer good practice pass props object instead single property way additional rerendering parent component could avoided receiving mentioned reply email directly view github mute thread gt eduardo san martin morote', 'date': '2018-10-10T07:57:12Z'}"
"33185",33184,"{'data': 'version steps reproduce selectparent deep elinputsuffix right expected 我想修改elementui actually happening 结果elinputsuffix没有添加上data gt gt gt issue reported vue loader please file issue repo boiled runnable reproduction thanks', 'date': '2018-10-10T07:21:48Z'}"
"33186",33185,"{'data': 'scopeid missing slot elements slot root element one replacing version reproduction link steps reproduce go provided codepen demo link click group expand expanded items red missing items expected expanded items red actually happening expanded items red missing items works root element scoped slot different one replacing nt work works adding keys generate children inside loop see pen thanks worked well adding keys', 'date': '2018-10-10T04:42:25Z'}"
"33187",33186,"{'data': 'add props children elements using render function problem feature solve suggest write template need pass gutter children without modifying template code following component js export default name libbuttongroup props gutter type string default null render h const classname buttongroup component buttongroup another way throught props marginright parentmarginright ps reactjs coder new vuejs proposed api look like use something like reactcloneelement please use forums chat ask questions', 'date': '2018-10-09T17:05:33Z'}"
"33188",33187,"{'data': 'add props children elements using render function suggest write template need pass gutter children without modifying template code following component js export default name libbuttongroup props gutter type string default null render h const classname buttongroup component buttongroup another way throught props marginright parentmarginright ps reactjs coder new vuejs hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-09T17:03:10Z'}"
"33189",33188,"{'data': 'enhance vbind shorthand values matching property name problem feature solve often find passing bound properties components identical computed data property current component cases bound property value equivalent property name would nice repeat property name would feel familiar object shorthand notation allows leave values property name also apply feel familiar attributes commonly include values like attribute proposed api look like example found essentially would become see', 'date': '2018-10-09T14:39:39Z'}"
"33190",33189,"{'data': 'debug vuetypescript project create vscode breakpoint ts file vue unsupport used grammar debugger correct launchjson like version configurations type chrome request launch name vuejs chrome url webroot workspacefolder src breakonload true sourcemappathoverrides webpack src webroot hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-09T14:05:55Z'}"
"33191",33190,"{'data': 'deliberately empty slotscope attribute rendered scoped slot version reproduction link steps reproduce expected scoped slot actually happening rendered child present workaround using dummy variable force scoped slot pretty sure talked another issue could nt find', 'date': '2018-10-09T13:31:22Z'}"
"33192",33191,"{'data': 'sonarqube found blocker code smell issues problem feature solve proposed api look like sonarqube explanation variables declared used variables declared var special property regardless declared function float top function available use even declared makes scoping confusing especially new coders keep confusion minimum var declarations happen variables declare used first time noncompliant code example compliant solution please automatically open issues like fine use tool get guidance least provide repro illustrating problem summarising instead copy pasting whole thing thank', 'date': '2018-10-09T13:14:53Z'}"
"33193",33192,"{'data': 'sonarqube found critical vulnerability issues problem feature solve proposed api look like sonarqube explanation function constructors used addition obtuse syntax perspective function constructors also dangerous execution evaluates constructor string arguments similar way eval works could expose program random unintended code slow security risk general better avoid altogether particularly used parse json data use ecmascript builtin json functions dedicated library noncompliant code example compliant solution exceptions function calls argument string literal eg ignored see owasp top category injection necessary compiler report errors present runtime version vue also keep mind could problem compile templates coming users tons problems', 'date': '2018-10-09T12:59:35Z'}"
"33194",33193,"{'data': 'unnecessary update caused state change parent component version reproduction link steps reproduce create component makes use template somehow create component b includes component instance b parent instance attach event listener b update state component b somehow expected component b update component unaffected actually happening component updated rendered update lifecycle hooks triggered inline function generates new function every time appvue renders therefore changing posva updated sandbox longer use inline function instead method parent component still unexpected behaviour duplicate', 'date': '2018-10-09T12:02:18Z'}"
"33195",33194,"{'data': 'element removed animation table moves topleft corner version reproduction link steps reproduce click test button expected removed element faded deleted without movement actually happening removed element starts move topleft corner remove css rule need cases example new element immediately appear time fade previous apply custom logic remove css attribute specific case happening css rules please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug', 'date': '2018-10-09T11:28:57Z'}"
"33196",33195,"{'data': 'input typedate 的输入框 用vmodel绑定数据报格式错误 version reproduction link steps reproduce var productapp new vue el productapp data testdate 如果testdate为 这样的格式是可以的 expected actually happening input type date works gt elements type date create input fields let user enter date either using text box automatically validates content using special date picker interface resulting value includes year month day time html input type datetime control entering date time hour minute second fraction second well timezone mdn web docs', 'date': '2018-10-09T06:08:38Z'}"
"33197",33196,"{'data': 'feature provide new way parent component tell child components something problem feature solve need new way avoid using refsxxxcallfn also would like let parent component tell child components something time proposed api look like html data export default data return data methods logic belongs child component parent use freshmydatafreshmydata method canbe dispatch parent freshmydata return axiosget apidata html status freshed export default data return freshed false async mounted await thisrefreshdata thisfreshed true methods refreshdata refresh defined warning block code return dispatch refresh lot ways implement function without changing current api really bad everyone wants change extend api nt know better current api use forum discord stack overflow anything else first jounqin yep searched know ways maybe vuex new vue instance refs think vuex heavy nt need create new instance make event bus extra code file project refs good watch props parent good way would like tell child component something using simple way lightweight', 'date': '2018-10-09T03:16:32Z'}"
"33198",33197,"{'data': 'nt bind value correctly version reproduction link steps reproduce change text normal input bindings update expected change text component input bindings still update expected change text normal input component input update however attribute appears correct expected update changes actually happening looks like editing value property value attribute get sync stops ui updating use case actually looks something like worth works docs source duplicate thank', 'date': '2018-10-08T18:27:24Z'}"
"33199",33198,"{'data': 'better categorisation data fields problem feature solve currently data fields data props methods computed accessed make quite confusing sometimes developing unsure whether directly mutating variable eg props separating containers eg thisprops thiscomputed would clear confusion well allow variable name used multiple data fields eg proposed api look like props gt thisprops computed gt thiscomputed methods gt thismethods maybe data gt thisdata could probably leave others want use direct access simply feels natural posva ah cool definitely helps computed methods added well future probably implement userland sun oct notifications githubcom wrote posva ah cool definitely helps computed methods added well future receiving mentioned reply email directly view github mute thread gt eduardo san martin morote', 'date': '2018-10-07T06:04:25Z'}"
"33200",33199,"{'data': 'array element template syntax updating inside component version reproduction link steps reproduce open reproduction link click option say correct click next question dom updated inside component log button log array variable options contains button question component contains one option expected button result supposed corresponding option options array actually happening options array updated button remains contain old value believe bug related reactivity tried vm forceupdate seemed work working expected see docs need manually set values case thank searched lot', 'date': '2018-10-07T02:46:54Z'}"
"33201",33200,"{'data': 'ssr hydration issue version reproduction link steps reproduce code causes hydration issue run ssr emptystring test export default data return emptystring falsyvalue false expected hydration issue actually happening void element thus always include end tag justineo used self closing tag example valid vue template avoid confusion updated example separate start end tag thanks sandbox nt seem reflect ssr issue provide configured repo order reproduce problem closing repro provided sorry ca nt find similar site support ssr possible see issue simply adding snippet component way found issue space next mustache cases nt cause hydration issue could avoid issue even issue fixed test test test use', 'date': '2018-10-06T14:29:52Z'}"
"33202",33201,"{'data': 'watcher fire immediately version reproduction link steps reproduce click update button expected property change watched message two logs watcher fired right property changed increasing property property change watched property increased actually happening property change watched message dispatched two logs indicating second log executed watcher executed property change increasing property property increased property change watched watchers nt fire immediately design prevent watcher firing multiple times single tick queued run later need wait watchers done firing use ok option could set force immediate dispatch even fired multiple times looked nt seem like would something could added near future nexttick trick wo nt work thanks need something fire right away might better design use method call method need logic run many properties watch nt want create method one watch system vue seemed good fit totally integrated app would extremelly useful use well ok bad try find another way thanks generally watchers sideeffects lot properties depend one another may better results leveraging computed properties computed properties executed ondemand sounds like want careful use sideeffects allright try path see actually use needs saw couple techniques use computed properties watchers even set system watch multiple properties single callback seems convoluted taste guess create custom system top vue thanks lot time right feel free take conversation discord need help anything else take care', 'date': '2018-10-05T16:55:05Z'}"
"33203",33202,"{'data': 'using vfor functional component returns multiple nodes renders undefined version reproduction link steps reproduce title says look fiddle expected slots rendered properly combination vfor fragment return array vnodes actually happening slots render undefined returns array arrays vnodes problem seems result becomes array arrays vnodes seems like ought flattened reason add extra element sibling fixes duplicate', 'date': '2018-10-05T12:41:43Z'}"
"33204",33203,"{'data': 'production version shows console warning development mode version reproduction link steps reproduce download production version vueminjs add script page check console expected production mode warnings actually happening following warnings appear download vue devtools extension better development experience running vue development mode make sure turn production mode deploying production see tips kidding pulling wrong file', 'date': '2018-10-04T15:11:33Z'}"
"33205",33204,"{'data': 'nonbreaking space acts different characters outputs template passed via props version reproduction link steps reproduce create new component accepts string prop display prop within component template use component vue application pass string containing nonbreaking space character prop expected output contain non breaking space actually happening output shows example provided made cases first case get turned second case long list characters escaped third getting list characters retrieving regular character nt escape note copying nonbreaking space character might turn regular space clipboard therefor use make sure insert character added new example list html entities including whitespace zero width characters decoded also noticed mathiasbynenshe two entries one without simicolon one simicolon might shot dark could influence result tried using mathiasbynenshe find inconsistencies nt able find tried duplicating previous jsfiddles see would react different anyone give pointers look error happy give shot would also much appreciate response issue looks like bug fix would nice ive noticed issues occasion say component prop default rendered component vhtml rendering shows actual character causes ssr hydration bail', 'date': '2018-10-04T08:07:44Z'}"
"33206",33205,"{'data': 'typeerror function probable incompatibility firebase sdk updating firebase got error typeerror function app working pretty well returning version stops bug hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-04T07:33:57Z'}"
"33207",33206,"{'data': 'ca nt set default selected value vmodel defined version reproduction link steps reproduce run code default selected value empty expected delete vmodel test select tag selected value expected expected selected default value actually happening empty selected value need provide initial value variable passed vmodel also nt forget set every option translated posva answer fiddle right thank', 'date': '2018-10-03T20:43:49Z'}"
"33208",33207,"{'data': 'recent versions vue work lazy async components node ssr version reproduction link migrated reference project vuehackernews webpack latest libraries steps reproduce build run yarn install yarn build yarn start open expected expect site work lazy components actually happening nodejs finish import component promise vuerouter never resolve tried build similar project using vuecli also failed tried node node great understand error happen know ow version node running node instance would trouble import syntax boiled repro necessary thank gt boiled repro necessary thank posva close gt happen know ow version node running node instance would trouble import syntax geedew boiled repro necessary gt boiled repro necessary posva boiled repo entire project gt boiled repo entire project posva real project official vue demo updated dependencies move without changing source code see error need build project run go localhost want leave one link routing understand requirements boiled means tye minimal code show problem follow vue ssr guide google thu oct ilya skorik notifications githubcom wrote boiled repo entire project posva receiving mentioned reply email directly view github mute thread gt eduardo san martin morote', 'date': '2018-10-03T13:34:05Z'}"
"33209",33208,"{'data': 'using vshow vif transition trigger leave transition version reproduction link steps reproduce use transition component expected changing keep trigger leave transition actually happening element disappear without performing leave transition nt use vif vshow component one forbidden using one leave dom element remove addresses use case sometimes needing hide element perform transition time needing remove element also perform transition works expected enter transition nt work leave transition', 'date': '2018-10-03T12:41:58Z'}"
"33210",33209,"{'data': 'work webpacksubresourceintegrity version reproduction link steps reproduce nuxtjs using plugin setting errors bu generated html nuxt generate nuxt start integrity script tag expected integrity hash script tag sri actually happening integrity appear seems something', 'date': '2018-10-02T08:51:17Z'}"
"33211",33210,"{'data': 'add demo gif readme disclaimer bot looks like repo trending githubtrendingvideos instgram account automatically shows demo gifs trending repos github readme nt seem demo gifs add one next time parser runs pick post instagram feed nt want close issue wo nt bother hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-02T07:09:34Z'}"
"33212",33211,"{'data': 'vue custom module resolution nt seem work create new project via options asks selected create file folder following content maints homevue imported module use import item libstestlib consolelog item item tsconfigjson add vscode resolve path try run build serve npm run build result getting error libstestlib srcmaints nodemodulescacheloaderdistcjsjs ref nodemodulesthreadloaderdistcjsjs nodemodulesbabelloaderlib nodemodulestsloader ref nodemodulescacheloaderdistcjsjs ref nodemodulesvueloaderlib vueloaderoptions srcviewshomevue vue amp typescript amp langts amp install run npm install save libstestlib help would much appreciated hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank tell webpack typescript aliases insert file project root content like js const path require path function resolve dir return pathjoin dirname dir moduleexports chainwebpack config gt configresolvealiasset libs resolve libs could obviously make exercise leopiccionia thank', 'date': '2018-10-02T04:30:15Z'}"
"33213",33212,"{'data': 'vmodellazy doe nt update value enter click version reproduction link steps reproduce type text input press enter paragraph updates well inputvalue doesnt change focus instead press enter updates value ok expected inputvalue updated paragraph actually happening paragraph updated vue doest issue', 'date': '2018-10-01T22:56:26Z'}"
"33214",33213,"{'data': 'api allow replacing observer implementation alternative implementation problem feature solve followup integration vue existing trackerbased meteor apps one approach assure fur compatibility implement tracker top observer implementation proven work great version needed bit access vue observer internals already available would suggest simple way register alternative vue observer implementation way party libraries could extend new vue observer implementation additional things register back vue use proposed api look like could something simple would author assure alternative implementation compatible works well vue would suggest simple way register alternative vue observer implementation vue indeed implement new proxybased observer implementation independent package also implement alternative version uses getterssetters based reactivity system ie compatibility something like likely possible though details still consideration fact interesting hooking underlying observe logic much exposed proxy means probably thing generally less something like every time x gets invalidated also call extra code gets rerun call well', 'date': '2018-10-01T16:25:02Z'}"
"33215",33214,"{'data': 'custom multiple select input work correctly version reproduction link steps reproduce select multiple options custom select input compare direct input expected model selection array selected options actually happening one element arbitrarily returned vmodel works components remember syntax sugar around inputs vmodel implementation handles either implement use computed setter inside setter best option', 'date': '2018-10-01T16:21:45Z'}"
"33216",33215,"{'data': 'component template content html encoded chars attributes properly decoded version reproduction link steps reproduce hover æøå expected would expect html attributes htmldecoded like textnodes hover text see æøå actually happening see context serving html cms backend json creating dynamic vue component servergenerated html danish characters attributes mostly objectdata bindings like model prop æøå problem exists attributes duplicate', 'date': '2018-10-01T14:33:12Z'}"
"33217",33216,"{'data': 'cachable filters problem feature solve lot issues created filters etc issues created filters executed multiple times issues answer vdom comparison vue needs run filter compares resulting dom tree use computed properties instead filters cached right reason use filters mustache interpolations methods angular filters example evaluated inputs change makes much usable filters supposed pure functions anyway see reason cache making filters cachable like computed properties opens possibilities using mustache interpolations examples cachable filters beneficial kazupon works around issue directive cache result translation less flexible mustache interpolation would readable flexible instead js js hello js hello world use momentjs date formatting momentjs slow filters cached really usable especially rendering lists places formatting text dates etc creating computed property formatted value text date etc lot work unnecessary code write proposed api look like make filters work like computed properties instead methods add different symbol instead pipe denote filters cachable pure already saw discussed many times going happen however achieve user memoize helper lodash one memoize work use memory least going changed would nice update docs clarify filters executed every rerender posva know discussed many times think consider number times discussed sign given consideration many developers impression behavior vue would nt otherwise really important reason filters even implied accepted answer first place people look want understand filters made explicit docs last comment mentions problematic would make vue significantly better framework made behavior reason using vue react save developer cycles especially learning curve costing developers cycles', 'date': '2018-10-01T13:09:39Z'}"
"33218",33217,"{'data': 'memory leak problem feature solve screen see output vuecomponent method destroyed destroy vuecomponent continues store lot data remains memory causes memory leak screens show amount data stored memory routing changes use vuerouter number vuecomponents constantly growing page page page memory usage goes proposed api look like happening need boiled repro memory leak reports', 'date': '2018-10-01T08:22:12Z'}"
"33219",33218,"{'data': 'functional component rendering named slot following version reproduction link steps reproduce nothing particular expected display actually happening displays following made appvue nonfunctional make childvue nonfunctional works use default named slots works responded vue forum well maybe issue works using scoped slot', 'date': '2018-10-01T08:00:47Z'}"
"33220",33219,"{'data': 'memory leak version screen see output vuecomponent method destroy vuecomponent continues store lot data remains memory causes memory leak demonstration accumulation vuecomponents screens show amount data stored memory routing changes use vuerouter number vuecomponents constantly growing page page page memory usage goes happening hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-01T07:59:51Z'}"
"33221",33220,"{'data': 'binding bind directive change events tag work version reproduction link steps reproduce enter two numbers less etc succession twice observe page display console output expected originally expected page console display input actually happening input numbers less two consecutive times observed first input page console display time second input page displays console displays reluctant solution get native input element modify value use ref use event replace input element custom component may work use vmodel watch want know outputs appear better solution thank probably race condition get around setting gt probably race condition get around setting good ideathank', 'date': '2018-10-01T07:39:30Z'}"
"33222",33221,"{'data': 'binding bind directive change events tag work vuejs version overview problem recentlyi want limit range numbers entered input tag nt want use vmodel directive input box loses need check number within reasonable limits wrote following steps enter number randomly input box move mouse input box observe whether input box number meets expectations observe console output number problems input numbers less two consecutive times observed first input page console display time second input page displays console displays originally expected page console display input reluctant solution get native input element modify value use ref use event replace input element custom component may work use vmodel watch want know outputs appear better solution thank hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-10-01T07:08:31Z'}"
"33223",33222,"{'data': 'vmodellazy update input value press enter version reproduction link steps reproduce open console type something input press enter data updated getter called value type something input change focus works well expected press enter value update like previus version actually happening press enter getter called value work fyi lazy change event listener input change related enter pressed maybe browser testing emitting event maybe use form submit event want detect enter gt work fyi lazy change event listener input change related enter pressed maybe browser testing emitting event maybe use form submit event want detect enter mean inputvalue vuedata vuedata updates well inputvalue still spite getter called vue input updates press enter posva', 'date': '2018-09-30T18:26:25Z'}"
"33224",33223,"{'data': 'optional tags sfc problem feature solve html completion still suboptimal template tags sublime text less clutter indentation done svelte proposed api look like appvue hello name export default makes every tool ecosystem outdated clear benefits use sublime text', 'date': '2018-09-30T18:12:03Z'}"
"33225",33224,"{'data': 'dtx grid vue hi dear created powerful datagrid vuejs free open source get address think lot people needs component sorry puting post issues part love vuejs think everybody loves regards dt hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-30T17:25:46Z'}"
"33226",33225,"{'data': 'functional component rendering named slot version reproduction link steps reproduce nothing particular expected display actually happening displays make childvue nonfunctional works use default named slots works openned topic forum got answer nt make root app functional', 'date': '2018-09-30T16:33:05Z'}"
"33227",33226,"{'data': 'find module vue single ts webpack testvue hhhh export default name ttt appvue import ttt componentstestvue find module componentstestvue add ok dont want add expected behaviour actual behaviour find module componentstestvue steps reproduce problem location minimal repository demonstrates issue hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-30T09:58:59Z'}"
"33228",33227,"{'data': 'find module vue ts webpack test vue loader vueloader options loaders ts babelloader tsloader tsx babelloader tsloader testvue hhhh export default name ttt appvue import ttt componentstestvue find module componentstestvue add langts ok nt want add expected behaviour actual behaviour find module componentstestvue steps reproduce problem location minimal repository demonstrates issue hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-30T09:56:32Z'}"
"33229",33228,"{'data': 'computed setter triggered reactive array operations version reproduction link steps reproduce click assignment button see alert whereas clicking pushing button wo nt clicking manual set button trigger alert expected alert computed setter triggered array push since push splice etc supposed reactive according actually happening assignment array triggers computed setter reactive array operations nt alert also gets triggered manual done behaviour expected setter applied assignment application setter reactive array operation considered feature future think could moment use method put side effect', 'date': '2018-09-30T06:14:08Z'}"
"33230",33229,"{'data': 'simple bind actually seem improve performance problem feature solve helper function bundled vuejs simple bind faster native function bind fn ctx function boundfn const l argumentslength return l l gt fnapply ctx arguments fncall ctx fncall ctx record original fn length boundfnlength fnlength return boundfn bind slow myth true quite time native bind faster much recent browser arrow functions even faster long need reuse functions somewhere else please refer benchmark think bigger review helper functions see case use still modern browses proposed api look like replace simple bind native bind code provided seems outdated actually vue prefers native bind already see', 'date': '2018-09-30T05:55:31Z'}"
"33231",33230,"{'data': 'vueextend causes nested mixins merged twice version reproduction link steps reproduce open console expected actually happening still gets applied used even though already done nt use vueextend mixin mixins plain objects use typescript nt provide example handle using typescript posva', 'date': '2018-09-29T11:26:12Z'}"
"33232",33231,"{'data': 'separate vue component ts html hi using typescript make application everything seemed fine separated module parts component like masterlayoutcomponentts masterlayoutcomponenthtml actually component combined one file ran smoothly want separate module parts future code longer longer therefore hard track issue available ran application changing code like one error thrown using runtimeonly build vue template compiler available either precompile templates render functions use compilerincluded build anyone help thanks hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank still use file entry point component include script tag attribute pointing separated script file', 'date': '2018-09-29T08:42:31Z'}"
"33233",33232,"{'data': '大幅度 aaa 的 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-09-29T05:02:55Z'}"
"33234",33233,"{'data': 'watch unicode properties like a中文 version reproduction link steps reproduce project vue component instance vue property instance watch properties instance show error watcher accepts simple dotdelimited paths expected error code run continue actually happening code seems stopped run next time take time add repro added use chinese key use chinese key nonstandard strongly recommend use latin characters english words key cases still need use chinese characters keys username keyvalue pairs', 'date': '2018-09-29T03:00:57Z'}"
"33235",33234,"{'data': 'optional chaining error babel version reproduction link steps reproduce use optional chaining operator template user id expected output users id template blank undefined actually happening invalid expression unexpected token n user id n raw expression user id optional chaining works fine script section sfc vue component work template section reference nuxtjs project stock settings babel optional chaining plugin version actually vue babel actually used intemplate strings see sure anything changed regarding', 'date': '2018-09-28T19:45:53Z'}"
"33236",33235,"{'data': 'filter allows mutation state version reproduction link steps reproduce look value rendered expected expected filters pure functions allowed mutate state way actually happening state mutated reference reactive property passed breaks conceptual model filters pure functions people use filters way transforming displayed without mutating actual underlying state would good safeguard potential bugsmisuse filters make filters pure functions prevent said filter provided pure function', 'date': '2018-09-28T17:08:28Z'}"
"33237",33236,"{'data': 'add api create onetime watcher easily problem feature solve assume component need something async state gets data means component nt need state changes help achieve problem vue fires callback fast code like nt work defined function time guess block finished callback fired live demo sure ways avoid problem think better delay callback execution bit add new api work proposed api look like behaves like normal automatically unwatch callback fired think modifier events unwatching nexttick also work use btw', 'date': '2018-09-28T09:49:31Z'}"
"33238",33237,"{'data': 'vuejs接入的saucelabs最近为啥看不到浏览器兼容性了 version reproduction link steps reproduce expected 期望看到浏览器的兼容性测试结果 actually happening 期望看到浏览器的兼容性测试结果 thanks interest looks like working saucelabs maybe updating generation svgs thank much', 'date': '2018-09-28T09:23:48Z'}"
"33239",33238,"{'data': 'saucelab为啥不能显示浏览器的兼容性了 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-09-28T09:17:18Z'}"
"33240",33239,"{'data': 'trigger without corresponding vifvshow component mounting problem feature solve without corresponding component template root never triggered may design confusing component template root get triggered component mounted proposed api look like following modal template mounteddestroyed dynamic classes applied correctly inner slideup effect never triggered propose including inner ones associated etc triggered component mounting amp destroy html currently using following workaround parent calling method via listening destroying modal javascript export default data return show false mounted thisshow true methods close thisshow false nexttick gt emit close adding fix problem use nested transition info docs nested apply transition classes node leaves dom would seem indicated docs default use transitions specified entering leaving mean bug understanding use appear render dom first time already visible leaving nested transitions make sure durations applied correctly take stackoverflow sandbox showing mean transition classes applied inner properly entering leaving', 'date': '2018-09-28T04:26:20Z'}"
"33241",33240,"{'data': 'check tag already windowcustomelements registry top checking config ignoredelements problem feature solve vue mounting function called checks among others whether element tag list context app uses multiple web components nt want manually add every new component tag list maintaining list could quickly become headache also checks custom elements registry could figure element question necessarily unknown proposed api look like api would stay top checking function would also check defined defined return false happy submit pull request wanted discuss first make sure nt design constraints adding something like', 'date': '2018-09-27T19:13:16Z'}"
"33242",33241,"{'data': 'error load vue vue thanks hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank vue changed syntax please read documentation first thanks', 'date': '2018-09-27T13:21:16Z'}"
"33243",33242,"{'data': 'ca nt capture dot keypress version reproduction link steps reproduce open chrome press prompt alert firefox nt firefox supported browser probably drop support future check file set custom keycodes need make least work chrome directives ca nt use modifier directive like one could think somehow capture key described documentation automatic key modifiers however ca nt vue uses instead think using step right direction however using keyboardeventkey instead keyboardeventcode open whole ordeal problems like issue check online viewer vs check tried capture key documentation regarding keyboardeventcode expected key captured actually happening key captured keycode works fine firefox fixed seems solve problem thanks still think lean towards may easier use less error prone posva could communicate feature request create another issue maybe make tye code using version works ie yes mean still support keycodes part automatic key modifiers use instead due reasoning explained', 'date': '2018-09-27T11:58:35Z'}"
"33244",33243,"{'data': 'wather 在严格模式下 的问题 version reproduction link steps reproduce expected slove problem actually happening 在ie 浏览器下 hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow', 'date': '2018-09-27T06:51:10Z'}"
"33245",33244,"{'data': 'reset computed data base state version reproduction link steps reproduce want reset rolelist data everytime user change role expected select change reset rolelist actually happening resetting rolelist data bug getter needs touch vue knows track dependency try also mutation nt changing value sirlancelot want achieve user change anything rolelist go another role changes reset go back original data right change anything also change storestate dont want preserve original data need deep clone please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug', 'date': '2018-09-27T01:33:27Z'}"
"33246",33245,"{'data': 'error render axios get rest hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 error axios vue', 'date': '2018-09-26T22:08:56Z'}"
"33247",33246,"{'data': 'invalid expression unexpected identifier vue js finding problem sending compact data controller vue component props code blade file projects also tried jsonencode projects still working code component props projects created error invalid expression unexpected identifier id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat raw expression projects id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-26T07:56:41Z'}"
"33248",33247,"{'data': 'invalid expression unexpected identifier vue js finding problem sending compact data controller vue component props code blade file projects also tried jsonencode projects still working code component export default data return props projects created consolelog created consolelog thisprojects mounted consolelog thisprojects consolelog hot job mounted yeah vue warn error compiling template invalid expression unexpected identifier id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working lt span categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat raw expression projects id title pro app deadline description pro blah blah blah categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat id title test deadline description please confirm want use artomate email address done able start hire working lt span categorieid subcategorieid budgettypeid currencieid budgetid min max userid freelancerid null amount null deposit workhours null level countryid likes active createdat updatedat found hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank taking', 'date': '2018-09-26T07:44:31Z'}"
"33249",33248,"{'data': '相同的两个组件在使用vif 切换时不会触发destroy 的hook version reproduction link steps reproduce 相同的两个组件在使用vif 切换时不会触发destroy expected actually happening 相同的两个组件在使用vif 切换时不会触发destroy 的hook 添加唯一', 'date': '2018-09-26T01:37:37Z'}"
"33250",33249,"{'data': 'hook nt work case set version component diff nt hook demo hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-26T01:32:32Z'}"
"33251",33250,"{'data': 'overriding binded prop hypenated syntax instead camelcase working version reproduction link steps reproduce create two child components prop camelcase bind props first child second try override camelcase prop hypenated syntax first child second expected prop override correctly actually happening prop keep parent value meet issue camelcase coding stye eslint vuerecommended throw error prop hypenated sandbox seems working expected expected result sandbox show props overrided one really overrided expected result two props overrided showing working maybe normal behavior vue currently said bug someone code camelcase use eslint vuerecommended sorry bad fast copy pasting sandbox sandbox really show mean', 'date': '2018-09-25T14:58:03Z'}"
"33252",33251,"{'data': 'deep selector broken production mode version reproduction link sorry busy build issue needed provide repo weekend probably nt need steps reproduce although maybe bug seems vueloader exactly maybe angular use familiar relays work since vueloader repo seems active report let users could find already many issues deep selector think wo nt offensive vueloader depends could process deep selector needs exactly process css correctly production mode result css processed wrong syntax considered combinator process combinator flag production default development result ie ie deep ie needs space combinator production mode deep selectors wo nt work production mode imo maybe right combinators usually combinators still work even space hand feature used vue rather pure css nt consider passable expected actually happening versions less vueloader fyi deep selector part vueloader please wait repro open issue posva please read description close answered questions fyi deep selector part vueloader although maybe lessjs bug seems vueloader exactly vuecomponentcompilerutils maybe angular use familiar relays work since vueloader repo seems active report let users could find already many issues deep selector think wo nt offensive please wait repro open issue sorry busy build issue needed provide repo weekend probably nt need probably nt need bold imply necessary provide demo give wrong code chain already shows one line let create repo clone run show whether terminal sounds ridiculous rule convenient maintain repos also say needed based read links give rather close always provide repro exceptions busy', 'date': '2018-09-25T10:48:13Z'}"
"33253",33252,"{'data': 'comes error using key data props version reproduction link online example steps reproduce expected acts actually happening use key data props comes error invalid expression unexpected token raw expression vmodel invalid expression unexpected token n n raw expression found use instead ok makes confused key work makes different reserved keyword js nt still work though kaelwd said see language specification ok see think also key es cause thx', 'date': '2018-09-25T07:27:20Z'}"
"33254",33253,"{'data': 'comes error using key data props version use instead ok makes confused key work makes different hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-25T07:21:25Z'}"
"33255",33254,"{'data': 'chrome dom element updating safari fine version reproduction link steps reproduce repro shows fully functional version sure show repro application updating properly chrome expected reactive properties updating expected actually happening fields updating chrome browser updates properly safari setting selectedmessage vuex store mutation simple mutation properties update reactivity nt work properly fields dom chrome loaded safari fields update expected works correctly chrome would advise go forum discord server details may something full code causing problem', 'date': '2018-09-24T23:14:52Z'}"
"33256",33255,"{'data': 'multiple root nodes returned render function error functional component version reproduction link steps reproduce open reproduction link look js console expected multiple root elements functional components actually happening multiple root nodes returned render function render function return single root node error console nothing render according functional component way go need one root element functional component way go need one root element yes still ca nt multiple root elements regular component provided example order fix wrap template app single div error disappear sure understand one root element template test becomes two elements ah see problematic since whole point avoid extra wrap break template functional component one solutions proposed issue locked solution third party library use undocumented attributes hacky according author throw error try import', 'date': '2018-09-24T19:54:18Z'}"
"33257",33256,"{'data': 'suggestion allow multiple names named slot problem feature solve flexibility using slots could allow slot take multiple variations name example pass one names slot render workaround use currently adding following code method would great could done automatically proposed api look like current use code multiple possible names nt look like good idea use case reason lot libraries provide multiple aliases functions allows easier use certain applications specific use case building piece much larger app consumed casebycase basis particular slot name commonly used various ways sometimes abbreviated sometimes sometimes dropped word imho essential keep consistent vocabulary across whole team especially larger apps let collaborators refer slot different names nt seem good practice think wo nt accept thanks agree justineo also main concern aight disagree nt good practice every application figured would ask thanks', 'date': '2018-09-24T19:21:38Z'}"
"33258",33257,"{'data': 'setinterval interferes selecting option version reproduction link steps reproduce load page select option list time selection fail due timer interference expected selection work normal actually happening selection work fires around time setinterval timer fires mmh due rendering works want prevent select rendered therefore get updated value selected put component problem select element wo nt fire event mouse button released element replaced mouse pressed wo nt work fix would prevent replacing select element middle template possible understand point replacing solving problem nt vmodel supposed sugar syntax components reason working binding selected value select issue appear seems odd whole template redrawn rather affected parts presumably good reason', 'date': '2018-09-24T18:41:12Z'}"
"33259",33258,"{'data': 'vue running firefox version reproduction link steps reproduce google chrome works fine fire fox get error typeerror undefined constructor learn nothin display screen expected app shows normaly actually happening get error nothing display upload mainjs packagejson name chatbotmariana description vuejs project version author ranieri abreu silva junior rabreu indracompanycom license mit private true scripts dev crossenv nodeenvdevelopment webpackdevserver open hot build crossenv nodeenvproduction webpack progress hidemodules prod crossenv nodeenvdevelopment webpackdevserver port hot host dependencies axios compression expressminify jquery popperjs vue vueresource vuerouter browserslist gt last versions ie lt devdependencies babelcore babelloader babelpresetenv crossenv cssloader fileloader vueloader vuetemplatecompiler webpack webpackdevserver im using javascript dont tsconfig hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow', 'date': '2018-09-24T14:52:59Z'}"
"33260",33259,"{'data': 'vue instance events object ids problem feature solve currently object contains event names keys arrays listeners values let say listen event emitted also listens event would good pass also unique ids user call smth like inside hook unsubscribe events listens saves subscriptions proposed api look like save functionality would happily help implementation even though vue used event bus one require flexible implementation bus use many packages even create posva agree followed advice created plugin slightlysmilingface hope helps someone helped', 'date': '2018-09-24T14:11:30Z'}"
"33261",33260,"{'data': 'duplicate keys detected warned version reproduction link steps reproduce check reproduction url expected duplicate keys detected warned actually happening duplicate keys detected warned addvnodes called vnodes key warned hi may try make improvement first contribution already situations duplicated keys warning would helped course nobody working added pull request new test case solution', 'date': '2018-09-24T07:22:52Z'}"
"33262",33261,"{'data': 'using multiple selects vmodel bound unbound values causes value overriding version reproduction link steps reproduce change first select change newly displayed select see set bound vals select instead values change first select use number modifier vmodel exchange bound number values strings fix issue least specific desired effect fix problem either using vbind value values using nonbound values values far tell mix cause override bug expected different values variable actually happening second variable overwritten first value posteddiscussed discord chat said discord really bug related vue reusing dom elements rerendering state changes particular case select first two options reused reason ok might small bug remain bound initial values two ways fix bind values second select use distinct key explicitly tell vue reuse use key attr perfect solution thank', 'date': '2018-09-24T00:06:46Z'}"
"33263",33262,"{'data': 'ssr escape raw nodes problem feature solve rendering script tag server content escaped breaking js code html var x rendered html var x quot quot proposed api look like solution would allow users define escaped override map option disable escaping et thanks components include script tags even vue errorwarning talking something else could please provide small repro using vue ssr without intention hidrate surely use scripts styles templates see condition error appear repro mmh true added thanks turns even disable escaping entirely still escapes quotes script html var x var something rendered like html var x amp quot amp quot var amp quot something amp quot guys thank help really appreciate pls note little next knowledge programming coding anyways sw code something cut paste share thanks nbaules get outlook ios slee woo sent tuesday september pm vuejsvue cc ngerikl baules manual subject vuejsvue ssr escape raw nodes var x var something rendered like var x amp quot amp quot var amp quot something amp quot receiving subscribed thread reply email directly view github mute thread time replacing disable escaping render valid script', 'date': '2018-09-23T18:47:32Z'}"
"33264",33263,"{'data': 'async rendering vue problem feature solve vue world like react world proposed api look like unfortunately features added full rewrite would require huge changes vue could even lead breaking changes something considered next major version thought', 'date': '2018-09-23T15:16:00Z'}"
"33265",33264,"{'data': 'css children selector nt work elements slot component root slot root gt position absolute position absolute nt work see deep selectors', 'date': '2018-09-23T14:36:29Z'}"
"33266",33265,"{'data': 'vfor iterating velse version reproduction link steps reproduce add element velse sibling vif condition evaluates falsy iteration happens element expected vfor iterate velse actually happening vfor iterating velse thank read linter trouble producing result need understand vfor happening first vifvelse happens per iteration wanted share scenario vforvif combination yielded particularly unexpected behavior vfor would applied velse element working expected consistent vif applied vfor clear bug reporting nt vfor happening vif vfor applied code outside iteration happening expected behavior style guide explains avoided actual render function example looks actual behaviour expected thanks behaviour answer issue expected order checks render render order starts iterating says checks render render pair happens times even confusing behaviour would introduced referencing last one iterated outside iteration imagine something yeah writing gives headache someone wrote style guide must experienced vif first would nt able use current item vfor confused disputing happen fine vif velse even confusing behaviour would introduced velse referencing last one iterated vif outside iteration imagine vif something actually think would less confusing since nt syntactically referencing element probably require syntax like supported admit confusing perhaps confusion resolved mutual exclusivity enforced vue', 'date': '2018-09-22T04:05:32Z'}"
"33267",33266,"{'data': 'nondeterministic css ordering extracted css ssr app version reproduction link steps reproduce reproduction steps outlined readme github repo expected development production builds extracted css stylesheets loaded deterministic order believe reading various semirelated github issues order corresponds import order via webpack case ssr well would expect order since file loaded statically loaded dynamically via routes order either way would expect global styles always loaded first followed dynamicroute styles allowing proper cascade actually happening think two issues play primary issue development mode file incorrectly loaded file breaking cascade contents secondary issue production mode file properly loaded first loaded prior even though imported reverse order even ssring home page additional notes trying determine feels like optimal solution think options loose descending order optimal likely increasing order feasibility global styles root component would always loaded first followed styles component matched current route additional routespecific styles would loaded demand routing understand likely beyond scope bundle renderer potentially something implemented application global styles root component would always loaded first followed styles current routecomponent followed styles additional routecomponents global styles root component would always loaded first followed styles routelevel components importorder ie routedeclaration order also worth noting specific scenario larger app slightly different nt able quite reproduce exactly minimal repo quite sure specific app case dynamic routes defined order home page page development mode stylesheets included order app home production mode stylesheets included order home app demo repo production build correct insofar nt break cascade either route development build incorrect one routes actual app development mode breaks cascade route production build breaks routes think workaround available moment set bundle renderer manually insert template proper order reading client manifest assume even using would result ordering issues', 'date': '2018-09-21T21:47:10Z'}"
"33268",33267,"{'data': 'sync async component registration issue try register sync async components common folder like vuecomponents componentname vue vuecomponent componentname componentconfigdefault componentconfig let componentname asynccomponents vuecomponent componentname gt import new vue el app got error img split components folders works fine vuecomponentssynccomponents componentname vue vuecomponent componentname componentconfigdefault componentconfig let componentname asynccomponents vuecomponent componentname gt import hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-21T14:55:19Z'}"
"33269",33268,"{'data': 'different functional componens key version reproduction link steps reproduce create create render app expected everything works fine actually happening vue warns key create components render function directly works fine without duplicated keys keys situation export default functional true render createelement return createelement div staticclass createelement div staticclass b first createelement div staticclass b component image shows difference vnode objects moreover looks likes works fine vue template exporer go crazy try compile', 'date': '2018-09-21T10:36:22Z'}"
"33270",33269,"{'data': 'closed current window problem feature solve windowopener null windowopen self windowclose proposed api look like windowopener null windowopen self windowclose code isnot useful dom api nothing vue gt method allowed called windows opened script using windowopen method', 'date': '2018-09-21T03:21:26Z'}"
"33271",33270,"{'data': 'closed current hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 windowopener null windowopen self windowclose', 'date': '2018-09-21T02:44:40Z'}"
"33272",33271,"{'data': 'inactive keepalive component keeps updating bound nested properties version reproduction link steps reproduce press hide labels open dev tools select doesupdate component press add stuff expected remains actually happening goes component doesntupdate nt update add stuff expected bound property top level nt dev tools issue observe behavior devtools disabled anything', 'date': '2018-09-21T00:06:46Z'}"
"33273",33272,"{'data': 'computed property selectmany already defined data version reproduction link steps reproduce defined following instance new vue objectprototypeselectmany function get found warn initcomputed expected warning actually happening warning console defining things prototype dangerous thing pretty much everything object js means every single object data computed collision comes nt add things prototype object really avoided cost js project', 'date': '2018-09-20T20:37:54Z'}"
"33274",33273,"{'data': '开发利器 parcel watch indexhtml vuecli 出来后 npm run serve 无法生成 dist 文件夹中的内容 使用 parcel watch indexhtml 完美解决 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-09-20T09:03:17Z'}"
"33275",33274,"{'data': 'vuedirectivethe element instruction binding data update upload also triggers bind two different elements different instructions vhello vworld find vhello vworld hook functions upload triggered template updated think binding element upload trigger elements bound instruction hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank vworld hook functions using function syntax object function first one behavior correct called directive bound element also every time component updated explained docs thank answer problem vhello vword instructions update data elements bound respective elements triggering update hook function vhello vword instructions think called template bound element updated chenrenxing provide reproduction issue afraid nt quite understand problem sqal first thank click change event trigger nt think hook function alert update vworld vhello instructions triggered chenrenxing triggered click button change property value changed trigger update component template let see documenttion says directive update hook update called containing component vnode updated possibly children updated see code works expected notice click button second time hooks called nt changed therefore vue nt need rerender component', 'date': '2018-09-20T01:57:19Z'}"
"33276",33275,"{'data': 'prevent props update child parent assing model value props parent child component model parse assing child change value also change parent please help prevent update parent model value hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-19T10:49:32Z'}"
"33277",33276,"{'data': 'update value renderless component vmodel version reproduction link steps reproduce declare renderless b stateless custom components put b see reproduction link expected update scoped slot component actually happening updated plain html custom component problem computed props component use getters setters might problem custom components nt always use input event sometimes update sometimes select etc use hoc approach modify value coming slotscope parent could property object nt either read property remember using somewhere js generated statement similar would nt work scopedslot creating kind local variables exactly like', 'date': '2018-09-19T07:28:08Z'}"
"33278",33277,"{'data': 'click event trigged twice situation version reproduction link steps reproduce click text hello expected click event handleclick triggered twice see console log message becomes hello add add actually happening click event run fyi add attribute label click event triggered native dom works', 'date': '2018-09-19T06:59:44Z'}"
"33279",33278,"{'data': 'vue support clone method instance problem feature solve hello develop vue project using cdn link build way wan na know clone vm instance attribute data store router new vm instance change vm instance data invoke vm instance method push vm content router new page never change origin one wan na clone new vm instance current state without dom render question vm instance data setter method vuex dispatch maybe clone method without dom refs mounted method care data proposed api look like var vm new vue running moment dont wan na change data crt vm instance change data effect render question make clone method var newvm vmclone withoutdom true newvm datatabledata newvm datainvokerequestdata except read route instance store instance respectively copy data one instance put new vue instance trying clear ask go forum discord server ask questions first need come back elaborated feature request regarding usecase right clear posva sorry stupid issue noticed next time stupid issue missing information feature request', 'date': '2018-09-19T03:21:19Z'}"
"33280",33279,"{'data': 'accessing data functions passed parent causes list siblings recompute version reproduction link steps reproduce click button expected computedvalue recalculated changed list element look console logs see slightly modified fiddle expected behavior using accessor actually happening computedvalue elements recalculated reproduction link computed property two dependencies modified link computed property one dependency always changed component updated workaround use instead function expressions inline function one recreated every time template renders therefore prop changes computed property needs evaluated every component hcysunyang suggested method would make work similar thing happens plain objects since function created inside function template compiled hoist prevent makes sense solution works thanks', 'date': '2018-09-19T01:58:50Z'}"
"33281",33280,"{'data': 'vueserverrenderer webpack deprecation warning plugins problem feature solve webpack deprecation warning tapableplugin deprecated proposed api look like change compilerplugin compilerhooks hookname support new tappable syntax question preferred way support new syntax leaving webpack compatibility already fixed vuejsvue land master part vue ok thanks', 'date': '2018-09-18T19:47:07Z'}"
"33282",33281,"{'data': 'disable observing components hidden vshow problem feature solve app several nontrivial component blocks one constantly updating lot inner components app dynamic moment time one block must visible nt think using good idea case recreating blocks rather expensive decided use instead noticed inner components still updated every block even hidden even worse updates computational heavy app basically wasting cpu clocks updating hidden elements simplified example js number number js var vm new vue el test data number visible true setinterval function vmnumber still updated even proposed api look like either make behavior default add attribute control something like use', 'date': '2018-09-18T01:00:18Z'}"
"33283",33282,"{'data': 'vue router lost meta config version reproduction link steps reproduce install vue install vuerouter define router meta info define beforeeach callback tometa empty object expected tometa current definition object actually happening empty object beforerouteenter hook trigger typo reproduction link', 'date': '2018-09-17T14:00:38Z'}"
"33284",33283,"{'data': 'html entities attributes always decoded string templates version reproduction link steps reproduce try dynamically load input field value contains encoded single quote plain html normally input field display single quote input box however vue shows input box tested multiple encoded chars everything works correctly except single quote stated hcysunyang entities except listed issue expected single quote shown input field loaded async vue actually happening show input field loaded async vue related whether component asynchronous nonasynchronous components also problem vue htmlparser process following entity content added map update right also eacute example nt work manually entities correctly converted fixed would better use something like package actually vue already using nodejs compiletime ssr leveraging dom api browser side perform entity decoding seems attribute values decoded using mentioned sure intentional miss', 'date': '2018-09-17T08:57:57Z'}"
"33285",33284,"{'data': 'el property problem feature solve var app new vue el app el property impossible understand intuitively means novice developer vue opinion much readable call property element etc proposed api look like var app new vue element app change api read documentation understand means', 'date': '2018-09-17T07:14:45Z'}"
"33286",33285,"{'data': 'vue version reproduction link steps reproduce ok bug expected actually happening svg casesensitive need use kaelwd said use instead fix problem works', 'date': '2018-09-17T01:31:09Z'}"
"33287",33286,"{'data': 'vue computed problem feature solve consolelog thisshophischange thiscurmemberid undefined proposed api look like computed showshopbasicform consolelog consolelog thisshophischange consolelog thiscurmemberid consolelog thisshophischange thiscurmemberid consolelog return thisshophischange thiscurmemberid result ob observer buyerprotection chanyedai chanyedailist array chanyedaimap cx ob observer value dep dep vmcount proto object undefined undefined', 'date': '2018-09-17T00:52:35Z'}"
"33288",33287,"{'data': 'vtext available slots version reproduction link steps reproduce hi according docs dom result however trying build component like running problem works added slots collection using creates problem added slots collection sure whether intended best way solving guessing could check innertexthtml element hoping better way expected behaviour described documentation actually happening expected result behaviour slightly different one indeed setting element property modify text check', 'date': '2018-09-15T23:37:56Z'}"
"33289",33288,"{'data': 'vtext available slots hi according docs dom result however trying build component like running problem works added slots collection using creates problem added slots collection sure whether intended best way solving guessing could check innertexthtml element hoping better way sorry using issue helper nt able reproduce entire environment using codesandboxcodepen hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-15T23:28:54Z'}"
"33290",33289,"{'data': 'refs type definition include try refer nonexisting ref vue', 'date': '2018-09-15T14:13:18Z'}"
"33291",33290,"{'data': 'listeners include input listener attrs nt include value prop version reproduction link steps reproduce open codepen url open console expected attrs listeners actually happening attrs listeners declared prop component duplicate', 'date': '2018-09-14T16:47:15Z'}"
"33292",33291,"{'data': 'vuex actions mutations update state vuex action mutation modify state state different api asynchronous operations also performed mutation hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-14T08:19:55Z'}"
"33293",33292,"{'data': 'uncaught syntaxerror unexpected identifier version reproduction link steps reproduce using vuecli created project occur uncaught syntaxerror unexpected identifier create vue project vuecli npm run serve open chrome devtools see webpack srcmainjs routerjs storejs file first line import vue vue throw error uncaught syntaxerror unexpected identifier project running well packagejson dependencies devdependencies expected fix error actually happening uncaught syntaxerror unexpected identifier looks like nt know make sure date tools node npm create project vuecli run work fine problem vuecli go fix codepen empty please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug', 'date': '2018-09-14T07:00:54Z'}"
"33294",33293,"{'data': 'problem passing data vue component using sync version reproduction link steps reproduce pass json data html attribute component using sync expected data available prop used actually happening json gets distorted console throws error trying pass data laravel blade view vue component using sync make prop reactive however work passing json static data work using vbindsync literal object vbindsync title doctitle work many edge cases consider parsing complex expression like simple data object like vbindsync mail test gmaicom would also falling criteria guess case get prop reactive best practice would reassign data object within created method reactive data object like thanks pass object reactive pass makes sense however passing data laravel blade template vue js logic compiled external js files loaded client side passing data directly data like wo nt work case need go longer route via passing data attribute html component reactive another option instead reassigning data created method would assign data within blade template window object reassign data like blade template js file however feel like clean approach need put data mrjingles case suggest using regular events instead another way event javoski thanks input try till thought sync syntactic sugar update event gt till thought sync syntactic sugar update event exactly something like hmm ok seems choice choose one suggested approaches either reassign data object within created method assign globally window object within blade template reassign vue component thanks input', 'date': '2018-09-14T06:32:44Z'}"
"33295",33294,"{'data': 'ie firefox destroy 不能解决 hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-09-14T05:53:55Z'}"
"33296",33295,"{'data': 'pass wrapped computed vmodel version reproduction link steps reproduce want reorder array use generate form called formconfig since use computed params vmodel work subcomponents original input solution expected comupted pass vmodel actually happening computed passed vmodel design way made code work expected tip use get set computed properties may made multiple attributes example person name consists first name last name bound vmodel split new value first name last name input value changes option initialized option could nt access computed properties inside option explain first group using vmodel computed work well jsvoski try made formconfig computed still working anyway fixed issue please see code change way use origin setter getter computer missing', 'date': '2018-09-14T04:10:23Z'}"
"33297",33296,"{'data': 'optout servercachekey problem feature solve able decide runtime component cached server example reusable imageviewer component want cached certain use cases would preferred able return undefined servercachekey function know component wo nt cached currently would cached name would collide uses component also returned undefined proposed api look like api existing servercachekey takes props object allow returning undefined indicate skip looking component server renderer cache even component name think explicit rather undefined makes sense also look like invalid key sounds good looking way conditionally prevent caching', 'date': '2018-09-12T21:13:39Z'}"
"33298",33297,"{'data': 'read file without extension copied root file hi everyone developing project using issue following trying implement universal links ios devices apple requires json file named without extension places root level used copy file root level working fine issue comes trying access file head nothing happens rename file add extension see properly reference head see facebook file fine opinions ideas thanks hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-12T14:42:26Z'}"
"33299",33298,"{'data': 'want add two hooks problem feature solve want add two hooks show hide happens current page displayed window focus window behind current display window window blur calls two methods current component proposed api look like implemented userland little effort wo nt add api encourage ask help forum stack overflow discord chat happy help', 'date': '2018-09-12T12:31:38Z'}"
"33300",33299,"{'data': 'vif work version reproduction link steps reproduce define element template vif false gt set vif reference data computed property returns false template contents rendered even though skipped workaround put vif within expected per template contents rendered actually happening template contents rendered found problem toplevel vue component vue file jsfiddle shows happens reproduction link malformed html needs inside root element oh sorry fixed problem still exists putting outside root element vue app mhldtna nt look like link updated case still works html toggle message', 'date': '2018-09-11T21:48:53Z'}"
"33301",33300,"{'data': 'vbind class nt support class name hyphen version reproduction link steps reproduce create vbind class class name contain hyphen example vbind class blahactive isactive vue fail accept blahactive valid class name change blahactive remove hyphen works expected hyphen acceptable part class name needs documented since html supports hyphen class name vue support actually happening vue nt support class names hyphen javascript objects works object key contain hyphenspace unless inside quotes paste chrome console get syntaxerror', 'date': '2018-09-11T19:43:02Z'}"
"33302",33301,"{'data': 'race condition transitiongroup version reproduction link steps reproduce click add button expected animation work properly animation classes cleaned actually happening enter animation nt work new item element keeps class forever style tag binding triggers second rerender transitiongroup component transitiongroup setting entering new child triggering callback updated include new item calls pending callback triggers called wo nt called class remain element happens transitiongroup move transition bug also occurs elements changed happening however happening trying transition property property works expected strange nt matter transitioning important thing move class transition', 'date': '2018-09-11T17:10:11Z'}"
"33303",33302,"{'data': 'oddity js transition hooks used combination css version reproduction link steps reproduce remove unused parameter callback signature expected component transition enter leave actually happening component enters immediately without transitioning callback nt needed transition duration implicit css noted docs however retaining parameter function signature unclear work since unused within function definition unclear css transition nt triggering however transition seems using leave using enter try changing durations thanks pointing issue posva apologies finding right transitioncb concern fluke discovered unused arg points cue provided solution suspected relevance stepping code noticed trick defined transition util file utilised transition module nests call remove transition class wondered timing issue since happens asynchronously user defined callback leads alternative appropriate solution thiswidth px enter el windowrequestanimationframe gt windowrequestanimationframe gt elstylemarginleft null leave el elstylemarginleft code brittle since arguably reliant happening internally suggest user defined hooks actually run within cb else dom change hook appears actually paint hence transition never occurs area code relevance', 'date': '2018-09-11T17:07:24Z'}"
"33304",33303,"{'data': 'recursive components make sure provide name option name provided components version reproduction link steps reproduce run code expected error actually happening shows error console hi use vue components following error unknown custom element register component correctly recursive components make sure provide name option component however provided names components sample fiddle reproduce error open developer console see error small difference fiddle code use vue components import relatively add components fields components import commentslist commentslistvue export default name comments components commentslist import commentslist commentslistvue export default name comment components commentslist import comment commentvue export default name commentslist components comment components depend sure right approach pretty sure saw documented maybe using dynamic import one components cc chrisvfritz gt register component correctly first argument must string go posva thanks lot kaelwd first argument vuecomponent must string make example nt use vuecomponent use modules webpack yeah kinda glossed bit lol still error repro though codesandbox usually better multicomponent examples like especially something caused webpack', 'date': '2018-09-11T11:14:08Z'}"
"33305",33304,"{'data': 'recursive components make sure provide name option name provided components hi use vue components following error unknown custom element register component correctly recursive components make sure provide name option component however provided names components sample fiddle reproduce error open developer console see error small difference fiddle code use vue components import relatively add components fields components import commentslist commentslistvue export default name comments components commentslist import commentslist commentslistvue export default name comment components commentslist import comment commentvue export default name commentslist components comment hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-11T11:10:38Z'}"
"33306",33305,"{'data': 'improve prop api problem feature solve allows add possible values prop generate default validation functions parts component api used generate component docs proposed api look like pretty trivial mixins edit updated minmax single value would achievable userland helper functions passed validator also see', 'date': '2018-09-11T08:04:18Z'}"
"33307",33306,"{'data': 'support destructuring assignment component properties special attribute problem feature solve like function definitions available component props grow time leading calls like individual component layout literal simple attribute values fine clear intent unused props suitable defaults warn required etc however component used loop often turn bunch yakshaving developer basically destructuring iterated item hand individual attribute bindings tiresome errorprone forgetting colon interpreted values swapped values bad pascaltokebab conversions etc verbose made two errors way current alternative developers use parameter type object catchall properties easily create maintain component instances alternative propose special magic attribute designated maybe props attribute bound object vue unpack properties object assign respective samenamed props proposed api look like proposed special attribute two examples would equivalent ones javascript see using form literal attribute values individual component would silly vast improvement desired attributes component already match available object using spread operator would even easy tweak object add attributes example would equivalent javascript want use form incoming state object nt match component interface problem use computed value map state component properties beauty similar situations places application make mixin encapsulating logic component interface backing data mapping needs change need adjust one place code markup every page used component notes collision explicitlydefined attribute key value propose attribute override object keys value matching attribute name would ignored would require changes components would unaware attribute would see incoming properties since nt use jsx nt know option would useful terrible neutral developers precedent magic nondirective attributes key various slotrelated attributes etc serious concern collisions actual components wild using prop called props imagine two solutions bypass functionality component prop named props choose another candidate less likely create compatibility issues perhaps vprops suspect would syntactic sugar template compiler since compiler would nt know keys expect vue seems work fine also use plain passing values component want cherrypick properties vue vbind object well embarrassing either totally missed docs completely forgot thanks', 'date': '2018-09-10T22:59:37Z'}"
"33308",33307,"{'data': 'vmodel 数据绑定错误 version reproduction link steps reproduce 在一个页面有多个 vmodel 表单的另外一个值会置空 比如 obja null b null vmodel objaa vmodel objab 第一个值会置空 expected 改完一个值后不影响另外一个值 actually happening 改完第一个值后第二个值会置空 请提供可以运行的 demo 发现是我本地调试错了', 'date': '2018-09-10T07:53:15Z'}"
"33309",33308,"{'data': 'array data remains one component disappears another component type shows version reproduction link steps reproduce click elements list click show second button click elements upper list click show first button expected upper list contain elements clicking first button elements second button nothing bottom list actually happening bottom list remains click another button see vue nt call mounted one component disappears second shows expected vue reuse components case use attribute least one force vue reuse', 'date': '2018-09-10T00:06:26Z'}"
"33310",33309,"{'data': 'different template different enviorment problem feature solve different template different enviorment proposed api look like hello want build web app mobile app android ios want use component platform need different template different environment like possible different way implement see also implement components putting logic mixins importing different components based environment variable mycomponent folder mycomponentmobilevue mycomponentwebvue indexjs takes right component adds common logic export share code try use ca nt helloworldindexts repo show', 'date': '2018-09-08T15:22:26Z'}"
"33311",33310,"{'data': 'different template different enviorment hello want build web app mobile app android ios want use component platform need different template different environment like possible different way implement hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-08T06:22:53Z'}"
"33312",33311,"{'data': 'hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-09-07T13:15:35Z'}"
"33313",33312,"{'data': 'strange behaviour concerning scripttag version reproduction link steps reproduce include scripttag type applicationjavascript inside vueactivated tag expected probably error like error compiling template templates responsible mapping state ui avoid placing tags sideeffects templates', 'date': '2018-09-07T10:16:20Z'}"
"33314",33313,"{'data': 'change data javascript devtool connected data binding version reproduction link steps reproduce code explain expected message variable change actually happening nothing template interpolation vue twoway binding', 'date': '2018-09-06T15:13:48Z'}"
"33315",33314,"{'data': '添加指令缓存自定义数据到元素dataset中 problem feature solve proposed api look like 希望尤大能看到给点意见', 'date': '2018-09-06T14:21:46Z'}"
"33316",33315,"{'data': 'document mentioned must define component name use vue file problem feature solve proposed api look like please add document must define component name vue file nested use typescript proname import vue vue import component vueclasscomponent component name tree must defined props pro object export default class tree extends vue documentation nt think circular references components self referenceed js proname import vue vue import component vueclasscomponent component name tree must defined props pro object export default class tree extends vue two component circular reference turely one component use self link points recursive components circular references components get thank patience', 'date': '2018-09-06T13:51:10Z'}"
"33317",33316,"{'data': 'doument mentioned must define component name vue self contained thing found hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank maybe link piece component name section would helpful open issue documentation repo', 'date': '2018-09-06T13:44:26Z'}"
"33318",33317,"{'data': 'possible nt rerender dom ssr client side problem feature solve best performance proposed api look like nothing need change hey time please use forum discord server stackoverflow questions guess could include vue something similar time sorry found questions topic suggest', 'date': '2018-09-06T08:34:18Z'}"
"33319",33318,"{'data': 'mixin data nt available render version reproduction link steps reproduce see jsfiddle expected actually happening got got console error like bllow vue warn property method mixinvar defined instance referenced render make sure property reactive either data option classbased components initializing property see found expected see properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty found remove available found lines guile think nt rule conflict conflict style guide still able use prefixed reactive property via', 'date': '2018-09-06T04:52:33Z'}"
"33320",33319,"{'data': 'allow arrayobject binding specific related attributes problem feature solve docs state special functionality really useful class style often references things exact usecase applies lot attributes involved semantic accessible markup instance attribute accepts list ids must correct spacing compatible screenreaders list often dynamic often controlled externally would potentially need combined local describedby coming externally works describedby boolean would evaluated separately avoid printing false essentially rebuild whatever beautiful easiness vue engine already class style order make sure code semantic attributes would greatly benefit would aria relationship attributes well nonaria relationship type attributes like attribute table cell lot weird code get proper strings based values nested data realized exact logic already hidden somewhere vuejs think writing accessible code extremely important vue make simple possible perhaps community standard way set predictible ids automatically would make establishing semantic relationships elementscomponents main accessibility challenge dynamic js driven interfaces popular days much simpler able update docs call important attributes would great opportunity push people toward writing accessible code well proposed api look like sure specific issues allowing attribute behave way would preferred solution difficult causes particular performance concerns adding behaviour specific attributes called would review valid html attributes see would make sense would good alternative solution would componentid affix yield allowing every attribute behave class style would indeed expensive think users would implement logic application layer anyway repeating vue done may need feature attributes accept spaceseparated tokens requires vue maintain list attributes think tradeoff worth considering still one problem users asks nt work claim special treatment passed attributes logic might accurate anymore justineo definitely worth considering little bit frustrated confused applying class style difference props attributes little bit fuzzy well posva situation would yield something like passed string prop ideally would array might instead write componentid affix similar really think best way describing ideal api like class style work wonder calling providing utility functions something nt really seem fall within vuey realm things expose stringifyclass somehow kaelwd going ask code considering writing filter since understand hugely likely request would get priority buyin another approach might component level allow option set something like avoid unnecessary overhead directive simple enough write syntax could similar suggested example vs similar could handle nonaria attrs well probably make longer chinese doc', 'date': '2018-09-05T14:38:36Z'}"
"33321",33320,"{'data': 'lag render using cross subarray version reproduction link steps reproduce isolated bug reproduce try hideshow hello world message redraw instant use load data button try hideshow hello world message lag fully dependant cpu velocity seems settimeout inside vue cause lag expected instant redraw actually happening lag redraw depending computer cpu use cross arrays avoid using toggle function completely aware code kind tricky ca nt understand lag follow experts settimeout performance timeline shows massive calls caused array access vmodel familiar code perhaps pr would fix quick workaround maybe correct way case use object since using hash map direct access key rather array see working thank another solution worked oneway binding click event handler', 'date': '2018-09-05T13:42:44Z'}"
"33322",33321,"{'data': 'set attributes root html tag component automatically version reproduction link steps reproduce open reproduction link open devtools element attribute expected element nt attribute actually happening know problem foo component nt declare fields comment foo component element attribute problem variable passed determined probably component nt need field set attribute root html tag component automatically please check documentation intended makes things easier opt option thanks reply think better way default want use inheritance set think explicit means rather current representation imo cases need developing reusable component certainly nt want enumerate possible html attributes manually eg etc cases want transparently output attributes root element defaults large chance would set loop properties output root element component btw also use dynamic object based value justineo large chance would set true seems correct component related native tag almost form like inputbuttonvideoaudioselectformtable need feature components created libraries iview elementui internal teams need set developing components scenarios components developing applicationsapps default behavior little bad probably need set components use btw also use dynamic vbind object based value workaround seems correct needs us add judgement like need use problem solve another problem gt seems correct component related native tag almost form like inputbuttonvideoaudioselectformtable need feature actually lot html global attributes may need example making accessible web app global attributes essential needs handcrafted differently scenario impossible encapsulate annotation inside component libraries workaround seems correct needs us add judgement like vbind foo prop need use problem solve another problem pass component options object filter object checking specific prop declared rendered component see sandbox ok fine trade though seems codesandbox fussy use imo', 'date': '2018-09-05T12:48:44Z'}"
"33323",33322,"{'data': '是否可以考虑添加 data 属性的自动注册功能 problem feature solve 比如 username 自动在 data 中注册 user 对象和属性 name 因为有时候在写代码时会出现类似 abcdname data proposed api look like 添加类似于 angularjs 中那样的在模版中写的表达式 username 在 scope 作用域自动生成相应的对象和属性 intended prefer explicit things also allows vue setup reactivity system', 'date': '2018-09-05T12:04:06Z'}"
"33324",33323,"{'data': 'vue component version reproduction link steps reproduce vue expected vue actually happening vue', 'date': '2018-09-05T11:32:42Z'}"
"33325",33324,"{'data': 'key event wrongly triggered unknown modifieraliaskeycode every key safari version reproduction link steps reproduce please open codepen link safari ios observed bug works fine chrome ubuntu expected two inputs first working expected second showing weird behaviour first textfield handler fire pressing escape typing work expected pressing escape focused clear input second textfield handler unknown key code using unknown key modifier alias typing work first input actually happening typing second input safari ios always trigger handler thus clearing input typing feels wrong imho happen key modifieraliascode recognized triggered key maybe provide warning modifier nt exist except numbers would help would useful consistent behaviour across browsers aka nothing unknownnonexisting modifiers although clear entirely within vue control', 'date': '2018-09-05T08:39:03Z'}"
"33326",33325,"{'data': 'use transition wrapper routeview route change venter dom appear vleave vue vuerouter animated transitionenterclass animated transitionleaveclass route change cause page blink dom vleave nt appear hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新', 'date': '2018-09-05T08:28:54Z'}"
"33327",33326,"{'data': 'strategy merging mixins property incorrect version reproduction link steps reproduce open reproduction link open devtool see error means nt set value created hook component dose nt trigger initialized component right use mix option also contians property previous overridden current property may cased using merge strategy rather use concat concat two proerty see relevant code change root options root options changed let jump component stage see proerty overrode trying print occurs error expected output actually happening send pr time pick api nt exist nt even know function available js mixin api source code inherits constructor api var vuecomponent testa data return null methods saybye consolelog bye saytest consolelog hello test mixins created function thisa b function thissaytest mounted function consolelog thisab function consolelog aaa template var vm new vue el app', 'date': '2018-09-05T04:25:36Z'}"
"33328",33327,"{'data': 'style binding implicitly assign px default unit numeric values certain css properties problem feature solve assigning values css property via style binding like using shorthand syntax actually gon na work need explicitly set via interpolation code becomes verbose combining number occurrences binding becoming ridiculous sure currently elegant solution would also good referenced docs react default behavior add px specified proposed api look like common css properties like vue implicitly assign px value would definitely make code much cleaner code interpreted tbh fan feature css property accept multiple value types even unitless today nt mean stay unitless forever vice versa language evolves maybe someday unitless property take length units accept length units take unitless values property use accept unitless values later changed accept would never know true semantics behind number supported appending default hi justineo see point think little bit exaggerating concern know css implementation relation units values css properties nt changed much versions take width height example ever since birth css nt changed much nt go unitless also certain properties would nt go unitless particularly properties involved like example far css maturity concerned pretty much sure wo nt seeing something like future anyway implemented reactjs much problem vue since definitely improve productivity fan either means keep another list unitless properties keep date added runtime property name could dynamic hi posva think necessarily need list unitless nonunitless properties could list commonly used properties real world scenarios like cases assign properties via javascript unfortunately would nt consistent confusing users hi posva yes right', 'date': '2018-09-05T03:24:44Z'}"
"33329",33328,"{'data': 'scopeslot slot version reproduction link steps reproduce hei props list type array default gt mounted consolelog new vue el app data return data zhangsan lisi wanwu zhaoliu tianqi xiaoba html hello world hello worldsss hello scoperow expected 所有的slot标签都应该被渲染出来 actually happening 作用域插槽和具名插槽有被渲染 用render不存在该问题 actually slot scoped slot name case rendering slotsscoped slots template vue looks scoped slot specified name first slot providing anonymous slot scoped slot slot chance render see renderslotjs caveat seems missing docs think add cc chrisvfritz emmmmm right render fine use render functions actually picking exact slot render working', 'date': '2018-09-04T23:56:30Z'}"
"33330",33329,"{'data': 'add way check component responds event make vmevents public problem feature solve would nice able check component responds given event already listeners declared template object ones registered nt show object stored private object would like suggest either add function checks component responds given event make public call proposed api look like method called could considered returning component responds given event otherwise array strings passed method instead string could return component responds events alternatively interface could simply usecase behind permit optimisation builds larger parameter object given event event actually received component emitted explained parentchild events already think posva interested understanding use case requires emit listen event within component instead example calling method set component local data something ever come across far reason asking use case adding new api purpose fringe use case nt really anything would consider right understand prevalence severity use case new apifeature add linusborg listening event component simply listening event programmatically call instead directly template event nt show events provided template something using ditojsadmin vuejs based framework build admin ui simple pojo schemas since much connecting happening code processing schema listen vents template since one exposed wondering nt oh use case clear nt want component nt listening event building payload event expensive gt since one exposed wondering nt nt exist vue something added lot people asked useful example pass listeners like pass props happens lot functional components hocs otoh one asked asked far nt think adding need api nobody wanted far since much connecting happening code processing schema listen vents template quick search nt bring use codebase github code search ignoring special chars helping care link one mostly used outside schema events get installed framework uses internally current workaround', 'date': '2018-09-04T21:44:00Z'}"
"33331",33330,"{'data': 'slot slotscope hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue 向导 来创建新 version reproduction link steps reproduce hello world hello worldssshello scoperow', 'date': '2018-09-04T20:01:14Z'}"
"33332",33331,"{'data': 'allow mutating props problem feature solve currently building sandbox component allows playing live demo vue component problem encountered common error know security rule vuejs used yeah bad practice thing functionality sandbox comp needs access properties update reactivity process must update values child component sandbox parent component tag precise even error reactivity still values well updated searched use workaround stackoverflow say need use computed propeties data nt use prop values directly reactivity present child component updated ask help somebody knows update props keeping reactivity system great vuejs devs add option flag disable error maybe thanks advance proposed api look like maybe thing like simple flag option disable avoid mutating props error note needed put source code sandbox component never mutate props silencing error message definitely something want allow parent component renders lose modification may look like works right break soon parent component renders suppress warnings yes know avoid said component sandbox case needs access update props nt care parent rerendering append developer livetesting component since parent loaded important thank answer maybe better idea render sandbox left editable fields must update visible child component values child test component right needs updated editing sandbox fields fields generated sandbox parsing child component props mutating props antipattern going add warning silence ignore works specific scenario though want ask questions please use forum discord server stackoverflow ok find way thank time cheers beer', 'date': '2018-09-04T15:23:31Z'}"
"33333",33332,"{'data': 'onsen ui navigator usage vue js cli project issues hi recently set project using vue cli command trying get onsen ui navigator work inside files file comes project default trying get navigator work another page eg tried linking another page function working new page loading however animation code button links another page vue js script bottom technically links page nt create pushpull affect hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-04T14:32:16Z'}"
"33334",33333,"{'data': 'vue close page function function cause page close vue help removes contents page remains open hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-04T13:06:11Z'}"
"33335",33334,"{'data': 'recalculated values dependent computed properties changed calculated properties dependent recalculated problem feature solve sorry following content translated accurately use chinese example proposed api look like duplicate fyi shipped enhancement caused regression included', 'date': '2018-09-04T10:09:46Z'}"
"33336",33335,"{'data': 'vhtml 希望能支持解析组件 problem feature solve 一些动态的html字符串中 需要用到一些封装好的组件 proposed api look like vhtml clearly stated doc find trying compose templates using vhtml try rethink solution using components instead plus breaking change considered moment', 'date': '2018-09-04T04:41:01Z'}"
"33337",33336,"{'data': 'props object change type inside child component version reproduction link steps reproduce normally nothing look htmland js file inside repro link expected client object inside data value details object received prop inside child component actually happening client function object details using vue js inside laravel app expert vuejs beginner every additional advices apreciate object constructor function thanks reply javoski replace simple object inside component empty object received prop still well filled take look screenshot please hook called prop changed use computed property thank help javoski used watcher prop value changes value update', 'date': '2018-09-04T01:02:13Z'}"
"33338",33337,"{'data': 'access mycompoennt hey guys try access instance inside component titlemycomponent tried something like nt work undefined somebody tip thanks lot hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-09-03T14:34:15Z'}"
"33339",33338,"{'data': 'dependencies found actually dependencies version steps reproduce actually git pull branch run yarn serve expected expected run well try yarn serve vueproject actually happening dependencies found viewswarehousedeliverydeliverydetailvue srcrouterwarehousedeliveryindexjs viewswarehousedeliverydeliverymainvue srcrouterwarehousedeliveryindexjs viewswarehousedeliverydeliveryparentvue srcrouterwarehousedeliveryindexjs viewswarehouselabellabeldetailvue srcrouterlabelindexjs viewswarehouselabellabelmainvue srcrouterlabelindexjs viewswarehouselabellabelparentvue srcrouterlabelindexjs viewswarehouseorderorderdetailvue srcrouterwarehouseorderindexjs viewswarehouseorderordermainvue srcrouterwarehouseorderindexjs viewswarehouseorderorderparentvue srcrouterwarehouseorderindexjs install run npm install save viewswarehousedeliverydeliverydetailvue viewswarehousedeliverydeliverymainvue viewswarehousedeliverydeliveryparentvue viewswarehouselabellabeldetailvue viewswarehouselabellabelmainvue viewswarehouselabellabelparentvue viewswarehouseorderorderdetailvue viewswarehouseorderordermainvue viewswarehouseorderorderparentvue error says dependencies found actually dependencies router vue project dont clue think make issue vuecli sorry erwinwahyura looks like project configured know check webpack config real dependencies correctly installed', 'date': '2018-09-03T07:08:25Z'}"
"33340",33339,"{'data': 'vuejsorg home page contains broken img version reproduction link steps reproduce open go platinum sponsors snapshot expected available image link actually happening broken image image src returns found message please open corresponding repo vuejsorg repo', 'date': '2018-09-02T20:33:17Z'}"
"33341",33340,"{'data': 'option selected custom select uses domprops version reproduction link steps reproduce create custom component docs suggested export default render function h const self return h select domprops value selfvalue self slotsdefault however option selected expected option must selected actually happening thing selected removed works fine open issue relates custom components support bindings need define prop event handler missing reproduction ie following suggestions doc hi justineo added event handler sandbox nt work check sandbox also need declare prop custom component nt work either working option selected using google chrome btw chrome open private tab works thank', 'date': '2018-09-01T04:59:33Z'}"
"33342",33341,"{'data': 'memory leak using async components version reproduction link steps reproduce load reproducer take memory heap snapshot searching heap find vuecomponents app container child async child click destroy button toggles vif remove child component thus asyncchild component well point page updated expected take another memory heap snapshot search heap vuecomponent see vuecomponents still exist expected destroying child component component asynchronously loaded child component destroyed memory freed actually happening vue holding context reference preventing components garbage collected happening due resolveasynccomponent logic located forcerender function line calling forceupdate contexts array cleared free references components able garbage collected later point time submit pr fix issue well thanks pr submitted hi linusborg see added labels issue anything else need kick review process referenced pull request thanks', 'date': '2018-08-31T15:32:40Z'}"
"33343",33342,"{'data': 'docs published conflicts hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-08-31T14:29:46Z'}"
"33344",33343,"{'data': 'set templaterendererpublicpath fly vueserverrender problem feature solve case need set publicpath base runtime example need set publicpath base requesturl edit source code support wonder implemented officially btw webpack support set publicpath fly ref proposed api look like js const bundlerenderer createbundlerenderer serverbundle template clientmanifest runinnewcontext false request handler moduleexports async request response gt plz take look', 'date': '2018-08-31T12:13:18Z'}"
"33345",33344,"{'data': 'transitiongroups different tags vif velse read property vnode null version reproduction link steps reproduce open console click button expected fact nt know would expect see error thinking maybe something wrong actually happening read property vnode null appears console note dug issue use vshows instead vif else works transitiongroup tag works even vifelse however practical case components transitiongroup children works also thought nesting transitiongroups divs apply vifelse get error added code codepen add attribute well remove error error nt appear indeed posva thank workaround', 'date': '2018-08-31T11:52:29Z'}"
"33346",33345,"{'data': 'vue js working safari ios using vue js mozilla chrome browser work perfectly safari browser working perfectly environment vue js mobile iphone system version ios mobile browser safari showing code title datainfostitle desc datainfosdesc complete code business card datainfosrealname datainfosenglishname datainfoscompanyname datainfospositionname datainfoizonenum datainfosphone datainfoswxaccount datainfosfbaccount datainfosmail datainfosmdrtdtyear sdesc datainfosdesc experience itemscompany itemdtentrytime time itemdtquittime time itemsposition honor itemdtyear itemshonortitle ps introduced babelpolyfill still nt work anyone met problem could help explain little thanks hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank', 'date': '2018-08-31T10:07:35Z'}"
"33347",33346,"{'data': 'vue treat every element attribute named like v something directive version reproduction link steps reproduce run fiddle look console expected registered directive named vfake vue ignore attribute element actually happening vue treat every v something attribute directive regardless registered globally locally trying compute value v beginning attribute effect throws typeerror nt find property named like string passed attribute intentional information behavior vue docs however opinion ignore attributes imho think docs clear enough lookup good behavior makes debugging easier want add property want vue treat directive using data attributes instead maybe would make sense resolve directive show error like value posva guess could work', 'date': '2018-08-30T15:04:13Z'}"
"33348",33347,"{'data': 'input work dynamic type radio checkbox version reproduction link steps reproduce generate input field dynamic type open project open console expected working radio checkboxes actually happening js error multiple definitions property allowed strict mode domprops value evalue value tmodel duplicate', 'date': '2018-08-30T13:18:11Z'}"
"33349",33348,"{'data': 'drop special logic enumeratedattrs version reproduction link steps reproduce bind unsupported value attribute expected rendering element actually happening rendered reference vue html vue currently treat enumerated attributes values booleanlike enumerated attributes made behave like boolean attribtues actually attributes may two states extensible values example html corresponding idl attribute resolves instead present latest draft also defined possible values already accepted chrome remove logic otherwise developers ca nt leverage new features drop thing treat like ordinary attributes influence following cases sure regard breaking never documented usage binding resolved came open issue contenteditable couple states contenteditable reference', 'date': '2018-08-30T09:40:53Z'}"
"33350",33349,"{'data': 'dev build console error using index key value vfor transitions problem feature solve currently obvious way debug error including index value vbind key vfor using transitions causes erratic unexpected behavior transitions would suspect side effects untested feature would alert developer used index value place cause errors transitions example error example illustrate difficult determine vfor combined transitiongroup fails example uses vfor key one works fine nt include index key value uses index key ie vbind key index uses concatenated version vbind key item index note behavior thought bug lack documentation behavior console log entry would solved confusion instantly development instead hours debugging reporting proposed api look like check see index value used anywhere key check transition used display console error least warning proposal dev builds additionsexpansions api needed production builds possible sometimes may want use index key really think open pr docs add note transitiongroup said issue would never want use index key transition causes error demonstrated something wrong example showing error yeah right nt think makes sense use index scenario transitiongroup sure easy add warning though get point free time least look code able add kind thing perhaps dev object tracks features used render ie transition used index found ie template render would tracked well conflicts could found features used know easy say kind thing whole thing actually build high level dev theorize', 'date': '2018-08-29T17:38:13Z'}"
"33351",33350,"{'data': 'antipattern computed property may cause performance issue version reproduction link steps reproduce open code sandbox link click button use computed property filteredentities find cost lot time check call tree found code calls getter entities many times call function code leading thisentities length n getter called n times every time getter called call dependarray value thisentities array length n since dependarray iterate value depend function called n times totally found code reviewing someone pr original code use make another n times call getter easy avoid problem using array methods like call getter even cache value entities solve although easy avoid pattern still think dangerous original code obvious antipattern show performance issue array small may cause serious performance issue array large production environment expected read related source code think expected result observer system read chapter guide ensure mention sure whether need add todo computed property chapter actually happening described', 'date': '2018-08-29T08:42:22Z'}"
"33352",33351,"{'data': 'possible memory leak list dependencies grows computed getter version reproduction link steps reproduce fiddle click results window multiple times notice modified vuejs follows expected frontend console logs update twice init one data update backend dependencyarray keeps size actually happening frontend console logs update every click backend dependencyarray grows fiddle notice frontend effects sure provide modified vuejs tested using latest version vue count deps goes back array emptied memory leak oh ok sorry misinterpreted deps array purpose', 'date': '2018-08-29T08:18:49Z'}"
"33353",33352,"{'data': 'improve prop validator api problem feature solve allows write validation logic depending multiple props allows provide custom validation messages proposed api look like example function returned stop rest code executing fan adding prop argument think return string validator function let vue treat error counter proposal', 'date': '2018-08-29T04:25:46Z'}"
"33354",33353,"{'data': 'independent props validator problem feature solve reduce packet size every component need reused validator want validate params nt need introduce another validator proposed api look like javascript const vue require vue defined customer validator vuevalidator function schema input run validator vuevalidate name type string age type number removing feature breaking change wo nt reduce much packet size', 'date': '2018-08-29T01:53:47Z'}"
"33355",33354,"{'data': 'vmodel behaves inconsistently comparison docs version reproduction link steps reproduce first docs claim using identical using behavior desktop chrome android behavior different using androidchrome model gets updated pressing space enter backspace unfocusing field maybe cases model update middle typing word however using model gets updated supposed seems like nt binding event android correct behavior achieved adding regardless whether used applies elements expected behavior expected platforms model update live every keypress actually happening chrome android model nt updated every keypress reproduced example inputs shown docs problem example creating list filtered live user input wondering whether bug documentation issue feel like bug since code different behavior different platforms talking components indeed explained different input vmodel please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug posva documentation talk per report input model immediately updated android typing plenty issues reported vue regarding specific use case already either documentation needs updated reflect vue internally handle better automatically picks correct way update element based input type nt particularly sound correct search quite bit also agree least docs could updated unexpected inconsistency example text input docs reproduction link behaves differently androidchrome compared desktopchrome record angular issue regardless composition mode see docs say languages require ime chinese japanese korean etc notice vmodel get updated ime composition want cater updates well use input event instead also happening english languages nt require ime ime autocompleteword suggestions disabling gives desired behaviour made pr add documentation', 'date': '2018-08-28T13:03:50Z'}"
"33356",33355,"{'data': 'event completely removed eventbus version reproduction link steps reproduce one listener event evnets method delete event listener event events listens one listener ca nt remove event javascript one event listener var bus require vue bus eat func consolelog busevents eat func bus eat consolelog busevents eat func two event listener var bus require vue bus eat func bus sleep consolelog busevents log eat func sleep bus eat consolelog busevents log eat null sleep expected listener removed actually happening using method corresponding listener remove key events object events firing correctly keys removed object normal', 'date': '2018-08-28T12:14:27Z'}"
"33357",33356,"{'data': 'property xxx exist type combinedvueinstance version reproduction link steps reproduce use vuecli init ts helloworld project code like js import vue vue export default vueextend name helloworld props msg string data return wtf thisinitdata throw ts error property initdata exist type combinedvueinstance vue readonly lt msg string gt gt methods initdata return expected fix actually happening property initdata exist type combinedvueinstance seems intentional guess ca nt accidentally access computed properties via method edit nt understand bad would happen access computed properties via method nt exist yet uh nt use property use function exist may turn instead native vue still friendly typescript maybe proficient vue anyway thanks helping yeah know bit silly guess might done vue typescript way access methods function since appears typing issue runtime issue ugly workaround available cast type additionally omit store reference method executable outside current scope eg pass child via prop vue better type declaration support typescript seems broken problem guess remove type option function make function type use case op provides looks totally valid also faced another use case need comprehensive type function writing function similar case type beforecreate seems also removed probably breaks existing apps type checking need explicitly declare function return type since longer infers return type due restriction sure much change affects existing apps', 'date': '2018-08-28T10:18:12Z'}"
"33358",33357,"{'data': '监听事件不起作用了 version reproduction link steps reproduce 我在组件内监听事件 第二次进入页面的时候 事件监听不会生效 在控制台输出 eventbus events字段 后面显示的是空对象 expected 希望解决问题 actually happening hi please make sure follow issue reporting guidelines opening issue provide valid repro use thanks', 'date': '2018-08-28T09:21:50Z'}"
"33359",33358,"{'data': 'vuecomponent doesnt except argument type version reproduction link steps reproduce click repro link open testts see type errors uncomment vue type augmentation see errors disappear expected pass component actually happening type error adding following overload fix type union type use type means function return vue constructor component options object think use concrete type return type function loads components via webpacks requirecontext also esmodule type async comps hints component also vuecomponent overload foreach member type component union think problem typescript able check correctly another indicator ts problem following works well valid component ofc point ts somehow finds correct overload ts type component typeof vue componentoptions functionalcomponentoptions const first const firstcomponent component first vuecomponent first first ok vuecomponent firstcomponent firstcomponent ok const second functional true const secondcomponent component second vuecomponent second second ok vuecomponent secondcomponent secondcomponent ok const third vueextend const thirdcomponent component third vuecomponent thrid third ok vuecomponent thirdcomponent thirdcomponent ok declare function getcomponent component const final component getcomponent vuecomponent final final type error typescript problem ts seems like doesnt allow multiple overloads match final case requiring plain typescript example demonstrating problem see use case sure union type sometimes passes overload replace fallback overload method type', 'date': '2018-08-28T00:53:10Z'}"
"33360",33359,"{'data': 'transitiongroup animates last element using index key version reproduction link steps reproduce create vue app items displaying list add transition group vfor format like vfor item index items use index vfor vbind key like vbind key index add remove items data expected item removedadded transition applied actually happening last item list gets transition applied may old bug hunting solution problem ran may intended behavior using index key least warning message dev version vuejs explain perhaps searchable text documentation something like last item list animatingtransition applied solution found without thinking bug vuejs expected key controls vue reuses elementscomponents therefore crucial transitiongroup read guide respect time please understand nt put bug report without looking answer first please respectful time nt dismissive found new error well search see example end search documentation searched documentation entirely either bug undocumented documented reasonable place search index transition guide looked every single instance could find read guide know unreasonable usually ask seriously looked everything even searching online found nothing topic provide link documentation search results index shows times transitions guide mention effects index transitions transitions section index shows times list rendering guide mention transitions index shows times api docs none reference context transitiongroup transitions updated example new error found found one example cookbook using index key fails worse example instead last item animating entire block fades inout example using index key default behaviour propositions notes add docs open pull request proposal vuejsorg repository maybe transitiongroup page right place last example keys changing vue replacing every single li remember use forum discord server get quick feedback questions megacromulent vue perspective used identify unique items list let give example assume rendered list array using keyed items indexes remove list telling vue item item item removed transition occurs elementcomponent got addedremovedshowedhide view last item transitioned justineo thanks explanation certainly clears errors happening results look like errors documented anywhere could find easily found posva open pull request proposal vuejsorg repository nt even consider idea never done pr hope nt make mess thanks guys edit error vuejsorg cookbook also experiencing issue switched different keys works megacromulent also never done pr would interested collaborating want second pair eyes hey thanks offer thing would put documentation nt js skills contribute library like vuejs thanks offer though wed oct david golden notifications githubcom wrote also experiencing issue switched different keys works megacromulent also never done pr would interested collaborating want second pair eyes receiving mentioned reply email directly view github mute thread getting issue well creating dynamic list every new item added blank multiple duplicates tried using item key get warning use nonprimitives vmove transition works creation deletion items', 'date': '2018-08-27T21:55:51Z'}"
"33361",33360,"{'data': 'pass component instance async import problem feature solve context multitenant site import templates based site site codes example componentssites sitecode topnavhomesearchvue webpackchunkname homesearch export default stuff components homesearch configsitecode complex scenario reactivity would awesome proposed api look like since config ends vuex application boot would nice instead componentssites vmsitecode topnavhomesearchvue webpackchunkname homesearch export default stuff computed mapstate sitecode state gt stateconfigsitecode use mapgetters components homesearch gt import components vm arg would third one backwards compatibility end feature request would look like could define function classically bind component context use like know scenario could import vuex store like general vm props data could used import function really nt preference implementation though arrow function would cleanest maybe splat operators could work idk actually already computed property use attribute awesome posva please update code add return line intentional well remove arrow fn get errors found gt without returns object fine though works without arrow function declare property method computed property', 'date': '2018-08-27T10:09:39Z'}"
"33362",33361,"{'data': 'insert method get refparentnode patchjs nodeopsparentnode ref version reproduction link steps reproduce note reproduction link 结果发现使用 vif expected ref actually happening', 'date': '2018-08-26T14:36:41Z'}"
